<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bccb969e36f59518ac840188c67675b521f7b76</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.HtmlTextWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8370435281b497df3407c928cd01dd7c125279a3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f39362e1ec8d67b6315bbcaee2b2c3a1f7fe93e3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Writes markup characters and text to an ASP.NET server control output stream.</source>
          <target state="translated">Scrive i caratteri di markup e del testo in un flusso di output controllo server ASP.NET.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</source>
          <target state="translated">Questa classe fornisce le funzionalità di formattazione utilizzate dai controlli server ASP.NET per il rendering di markup ai client.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HtmlTextWriter class is used to render HTML 4.0 to desktop browsers.</source>
          <target state="translated">La classe HtmlTextWriter viene utilizzata per eseguire il rendering HTML 4.0 nei browser desktop.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HtmlTextWriter is also the base class for all markup writers in the &lt;xref:System.Web.UI&gt; namespace, including the &lt;xref:System.Web.UI.ChtmlTextWriter&gt;, &lt;xref:System.Web.UI.Html32TextWriter&gt;, and &lt;xref:System.Web.UI.XhtmlTextWriter&gt; classes.</source>
          <target state="translated">L'oggetto HtmlTextWriter è anche la classe base per tutti i writer di markup nel &lt;xref:System.Web.UI&gt;dello spazio dei nomi, inclusi il &lt;xref:System.Web.UI.ChtmlTextWriter&gt;, &lt;xref:System.Web.UI.Html32TextWriter&gt;, e &lt;xref:System.Web.UI.XhtmlTextWriter&gt;classi.&lt;/xref:System.Web.UI.XhtmlTextWriter&gt; &lt;/xref:System.Web.UI.Html32TextWriter&gt; &lt;/xref:System.Web.UI.ChtmlTextWriter&gt; &lt;/xref:System.Web.UI&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>These classes are used to write the elements, attributes, and style and layout information for different types of markup.</source>
          <target state="translated">Queste classi vengono utilizzate per scrivere elementi, attributi e le informazioni di stile e layout per diversi tipi di markup.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</source>
          <target state="translated">Inoltre, queste classi vengono utilizzate dalle classi adapter pagine e controlli associati a ogni linguaggio di markup.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</source>
          <target state="translated">Nella maggior parte dei casi, ASP.NET utilizza automaticamente il writer appropriato per il dispositivo richiedente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the <ph id="ph1">`controlAdapters`</ph> section of the application .browser file.</source>
          <target state="translated">Tuttavia, se si crea un writer di testo personalizzato o se si desidera specificare un determinato writer per eseguire il rendering di una pagina per un dispositivo specifico, è necessario associare il writer alla pagina di <ph id="ph1">`controlAdapters`</ph> sezione del file con estensione browser dell'applicazione.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that uses a default tab string.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe che utilizza una stringa di scheda predefinita.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HtmlTextWriter overload of the HtmlTextWriter constructor uses the &lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt; constant when indentation of a line is necessary.</source>
          <target state="translated">Il metodo di overload HtmlTextWriter l'oggetto HtmlTextWriter costruttore utilizza il &lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;costante quando è necessario il rientro di una riga.&lt;/xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>It calls the &lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt; overload to initialize the new instance.</source>
          <target state="translated">Chiama il &lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;eseguire l'overload per inizializzare la nuova istanza.&lt;/xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; instance that renders the markup content.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter&gt;istanza che esegue il rendering del contenuto del tag.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified tab string character.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe con un carattere di stringa della scheda specificata.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HtmlTextWriter overload of the HtmlTextWriter constructor uses <ph id="ph1">`tabString`</ph> when indentation of a line is necessary.</source>
          <target state="translated">Il metodo di overload HtmlTextWriter l'oggetto HtmlTextWriter costruttore utilizza <ph id="ph1">`tabString`</ph> quando il rientro di una riga è necessario.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>It calls the &lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=fullName&gt; base constructor to initialize the new instance.</source>
          <target state="translated">Chiama il &lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=fullName&gt;costruttore per inizializzare la nuova istanza di base.&lt;/xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; that renders the markup content.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter&gt;che esegue il rendering del contenuto del tag.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The string to use to render a line indentation.</source>
          <target state="translated">Stringa da utilizzare per il rendering di un rientro della riga.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object creates with a subsequent call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method.</source>
          <target state="translated">Aggiunge l'attributo di markup specificato e un valore per il tag di apertura dell'elemento che la <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto creato con una chiamata successiva al &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddAttribute overload of the AddAttribute method if the attribute is not one of the &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt; values, or if the attribute is not known until run time.</source>
          <target state="translated">Utilizzare l'overload AddAttribute del metodo AddAttribute se l'attributo non è incluso il &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;valori, o se l'attributo non è noto in fase di esecuzione.&lt;/xref:System.Web.UI.HtmlTextWriterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an instance of any given markup element, the &lt;xref:System.Web.UI.HtmlTextWriter&gt; class maintains a list of attributes for that element.</source>
          <target state="translated">Per un'istanza di qualsiasi elemento di markup dato, la &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe gestisce un elenco di attributi per tale elemento.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method is called, any attributes added by the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo viene chiamato, tutti gli attributi aggiunti dal &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;metodo vengono sottoposti a rendering per il tag di apertura dell'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list of attributes is then cleared from the &lt;xref:System.Web.UI.HtmlTextWriter&gt; object.</source>
          <target state="translated">L'elenco di attributi viene quindi cancellato il &lt;xref:System.Web.UI.HtmlTextWriter&gt;oggetto.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The coding pattern for rendering markup elements is as follows:      -   Use the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; method to add any attributes to the element.</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:-utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;metodo per aggiungere attributi all'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">-Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Stringa contenente il nome dell'attributo da aggiungere.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object creates with a subsequent call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method.</source>
          <target state="translated">Aggiunge l'attributo di markup e il valore dell'attributo al tag di apertura dell'elemento che la <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto creato con una chiamata successiva al &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddAttribute overload of the AddAttribute method to render a standard markup attribute.</source>
          <target state="translated">Utilizzare l'overload AddAttribute del metodo AddAttribute per eseguire il rendering di un attributo di markup standard.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an instance of any given markup element, the &lt;xref:System.Web.UI.HtmlTextWriter&gt; class maintains a list of attributes for that element.</source>
          <target state="translated">Per un'istanza di qualsiasi elemento di markup dato, la &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe gestisce un elenco di attributi per tale elemento.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method is called, any attributes that are added by the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo viene chiamato, tutti gli attributi vengono aggiunti per il &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;metodo vengono sottoposti a rendering per il tag di apertura dell'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list of attributes is then cleared from the &lt;xref:System.Web.UI.HtmlTextWriter&gt;.</source>
          <target state="translated">L'elenco di attributi viene quindi cancellato da &lt;xref:System.Web.UI.HtmlTextWriter&gt;.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The coding pattern for rendering markup elements is as follows:      -   Use the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; method to add any attributes to the element.</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:-utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;metodo per aggiungere attributi all'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">-Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the markup attribute to add to the output stream.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che rappresenta l'attributo di markup da aggiungere al flusso di output.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object creates with a subsequent call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method, with optional encoding.</source>
          <target state="translated">Aggiunge l'attributo di markup specificato e un valore per il tag di apertura dell'elemento che la <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto creato con una chiamata successiva al &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;(metodo), con codifica aggiuntiva.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddAttribute overload of the AddAttribute method if the attribute is not one of the &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt; values, or if the attribute is not known until run time and encoding is needed.</source>
          <target state="translated">Utilizzare l'overload AddAttribute del metodo AddAttribute se l'attributo non è incluso il &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;valori o se l'attributo non è noto fino alla fase di esecuzione e la codifica è necessaria.&lt;/xref:System.Web.UI.HtmlTextWriterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an instance of any given markup element, the &lt;xref:System.Web.UI.HtmlTextWriter&gt; class maintains a list of attributes for that element.</source>
          <target state="translated">Per un'istanza di qualsiasi elemento di markup dato, la &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe gestisce un elenco di attributi per tale elemento.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method is called, any attributes added by the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo viene chiamato, tutti gli attributi aggiunti dal &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;metodo vengono sottoposti a rendering per il tag di apertura dell'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list of attributes is then cleared from the &lt;xref:System.Web.UI.HtmlTextWriter&gt; object.</source>
          <target state="translated">L'elenco di attributi viene quindi cancellato il &lt;xref:System.Web.UI.HtmlTextWriter&gt;oggetto.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddAttribute method with <ph id="ph1">`fEncode`</ph> set to <ph id="ph2">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">Utilizzare il metodo AddAttribute con <ph id="ph1">`fEncode`</ph> impostato su <ph id="ph2">`true`</ph>, se l'attributo può contenere un segno di virgolette ("), un segno di minore (&lt;), or an ampersand (&amp;). or="" an="" ampersand=""&gt;&lt;/), or an ampersand (&amp;).&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">La chiamata al metodo verrà codificare l'attributo per soddisfare i requisiti del dispositivo richiedente.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">È possibile impostare <ph id="ph1">`fEncode`</ph> a <ph id="ph2">`false`</ph>, se si è certi che nessuno di tali caratteri verranno generati o se si è certi che l'attributo è già codificato.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The coding pattern for rendering markup elements is as follows:      -   Use the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; method to add any attributes to the element.</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:-utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;metodo per aggiungere attributi all'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">-Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Stringa contenente il nome dell'attributo da aggiungere.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to encode the attribute and its value; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>per codificare l'attributo e il valore. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Adds the specified markup attribute and value, along with an <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value, to the opening tag of the element that the <bpt id="p2">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object creates with a subsequent call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method.</source>
          <target state="translated">Aggiunge l'attributo di markup specificati e il valore, insieme a un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> il valore di enumerazione, il tag di apertura dell'elemento che la <bpt id="p2">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> oggetto creato con una chiamata successiva al &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddAttribute overload of the AddAttribute method only when inheriting from the &lt;xref:System.Web.UI.HtmlTextWriter&gt; class.</source>
          <target state="translated">Utilizzare l'overload di metodo AddAttribute del metodo AddAttribute solo quando si eredita dalla &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`key`</ph> pairs for attributes.</source>
          <target state="translated">Consente di creare nuovi <ph id="ph1">`name`</ph> e <ph id="ph2">`key`</ph> coppie per gli attributi.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Stringa contenente il nome dell'attributo da aggiungere.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the attribute.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che rappresenta l'attributo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object creates with a subsequent call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method, with optional encoding.</source>
          <target state="translated">Aggiunge l'attributo di markup e il valore dell'attributo al tag di apertura dell'elemento che la <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto creato con una chiamata successiva al &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;(metodo), con codifica aggiuntiva.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddAttribute overload of the AddAttribute method to render a standard markup attribute, with optional encoding.</source>
          <target state="translated">Utilizzare l'overload AddAttribute del metodo AddAttribute per eseguire il rendering di un attributo di markup standard, con codifica aggiuntiva.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an instance of any given markup element, the &lt;xref:System.Web.UI.HtmlTextWriter&gt; class maintains a list of attributes for that element.</source>
          <target state="translated">Per un'istanza di qualsiasi elemento di markup dato, la &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe gestisce un elenco di attributi per tale elemento.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method is called, any attributes added by the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo viene chiamato, tutti gli attributi aggiunti dal &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;vengono sottoposti a rendering per il tag di apertura dell'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list of attributes is then cleared from the &lt;xref:System.Web.UI.HtmlTextWriter&gt; object.</source>
          <target state="translated">L'elenco di attributi viene quindi cancellato il &lt;xref:System.Web.UI.HtmlTextWriter&gt;oggetto.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddAttribute method with <ph id="ph1">`fEncode`</ph> set to <ph id="ph2">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">Utilizzare il metodo AddAttribute con <ph id="ph1">`fEncode`</ph> impostato su <ph id="ph2">`true`</ph>, se l'attributo può contenere un segno di virgolette ("), un segno di minore (&lt;), or an ampersand (&amp;). or="" an="" ampersand=""&gt;&lt;/), or an ampersand (&amp;).&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">La chiamata al metodo verrà codificare l'attributo per soddisfare i requisiti del dispositivo richiedente.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">È possibile impostare <ph id="ph1">`fEncode`</ph> a <ph id="ph2">`false`</ph>, se si è certi che nessuno di tali caratteri verranno generati o se si è certi che l'attributo è già codificato.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The coding pattern for rendering markup elements is as follows:      -   Use the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; method to add any attributes to the element.</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:-utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;metodo per aggiungere attributi all'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">-Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the markup attribute to add to the output stream.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che rappresenta l'attributo di markup da aggiungere al flusso di output.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to encode the attribute and its value; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>per codificare l'attributo e il valore. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method.</source>
          <target state="translated">Aggiunge l'attributo di stile markup specificato e il valore dell'attributo al tag di apertura creato da una chiamata successiva al &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddStyleAttribute overload of the AddStyleAttribute method when the style is not a member of the &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt; enumeration or is not known until run time.</source>
          <target state="translated">Utilizzare l'overload AddStyleAttribute del metodo AddStyleAttribute quando lo stile non è membro il &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;enumerazione o non è noto in fase di esecuzione.&lt;/xref:System.Web.UI.HtmlTextWriterStyle&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter&gt; class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated">La &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe gestisce un elenco di stili per gli elementi di markup viene eseguito il rendering.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method is called, any styles that are added by the &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt; method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo viene chiamato, tutti gli stili che vengono aggiunti per il &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;metodo vengono sottoposti a rendering per il tag di apertura dell'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list of styles is then cleared.</source>
          <target state="translated">Viene quindi cancellato l'elenco degli stili.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The coding pattern for rendering markup elements is as follows:      -   Use the &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt; method to add any style attributes to the element.</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:-utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;metodo per aggiungere gli stili di attributi all'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">-Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A string that contains the style attribute to add.</source>
          <target state="translated">Stringa che contiene l'attributo di stile da aggiungere.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Stringa che contiene il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Adds the markup style attribute associated with the specified <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value and the attribute value to the opening markup tag created by a subsequent call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method.</source>
          <target state="translated">Aggiunge l'attributo di stile markup associato all'oggetto <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valore e il valore dell'attributo al tag di apertura creato da una chiamata successiva al &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddStyleAttribute overload of the AddStyleAttribute method when the style is a member of the &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt; enumeration and is known before run time.</source>
          <target state="translated">Utilizzare l'overload AddStyleAttribute del metodo AddStyleAttribute quando lo stile è membro il &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;enumerazione ed è noto prima della fase di esecuzione.&lt;/xref:System.Web.UI.HtmlTextWriterStyle&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter&gt; class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated">La &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe gestisce un elenco di stili per gli elementi di markup viene eseguito il rendering.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method is called, any styles added by the &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt; method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo viene chiamato, qualsiasi stile aggiunto tramite il &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;metodo vengono sottoposti a rendering per il tag di apertura dell'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list of styles is then cleared.</source>
          <target state="translated">Viene quindi cancellato l'elenco degli stili.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The coding pattern for rendering markup elements is as follows:      -   Use the &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt; method to add any style attributes to the element.</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:-utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;metodo per aggiungere gli stili di attributi all'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">-Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Use the &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt; method.</source>
          <target state="translated">-Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the style attribute to add to the output stream.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che rappresenta l'attributo di stile da aggiungere al flusso di output.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Stringa che contiene il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Adds the specified markup style attribute and the attribute value, along with an <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value, to the opening markup tag created by a subsequent call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method.</source>
          <target state="translated">Aggiunge l'attributo di stile markup specificato e il valore dell'attributo, insieme a un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> il valore di enumerazione, per il tag di apertura creato da una chiamata successiva al &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AddStyleAttribute overload of the AddStyleAttribute method only when inheriting from the &lt;xref:System.Web.UI.HtmlTextWriter&gt; class.</source>
          <target state="translated">Utilizzare l'overload di AddStyleAttribute del metodo AddStyleAttribute solo quando si eredita dalla &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`value`</ph> pairs for &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt; attributes.</source>
          <target state="translated">Consente di creare nuovi <ph id="ph1">`name`</ph> e <ph id="ph2">`value`</ph> coppie per &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;attributi.&lt;/xref:System.Web.UI.HtmlTextWriterStyle&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A string that contains the style attribute to be added.</source>
          <target state="translated">Stringa che contiene l'attributo di stile da aggiungere.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Stringa che contiene il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the style attribute to add.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che rappresenta l'attributo di stile da aggiungere.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Notifies an <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, or an object of a derived class, that a control is about to be rendered.</source>
          <target state="translated">Notifica a un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oppure un oggetto di una classe derivata, che si sta per essere eseguito il rendering di un controllo.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter&gt; class implementation of the BeginRender method has no functionality.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.HtmlTextWriter&gt;implementazione della classe del metodo BeginRender non presenta alcuna funzionalità.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must override the BeginRender method in a class derived from &lt;xref:System.Web.UI.HtmlTextWriter&gt; to provide your own rendering functionality.</source>
          <target state="translated">È necessario eseguire l'override del metodo BeginRender in una classe derivata da &lt;xref:System.Web.UI.HtmlTextWriter&gt;per fornire la funzionalità di rendering.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in a markup language that might require <ph id="ph1">`&lt;p&gt;`</ph> elements to be rendered immediately ahead of a control, but where the need for the <ph id="ph2">`&lt;p&gt;`</ph> element is determined earlier, you could use the BeginRender override.</source>
          <target state="translated">Ad esempio, in un linguaggio di markup che potrebbe richiedere <ph id="ph1">`&lt;p&gt;`</ph> elementi da sottoporre a rendering immediatamente prima di un controllo, ma nei quali la necessità per il <ph id="ph2">`&lt;p&gt;`</ph> elemento viene determinato in precedenza, è possibile utilizzare la sostituzione BeginRender.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Closes the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and releases any system resources associated with it.</source>
          <target state="translated">Chiude il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dell'oggetto e rilascia le risorse di sistema è associate.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the Close method calls the &lt;xref:System.IO.TextWriter.Close%2A?displayProperty=fullName&gt; base method.</source>
          <target state="translated">Questa implementazione delle chiamate del metodo Close il &lt;xref:System.IO.TextWriter.Close%2A?displayProperty=fullName&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Close%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Following a call to the Close method, any operations on the &lt;xref:System.Web.UI.HtmlTextWriter&gt; object might throw exceptions because all its resources have been released.</source>
          <target state="translated">Dopo una chiamata al metodo di chiusura, tutte le operazioni di &lt;xref:System.Web.UI.HtmlTextWriter&gt;oggetto può generare eccezioni perché tutte le risorse sono state rilasciate.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Represents a single tab character.</source>
          <target state="translated">Rappresenta un carattere di tabulazione singolo.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The single tab is represented by the ASCII 9 character.</source>
          <target state="translated">Singola scheda è rappresentata dal carattere ASCII 9.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Represents the quotation mark (") character.</source>
          <target state="translated">Rappresenta il carattere virgoletta (").</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DoubleQuoteChar field is used by the &lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt; method to close an attribute.</source>
          <target state="translated">Il campo DoubleQuoteChar viene utilizzato il &lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;metodo per chiudere un attributo.&lt;/xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <bpt id="p1">&lt;xref href="System.Web.HttpRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object of the current context.</source>
          <target state="translated">Codifica il valore dell'attributo di markup specificato in base ai requisiti del <bpt id="p1">&lt;xref href="System.Web.HttpRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto del contesto corrente.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the EncodeAttributeValue overload of the &lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt; method if the attribute is not an &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt; enumeration value or is not known until run time.</source>
          <target state="translated">Utilizzare l'overload del metodo EncodeAttributeValue il &lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;metodo se l'attributo non è un &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;valore di enumerazione o non è noto in fase di esecuzione.&lt;/xref:System.Web.UI.HtmlTextWriterAttribute&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt; method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;metodo rimuove le virgolette doppie ("), le e commerciali (&amp;) e segni di minore (&lt;) so that invalid tags are not generated, regardless of the input. so="" that="" invalid="" tags="" are="" not="" generated,="" regardless="" of="" the=""&gt; &lt;/) so that invalid tags are not generated, regardless of the input.&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual encoding is performed by the &lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt; method.</source>
          <target state="translated">La codifica viene eseguita dal &lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;metodo.&lt;/xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">Stringa contenente il valore dell'attributo da codificare.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to encode the attribute value; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>per codificare il valore di attributo. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A string containing the encoded attribute value, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> is empty, or the unencoded attribute value if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">fEncode</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Stringa contenente il valore dell'attributo codificato, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept> è vuoto oppure il valore dell'attributo se <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">fEncode</ph> <ept id="p3">&lt;/code&gt;</ept> è <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <bpt id="p1">&lt;xref href="System.Web.HttpRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object of the current context.</source>
          <target state="translated">Codifica il valore dell'attributo di markup specificato in base ai requisiti del <bpt id="p1">&lt;xref href="System.Web.HttpRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto del contesto corrente.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EncodeAttributeValue method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated">Il metodo EncodeAttributeValue rimuove le virgolette doppie ("), le e commerciali (&amp;) e (segni di minore&lt;) so that invalid tags are not generated, regardless of the input. so="" that="" invalid="" tags="" are="" not="" generated,="" regardless="" of="" the=""&gt;&lt;/) so that invalid tags are not generated, regardless of the input.&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual encoding is performed by the &lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt; method.</source>
          <target state="translated">La codifica viene eseguita dal &lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;metodo.&lt;/xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the markup attribute.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che rappresenta l'attributo di markup.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">Stringa contenente il valore dell'attributo da codificare.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A string containing the encoded attribute value.</source>
          <target state="translated">Stringa contenente il valore dell'attributo codificato.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</source>
          <target state="translated">Esegue la codifica URL minima convertendo spazi nell'URL specificato per la stringa "%&amp;20;".</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</source>
          <target state="translated">La codifica URL di un carattere è costituito da un simbolo di percentuale (%), seguito dalla rappresentazione esadecimale a due cifre (maiuscole) del punto di codice ISO-Latin per il carattere.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hexadecimal representation of a space is 20.</source>
          <target state="translated">La rappresentazione esadecimale di uno spazio è 20.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A string containing the URL to encode.</source>
          <target state="translated">Stringa contenente l'URL da codificare.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A string containing the encoded URL.</source>
          <target state="translated">Stringa contenente l'URL codificato.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets the encoding that the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object uses to write content to the page.</source>
          <target state="translated">Ottiene la codifica di <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto utilizzato per scrivere il contenuto della pagina.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Encoding property obtains its value from the base &lt;xref:System.IO.TextWriter&gt; object.</source>
          <target state="translated">La proprietà Encoding ottenga il valore dalla base &lt;xref:System.IO.TextWriter&gt;oggetto.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.Encoding&gt; in which the markup is written to the page.</source>
          <target state="translated">Il &lt;xref:System.Text.Encoding&gt;in cui viene scritto il markup alla pagina.&lt;/xref:System.Text.Encoding&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Notifies an <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, or an object of a derived class, that a control has finished rendering.</source>
          <target state="translated">Notifica a un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oppure un oggetto di una classe derivata, che il rendering di un controllo è completato.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>You can use this method to close any markup elements opened in the &lt;xref:System.Web.UI.HtmlTextWriter.BeginRender*&gt; method.</source>
          <target state="translated">È possibile utilizzare questo metodo per chiudere gli elementi di markup aperti nel &lt;xref:System.Web.UI.HtmlTextWriter.BeginRender*&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.BeginRender*&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter&gt; class implementation of the EndRender method has no functionality.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.HtmlTextWriter&gt;implementazione della classe del metodo EndRender non presenta alcuna funzionalità.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must override EndRender in a class derived from the &lt;xref:System.Web.UI.HtmlTextWriter&gt; class to provide your own rendering functionality.</source>
          <target state="translated">Eseguire l'override in una classe derivata da EndRender la &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe per fornire funzionalità di rendering.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the EndRender method to close any markup elements opened in the &lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt; method.</source>
          <target state="translated">È possibile utilizzare il metodo EndRender per chiudere gli elementi di markup aperti nel &lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Represents the left angle bracket and slash mark (<ph id="ph1">&amp;lt;</ph>/) of the closing tag of a markup element.</source>
          <target state="translated">Rappresenta il contrassegno di parentesi e la barra di parentesi angolare sinistra (<ph id="ph1">&amp;lt;</ph>/) del tag di chiusura di un elemento di markup.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EndTagLeftChars field is used by the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method to construct markup element end tags.</source>
          <target state="translated">Il campo EndTagLeftChars viene utilizzato il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo per costruire i tag di fine elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Writes the opening tag of a <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;span&amp;gt;" name="&amp;lt;span&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">Scrive il tag di apertura di un <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;span&amp;gt;" name="&amp;lt;span&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> elemento che contiene gli attributi che implementano il layout e la formattazione di carattere dello stile specificato.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the EnterStyle method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">Utilizzare il metodo EnterStyle per applicare stili, ad esempio larghezza, bordo o un colore di sfondo a un blocco di markup.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EnterStyle and &lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt; methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated">Il EnterStyle e &lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;metodi consentono a un adattatore di dispositivo o un controllo creare il markup che utilizza la formattazione di carattere dello stile specificato.&lt;/xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the EnterStyle method that you use in the corresponding &lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt; method.</source>
          <target state="translated">Utilizzare lo stesso valore per <ph id="ph1">`style`</ph> nel metodo EnterStyle utilizzati nel corrispondente &lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EnterStyle overload of the EnterStyle method renders the opening tag of a <ph id="ph1">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">L'overload EnterStyle del metodo EnterStyle esegue il rendering del tag di apertura di un <ph id="ph1">`&lt;span&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method then adds the necessary attributes and style attributes to the opening tag of the <ph id="ph1">`&lt;span&gt;`</ph> element to display the settings specified by the &lt;xref:System.Web.UI.WebControls.Style&gt; object.</source>
          <target state="translated">Questo metodo aggiunge quindi gli attributi e necessari gli attributi di stile per il tag di apertura del <ph id="ph1">`&lt;span&gt;`</ph> elemento per visualizzare le impostazioni specificate per il &lt;xref:System.Web.UI.WebControls.Style&gt;oggetto.&lt;/xref:System.Web.UI.WebControls.Style&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to render a different markup element to contain the attributes and style attributes, use the &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt; overload.</source>
          <target state="translated">Se si desidera eseguire il rendering di un elemento di markup diversi per contenere gli attributi e gli attributi di stile, utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;rapporto di overload.&lt;/xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated">Oggetto <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che specifica il layout e la formattazione per avviare l'applicazione per il blocco di markup.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">Scrive il tag di apertura di un elemento di markup che contiene gli attributi che implementano il layout e la formattazione di caratteri dello stile specificato.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the EnterStyle method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">Utilizzare il metodo EnterStyle per applicare stili, ad esempio larghezza, bordo o un colore di sfondo a un blocco di markup.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EnterStyle and &lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt; methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated">Il EnterStyle e &lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;metodi consentono a un adattatore di dispositivo o un controllo creare il markup che utilizza la formattazione di carattere dello stile specificato.&lt;/xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the EnterStyle method that you use in the corresponding &lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt; method.</source>
          <target state="translated">Utilizzare lo stesso valore per <ph id="ph1">`style`</ph> nel metodo EnterStyle utilizzati nel corrispondente &lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt; overload of the EnterStyle method renders the opening tag of the element specified by the <ph id="ph1">`tag`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;overload del metodo EnterStyle esegue il rendering di tag di apertura dell'elemento specificato per il <ph id="ph1">`tag`</ph> parametro.&lt;/xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EnterStyle method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the &lt;xref:System.Web.UI.WebControls.Style&gt; object.</source>
          <target state="translated">Il metodo EnterStyle aggiunge quindi gli attributi e necessari gli attributi di stile al tag di apertura dell'elemento per visualizzare le impostazioni specificate per il &lt;xref:System.Web.UI.WebControls.Style&gt;oggetto.&lt;/xref:System.Web.UI.WebControls.Style&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt; overload to render the opening tag of a <ph id="ph1">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;eseguire l'overload per il rendering del tag di apertura di un <ph id="ph1">`&lt;span&gt;`</ph> elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated">Oggetto <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che specifica il layout e la formattazione per avviare l'applicazione per il blocco di markup.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the opening tag of the markup element that will contain the style object specified in <ph id="ph1">`style`</ph>.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che specifica il tag di apertura dell'elemento di codice che conterrà l'oggetto stile specificato nel <ph id="ph1">`style`</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Represents the equal sign (<bpt id="p1">&lt;xref uid="langword_csharp_=" name="=" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Rappresenta il segno di uguale (<bpt id="p1">&lt;xref uid="langword_csharp_=" name="=" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might want to use the &lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt; field instead of the EqualsChar field when constructing the opening delimiter of an attribute value.</source>
          <target state="translated">È possibile utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;campo anziché il campo EqualsChar quando si costruisce il delimitatore di apertura di un valore di attributo.&lt;/xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Represents an equal sign (=) and a double quotation mark (") together in a string (=").</source>
          <target state="translated">Rappresenta un segno di uguale (=) e un segno di virgolette doppie (") in una stringa (=").</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EqualsDoubleQuoteString field is used by the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; and &lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt; methods to construct the opening delimiter of attribute values.</source>
          <target state="translated">Il campo EqualsDoubleQuoteString viene utilizzato il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;e &lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;metodi per costruire il delimitatore di apertura dei valori di attributo.&lt;/xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Writes the closing tag of a <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;span&amp;gt;" name="&amp;lt;span&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element to end the specified layout and character formatting.</source>
          <target state="translated">Scrive il tag di chiusura di un <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;span&amp;gt;" name="&amp;lt;span&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> elemento per terminare il layout specificato e la formattazione di carattere.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ExitStyle overload of the ExitStyle method renders the closing tag of a <ph id="ph1">`&lt;span&gt;`</ph> element after the closing tag of the control, closing the element opened by the corresponding &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt; call.</source>
          <target state="translated">L'overload ExitStyle del metodo ExitStyle esegue il rendering del tag di chiusura di un <ph id="ph1">`&lt;span&gt;`</ph> elemento dopo il tag di chiusura del controllo, chiudendo l'elemento aperto dal corrispondente &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;chiamare.&lt;/xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ExitStyle and &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt; methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated">Il ExitStyle e &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;metodi consentono a un adattatore di dispositivo o un controllo creare markup che inizia e termina un blocco usando la formattazione di carattere dello stile specificato.&lt;/xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt; method that you use in the corresponding ExitStyle method.</source>
          <target state="translated">Utilizzare lo stesso valore per <ph id="ph1">`style`</ph> nel &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;metodo da utilizzare nel metodo ExitStyle corrispondente.&lt;/xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the layout and formatting to close.</source>
          <target state="translated">Oggetto <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che specifica il layout e la formattazione da chiudere.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Writes the closing tag of the specified markup element to end the specified layout and character formatting.</source>
          <target state="translated">Scrive il tag di chiusura dell'elemento di codice specificato per terminare il layout specificato e la formattazione di caratteri.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ExitStyle overload of the ExitStyle method renders the closing tag of the element that is specified by <ph id="ph1">`tag`</ph> after the closing tag of the control, closing the element that was opened by the corresponding &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt; method call.</source>
          <target state="translated">L'overload ExitStyle del metodo ExitStyle esegue il rendering del tag di chiusura dell'elemento specificato da <ph id="ph1">`tag`</ph> dopo il tag di chiusura del controllo, chiudere l'elemento che è stato aperto dal corrispondente &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;chiamata al metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ExitStyle and &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt; methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated">Il ExitStyle e &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;metodi consentono a un adattatore di dispositivo o un controllo creare markup che inizia e termina un blocco usando la formattazione di carattere dello stile specificato.&lt;/xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt; method that you use in the corresponding ExitStyle method.</source>
          <target state="translated">Utilizzare lo stesso valore per <ph id="ph1">`style`</ph> nel &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;metodo da utilizzare nel metodo ExitStyle corrispondente.&lt;/xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the layout and formatting to stop applying to the output text.</source>
          <target state="translated">Oggetto <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che specifica il layout e la formattazione per arrestare l'applicazione per il testo di output.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che specifica il tag di chiusura dell'elemento di markup contenente gli attributi applicati allo stile specificato.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>This must match the key passed in the corresponding &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle*&gt; call.</source>
          <target state="translated">Deve corrispondere alla chiave passata nella corrispondente &lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle*&gt;chiamare.&lt;/xref:System.Web.UI.HtmlTextWriter.EnterStyle*&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Removes all the markup and style attributes on all properties of the page or Web server control.</source>
          <target state="translated">Rimuove tutti gli attributi di markup e lo stile su tutte le proprietà della pagina o del controllo server Web.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before attributes are rendered on a markup element, the FilterAttributes method is called.</source>
          <target state="translated">Prima del rendering degli attributi su un elemento di markup, viene chiamato il metodo FilterAttributes.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>In turn, the FilterAttributes method calls the &lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt; and &lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt; methods for each attribute and style to render.</source>
          <target state="translated">A sua volta, viene chiamato il metodo FilterAttributes il &lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;e &lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;metodi per ogni attributo e lo stile per il rendering.&lt;/xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Clears all buffers for the current <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and causes any buffered data to be written to the output stream.</source>
          <target state="translated">Cancella tutti i buffer per l'oggetto corrente <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto e i dati da scrivere nel flusso di output memorizzati nel buffer le cause.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter&gt; class implementation of the Flush method just calls the &lt;xref:System.IO.TextWriter.Flush%2A&gt; base method.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.HtmlTextWriter&gt;implementazione della classe del metodo Flush chiama semplicemente il &lt;xref:System.IO.TextWriter.Flush%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Flush%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Obtains the corresponding <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value for the specified attribute.</source>
          <target state="translated">Ottiene il corrispondente <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> il valore di enumerazione per l'attributo specificato.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`attrName`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt; object, is returned.</source>
          <target state="translated">Se <ph id="ph1">`attrName`</ph> è <ph id="ph2">`null`</ph> o una stringa vuota (""), o non viene trovato nella tabella di nomi di attributi, il valore -1, tipizzata a un &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;dell'oggetto, viene restituito.&lt;/xref:System.Web.UI.HtmlTextWriterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A string that contains the attribute for which to obtain the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Stringa che contiene l'attributo per cui ottenere il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value for the specified attribute; otherwise, an invalid <bpt id="p2">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value if the attribute is not a member of the enumeration.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> il valore di enumerazione per l'attributo specificato; in caso contrario, un oggetto non valido <bpt id="p2">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> valore se l'attributo non è un membro dell'enumerazione.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Obtains the name of the markup attribute associated with the specified <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">Ottiene il nome dell'attributo di markup associato all'oggetto <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valore.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetAttributeName method returns an empty string (""), if <ph id="ph1">`attrKey`</ph> is not a valid &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt; value.</source>
          <target state="translated">Il metodo GetAttributeName restituisce una stringa vuota (""), se <ph id="ph1">`attrKey`</ph> non è un valido &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;valore.&lt;/xref:System.Web.UI.HtmlTextWriterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to obtain the markup attribute name for.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> per ottenere il nome dell'attributo di markup.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A string containing the name of the markup attribute.</source>
          <target state="translated">Stringa contenente il nome dell'attributo di markup.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Obtains the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value for the specified style.</source>
          <target state="translated">Ottiene il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> il valore di enumerazione per lo stile specificato.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetStyleKey method returns the value -1 typed as a &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt; value, if <ph id="ph1">`styleName`</ph> does not correspond to any &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt; enumeration value.</source>
          <target state="translated">Il metodo GetStyleKey restituisce il valore -1 tipizzato come una &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;valore, se <ph id="ph1">`styleName`</ph> non corrisponde a qualsiasi &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;valore di enumerazione.&lt;/xref:System.Web.UI.HtmlTextWriterStyle&gt; &lt;/xref:System.Web.UI.HtmlTextWriterStyle&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The style attribute for which to obtain the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Attributo di stile per il quale ottenere il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value corresponding to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">styleName</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> enumerazione valore corrispondente a <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">styleName</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Obtains the markup style attribute name associated with the specified <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">Ottiene il nome di attributo di stile markup associato all'oggetto <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valore di enumerazione.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`styleKey`</ph> is not a valid &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt; object, the GetStyleName method returns an empty string ("").</source>
          <target state="translated">Se <ph id="ph1">`styleKey`</ph> non è un valido &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;dell'oggetto, il metodo metodo GetStyleName restituisce una stringa vuota ("").&lt;/xref:System.Web.UI.HtmlTextWriterStyle&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to obtain the style attribute name for.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> per ottenere il nome dell'attributo di stile.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The style attribute name associated with the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value specified in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">styleKey</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Il nome dell'attributo di stile è associato il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> specificato nel valore dell'enumerazione <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">styleKey</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Obtains the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value associated with the specified markup element.</source>
          <target state="translated">Ottiene il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> il valore di enumerazione associato all'elemento di codice specificato.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`tagName`</ph> is <ph id="ph2">`null`</ph>, an empty string (""), or cannot be found in the table of markup tag names, the GetTagKey method returns the &lt;xref:System.Web.UI.HtmlTextWriterTag&gt; field.</source>
          <target state="translated">Se <ph id="ph1">`tagName`</ph> è <ph id="ph2">`null`</ph>, una stringa vuota (""), o non viene trovato nella tabella dei nomi di tag di markup, il metodo metodo GetTagKey restituisce il &lt;xref:System.Web.UI.HtmlTextWriterTag&gt;campo.&lt;/xref:System.Web.UI.HtmlTextWriterTag&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The markup element for which to obtain the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">L'elemento di markup per il quale ottenere il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value; otherwise, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">tagName</ph><ept id="p2">&lt;/code&gt;</ept> is not associated with a specific <bpt id="p3">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> value, <bpt id="p4">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> il valore di enumerazione; in caso contrario, se <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">tagName</ph> <ept id="p2">&lt;/code&gt;</ept> non è associata a uno specifico <bpt id="p3">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> valore <bpt id="p4">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Obtains the markup element associated with the specified <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">Ottiene l'elemento di markup associato all'oggetto <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valore di enumerazione.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`tagKey`</ph> is not a valid &lt;xref:System.Web.UI.HtmlTextWriterTag&gt; value, the GetTagName method returns an empty string ("").</source>
          <target state="translated">Se <ph id="ph1">`tagKey`</ph> non è un valido &lt;xref:System.Web.UI.HtmlTextWriterTag&gt;valore, il metodo GetTagName restituisce una stringa vuota ("").&lt;/xref:System.Web.UI.HtmlTextWriterTag&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to obtain the markup element for.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> per ottenere l'elemento di markup.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>A string representing the markup element.</source>
          <target state="translated">Stringa che rappresenta l'elemento di markup.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of tab positions to indent the beginning of each line of markup.</source>
          <target state="translated">Ottiene o imposta il numero di posizioni di tabulazione per il rientro dell'inizio di ogni riga del markup.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Indentation is performed by writing the string that is specified by the <ph id="ph1">`tabString`</ph> parameter of the &lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt; constructor the number of times that are specified by the Indent property.</source>
          <target state="translated">Viene eseguito alcun rientro scrivendo la stringa specificata dal <ph id="ph1">`tabString`</ph> parametro del &lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;costruttore, il numero di volte in cui vengono specificati dalla proprietà trattino.&lt;/xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the Indent property is set to a negative value, it is changed to 0 before being saved.</source>
          <target state="translated">Se la proprietà di rientro è impostata su un valore negativo, viene modificato a 0 prima di essere salvata.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The number of tab positions to indent each line.</source>
          <target state="translated">Il numero di posizioni di tabulazione per rientrare ogni riga.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Gets or sets the text writer that writes the inner content of the markup element.</source>
          <target state="translated">Ottiene o imposta il writer di testo che scrive il contenuto interno dell'elemento di markup.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inner markup content is the text found between the opening and closing tags of a markup language element.</source>
          <target state="translated">Contenuto markup interno è il testo racchiuso tra i tag di apertura e chiusura di un elemento di linguaggio di markup.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the InnerWriter property is set to a &lt;xref:System.IO.TextWriter&gt; object that is an instance of the &lt;xref:System.Web.HttpWriter&gt; class, this fact is noted and a separate reference is saved.</source>
          <target state="translated">Se la proprietà InnerWriter è impostata su un &lt;xref:System.IO.TextWriter&gt;oggetto che rappresenta un'istanza di &lt;xref:System.Web.HttpWriter&gt;(classe), questo fatto è indicato e un altro riferimento viene salvato.&lt;/xref:System.Web.HttpWriter&gt; &lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; that writes the inner markup content.</source>
          <target state="translated">Oggetto &lt;xref:System.IO.TextWriter&gt;che scrive il contenuto markup interno.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method.</source>
          <target state="translated">Determina se l'attributo di markup specificato e il relativo valore di rendering durante la successiva chiamata di &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the value to be assigned to the &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt; object, use the &lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt; overload instead of this one.</source>
          <target state="translated">Per ottenere il valore da assegnare al &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;oggetto, usare il &lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt;overload anziché questo.&lt;/xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt; &lt;/xref:System.Web.UI.HtmlTextWriterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the markup attribute.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> associato all'attributo di markup.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the attribute is rendered during the next call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se l'attributo viene visualizzato durante la successiva chiamata di &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo; in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method.</source>
          <target state="translated">Determina se l'attributo di markup specificato e il relativo valore di rendering durante la successiva chiamata di &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the IsAttributeDefined method returns <ph id="ph1">`true`</ph>, the value to be assigned to the &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt; object is returned in the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Se il metodo IsAttributeDefined restituisce <ph id="ph1">`true`</ph>, il valore da assegnare al &lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;oggetto viene restituito nel <ph id="ph2">`value`</ph> parametro.&lt;/xref:System.Web.UI.HtmlTextWriterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the markup attribute.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> associato all'attributo di markup.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The value assigned to the attribute.</source>
          <target state="translated">Il valore assegnato all'attributo.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the attribute is rendered during the next call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se l'attributo viene visualizzato durante la successiva chiamata di &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo; in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Determines whether the specified markup style attribute is rendered during the next call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method.</source>
          <target state="translated">Determina se l'attributo di stile markup specificato viene eseguito il rendering durante la successiva chiamata di &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the value that will be rendered with the specified style attribute, use the &lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt; overload of the IsStyleAttributeDefined method.</source>
          <target state="translated">Per ottenere il valore che verrà eseguito il rendering con l'attributo di stile specificato, utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;overload del metodo IsStyleAttributeDefined.&lt;/xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the attribute.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> associato all'attributo.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the attribute will be rendered during the next call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se l'attributo verrà visualizzato durante la successiva chiamata di &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo; in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Determines whether the specified markup style attribute and its value are rendered during the next call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method.</source>
          <target state="translated">Determina se l'attributo di stile markup specificato e il relativo valore di rendering durante la successiva chiamata di &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the IsStyleAttributeDefined method returns <ph id="ph1">`true`</ph>, the value to be assigned to the &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt; attribute is returned in the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Se il metodo IsStyleAttributeDefined restituisce <ph id="ph1">`true`</ph>, il valore da assegnare al &lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;attributo viene restituito nel <ph id="ph2">`value`</ph> parametro.&lt;/xref:System.Web.UI.HtmlTextWriterStyle&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the attribute.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> associato all'attributo.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">Il valore assegnato all'attributo di stile.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the attribute and its value will be rendered during the next call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt; method; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se l'attributo e il relativo valore verrà visualizzati durante la successiva chiamata di &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;metodo; in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Checks an attribute to ensure that it can be rendered in the opening tag of a <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;form&amp;gt;" name="&amp;lt;form&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> markup element.</source>
          <target state="translated">Controlla un attributo per garantire che può essere eseguito in tag di apertura di un <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;form&amp;gt;" name="&amp;lt;form&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> elemento di markup.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter&gt; class implementation of the IsValidFormAttribute method returns <ph id="ph1">`true`</ph> for all attributes.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.HtmlTextWriter&gt;implementazione della classe del metodo IsValidFormAttribute restituisce <ph id="ph1">`true`</ph> per tutti gli attributi.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the IsValidFormAttribute to limit the attributes that can be rendered in the opening tag of a <ph id="ph1">`&lt;form&gt;`</ph> element.</source>
          <target state="translated">Eseguire l'override di IsValidFormAttribute per limitare gli attributi che è possono eseguire il rendering nel tag di apertura di un <ph id="ph1">`&lt;form&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A string that contains the name of the attribute to check.</source>
          <target state="translated">Stringa che contiene il nome dell'attributo da controllare.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Gets or sets the line terminator string used by the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Ottiene o imposta la stringa di carattere di terminazione di riga utilizzata per il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The line terminator string used by the current <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il terminatore di riga utilizzato dall'oggetto corrente <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Determines whether the specified markup attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">Determina se l'attributo di markup specificato e il relativo valore può essere reso a elemento di markup corrente.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter&gt; class implementation of the OnAttributeRender method always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">La &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe implementazione del metodo OnAttributeRender restituisce sempre <ph id="ph1">`true`</ph>.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnAttributeRender overrides can determine whether an attribute will be rendered to the page.</source>
          <target state="translated">Le sostituzioni OnAttributeRender possono determinare se la pagina verrà visualizzato come un attributo.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A string containing the name of the attribute to render.</source>
          <target state="translated">Stringa contenente il nome dell'attributo per eseguire il rendering.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>A string containing the value that is assigned to the attribute.</source>
          <target state="translated">Stringa contenente il valore assegnato all'attributo.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the markup attribute.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> associato all'attributo di markup.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">Determina se l'attributo di stile markup specificato e il relativo valore può essere reso a elemento di markup corrente.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter&gt; class implementation of the OnStyleAttributeRender method always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">La &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe implementazione del metodo OnStyleAttributeRender restituisce sempre <ph id="ph1">`true`</ph>.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnStyleAttributeRender overrides can determine whether a style attribute will be rendered to the page.</source>
          <target state="translated">Le sostituzioni OnStyleAttributeRender possono determinare se verrà eseguito il rendering di un attributo di stile della pagina.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>A string containing the name of the style attribute to render.</source>
          <target state="translated">Stringa contenente il nome dell'attributo di stile per il rendering.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A string containing the value that is assigned to the style attribute.</source>
          <target state="translated">Stringa contenente il valore assegnato all'attributo di stile.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the style attribute.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> associato all'attributo di stile.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Determines whether the specified markup element will be rendered to the requesting page.</source>
          <target state="translated">Determina se verrà visualizzato come elemento di codice specificato nella pagina richiedente.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter&gt; class implementation of the OnTagRender method always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">La &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe implementazione del metodo metodo OnTagRender restituisce sempre <ph id="ph1">`true`</ph>.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnTagRender overrides can determine whether an element will be rendered to the page.</source>
          <target state="translated">L'override di metodo OnTagRender possono determinare se verrà visualizzato come un elemento alla pagina.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>A string containing the name of the element to render.</source>
          <target state="translated">Stringa contenente il nome dell'elemento per il rendering.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the element.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> associato all'elemento.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Writes a series of tab strings that represent the indentation level for a line of markup characters.</source>
          <target state="translated">Scrive una serie di scheda stringhe che rappresentano il livello di rientro per una riga di caratteri di markup.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Removes the most recently saved markup element from the list of rendered elements.</source>
          <target state="translated">Rimuove l'elemento di markup salvato più di recente dall'elenco di elementi viene eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements are added to the list of rendered markup elements by the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method.</source>
          <target state="translated">Gli elementi vengono aggiunti all'elenco di elementi di markup sottoposto a rendering per il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt; method removes markup elements from the list by calling the PopEndTag method.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;metodo rimuove gli elementi di markup dall'elenco chiamando il metodo PopEndTag.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the most recently rendered markup element.</source>
          <target state="translated">Oggetto &lt;xref:System.String&gt;contenente più di recente eseguito il rendering di elemento di markup.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The list of rendered elements is empty.</source>
          <target state="translated">L'elenco di elementi viene eseguito il rendering è vuoto.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Saves the specified markup element for later use when generating the end tag for a markup element.</source>
          <target state="translated">Salva elemento di codice specificato per un uso successivo durante la generazione di tag di fine per un elemento di markup.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements are added to the list of rendered markup elements when the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method calls the PushEndTag method.</source>
          <target state="translated">Gli elementi vengono aggiunti all'elenco di elementi di markup sottoposto a rendering quando il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo chiama il metodo PushEndTag.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt; method removes markup elements from the list after it renders the end tag for the element.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;metodo rimuove gli elementi di markup dall'elenco dopo il rendering del tag di fine per l'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The closing tag of the markup element.</source>
          <target state="translated">Il tag di chiusura dell'elemento di markup.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Registra gli attributi di markup, ovvero i valori letterali o dinamicamente generato dal file di origine in modo che sia possibile eseguirne correttamente il rendering del client richiedente.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>The predefined attributes of the HTML markup language are registered by calls to the RegisterAttribute method when the first &lt;xref:System.Web.UI.HtmlTextWriter&gt; object is created.</source>
          <target state="translated">Gli attributi predefiniti del linguaggio di markup HTML vengono registrati mediante chiamate al metodo RegisterAttribute quando il primo &lt;xref:System.Web.UI.HtmlTextWriter&gt;viene creato l'oggetto.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dynamic attributes can be registered by using the RegisterAttribute method at other times.</source>
          <target state="translated">Gli attributi dinamici possono essere registrati utilizzando il metodo RegisterAttribute in altri momenti.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>The registration table used by the RegisterAttribute method is <ph id="ph1">`static`</ph>, so registration of attributes applies to all &lt;xref:System.Web.UI.HtmlTextWriter&gt; objects on the host computer.</source>
          <target state="translated">La tabella di registrazione utilizzata dal metodo RegisterAttribute è <ph id="ph1">`static`</ph>, pertanto la registrazione di attributi viene applicata a tutti &lt;xref:System.Web.UI.HtmlTextWriter&gt;oggetti nel computer host.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>A string containing the name of the markup attribute to register.</source>
          <target state="translated">Stringa contenente il nome dell'attributo di markup da registrare.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that corresponds with the attribute name.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che corrisponde al nome dell'attributo.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Registra le proprietà dello stile di markup, ovvero i valori letterali o dinamicamente generato dal file di origine in modo che sia possibile eseguirne correttamente il rendering del client richiedente.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the RegisterStyle method when the first &lt;xref:System.Web.UI.HtmlTextWriter&gt; object is created.</source>
          <target state="translated">I predefiniti attributi foglio di stile (CSS) del linguaggio di markup HTML vengono registrati mediante chiamate al metodo RegisterStyle quando il primo &lt;xref:System.Web.UI.HtmlTextWriter&gt;viene creato l'oggetto.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dynamic style attributes can be registered by using the RegisterStyle method at other times.</source>
          <target state="translated">Gli attributi di stile dinamico possono essere registrati utilizzando il metodo RegisterStyle in altri momenti.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>The registration table used by the RegisterStyle method is <ph id="ph1">`static`</ph>, so registration of attributes applies to all &lt;xref:System.Web.UI.HtmlTextWriter&gt; objects on the host computer.</source>
          <target state="translated">La tabella di registrazione utilizzata dal metodo RegisterStyle è <ph id="ph1">`static`</ph>, pertanto la registrazione di attributi viene applicata a tutti &lt;xref:System.Web.UI.HtmlTextWriter&gt;oggetti nel computer host.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The string passed from the source file specifying the style name.</source>
          <target state="translated">La stringa passata dal file di origine specificando il nome dello stile.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that corresponds with the specified style.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che corrisponde allo stile specificato.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Registra i tag di markup, ovvero i valori letterali o dinamicamente generato dal file di origine in modo che sia possibile eseguirne correttamente il rendering del client richiedente.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>The predefined markup tags of the HTML language are registered by calls to the RegisterTag method when the first &lt;xref:System.Web.UI.HtmlTextWriter&gt; object is created.</source>
          <target state="translated">I tag predefiniti del linguaggio HTML vengono registrati mediante chiamate al metodo RegisterTag quando il primo &lt;xref:System.Web.UI.HtmlTextWriter&gt;viene creato l'oggetto.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dynamic markup tags can be registered by using the RegisterTag method at other times.</source>
          <target state="translated">Tag del markup dinamici possono essere registrati utilizzando il metodo RegisterTag in altri momenti.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>The registration table used by the RegisterTag method is <ph id="ph1">`static`</ph>, so registration of tags applies to all &lt;xref:System.Web.UI.HtmlTextWriter&gt; objects on the host computer.</source>
          <target state="translated">La tabella di registrazione utilizzata dal metodo RegisterTag è <ph id="ph1">`static`</ph>, pertanto la registrazione di tag si applica a tutti &lt;xref:System.Web.UI.HtmlTextWriter&gt;oggetti nel computer host.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>A string that contains the HTML tag.</source>
          <target state="translated">Stringa che contiene tag HTML.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies which element to render.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che specifica l'elemento di cui eseguire il rendering.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</source>
          <target state="translated">Scrive il testo o spaziatura che si verifica dopo il contenuto e prima del tag di chiusura dell'elemento di markup nel flusso di output di markup.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RenderAfterContent method can be useful if you want to insert child elements into the current markup element.</source>
          <target state="translated">Il metodo RenderAfterContent può essere utile se si desidera inserire gli elementi figlio nell'elemento di markup corrente.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>A string that contains the spacing or text to write after the content of the element.</source>
          <target state="translated">Stringa che contiene la spaziatura o un testo da scrivere dopo il contenuto dell'elemento.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Writes any spacing or text that occurs after the closing tag for a markup element.</source>
          <target state="translated">Scrive qualsiasi spaziatura o testo che si verifica dopo il tag di chiusura per un elemento di markup.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RenderAfterTag method can be useful if you want to render additional closing tags after the element tag.</source>
          <target state="translated">Il metodo RenderAfterTag può essere utile se si desidera eseguire il rendering di tag di chiusura aggiuntivi dopo il tag dell'elemento.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The spacing or text to write after the closing tag of the element.</source>
          <target state="translated">Specifica la spaziatura o il testo da scrivere dopo il tag di chiusura dell'elemento.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Writes any text or spacing before the content and after the opening tag of a markup element.</source>
          <target state="translated">Scrive il testo o spaziatura prima del contenuto e dopo il tag di apertura di un elemento di markup.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RenderBeforeContent method can be useful if you want to insert child elements into the current markup element before the inner markup.</source>
          <target state="translated">Il metodo RenderBeforeContent può essere utile se si desidera inserire gli elementi figlio nell'elemento di markup corrente prima del markup interno.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The text or spacing to write prior to the content of the element.</source>
          <target state="translated">Il testo o spaziatura da scrivere prima il contenuto dell'elemento.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>If not overridden, RenderBeforeContent returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se non viene sottoposto a override, RenderBeforeContent restituisce <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Writes any text or spacing that occurs before the opening tag of a markup element.</source>
          <target state="translated">Scrive il testo o spaziatura che si verifica prima del tag di apertura di un elemento di markup.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RenderBeforeTag method can be useful if you want to render additional opening tags before the opening tag of the intended element.</source>
          <target state="translated">Il metodo RenderBeforeTag può essere utile se si desidera eseguire il rendering dei tag di apertura aggiuntivi prima del tag di apertura dell'elemento previsto.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The text or spacing to write before the markup element opening tag.</source>
          <target state="translated">Il testo o spaziatura scrittura prima del tag di apertura dell'elemento di markup.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>If not overridden, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se non viene sottoposto a override, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Writes the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Scrive il tag di apertura dell'elemento di codice specificato nel flusso di output.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the RenderBeginTag override of the RenderBeginTag method, if the markup element is not one of the &lt;xref:System.Web.UI.HtmlTextWriterTag&gt; enumeration values.</source>
          <target state="translated">Utilizzare la sostituzione RenderBeginTag del metodo RenderBeginTag, se l'elemento di markup non fa parte di &lt;xref:System.Web.UI.HtmlTextWriterTag&gt;valori di enumerazione.&lt;/xref:System.Web.UI.HtmlTextWriterTag&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>To generate a markup element by using the RenderBeginTag method, first call the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; and the &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt; methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">Per generare un elemento di codice utilizzando il metodo RenderBeginTag, chiamare prima il &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;e &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;metodi, se necessario, per specificare eventuali attributi dell'elemento o gli attributi di stile che devono essere visualizzati nel tag di apertura dell'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>After generating the inner markup, call the &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt; method to generate the closing tag.</source>
          <target state="translated">Dopo aver generato il codice interno, chiamare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;metodo per generare il tag di chiusura.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>A string containing the name of the markup element for which to render the opening tag.</source>
          <target state="translated">Stringa contenente il nome dell'elemento di markup per il quale eseguire il rendering del tag di apertura.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Writes the opening tag of the markup element associated with the specified <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value to the output stream.</source>
          <target state="translated">Scrive il tag di apertura dell'elemento di codice associato all'oggetto <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valore di enumerazione per il flusso di output.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the RenderBeginTag overload of the RenderBeginTag method if the markup element is of a known type that is one of the &lt;xref:System.Web.UI.HtmlTextWriterTag&gt; enumeration values.</source>
          <target state="translated">Utilizzare l'overload di metodo RenderBeginTag del metodo RenderBeginTag se l'elemento di markup di un tipo conosciuto è uno del &lt;xref:System.Web.UI.HtmlTextWriterTag&gt;valori di enumerazione.&lt;/xref:System.Web.UI.HtmlTextWriterTag&gt;</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>To generate a markup element by using the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method, first call the &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; and the &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt; methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">Per generare un elemento di codice utilizzando il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo, chiamare prima il &lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;e &lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;metodi, se necessario, per specificare eventuali attributi dell'elemento o gli attributi di stile che devono essere visualizzati nel tag di apertura dell'elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>After generating the inner markup, call the &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt; method to generate the closing tag.</source>
          <target state="translated">Dopo aver generato il codice interno, chiamare il &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;metodo per generare il tag di chiusura.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that defines the opening tag of the markup element to render.</source>
          <target state="translated">Uno del <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valori che definisce il tag di apertura dell'elemento di codice per eseguire il rendering.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Writes the end tag of a markup element to the output stream.</source>
          <target state="translated">Scrive il tag di fine di un elemento di markup nel flusso di output.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the RenderEndTag method after the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</source>
          <target state="translated">Chiamare il metodo RenderEndTag dopo il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;l'overload del metodo e dopo che tutto il contenuto tra i tag di apertura e chiusura (markup interno) dell'elemento è stato eseguito il rendering.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Represents a space and the self-closing slash mark (/) of a markup tag.</source>
          <target state="translated">Rappresenta uno spazio e la chiusura automatica barra (/) di un tag di markup.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SelfClosingChars field is used in markup elements that are self-closed.</source>
          <target state="translated">Il campo SelfClosingChars viene utilizzato nel tag di chiusura automatica.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:       <ph id="ph1">`&lt;input type="submit" value="go"  /&gt;`</ph></source>
          <target state="translated">Per esempio:<ph id="ph1">`&lt;input type="submit" value="go"  /&gt;`</ph></target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Represents the closing slash mark and right angle bracket (/<ph id="ph1">&amp;gt;</ph>) of a self-closing markup element.</source>
          <target state="translated">Rappresenta la chiusura barra indicatore e la parentesi angolare (/<ph id="ph1">&amp;gt;</ph>) di un elemento di tag di chiusura automatica.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SelfClosingTagEnd field is used by the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method when constructing self-closing markup elements.</source>
          <target state="translated">Il campo SelfClosingTagEnd viene utilizzato il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo durante la costruzione di chiusura automatica degli elementi di markup.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Represents the semicolon (;).</source>
          <target state="translated">Rappresenta il punto e virgola (;).</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass the SemicolonChar field as the parameter argument in a &lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt; method call when you want to render a semicolon from a custom control or adapter.</source>
          <target state="translated">Passare il campo SemicolonChar come argomento di parametro in un &lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;chiamata al metodo quando si desidera eseguire il rendering di un punto e virgola da un controllo personalizzato o di un adapter.&lt;/xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Represents an apostrophe (').</source>
          <target state="translated">Rappresenta un apostrofo (').</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the SingleQuoteChar field when it is necessary to render an apostrophe.</source>
          <target state="translated">Utilizzare il campo SingleQuoteChar quando è necessario eseguire il rendering di un apostrofo.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Represents the slash mark (/).</source>
          <target state="translated">Rappresenta la barra (/).</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the SlashChar field to render the slash marks when you write a URL.</source>
          <target state="translated">Utilizzare il campo SlashChar per eseguire il rendering le barre quando si scrive un URL.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt; method uses the SlashChar field when writing the closing tag of a markup element.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;metodo utilizza il campo SlashChar quando si scrive il tag di chiusura di un elemento di markup.&lt;/xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Represents a space ( ) character.</source>
          <target state="translated">Rappresenta un carattere di spazio ().</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SpaceChar field is used by the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; and &lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt; methods when writing separators between elements and attributes.</source>
          <target state="translated">Il campo SpaceChar viene utilizzato il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;e &lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;metodi durante la scrittura di separatori tra gli elementi e attributi.&lt;/xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Represents the style equals (<bpt id="p1">&lt;xref uid="langword_csharp_:" name=":" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) character used to set style attributes equal to values.</source>
          <target state="translated">Rappresenta il (<bpt id="p1">&lt;xref uid="langword_csharp_:" name=":" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) attributi uguale ai valori di carattere utilizzato per impostare lo stile.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>The StyleEqualsChar field is used by the &lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt; method to delimit style names and values.</source>
          <target state="translated">Il campo StyleEqualsChar viene utilizzato il &lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;(metodo) per delimitare i valori e nomi di stili.&lt;/xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for the specified markup element.</source>
          <target state="translated">Ottiene o imposta il <bpt id="p1">&lt;xref href="System.Web.UI.HtmlTextWriterTag"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valore per l'elemento di codice specificato.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TagKey property is of use only to classes that inherit from the &lt;xref:System.Web.UI.HtmlTextWriter&gt; class.</source>
          <target state="translated">La proprietà con la chiave del tag può essere utilizzato solo per le classi che ereditano dalla &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should read or set the TagKey property only in a call to the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method; this is the only time it is set to a consistent value.</source>
          <target state="translated">È consigliabile leggere o impostare la proprietà la chiave del tag solo in una chiamata al &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;metodo; questo è l'unica volta impostata su un valore coerente.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The markup element that is having its opening tag rendered.</source>
          <target state="translated">Elemento di codice nel quale viene eseguito il rendering del tag di apertura.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The property value cannot be set.</source>
          <target state="translated">Impossibile impostare il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Represents the opening angle bracket (<ph id="ph1">&amp;lt;</ph>) of a markup tag.</source>
          <target state="translated">Rappresenta la parentesi angolare di apertura (<ph id="ph1">&amp;lt;</ph>) di un tag di markup.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TagLeftChar field is used by the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;, &lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;, &lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;, and &lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt; methods when writing markup tags.</source>
          <target state="translated">Il campo TagLeftChar viene utilizzato il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;, &lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;, &lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;, e &lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;metodi quando si scrive il tag di markup.&lt;/xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Gets or sets the tag name of the markup element being rendered.</source>
          <target state="translated">Ottiene o imposta il nome del tag dell'elemento di codice viene eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TagName property is of use only to classes that inherit from the &lt;xref:System.Web.UI.HtmlTextWriter&gt; class.</source>
          <target state="translated">La proprietà TagName può essere utilizzato solo per le classi che ereditano dalla &lt;xref:System.Web.UI.HtmlTextWriter&gt;classe.&lt;/xref:System.Web.UI.HtmlTextWriter&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should read or set the TagName property only in &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt; method calls; this is the only time it is set to a consistent value.</source>
          <target state="translated">È consigliabile leggere o impostare la proprietà TagName solo in &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;chiamate al metodo; questo è l'unica volta impostata su un valore coerente.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The tag name of the markup element being rendered.</source>
          <target state="translated">Il nome del tag dell'elemento di codice viene eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Represents the closing angle bracket (<ph id="ph1">&amp;gt;</ph>) of a markup tag.</source>
          <target state="translated">Rappresenta la parentesi angolare di chiusura (<ph id="ph1">&amp;gt;</ph>) di un tag di markup.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TagRightChar field is used by the &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;, &lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;, and &lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt; methods when writing markup tags.</source>
          <target state="translated">Il campo TagRightChar viene utilizzato il &lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;, &lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;, e &lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;metodi quando si scrive il tag di markup.&lt;/xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testuale di un valore booleano per il flusso di output, qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Boolean&gt; to write to the output stream.</source>
          <target state="translated">Il &lt;xref:System.Boolean&gt;per scrivere nel flusso di output.&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testo di un carattere Unicode per il flusso di output, qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The Unicode character to write to the output stream.</source>
          <target state="translated">Carattere Unicode da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testo di una matrice di caratteri Unicode nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The array of Unicode characters to write to the output stream.</source>
          <target state="translated">Matrice di caratteri Unicode da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testo di un numero a virgola mobile a precisione doppia nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">Numero a virgola mobile a precisione doppia da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testuale di un intero con segno a 32 byte nel flusso di output, insieme a qualsiasi scheda spaziatura in sospeso.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">Intero con segno a 32 byte da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testuale di un intero con segno a 64 byte nel flusso di output, insieme a qualsiasi scheda spaziatura in sospeso.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">Intero con segno a 64 byte da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Writes the text representation of an object to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testo di un oggetto nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The object to write to the output stream.</source>
          <target state="translated">Oggetto da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testo di un numero a virgola mobile e precisione singola nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The single-precision floating-point number to write to the output stream.</source>
          <target state="translated">Numero a virgola mobile a precisione singola da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Writes the specified string to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la stringa specificata nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The string to write to the output stream.</source>
          <target state="translated">Stringa da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Writes a tab string and a formatted string to the output stream, using the same semantics as the <ph id="ph1">&amp;lt;</ph>xref:System.String.Format%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method, along with any pending tab spacing.</source>
          <target state="translated">Scrive una stringa con tabulazioni e una stringa formattata per il flusso di output utilizzando la stessa semantica di <ph id="ph1">&amp;lt;</ph>xref:System.String.Format%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> metodo, insieme a qualsiasi scheda spaziatura in sospeso.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Stringa che contiene zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive una stringa formattata che contiene la rappresentazione testuale di una matrice di oggetti nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>This method uses the same semantics as the <ph id="ph1">&amp;lt;</ph>xref:System.String.Format%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">Questo metodo utilizza la stessa semantica di <ph id="ph1">&amp;lt;</ph>xref:System.String.Format%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Stringa che contiene zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>An object array to format.</source>
          <target state="translated">Matrice di oggetti da formattare.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testo di una sottomatrice di caratteri Unicode nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The array of characters from which to write text to the output stream.</source>
          <target state="translated">Matrice di caratteri da cui scrivere il testo nel flusso di output.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The index location in the array where writing begins.</source>
          <target state="translated">Posizione di indice nella matrice in cui inizia la scrittura.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The number of characters to write to the output stream.</source>
          <target state="translated">Il numero di caratteri da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive una stringa formattata che contiene la rappresentazione testo di due oggetti flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This method uses the same semantics as the <ph id="ph1">&amp;lt;</ph>xref:System.String.Format%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">Questo metodo utilizza la stessa semantica di <ph id="ph1">&amp;lt;</ph>xref:System.String.Format%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Write method generates any tabs that are pending, and then calls the &lt;xref:System.IO.TextWriter.Write%2A&gt; base method.</source>
          <target state="translated">Il metodo Write genera le tabulazioni in sospeso e quindi chiama il &lt;xref:System.IO.TextWriter.Write%2A&gt;metodo di base.&lt;/xref:System.IO.TextWriter.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Stringa che contiene zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Writes the specified markup attribute and value to the output stream.</source>
          <target state="translated">Scrive l'attributo di markup specificato e un valore per il flusso di output.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the WriteAttribute method to write markup attributes and their values with no encoding.</source>
          <target state="translated">Utilizzare il metodo WriteAttribute per scrivere attributi markup e i relativi valori senza codifica.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteAttribute method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated">Il metodo WriteAttribute scrive il valore dell'attributo racchiuso tra virgolette doppie (").</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the WriteAttribute method writes only the attribute name.</source>
          <target state="translated">Se <ph id="ph1">`value`</ph> è <ph id="ph2">`null`</ph>, il metodo WriteAttribute scrive solo il nome dell'attributo.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The attribute to write to the output stream.</source>
          <target state="translated">Attributo da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The value assigned to the attribute.</source>
          <target state="translated">Il valore assegnato all'attributo.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</source>
          <target state="translated">Scrive l'attributo di markup specificato e un valore per il flusso di output e, se specificato, scrive il valore codificato.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the WriteAttribute method to write markup attributes and their values with or without encoding.</source>
          <target state="translated">Utilizzare il metodo WriteAttribute per scrivere attributi markup e i relativi valori con o senza codifica.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteAttribute method uses the &lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt; method to do the encoding.</source>
          <target state="translated">Il metodo WriteAttribute utilizza il &lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;metodo per eseguire la codifica.&lt;/xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteAttribute method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated">Il metodo WriteAttribute scrive il valore dell'attributo racchiuso tra virgolette doppie (").</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the WriteAttribute method writes only the attribute name.</source>
          <target state="translated">Se <ph id="ph1">`value`</ph> è <ph id="ph2">`null`</ph>, il metodo WriteAttribute scrive solo il nome dell'attributo.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The markup attribute to write to the output stream.</source>
          <target state="translated">Attributo di markup da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The value assigned to the attribute.</source>
          <target state="translated">Il valore assegnato all'attributo.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to encode the attribute and its assigned value; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>per codificare l'attributo e il valore assegnato. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Scrive nel flusso di output spaziature di tabulazione e il tag di apertura dell'elemento di codice specificato.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteBeginTag method does not write the closing angle bracket (&gt;) of the markup element's opening tag.</source>
          <target state="translated">Il metodo WriteBeginTag non scrive la parentesi angolare di chiusura (&gt;) del tag di apertura dell'elemento di markup.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the writing of markup attributes to the opening tag of the element.</source>
          <target state="translated">In questo modo la scrittura di attributi di tag per il tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt; constant to close the opening tag when calling the WriteBeginTag method.</source>
          <target state="translated">Utilizzare il &lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;costante per chiudere il tag di apertura, quando si chiama il metodo WriteBeginTag.&lt;/xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the WriteBeginTag method with the &lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt; constant when you write markup elements that are self-closing.</source>
          <target state="translated">Utilizzare il metodo WriteBeginTag con la &lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;costante quando si scrivono elementi di markup a chiusura automatica.&lt;/xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteBeginTag method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</source>
          <target state="translated">Il metodo WriteBeginTag usato dai controlli server personalizzato che non consentono il mapping di attributi e tag e il rendering degli elementi di markup nello stesso modo per ogni richiesta.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The markup element of which to write the opening tag.</source>
          <target state="translated">L'elemento di markup di cui scrivere il tag di apertura.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Writes a <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;br /&amp;gt;" name="&amp;lt;br /&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> markup element to the output stream.</source>
          <target state="translated">Scrive un <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;br /&amp;gt;" name="&amp;lt;br /&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> elemento di markup nel flusso di output.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the WriteBreak method to render line breaks in custom control or adapter markup.</source>
          <target state="translated">Utilizzare il metodo WriteBreak per il rendering di interruzioni di riga in un controllo personalizzato o markup adattatore.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteBreak method writes a space between the <ph id="ph1">`br`</ph> and <ph id="ph2">`/`</ph> for improved HTML compatibility.</source>
          <target state="translated">Il metodo WriteBreak scrive uno spazio tra il <ph id="ph1">`br`</ph> e <ph id="ph2">`/`</ph> per una migliore compatibilità HTML.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Encodes the specified text for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">Codifica il testo specificato per il dispositivo richiedente e quindi lo scrive nel flusso di output.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The text string to encode and write to the output stream.</source>
          <target state="translated">La stringa di testo da codificare e scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;text&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;text&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Encodes the specified URL, and then writes it to the output stream.</source>
          <target state="translated">Codifica l'URL specificato e quindi lo scrive nel flusso di output.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The URL might include parameters.</source>
          <target state="translated">L'URL può includere parametri.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteEncodedUrl method encodes the string in the <ph id="ph1">`url`</ph> parameter in accordance with the specification for URL encoding.</source>
          <target state="translated">Il metodo WriteEncodedUrl codifica la stringa di <ph id="ph1">`url`</ph> parametro conforme alla specifica per la codifica URL.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameters that follow the question mark (?) delimiter are not encoded.</source>
          <target state="translated">I parametri che seguono il delimitatore punto interrogativo (?) non sono codificati.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The URL string to encode and write to the output stream.</source>
          <target state="translated">La stringa URL da codificare e scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">Codifica il parametro URL specificato per il dispositivo richiedente e quindi lo scrive nel flusso di output.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as <ph id="ph1">`%3d`</ph>.</source>
          <target state="translated">Gli spazi in parte il parametro di un URL sono codificati come segni più (+) e il segno di uguale (=) sono codificato come <ph id="ph1">`%3d`</ph>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>The URL parameter string to encode and write to the output stream.</source>
          <target state="translated">La stringa del parametro URL da codificare e scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Writes any tab spacing and the closing tag of the specified markup element.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione e il tag di chiusura dell'elemento di codice specificato.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt; method, the WriteEndTag method has no logic to make the element end tag match the corresponding opening tag.</source>
          <target state="translated">A differenza di &lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;(metodo), il metodo WriteEndTag non ha logica in modo che corrisponda al tag di apertura per il tag di fine elemento.&lt;/xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The element to write the closing tag for.</source>
          <target state="translated">Elemento in cui scrivere il tag di chiusura.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Scrive nel flusso di output spaziature di tabulazione e il tag di apertura dell'elemento di codice specificato.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteFullBeginTag method automatically writes the closing angle bracket (&gt;) of the opening tag of the element, unlike the &lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt; method, which does not write the closing angle bracket.</source>
          <target state="translated">Il metodo WriteFullBeginTag scrive automaticamente la parentesi angolare di chiusura (&gt;) del tag di apertura dell'elemento, a differenza di &lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;(metodo), che scrive la parentesi angolare di chiusura.&lt;/xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use WriteFullBeginTag for markup elements that have no attributes.</source>
          <target state="translated">Utilizzare WriteFullBeginTag per gli elementi di markup senza attributi.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The element to write to the output stream.</source>
          <target state="translated">Elemento da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Writes a line terminator string to the output stream.</source>
          <target state="translated">Scrive un terminatore di riga nel flusso di output.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;.</source>
          <target state="translated">Per ulteriori informazioni, vedere &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso scheda spaziatura e la rappresentazione di testo di un valore booleano, seguita da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The Boolean to write to the output stream.</source>
          <target state="translated">Valore booleano da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive un carattere Unicode, seguito da un terminatore di riga, il flusso di output e qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The character to write to the output stream.</source>
          <target state="translated">Carattere da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso scheda spaziatura e la matrice di caratteri Unicode, seguita da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>The character array to write to the output stream.</source>
          <target state="translated">Matrice di caratteri da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso scheda spaziatura e la rappresentazione di testo di un numero a virgola mobile e precisione doppia, seguita da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">Numero a virgola mobile a precisione doppia da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso scheda spaziatura e la rappresentazione di testo dell'intero con segno a 32 byte, seguita da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">Intero con segno a 32 byte da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso scheda spaziatura e la rappresentazione di testo dell'intero con segno a 64 byte, seguita da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">Intero con segno a 64 byte da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso scheda spaziatura e la rappresentazione di testo di un oggetto, seguito da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>The object to write to the output stream.</source>
          <target state="translated">Oggetto da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso scheda spaziatura e la rappresentazione di testo di un numero a virgola mobile e precisione singola, seguito da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>The single-precision floating point number to write to the output stream.</source>
          <target state="translated">Numero a virgola mobile e precisione singola da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive una stringa di testo, seguita da un terminatore di riga, il flusso di output e di qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The string to write to the output stream.</source>
          <target state="translated">Stringa da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso scheda spaziatura e la rappresentazione di testo dell'intero senza segno a 4 byte, seguita da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>The 4-byte unsigned integer to write to the output stream.</source>
          <target state="translated">Intero senza segno a 4 byte da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso spaziatura di tabulazione e una stringa formattata che contiene la rappresentazione testo di un oggetto, seguito da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteLine method uses the same semantics as the &lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt; method.</source>
          <target state="translated">Il metodo WriteLine utilizza la stessa semantica di &lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt;metodo.&lt;/xref:System.String.Format%28System.String%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Stringa che contiene zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso spaziatura di tabulazione e una stringa formattata che contiene la rappresentazione testuale di una matrice di oggetti, seguita da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteLine method uses the same semantics as the <bpt id="p1">[</bpt>Format(String, Object<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=False&amp;autoUpgrade=False)</ept> method.</source>
          <target state="translated">Il metodo WriteLine utilizza la stessa semantica di <bpt id="p1">[</bpt>formato (stringa, oggetto<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=False&amp;autoUpgrade=False)</ept> metodo.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> method.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> metodo.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Stringa che contiene zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>An object array to format.</source>
          <target state="translated">Matrice di oggetti da formattare.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso spaziatura di tabulazione e di una sottomatrice di caratteri Unicode, seguita da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>The character array from which to write text to the output stream.</source>
          <target state="translated">Matrice di caratteri da cui scrivere il testo nel flusso di output.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>The location in the character array where writing begins.</source>
          <target state="translated">Posizione nella matrice di caratteri in cui inizia la scrittura.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The number of characters in the array to write to the output stream.</source>
          <target state="translated">Il numero di caratteri nella matrice da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive in sospeso spaziatura di tabulazione e una stringa formattata che contiene la rappresentazione testo di due oggetti, seguito da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r ").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da una riga feed ("\r").</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteLine method uses the same semantics as the &lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt; method.</source>
          <target state="translated">Il metodo WriteLine utilizza la stessa semantica di &lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;metodo.&lt;/xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.TextWriter.WriteLine%2A&gt; base method is used to write the <ph id="ph1">`value`</ph> parameter.</source>
          <target state="translated">Il &lt;xref:System.IO.TextWriter.WriteLine%2A&gt;metodo di base viene utilizzata per scrivere il <ph id="ph1">`value`</ph> parametro.&lt;/xref:System.IO.TextWriter.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Stringa che contiene zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Writes a string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive una stringa, seguita da un terminatore di riga, il flusso di output.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>This method ignores any specified tab spacing.</source>
          <target state="translated">Questo metodo ignora qualsiasi spaziatura scheda specificata.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>The string to write to the output stream.</source>
          <target state="translated">Stringa da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Writes the specified style attribute to the output stream.</source>
          <target state="translated">Scrive l'attributo di stile specificato nel flusso di output.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteStyleAttribute method writes the style attribute in the following form:       <ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></source>
          <target state="translated">Il metodo WriteStyleAttribute scrive l'attributo di stile nel formato seguente: <ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph><ph id="ph4">`;`</ph></target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">Attributo di stile da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">Il valore assegnato all'attributo di stile.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</source>
          <target state="translated">Scrive l'attributo di stile specificato e un valore per il flusso di output e codifica il valore, se specificato.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteStyleAttribute method writes the style attribute in the following form:       <ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph>       The &lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt; method is used to encode the <ph id="ph5">`value`</ph> parameter.</source>
          <target state="translated">Il metodo WriteStyleAttribute scrive l'attributo di stile nel formato seguente: <ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph> il &lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;metodo viene utilizzato per codificare il <ph id="ph5">`value`</ph> parametro.&lt;/xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">Attributo di stile da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">Il valore assegnato all'attributo di stile.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to encode the style attribute and its assigned value; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>per codificare l'attributo di stile e il valore assegnato. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Writes the specified string, encoding it according to URL requirements.</source>
          <target state="translated">Scrive la stringa specificata, codifica in base ai requisiti di URL.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteUrlEncodedString method encodes characters that could be considered URL delimiters (dependent on the setting of <ph id="ph1">`argument`</ph>) into strings of the form <ph id="ph2">`%``xx`</ph>, if the ASCII code is less than 128; otherwise, <ph id="ph3">`%u``xxxx`</ph>, where <ph id="ph4">`x`</ph> is a hexadecimal digit.</source>
          <target state="translated">Il metodo WriteUrlEncodedString codifica i caratteri che possono essere considerati come delimitatori URL (dipende dall'impostazione di <ph id="ph1">`argument`</ph>) in stringhe di formato <ph id="ph2">`%``xx`</ph>, se il codice ASCII è inferiore a 128; in caso contrario, <ph id="ph3">`%u``xxxx`</ph>, dove <ph id="ph4">`x`</ph> è una cifra esadecimale.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt; and &lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt; methods use the WriteUrlEncodedString method as a utility method.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;e &lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;metodi utilizzano il metodo WriteUrlEncodedString come metodo di utilità.&lt;/xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt; &lt;/xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>The string to encode and write to the output stream.</source>
          <target state="translated">Stringa da codificare e scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to encode the string as a part of the parameter section of the URL; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to encode the string as part of the path section of the URL.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>per codificare la stringa come parte della sezione parametro dell'URL. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> per codificare la stringa come parte della sezione di percorso dell'URL.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>