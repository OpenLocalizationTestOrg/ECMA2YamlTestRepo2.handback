<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6be823a18aeb670bec163beced5a5b7bd10194c5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.PageAsyncTask.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a2964f26b17ed1beaf2f2524c4a791ad619b4b1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef3816ca2a42fd149c3e09beebef528eaf86a728</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains information about an asynchronous task registered to a page.</source>
          <target state="translated">Contiene informazioni su un'attività asincrona registrata in una pagina.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</source>
          <target state="translated">In ASP.NET versione 2.0 consente di registrare più attività in una pagina e di eseguire in modo asincrono prima del rendering della pagina.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</source>
          <target state="translated">È possibile specificare che un'attività da eseguire in modo asincrono se si tratta di un processo lento e non si desidera che altri processi rallentare mentre è in esecuzione.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The asynchronous tasks can be executed in parallel or sequentially.</source>
          <target state="translated">Le attività asincrone possono essere eseguite in parallelo o sequenziale.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A PageAsyncTask object must be registered to the page through the &lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt; method.</source>
          <target state="translated">Un oggetto PageAsyncTask deve essere registrato per la pagina tramite il &lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt;metodo.&lt;/xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The page itself does not have to be processed asynchronously to execute asynchronous tasks.</source>
          <target state="translated">La pagina stessa non deve essere elaborato in modo asincrono per eseguire attività asincrone.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">`Async`</ph> attribute to either <ph id="ph2">`true`</ph> (as shown in the following code example) or <ph id="ph3">`false`</ph> on the page directive and the asynchronous tasks will still be processed asynchronously:       <ph id="ph4">`&lt;%@ Page Async="true" %&gt;`</ph>       When the <ph id="ph5">`Async`</ph> attribute is set to <ph id="ph6">`false`</ph>, the thread that executes the page will be blocked until all asynchronous tasks are complete.</source>
          <target state="translated">È possibile impostare il <ph id="ph1">`Async`</ph> l'attributo <ph id="ph2">`true`</ph> (come illustrato nell'esempio di codice seguente) o <ph id="ph3">`false`</ph> nella pagina di direttiva e le attività asincrone verranno comunque elaborate in modo asincrono: <ph id="ph4">`&lt;%@ Page Async="true" %&gt;`</ph> quando il <ph id="ph5">`Async`</ph> attributo è impostato su <ph id="ph6">`false`</ph>, il thread che esegue la pagina verrà bloccato fino al completamento di tutte le attività asincrone.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any asynchronous tasks registered before the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event will be executed automatically by the page if they have not already been executed.</source>
          <target state="translated">Le attività asincrone registrate prima il &lt;xref:System.Web.UI.Page.PreRenderComplete&gt;evento verrà eseguito automaticamente dalla pagina se essi non sono già state eseguite.&lt;/xref:System.Web.UI.Page.PreRenderComplete&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Those asynchronous tasks registered after the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event must be executed explicitly through the &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; method.</source>
          <target state="translated">Le attività asincrone registrate dopo il &lt;xref:System.Web.UI.Page.PreRenderComplete&gt;evento devono essere eseguite in modo esplicito tramite il &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;metodo.&lt;/xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; &lt;/xref:System.Web.UI.Page.PreRenderComplete&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; method can also be used to start tasks before the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;metodo può essere utilizzato anche per avviare le attività prima di &lt;xref:System.Web.UI.Page.PreRenderComplete&gt;eventi.&lt;/xref:System.Web.UI.Page.PreRenderComplete&gt; &lt;/xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; method executes all the registered asynchronous tasks on the page that have not been executed.</source>
          <target state="translated">Il &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;metodo esegue tutte le attività asincrone registrate nella pagina che non sono state eseguite.&lt;/xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, an asynchronous task will time out if it has not completed within 45 seconds.</source>
          <target state="translated">Per impostazione predefinita, un'attività asincrona scadrà se non è stata completata entro 45 secondi.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a different time-out value in either the Web.config file or the page directive.</source>
          <target state="translated">Il file Web. config o la direttiva di pagina, è possibile specificare un valore di timeout diverso.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`&lt;pages&gt;`</ph> section of the Web.config file contains an <ph id="ph2">`asyncTimeout`</ph> attribute, as shown below.</source>
          <target state="translated">Il <ph id="ph1">`&lt;pages&gt;`</ph> sezione del file Web. config contiene un <ph id="ph2">`asyncTimeout`</ph> attributo, come illustrato di seguito.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`&lt;system.web&gt;`</ph>       <ph id="ph2">`&lt;pages asyncTimeout="30"&gt;`</ph>       <ph id="ph3">`&lt;/pages&gt;`</ph>       <ph id="ph4">`&lt;/system.web&gt;`</ph>       The page directive contains an <ph id="ph5">`AsyncTimeout`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">`&lt;system.web&gt;`</ph>       <ph id="ph2">`&lt;pages asyncTimeout="30"&gt;`</ph>       <ph id="ph3">`&lt;/pages&gt;`</ph>       <ph id="ph4">`&lt;/system.web&gt;`</ph>La direttiva di pagina contiene un <ph id="ph5">`AsyncTimeout`</ph> attributo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an event handler that enables the task to be canceled.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe utilizzando un gestore eventi che consente di annullare l'operazione.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor wraps a &lt;xref:System.Web.CancellableTaskEventHandler&gt; delegate so that the &lt;xref:System.Web.UI.PageAsyncTask&gt; object can integrate asynchronous code (based on &lt;xref:System.Threading.Tasks.Task&gt; objects) with the existing ASP.NET Web Forms asynchronous pages feature.</source>
          <target state="translated">Esegue il wrapping di questo costruttore un &lt;xref:System.Web.CancellableTaskEventHandler&gt;delegare in modo che il &lt;xref:System.Web.UI.PageAsyncTask&gt;oggetto possibile integrare codice asincrono (in base a &lt;xref:System.Threading.Tasks.Task&gt;oggetti) con la funzionalità di asincrona pagine Web Form ASP.NET esistente.&lt;/xref:System.Threading.Tasks.Task&gt; &lt;/xref:System.Web.UI.PageAsyncTask&gt; &lt;/xref:System.Web.CancellableTaskEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET will signal the &lt;xref:System.Threading.CancellationToken&gt; object that is passed to a &lt;xref:System.Web.CancellableTaskEventHandler&gt; delegate for cancellation based on the &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt; attribute set in the <ph id="ph1">`@ Page`</ph> directive of the Web page.</source>
          <target state="translated">ASP.NET segnalerà il &lt;xref:System.Threading.CancellationToken&gt;oggetto passato a un &lt;xref:System.Web.CancellableTaskEventHandler&gt;delegato per l'annullamento in base il &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;attributo impostato <ph id="ph1">`@ Page`</ph> direttiva della pagina Web.&lt;/xref:System.Web.UI.Page.AsyncTimeout%2A&gt; &lt;/xref:System.Web.CancellableTaskEventHandler&gt; &lt;/xref:System.Threading.CancellationToken&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt; value has been reached, the &lt;xref:System.Threading.CancellationToken&gt; object will be signaled.</source>
          <target state="translated">Quando il &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;valore è stato raggiunto il &lt;xref:System.Threading.CancellationToken&gt;oggetto verrà segnalato.&lt;/xref:System.Threading.CancellationToken&gt; &lt;/xref:System.Web.UI.Page.AsyncTimeout%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`CancellationToken`</ph> parameter must be passed to any asynchronous APIs that are called by your implementation of the &lt;xref:System.Web.CancellableTaskEventHandler&gt; class.</source>
          <target state="translated">Il <ph id="ph1">`CancellationToken`</ph> parametro deve essere passato a qualsiasi API asincrone che vengono chiamati dall'implementazione della &lt;xref:System.Web.CancellableTaskEventHandler&gt;classe.&lt;/xref:System.Web.CancellableTaskEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An event handler.</source>
          <target state="translated">Un gestore eventi.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an event handler that enables the task to be handled.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe utilizzando un gestore eventi che consente all'attività di gestione.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An event handler.</source>
          <target state="translated">Un gestore eventi.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the default value for executing in parallel.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe utilizzando il valore predefinito per l'esecuzione in parallelo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the constructor sets the &lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt; property to <ph id="ph1">`false`</ph> so the asynchronous task is not processed in parallel with other tasks on the page.</source>
          <target state="translated">Questa implementazione del costruttore imposta la &lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;proprietà <ph id="ph1">`false`</ph> affinché l'attività asincrona non viene elaborata in parallelo con altre attività nella pagina.&lt;/xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The handler to call when beginning an asynchronous task.</source>
          <target state="translated">Gestore da chiamare quando si inizia un'attività asincrona.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is completed successfully within the time-out period.</source>
          <target state="translated">Gestore da chiamare quando l'attività viene completato correttamente entro il periodo di timeout.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is not completed successfully within the time-out period.</source>
          <target state="translated">Gestore da chiamare quando l'attività non viene completato correttamente entro il periodo di timeout.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The object that represents the state of the task.</source>
          <target state="translated">Oggetto che rappresenta lo stato dell'attività.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">beginHandler</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">endHandler</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not specified.</source>
          <target state="translated">Il <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">beginHandler</ph> <ept id="p1">&lt;/code&gt;</ept> parametro o <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">endHandler</ph> <ept id="p2">&lt;/code&gt;</ept> parametro non viene specificato.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified value for executing in parallel.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe utilizzando il valore specificato per l'esecuzione in parallelo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</source>
          <target state="translated">Questa implementazione del costruttore consente di specificare se l'attività asincrona verrà elaborato in parallelo con altre attività nella pagina.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The handler to call when beginning an asynchronous task.</source>
          <target state="translated">Gestore da chiamare quando si inizia un'attività asincrona.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is completed successfully within the time-out period.</source>
          <target state="translated">Gestore da chiamare quando l'attività viene completato correttamente entro il periodo di timeout.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is not completed successfully within the time-out period.</source>
          <target state="translated">Gestore da chiamare quando l'attività non viene completato correttamente entro il periodo di timeout.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The object that represents the state of the task.</source>
          <target state="translated">Oggetto che rappresenta lo stato dell'attività.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the task can be processed in parallel with other tasks.</source>
          <target state="translated">Il valore che indica se l'attività può essere elaborata in parallelo con altre attività.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">beginHandler</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">endHandler</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not specified.</source>
          <target state="translated">Il <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">beginHandler</ph> <ept id="p1">&lt;/code&gt;</ept> parametro o <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">endHandler</ph> <ept id="p2">&lt;/code&gt;</ept> parametro non viene specificato.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the method to call when beginning an asynchronous task.</source>
          <target state="translated">Ottiene il metodo da chiamare quando inizia un'attività asincrona.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BeginHandler delegate is set in the constructor.</source>
          <target state="translated">Il delegato BeginHandler è impostato nel costruttore.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.BeginEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the method to call when beginning the asynchronous task.</source>
          <target state="translated">Oggetto <bpt id="p1">&lt;xref href="System.Web.BeginEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> delegato che rappresenta il metodo da chiamare quando inizia l'attività asincrona.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the method to call when the task completes successfully within the time-out period.</source>
          <target state="translated">Ottiene il metodo da chiamare quando l'attività viene completata correttamente entro il periodo di timeout.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EndHandler delegate is set in the constructor.</source>
          <target state="translated">Il delegato EndHandler è impostato nel costruttore.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the method to call when the task completes successfully within the time-out period.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> delegato che rappresenta il metodo da chiamare quando l'attività viene completata correttamente entro il periodo di timeout.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the task can be processed in parallel with other tasks.</source>
          <target state="translated">Ottiene un valore che indica se l'attività può essere elaborata in parallelo con altre attività.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ExecuteInParallel property is set in the constructor.</source>
          <target state="translated">La proprietà ExecuteInParallel è impostata nel costruttore.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple tasks are registered in a page and the ExecuteInParallel property is set to <ph id="ph1">`true`</ph>, then those tasks are processed concurrently.</source>
          <target state="translated">Quando più attività vengono registrate in una pagina e la proprietà ExecuteInParallel è impostata su <ph id="ph1">`true`</ph>, tali attività vengono elaborate simultaneamente.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the ExecuteInParallel property is set to <ph id="ph1">`false`</ph>, then those tasks are processed sequentially.</source>
          <target state="translated">Tuttavia, se la proprietà ExecuteInParallel è impostata su <ph id="ph1">`false`</ph>, tali attività vengono elaborate in sequenza.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and ExecuteInParallel is set to <ph id="ph1">`true`</ph>, both tasks will complete in 5 seconds.</source>
          <target state="translated">Ad esempio, se una pagina contiene due attività asincrone che ciascuna richiede 5 secondi per completare ed ExecuteInParallel è impostato su <ph id="ph1">`true`</ph>, entrambe le attività verranno completata entro 5 secondi.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If ExecuteInParallel is set to <ph id="ph1">`false`</ph> for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</source>
          <target state="translated">Se ExecuteInParallel è impostata su <ph id="ph1">`false`</ph> per questi due attività, quindi la prima attività verrà completata entro 5 secondi e la seconda attività 5 secondi dopo il completamento della prima attività.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the task should be processed in parallel with other tasks; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se l'attività deve essere elaborata in parallelo con altre attività. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets an object that represents the state of the task.</source>
          <target state="translated">Ottiene un oggetto che rappresenta lo stato dell'attività.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The State property is set in the constructor and cannot be modified during execution of the asynchronous task.</source>
          <target state="translated">La proprietà State è impostata nel costruttore e non può essere modificata durante l'esecuzione dell'attività asincrona.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can differentiate asynchronous tasks in a page by assigning unique string values to their respective State properties.</source>
          <target state="translated">È possibile distinguere le attività asincrone in una pagina tramite l'assegnazione di valori stringa univoci alle rispettive proprietà stato.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the state of the task.</source>
          <target state="translated">Un &lt;xref:System.Object&gt;che rappresenta lo stato dell'attività.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the method to call when the task does not complete successfully within the time-out period.</source>
          <target state="translated">Ottiene il metodo da chiamare quando l'attività non completata entro il periodo di timeout.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TimeoutHandler delegate is set in the constructor.</source>
          <target state="translated">Il delegato TimeoutHandler è impostato nel costruttore.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the method to call when the task does not complete successfully within the time-out period.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> delegato che rappresenta il metodo da chiamare quando l'attività non completata entro il periodo di timeout.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>