<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">174f0da1081f35785157244fe1d71fc69c350a80</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.SecureString.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b26f781b33daffc80c63d1ac4f68a7a5430ae291</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d18f00588ef24993438e6e7b3941d250b8f6593</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</source>
          <target state="translated">Rappresenta il testo che deve essere mantenuto riservato, ad esempio eliminandolo dalla memoria del computer quando non è più necessario.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>SecureString is a string type that provides a measure of security.</source>
          <target state="translated">SecureString è un tipo di stringa che fornisce una misura di sicurezza.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>It tries to avoid storing potentially sensitive strings in process memory as plain text.</source>
          <target state="translated">Tenta di evitare di archiviare le stringhe potrebbero contenere informazioni riservate nella memoria di processo come testo normale.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For limitations, however, see the <bpt id="p1">[</bpt>How secure is SecureString?<ept id="p1">](#HowSecure)</ept> section.) The value of an instance of SecureString is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</source>
          <target state="translated">(Per le limitazioni, tuttavia, vedere il <bpt id="p1">[</bpt>come proteggere è SecureString?<ept id="p1">](#HowSecure)</ept> sezione.) Il valore di un'istanza di SecureString viene protetto automaticamente utilizzando un meccanismo supportato dalla piattaforma sottostante, quando l'istanza è inizializzata o quando il valore viene modificato.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can render the instance immutable and prevent further modification by invoking the &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt; method.</source>
          <target state="translated">L'applicazione può eseguire il rendering di istanza non modificabile e impedire un'ulteriore modifica richiamando il &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;metodo.&lt;/xref:System.Security.SecureString.MakeReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum length of a SecureString instance is 65,536 characters.</source>
          <target state="translated">La lunghezza massima di un'istanza di SecureString è 65.536 caratteri.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Questo tipo implementa il &lt;xref:System.IDisposable&gt;interfaccia.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Al termine dell'utilizzo di un'istanza del tipo, è necessario eliminarlo direttamente o indirettamente di esso.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">Per eliminare direttamente il tipo, chiamare il relativo &lt;xref:System.IDisposable.Dispose%2A&gt;metodo in un <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> blocco.&lt;/xref:System.IDisposable.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio, ad esempio <ph id="ph1">`using`</ph> (in c#) o <ph id="ph2">`Using`</ph> (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel &lt;xref:System.IDisposable&gt;argomento relativo all'interfaccia.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SecureString class and its members are not visible to COM.</source>
          <target state="translated">La classe SecureString e i relativi membri non sono visibili a COM.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;.</source>
          <target state="translated">Per ulteriori informazioni, vedere &lt;xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;.&lt;/xref:System.Runtime.InteropServices.ComVisibleAttribute&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this section:       <bpt id="p1">[</bpt>String vs. SecureString<ept id="p1">](#vsString)</ept>     <bpt id="p2">[</bpt>SecureString operations<ept id="p2">](#Ops)</ept>     <bpt id="p3">[</bpt>SecureString and interop<ept id="p3">](#interop)</ept>     <bpt id="p4">[</bpt>How secure is  SecureString?<ept id="p4">](#HowSecure)</ept></source>
          <target state="translated">In questa sezione: <bpt id="p1">[</bpt>stringa Visual Studio. SecureString<ept id="p1">](#vsString)</ept><bpt id="p2">[</bpt>operazioni SecureString<ept id="p2">](#Ops)</ept><bpt id="p3">[</bpt>SecureString e interoperabilità<ept id="p3">](#interop)</ept><bpt id="p4">[</bpt>come proteggere è SecureString?               <ept id="p4">](#HowSecure)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="vsString"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## String versus SecureString    An instance of the &lt;xref:System.String?displayProperty=fullName&gt; class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</source>
          <target state="translated"><bpt id="p1">&lt;a name="vsString"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Stringa SecureString rispetto a un'istanza di &lt;xref:System.String?displayProperty=fullName&gt;classe non è modificabile e, quando non è più necessario, non può essere pianificata a livello di codice per l'operazione di garbage collection; l'istanza è in sola lettura dopo la creazione e non è possibile prevedere quando l'istanza verrà eliminata dalla memoria del computer.&lt;/xref:System.String?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because &lt;xref:System.String?displayProperty=fullName&gt; instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</source>
          <target state="translated">Poiché &lt;xref:System.String?displayProperty=fullName&gt;istanze non sono modificabili, operazioni che vengono visualizzati per modificare un'istanza esistente in realtà creano una copia da modificare.&lt;/xref:System.String?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, if a &lt;xref:System.String&gt; object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</source>
          <target state="translated">Di conseguenza, se un &lt;xref:System.String&gt;oggetto contiene informazioni riservate, ad esempio una password, il numero di carta di credito o dati personali, vi è un rischio per le informazioni possano essere rivelate dopo che è utilizzato in quanto l'applicazione non è possibile eliminare i dati dalla memoria del computer.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>A SecureString object is similar to a &lt;xref:System.String&gt; object in that it has a text value.</source>
          <target state="translated">Un oggetto SecureString è simile a un &lt;xref:System.String&gt;in quanto dispone di un valore di testo dell'oggetto.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the value of a SecureString object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the &lt;xref:System.Security.SecureString.Dispose%2A&gt; method  or by the .NET Framework garbage collector.</source>
          <target state="translated">Tuttavia, il valore di SecureString oggetto è bloccato in memoria, è possibile utilizzare un meccanismo di protezione, ad esempio la crittografia, fornita dal sistema operativo sottostante, può essere modificata fino a quando l'applicazione viene contrassegnato come di sola lettura e può essere eliminato dalla memoria del computer tramite l'applicazione che chiama il &lt;xref:System.Security.SecureString.Dispose%2A&gt;metodo o dal garbage collector di .NET Framework.&lt;/xref:System.Security.SecureString.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a discussion of the limitations of the SecureString class, see the <bpt id="p1">[</bpt>How secure is  SecureString?<ept id="p1">](#HowSecure)</ept> section.</source>
          <target state="translated">Per una descrizione delle limitazioni della classe SecureString, vedere il <bpt id="p1">[</bpt>come proteggere è SecureString?<ept id="p1">](#HowSecure)</ept> sezione.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="Ops"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## SecureString operations    The SecureString class includes members that allow you to do the following:       Instantiate a SecureString object    You instantiate a SecureString object by calling its parameterless constructor.</source>
          <target state="translated"><bpt id="p1">[</bpt>Torna all'inizio<ept id="p1">](#top)</ept> <bpt id="p2">&lt;a name="Ops"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # SecureString operazioni SecureString la classe include membri che consentono di eseguire le operazioni seguenti: creare un'istanza di un oggetto SecureString si crea un'istanza di un oggetto SecureString chiamando il costruttore senza parametri.      </target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add characters to a SecureString object    You can add a single character at a time to a SecureString object  by calling its &lt;xref:System.Security.SecureString.AppendChar%2A&gt; or &lt;xref:System.Security.SecureString.InsertAt%2A&gt; method.</source>
          <target state="translated">Aggiungere caratteri SecureString dell'oggetto è possibile aggiungere un singolo carattere alla volta a un oggetto SecureString chiamando il relativo &lt;xref:System.Security.SecureString.AppendChar%2A&gt;o &lt;xref:System.Security.SecureString.InsertAt%2A&gt;metodo.&lt;/xref:System.Security.SecureString.InsertAt%2A&gt; &lt;/xref:System.Security.SecureString.AppendChar%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A SecureString object should never be constructed from a &lt;xref:System.String&gt;, because the sensitive data is already subject to the memory persistence consequences of the immutable &lt;xref:System.String&gt; class.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Oggetto SecureString A mai deve essere creato da un oggetto &lt;xref:System.String&gt;in quanto i dati sensibili sono già soggetto a delle conseguenze di persistenza di memoria della classe non modificabile di &lt;xref:System.String&gt;classe.&lt;/xref:System.String&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The best way to construct a SecureString object is from a character-at-a-time unmanaged source, such as the &lt;xref:System.Console.ReadKey%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Il modo migliore per costruire un oggetto SecureString proviene da un'origine non gestita di carattere per volta, ad esempio il &lt;xref:System.Console.ReadKey%2A?displayProperty=fullName&gt;metodo.&lt;/xref:System.Console.ReadKey%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remove characters from a SecureString object    You can replace an individual character by calling the &lt;xref:System.Security.SecureString.SetAt%2A&gt; method, remove an individual character by calling the &lt;xref:System.Security.SecureString.RemoveAt%2A&gt; method, or remove all characters from the SecureString instance by calling the  &lt;xref:System.Security.SecureString.Clear%2A&gt; method.</source>
          <target state="translated">Rimuovi caratteri da SecureString dell'oggetto è possibile sostituire un singolo carattere chiamando il &lt;xref:System.Security.SecureString.SetAt%2A&gt;(metodo), rimuovere un singolo carattere chiamando il &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;metodo oppure rimuovere tutti i caratteri da SecureString istanza chiamando il &lt;xref:System.Security.SecureString.Clear%2A&gt;metodo.&lt;/xref:System.Security.SecureString.Clear%2A&gt; &lt;/xref:System.Security.SecureString.RemoveAt%2A&gt; &lt;/xref:System.Security.SecureString.SetAt%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make the SecureString object read-only    Once you have defined the string that the SecureString object represents, you call its  &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt; method to make the string read-only.</source>
          <target state="translated">Rendere l'oggetto SecureString di sola lettura dopo aver definito la stringa che rappresenta l'oggetto SecureString, chiamare il relativo &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;metodo per rendere la stringa di sola lettura.&lt;/xref:System.Security.SecureString.MakeReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Get information about the SecureString object    The SecureString class has only two members that provide information about the string: its &lt;xref:System.Security.SecureString.Length%2A&gt; property, which indicates the number of UTF16-encoded code units in the string; and the &lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;, method, which indicates whether the instance is read-only.</source>
          <target state="translated">Informazioni sull'oggetto SecureString SecureString la classe contiene solo due membri che forniscono informazioni sulla stringa di: relativo &lt;xref:System.Security.SecureString.Length%2A&gt;proprietà, che indica il numero di unità di codice UTF16 codificate nella stringa; e &lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;, metodo, che indica se l'istanza è di sola lettura.&lt;/xref:System.Security.SecureString.IsReadOnly%2A&gt; &lt;/xref:System.Security.SecureString.Length%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Release the memory allocated to the SecureString instance    Because SecureString implements the &lt;xref:System.IDisposable&gt; interface, you release its memory by calling the &lt;xref:System.Security.SecureString.Dispose%2A&gt; method.</source>
          <target state="translated">Rilasciare la memoria allocata per l'istanza di SecureString SecureString perché implementa il &lt;xref:System.IDisposable&gt;interfaccia, si rilascia la memoria chiamando la &lt;xref:System.Security.SecureString.Dispose%2A&gt;metodo.&lt;/xref:System.Security.SecureString.Dispose%2A&gt; &lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SecureString class has no members that inspect, compare, or convert the value of a SecureString.</source>
          <target state="translated">La classe SecureString non contiene membri che esaminano, confrontano o convertono il valore di SecureString.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absence of such members helps protect the value of the instance from accidental or malicious exposure.</source>
          <target state="translated">L'assenza di tali membri consente di proteggere il valore dell'istanza da un'esposizione accidentale o intenzionali.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use appropriate members of the &lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=fullName&gt; class, such as the &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt; method, to manipulate the value of a SecureString object.</source>
          <target state="translated">Utilizzare i membri appropriati del &lt;xref:System.Runtime.InteropServices.Marshal?displayProperty=fullName&gt;classe, ad esempio il &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt;(metodo), per modificare il valore di un oggetto SecureString.&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt; &lt;/xref:System.Runtime.InteropServices.Marshal?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Class Library commonly uses SecureString instances in the following ways:      -   To provide password information to a process by using the &lt;xref:System.Diagnostics.ProcessStartInfo&gt; structure or by calling an overload of the &lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=fullName&gt; method that has a parameter of type SecureString.</source>
          <target state="translated">Libreria di classi .NET Framework utilizza in genere le istanze di SecureString nei modi seguenti:, per fornire informazioni relative alle password a un processo tramite il &lt;xref:System.Diagnostics.ProcessStartInfo&gt;struttura o chiamando un overload del &lt;xref:System.Diagnostics.Process.Start%2A?displayProperty=fullName&gt;metodo che presenta un parametro di tipo SecureString.&lt;/xref:System.Diagnostics.Process.Start%2A?displayProperty=fullName&gt; &lt;/xref:System.Diagnostics.ProcessStartInfo&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   To provide network password information by calling a &lt;xref:System.Net.NetworkCredential&gt; class constructor that has a parameter of type SecureString or by using the &lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">-Per fornire informazioni sulla password di rete chiamando un &lt;xref:System.Net.NetworkCredential&gt;il costruttore di classe con un parametro di tipo SecureString o utilizzando il &lt;xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=fullName&gt;proprietà.&lt;/xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=fullName&gt; &lt;/xref:System.Net.NetworkCredential&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   To provide password information for SQL Server Authentication by calling the &lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=fullName&gt; constructor or retrieving the value of the &lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">-Per fornire informazioni relative alle password per l'autenticazione di SQL Server tramite la chiamata di &lt;xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=fullName&gt;costruttore o il recupero del valore del &lt;xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=fullName&gt;proprietà.&lt;/xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=fullName&gt; &lt;/xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   To pass a string to unmanaged code.</source>
          <target state="translated">-Per passare una stringa a codice non gestito.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">Per ulteriori informazioni, vedere il <bpt id="p1">[</bpt>SecureString e interoperabilità<ept id="p1">](#interop)</ept> sezione.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="interop"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## SecureString and interop    Because the operating system does not  directly support SecureString, you must convert the value of the SecureString object to the required string type before passing the string to a native method.</source>
          <target state="translated"><bpt id="p1">[</bpt>Torna all'inizio<ept id="p1">](#top)</ept> <bpt id="p2">&lt;a name="interop"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # SecureString e interoperabilità perché il sistema operativo non supporta direttamente SecureString, è necessario convertire il valore dell'oggetto SecureString al tipo di stringa necessarie prima di passare la stringa di un metodo nativo.      </target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.InteropServices.Marshal&gt; class has five methods that do this:      -   &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;, which converts the SecureString string value to a binary string (BSTR) recognized by COM.</source>
          <target state="translated">La &lt;xref:System.Runtime.InteropServices.Marshal&gt;classe dispone di cinque metodi di eseguire tale operazione:- &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;, che converte il valore di stringa SecureString in una stringa binaria (BSTR) riconosciuto da COM.&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.InteropServices.Marshal&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt; and &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;, which copy the SecureString string value to an ANSI string in unmanaged memory.</source>
          <target state="translated">- &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;e &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;, che copia il valore di stringa SecureString in una stringa ANSI nella memoria non gestita.&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt; and &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;, which copy the SecureString string value to a Unicode string in unmanaged memory.</source>
          <target state="translated">- &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;e &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;, che copia il valore di stringa SecureString in una stringa Unicode in memoria non gestita.&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these methods creates a clear-text string in unmanaged memory.</source>
          <target state="translated">Ognuno di questi metodi crea una stringa di testo non crittografato nella memoria non gestita.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</source>
          <target state="translated">È responsabilità dello sviluppatore per azzerare e liberare la memoria non appena non è più necessario.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:      |Allocation and conversion method|Zero and free method|   |--------------------------------------|--------------------------|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=fullName&gt;|   |&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;|&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=fullName&gt;|       <bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="HowSecure"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## How secure is SecureString?</source>
          <target state="translated">Ciascuno dei metodi di allocazione della memoria e di conversione stringa ha un metodo corrispondente per azzerare e liberare la memoria allocata: | Metodo di allocazione e la conversione | Zero e metodo free |   |--------------------------------------|--------------------------|   | &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;| &lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=fullName&gt;|   | &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;| &lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=fullName&gt;|   | &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;| &lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=fullName&gt;|   | &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;| &lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=fullName&gt;|   | &lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;| &lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=fullName&gt;|       <bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept>      <bpt id="p2">&lt;a name="HowSecure"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## How secure is SecureString?&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=fullName&gt;&lt;/xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When created properly, a SecureString instance provides more data protection than a &lt;xref:System.String&gt;.</source>
          <target state="translated">Quando creato correttamente, un'istanza di SecureString offre una protezione dati maggiore rispetto a un &lt;xref:System.String&gt;.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>When creating a string from a character-at-a-time source, &lt;xref:System.String&gt; creates multiple intermediate in memory, whereas  SecureString creates just a single instance.</source>
          <target state="translated">Quando si crea una stringa da una carattere in fase origine, &lt;xref:System.String&gt;Crea più intermedio in memoria, mentre SecureString viene creata una sola istanza.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Garbage collection of &lt;xref:System.String&gt; objects  is non-deterministic.</source>
          <target state="translated">Operazione di Garbage collection &lt;xref:System.String&gt;oggetti è non deterministico.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, because its memory is not pinned, the garbage collector will make additional copies of &lt;xref:System.String&gt; values when moving and compacting memory.</source>
          <target state="translated">Inoltre, poiché la memoria non è stato aggiunto, il garbage collector renderà copie aggiuntive di &lt;xref:System.String&gt;valori quando lo spostamento e la compattazione della memoria.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the memory allocated to a SecureString object is pinned,  and that memory can be freed by calling the &lt;xref:System.Security.SecureString.Dispose%2A&gt; method.</source>
          <target state="translated">Al contrario, la memoria allocata a un oggetto SecureString viene aggiunto e che la memoria può essere liberata chiamando la &lt;xref:System.Security.SecureString.Dispose%2A&gt;metodo.&lt;/xref:System.Security.SecureString.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although data stored in a SecureString instance is more secure than data stored in a &lt;xref:System.String&gt; instance, there are significant limitations on how secure a SecureString instance is.</source>
          <target state="translated">Anche se i dati archiviati in un'istanza di SecureString sono più sicuro rispetto ai dati archiviati in un' &lt;xref:System.String&gt;istanza, esistono numerose limitazioni in modalità di protezione valido. un'istanza SecureString&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include:       Platform    On the Windows operating system, the contents of a SecureString instance's internal character array is encrypted.</source>
          <target state="translated">Tra cui: piattaforma sul sistema operativo Windows, il contenuto della matrice di caratteri interno di un'istanza di SecureString è crittografato.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</source>
          <target state="translated">Tuttavia, se a causa di API o problemi di gestione delle chiavi mancanti, la crittografia non è disponibile in tutte le piattaforme.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of this, SecureString is available on Desktop (Windows only), and not on .NET Core.</source>
          <target state="translated">Per questo motivo, è disponibile sul Desktop (solo Windows) e non su .NET Core SecureString.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Duration    Even if the SecureString implementation is able to take advantage of encryption, the plain text assigned to the SecureString instance may be exposed at various times:      -   Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</source>
          <target state="translated">Durata anche se l'implementazione di SecureString è in grado di sfruttare i vantaggi della crittografia, il testo normale assegnato all'istanza può essere esposte in vari momenti SecureString:, perché Windows non offre un'implementazione di stringa sicura a livello di sistema operativo, .NET Framework ancora deve convertire il valore di stringa sicura nella relativa rappresentazione di testo normale per poter essere utilizzato.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Whenever the value of the secure string is modified by methods such as &lt;xref:System.Security.SecureString.AppendChar%2A&gt; or &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;, it must be decrypted (i.e., converted back to plain text), modified, and then encrypted again.</source>
          <target state="translated">-Ogni volta che viene modificato il valore della stringa protetta dai metodi, ad esempio &lt;xref:System.Security.SecureString.AppendChar%2A&gt;o &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;, deve essere decrittografato (ad esempio, convertire indietro in testo normale), modificare e quindi crittografate di nuovo.&lt;/xref:System.Security.SecureString.RemoveAt%2A&gt; &lt;/xref:System.Security.SecureString.AppendChar%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</source>
          <target state="translated">-Se la stringa sicura viene utilizzata in una chiamata di interoperabilità, è necessario convertirlo in una stringa ANSI, una stringa Unicode o una stringa binaria (BSTR).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>SecureString and interop<ept id="p1">](#interop)</ept> section.</source>
          <target state="translated">Per ulteriori informazioni, vedere il <bpt id="p1">[</bpt>SecureString e interoperabilità<ept id="p1">](#interop)</ept> sezione.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The time interval for which the SecureString instance's value is exposed  is merely shortened in comparison to the &lt;xref:System.String&gt; class.</source>
          <target state="translated">L'intervallo di tempo per cui viene esposta SecureString del valore dell'istanza viene semplicemente ridotto rispetto a quando la &lt;xref:System.String&gt;classe.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Storage versus usage    More generally, the SecureString class defines a storage mechanism for string values that should be protected or kept confidential.</source>
          <target state="translated">Archiviazione e utilizzo di più in generale, la classe SecureString definisce un meccanismo di archiviazione per i valori stringa che deve essere protetto o mantenuto riservato.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, outside of the .NET Framework itself, no usage mechanism supports SecureString.</source>
          <target state="translated">Tuttavia, di fuori di .NET Framework stesso, alcun meccanismo di utilizzo non supporta SecureString.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</source>
          <target state="translated">Ciò significa che la stringa sicura deve essere convertita in un formato utilizzabile (in genere una forma di testo non crittografato) che possa essere riconosciuto dalla relativa destinazione e che la conversione e la decrittografia deve verificarsi nello spazio utente.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overall, SecureString is more secure than &lt;xref:System.String&gt; because it limits the exposure of sensitive string data.</source>
          <target state="translated">In generale, SecureString è più sicura &lt;xref:System.String&gt;poiché limita l'esposizione dei dati di stringa sensibile.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</source>
          <target state="translated">Tuttavia, tali stringhe possono essere ancora esposte per qualsiasi operazione che ha accesso alla memoria non elaborata, ad esempio un processo dannoso in esecuzione nel computer host, un dump del processo o un file di swapping visualizzabile dall'utente o processo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of using SecureString to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</source>
          <target state="translated">Anziché utilizzare SecureString per proteggere le password, l'alternativa consigliata è di utilizzare un handle opaco per le credenziali archiviate all'esterno del processo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Back to top<ept id="p1">](#top)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Torna all'inizio<ept id="p1">](#top)</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this instance.</source>
          <target state="translated">Si è verificato un errore durante la protezione o la rimozione della protezione il valore di questa istanza.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">Questa operazione non è supportata in questa piattaforma.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from a subarray of <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objects.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe da una sottomatrice di <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This constructor is not CLS-compliant.</source>
          <target state="translated">Questo costruttore non è conforme a CLS.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The CLS-compliant alternative is <ph id="ph1">&amp;lt;</ph>xref:System.Security.SecureString.%23ctor?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">L'alternativa conforme a CLS è <ph id="ph1">&amp;lt;</ph>xref:System.Security.SecureString.%23ctor?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes the new &lt;xref:System.Security.SecureString&gt; object to the number of characters in <ph id="ph1">`value`</ph> specified by <ph id="ph2">`length`</ph>; the value of the instance is then encrypted.</source>
          <target state="translated">Questo costruttore inizializza la nuova &lt;xref:System.Security.SecureString&gt;oggetto per il numero di caratteri in <ph id="ph1">`value`</ph> specificato da <ph id="ph2">`length`</ph>; il valore dell'istanza viene quindi crittografato.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>In C#, this constructor is defined only in the context of unsafe code.</source>
          <target state="translated">In c#, questo costruttore viene definito solo nel contesto del codice unsafe.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A pointer to an array of <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objects.</source>
          <target state="translated">Un puntatore a una matrice di <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The number of elements of <ph id="ph1">`value`</ph> to include in the new instance.</source>
          <target state="translated">Il numero di elementi di <ph id="ph1">`value`</ph> da includere nella nuova istanza.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;length&lt;/code&gt;</ph> is less than zero or greater than 65,536.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;length&lt;/code&gt;</ph>è minore di zero o maggiore di 65.536.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Si è verificato un errore durante la protezione o la rimozione della protezione il valore di questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This operation is not supported on this platform.</source>
          <target state="translated">Questa operazione non è supportata in questa piattaforma.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Appends a character to the end of the current secure string.</source>
          <target state="translated">Aggiunge un carattere alla fine della stringa protetta corrente.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is appended; then the new value of the secure string is re-protected.</source>
          <target state="translated">Se l'implementazione utilizza un meccanismo di protezione, ad esempio la crittografia, il valore di questa stringa protetta, se presente, non è protetto; <ph id="ph1">`c`</ph> viene aggiunto; quindi il nuovo valore della stringa protetta è nuovo protetto.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A character to append to this secure string.</source>
          <target state="translated">Un carattere da aggiungere a questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Questa stringa protetta è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">Questa stringa protetta è di sola lettura.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">Eseguire questa operazione renderebbe la lunghezza di questa stringa protetta maggiore di 65.536 caratteri.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Si è verificato un errore durante la protezione o la rimozione della protezione il valore di questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Deletes the value of the current secure string.</source>
          <target state="translated">Elimina il valore della stringa protetta corrente.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</source>
          <target state="translated">La memoria del computer che contiene il valore di questa stringa protetta viene azzerata, quindi la lunghezza del valore di questa stringa protetta è impostata su zero.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Questa stringa protetta è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">Questa stringa protetta è di sola lettura.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current secure string.</source>
          <target state="translated">Crea una copia della stringa protetta corrente.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an instance of a &lt;xref:System.Security.SecureString&gt; is marked read-only, the copy of that instance will not be read-only.</source>
          <target state="translated">Se un'istanza di un &lt;xref:System.Security.SecureString&gt;è di sola lettura, la copia di tale istanza non sarà in sola lettura.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A duplicate of this secure string.</source>
          <target state="translated">Copia duplicata di questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Questa stringa protetta è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Si è verificato un errore durante la protezione o la rimozione della protezione il valore di questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'oggetto corrente <bpt id="p1">&lt;xref href="System.Security.SecureString"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> oggetto.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method writes binary zeroes to the allocated memory that contains the value of this &lt;xref:System.Security.SecureString&gt; object, then frees the allocated memory.</source>
          <target state="translated">Il metodo Dispose scrive zero binari per la memoria allocata che contiene il valore di questo &lt;xref:System.Security.SecureString&gt;dell'oggetto, quindi libera la memoria allocata.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Inserts a character in this secure string at the specified index position.</source>
          <target state="translated">Inserisce un carattere in questa stringa protetta nella posizione di indice specificata.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is zero-based; the first character in this secure string is at index position zero.</source>
          <target state="translated">L'indice è in base zero. il primo carattere in questa stringa protetta è nella posizione di indice zero.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is inserted at the specified index position; then the new value is re-protected.</source>
          <target state="translated">Se l'implementazione utilizza un meccanismo di protezione, ad esempio la crittografia, il valore della stringa protetta, se presente, non è protetto; <ph id="ph1">`c`</ph> viene inserito in corrispondenza della posizione di indice specificato; quindi il nuovo valore è di nuovo protetto.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InsertAt method yields the same results as the &lt;xref:System.Security.SecureString.AppendChar%2A&gt; method, which inserts a character at the end of a secure string, if the <ph id="ph1">`index`</ph> parameter of InsertAt is set to the length of this instance.</source>
          <target state="translated">Il metodo InsertAt produce gli stessi risultati di &lt;xref:System.Security.SecureString.AppendChar%2A&gt;metodo, che inserisce un carattere alla fine di una stringa sicura, se il <ph id="ph1">`index`</ph> parametro di InsertAt è impostato per la lunghezza di questa istanza.&lt;/xref:System.Security.SecureString.AppendChar%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The index position where parameter <ph id="ph1">`c`</ph> is inserted.</source>
          <target state="translated">La posizione dell'indice in cui parametro <ph id="ph1">`c`</ph> viene inserito.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The character to insert.</source>
          <target state="translated">Carattere da inserire.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Questa stringa protetta è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">Questa stringa protetta è di sola lettura.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or greater than the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>è minore di zero o maggiore della lunghezza di questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-or-       Performing this operation would make the length of this secure string greater than 65,536 characters.</source>
          <target state="translated">- oppure - questa operazione renderebbe la lunghezza di questa stringa protetta maggiore di 65.536 caratteri.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Si è verificato un errore durante la protezione o la rimozione della protezione il valore di questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Indicates whether this secure string is marked read-only.</source>
          <target state="translated">Indica se questa stringa protetta è di sola lettura.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an instance of &lt;xref:System.Security.SecureString&gt; is marked read-only by the &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt; method, any attempt to modify the value of the instance throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Dopo un'istanza di &lt;xref:System.Security.SecureString&gt;è di sola lettura dal &lt;xref:System.Security.SecureString.MakeReadOnly%2A&gt;metodo, qualsiasi tentativo di modificare il valore di istanza genera un &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Security.SecureString.MakeReadOnly%2A&gt; &lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the IsReadOnly method to test whether a &lt;xref:System.Security.SecureString&gt; is read-only before attempting to modify it.</source>
          <target state="translated">Utilizzare il metodo IsReadOnly per verificare se una &lt;xref:System.Security.SecureString&gt;è di sola lettura prima di tentare di modificare i dati.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this secure string is marked read-only; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se questa stringa protetta è contrassegnata come sola lettura. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Questa stringa protetta è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets the number of characters in the current secure string.</source>
          <target state="translated">Ottiene il numero di caratteri nella stringa protetta corrente.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Length property returns the number of &lt;xref:System.Char&gt; objects in this instance, not the number of Unicode characters.</source>
          <target state="translated">La proprietà Length restituisce il numero di &lt;xref:System.Char&gt;oggetti in questa istanza, non il numero di caratteri Unicode.&lt;/xref:System.Char&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode character might be represented by more than one &lt;xref:System.Char&gt; object.</source>
          <target state="translated">Un carattere Unicode può essere rappresentato da più &lt;xref:System.Char&gt;oggetto.&lt;/xref:System.Char&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum length of a &lt;xref:System.Security.SecureString&gt; instance is 65,536 characters.</source>
          <target state="translated">La lunghezza massima di un &lt;xref:System.Security.SecureString&gt;istanza è 65.536 caratteri.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> objects in this secure string.</source>
          <target state="translated">Il numero di <ph id="ph1">&amp;lt;</ph>xref:System.Char?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> gli oggetti in questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Questa stringa protetta è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Makes the text value of this secure string read-only.</source>
          <target state="translated">Imposta il valore di testo di questa stringa protetta di sola lettura.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initialize the text value of an instance of the &lt;xref:System.Security.SecureString&gt; class with the &lt;xref:System.Security.SecureString.%23ctor%2A&gt; constructors, and modify the value with the &lt;xref:System.Security.SecureString.Clear%2A&gt;, &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;, &lt;xref:System.Security.SecureString.SetAt%2A&gt;, &lt;xref:System.Security.SecureString.InsertAt%2A&gt;, and &lt;xref:System.Security.SecureString.AppendChar%2A&gt; methods.</source>
          <target state="translated">Inizializzare il valore di testo di un'istanza del &lt;xref:System.Security.SecureString&gt;classe con il &lt;xref:System.Security.SecureString.%23ctor%2A&gt;costruttori e modificare il valore con il &lt;xref:System.Security.SecureString.Clear%2A&gt;, &lt;xref:System.Security.SecureString.RemoveAt%2A&gt;, &lt;xref:System.Security.SecureString.SetAt%2A&gt;, &lt;xref:System.Security.SecureString.InsertAt%2A&gt;, e &lt;xref:System.Security.SecureString.AppendChar%2A&gt;metodi.&lt;/xref:System.Security.SecureString.AppendChar%2A&gt; &lt;/xref:System.Security.SecureString.InsertAt%2A&gt; &lt;/xref:System.Security.SecureString.SetAt%2A&gt; &lt;/xref:System.Security.SecureString.RemoveAt%2A&gt; &lt;/xref:System.Security.SecureString.Clear%2A&gt; &lt;/xref:System.Security.SecureString.%23ctor%2A&gt; &lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you have made your final modifications, use the MakeReadOnly method to make the value of the instance immutable (read-only).</source>
          <target state="translated">Dopo che si sono apportate le modifiche finali, utilizzare il metodo di MakeReadOnly per rendere il valore dell'istanza non modificabile (sola lettura).</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the value is marked as read-only, any further attempt to modify it throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Dopo che il valore è contrassegnato come di sola lettura, qualsiasi ulteriore tentativo di modificarlo genererà un &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The effect of invoking MakeReadOnly is permanent because the &lt;xref:System.Security.SecureString&gt; class provides no means to make the secure string modifiable again.</source>
          <target state="translated">L'effetto della chiamata MakeReadOnly è permanente perché la &lt;xref:System.Security.SecureString&gt;classe in alcun modo per rendere modificabile la stringa sicura nuovamente.&lt;/xref:System.Security.SecureString&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Security.SecureString.IsReadOnly%2A&gt; method to test whether an instance of &lt;xref:System.Security.SecureString&gt; is read-only.</source>
          <target state="translated">Utilizzare il &lt;xref:System.Security.SecureString.IsReadOnly%2A&gt;metodo per verificare se un'istanza di &lt;xref:System.Security.SecureString&gt;è di sola lettura.&lt;/xref:System.Security.SecureString&gt; &lt;/xref:System.Security.SecureString.IsReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Questa stringa protetta è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Removes the character at the specified index position from this secure string.</source>
          <target state="translated">Rimuove il carattere alla posizione di indice specificata da questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">L'indice è in base zero. il primo carattere in questa istanza è nella posizione di indice zero.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</source>
          <target state="translated">Se l'implementazione utilizza un meccanismo di protezione, ad esempio la crittografia, il valore di questa stringa protetta, se presente, non è protetto; viene rimosso il carattere alla posizione di indice specificata. quindi il nuovo valore è di nuovo protetto.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The index position of a character in this secure string.</source>
          <target state="translated">Posizione di indice di un carattere in questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Questa stringa protetta è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">Questa stringa protetta è di sola lettura.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>è minore di zero o maggiore di o uguale alla lunghezza di questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Si è verificato un errore durante la protezione o la rimozione della protezione il valore di questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Replaces the existing character at the specified index position with another character.</source>
          <target state="translated">Sostituisce il carattere esistente nella posizione di indice specificato con un altro carattere.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is zero-based; the first character in this instance is at index position zero.</source>
          <target state="translated">L'indice è in base zero. il primo carattere in questa istanza è nella posizione di indice zero.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; <ph id="ph1">`c`</ph> is assigned to the specified index position; then the new value is re-protected.</source>
          <target state="translated">Se l'implementazione utilizza un meccanismo di protezione, ad esempio la crittografia, il valore della stringa protetta, se presente, non è protetto; <ph id="ph1">`c`</ph> viene assegnato alla posizione dell'indice specificato; quindi il nuovo valore è di nuovo protetto.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The index position of an existing character in this secure string</source>
          <target state="translated">La posizione di indice di un carattere esistente in questa stringa protetta</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A character that replaces the existing character.</source>
          <target state="translated">Un carattere che sostituisce il carattere esistente.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This secure string has already been disposed.</source>
          <target state="translated">Questa stringa protetta è già stata eliminata.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This secure string is read-only.</source>
          <target state="translated">Questa stringa protetta è di sola lettura.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or greater than or equal to the length of this secure string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>è minore di zero o maggiore di o uguale alla lunghezza di questa stringa protetta.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>An error occurred while protecting or unprotecting the value of this secure string.</source>
          <target state="translated">Si è verificato un errore durante la protezione o la rimozione della protezione il valore di questa stringa protetta.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>