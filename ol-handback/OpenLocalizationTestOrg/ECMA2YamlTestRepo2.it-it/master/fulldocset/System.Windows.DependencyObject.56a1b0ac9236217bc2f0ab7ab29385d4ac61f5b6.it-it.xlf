<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef5a0217e216b89d3656c391ac24ed333d0bee7a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.DependencyObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8993e930cc698df8e580a6654583385e4bb402cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd979f5a7e3a281a1fb43a5cd55931c4bc6b079d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an object that participates in the dependency property system.</source>
          <target state="translated">Rappresenta un oggetto che fa parte del sistema di proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DependencyObject class enables <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> property system services on its many derived classes.</source>
          <target state="translated">La classe consente DependencyObject <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> servizi di sistema di proprietà nelle varie classi derivate.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system's primary function is to compute the values of properties, and to provide system notification about values that have changed.</source>
          <target state="translated">Funzione principale del sistema di proprietà è per calcolare i valori delle proprietà e per fornire la notifica di sistema sui valori che sono stati modificati.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another key class that participates in the property system is &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Un'altra classe principale che fa parte del sistema di proprietà è &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.DependencyProperty&gt; enables the registration of dependency properties into the property system, and provides identification and information about each dependency property, whereas DependencyObject as a base class enables objects to use the dependency properties.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyProperty&gt;Abilita la registrazione delle proprietà di dipendenza nel sistema di proprietà e vengono fornite informazioni di identificazione e su ogni proprietà di dipendenza, mentre DependencyObject come classe di base consente agli oggetti di usare le proprietà di dipendenza.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>DependencyObject services and characteristics include the following:      -   Dependency property hosting support.</source>
          <target state="translated">DependencyObject servizi e le caratteristiche includono i seguenti:-supporto per l'hosting delle proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You register a dependency property by calling the &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; method, and storing the method's return value as a public static field in your class.</source>
          <target state="translated">Si registra una proprietà di dipendenza chiamando il &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;metodo e archiviare il valore restituito del metodo come un campo statico pubblico nella classe.&lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Attached property hosting support.</source>
          <target state="translated">-Proprietà associata supporto per l'hosting.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You register an attached property by calling the &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; method, and storing the method's return value as a public static read-only field in your class.</source>
          <target state="translated">Si registra una proprietà associata chiamando il &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;metodo e archiviare il valore restituito del metodo come un campo di sola lettura statico pubblico nella classe.&lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>(There are also additional member requirements; note that this represents a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> specific implementation for attached properties.</source>
          <target state="translated">(Esistono requisiti di altri membri; si noti che questo rappresenta un <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> implementazione specifica per le proprietà associate.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.) Your attached property can then be set on any class that derives from DependencyObject.</source>
          <target state="translated">Per informazioni dettagliate, vedere <bpt id="p1">[</bpt>collegato Cenni preliminari sulle proprietà<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.) Quindi è possibile impostare la proprietà associata su qualsiasi classe derivata da DependencyObject.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Get, set, and clear utility methods for values of any dependency properties that exist on the DependencyObject.</source>
          <target state="translated">-Get, set e cancellare i metodi di utilità per i valori di qualsiasi proprietà di dipendenza che esiste del DependencyObject.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Metadata, coerce value support, property changed notification, and override callbacks for  dependency properties or attached properties.</source>
          <target state="translated">-I metadati, forzare il supporto di valore, proprietà notifica e i callback di sostituzione per le proprietà di dipendenza sono state modificate o le proprietà associate.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, the DependencyObject class facilitates the per-owner property metadata for a dependency property.</source>
          <target state="translated">Inoltre, la classe DependencyObject semplifica i metadati della proprietà per proprietario per una proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A common base class for classes derived from &lt;xref:System.Windows.ContentElement&gt;, &lt;xref:System.Windows.Freezable&gt;, or &lt;xref:System.Windows.Media.Visual&gt;.</source>
          <target state="translated">-Una classe di base comune per le classi derivate da &lt;xref:System.Windows.ContentElement&gt;, &lt;xref:System.Windows.Freezable&gt;, o &lt;xref:System.Windows.Media.Visual&gt;.&lt;/xref:System.Windows.Media.Visual&gt; &lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.ContentElement&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>(&lt;xref:System.Windows.UIElement&gt;, another base element class, has a class hierarchy that includes &lt;xref:System.Windows.Media.Visual&gt;.)</source>
          <target state="translated">(&lt;xref:System.Windows.UIElement&gt;, un'altra classe di elemento di base, ha una gerarchia di classi che include &lt;xref:System.Windows.Media.Visual&gt;.)&lt;/xref:System.Windows.Media.Visual&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Clears the local value of a property.</source>
          <target state="translated">Cancella il valore di una proprietà locale.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The property to be cleared is specified by a <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier.</source>
          <target state="translated">La proprietà da cancellare è specificata da un <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identificatore.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clearing the property value by calling ClearValue does not necessarily give a dependency property the default value that is specified in the dependency property metadata.</source>
          <target state="translated">Cancellare il valore della proprietà chiamando ClearValue non necessariamente fornire una proprietà di dipendenza il valore predefinito specificato nei metadati della proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clearing the property only specifically clears whatever local value may have been applied.</source>
          <target state="translated">Deselezionare la proprietà in modo specifico solo Cancella qualsiasi valore locale potrebbe essere state applicate.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>precedenza dei valori di proprietà di dipendenza<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The dependency property to be cleared, identified by a <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object reference.</source>
          <target state="translated">La proprietà di dipendenza da cancellare, identificata da un <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> riferimento all'oggetto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Attempted to call ClearValue on a sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Tentativo di chiamare ClearValue su un oggetto sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Clears the local value of a read-only property.</source>
          <target state="translated">Cancella il valore locale di una proprietà di sola lettura.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The property to be cleared is specified by a <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">La proprietà da cancellare è specificata da un <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.DependencyPropertyKey&gt; identifies a read-only dependency property for property system operations.</source>
          <target state="translated">Oggetto &lt;xref:System.Windows.DependencyPropertyKey&gt;identifica una proprietà di dipendenza di sola lettura per le operazioni di sistema di proprietà.&lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that define read-only dependency properties should not expose this key with public access.</source>
          <target state="translated">Le classi che definiscono le proprietà di dipendenza di sola lettura non devono esporre questa chiave con accesso pubblico.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>A publicly exposed key would provide a public code pathway that negated the read-only character of the property, if methods such as &lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt; or &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt; could be called outside the class or assembly, referencing the key.</source>
          <target state="translated">Fornisce un percorso di codice pubblico che nega il carattere di sola lettura della proprietà, se una chiave esposta pubblicamente metodi, ad esempio &lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;o &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;può essere chiamata all'esterno della classe o di un assembly, la chiave di riferimento.&lt;/xref:System.Windows.DependencyObject.SetValue%2A&gt; &lt;/xref:System.Windows.DependencyObject.ClearValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clearing the property value by calling ClearValue does not necessarily give a dependency property the default value that is specified in the dependency property metadata.</source>
          <target state="translated">Cancellare il valore della proprietà chiamando ClearValue non necessariamente fornire una proprietà di dipendenza il valore predefinito specificato nei metadati della proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clearing the value only specifically clears whatever local value may have been applied.</source>
          <target state="translated">La cancellazione del valore in modo specifico solo Cancella qualsiasi valore locale potrebbe essere state applicate.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>precedenza dei valori di proprietà di dipendenza<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The key for the dependency property to be cleared.</source>
          <target state="translated">La chiave per la proprietà di dipendenza da cancellare.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Attempted to call &lt;xref:System.Windows.DependencyObject.ClearValue*&gt; on a sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Tentativo di chiamare &lt;xref:System.Windows.DependencyObject.ClearValue*&gt;su un oggetto sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.DependencyObject.ClearValue*&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Coerces the value of the specified dependency property.</source>
          <target state="translated">Assegna il valore della proprietà di dipendenza specificata.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This is accomplished by invoking any <bpt id="p1">&lt;xref href="System.Windows.CoerceValueCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function specified in property metadata for the dependency property as it exists on the calling <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Questa operazione viene eseguita richiamando qualsiasi <bpt id="p1">&lt;xref href="System.Windows.CoerceValueCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> specificato nei metadati di proprietà per la proprietà di dipendenza nello stato attuale per la chiamata di funzione <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to being explicitly invoked through calling CoerceValue, the &lt;xref:System.Windows.CoerceValueCallback&gt; for a dependency property is also invoked internally whenever the dependency property value is being re-evaluated by the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system.</source>
          <target state="translated">Oltre a richiamata in modo esplicito tramite la chiamata, il valore di coercizione di &lt;xref:System.Windows.CoerceValueCallback&gt;per una dipendenza di proprietà viene anche richiamata internamente ogni volta che il valore della proprietà di dipendenza viene rivalutato dal <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> sistema di proprietà.&lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you invoke the CoerceValue method, you are ultimately invoking the coerce value callback for the property that you specify.</source>
          <target state="translated">Quando si richiama il metodo il valore di coercizione, si richiama il callback del valore soggetto a coercizione per la proprietà specificati.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically you will invoke CoerceValue only if you know that a coerce value callback exists, and if you know the callback's criteria for coercion.</source>
          <target state="translated">In genere si richiamerà il valore di coercizione solo se si conosce l'esistenza di un callback di valore soggetto a coercizione e se si conoscono i criteri del callback di coercizione.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most common scenario for calling CoerceValue is within class handling or property change callbacks of related properties that influence each other's values in a dependent way.</source>
          <target state="translated">Lo scenario più comune per chiamare il valore di coercizione è all'interno di gestione delle classi o i callback di modifica di proprietà di proprietà correlate che influenzano i rispettivi valori in modo dipendente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>convalida e i callback di proprietà di dipendenza<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The identifier for the dependency property to coerce.</source>
          <target state="translated">Identificatore della proprietà di dipendenza da assegnare.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dp</ph><ept id="p1">&lt;/code&gt;</ept> or its value were invalid or do not exist.</source>
          <target state="translated">Specificato <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">dp</ph> <ept id="p1">&lt;/code&gt;</ept> o il relativo valore non è valido o non esistono.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that wraps the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> type of this instance.</source>
          <target state="translated">Ottiene il <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che esegue il wrapping di <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> tipo di questa istanza.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is useful if an object that is returned from a method has a return value type of &lt;xref:System.Windows.DependencyObject&gt; and you want to perform property system specific operations on it depending on its type.</source>
          <target state="translated">Questa proprietà è utile se un oggetto restituito da un metodo ha un tipo di valore restituito di &lt;xref:System.Windows.DependencyObject&gt;e si desidera eseguire proprietà specifiche operazioni del sistema, a seconda del tipo.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example it is more efficient to call &lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29&gt; using the &lt;xref:System.Windows.DependencyObjectType&gt; rather than the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> type.</source>
          <target state="translated">Ad esempio risulta più efficiente chiamare &lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29&gt;utilizzando il &lt;xref:System.Windows.DependencyObjectType&gt;anziché <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> tipo.&lt;/xref:System.Windows.DependencyObjectType&gt; &lt;/xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.DependencyObjectType&gt; facilitates faster lookup.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyObjectType&gt;facilita le ricerche più veloci.&lt;/xref:System.Windows.DependencyObjectType&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that wraps the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> type of this instance.</source>
          <target state="translated">Oggetto <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che esegue il wrapping di <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> tipo di questa istanza.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Determines whether a provided <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is equivalent to the current <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Determina se l'oggetto <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> è equivalente all'oggetto corrente <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation is reference equality only, and does not attempt to evaluate value equality of the contained properties.</source>
          <target state="translated">Questa implementazione è solo l'uguaglianza dei riferimenti e non tenta di valutare l'uguaglianza di valori delle proprietà contenute.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare to the current instance.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> da confrontare con l'istanza corrente.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the two instances are the same; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se le due istanze sono uguali. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets a hash code for this <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Ottiene un codice hash per questo <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A signed 32-bit integer hash code.</source>
          <target state="translated">Codice hash di un intero con segno a 32 bit.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Creates a specialized enumerator for determining which dependency properties have locally set values on this <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Crea un enumeratore specializzato per determinare quali proprietà di dipendenza sono valori impostati localmente su questo <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <bpt id="p1">*</bpt>local value<ept id="p1">*</ept> is any dependency property value that was set by &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;, as opposed to other aspects of the property system.</source>
          <target state="translated">Oggetto <bpt id="p1">*</bpt>valore locale<ept id="p1">*</ept> è qualsiasi valore di proprietà di dipendenza che è stato impostato da &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;, a differenza di altri aspetti del sistema di proprietà.&lt;/xref:System.Windows.DependencyObject.SetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.LocalValueEnumerator&gt; obtained by calling GetLocalValueEnumerator can be used to enumerate properties that have a locally set value on a &lt;xref:System.Windows.DependencyObject&gt; instance.</source>
          <target state="translated">Il &lt;xref:System.Windows.LocalValueEnumerator&gt;ottenuto chiamando il metodo GetLocalValueEnumerator può essere utilizzata per enumerare le proprietà che hanno impostato localmente valore un &lt;xref:System.Windows.DependencyObject&gt;istanza.&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.LocalValueEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each such property is represented in the enumerator by a &lt;xref:System.Windows.LocalValueEntry&gt; object, which has properties that reference the specific &lt;xref:System.Windows.DependencyProperty&gt; and its values.</source>
          <target state="translated">Ogni proprietà è rappresentata nell'enumeratore da un &lt;xref:System.Windows.LocalValueEntry&gt;oggetto le cui proprietà che fanno riferimento specifico &lt;xref:System.Windows.DependencyProperty&gt;e i relativi valori.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.LocalValueEntry&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This technique of enumerating over the locally set values can be used for optimization or for other handling of local values, such as to determine which property values of a &lt;xref:System.Windows.DependencyObject&gt; would change if they were cleared.</source>
          <target state="translated">Questa tecnica di enumerazione impostati localmente valori utilizzabile per l'ottimizzazione o per la gestione di altro tipo di valori locali, ad esempio per determinare quali valori di proprietà di un &lt;xref:System.Windows.DependencyObject&gt;comporterebbe la modifica se cancellati.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The returned &lt;xref:System.Windows.LocalValueEnumerator&gt; might contain &lt;xref:System.Windows.LocalValueEntry&gt; records for dependency properties that are read-only, or dependency properties where values are calculated by the property system.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Restituito &lt;xref:System.Windows.LocalValueEnumerator&gt;potrebbe contenere &lt;xref:System.Windows.LocalValueEntry&gt;record per la proprietà di dipendenza che sono di sola lettura, o le proprietà di dipendenza in cui i valori vengono calcolati dal sistema di proprietà.&lt;/xref:System.Windows.LocalValueEntry&gt; &lt;/xref:System.Windows.LocalValueEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a visual framework element that has an established width through layout will report a local value for &lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;.</source>
          <target state="translated">Ad esempio, un elemento di framework visivo che ha una larghezza stabilita mediante layout indicherà un valore locale per &lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are getting local values in order to reset them, check the &lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt; value on the property identifier of each &lt;xref:System.Windows.LocalValueEntry&gt; to verify that the &lt;xref:System.Windows.DependencyProperty&gt; in question is not read-only.</source>
          <target state="translated">Se si ricevono valori locali per reimpostarli, controllare il &lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;valore nell'identificatore di proprietà di ogni &lt;xref:System.Windows.LocalValueEntry&gt;per verificare che il &lt;xref:System.Windows.DependencyProperty&gt;in questione non è in sola lettura.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.LocalValueEntry&gt; &lt;/xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A specialized local value enumerator.</source>
          <target state="translated">Un enumeratore specializzato valore locale.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns the current effective value of a dependency property on this instance of a <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Restituisce il valore effettivo corrente di una proprietà di dipendenza in questa istanza di un <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">*</bpt>effective value<ept id="p1">*</ept> is the value of the property that is returned by the property system to any caller that is requesting the value.</source>
          <target state="translated">Il <bpt id="p1">*</bpt>valore effettivo<ept id="p1">*</ept> è il valore della proprietà a qualsiasi chiamante che richiede il valore restituito dal sistema di proprietà.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The effective value is the result of the property system having evaluated all the possible inputs that participate in the property system value precedence.</source>
          <target state="translated">Il valore effettivo è il risultato del sistema di proprietà con valutati tutti i possibili input che partecipano alla precedenza dei valori di proprietà del sistema.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes coercion and animation.</source>
          <target state="translated">Ciò include la coercizione e animazione.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>precedenza dei valori di proprietà di dipendenza<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will never return &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Questo metodo non restituisce mai &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.DependencyProperty&gt; is a sentinel value for the property system that is used in various capacities internally and occasionally also exposed through coercion callbacks.</source>
          <target state="translated">Il &lt;xref:System.Windows.DependencyProperty&gt;è un valore di sentinel per il sistema di proprietà utilizzato in vario modo internamente e talvolta anche esposto mediante callback di coercizione.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are not sure what the property's type should be, you can query the identifier of the requested dependency property to determine whether there is a more specific &lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt; that the return value can be converted to.</source>
          <target state="translated">Se non si conoscono il quale deve essere il tipo della proprietà, è possibile eseguire una query l'identificatore della proprietà di dipendenza richiesta per determinare se è presente più di una specifica &lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt;che il valore restituito può essere convertito in.&lt;/xref:System.Windows.DependencyProperty.PropertyType%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier of the property to retrieve the value for.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identificatore della proprietà da recuperare il valore.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns the current effective value.</source>
          <target state="translated">Restituisce il valore effettivo corrente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dp</ph><ept id="p1">&lt;/code&gt;</ept> or its value was invalid, or the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">dp</ph><ept id="p2">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">Specificato <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">dp</ph> <ept id="p1">&lt;/code&gt;</ept> o il relativo valore non è valido oppure l'oggetto specificato <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">dp</ph> <ept id="p2">&lt;/code&gt;</ept> non esiste.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Re-evaluates the effective value for the specified dependency property</source>
          <target state="translated">Valuta di nuovo il valore effettivo della proprietà di dipendenza specificata</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call InvalidateProperty, any associated and applicable &lt;xref:System.Windows.CoerceValueCallback&gt; or &lt;xref:System.Windows.PropertyChangedCallback&gt; functions registered for that dependency property might be invoked.</source>
          <target state="translated">Quando si chiama InvalidateProperty, qualsiasi associate e applicabili &lt;xref:System.Windows.CoerceValueCallback&gt;o &lt;xref:System.Windows.PropertyChangedCallback&gt;funzioni registrate per tale proprietà di dipendenza può essere richiamata.&lt;/xref:System.Windows.PropertyChangedCallback&gt; &lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling InvalidateProperty on a property that has its local value set will have no effect, because the local value takes precedence over other property system inputs, except for animations.</source>
          <target state="translated">La chiamata di InvalidateProperty su una proprietà che è stato impostato il valore locale avrà alcun effetto, poiché il valore locale ha la precedenza su altri input di sistema di proprietà, ad eccezione delle animazioni.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you could call &lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;, then call InvalidateProperty.</source>
          <target state="translated">Tuttavia, è possibile chiamare &lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;, quindi chiamare InvalidateProperty.&lt;/xref:System.Windows.DependencyObject.ClearValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>precedenza dei valori di proprietà di dipendenza<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling InvalidateProperty is not necessarily applicable for many dependency property scenarios.</source>
          <target state="translated">La chiamata InvalidateProperty non è necessariamente applicabile per molti scenari di proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a dependency property becomes invalidated because of value changes in any of the constituents, the property system invalidates and re-evaluates the dependency property automatically.</source>
          <target state="translated">Se una proprietà di dipendenza viene invalidata a causa delle modifiche di valore in uno dei componenti, il sistema di proprietà invalida e Rivaluta automaticamente la proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, there are still some appropriate scenarios where InvalidateProperty is useful.</source>
          <target state="translated">Tuttavia, sono ancora presenti alcuni scenari appropriati in cui è utile InvalidateProperty.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, you can use InvalidateProperty inside the coerce value or property changed callback for a different dependency property.</source>
          <target state="translated">In particolare, è possibile utilizzare InvalidateProperty all'interno di soggetto a coercizione valore o della proprietà modificata callback per una proprietà di dipendenza diversa.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use InvalidateProperty to force re-evaluation of a binding against a data source that is not able to implement the recommended &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt; notification mechanism (perhaps if consuming data classes that cannot be derived from, or where the data is a static member).</source>
          <target state="translated">È inoltre possibile utilizzare InvalidateProperty per forzare una nuova valutazione di un'associazione in un'origine dati che non è in grado di implementare il &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;meccanismo di notifica (ad esempio se l'utilizzo di classi di dati che non può essere derivata da, o in cui i dati sono un membro statico).&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier of the property to invalidate.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identificatore della proprietà da invalidare.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this instance is currently sealed (read-only).</source>
          <target state="translated">Ottiene un valore che indica se questa istanza è attualmente bloccata (sola lettura).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is set internally.</source>
          <target state="translated">Questo valore è impostato internamente.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this instance is sealed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se questa istanza è sealed. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Invoked whenever the effective value of any dependency property on this <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been updated.</source>
          <target state="translated">Richiamato ogni volta che il valore effettivo di qualsiasi proprietà di dipendenza in <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> è stato aggiornato.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The specific dependency property that changed is reported in the event data.</source>
          <target state="translated">La proprietà di dipendenza specifica modificata viene segnalata nei dati dell'evento.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to generally detect individual property changes or perform invalidations of properties on a per-case basis.</source>
          <target state="translated">Questo metodo non è in genere rilevare le modifiche alle singole proprietà o eseguire le convalide di proprietà per ogni caso.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnPropertyChanged is instead intended for modifications of the general invalidation pattern, if certain information is known about wide classifications of properties.</source>
          <target state="translated">OnPropertyChanged è invece destinato alle modifiche del criterio di invalidamento generale, se sono noto determinate informazioni sulle classificazioni generali delle proprietà.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, changes in a &lt;xref:System.Windows.Freezable&gt; might be changes in the value types of the &lt;xref:System.Windows.Freezable&gt;, or might be subproperties, where the changes are within other &lt;xref:System.Windows.Freezable&gt; references.</source>
          <target state="translated">Ad esempio, modifica un &lt;xref:System.Windows.Freezable&gt;potrebbero essere modifiche nei tipi di valore del &lt;xref:System.Windows.Freezable&gt;, o potrebbero essere sottoproprietà, in cui le modifiche sono all'interno di altri &lt;xref:System.Windows.Freezable&gt;riferimenti.&lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.Freezable&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Freezable&gt; override implementation of OnPropertyChanged uses internal information to determine whether the properties are subproperties, and provides appropriate base class logic for either case.</source>
          <target state="translated">Il &lt;xref:System.Windows.Freezable&gt;implementazione dell'override di OnPropertyChanged utilizza informazioni interne per determinare se le proprietà sono sottoproprietà e fornisce la logica di classe di base appropriata per entrambi i casi.&lt;/xref:System.Windows.Freezable&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnPropertyChanged is potentially invoked many times during the life of an object.</source>
          <target state="translated">OnPropertyChanged è potenzialmente richiamato più volte durante il ciclo di vita di un oggetto.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you can achieve better performance for the overall property system if you override the metadata of specific properties and then attach &lt;xref:System.Windows.CoerceValueCallback&gt; or &lt;xref:System.Windows.PropertyChangedCallback&gt; functions for individual properties.</source>
          <target state="translated">Pertanto, è possibile ottenere un miglioramento delle prestazioni del sistema di proprietà globale se si ignora i metadati di proprietà specifiche e quindi collegare &lt;xref:System.Windows.CoerceValueCallback&gt;o &lt;xref:System.Windows.PropertyChangedCallback&gt;funzioni per le singole proprietà.&lt;/xref:System.Windows.PropertyChangedCallback&gt; &lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you would use this method if a &lt;xref:System.Windows.DependencyObject&gt; includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</source>
          <target state="translated">Tuttavia, utilizzare questo metodo se un &lt;xref:System.Windows.DependencyObject&gt;include un numero significativo di proprietà di dipendenza correlata al valore, o se include la logica, ad esempio il comportamento di rendering, che deve essere ripetuto per diversi casi correlati delle convalide di proprietà.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.</source>
          <target state="translated">Dati dell'evento che conterranno l'identificatore della proprietà di dipendenza di interesse, i metadati della proprietà per il tipo e i valori vecchi e nuovi.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns the local value of a dependency property, if it exists.</source>
          <target state="translated">Restituisce il valore locale di una proprietà di dipendenza, se presente.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt; for most typical "get" operations for a dependency property.</source>
          <target state="translated">È consigliabile utilizzare &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;per le operazioni più comuni di "get" per una proprietà di dipendenza.&lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>ReadLocalValue does not return the effective value for a variety of circumstances where the value was not locally set.</source>
          <target state="translated">ReadLocalValue non restituisce il valore effettivo per un'ampia gamma di circostanze in cui il valore non è impostato localmente.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values that are set by styles, themes, templates, the default value from metadata, or property value inheritance are not considered to be local values.</source>
          <target state="translated">Valori impostati per gli stili, temi e modelli, il valore predefinito di metadati o ereditarietà del valore di proprietà non vengono considerati come valori locali.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, bindings and other expressions are considered to be local values, after they have been evaluated.</source>
          <target state="translated">Tuttavia, associazioni e altre espressioni sono considerati valori locali, dopo aver valutati.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>When no local value is set, this method returns &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;.</source>
          <target state="translated">Quando è impostato alcun valore locale, questo metodo restituisce &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the returned value is other than &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;, you can query the metadata of the requested dependency property to determine whether there is a more specific type that the return value can be converted to.</source>
          <target state="translated">Se il valore restituito è diverso da &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;, è possibile eseguire una query di metadati della proprietà di dipendenza richiesta per determinare se è presente un tipo più specifico che il valore restituito può essere convertito in.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier of the property to retrieve the value for.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identificatore della proprietà da recuperare il valore.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Returns the local value, or returns the sentinel value <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no local value is set.</source>
          <target state="translated">Restituisce il valore locale oppure il valore di sentinel <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se è impostato alcun valore locale.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Sets the value of a dependency property without changing its value source.</source>
          <target state="translated">Imposta il valore di una proprietà di dipendenza senza modificare l'origine del valore.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used by a component that programmatically sets the value of one of its own properties without disabling an application's declared use of the property.</source>
          <target state="translated">Questo metodo viene utilizzato da un componente che a livello di codice imposta il valore di una delle sue proprietà senza disabilitare utilizzo dichiarato di un'applicazione della proprietà.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetCurrentValue method changes the effective value of the property, but existing triggers, data bindings, and styles will continue to work.</source>
          <target state="translated">Il metodo SetCurrentValue modifica il valore effettivo della proprietà, ma i trigger esistenti, le associazioni dati e stili continueranno a funzionare.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The identifier of the dependency property to set.</source>
          <target state="translated">Identificatore della proprietà di dipendenza da impostare.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The new local value.</source>
          <target state="translated">Il nuovo valore locale.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Attempted to modify a read-only dependency property, or a property on a sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Tentativo di modificare una proprietà di dipendenza di sola lettura, o una proprietà in un oggetto sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> was not the correct type as registered for the <ph id="ph2">&lt;code&gt;dp&lt;/code&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>non è del tipo corretto registrato per il <ph id="ph2">&lt;code&gt;dp&lt;/code&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Sets the local value of a dependency property, specified by its dependency property identifier.</source>
          <target state="translated">Imposta il valore locale di una proprietà di dipendenza specificata dal relativo identificatore di proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the provided type does not match the type that is declared for the dependency property as it was originally registered, an exception is thrown.</source>
          <target state="translated">Se il tipo fornito non corrisponde al tipo dichiarato per la proprietà di dipendenza in cui è stata registrata originariamente, viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter should always be provided as the appropriate type.</source>
          <target state="translated">Il <ph id="ph1">`value`</ph> deve sempre essere specificato come tipo appropriato.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception conditions are potentially influenced by the &lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt; callback that exists on the dependency property identifier of the dependency property being set.</source>
          <target state="translated">Le condizioni di eccezione sono potenzialmente influenzate dal &lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;callback esistente nell'identificatore della proprietà di dipendenza viene impostata.&lt;/xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the value provided might be failing general type-checking conditions (for example, passing a string when the native type is Double).</source>
          <target state="translated">In caso contrario, il valore fornito potrebbe essersi verificato un errore generale condizioni di controllo dei tipi (ad esempio, passando una stringa quando il tipo nativo è Double).</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The identifier of the dependency property to set.</source>
          <target state="translated">Identificatore della proprietà di dipendenza da impostare.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The new local value.</source>
          <target state="translated">Il nuovo valore locale.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Attempted to modify a read-only dependency property, or a property on a sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Tentativo di modificare una proprietà di dipendenza di sola lettura, o una proprietà in un oggetto sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> was not the correct type as registered for the <ph id="ph2">&lt;code&gt;dp&lt;/code&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>non è del tipo corretto registrato per il <ph id="ph2">&lt;code&gt;dp&lt;/code&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Sets the local value of a read-only dependency property, specified by the <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier of the dependency property.</source>
          <target state="translated">Imposta il valore locale di una proprietà di dipendenza di sola lettura, specificata tramite il <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identificatore della proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature is generally used when you set values for read-only dependency properties that are defined by your custom classes.</source>
          <target state="translated">Questa firma viene in genere utilizzata quando si impostano i valori per le proprietà di dipendenza di sola lettura che sono definiti nelle classi personalizzate.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, SetValue is called only from the type that registered that dependency property, which implements the internal logic that provides the determined value for the dependency property.</source>
          <target state="translated">SetValue in genere, viene chiamato solo dal tipo che ha registrato la proprietà di dipendenza, implementa la logica interna che fornisce il valore determinato per la proprietà di dipendenza.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Read-Only Dependency Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>le proprietà di dipendenza di sola lettura<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the provided type does not match the type that is declared for the dependency property as it was originally registered, an exception is thrown.</source>
          <target state="translated">Se il tipo fornito non corrisponde al tipo dichiarato per la proprietà di dipendenza in cui è stata registrata originariamente, viene generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter should always be provided as the appropriate type.</source>
          <target state="translated">Il <ph id="ph1">`value`</ph> deve sempre essere specificato come tipo appropriato.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception conditions are potentially influenced by the &lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt; callback that exists on the dependency property identifier of the dependency property being set.</source>
          <target state="translated">Le condizioni di eccezione sono potenzialmente influenzate dal &lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;callback esistente nell'identificatore della proprietà di dipendenza viene impostata.&lt;/xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier of the property to set.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identificatore della proprietà da impostare.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The new local value.</source>
          <target state="translated">Il nuovo valore locale.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.</source>
          <target state="translated">Restituisce un valore che indica se i processi di serializzazione devono serializzare il valore della proprietà di dipendenza specificata.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns <ph id="ph1">`true`</ph> for all cases in which a dependency property had a local value established on the &lt;xref:System.Windows.DependencyObject&gt;.</source>
          <target state="translated">L'implementazione predefinita restituisce <ph id="ph1">`true`</ph> per tutti i casi in cui una proprietà di dipendenza presenta un valore locale stabilito in &lt;xref:System.Windows.DependencyObject&gt;.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The identifier for the dependency property that should be serialized.</source>
          <target state="translated">Identificatore della proprietà di dipendenza che deve essere serializzata.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the dependency property that is supplied should be value-serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se la proprietà di dipendenza fornita deve essere eseguita la serializzazione del valore. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>