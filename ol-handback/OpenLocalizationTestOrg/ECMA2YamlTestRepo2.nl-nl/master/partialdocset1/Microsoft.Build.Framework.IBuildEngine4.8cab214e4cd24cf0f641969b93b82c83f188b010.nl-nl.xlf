<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0ca64c3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">269aca55ecece5e8d5b699ee29715a9eb0f9054f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">partialdocset1\Microsoft.Build.Framework.IBuildEngine4.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">partialdocset1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c7415364408c85090bbd635b5472ff30859d309</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f58587a9f7257643487ecdd3239c8c97523d94e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This interface extends IBuildEngine to provide a mechanism allowing tasks to share data between task invocations.</source>
          <target state="translated">Deze interface breidt IBuildEngine om aan te bieden een mechanisme waardoor het taken voor het delen van gegevens tussen aanroepen van de taak.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Retrieves a previously registered task object stored with the specified key.</source>
          <target state="translated">Een eerder geregistreerde taakobject opgeslagen met de opgegeven sleutel opgehaald.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The key used to retrieve the object.</source>
          <target state="translated">De sleutel gebruikt voor het ophalen van het object.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The lifetime of the object.</source>
          <target state="translated">De levensduur van het object.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Returns a registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.</source>
          <target state="translated">Retourneert een geregistreerde object of null als er geen object geregistreerd onder deze sleutel of als het object via vroege verzameling is verwijderd.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Registers an object with the system that will be disposed of at some specified time in the future.</source>
          <target state="translated">Registreert een object met het systeem dat op een opgegeven periode in de toekomst zal worden verwijderd.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method may be called by tasks which need to maintain state across task invocations, such as data caching tasks.</source>
          <target state="translated">Deze methode kan worden aangeroepen door taken die moeten status behouden tussen aanroepen van de taak, bijvoorbeeld gegevens opslaan in cache taken.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is strongly recommended that <ph id="ph1">`allowEarlyCollection`</ph> be set to <ph id="ph2">`true`</ph> if the object will retain any significant amount of data.</source>
          <target state="translated">Het is raadzaam die <ph id="ph1">`allowEarlyCollection`</ph> worden ingesteld op <ph id="ph2">`true`</ph> als het object, een aanzienlijke hoeveelheid gegevens behouden.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread on which the object is disposed may be arbitrarily, but it will not be disposed while the task is executing, even if <ph id="ph1">`allowEarlyCollection`</ph> is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">De thread waarop het object is afgestoten willekeurig mogelijk, maar zal niet worden verwijderd terwijl de taak wordt uitgevoerd, zelfs als <ph id="ph1">`allowEarlyCollection`</ph> is ingesteld op <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object implements IDisposable, IDisposable.Dispose will be invoked on the object before discarding it.</source>
          <target state="translated">Als het object IDisposable implementeert, wordt IDisposable.Dispose aangeroepen op het object eerst.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The key used to retrieve the object.</source>
          <target state="translated">De sleutel gebruikt voor het ophalen van het object.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The object to be held for later disposal.</source>
          <target state="translated">Het object dat hoger beschikking worden gesteld.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The lifetime of the object.</source>
          <target state="translated">De levensduur van het object.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Flag that determines whether the object can be disposed earlier than the requested time.</source>
          <target state="translated">Markering waarmee wordt aangegeven of het object ouder is dan de gevraagde tijd kan worden verwijderd.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Unregisters a previously registered task object.</source>
          <target state="translated">De registratie van een eerder geregistreerde task-object.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The key used to retrieve the object.</source>
          <target state="translated">De sleutel gebruikt voor het ophalen van het object.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The lifetime of the object.</source>
          <target state="translated">De levensduur van het object.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returns a previously registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.</source>
          <target state="translated">Retourneert een eerder geregistreerde object of null als er geen object geregistreerd onder deze sleutel of als het object via vroege verzameling is verwijderd.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>