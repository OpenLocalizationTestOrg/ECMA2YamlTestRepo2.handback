<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0ea2cc3d70d31ea2b618485cb1cc69efee45358</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.Runtime.Hosting.WorkflowRuntimeService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a17340b147f684bab395979662a3c1a6c352cc95</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e866d941252268361f63c1128395e15319ffa83c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the abstract base class from which the workflow runtime engine core services are derived.</source>
          <target state="translated">Hiermee geeft u de abstracte basisklasse waarvan de workflow runtime engine core services zijn afgeleid.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       Services that derive from the WorkflowRuntimeService class can be started and stopped by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>Services die zijn afgeleid van de klasse WorkflowRuntimeService kunnen worden gestart en gestopt door de workflow runtime engine.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order in which the services are started or stopped, however, is indeterminate, and services may require the support of other services in order to properly initialize themselves when they are started, and, conversely, may require the to support of other services in order to properly shut down when they are stopped.</source>
          <target state="translated">De volgorde waarin de services worden gestart en gestopt, is echter onbepaalde, en services kunnen de ondersteuning van andere services om te kunnen zelf juist initialiseren wanneer ze worden gestart en, als u daarentegen mogelijk de ter ondersteuning van andere services om correct afsluiten wanneer ze zijn gestopt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To address this problem, the workflow runtime engine provides two-phase mechanisms for starting and stopping services.</source>
          <target state="translated">Om dit probleem op te lossen, biedt de workflow runtime engine in twee fasen mechanismen voor het starten en stoppen van services.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; is called, the workflow runtime engine invokes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method for each of its services that derive from the WorkflowRuntimeService class.</source>
          <target state="translated">Wanneer &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;wordt aangeroepen, de workflow runtime engine roept de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;methode voor elk van de services die zijn afgeleid van de klasse WorkflowRuntimeService&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>After all of these services have been started, the workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event, which causes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; method to be invoked for each workflow runtime engine service.</source>
          <target state="translated">Nadat alle services zijn gestart, wordt de workflow runtime engine gegeven de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;gebeurtenis, waardoor de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;methode worden aangeroepen voor elke workflow runtime engine-service.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your service can override the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; method to participate in this two phase process.</source>
          <target state="translated">Uw service kunt overschrijven de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;methode deelnemen aan dit proces met twee fase.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, when &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; is called, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method, the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event, and the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; method provide this two-phase mechanism.</source>
          <target state="translated">Op dezelfde manier als &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;wordt aangeroepen, de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;methode, de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;gebeurtenis, en de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;methode levert dit mechanisme in twee fasen.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The State property contains a &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; value that indicates whether the service is in the process of starting or stopping or is completely started or stopped.</source>
          <target state="translated">De eigenschap State bevat een &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;waarde die aangeeft of de service is bezig te starten of stoppen of volledig gestart of gestopt is.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Services that derive from the WorkflowRuntimeService class can raise the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt; event when they encounter a condition that causes an unhandled exception by calling &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;.</source>
          <target state="translated">Services die zijn afgeleid van de klasse WorkflowRuntimeService kunnen de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt;gebeurtenis bij het optreden van een voorwaarde die ervoor zorgt een niet-verwerkte uitzondering dat door het aanroepen van &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt; genereren</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Services derived from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; class, and the &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt; class ultimately derives from the WorkflowRuntimeService class.</source>
          <target state="translated">Services die zijn afgeleid van de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;klasse, de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;klasse, de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;klasse, en de &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;klasse uiteindelijk is afgeleid van de klasse WorkflowRuntimeService.&lt;/xref:System.Workflow.Runtime.Tracking.TrackingService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Wanneer een geïmplementeerd in een afgeleide klasse, initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt; is initialized to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;tot &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; is geïnitialiseerd&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Started"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Hiermee geeft u de methode die wordt aangeroepen wanneer de werkstroom-runtime-engine wordt gegeven wanneer overschreven in een afgeleide klasse, de <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Started"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebeurtenis.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class implements a two-phase starting mechanism so that workflow runtime engine services may perform any initialization that depends on other services after the workflow runtime engine has invoked the  &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method for all of its workflow runtime engine services.</source>
          <target state="translated">De &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;klasse implementeert een mechanisme voor in twee fasen begin zodat workflow runtime engine-services kunnen initialisatie die afhankelijk zijn van andere services nadat de workflow runtime engine is aangeroepen uitvoeren de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;methode voor alle van de workflow runtime engine-services.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the workflow runtime engine has called the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method of all of its workflow runtime engine services, it raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event.</source>
          <target state="translated">Na de workflowruntime engine is aangeroepen de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;methode van alle van de workflow runtime engine-services, wordt de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;gebeurtenis.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override the OnStarted method to provide any final startup functionality required by your service when the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">U kunt de methode OnStarted voor starten van de laatste functionaliteit vereist zijn voor uw service negeren wanneer de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;gebeurtenis is opgetreden.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The mechanics of subscribing and unsubscribing from the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event is handled internally.</source>
          <target state="translated">Het mechanisme van abonneren en u zich afmeldt bij de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;gebeurtenis intern wordt verwerkt.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your service is added to the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; after the workflow runtime engine has already been started, the workflow runtime engine will call &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Als uw service wordt toegevoegd aan de workflow runtime engine door een aanroep naar &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;nadat de workflow runtime engine al gestart is, de workflow runtime engine belt &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;op uw service.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in this situation, the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt; event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in OnStarted from inside the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method.</source>
          <target state="translated">In dit geval kan echter de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;gebeurtenis al is gebeurd, daarom uw service mogelijk moet u de initialisatie die het normaal zou uitvoeren in OnStarted uit binnen de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;methode.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine has been started.</source>
          <target state="translated">U kunt testen &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;om te bepalen of de workflow runtime engine is gestart.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt; is set to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; before OnStarted is invoked.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;is ingesteld op &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;voordat OnStarted wordt aangeroepen.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of OnStarted performs no action.</source>
          <target state="translated">De standaardimplementatie van OnStarted uitvoert geen actie.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Stopped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Hiermee geeft u de methode die wordt aangeroepen wanneer de werkstroom-runtime-engine wordt gegeven wanneer overschreven in een afgeleide klasse, de <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Stopped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebeurtenis.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class implements a two-phase stopping mechanism so that workflow runtime engine services may retain some functionality after their &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method is invoked by the workflow runtime engine in order that they may, if necessary, support the shutdown of other services.</source>
          <target state="translated">De &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;klasse implementeert een mechanisme in twee fasen moet worden gestopt zodat workflow runtime engine-services kunnen bepaalde functionaliteit na behouden hun &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;methode wordt aangeroepen door de workflow runtime engine ervoor te zorgen dat ze kunnen, indien nodig, ondersteuning voor het afsluiten van andere services.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the workflow runtime engine has called the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method of all of its workflow runtime engine services, it raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event.</source>
          <target state="translated">Na de workflowruntime engine is aangeroepen de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;methode van alle van de workflow runtime engine-services, wordt de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;gebeurtenis.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override the OnStopped method to provide any final shutdown functionality required by your service when the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">U kunt de methode OnStopped voor laatste afsluiten functionaliteit vereist zijn voor uw service negeren wanneer de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;gebeurtenis is opgetreden.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The mechanics of subscribing and unsubscribing from the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event is handled internally.</source>
          <target state="translated">Het mechanisme van abonneren en u zich afmeldt bij de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;gebeurtenis intern wordt verwerkt.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; is removed from the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt; while the workflow runtime engine is running, the workflow runtime engine will call &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Als uw &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;wordt verwijderd uit de workflow runtime engine door een aanroep naar &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;terwijl de workflow runtime engine wordt uitgevoerd, de workflow runtime engine roept &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;op uw service.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in this situation, the OnStopped method will not be called for your service.</source>
          <target state="translated">Echter, in dit geval kan de methode OnStopped wordt niet worden aangeroepen voor uw service.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, your service may have to perform any final shutdown that it would ordinarily perform in OnStopped from inside the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method.</source>
          <target state="translated">Daarom uw service heeft misschien definitieve afsluiten die het normaal zou uitvoeren in OnStopped uit binnen de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;methode.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine is running.</source>
          <target state="translated">U kunt testen &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;om te bepalen of de workflow runtime engine wordt uitgevoerd.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt; is set to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; before OnStopped is invoked.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;is ingesteld op &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;voordat OnStopped wordt aangeroepen.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of OnStopped performs no action.</source>
          <target state="translated">De standaardimplementatie van OnStopped uitvoert geen actie.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Geeft de <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebeurtenis.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your service can call RaiseServicesExceptionNotHandledEvent to raise the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt; event when it encounters an exception that it cannot handle during its execution.</source>
          <target state="translated">Uw service kunt aanroepen RaiseServicesExceptionNotHandledEvent om te genereren voor de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt;-gebeurtenis geactiveerd wanneer er een uitzondering die deze niet kan tijdens de uitvoering verwerken wordt aangetroffen.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should pass the &lt;xref:System.Guid&gt; of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">U moet doorgeven in de &lt;xref:System.Guid&gt;van het workflowexemplaar gekoppeld aan de niet-verwerkte uitzondering.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a timer service might pass the &lt;xref:System.Guid&gt; associated with the timer for which the exception occurred.</source>
          <target state="translated">Bijvoorbeeld, een timer-service mogelijk slaagt de &lt;xref:System.Guid&gt;die zijn gekoppeld aan de timer waarvoor de uitzondering is opgetreden.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The exception that could not be handled.</source>
          <target state="translated">De uitzondering die kan niet worden verwerkt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">De &lt;xref:System.Guid&gt;van het workflowexemplaar gekoppeld aan de niet-verwerkte uitzondering.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this service.</source>
          <target state="translated">Haalt de <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor deze service.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine sets this property before it calls &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; on the service.</source>
          <target state="translated">De workflow runtime engine deze eigenschap wordt ingesteld voordat deze roept &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;op de service.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, starts the service and changes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt; to <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, start de service en de wijzigingen de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt;naar <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Start is invoked by the workflow runtime engine on all of its services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class when &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; is called.</source>
          <target state="translated">Start wordt aangeroepen door de workflow runtime engine op alle bijbehorende services die zijn afgeleid van de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;klasse wanneer &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;wordt aangeroepen.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Start is also invoked by the workflow runtime engine when a workflow runtime engine service is added to the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; after the workflow runtime engine has already started.</source>
          <target state="translated">Start, wordt ook aangeroepen door de workflow runtime engine wanneer een workflow runtime engine-service wordt toegevoegd aan de workflow runtime engine door een aanroep naar &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;nadat de workflow runtime engine is al gestart.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of Start tracks whether the service has been started and uses this information to throw the appropriate exception if the service is started while it is already running.</source>
          <target state="translated">De standaardimplementatie van starten verifieert of de service is gestart en deze informatie gebruikt om de juiste uitzondering te genereren als de service is gestart, terwijl het al wordt uitgevoerd.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can provide additional functionality necessary to have your service started by the workflow runtime engine by overriding this method.</source>
          <target state="translated">U kunt aanvullende functionaliteit die nodig zijn voor uw service gestart door de workflow runtime engine deze methode overschrijft opgeven.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no guarantee about which, if any, services will be running when the workflow runtime engine calls Start on your service.</source>
          <target state="translated">Er is geen garantie over welke, indien van toepassing, services worden uitgevoerd wanneer de workflow runtime engine Start in de service aanroept.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, in the Start method, you should only perform any initialization that does not depend on functionality provided by other services.</source>
          <target state="translated">Daarom in de methode Start uitvoeren u alleen elke initialisatie die is niet afhankelijk van functionaliteit die door andere services.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes functionality provided by core services such as the scheduler service.</source>
          <target state="translated">Dit omvat de functionaliteit van core services, zoals de scheduler-service.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event after it has called the Start method of all of its workflow runtime engine services.</source>
          <target state="translated">De workflow runtime engine verhoogt de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;gebeurtenis nadat deze is aangeroepen met de methode Start van alle van de workflow runtime engine-services.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your service requires additional initialization after all of the workflow runtime engine services have been started, you can override the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; method in order to perform this initialization when the Start event is raised.</source>
          <target state="translated">Als uw service aanvullende initialisatie vereist nadat alle workflow runtime engine-services zijn gestart, kunt u overschrijven de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;methode om te kunnen deze initialisatie uitvoeren wanneer de begin-gebeurtenis wordt geactiveerd.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your service is added to the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; after the workflow runtime engine has already been started, the workflow runtime engine will call Start on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Als uw service wordt toegevoegd aan de workflow runtime engine door een aanroep naar &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;nadat de workflow runtime engine al gestart is, Start op uw service op de workflow runtime engine belt.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in this situation, the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt; event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; from inside the Start method.</source>
          <target state="translated">In dit geval kan echter de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;gebeurtenis al is gebeurd, daarom uw service mogelijk moet u de initialisatie die het normaal zou uitvoeren in &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;uit binnen de begin-methode.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine has been started.</source>
          <target state="translated">U kunt testen &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;om te bepalen of de workflow runtime engine is gestart.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Start should only be called by the workflow runtime engine.</source>
          <target state="translated">Start mag alleen worden aangeroepen door de workflow runtime engine.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt; is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)       -or-       The service has already been started.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;is een null-verwijzing (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) - of - de service is al gestart.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the state of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee wordt de status van de <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class implements two-phase mechanisms for both starting and stopping a workflow runtime engine service.</source>
          <target state="translated">De &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;klasse implementeert in twee fasen mechanismen voor zowel starten en stoppen van een workflow runtime engine-service.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first phase of the start mechanism begins when the workflow runtime engine calls the implementation of the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method for the service.</source>
          <target state="translated">De eerste fase van het mechanisme voor begin begint wanneer de werkstroom-runtime-engine de uitvoering van roept de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;methode voor de service.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should call the base implementation of &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;, which sets State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">Deze methode moet aanroepen de basisimplementatie van &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;, die de status &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; ingesteld&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second phase occurs after the workflow runtime engine starts all of its workflow runtime engine services when it raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt; event.</source>
          <target state="translated">De tweede fase vindt plaats nadat de workflow runtime engine alle van de workflow runtime engine-services start wanneer er wordt een gegeven de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;gebeurtenis.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; internally manages a subscription to this event and its handler will set State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">De &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;intern beheert een abonnement op deze gebeurtenis en de handler kan de status wordt ingesteld op &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two-phase mechanism for stopping a workflow runtime engine service begins when the workflow runtime engine calls the implementation of the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method for the service.</source>
          <target state="translated">Het mechanisme voor in twee fasen voor het stoppen van een workflow runtime engine-service wordt gestart wanneer de werkstroom-runtime-engine de uitvoering van roept de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;methode voor de service.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should call the base implementation of &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;, which sets State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">Deze methode moet aanroepen de basisimplementatie van &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;, die de status &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; ingesteld&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>After it has stopped all of its workflow runtime engine services, the workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt; event.</source>
          <target state="translated">Nadat het alle van de workflow runtime engine-service is gestopt, worden de workflow runtime engine gegeven de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;gebeurtenis.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; internally manages a subscription to this event and its handler will set State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">De &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;intern beheert een abonnement op deze gebeurtenis en de handler kan de status wordt ingesteld op &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Een van de <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, stops the service and changes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt; to <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, stopt de service en de wijzigingen de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt;naar <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stop is invoked by the workflow runtime engine on all of its services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class when &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; is called.</source>
          <target state="translated">Stop is aangeroepen door de workflow runtime engine op alle bijbehorende services die zijn afgeleid van de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;klasse wanneer &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;wordt aangeroepen.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stop is also invoked by the workflow runtime engine when a workflow runtime engine service is removed from the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;.</source>
          <target state="translated">Stop wordt ook aangeroepen door de workflow runtime engine wanneer een workflow runtime engine-service wordt verwijderd uit de workflow runtime engine door een aanroep naar &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of Stop tracks whether the service has been started and uses this information to throw the appropriate exception if the service is stopped before it is started.</source>
          <target state="translated">De standaardimplementatie van Stop verifieert of de service is gestart en deze informatie gebruikt om de juiste uitzondering te genereren als de service wordt gestopt voordat deze wordt gestart.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can provide additional functionality necessary to have your service stopped by the workflow runtime engine by overriding this method.</source>
          <target state="translated">U kunt aanvullende functionaliteit die nodig is om de service is gestopt door de workflow runtime engine deze methode overschrijft opgeven.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no guarantee about which, if any, services will be stopped or running when Stop is called on your service.</source>
          <target state="translated">Er is geen garantie over welke, indien aanwezig, worden services worden gestopt of het uitvoeren wanneer Stop is aangeroepen in de service.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event after it has called the Stop method of all of its workflow runtime engine services.</source>
          <target state="translated">De workflow runtime engine verhoogt de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;gebeurtenis nadat deze is aangeroepen de methode stoppen van alle van de workflow runtime engine-services.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your service may need to retain some residual functionality to support other services until all the workflow runtime engine services have had their stop methods invoked by the workflow runtime engine.</source>
          <target state="translated">Uw service moet mogelijk bepaalde achtergebleven functionaliteit ter ondersteuning van andere services totdat alle workflow runtime engine-services hebben gehad hun stopmethoden is aangeroepen door de workflow runtime engine behouden.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your service must retain such functionality, you can override the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; method to perform any additional action required to finish stopping your service when the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">Als uw service een dergelijke functionaliteit behouden moet, kunt u overschrijven de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;verdere actie vereist voor het voltooien van uw service wordt gestopt uitvoeren wanneer de &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;gebeurtenis is opgetreden.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; is removed from the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt; while the workflow runtime engine is running, the workflow runtime engine will call Stop on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Als uw &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;wordt verwijderd uit de workflow runtime engine door een aanroep naar &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;terwijl de workflow runtime engine wordt uitgevoerd, de workflow runtime engine stoppen wordt gebeld op uw service.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in this situation, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; method will not be called for your service.</source>
          <target state="translated">In dit geval kan echter de &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;methode wordt niet aangeroepen voor uw service.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, your service may have to perform any additional shutdown functionality that it would ordinarily perform in &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; from inside the Stop method.</source>
          <target state="translated">Daarom uw service mogelijk moet u extra afsluiten functionaliteit die het normaal zou uitvoeren in &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;uit binnen de methode stoppen.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine is running.</source>
          <target state="translated">U kunt testen &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;om te bepalen of de workflow runtime engine wordt uitgevoerd.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stop should only be called by the workflow runtime engine.</source>
          <target state="translated">Stop mag alleen worden aangeroepen door de workflow runtime engine.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt; is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;is een null-verwijzing (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-or-       The service has not yet been started.</source>
          <target state="translated">- of - de service nog niet is gestart.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>