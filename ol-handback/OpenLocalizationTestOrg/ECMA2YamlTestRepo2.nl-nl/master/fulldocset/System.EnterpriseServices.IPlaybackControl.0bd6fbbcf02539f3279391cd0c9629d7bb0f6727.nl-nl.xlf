<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee634ddf2e70e13eaf848262fa211ff6f3de6658</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.EnterpriseServices.IPlaybackControl.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a36c027bfb40f64b135e6abdd37fb79846420b2a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0eaf0e8b91ab41a16371307438159c713a6199b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Functions in Queued Components in the abnormal handling of server-side playback errors and client-side failures of the Message Queuing delivery mechanism.</source>
          <target state="translated">Functies in de wachtrij-onderdelen in de abnormale afhandeling van fouten afspelen serverzijde en clientzijde fouten van Message Queuing-bezorgingsmechanisme.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception class defined for the component in the COM+ catalog implements both IPlaybackControl and the interface for the original class.</source>
          <target state="translated">De uitzonderingsklasse gedefinieerd voor het onderdeel in de COM +-catalogus wordt geïmplementeerd voor zowel IPlaybackControl als de interface voor de oorspronkelijke klasse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method implementations of the original class interface are used to perform the exception handling for the failed methods in the class itself.</source>
          <target state="translated">De methode implementaties van de oorspronkelijke klasseninterface worden gebruikt voor het uitvoeren van de uitzondering verwerking voor de mislukte methoden in de klasse zelf.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>They will be called after &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt; or &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt; to process exceptions for the method originally called.</source>
          <target state="translated">Ze worden aangeroepen nadat &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;of &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;voor het verwerken van uitzonderingen voor de methode aangeroepen oorspronkelijk.&lt;/xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt; &lt;/xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Queued Components Player calls the methods of IPlaybackControl to inform the exception-handler object that a message is about to be placed on the final resting or dead letter queue.</source>
          <target state="translated">De onderdelen in de wachtrij speler roept de methoden van IPlaybackControl om te informeren over de uitzonderings-handler object dat een bericht wordt op de laatste rusten of wachtrij voor onbestelbare wachtrij worden geplaatst.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Queued Components Player then calls the same method in the exception-handler object that had failed in the original method call.</source>
          <target state="translated">De onderdelen in de wachtrij speler roept vervolgens dezelfde methode in een uitzonderingshandler object dat in de oorspronkelijke methodeaanroep is mislukt.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception-handler object can implement an alternative, for example, by gathering problem diagnosis information or generating an object or message that informs the client of the problem.</source>
          <target state="translated">De uitzonderings-handler object kunt bijvoorbeeld een alternatief implementeren door probleem diagnose informatie verzamelen of het genereren van een object of het bericht dat informeert het de client van het probleem.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application does not implement IPlaybackControl, the poison message is placed on the final resting or dead letter queue when the Queued Components Player exhausts all retries.</source>
          <target state="translated">Als de toepassing wordt niet geïmplementeerd voor IPlaybackControl, is verontreinigd bericht op de laatste rusten of wachtrij voor onbestelbare wachtrij geplaatst wanneer de onderdelen in de wachtrij speler leidt tot uitputting van alle nieuwe pogingen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A poison message is a message that cannot be processed for some reason, perhaps because of a problem with the server or queuing system.</source>
          <target state="translated">Een poison-bericht is een bericht dat voor een bepaalde reden, mogelijk vanwege een probleem met de server of queueing-systeem kan niet worden verwerkt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction is rolled back, and the poison message goes to the top of the queue.</source>
          <target state="translated">De transactie wordt teruggedraaid en gaat het verontreinigd bericht naar de bovenkant van de wachtrij.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the message is dequeued again, the same condition occurs.</source>
          <target state="translated">Wanneer het bericht uit opnieuw wachtrij geplaatst is, treedt dezelfde voorwaarde op.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This message can continue looping indefinitely until something is done to correct the problem.</source>
          <target state="translated">Dit bericht kunt blijven herhalen voor onbepaalde tijd tot iets is klaar om het probleem te verhelpen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Queued Components service handles the poison message by using a series of retries.</source>
          <target state="translated">De service onderdelen in de wachtrij verwerkt verontreinigd bericht met behulp van een aantal nieuwe pogingen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>After several unsuccessful retries, the message is moved to a final resting queue.</source>
          <target state="translated">Na meerdere mislukte pogingen, wordt het bericht verplaatst naar een definitieve verwerken wachtrij.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Poison messages remain in the resting queue until manually moved by using the Queued Components Message Mover tool.</source>
          <target state="translated">Verontreinigde berichten blijven in de verwerken wachtrij totdat handmatig worden verplaatst met behulp van het hulpprogramma onderdelen bericht Mover in de wachtrij.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The poison message situation can also be resolved programmatically, using the &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt; method, which informs the server-side component author that all attempts to play back the deferred activation have failed.</source>
          <target state="translated">De situatie verontreinigd bericht kan ook worden opgelost programmatisch met behulp van de &lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;methode, waarmee informeert de auteur van het server-side-onderdeel dat alle pogingen om af te spelen de uitgestelde activering is mislukt.&lt;/xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you discover a poison message, you might be able to solve the underlying cause of the problem quickly.</source>
          <target state="translated">Als u een poison-bericht detecteren, is het mogelijk dat u kunt snel de oorzaak van het probleem oplossen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the server was offline for some reason, you can bring the server back online.</source>
          <target state="translated">Als de server voor een bepaalde reden offline was, kunt u bijvoorbeeld de server weer online brengen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you cannot solve the problem quickly, you can automatically generate another transaction that notifies the requestor that the transaction did not occur.</source>
          <target state="translated">Als u het probleem niet snel kunt oplossen, kunt u een andere transactie melding van de aanvrager die de transactie kwam niet automatisch genereren.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The requestor can then make a compensating transaction that reverses the effect of a transaction that has already committed.</source>
          <target state="translated">De aanvrager kan vervolgens maken van een compensatie transactie wordt teruggedraaid het effect van een transactie die al is doorgevoerd.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Informs the client-side exception-handling component that all Message Queuing attempts to deliver the message to the server were rejected, and the message ended up on the client-side Xact Dead Letter queue.</source>
          <target state="translated">De clientonderdelen afhandeling van uitzonderingen informeert dat alle Message Queuing pogingen tot het leveren van het bericht met de server is geweigerd en het bericht uiteindelijk in de wachtrij van client-side Xact onbestelbare berichten.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>As messages arrive in the Xact Dead Letter queue, COM+ attempts to invoke a client-side exception handler related to the server class to deliver this notification.</source>
          <target state="translated">Als berichten in de wachtrij voor onbestelbare Xact binnenkomen, probeert COM + aan te roepen van een client-side '-uitzonderings-handler die betrekking hebben op de server-klasse voor het leveren van deze melding.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does so by first calling FinalClientRetry, then calling the exception-handling version of the failed method in the exception-handler object.</source>
          <target state="translated">Dit gebeurt door eerst aanroepen FinalClientRetry en vervolgens de afhandeling van uitzonderingen-versie van de mislukte methode aanroepen in de uitzonderings-handler object.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</source>
          <target state="translated">Deze methode uitzondering kan vervolgens een uitzondering een actie uitvoert, zoals de mislukte poging, een e-mailbericht verzenden naar de beheerder of verholpen aan de clientzijde compensatie (het effect van een eerdere transactie omgekeerd).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the exception method is not successful, the message is left on the Xact Dead Letter queue.</source>
          <target state="translated">Als de methode uitzondering niet lukt, blijft het bericht in de wachtrij voor onbestelbare Xact.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Xact Dead Letter queue can be viewed in the Microsoft Message Queue (MSMQ) Explorer.</source>
          <target state="translated">De wachtrij voor onbestelbare Xact kan worden weergegeven in de Verkenner Microsoft Message Queue (MSMQ).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Informs the server-side exception class implementation that all attempts to play back the deferred activation to the server have failed, and the message is about to be moved to its final resting queue.</source>
          <target state="translated">De implementatie van de klasse serverzijde uitzondering informeert dat alle pogingen om af te spelen de uitgestelde activering met de server is mislukt en het bericht wordt verplaatst naar de uiteindelijke verwerken wachtrij.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>As messages arrive on the Xact Dead Letter queue, COM+ attempts to invoke a server-side exception handler related to the server class to deliver this notification.</source>
          <target state="translated">Als berichten op de wachtrij voor onbestelbare Xact binnenkomen, probeert COM + aan te roepen een uitzonderingshandler met serverzijde die betrekking hebben op de server-klasse voor het leveren van deze melding.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does so by first calling FinalServerRetry, then calling the exception handling version of the failed method in the exception handler object.</source>
          <target state="translated">Dit gebeurt door eerst aanroepen FinalServerRetry en vervolgens het aanroepen van de versie van de mislukte methode in het object exception handler verwerking van uitzonderingen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</source>
          <target state="translated">Deze methode uitzondering kan vervolgens een uitzondering een actie uitvoert, zoals de mislukte poging, een e-mailbericht verzenden naar de beheerder of verholpen aan de clientzijde compensatie (het effect van een eerdere transactie omgekeerd).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The server object should make every effort to complete this transaction successfully.</source>
          <target state="translated">Het serverobject moet mijden voltooien van deze transactie.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, manual intervention is required to reprocess the message.</source>
          <target state="translated">Anders is handmatige tussenkomst vereist voor het opnieuw verwerken van het bericht.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the exception method is not successful, the message is moved to the final resting queue.</source>
          <target state="translated">Als de methode uitzondering niet lukt, wordt het bericht wordt verplaatst naar de uiteindelijke verwerken wachtrij.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>