<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5479a898a3ef78f367257619274f4f91aae2f515</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.ComponentSerializationService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89d5d9c8f821bb4b38db0470b37fee2750891054</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b919e207996abfd290dab896f40a80e7d7091bea</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base class for serializing a set of components or serializable objects into a serialization store.</source>
          <target state="translated">Biedt de basisklasse voor het serialiseren van een reeks onderdelen of serializable-objecten in een serialisatiearchief van de.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ComponentSerializationService serializes a set of components or serializable objects into a serialization store.</source>
          <target state="translated">De ComponentSerializationService serialiseert een reeks onderdelen of serializable-objecten in een serialisatiearchief van de.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The store can then be deserialized later.</source>
          <target state="translated">De store kan vervolgens later worden gedeserialiseerd.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ComponentSerializationService class differs from other serialization schemes in that the serialization format is opaque, and it allows for partial serialization of objects.</source>
          <target state="translated">De klasse ComponentSerializationService verschilt van andere serialisatie-schema's in die de serialisatie-indeling ondoorzichtige is, waardoor het voor gedeeltelijke serialisatie van objecten.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can choose to serialize only selected properties for an object.</source>
          <target state="translated">U kunt bijvoorbeeld alleen geselecteerde eigenschappen voor een object te serialiseren.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is <ph id="ph1">`abstract`</ph>.</source>
          <target state="translated">Deze klasse is <ph id="ph1">`abstract`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt; will provide a concrete implementation of this class and add it as a service to its &lt;xref:System.ComponentModel.Design.DesignSurface&gt;.</source>
          <target state="translated">Normaal gesproken een &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;wordt een concrete implementatie van deze klasse en toe te voegen als een service in de &lt;xref:System.ComponentModel.Design.DesignSurface&gt;.&lt;/xref:System.ComponentModel.Design.DesignSurface&gt; &lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows objects to be serialized in the format best suited for them.</source>
          <target state="translated">Dit kan objecten in de indeling die het meest geschikt voor hen worden geserialiseerd.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ComponentSerializationService class replaces the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt; interface from the .NET Framework version 1.0, although the latter is retained for backward compatibility.</source>
          <target state="translated">De klasse ComponentSerializationService vervangt de &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt;interface van de .NET Framework versie 1.0, hoewel de laatste voor achterwaartse compatibiliteit behouden blijft.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ComponentSerializationService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ComponentSerializationService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Maakt een nieuw <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple objects can be serialized into the same serialization store.</source>
          <target state="translated">Meerdere objecten kunnen worden geserialiseerd in het serialisatiearchief met dezelfde.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are finished with the store, you can call its &lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt; or &lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt; method.</source>
          <target state="translated">Wanneer u klaar met de store bent, roept u de &lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt;of &lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt;methode.&lt;/xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once closed, a serialization store can be used for deserialization, or it can be saved into a stream.</source>
          <target state="translated">Als gesloten, een serialisatiearchief kan worden gebruikt voor deserialisatie of deze kan worden opgeslagen in een stroom.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialization store can be passed to any of the various serializing methods to build up serialization state for a group of objects.</source>
          <target state="translated">Het serialisatiearchief kan worden doorgegeven aan een van de verschillende serialiseren methoden om op te bouwen serialisatie-status voor een groep objecten.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A new created serialization store.</source>
          <target state="translated">Een nieuw gemaakte serialisatiearchief.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Deserializes the given store to produce a collection of objects.</source>
          <target state="translated">De opgegeven store om te produceren van een verzameling van objecten deserializes.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method deserializes <ph id="ph1">`store`</ph> to produce a collection of objects contained within it.</source>
          <target state="translated">Deze methode deserializes <ph id="ph1">`store`</ph> voor het produceren van een verzameling van objecten die hierin zijn opgenomen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects are deserialized in the same order in which they were serialized.</source>
          <target state="translated">Objecten worden in dezelfde volgorde waarin ze zijn geserialiseerd gedeserialiseerd.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> te deserialiseren.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A collection of objects created according to the stored state.</source>
          <target state="translated">Een verzameling van objecten die gemaakt zijn afhankelijk van de opgeslagen status.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>bevat geen gegevens in een indeling die kan worden verwerkt door de serialisatie-container.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Deserializes the given store and populates the given <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with deserialized <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">De opgegeven store deserializes en vult de opgegeven <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gedeserialiseerd met <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> objecten.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method deserializes <ph id="ph1">`store`</ph> to produce a collection of objects contained within it.</source>
          <target state="translated">Deze methode deserializes <ph id="ph1">`store`</ph> voor het produceren van een verzameling van objecten die hierin zijn opgenomen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects are deserialized in the same order in which they were serialized.</source>
          <target state="translated">Objecten worden in dezelfde volgorde waarin ze zijn geserialiseerd gedeserialiseerd.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Created objects that implement &lt;xref:System.ComponentModel.IComponent&gt; are added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">Objecten die worden geïmplementeerd gemaakt &lt;xref:System.ComponentModel.IComponent&gt;worden toegevoegd aan <ph id="ph1">`container`</ph>.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> te deserialiseren.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarnaar <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> objecten worden toegevoegd.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A collection of objects created according to the stored state.</source>
          <target state="translated">Een verzameling van objecten die gemaakt zijn afhankelijk van de opgeslagen status.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>bevat geen gegevens in een indeling die kan worden verwerkt door de serialisatie-container.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Deserializes the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given container.</source>
          <target state="translated">Deserializes de gegeven <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naar de opgegeven container.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DeserializeTo method deserializes <ph id="ph1">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
          <target state="translated">De methode DeserializeTo deserializes <ph id="ph1">`store`</ph>, maar in plaats van het opstellen van nieuwe objecten, de gegevens in het archief van toepassing op een bestaande set van objecten die worden uitgevoerd vanuit de opgegeven container.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
          <target state="translated">Als gevolg hiervan de aanroeper van tevoren een object kunt maken maar het dit nodig acht.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
          <target state="translated">Als een object een status voor deserialisatie heeft en het object heeft geen naam in de reeks bestaande objecten, wordt er een nieuw object gemaakt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that object also implements &lt;xref:System.ComponentModel.IComponent&gt;, it will be added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">Als u dat object implementeert ook &lt;xref:System.ComponentModel.IComponent&gt;, wordt deze toegevoegd aan <ph id="ph1">`container`</ph>.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
          <target state="translated">Objecten in de container moeten hebben namen en typen die overeenkomen met de objecten in het serialisatiearchief om een bestaand object moet worden gebruikt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> te deserialiseren.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The container to which <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated">De container waarnaar <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten worden toegevoegd.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>bevat geen gegevens in een indeling die kan worden verwerkt door de serialisatie-container.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Deserializes the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given container, optionally validating recycled types.</source>
          <target state="translated">Deserializes de gegeven <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naar de opgegeven container typen eventueel valideren gerecycled.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt; method deserializes <ph id="ph1">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
          <target state="translated">De &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;methode deserializes <ph id="ph1">`store`</ph>, maar in plaats van het opstellen van nieuwe objecten, de gegevens in het archief van toepassing op een bestaande set van objecten die worden uitgevoerd vanuit de opgegeven container.&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
          <target state="translated">Als gevolg hiervan de aanroeper van tevoren een object kunt maken maar het dit nodig acht.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
          <target state="translated">Als een object een status voor deserialisatie heeft en het object heeft geen naam in de reeks bestaande objecten, wordt er een nieuw object gemaakt.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that object also implements &lt;xref:System.ComponentModel.IComponent&gt;, it will be added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">Als u dat object implementeert ook &lt;xref:System.ComponentModel.IComponent&gt;, wordt deze toegevoegd aan <ph id="ph1">`container`</ph>.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
          <target state="translated">Objecten in de container moeten hebben namen en typen die overeenkomen met de objecten in het serialisatiearchief om een bestaand object moet worden gebruikt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> te deserialiseren.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The container to which <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated">De container waarnaar <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten worden toegevoegd.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to guarantee that the deserialization will only work if applied to an object of the same type.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>om te garanderen dat de deserialisatie werkt alleen als toegepast op een object van hetzelfde type.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>bevat geen gegevens in een indeling die kan worden verwerkt door de serialisatie-container.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Deserializes the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given container, optionally applying default property values.</source>
          <target state="translated">Deserializes de gegeven <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naar de opgegeven container standaardwaarden voor de eigenschap eventueel toepassen.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt; method deserializes <ph id="ph1">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
          <target state="translated">De &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;methode deserializes <ph id="ph1">`store`</ph>, maar in plaats van het opstellen van nieuwe objecten, de gegevens in het archief van toepassing op een bestaande set van objecten die worden uitgevoerd vanuit de opgegeven container.&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
          <target state="translated">Als gevolg hiervan de aanroeper van tevoren een object kunt maken maar het dit nodig acht.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
          <target state="translated">Als een object een status voor deserialisatie heeft en het object heeft geen naam in de reeks bestaande objecten, wordt er een nieuw object gemaakt.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that object also implements &lt;xref:System.ComponentModel.IComponent&gt;, it will be added to <ph id="ph1">`container`</ph>.</source>
          <target state="translated">Als u dat object implementeert ook &lt;xref:System.ComponentModel.IComponent&gt;, wordt deze toegevoegd aan <ph id="ph1">`container`</ph>.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
          <target state="translated">Objecten in de container moeten hebben namen en typen die overeenkomen met de objecten in het serialisatiearchief om een bestaand object moet worden gebruikt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to deserialize.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> te deserialiseren.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The container to which <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects will be added.</source>
          <target state="translated">De container waarnaar <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten worden toegevoegd.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to guarantee that the deserialization will only work if applied to an object of the same type.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>om te garanderen dat de deserialisatie werkt alleen als toegepast op een object van hetzelfde type.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the default property values should be applied.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>om aan te geven dat de standaardwaarden van de eigenschap moeten worden toegepast.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>bevat geen gegevens in een indeling die kan worden verwerkt door de serialisatie-container.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Loads a <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from a stream.</source>
          <target state="translated">Laadt een <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> uit een stroom.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the returned store to deserialize objects by passing it to one of the &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A&gt; methods.</source>
          <target state="translated">U kunt de geretourneerde store te deserialiseren van objecten door doorgegeven aan een van de &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A&gt;methoden.&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; from which the store will be loaded.</source>
          <target state="translated">De &lt;xref:System.IO.Stream&gt;uit het archief wordt worden geladen.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">Een nieuwe <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> exemplaar.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> does not contain data saved by a previous call to <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>bevat geen gegevens die zijn opgeslagen door een eerdere aanroep voor <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Serializes the given object to the given <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Serialiseert van het gegeven object naar de opgegeven <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The store can be used to serialize more than one object by calling this method more than once.</source>
          <target state="translated">De store kan worden gebruikt voor het serialiseren van meer dan één object door meer dan één keer u deze methode aanroept.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`value`</ph> will be written.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarvoor de status van <ph id="ph1">`value`</ph> wordt geschreven.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">Het object te serialiseren.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>is gesloten of <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is geen ondersteund type serialisatiearchief.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">Gebruik een archief dat wordt geretourneerd door <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Serializes the given object, accounting for default property values.</source>
          <target state="translated">Het gegeven object, accounting voor standaardwaarden voor de eigenschap serialiseert.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard serialization, as implemented through the &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A&gt; method, only serializes values that differ from the component's default state.</source>
          <target state="translated">Standaard serialisatie, als geïmplementeerd via de &lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A&gt;methode, serialiseert alleen waarden die afwijken van de standaardstatus van het onderdeel.&lt;/xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This provides the most compact serialization mechanism but assumes that a newly created object will be used during deserialization.</source>
          <target state="translated">Dit is de meest compacte serialisatiemechanisme voor, maar wordt ervan uitgegaan dat een nieuw object wordt gebruikt tijdens de deserialisatie.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an existing object is used, the resulting deserialized object is not guaranteed to duplicate the original state of the serialized object; the properties that contained default values during serialization will not be reset back to their defaults during deserialization.</source>
          <target state="translated">Als een bestaand object wordt gebruikt, de resulterende deserialiseerbaar object kan niet worden gegarandeerd te dupliceren van de oorspronkelijke status van het geserialiseerde object. de eigenschappen die standaardwaarden tijdens de serialisatie opgenomen wordt niet opnieuw worden ingesteld naar hun standaardwaarden tijdens de deserialisatie.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeAbsolute method does not use this shortcut.</source>
          <target state="translated">De methode SerializeAbsolute maakt geen gebruik van deze sneltoets.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>It serializes all properties of the source object so that deserialization can restore all the object's properties, regardless of default state.</source>
          <target state="translated">Deze serialiseert alle eigenschappen van het bronobject zodat deserialisatie eigenschappen van het object, ongeacht de standaardstatus kunt herstellen.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is particularly useful for serializing collections, because the order of the constituent items within the collection can change.</source>
          <target state="translated">Deze methode is bijzonder nuttig voor het serialiseren van verzamelingen, omdat de volgorde van de samenstellende items binnen de verzameling kunt wijzigen.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this circumstance, the safest process to restore the original state of the entire collection is to overwrite all the items with all their original property values.</source>
          <target state="translated">In dit geval is de veiligste proces voor het herstellen van de oorspronkelijke status van de volledige verzameling worden alle items met hun oorspronkelijke eigenschapswaarden overschrijven.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`value`</ph> will be serialized.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarvoor de status van <ph id="ph1">`value`</ph> worden geserialiseerd.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">Het object te serialiseren.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>is gesloten of <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is geen ondersteund type serialisatiearchief.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">Gebruik een archief dat wordt geretourneerd door <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Serializes the given member on the given object.</source>
          <target state="translated">Het opgegeven lid in het gegeven object serialiseert.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeMember method can be invoked multiple times for the same object to build up a list of serialized members within the serialization store.</source>
          <target state="translated">De methode SerializeMember kan meerdere keren worden aangeroepen voor hetzelfde object voor het bouwen van een lijst van geserialiseerde leden in het serialisatiearchief.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, the member should be a property or an event.</source>
          <target state="translated">In het algemeen moet lid een eigenschap of een gebeurtenis.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`member`</ph> will be serialized.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarvoor de status van <ph id="ph1">`member`</ph> worden geserialiseerd.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The object to which <ph id="ph1">`member`</ph> is attached.</source>
          <target state="translated">Het object waarnaar <ph id="ph1">`member`</ph> is gekoppeld.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifying the member to serialize.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> opgeven van het lid te serialiseren.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>is gesloten of <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is geen ondersteund type serialisatiearchief.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">Gebruik een archief dat wordt geretourneerd door <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Serializes the given member on the given object, accounting for the default property value.</source>
          <target state="translated">Het opgegeven lid in het gegeven object accounting voor de eigenschap standaardwaarde serialiseert.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeMemberAbsolute method serializes the <ph id="ph1">`member`</ph> on <ph id="ph2">`owningObject`</ph>, even if <ph id="ph3">`member`</ph> contains the default property value.</source>
          <target state="translated">De methode SerializeMemberAbsolute serialiseert de <ph id="ph1">`member`</ph> op <ph id="ph2">`owningObject`</ph>, zelfs als <ph id="ph3">`member`</ph> bevat de standaardwaarde voor de eigenschap.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that for some members, containing the default value and restoring the setting of the same value to the member are different concepts.</source>
          <target state="translated">Houd er rekening mee dat voor een aantal leden met de standaardwaarde en herstellen van de instelling van dezelfde waarde naar het lid verschillende concepten zijn.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a property inherits its value from a parent object when no local value is set, setting the value back to the property may not be what is desired.</source>
          <target state="translated">Bijvoorbeeld, als de waarde een eigenschap van een bovenliggend object overneemt wanneer er geen lokale waarde is ingesteld, instellen van de waarde terug naar de eigenschap mogelijk niet wat gewenst is.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SerializeMemberAbsolute method takes this into account and would clear the state of the property in this case.</source>
          <target state="translated">De methode SerializeMemberAbsolute rekening wordt gehouden dit en de status van de eigenschap in dit geval wilt wissen.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the state of <ph id="ph1">`member`</ph> will be serialized.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarvoor de status van <ph id="ph1">`member`</ph> worden geserialiseerd.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The object to which <ph id="ph1">`member`</ph> is attached.</source>
          <target state="translated">Het object waarnaar <ph id="ph1">`member`</ph> is gekoppeld.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The member to serialize.</source>
          <target state="translated">Het lid te serialiseren.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph>is gesloten of <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is geen ondersteund type serialisatiearchief.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</source>
          <target state="translated">Gebruik een archief dat wordt geretourneerd door <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>