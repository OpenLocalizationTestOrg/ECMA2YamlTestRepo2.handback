<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffd5d9402fee3927368c0fe79201787c1d68c352</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.HMACSHA256.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80dcdb27e21676c941c32dff3a478a799a8fc2f0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b74d577449f9c12b826d5d1b76b2560da609b44f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Computes a Hash-based Message Authentication Code (HMAC) by using the <bpt id="p1">&lt;xref href="System.Security.Cryptography.SHA256"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> hash function.</source>
          <target state="translated">Berekent een HMAC Hash-based Message Authentication Code () met behulp van de <bpt id="p1">&lt;xref href="System.Security.Cryptography.SHA256"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> hash-functie.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>HMACSHA256 is a type of keyed hash algorithm that is constructed from the SHA-256 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">HMACSHA256 is een soort sleutelhash-algoritme dat is gemaakt op basis van de hash-functie van SHA-256 en gebruikt als een Hash-based Message Authentication Code (HMAC).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">Het HMAC-proces combineert een geheime sleutel met de berichtgegevens, bewerkt het resultaat met de hashfunctie, combineert van de hashwaarde opnieuw met de geheime sleutel en past de hashfunctie vervolgens een tweede keer.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output hash is 256 bits in length.</source>
          <target state="translated">De uitvoerhash is 256 bits lang.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>An HMAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</source>
          <target state="translated">Een HMAC kan worden gebruikt om te bepalen of een bericht wordt verzonden via een onbeveiligde kanaal is geknoeid, mits de verzender en ontvanger een geheime sleutel delen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sender computes the hash value for the original data and sends both the original data and hash value as a single message.</source>
          <target state="translated">De afzender wordt de hash-waarde voor de oorspronkelijke gegevens berekend en worden de oorspronkelijke gegevens en de hash-waarde als een enkel bericht verzonden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The receiver recalculates the hash value on the received message and checks that the computed HMAC matches the transmitted HMAC.</source>
          <target state="translated">De ontvanger de hash-waarde voor het ontvangen bericht berekend en controleert of de berekende HMAC overeenkomt met de HMAC verzonden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</source>
          <target state="translated">Elke wijziging van de gegevens of de hash-waarde resulteert in een niet-overeenkomende, omdat de geheime sleutel is vereist voor het wijzigen van het bericht en de juiste hash-waarde reproduceren.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if the original and computed hash values match, the message is authenticated.</source>
          <target state="translated">Als de oorspronkelijke en berekende hash-waarden overeenkomen, wordt daarom het bericht geverifieerd.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>HMACSHA256 accepts keys of any size, and produces a hash sequence 256 bits in length.</source>
          <target state="translated">HMACSHA256 accepteert sleutels van elke grootte, en genereert een hash-reeks 256 bits lang.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA256"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a randomly generated key.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA256"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse met een willekeurig gegenereerde sleutel.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Security.Cryptography.HMACSHA256&gt; is a type of keyed hash algorithm that is constructed from the SHA-256 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.HMACSHA256&gt;is een soort sleutelhash-algoritme dat is gemaakt op basis van de hash-functie van SHA-256 en gebruikt als een HMAC Hash-based Message Authentication Code ().&lt;/xref:System.Security.Cryptography.HMACSHA256&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">Het HMAC-proces combineert een geheime sleutel met de berichtgegevens, bewerkt het resultaat met de hashfunctie, combineert van de hashwaarde opnieuw met de geheime sleutel en past de hashfunctie vervolgens een tweede keer.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output hash is 256 bits in length.</source>
          <target state="translated">De uitvoerhash is 256 bits lang.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor uses a 64-byte, randomly generated key.</source>
          <target state="translated">Deze constructor maakt gebruik van een 64-byte, willekeurig gegenereerde sleutel.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA256"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified key data.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA256"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse met de opgegeven sleutel gegevens.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Security.Cryptography.HMACSHA256&gt; is a type of keyed hash algorithm that is constructed from the SHA-256 hash function and used as a Hash-based Message Authentication Code.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.HMACSHA256&gt;is een soort sleutelhash-algoritme dat is gemaakt op basis van de hash-functie van SHA-256 en gebruikt als een Hash-based Message Authentication Code.&lt;/xref:System.Security.Cryptography.HMACSHA256&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">Het HMAC-proces combineert een geheime sleutel met de berichtgegevens, bewerkt het resultaat met de hashfunctie, combineert van de hashwaarde opnieuw met de geheime sleutel en past de hashfunctie vervolgens een tweede keer.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output hash is 256 bits in length.</source>
          <target state="translated">De uitvoerhash is 256 bits lang.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The secret key for <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA256"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> encryption.</source>
          <target state="translated">De geheime sleutel voor <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA256"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> versleuteling.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The key can be any length.</source>
          <target state="translated">De sleutel mag een willekeurige lengte.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>However, the recommended size is 64 bytes.</source>
          <target state="translated">De aanbevolen grootte is echter 64 bytes.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the key is more than 64 bytes long, it is hashed (using SHA-256) to derive a 64-byte key.</source>
          <target state="translated">Als de sleutel meer dan 64 bytes lang is, deze wordt opgedeeld (met behulp van SHA-256) worden afgeleid van een 64-byte-sleutel.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If it is less than 64 bytes long, it is padded to 64 bytes.</source>
          <target state="translated">Als het minder dan 64 bytes, wordt het aangevuld 64 bytes.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>