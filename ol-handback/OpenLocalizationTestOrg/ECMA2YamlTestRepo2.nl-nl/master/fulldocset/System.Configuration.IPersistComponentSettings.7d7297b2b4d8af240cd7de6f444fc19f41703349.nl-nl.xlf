<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">655ffbffba4695505f8ca982cc23dfc732582cbb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Configuration.IPersistComponentSettings.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f15b1cc3c72cfeb09c434019c400a4f52b62f32c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3110686e11c84e8129aa29efc4ba41c6713a3c3d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines standard functionality for controls or libraries that store and retrieve application settings.</source>
          <target state="translated">Standaardfuncties voor besturingselementen of bibliotheken die opslaan en ophalen van toepassingsinstellingen definieert.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you can add application settings support to an application by creating a settings wrapper class, which is derived from &lt;xref:System.Configuration.ApplicationSettingsBase&gt;, and then add special properties to this class.</source>
          <target state="translated">U kunt instellingen toepassingsondersteuning doorgaans toevoegen aan een toepassing door het maken van een wrapper-klasse, die is afgeleid van &lt;xref:System.Configuration.ApplicationSettingsBase&gt;, en vervolgens speciale eigenschappen toevoegen aan deze klasse.&lt;/xref:System.Configuration.ApplicationSettingsBase&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this approach does not sufficiently encapsulate application settings for a control so that its container is shielded from the details.</source>
          <target state="translated">Echter heeft deze benadering niet voldoende inkapselen toepassingsinstellingen voor een besturingselement dat de container is afgeschermd van de details.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IPersistComponentSettings interface provides an application with a standard interface for communicating application settings state change requests to a control, component, or library module.</source>
          <target state="translated">De interface IPersistComponentSettings biedt een toepassing met een standaardinterface voor het verzenden van aanvragen van toepassingen instellingen status wijzigen naar een besturingselement of onderdeel bibliotheek-module.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Design-time tools also depend on this interface to properly manage controls and components.</source>
          <target state="translated">Ontwerptijd extra is ook afhankelijk zijn van deze interface voor een goed beheer van besturingselementen en onderdelen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Reads the control's application settings into their corresponding properties and updates the control's state.</source>
          <target state="translated">Toepassingsinstellingen van het besturingselement in de bijbehorende eigenschappen leest en updates van de status van het besturingselement.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, the LoadComponentSettings method performs two essential operations:      -   It causes each application settings instance contained by the control to refresh the values of its application settings properties, typically by calling their &lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt; methods.</source>
          <target state="translated">In het algemeen de methode LoadComponentSettings twee essentiÃ«le bewerkingen uitvoert:-het ervoor zorgt dat elk exemplaar van de toepassing deel uitmaken van het besturingselement de waarden van eigenschappen voor de toepassing, meestal vernieuwen door het aanroepen van hun &lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;methoden.&lt;/xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   As required, it updates those general properties that depend on these reloaded settings properties.</source>
          <target state="translated">-Als vereist, wordt de algemene eigenschappen die afhankelijk van deze instellingen opnieuw geladen eigenschappen zijn bijgewerkt.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the settings class contained a <ph id="ph1">`location`</ph> settings property, LoadComponentSettings should ensure that the control's &lt;xref:System.Windows.Forms.Control.Location%2A&gt; property is updated to reflect this reloaded setting.</source>
          <target state="translated">Als de klasse instellingen bevat bijvoorbeeld een <ph id="ph1">`location`</ph> eigenschap voor instellingen, LoadComponentSettings moet ervoor zorgen dat het besturingselement &lt;xref:System.Windows.Forms.Control.Location%2A&gt;eigenschap wordt bijgewerkt met deze instelling opnieuw geladen.&lt;/xref:System.Windows.Forms.Control.Location%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Resets the control's application settings properties to their default values.</source>
          <target state="translated">Hiermee stelt de toepassingseigenschappen instellingen van het besturingselement op hun standaardwaarden.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation of the ResetComponentSettings method typically calls the &lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt; method on each instance of an application settings class it contains.</source>
          <target state="translated">De implementatie van de methode ResetComponentSettings roept meestal de &lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;methode voor elk exemplaar van een toepassing instellingen klasse bevat.&lt;/xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Persists the control's application settings properties.</source>
          <target state="translated">Persistente toepassingseigenschappen voor instellingen van het besturingselement.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SaveComponentSettings method writes the values of the control's application settings properties to the associated data store.</source>
          <target state="translated">De methode SaveComponentSettings schrijft de waarden van eigenschappen van het besturingselement voor toepassing naar de gekoppelde gegevensopslag.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data store and serialization technique the method uses is determined by the settings provider associated with each settings class through the &lt;xref:System.Configuration.SettingsProviderAttribute&gt;.</source>
          <target state="translated">De gegevens opslaan en serialisatie techniek die maakt gebruik van de methode wordt bepaald door de provider van de instellingen die zijn gekoppeld aan elke klasse instellingen via de &lt;xref:System.Configuration.SettingsProviderAttribute&gt;.&lt;/xref:System.Configuration.SettingsProviderAttribute&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override the choice of the settings provider by using the &lt;xref:System.Configuration.ISettingsProviderService&gt; interface.</source>
          <target state="translated">U kunt de keuze van de provider van instellingen overschrijven met behulp van de &lt;xref:System.Configuration.ISettingsProviderService&gt;interface.&lt;/xref:System.Configuration.ISettingsProviderService&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the &lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt; property is <ph id="ph2">`true`</ph>, the control should call SaveComponentSettings in its own &lt;xref:System.Windows.Forms.Control.Dispose%2A&gt; method so that the control's configuration data is stored automatically before the application ends.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Als de &lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;eigenschap is <ph id="ph2">`true`</ph>, het besturingselement moet aanroepen SaveComponentSettings in een eigen &lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;methode zodat de gegevens van de configuratie van het besturingselement wordt automatisch opgeslagen voordat de toepassing is afgelopen.&lt;/xref:System.Windows.Forms.Control.Dispose%2A&gt; &lt;/xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the control should automatically persist its application settings properties.</source>
          <target state="translated">Opgehaald of ingesteld van een waarde die aangeeft of het besturingselement automatisch de eigenschappen van de instellingen van toepassing moet handhaven.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a control contains configuration data, it will typically persist this data in response to an explicit call to the &lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt; method or sometimes implicitly when the control's &lt;xref:System.Windows.Forms.Control.Dispose%2A&gt; method is invoked.</source>
          <target state="translated">Als een besturingselement configuratiegegevens bevat, wordt het doorgaans deze gegevens in reactie op een expliciete aanroep behouden de &lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;methode of soms impliciet wanneer het besturingselement &lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;methode wordt aangeroepen.&lt;/xref:System.Windows.Forms.Control.Dispose%2A&gt; &lt;/xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SaveSettings property determines whether a control automatically persists its configuration data when it is disposed.</source>
          <target state="translated">De eigenschap SaveSettings bepaalt of een besturingselement automatisch blijft gehandhaafd in de configuratiegegevens wanneer deze is verwijderd.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of SaveSettings depends on the implementation of the control.</source>
          <target state="translated">De standaardwaarde van SaveSettings is afhankelijk van de implementatie van het besturingselement.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation for the control should indicate whether it uses application settings, what data is persisted, and what the default value of the SaveSettings property is.</source>
          <target state="translated">De documentatie voor het besturingselement moet aangeven die gebruikmaakt van toepassingsinstellingen, welke gegevens worden bewaard en wat de standaardwaarde van de eigenschap SaveSettings is.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control should automatically persist its state; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als het besturingselement automatisch de status; handhaven moet. anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the application settings key for the current instance of the control.</source>
          <target state="translated">Opgehaald of ingesteld van de waarde van de sleutel van de instellingen van toepassing voor het huidige exemplaar van het besturingselement.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the SettingsKey property to disambiguate groups of application settings properties when there are multiple instances of the same wrapper class.</source>
          <target state="translated">Gebruik de eigenschap SettingsKey te onderscheiden van groepen van instellingen toepassingseigenschappen wanneer er meerdere exemplaren van dezelfde wrapperklasse.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a control contains an associated wrapper class, then placing multiple instances of the same control in the same application will typically result in multiple instances of the wrapper class.</source>
          <target state="translated">Bijvoorbeeld, als een besturingselement een bijbehorende wrapperklasse bevat, leidt meerdere exemplaren van hetzelfde besturingselement op te slaan in dezelfde toepassing doorgaans tot meerdere exemplaren van de wrapperklasse.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>A settings key is required only when the configuration data differs on a per-instance basis; for example, the location of dynamically positioned controls.</source>
          <target state="translated">Een sleutel-instellingen is alleen vereist als de configuratiegegevens per exemplaar worden ingeschakeld verschilt. de locatie van besturingselementen dynamisch geplaatst.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following general rules apply to the use of SettingsKey:      -   A control, like any class, may contain zero or more application settings classes, derived from &lt;xref:System.Configuration.ApplicationSettingsBase&gt;.</source>
          <target state="translated">De volgende algemene regels toepassen op het gebruik van SettingsKey:-een besturingselement, zoals een klasse kan nul of meer toepassingen instellingsklassen, bevatten afgeleid van &lt;xref:System.Configuration.ApplicationSettingsBase&gt;.&lt;/xref:System.Configuration.ApplicationSettingsBase&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each settings class contains its own &lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName&gt; property, which helps disambiguate multiple instances of that class.</source>
          <target state="translated">Elke klasse instellingen bevat een eigen &lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName&gt;eigenschap waarmee heffen meerdere exemplaren van die klasse.&lt;/xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A control should separate its per-instance data and its shared data into different settings classes.</source>
          <target state="translated">-Een besturingselement moet de gegevens per exemplaar en de gedeelde gegevens verdelen in verschillende instellingsklassen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For a control with any per-instance configuration data, the <ph id="ph1">`get`</ph> accessor of the SettingsKey property should default to the &lt;xref:System.Windows.Forms.Control.Name%2A&gt; of the control.</source>
          <target state="translated">-Voor een besturingselement met alle configuratiegegevens per exemplaar de <ph id="ph1">`get`</ph> accessor van de eigenschap SettingsKey standaard moet worden ingesteld voor de &lt;xref:System.Windows.Forms.Control.Name%2A&gt;van het besturingselement.&lt;/xref:System.Windows.Forms.Control.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases the name of the control will be unique within an application.</source>
          <target state="translated">In de meeste gevallen wordt de naam van het besturingselement niet uniek zijn binnen een toepassing.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the control contains only shared configuration data, <ph id="ph1">`get`</ph> should default to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Als het besturingselement bevat alleen configuratiegegevens, gedeelde <ph id="ph1">`get`</ph> standaard moet worden ingesteld op <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The <ph id="ph1">`set`</ph> accessor for this property should be implemented to distinguish between settings classes containing per-instance and shared configuration data.</source>
          <target state="translated">-De <ph id="ph1">`set`</ph> accessor voor deze eigenschap moet worden geÃ¯mplementeerd om te onderscheiden instellingsklassen die per exemplaar en gedeelde configuratiegegevens bevat.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each settings class containing per-instance data, <ph id="ph1">`set`</ph> should just pass-through to the &lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName&gt; property of the settings class.</source>
          <target state="translated">Voor elke klasse die de gegevens per exemplaar, <ph id="ph1">`set`</ph> moet alleen Pass Through-query voor de &lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName&gt;eigenschap van de klasse instellingen.&lt;/xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For settings classes containing shared data, <ph id="ph1">`set`</ph> should perform no action for that settings class.</source>
          <target state="translated">Voor instellingsklassen met gedeelde gegevens <ph id="ph1">`set`</ph> geen actie voor die klasse instellingen moet uitvoeren.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the settings key for the current instance of the control.</source>
          <target state="translated">Een &lt;xref:System.String&gt;dat de instellingensleutel voor het huidige exemplaar van het besturingselement bevat.&lt;/xref:System.String&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>