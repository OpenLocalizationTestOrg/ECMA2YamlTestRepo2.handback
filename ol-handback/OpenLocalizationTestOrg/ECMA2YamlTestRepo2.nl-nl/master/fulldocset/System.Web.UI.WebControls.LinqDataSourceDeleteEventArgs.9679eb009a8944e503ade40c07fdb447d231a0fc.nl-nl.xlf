<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f388f7a117d5c8eb4ea86cc677bfe7771cc2ae9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">564f6b438bd47c9c78aad083a786a45b8db1e223</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5f491444ff2fc17c55a6d336a770c41647f3bc5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource.Deleting"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Biedt gegevens voor de <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource.Deleting"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebeurtenis.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The LinqDataSourceDeleteEventArgs object is passed to any handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt; event.</source>
          <target state="translated">Het object LinqDataSourceDeleteEventArgs wordt doorgegeven aan een handler voor de &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;gebeurtenis.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A&gt; property contains the data that will be deleted.</source>
          <target state="translated">De &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A&gt;eigenschap bevat de gegevens die worden verwijderd.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object that represents the data source throws a validation exception before it deletes the data, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt; property contains an instance of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; class.</source>
          <target state="translated">Als het object waarmee de gegevensbron een validatie-uitzondering genereert voordat deze wordt verwijderd als de gegevens, de &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;eigenschap bevat een exemplaar van de &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;klasse.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve all the validation exceptions through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt; property.</source>
          <target state="translated">U kunt de validatie van uitzonderingen via ophalen de &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;eigenschap.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no validation exception is thrown, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt; property contains <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Als er geen validatie uitzondering, de &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;eigenschap bevat <ph id="ph1">`null`</ph>.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you handle the validation exceptions and do not want the exception to be re-thrown, set the &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Als u de uitzonderingen validatie verwerken en niet wilt dat de uitzondering wordt opnieuw gemaakt, stelt de &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A&gt;eigenschap <ph id="ph1">`true`</ph>.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You create an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt; event to validate the data, to examine validation errors from the data class, or to cancel the delete operation.</source>
          <target state="translated">U maakt een gebeurtenis-handler voor de &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;gebeurtenis voor het valideren van de gegevens, om te onderzoeken validatiefouten uit de gegevensklasse of de delete-bewerking te annuleren.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cancel the delete operation by setting the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">U de bewerking delete annuleren door in te stellen de &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;eigenschap <ph id="ph1">`true`</ph>.&lt;/xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control stores the original values from the data source in view state in the Web page, except those whose &lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt; attribute is marked as <ph id="ph1">`UpdateCheck.Never`</ph>.</source>
          <target state="translated">Standaard de &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;staat besturingselement slaat de oorspronkelijke uit de gegevensbron in de weergave waarden in de webpagina wordt weergegeven, met uitzondering van de waarvan &lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt;kenmerk is gemarkeerd als <ph id="ph1">`UpdateCheck.Never`</ph>.&lt;/xref:System.Data.Linq.Mapping.ColumnAttribute&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>LINQ to SQL automatically checks the integrity of the data before deleting the data.</source>
          <target state="translated">De integriteit van de gegevens LINQ naar SQL automatisch gecontroleerd voordat de gegevens te verwijderen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does this by comparing the current values in the data source with the original values that are stored in view state.</source>
          <target state="translated">Dit gebeurt door het vergelijken van de huidige waarden in de gegevensbron met de oorspronkelijke waarden die zijn opgeslagen in de weergavestatus.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can perform additional data validation by creating a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt; event.</source>
          <target state="translated">U kunt aanvullende gegevensvalidatie uitvoeren door het maken van een handler voor de &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;gebeurtenis.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An object of the type specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt; property that contains the data to delete.</source>
          <target state="translated">Een object van het opgegeven type in de &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;eigenschap met de gegevens te verwijderen.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified exception.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse met de opgegeven uitzondering.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The exception that occurred when validating the data to delete.</source>
          <target state="translated">De uitzondering die is opgetreden bij het valideren van de gegevens te verwijderen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets the exception that was thrown while the data was being validated before the delete operation.</source>
          <target state="translated">Hiermee haalt u de uitzondering die is opgetreden tijdens het verifiëren van de gegevens voordat de bewerking delete.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a validation exception is thrown before the delete operation is performed, the exception is stored in the Exception property.</source>
          <target state="translated">Als een validatie-uitzondering is opgetreden voordat de delete-bewerking wordt uitgevoerd, wordt de uitzondering wordt opgeslagen in de eigenschap uitzondering.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>In an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt; event, you can retrieve the exception through the Exception property.</source>
          <target state="translated">In de gebeurtenishandler voor de &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;gebeurtenis, kunt u de uitzondering via de eigenschap Exception ophalen.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The exception, if an error occurred; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De uitzondering, als er is een fout opgetreden; anders <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</source>
          <target state="translated">Opgehaald of een waarde die aangeeft of de uitzondering is afgehandeld en dat deze moet niet worden gegenereerd opnieuw ingesteld.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt; event to examine validation exceptions that were thrown before the delete operation.</source>
          <target state="translated">Kunt u een gebeurtenis-handler voor de &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;gebeurtenis te onderzoeken validatie uitzonderingen die zijn geretourneerd voordat de bewerking delete.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you handle the exception and do not want it to be thrown again, set the ExceptionHandled property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Als u de uitzondering verwerken en niet wilt dat deze opnieuw worden gegenereerd, de ExceptionHandled-eigenschap instelt op <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the ExceptionHandled property to <ph id="ph1">`true`</ph>, the exception will be propagated to the next event handler in the call stack.</source>
          <target state="translated">Als u niet de eigenschap ExceptionHandled instelt op <ph id="ph1">`true`</ph>, de uitzondering wordt doorgegeven aan de volgende gebeurtenis-handler in de aanroepstack.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the exception was handled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de uitzondering is afgehandeld; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the object that represents the data to delete.</source>
          <target state="translated">Hiermee haalt u het object waarmee de gegevens te verwijderen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the OriginalObject property to interact with the data before it is deleted.</source>
          <target state="translated">U kunt de eigenschap OriginalObject gebruiken om te communiceren met de gegevens voordat deze wordt verwijderd.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can validate the data, or you can cancel the event by setting the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">U kunt de gegevens valideren of u kunt de gebeurtenis annuleren door in te stellen de &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;eigenschap <ph id="ph1">`true`</ph>.&lt;/xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can modify which record is deleted by changing the value or values of the object in the OriginalObject property.</source>
          <target state="translated">U kunt wijzigen welke record wordt verwijderd door de waarde of de waarden van het object in de eigenschap OriginalObject te wijzigen.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An object of the type specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt; property that contains the data to delete.</source>
          <target state="translated">Een object van het opgegeven type in de &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;eigenschap met de gegevens te verwijderen.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>