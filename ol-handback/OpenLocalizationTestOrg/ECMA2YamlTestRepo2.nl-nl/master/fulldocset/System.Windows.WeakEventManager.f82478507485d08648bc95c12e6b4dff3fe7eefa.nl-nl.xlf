<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3babf752cda1959b9fe1dc4066dab91e524618cf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.WeakEventManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">405ac814751751e817156a9b131a12310f85f791</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea2a89fc5ac37f0d3a6ebf9c4b7068aa0c1bba2a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base class for the event manager that is used in the <bpt id="p1">*</bpt>weak event pattern<ept id="p1">*</ept>.</source>
          <target state="translated">Biedt een basisklasse op voor de manager van de gebeurtenis die wordt gebruikt in de <bpt id="p1">*</bpt>zwakke gebeurtenis patroon<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The manager adds and removes listeners for events (or callbacks) that also use the pattern.</source>
          <target state="translated">De manager wordt toegevoegd en verwijdert u listeners voor gebeurtenissen (of retouraanroepen) die ook het patroon gebruiken.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use the weak event pattern when the event source has an object lifetime that is independent of the event listeners.</source>
          <target state="translated">Doorgaans gebruikt u het patroon zwakke gebeurtenis wanneer de bron van de gebeurtenis heeft een levensduur van objecten die onafhankelijk is van de gebeurtenislisteners.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the central event dispatching capability of a WeakEventManager allows the listener's handlers to be garbage collected even if the source object persists.</source>
          <target state="translated">De verzendende centrale event-functionaliteit van een WeakEventManager biedt de mogelijkheid de listener-handlers moet worden verwijderd, zelfs als het bronobject zich blijft voordoen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>By contrast, a regular event hookup using the <ph id="ph1">`+=`</ph> operator causes the potentially disconnected source to hold a reference to the listeners.</source>
          <target state="translated">Daarentegen is een normale gebeurtenis koppeling met de <ph id="ph1">`+=`</ph> operator zorgt ervoor dat de bron mogelijk verbroken voor een verwijzing naar de listeners.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This prevents the receiver from being garbage collected in a timely fashion.</source>
          <target state="translated">Dit voorkomt dat de ontvanger garbage collector zijn verzameld op tijdige wijze wordt.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>One common situation where the lifetime relationships between sources and listeners should use of the weak event pattern is the handling of update events coming from data bindings.</source>
          <target state="translated">Een algemene situatie waarin de levensduur van relaties tussen bronnen en luisteraars moeten gebruiken van het patroon zwakke gebeurtenis is de verwerking van de update-gebeurtenissen die afkomstig zijn van gegevensbindingen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The weak event pattern can also be used for callbacks and regular events.</source>
          <target state="translated">Het patroon zwakke gebeurtenis kan ook worden gebruikt voor retouraanroepen en reguliere gebeurtenissen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes base class values when it is used as the initializer by the constructor of a derived class.</source>
          <target state="translated">Initialiseert baseren klasse waarden wanneer deze wordt gebruikt als de initialisatiefunctie door de constructor van een afgeleide klasse.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Delivers the event being managed to each listener.</source>
          <target state="translated">Biedt de gebeurtenis elke-listener wordt beheerd.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the DeliverEvent method from within the event handlers that are added or removed by the &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt; and &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt; implementations of subclasses.</source>
          <target state="translated">Roep de methode DeliverEvent uit binnen de gebeurtenis-handlers die zijn toegevoegd of verwijderd door de &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt;en &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt;implementaties van subklassen.&lt;/xref:System.Windows.WeakEventManager.StopListening%2A&gt; &lt;/xref:System.Windows.WeakEventManager.StartListening%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call the &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; method in your <ph id="ph1">`AddListener`</ph> implementation of your class, the list of listeners receiving the event is kept in an underlying collection.</source>
          <target state="translated">Als u de &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;methode in uw <ph id="ph1">`AddListener`</ph> implementatie van de klasse wordt de lijst van de gebeurtenis ontvangt listeners wordt opgeslagen in een onderliggende verzameling.&lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>(<ph id="ph1">`AddListener`</ph> is not part of an interface or class contract.</source>
          <target state="translated">(<ph id="ph1">`AddListener`</ph> maakt geen deel uit van een interface of een klasse-contract.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AddListener`</ph> is the suggested name for the method of your manager class that calls &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; and adds weak event pattern listeners for the event.)       &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; adds listeners to a single list.</source>
          <target state="translated"><ph id="ph1">`AddListener`</ph>is de voorgestelde naam voor de methode van uw manager-klasse die &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;aanroept en zwakke gebeurtenis patroon listeners voor de gebeurtenis worden toegevoegd.)       &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;listeners worden toegevoegd aan een enkele lijst.&lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your manager implementation maintains more than one list of listeners per event, do not use DeliverEvent or &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;.</source>
          <target state="translated">Als uw implementatie manager meer dan een lijst met listeners per gebeurtenis onderhoudt, gebruik geen DeliverEvent of &lt;xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;.&lt;/xref:System.Windows.WeakEventManager.ProtectedAddListener%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, your implementation should create its own &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; instances, <ph id="ph1">`AddListener`</ph> should add listeners to the appropriate list, and events should be delivered to the appropriate listener list by calling &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;.</source>
          <target state="translated">In plaats daarvan uw implementatie moet maken een eigen &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;exemplaren, <ph id="ph1">`AddListener`</ph> listeners moet toevoegen aan de juiste lijst en gebeurtenissen moeten worden geleverd aan de lijst van de juiste listener door het aanroepen van &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;.&lt;/xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The object on which the event is being handled.</source>
          <target state="translated">Het object waarop de gebeurtenis wordt verwerkt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data for the event to deliver.</source>
          <target state="translated">Een &lt;xref:System.EventArgs&gt;waarin de gebeurtenisgegevens voor de gebeurtenis te leveren.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Moet worden toegevoegd.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Moet worden toegevoegd.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Moet worden toegevoegd.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that is used for the provided type.</source>
          <target state="translated">Retourneert de <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie die wordt gebruikt voor het opgegeven type.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt; implementations call this method using their passed <ph id="ph1">`managerType`</ph>.</source>
          <target state="translated">&lt;xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt;implementaties Roep deze methode met behulp van hun doorgegeven <ph id="ph1">`managerType`</ph>.&lt;/xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Windows.WeakEventManager&gt; is then used as the differentiator that determines which event was received, and which private class handler to invoke.</source>
          <target state="translated">De geretourneerde &lt;xref:System.Windows.WeakEventManager&gt;wordt vervolgens gebruikt als de onderscheid die bepaalt welke gebeurtenis is ontvangen en welke klasse-handler aan te roepen.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The type to obtain the <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for.</source>
          <target state="translated">Het type voor de <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The matching <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">Het overeenkomende <bpt id="p1">&lt;xref href="System.Windows.WeakEventManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets or sets the data being stored for the specified source.</source>
          <target state="translated">Opgehaald of ingesteld van de gegevens worden opgeslagen voor de opgegeven bron.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can choose what data and type to store in this indexer.</source>
          <target state="translated">Afgeleide klassen kunnen kiezen welke gegevens en type op te slaan in deze indexeerfunctie.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically this is implemented as a &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;, which is a list of weak references to listeners.</source>
          <target state="translated">Dit is normaal gesproken geïmplementeerd als een &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;, dit is een lijst met zwakke verwijzingen naar listeners.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would only have to change this type if the &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; type cannot contain your required information.</source>
          <target state="translated">Hebt u alleen te wijzigen van dit type als de &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;type kan niet de vereiste gegevens bevatten.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If so, you will have to override the &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt; method so that all cleanup of the underlying type is performed correctly.</source>
          <target state="translated">Als u dus moet, overschrijven de &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt;methode zodat alle opschoning van het onderliggende type correct is uitgevoerd.&lt;/xref:System.Windows.WeakEventManager.Purge%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The zero-based index of the requested source.</source>
          <target state="translated">De op nul gebaseerde index van de aangevraagde bron.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Data being stored by the manager for this source.</source>
          <target state="translated">Gegevens die door de manager voor deze bron wordt opgeslagen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns a new object to contain listeners to an event.</source>
          <target state="translated">Retourneert een nieuw object listeners op een gebeurtenis bevatten.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A new object to contain listeners to an event.</source>
          <target state="translated">Een nieuw object aan een gebeurtenis voor listeners bevatten.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adds the specified delegate as an event handler of the specified source.</source>
          <target state="translated">De opgegeven gemachtigde toevoegen als een gebeurtenis-handler van de opgegeven bron.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The source object that the handler delegate subscribes to.</source>
          <target state="translated">Het bronobject dat de handler gemachtigde is geabonneerd.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The delegate that handles the event that is raised by <ph id="ph1">`source`</ph>.</source>
          <target state="translated">De gemachtigde die verantwoordelijk is voor de gebeurtenis die is gemeld door <ph id="ph1">`source`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Adds the provided listener to the provided source for the event being managed.</source>
          <target state="translated">Voegt de opgegeven listener toe aan de opgegeven bron voor de gebeurtenis die wordt beheerd.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method within your manager class <ph id="ph1">`AddListener`</ph> methods on &lt;xref:System.Windows.WeakEventManager&gt; implementations.</source>
          <target state="translated">Roep deze methode in uw klasse manager <ph id="ph1">`AddListener`</ph> methoden op &lt;xref:System.Windows.WeakEventManager&gt;implementaties.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AddListener`</ph> is the suggested name for the static method you define on your manager class to enable other classes to add a listener for your weak event pattern.</source>
          <target state="translated"><ph id="ph1">`AddListener`</ph>de voorgestelde naam voor de statische methode die u voor uw klasse manager zodat andere klassen toevoegen van een listener voor de zwakke gebeurtenis patroon definiëren.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AddListener`</ph> should take two parameters: the <ph id="ph2">`source`</ph> where the listener is attached, and the <ph id="ph3">`listener`</ph> instance.</source>
          <target state="translated"><ph id="ph1">`AddListener`</ph>moet rekening houden met twee parameters: de <ph id="ph2">`source`</ph> waar de listener is gekoppeld, en de <ph id="ph3">`listener`</ph> exemplaar.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For your <ph id="ph1">`AddListener`</ph> implementation, call the ProtectedAddListener method on the current manager and pass the same two parameters.</source>
          <target state="translated">Voor uw <ph id="ph1">`AddListener`</ph> implementatie, de ProtectedAddListener-methode niet aanroepen voor de huidige manager en dezelfde twee parameters doorgegeven.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the list of listeners was previously empty, ProtectedAddListener calls the &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt; method internally, which will call your specific &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt; override through polymorphism.</source>
          <target state="translated">Als de lijst met listeners eerder leeg is, ProtectedAddListener roept de &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt;methode intern, belt die uw specifieke &lt;xref:System.Windows.WeakEventManager.StartListening%2A&gt;overschrijven via polymorfisme.&lt;/xref:System.Windows.WeakEventManager.StartListening%2A&gt; &lt;/xref:System.Windows.WeakEventManager.StartListening%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>ProtectedAddListener adds listeners to a single internal &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; per <ph id="ph1">`source`</ph>.</source>
          <target state="translated">ProtectedAddListener listeners worden toegevoegd aan een enkele interne &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;per <ph id="ph1">`source`</ph>.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your manager implementation maintains more than one list of listeners for each event-source combination, do not use ProtectedAddListener.</source>
          <target state="translated">Als uw implementatie manager meer dan een lijst met listeners voor elke combinatie van de bron van de gebeurtenis onderhoudt, gebruik geen ProtectedAddListener.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, your implementation should create its own &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; instances, <ph id="ph1">`AddListener`</ph> should add listeners to the appropriate list, and events should be delivered to the appropriate listener list by calling the &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; event instead of the &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; method.</source>
          <target state="translated">In plaats daarvan uw implementatie moet maken een eigen &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;exemplaren, <ph id="ph1">`AddListener`</ph> listeners moet toevoegen aan de juiste lijst en gebeurtenissen moeten worden geleverd aan de lijst van de juiste listener door het aanroepen van de &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;gebeurtenis in plaats van de &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt;methode.&lt;/xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; &lt;/xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The source to attach listeners to.</source>
          <target state="translated">De bron voor listeners koppelen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The listening class (which must implement <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">De luisterende klasse (die moet worden geïmplementeerd <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Removes the previously added handler from the specified source.</source>
          <target state="translated">Hiermee verwijdert u de eerder toegevoegde handler van de opgegeven bron.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The source to remove the handler from.</source>
          <target state="translated">De bron voor de handler van verwijderen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The delegate to remove from <ph id="ph1">`source`</ph>.</source>
          <target state="translated">De gemachtigde verwijderen uit <ph id="ph1">`source`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Removes a previously added listener from the provided source.</source>
          <target state="translated">Hiermee verwijdert u een eerder toegevoegde listener van de opgegeven bron.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method within your manager class <ph id="ph1">`RemoveListener`</ph> methods on &lt;xref:System.Windows.WeakEventManager&gt; implementations.</source>
          <target state="translated">Roep deze methode in uw klasse manager <ph id="ph1">`RemoveListener`</ph> methoden op &lt;xref:System.Windows.WeakEventManager&gt;implementaties.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`RemoveListener`</ph> is the suggested name for the static method you define on your manager class to enable other classes to remove a listener for your weak event pattern.</source>
          <target state="translated"><ph id="ph1">`RemoveListener`</ph>de voorgestelde naam voor de statische methode die u voor uw klasse manager zodat andere klassen te verwijderen van een listener voor de zwakke gebeurtenis patroon definiëren.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`RemoveListener`</ph> should take two parameters: the <ph id="ph2">`source`</ph> where the listener is removed, and the <ph id="ph3">`listener`</ph> class.</source>
          <target state="translated"><ph id="ph1">`RemoveListener`</ph>moet rekening houden met twee parameters: de <ph id="ph2">`source`</ph> waar de listener is verwijderd, en de <ph id="ph3">`listener`</ph> klasse.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For your <ph id="ph1">`RemoveListener`</ph> implementation, call the ProtectedRemoveListener method on the current manager and pass the same two parameters.</source>
          <target state="translated">Voor uw <ph id="ph1">`RemoveListener`</ph> implementatie, de ProtectedRemoveListener-methode niet aanroepen voor de huidige manager en dezelfde twee parameters doorgegeven.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a call to ProtectedRemoveListener removes the last listener in the list, ProtectedRemoveListener calls the &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt; method internally, which will call your specific &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt; override through polymorphism.</source>
          <target state="translated">Als een aanroep van ProtectedRemoveListener de laatste listener in de lijst verwijdert, ProtectedRemoveListener roept de &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt;methode intern, belt die uw specifieke &lt;xref:System.Windows.WeakEventManager.StopListening%2A&gt;overschrijven via polymorfisme.&lt;/xref:System.Windows.WeakEventManager.StopListening%2A&gt; &lt;/xref:System.Windows.WeakEventManager.StopListening%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>ProtectedRemoveListener removes listeners from a single internal &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; per <ph id="ph1">`source`</ph>.</source>
          <target state="translated">ProtectedRemoveListener listeners verwijdert uit een enkele interne &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;per <ph id="ph1">`source`</ph>.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your manager implementation maintains more than one list of listeners for each event-source combination, do not use ProtectedRemoveListener.</source>
          <target state="translated">Als uw implementatie manager meer dan een lijst met listeners voor elke combinatie van de bron van de gebeurtenis onderhoudt, gebruik geen ProtectedRemoveListener.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, your implementation should create its own &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; instances, <ph id="ph1">`RemoveListener`</ph> should remove listeners from the appropriate list, and events should be delivered to the appropriate listener list by calling the &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; method instead of the &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; method.</source>
          <target state="translated">In plaats daarvan uw implementatie moet maken een eigen &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;exemplaren, <ph id="ph1">`RemoveListener`</ph> listeners moet verwijderen uit de lijst en gebeurtenissen moeten worden geleverd aan de lijst van de juiste listener door het aanroepen van de &lt;xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt;methode in plaats van de &lt;xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt;methode.&lt;/xref:System.Windows.WeakEventManager.DeliverEvent%2A&gt; &lt;/xref:System.Windows.WeakEventManager.DeliverEventToList%2A&gt; &lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The source to remove listeners from.</source>
          <target state="translated">De bron listeners van verwijderen.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The listening class (which must implement <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">De luisterende klasse (die moet worden geïmplementeerd <bpt id="p1">&lt;xref href="System.Windows.IWeakEventListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Removes inactive listener entries from the data list for the provided source.</source>
          <target state="translated">Hiermee verwijdert u inactieve listener vermeldingen uit de gegevenslijst voor de opgegeven bron.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if some entries were actually removed from the list.</source>
          <target state="translated">Retourneert <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> als sommige items daadwerkelijk zijn verwijderd uit de lijst.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Purge method has a default implementation that will remove all entries when data is a &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;.</source>
          <target state="translated">De methode opschonen heeft een standaardimplementatie die alle vermeldingen verwijderen wordt als er een &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt; gegevens</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The source for events being listened to.</source>
          <target state="translated">De bron voor gebeurtenissen wordt geluisterd.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The data to check.</source>
          <target state="translated">De gegevens om te controleren.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This object is expected to be a &lt;xref:System.Windows.WeakEventManager.ListenerList&gt; implementation.</source>
          <target state="translated">Dit object wordt verwacht een &lt;xref:System.Windows.WeakEventManager.ListenerList&gt;uitvoering.&lt;/xref:System.Windows.WeakEventManager.ListenerList&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to stop listening to <ph id="ph1">`source`</ph>, and completely remove all entries from <ph id="ph2">`data`</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>om te luisteren naar stoppen <ph id="ph1">`source`</ph>, en alle vermeldingen uit volledig verwijderen <ph id="ph2">`data`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if some entries were actually removed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als sommige items daadwerkelijk zijn verwijderd; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Establishes a read-lock on the underlying data table, and returns an &lt;xref:System.IDisposable&gt;.</source>
          <target state="translated">Stelt een lees-vergrendeling op de onderliggende tabel en retourneert een &lt;xref:System.IDisposable&gt;.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, queries to the table contained in &lt;xref:System.Windows.WeakEventManager.Item%2A&gt; should always occur within a <ph id="ph1">`using (ReadLock) { ... }`</ph> clause, except for queries that are already within a write lock.</source>
          <target state="translated">In afgeleide klassen van query's naar de tabel in &lt;xref:System.Windows.WeakEventManager.Item%2A&gt;moet altijd worden uitgevoerd binnen een <ph id="ph1">`using (ReadLock) { ... }`</ph> component, met uitzondering van query's die al binnen een schrijfvergrendeling zijn.&lt;/xref:System.Windows.WeakEventManager.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>These queries may be necessary if your class supports a more sophisticated <ph id="ph1">`AddListener`</ph> implementation that requires more data beyond the <ph id="ph2">`source`</ph> and the <ph id="ph3">`listener`</ph>, and uses the &lt;xref:System.Windows.WeakEventManager.Item%2A&gt; collection to store the extra information.</source>
          <target state="translated">Deze query's kunnen nodig zijn als uw klasse biedt ondersteuning voor een meer geavanceerde <ph id="ph1">`AddListener`</ph> implementatie vereist dat er meer gegevens buiten de <ph id="ph2">`source`</ph> en de <ph id="ph3">`listener`</ph>, en maakt gebruik van de &lt;xref:System.Windows.WeakEventManager.Item%2A&gt;verzameling de extra informatie op te slaan.&lt;/xref:System.Windows.WeakEventManager.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An object that can be used to establish a lock on the data table members and then be appropriately disposed with a <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> construct.</source>
          <target state="translated">Een object dat kan worden gebruikt voor het maken van een vergrendeling op de leden van de tabel gegevens, klikt u vervolgens op de juiste wijze worden verwijderd met een <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> samenstellen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Removes all listeners for the specified source.</source>
          <target state="translated">Hiermee verwijdert u alle listeners voor de opgegeven bron.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The source to remove listener information for.</source>
          <target state="translated">De bron om gegevens voor listener te verwijderen.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.</source>
          <target state="translated">Aanvragen dat een opschonen van niet-gebruikte vermeldingen in de onderliggende lijst van de listener worden uitgevoerd op een lagere prioriteit-thread.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the ScheduleCleanup method is similar to calling the &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt; method on the current manager's list, at lower thread priority, with the <ph id="ph1">`purgeAll`</ph> parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Aanroepen van de methode ScheduleCleanup is vergelijkbaar met het aanroepen van de &lt;xref:System.Windows.WeakEventManager.Purge%2A&gt;methode in de lijst van de huidige manager lagere thread prioriteit met de <ph id="ph1">`purgeAll`</ph> parameter ingesteld op <ph id="ph2">`false`</ph>.&lt;/xref:System.Windows.WeakEventManager.Purge%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Sets the current manager for the specified manager type.</source>
          <target state="translated">Hiermee stelt de huidige manager voor het type opgegeven manager.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the SetCurrentManager method to initialize a manager, if that is required by a call to your <ph id="ph1">`CurrentManager`</ph> property on a &lt;xref:System.Windows.WeakEventManager&gt; implementation.</source>
          <target state="translated">Roep de methode SetCurrentManager om te initialiseren van een manager als die is door een aanroep naar vereist uw <ph id="ph1">`CurrentManager`</ph> -eigenschap op een &lt;xref:System.Windows.WeakEventManager&gt;uitvoering.&lt;/xref:System.Windows.WeakEventManager&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The type to set the new event manager.</source>
          <target state="translated">Het type de nieuwe gebeurtenis manager instellen.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The new event manager.</source>
          <target state="translated">De nieuwe gebeurtenis manager.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, starts listening for the event being managed.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, begint met luisteren voor de gebeurtenis die wordt beheerd.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>After the StartListening method is first called, the manager should be in the state of calling &lt;xref:System.Windows.WeakEventManager.DeliverEvent<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Windows.WeakEventManager.DeliverEventToList<ept id="p1">*</ept>&gt; whenever the relevant event from the provided source is handled.</source>
          <target state="translated">Nadat de StartListening-methode voor het eerst wordt aangeroepen, wordt de manager moet in de status van aanroepen &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; of &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; wanneer de relevante gebeurtenis van de opgegeven bron wordt verwerkt.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The source to begin listening on.</source>
          <target state="translated">De bron om te beginnen met luisteren op.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, stops listening on the provided source for the event being managed.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, stopt met luisteren op de opgegeven bron voor de gebeurtenis die wordt beheerd.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The source to stop listening on.</source>
          <target state="translated">De bron om te luisteren op stoppen.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Establishes a write-lock on the underlying data table, and returns an&lt;xref:System.IDisposable&gt;.</source>
          <target state="translated">Stelt een schrijfvergrendeling op de onderliggende tabel en retourneert een&lt;xref:System.IDisposable&gt;.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>In derived classes, all modifications to the underlying data table should occur within a <ph id="ph1">`using (WriteLock) { ... }`</ph> clause.</source>
          <target state="translated">In afgeleide klassen alle wijzigingen in de onderliggende tabel moeten worden uitgevoerd binnen een <ph id="ph1">`using (WriteLock) { ... }`</ph> component.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>These modifications may be necessary if your class supports a more sophisticated <ph id="ph1">`AddListener`</ph> implementation that requires more data beyond the <ph id="ph2">`source`</ph> and the <ph id="ph3">`listener`</ph>, and uses the &lt;xref:System.Windows.WeakEventManager.Item%2A&gt; collection to store the extra information.</source>
          <target state="translated">Deze wijzigingen kunnen nodig zijn als uw klasse biedt ondersteuning voor een meer geavanceerde <ph id="ph1">`AddListener`</ph> implementatie vereist dat er meer gegevens buiten de <ph id="ph2">`source`</ph> en de <ph id="ph3">`listener`</ph>, en maakt gebruik van de &lt;xref:System.Windows.WeakEventManager.Item%2A&gt;verzameling de extra informatie op te slaan.&lt;/xref:System.Windows.WeakEventManager.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An object that can be used to establish a lock on the data table members and then be appropriately disposed with a <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> construct.</source>
          <target state="translated">Een object dat kan worden gebruikt voor het maken van een vergrendeling op de leden van de tabel gegevens, klikt u vervolgens op de juiste wijze worden verwijderd met een <bpt id="p1">&lt;xref uid="langword_csharp_using" name="using" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> samenstellen.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>