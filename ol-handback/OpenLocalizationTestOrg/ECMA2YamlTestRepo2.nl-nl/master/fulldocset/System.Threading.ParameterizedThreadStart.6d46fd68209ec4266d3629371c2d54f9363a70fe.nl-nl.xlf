<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e380be4474237c2f088cb14445641a67f71425b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.ParameterizedThreadStart.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">878eece72fe1260cf9bf5cbd3ae706b8d9e9a2a2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44c10de7aee5cd9759c15f18c6f0a26c87b5d110</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the method that executes on a <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee geeft u de methode die wordt uitgevoerd op een <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a managed thread is created, the method that executes on the thread is represented by:      -   A &lt;xref:System.Threading.ThreadStart&gt; delegate that is passed to the &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">Wanneer een beheerde thread is gemaakt, de methode die wordt uitgevoerd op de thread wordt vertegenwoordigd door: - A &lt;xref:System.Threading.ThreadStart&gt;gemachtigde die wordt doorgegeven aan de &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt;constructor.&lt;/xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt; &lt;/xref:System.Threading.ThreadStart&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any method that has no parameters and that returns <ph id="ph1">`void`</ph> in C# or is a <ph id="ph2">`Sub`</ph> procedure in Visual Basic can represent the delegate.</source>
          <target state="translated">Een methode die geen parameters heeft en dat retourneert <ph id="ph1">`void`</ph> in C# of is een <ph id="ph2">`Sub`</ph> procedure in Visual Basic kunt vertegenwoordigen de gemachtigde.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A ParameterizedThreadStart delegate that is passed to the &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">-Een ParameterizedThreadStart-gemachtigde die wordt doorgegeven aan de &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt;constructor.&lt;/xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any method that has a single parameter of type &lt;xref:System.Object&gt; and that returns void in C# or is a Sub procedure in Visual Basic can represent the delegate.</source>
          <target state="translated">Een methode met een enkele parameter van het type &lt;xref:System.Object&gt;en die als resultaat gegeven void in C# of is een Sub-procedure in Visual Basic kunt vertegenwoordigen de gemachtigde.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The thread does not begin executing until the &lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt; method is called.</source>
          <target state="translated">De thread begint niet uitvoeren totdat de &lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;methode wordt aangeroepen.&lt;/xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.ThreadStart&gt; or ParameterizedThreadStart delegate is invoked on the thread, and execution begins at the first line of the method represented by the delegate.</source>
          <target state="translated">De &lt;xref:System.Threading.ThreadStart&gt;of ParameterizedThreadStart gemachtigde wordt aangeroepen op de thread en kan worden uitgevoerd, begint op de eerste regel van de methode die wordt vertegenwoordigd door de gemachtigde.&lt;/xref:System.Threading.ThreadStart&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of the ParameterizedThreadStart delegate, the object that is passed to the &lt;xref:System.Threading.Thread.Start%28System.Object%29&gt; method is passed to the delegate.</source>
          <target state="translated">In het geval van de gemachtigde ParameterizedThreadStart, het object dat wordt doorgegeven aan de &lt;xref:System.Threading.Thread.Start%28System.Object%29&gt;methode wordt doorgegeven aan de gemachtigde.&lt;/xref:System.Threading.Thread.Start%28System.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Visual Basic and C# users can omit the &lt;xref:System.Threading.ThreadStart&gt; or ParameterizedThreadStart delegate constructor when creating a thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Visual Basic en C#-gebruikers kunnen weglaten de &lt;xref:System.Threading.ThreadStart&gt;of ParameterizedThreadStart gemachtigden-constructor bij het maken van een thread.&lt;/xref:System.Threading.ThreadStart&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Visual Basic, use the <ph id="ph1">`AddressOf`</ph> operator when passing your method to the &lt;xref:System.Threading.Thread.%23ctor%2A&gt; constructor; for example, <ph id="ph2">`Dim t As New Thread(AddressOf ThreadProc)`</ph>.</source>
          <target state="translated">In Visual Basic, gebruikt de <ph id="ph1">`AddressOf`</ph> operator bij het doorgeven van de methode voor de &lt;xref:System.Threading.Thread.%23ctor%2A&gt;constructor, bijvoorbeeld <ph id="ph2">`Dim t As New Thread(AddressOf ThreadProc)`</ph>.&lt;/xref:System.Threading.Thread.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>In C#, simply specify the name of the thread procedure.</source>
          <target state="translated">Geef in C#, gewoon de naam van de thread-procedure.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The compiler selects the correct delegate constructor.</source>
          <target state="translated">De compiler selecteert de juiste gemachtigden-constructor.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you create a ParameterizedThreadStart delegate for an instance method in C++, the first parameter of the constructor is the instance variable.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Wanneer u een gemachtigde ParameterizedThreadStart voor een exemplaarmethode in C++ maakt, de eerste parameter van de constructor de variabele voor het exemplaar is.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a static method, the first parameter of the constructor is zero.</source>
          <target state="translated">Voor een statische methode is de eerste parameter van de constructor nul.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a static method, the delegate constructor requires only one parameter: the address of the callback method, qualified by the class name.</source>
          <target state="translated">Voor een statische methode vereist de gemachtigdenconstructor slechts één parameter: het adres van de retouraanroepmethode gekwalificeerd door de naam van de klasse.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ParameterizedThreadStart delegate and the &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt; method overload make it easy to pass data to a thread procedure, but this technique is not type safe because any object can be passed to &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;.</source>
          <target state="translated">De gemachtigde ParameterizedThreadStart en de &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;methode-overload maken het gemakkelijk doorgeven van gegevens naar een thread-procedure, maar deze techniek is niet veilig type omdat een object kan worden doorgegeven aan &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;.&lt;/xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt; &lt;/xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A more robust way to pass data to a thread procedure is to put both the thread procedure and the data fields into a worker object.</source>
          <target state="translated">Een krachtigere manier gegevens moeten worden doorgegeven aan een thread-procedure is zowel de thread-procedure en de gegevensvelden in een object worker plaatsen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Creating Threads and Passing Data at Start Time<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>Threads maken en het doorgeven van gegevens op tijd starten<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ParameterizedThreadStart delegate supports only a single parameter.</source>
          <target state="translated">De gemachtigde ParameterizedThreadStart ondersteunt slechts één parameter.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can pass multiple data items to the ParameterizedThreadStart by making that parameter one of the following:      -   An array.</source>
          <target state="translated">U kunt meerdere gegevensitems doorgeven aan de ParameterizedThreadStart door het maken van een van de volgende parameter:: een matrix.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A collection type, if all of the data items are of the same type.</source>
          <target state="translated">-Een verzamelingstype als alle gegevensitems van hetzelfde type zijn.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A tuple type, such as &lt;xref:System.Tuple%602&gt; or &lt;xref:System.Tuple%604&gt;.</source>
          <target state="translated">-Er is een tuple-type, zoals &lt;xref:System.Tuple%602&gt;of &lt;xref:System.Tuple%604&gt;.&lt;/xref:System.Tuple%604&gt; &lt;/xref:System.Tuple%602&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>