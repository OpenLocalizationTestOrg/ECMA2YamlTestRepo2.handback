<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01a29ba8b6be0cb3371461a78f5e89c26bfe42e7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Messaging.XmlMessageFormatter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58ae862bc0b961377f4edc4bc96254dbb3bee309</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c058aa03a560826c952d30e6184c250444ae9e2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</source>
          <target state="translated">Serialiseert en deserializes objecten naar of van de hoofdtekst van een bericht met behulp van de XML-indeling op basis van de definitie van XSD-schema.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XmlMessageFormatter is the default formatter that an instance of &lt;xref:System.Messaging.MessageQueue&gt; uses to serialize messages written to the queue.</source>
          <target state="translated">De XmlMessageFormatter is de indelingsfunctie standaard die een exemplaar van &lt;xref:System.Messaging.MessageQueue&gt;gebruikt voor serialisatie van berichten die naar de wachtrij worden geschreven.&lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of &lt;xref:System.Messaging.MessageQueue&gt;, an instance of XmlMessageFormatter is created for you and associated with the &lt;xref:System.Messaging.MessageQueue&gt;.</source>
          <target state="translated">Wanneer u een exemplaar van &lt;xref:System.Messaging.MessageQueue&gt;een exemplaar van XmlMessageFormatter voor u gemaakt en gekoppeld aan de &lt;xref:System.Messaging.MessageQueue&gt;.&lt;/xref:System.Messaging.MessageQueue&gt; &lt;/xref:System.Messaging.MessageQueue&gt; maken</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a different formatter by creating it in your code and assigning it to the &lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt; property of your &lt;xref:System.Messaging.MessageQueue&gt;.</source>
          <target state="translated">U kunt geen andere indelingsfunctie opgeven door deze in uw code te maken en toe te wijzen aan de &lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;eigenschap van uw &lt;xref:System.Messaging.MessageQueue&gt;.&lt;/xref:System.Messaging.MessageQueue&gt; &lt;/xref:System.Messaging.MessageQueue.Formatter%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A queue's default XmlMessageFormatter instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; or &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; property on the formatter.</source>
          <target state="translated">Een wachtrij XmlMessageFormatter standaardexemplaar kan worden gebruikt om te schrijven naar de wachtrij, maar deze kan niet worden gebruikt om te lezen uit de wachtrij totdat u een instelt de &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;of &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;-eigenschap op de indelingsfunctie.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt; constructor.</source>
          <target state="translated">U kunt ofwel een of beide van deze waarden instellen op het standaardexemplaar van de indelingsfunctie of u kunt maken van een nieuw exemplaar van de indelingsfunctie en stel de waarden automatisch door deze als argumenten worden doorgegeven in de juiste &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;constructor.&lt;/xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When specifying &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; rather than &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, type existence is checked at compile time rather than read time, reducing possibility for error.</source>
          <target state="translated">Bij het opgeven van &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;plaats &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, type bestaan is ingeschakeld op het tijdstip van compilatie in plaats van lezen tijd, waardoor de mogelijkheid voor fout.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; requires every entry to be fully qualified, specifying its assembly name.</source>
          <target state="translated">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;elke vermelding moet volledig gekwalificeerd zijn, geven de assemblynaam vereist.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</source>
          <target state="translated">Verder, als u werkt met meerdere gelijktijdige versies, het versienummer moet ook worden toegevoegd aan de typenaam doel.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">De &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;en &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;Eigenschappen de indelingsfunctie zien welke schema's om te proberen als overeenkomst als bij het deserialiseren van een bericht.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">Hierdoor is de indelingsfunctie interpreteren van de berichttekst.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Het exemplaar geserialiseerd in de hoofdtekst van het bericht moet voldoen aan een van de schema's weergegeven in het type matrix.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Wanneer u het bericht met de &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;methode, de methode maakt u een object van het type dat overeenkomt met het schema dat wordt geïdentificeerd en leest de berichttekst in deze&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; lezen</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Slechts één van de twee eigenschappen moet worden ingesteld bij het lezen van de wachtrij, maar u kunt beide instellen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">De set van typen is de gecombineerde set van de twee eigenschappen.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decision of which property to use is specific to your application.</source>
          <target state="translated">De beslissing over welke eigenschap te gebruiken is specifiek voor uw toepassing.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</source>
          <target state="translated">Als de berichttekst een type waarvan het schema komt niet overeen met een van de typen in de matrix voor de eigenschap bevat, wordt een uitzondering opgetreden bij het bericht is gelezen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XmlMessageFormatter is a crucial component of loosely coupled XML-based messaging.</source>
          <target state="translated">De XmlMessageFormatter is een belangrijk onderdeel van losse XML gebaseerde uitwisseling van berichten.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</source>
          <target state="translated">Het hulpprogramma XSD.exe gebruikt die de XML-indeling wordt gebruikt voor het genereren van XML-schema, zoals wanneer u het hulpprogramma gebruiken voor het serialiseren van een klasse die wordt gebruikt door de toepassing.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class must have a default constructor.</source>
          <target state="translated">De klasse moet een standaardconstructor hebben.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</source>
          <target state="translated">De indeling gebruikt opnieuw in de omgekeerde proces wanneer het hulpprogramma een klasse die is gebaseerd op schema genereert u distribueren om te beschrijven van uw klassegegevens.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</source>
          <target state="translated">Het gebruik van het hulpprogramma en het XML-schema dat worden gegenereerd, kunt u om te voorkomen dat bestanden redistributing.dll telkens wanneer u een klasse compileren nadat de implementatie van de klasse is gewijzigd.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</source>
          <target state="translated">Als het schema niet worden gewijzigd op de client of de server, andere wijzigingen aan beide zijden hebben geen invloed op de andere.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, without target types set.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse, zonder het doel van het type ingesteld.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</source>
          <target state="translated">Deze overbelasting van de constructor wordt meestal gebruikt bij het schrijven naar de wachtrij als doeltypen niet vereist zijn bij het schrijven.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message from a queue using an instance of &lt;xref:System.Messaging.XmlMessageFormatter&gt; created using this constructor, you must set the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; or &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties so the formatter knows what types to attempt to deserialize.</source>
          <target state="translated">Lezen van een bericht van een wachtrij met een exemplaar van &lt;xref:System.Messaging.XmlMessageFormatter&gt;gemaakt met deze constructor, stelt u de &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;of &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;eigenschappen zodat de indelingsfunctie welke typen weet geprobeerd te deserialiseren.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new &lt;xref:System.Messaging.MessageQueue&gt;, a default &lt;xref:System.Messaging.XmlMessageFormatter&gt; instance is created, without the target types set.</source>
          <target state="translated">Wanneer u een nieuwe maakt &lt;xref:System.Messaging.MessageQueue&gt;, een standaard &lt;xref:System.Messaging.XmlMessageFormatter&gt;instantie is gemaakt, zonder dat de doel-typen is ingesteld.&lt;/xref:System.Messaging.XmlMessageFormatter&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</source>
          <target state="translated">Net als bij een formatter gemaakt met behulp van deze constructor, moet u doeltypen voor dat exemplaar formatter instellen als u wilt lezen uit de wachtrij.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, setting target types passed in as an array of (fully qualified) string values.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse, doeltypen doorgegeven als een matrix van tekenreekswaarden (FQDN) instellen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructors with target type parameters are most frequently used when reading from the queue.</source>
          <target state="translated">De constructors met typeparameters doel het meest worden gebruikt bij het lezen van de wachtrij.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When writing, it is not necessary to specify target types.</source>
          <target state="translated">Wanneer u schrijft, is het niet nodig om op te geven doeltypen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt; constructor sets the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; property to the array values passed in through the <ph id="ph1">`targetTypeNames`</ph> parameter.</source>
          <target state="translated">Deze overbelasting van de &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;constructor stelt de &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;eigenschap aan de matrixwaarden doorgegeven via de <ph id="ph1">`targetTypeNames`</ph> parameter.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property enables a &lt;xref:System.Messaging.MessageQueue&gt; using this &lt;xref:System.Messaging.XmlMessageFormatter&gt; instance to read messages containing objects of given types.</source>
          <target state="translated">Deze eigenschap kunt u de instelling een &lt;xref:System.Messaging.MessageQueue&gt;gebruik van deze &lt;xref:System.Messaging.XmlMessageFormatter&gt;exemplaar voor het lezen van berichten met objecten van het opgegeven typen.&lt;/xref:System.Messaging.XmlMessageFormatter&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Zowel de &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;en &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;Eigenschappen de indelingsfunctie zien welke schema's om te proberen als overeenkomst als bij het deserialiseren van een bericht.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">Hierdoor is de indelingsfunctie interpreteren van de berichttekst.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Het exemplaar geserialiseerd in de hoofdtekst van het bericht moet voldoen aan een van de schema's weergegeven in het type matrix.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Wanneer u het bericht met de &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;methode, de methode maakt u een object van het type dat overeenkomt met het schema dat wordt geïdentificeerd en leest de berichttekst in deze&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; lezen</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Slechts één van de twee eigenschappen moet worden ingesteld bij het lezen van de wachtrij, maar u kunt beide instellen.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">De set van typen is de gecombineerde set van de twee eigenschappen.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decision of which one to use is specific to your application.</source>
          <target state="translated">De beslissing over welke een om te gebruiken is specifiek voor uw toepassing.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</source>
          <target state="translated">Als de berichttekst een type waarvan het schema komt niet overeen met een van de typen in de matrix voor de eigenschap bevat, wordt een uitzondering opgetreden tijdens het lezen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.String&gt; that specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Een matrix van het type &lt;xref:System.String&gt;waarmee de reeks mogelijke typen aangegeven die zullen worden gedeserialiseerd door de indelingsfunctie vanuit het geleverde bericht.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</source>
          <target state="translated">Deze waarden moet volledig gekwalificeerd zijn, bijvoorbeeld "MyNamespace.MyOrders, MyOrdersAssemblyName".</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetTypeNames</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetTypeNames</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, setting target types passed in as an array of object types.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse, doeltypen doorgegeven als een matrix van objecttypen die instelling.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructors with target type parameters are most frequently used when reading from the queue.</source>
          <target state="translated">De constructors met typeparameters doel het meest worden gebruikt bij het lezen van de wachtrij.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>When writing, it is not necessary to specify target types.</source>
          <target state="translated">Wanneer u schrijft, is het niet nodig om op te geven doeltypen.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt; constructor sets the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; property to the array values passed in through the <ph id="ph1">`targetTypes`</ph> parameter.</source>
          <target state="translated">Deze overbelasting van de &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;constructor stelt de &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;eigenschap aan de matrixwaarden doorgegeven via de <ph id="ph1">`targetTypes`</ph> parameter.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property enables a &lt;xref:System.Messaging.MessageQueue&gt; using this &lt;xref:System.Messaging.XmlMessageFormatter&gt; instance to read messages containing objects of the given types.</source>
          <target state="translated">Deze eigenschap kunt u de instelling een &lt;xref:System.Messaging.MessageQueue&gt;gebruik van deze &lt;xref:System.Messaging.XmlMessageFormatter&gt;exemplaar voor het lezen van berichten die objecten van de opgegeven typen bevatten.&lt;/xref:System.Messaging.XmlMessageFormatter&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Zowel de &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;en &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;Eigenschappen de indelingsfunctie zien welke schema's om te proberen als overeenkomst als bij het deserialiseren van een bericht.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">Hierdoor is de indelingsfunctie interpreteren van de berichttekst.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Het exemplaar geserialiseerd in de hoofdtekst van het bericht moet voldoen aan een van de schema's weergegeven in het type matrix.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Wanneer u het bericht met de &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;methode, de methode maakt u een object van het type dat overeenkomt met het schema dat wordt geïdentificeerd en leest de berichttekst in deze&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; lezen</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Slechts één van de twee eigenschappen moet worden ingesteld bij het lezen van de wachtrij, maar u kunt beide instellen.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">De set van typen is de gecombineerde set van de twee eigenschappen.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decision of which one to use is specific to your application.</source>
          <target state="translated">De beslissing over welke een om te gebruiken is specifiek voor uw toepassing.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</source>
          <target state="translated">Als de berichttekst een type waarvan het schema komt niet overeen met een van de typen in de matrix voor de eigenschap bevat, wordt een uitzondering opgetreden tijdens het lezen.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>When specifying &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; rather than &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, type existence is checked at compile time rather than read time, reducing possibility for error.</source>
          <target state="translated">Bij het opgeven van &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;plaats &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, type bestaan is ingeschakeld op het tijdstip van compilatie in plaats van lezen tijd, waardoor de mogelijkheid voor fout.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; requires every entry to be fully qualified, specifying its assembly name.</source>
          <target state="translated">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;elke vermelding moet volledig gekwalificeerd zijn, geven de assemblynaam vereist.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</source>
          <target state="translated">Verder, als u werkt met meerdere gelijktijdige versies, het versienummer moet ook worden toegevoegd aan de typenaam doel.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;, you can add each object (for example, <ph id="ph1">`MyClass`</ph>) to the list in a way demonstrated by the following C# code.</source>
          <target state="translated">Wanneer u &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;, kunt u elk object toevoegen (bijvoorbeeld <ph id="ph1">`MyClass`</ph>) aan de lijst op een manier die door de volgende C#-code wordt gedemonstreerd.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Type&gt; that specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Een matrix van het type &lt;xref:System.Type&gt;waarmee de reeks mogelijke typen aangegeven die zullen worden gedeserialiseerd door de indelingsfunctie vanuit het geleverde bericht.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetTypes</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetTypes</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Determines whether the formatter can deserialize the message.</source>
          <target state="translated">Hiermee wordt bepaald of de indelingsfunctie kan worden gebruikt voor het deserialiseren van het bericht.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>When CanRead is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</source>
          <target state="translated">Als CanRead wordt aangeroepen, wordt de indelingsfunctie probeert te bepalen of de inhoud van het bericht zijn iets die kan worden gedeserialiseerd.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties.</source>
          <target state="translated">De formatter kan alleen het bericht deserialiseren als het type van het bericht hetzelfde schema als een van de typen in de matrix die wordt vertegenwoordigd heeft door de &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;en &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;Eigenschappen.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>CanRead returns <ph id="ph1">`false`</ph> under the following two circumstances:      -   The message was not formatted using the &lt;xref:System.Messaging.XmlMessageFormatter&gt;.</source>
          <target state="translated">CanRead retourneert <ph id="ph1">`false`</ph> in de volgende twee omstandigheden:-het bericht is niet geformatteerd met behulp van de &lt;xref:System.Messaging.XmlMessageFormatter&gt;.&lt;/xref:System.Messaging.XmlMessageFormatter&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The schema of the message body is not among those listed in either the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; or &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; property.</source>
          <target state="translated">-Het schema van de berichttekst behoort niet tot de genoemde in ofwel de &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;of &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;eigenschap.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what types of objects it must be able to deserialize.</source>
          <target state="translated">De &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;en &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;Eigenschappen de indelingsfunctie te zien welke soorten objecten moet het mogelijk om toegang te deserialiseren.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any type is missing from the list, yet is found within the message, CanRead returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Als een ander type in de lijst ontbreekt nog in het bericht is gevonden, CanRead retourneert <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to inspect.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> om te controleren.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the XML formatter can deserialize the message; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de formatter XML van het bericht deserialiseren kan. anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Neither the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames<bpt id="p1">*</bpt>&gt; nor &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes<ept id="p1">*</ept>&gt; property has been set.</source>
          <target state="translated">Noch de &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; noch &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; eigenschap is ingesteld.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Creates an instance of the <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class whose read/write properties (the sets of target types) are the same as the current <bpt id="p2">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">Maakt een exemplaar van de <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse waarvan lezen/schrijven eigenschappen (de sets doeltypen) zijn hetzelfde als de huidige <bpt id="p2">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> exemplaar.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a copy of the formatter and initializes all its properties to the values of this &lt;xref:System.Messaging.XmlMessageFormatter&gt; object.</source>
          <target state="translated">Deze methode maakt een kopie van de indelingsfunctie en initialiseert de eigenschappen aan de waarden van deze &lt;xref:System.Messaging.XmlMessageFormatter&gt;object.&lt;/xref:System.Messaging.XmlMessageFormatter&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An object whose properties are identical to those of this <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, but whose metadata does not specify it to be a formatter class instance.</source>
          <target state="translated">Een object waarvan de eigenschappen identiek aan die van dit zijn <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> exemplaar, maar waarvan metagegevens geeft geen dat het een formatter klasse-instantie.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Reads the contents from the given message and creates an object that contains the deserialized message.</source>
          <target state="translated">De inhoud van het opgegeven bericht leest en maakt een object dat het gedeserialiseerde bericht bevat.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Zowel de &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;en &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;Eigenschappen de indelingsfunctie zien welke schema's om te proberen als overeenkomst als bij het deserialiseren van een bericht.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of these properties must be set before the message can be deserialized.</source>
          <target state="translated">Een van deze eigenschappen moet worden ingesteld voordat het bericht kan worden gedeserialiseerd.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Het exemplaar geserialiseerd in de hoofdtekst van het bericht moet voldoen aan een van de schema's weergegeven in het type matrix.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Wanneer u het bericht met de &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;methode, de methode maakt u een object van het type dat overeenkomt met het schema dat wordt geïdentificeerd en leest de berichttekst in deze&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; lezen</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target types do not have to be specified in order to write to the queue.</source>
          <target state="translated">De doeltypen hoeft niet te worden opgegeven om te schrijven naar de wachtrij.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, in XML format, to deserialize.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, in XML-indeling te deserialiseren.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The deserialized message.</source>
          <target state="translated">Het bericht gedeserialiseerd.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Neither the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames<bpt id="p1">*</bpt>&gt; nor &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes<ept id="p1">*</ept>&gt; property has been set.</source>
          <target state="translated">Noch de &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; noch &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; eigenschap is ingesteld.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-or-       The instance serialized in the message body does not comply with any of the schemas represented by the types in the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes<ept id="p1">*</ept>&gt; properties.</source>
          <target state="translated">- of - het exemplaar geserialiseerd in de berichttekst voldoet niet aan een van de schema's dat wordt vertegenwoordigd door de typen in de &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; en &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; eigenschappen.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Hiermee geeft u de reeks mogelijke typen aangegeven die zullen worden gedeserialiseerd door de indelingsfunctie vanuit het geleverde bericht.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the TargetTypeNames and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Zowel de TargetTypeNames en &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;Eigenschappen de indelingsfunctie zien welke schema's om te proberen als overeenkomst als bij het deserialiseren van een bericht.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">Hierdoor is de indelingsfunctie interpreteren van de berichttekst.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Het exemplaar geserialiseerd in de hoofdtekst van het bericht moet voldoen aan een van de schema's weergegeven in het type matrix.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Wanneer u het bericht met de &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;methode, de methode maakt u een object van het type dat overeenkomt met het schema dat wordt geïdentificeerd en leest de berichttekst in deze&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; lezen</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Slechts één van de twee eigenschappen moet worden ingesteld bij het lezen van de wachtrij, maar u kunt beide instellen.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">De set van typen is de gecombineerde set van de twee eigenschappen.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decision of which property to use is specific to your application.</source>
          <target state="translated">De beslissing over welke eigenschap te gebruiken is specifiek voor uw toepassing.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</source>
          <target state="translated">Als de berichttekst een type waarvan het schema komt niet overeen met een van de typen in de matrix voor de eigenschap bevat, wordt een uitzondering opgetreden bij het bericht is gelezen.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>TargetTypeNames requires every entry to be fully qualified, specifying its assembly name.</source>
          <target state="translated">TargetTypeNames moet elke ingang volledig gekwalificeerd zijn, worden de assemblynaam opgeven.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</source>
          <target state="translated">Verder, als u werkt met meerdere gelijktijdige versies, het versienummer moet ook worden toegevoegd aan de typenaam doel.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target types are only required when reading from the queue.</source>
          <target state="translated">De doeltypen zijn alleen vereist bij het lezen van de wachtrij.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TargetTypeNames and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties do not need to be set to write to the queue.</source>
          <target state="translated">De TargetTypeNames en &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;Eigenschappen hoeft niet te worden ingesteld om te schrijven naar de wachtrij.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.String&gt; that specifies the types of objects to deserialize from the message body when reading the message.</source>
          <target state="translated">Een matrix van het type &lt;xref:System.String&gt;die de typen objecten te deserialiseren van de berichttekst bij het lezen van het bericht aangeeft.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The TargetTypeNames property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De eigenschap TargetTypeNames is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Hiermee geeft u de reeks mogelijke typen aangegeven die zullen worden gedeserialiseerd door de indelingsfunctie vanuit het geleverde bericht.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and TargetTypes properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Zowel de &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;TargetTypes eigenschappen laat de indelingsfunctie welke schema's om te proberen als overeenkomst als bij het deserialiseren van een bericht.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">Hierdoor is de indelingsfunctie interpreteren van de berichttekst.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Het exemplaar geserialiseerd in de hoofdtekst van het bericht moet voldoen aan een van de schema's weergegeven in het type matrix.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Wanneer u het bericht met de &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;methode, de methode maakt u een object van het type dat overeenkomt met het schema dat wordt geïdentificeerd en leest de berichttekst in deze&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; lezen</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Slechts één van de twee eigenschappen moet worden ingesteld bij het lezen van de wachtrij, maar u kunt beide instellen.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">De set van typen is de gecombineerde set van de twee eigenschappen.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decision of which property to use is specific to your application.</source>
          <target state="translated">De beslissing over welke eigenschap te gebruiken is specifiek voor uw toepassing.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</source>
          <target state="translated">Als de berichttekst een type waarvan het schema komt niet overeen met een van de typen in de matrix voor de eigenschap bevat, wordt een uitzondering opgetreden bij het bericht is gelezen.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target types are only required when reading from the queue.</source>
          <target state="translated">De doeltypen zijn alleen vereist bij het lezen van de wachtrij.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and TargetTypes properties do not need to be set to write to the queue.</source>
          <target state="translated">De &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;en TargetTypes eigenschappen hoeven niet te worden ingesteld om te schrijven naar de wachtrij.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>When specifying TargetTypes rather than &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, type existence is checked at compile time rather than read time, reducing possibility for error.</source>
          <target state="translated">Opgeven wanneer TargetTypes plaats &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, type bestaan is ingeschakeld op het tijdstip van compilatie in plaats van lezen tijd, waardoor de mogelijkheid voor fout.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using TargetTypes, you can add each object (for example, <ph id="ph1">`MyClass`</ph>) to the list in a way demonstrated by the C# code <ph id="ph2">`TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`</ph>.</source>
          <target state="translated">Wanneer u TargetTypes gebruikt, kunt u elk object toevoegen (bijvoorbeeld <ph id="ph1">`MyClass`</ph>) aan de lijst op een manier die door de C#-code gedemonstreerd <ph id="ph2">`TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Type&gt; that specifies the types of objects to deserialize from the message body when reading the message.</source>
          <target state="translated">Een matrix van het type &lt;xref:System.Type&gt;die de typen objecten te deserialiseren van de berichttekst bij het lezen van het bericht aangeeft.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The TargetTypes property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De eigenschap TargetTypes is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Serializes an object into the body of the message.</source>
          <target state="translated">Een object serialiseert in de hoofdtekst van het bericht.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target types need not be specified to write to the queue as they must be when reading.</source>
          <target state="translated">De doeltypen moeten niet worden opgegeven om te schrijven naar de wachtrij als ze moet bij het lezen.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; or &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; property is used by the formatter only when deserializing a message.</source>
          <target state="translated">De &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;of &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;eigenschap wordt gebruikt door de formatter alleen wanneer het deserialiseren van een bericht.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.XmlMessageFormatter&gt; makes use of the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; class, which defines what can be serialized.</source>
          <target state="translated">De &lt;xref:System.Messaging.XmlMessageFormatter&gt;maakt gebruik van de &lt;xref:System.Xml.Serialization.XmlSerializer&gt;klasse, die definieert wat kan worden geserialiseerd.&lt;/xref:System.Xml.Serialization.XmlSerializer&gt; &lt;/xref:System.Messaging.XmlMessageFormatter&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only public fields and public properties can be serialized.</source>
          <target state="translated">Alleen worden openbare velden en eigenschappen public geserialiseerd.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</source>
          <target state="translated">Structuren, structuren met arrays en matrices van structuren zijn alle serialiseerbaar omdat ze niet van de gecodeerde stijl met het SOAP-protocol gebruikmaken.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose &lt;xref:System.Messaging.Message.Body*&gt; property will contain the serialized object.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarvan &lt;xref:System.Messaging.Message.Body*&gt;eigenschap wordt geserialiseerd object bevatten.&lt;/xref:System.Messaging.Message.Body*&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to be serialized into the message body.</source>
          <target state="translated">De &lt;xref:System.Object&gt;wordt geserialiseerd in de berichttekst.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>