<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c77c7c3e5516eaa1e8bf6511db9fab9f7b68189c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Specialized.StringEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb9f31e4e70b1811890d70e2c2bb276c6e97d5bf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">438fa99f93782ab283df53c0001e4819aa7c9eb3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports a simple iteration over a <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een eenvoudige herhaling ondersteund via een <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">De <ph id="ph1">`foreach`</ph> -instructie van de taal C# (<ph id="ph2">`for each`</ph> in Visual Basic) de complexiteit van de opsommingen worden verborgen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daarom kan het gebruik <ph id="ph1">`foreach`</ph> wordt aanbevolen, in plaats van rechtstreeks bewerken van de enumerator.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Enumerators kunnen worden gebruikt om de gegevens in de verzameling te lezen, maar ze kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">In eerste instantie bevindt de enumerator zich vóór het eerste element in de verzameling.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;brengt ook de enumerator terug naar deze positie.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, calling &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">Op deze functie, het aanroepen van &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;er een uitzondering gegenereerd.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.</source>
          <target state="translated">U moet daarom aanroepen &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;om door te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;retourneert de hetzelfde object totdat de &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;of &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;wordt aangeroepen.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;Hiermee stelt u &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;naar het volgende element.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Als &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;geeft het einde van de verzameling, de enumerator bevindt zich na het laatste element in de verzameling en &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;retourneert <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Wanneer de enumerator is op deze positie, volgende aanroepen naar &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;ook retourneren <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">Als de laatste aanroep aan &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;geretourneerd <ph id="ph1">`false`</ph>, aanroepende &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;er een uitzondering gegenereerd.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;U kunt naar het eerste element van de verzameling opnieuw aanroepen &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;gevolgd door &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; instellen</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, in de enumerator permanent ongeldig wordt gemaakt en de volgende aanroep aan &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;of &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;er een &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;, &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Als de verzameling is gewijzigd tussen &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;en &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;, &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;retourneert het element dat is ingesteld op, zelfs als de enumerator is al ongeldig gemaakt.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">De enumerator heeft geen exclusieve toegang tot de verzameling; inventariseren door middel van een verzameling is daarom intrinsiek geen procedure thread-safe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the current element in the collection.</source>
          <target state="translated">Hiermee haalt het huidige element in de verzameling.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before reading the value of Current; otherwise, Current is undefined.</source>
          <target state="translated">Nadat een enumerator is gemaakt of na een &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;wordt aangeroepen, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;moet worden aangeroepen om de enumerator gaan naar het eerste element van de verzameling voordat het lezen van de waarde van Current; anders wordt de huidige is niet gedefinieerd.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current also throws an exception if the last call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">Huidige er ook een uitzondering gegenereerd als de laatste aanroep aan &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;geretourneerd <ph id="ph1">`false`</ph>, wat aangeeft dat het einde van de verzameling.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current does not move the position of the enumerator, and consecutive calls to Current return the same object until either &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">Huidige wordt de positie van de enumerator niet verplaatst en opeenvolgende aanroepen naar de huidige hetzelfde object retourneren totdat de &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;of &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;wordt aangeroepen.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, in de enumerator permanent ongeldig wordt gemaakt en de volgende aanroep aan &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;of &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;er een &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Als de verzameling is gewijzigd tussen &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;en &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;retourneert het element dat is ingesteld op, zelfs als de enumerator is al ongeldig gemaakt.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The current element in the collection.</source>
          <target state="translated">Het huidige element in de verzameling.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">De enumerator bevindt zich vóór het eerste element van de verzameling of na het laatste element.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">De enumerator verplaatst naar het volgende onderdeel van de verzameling.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called, an enumerator is positioned before the first element of the collection, and the first call to MoveNext moves the enumerator over the first element of the collection.</source>
          <target state="translated">Nadat een enumerator is gemaakt of na een &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;is aangeroepen, een enumerator bevindt zich vóór het eerste element van de verzameling en de eerste aanroep MoveNext de enumerator verplaatst via het eerste element van de verzameling.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Als MoveNext het einde van de verzameling wordt doorgegeven, wordt de enumerator bevindt zich na het laatste element in de verzameling en MoveNext wordt <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to MoveNext also return <ph id="ph1">`false`</ph> until &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">De enumerator is op deze positie, volgende aanroepen MoveNext ook het volgende retourneren wanneer <ph id="ph1">`false`</ph> totdat &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;wordt aangeroepen.&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, in de enumerator permanent ongeldig wordt gemaakt en de volgende aanroep aan &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;of &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;er een &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Als de verzameling is gewijzigd tussen &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;en &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;retourneert het element dat is ingesteld op, zelfs als de enumerator is al ongeldig gemaakt.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de enumerator is is voortgezet naar het volgende element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> als de enumerator is voorbij het einde van de verzameling.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">De verzameling is gewijzigd nadat de enumerator is gemaakt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Hiermee stelt u de enumerator op de oorspronkelijke positie die vóór het eerste element in de verzameling.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reset moves the enumerator to the beginning of the collection, before the first element.</source>
          <target state="translated">De enumerator niet verplaatst opnieuw instellen naar het begin van de verzameling, vóór het eerste element.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>After Reset, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.</source>
          <target state="translated">Na het opnieuw instellen, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;moet worden aangeroepen om verder te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">De verzameling is gewijzigd nadat de enumerator is gemaakt.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>