<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad45d5350d7ce0512a3ddb042ebe116819840d05</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.DependencyProperty.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e25ae22b2d251a31c5b2f3a8b8c9809a6c5c95b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e77660bde0953d13f802b828789b2dd37b1699e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a property that can be set through methods such as, styling, data binding, animation, and inheritance.</source>
          <target state="translated">Hiermee geeft u een eigenschap die kan worden ingesteld via de methoden zoals, stijlen gegevensbinding, animatie en overname.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A DependencyProperty supports the following capabilities in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>:      -   The property can be set in a style.</source>
          <target state="translated">Een DependencyProperty ondersteunt de volgende mogelijkheden in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>:-de eigenschap kan worden ingesteld in een style.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>stijlen en Templating<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can be set through data binding.</source>
          <target state="translated">-De eigenschap kan worden ingesteld via gegevensbinding.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about data binding dependency properties, see <bpt id="p1">[</bpt>How to: Bind the Properties of Two Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie over de eigenschappen van gegevensbinding afhankelijkheid <bpt id="p1">[</bpt>hoe: de eigenschappen van twee besturingselementen binden<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can be set with a dynamic resource reference.</source>
          <target state="translated">-De eigenschap kan worden ingesteld met een verwijzing dynamische bron.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can inherit its value automatically from a parent element in the element tree.</source>
          <target state="translated">-De eigenschap kan de waarde ervan automatisch overnemen van een bovenliggend element in de structuur van element.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Property Value Inheritance<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>waarde Eigenschapsovername<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can be animated.</source>
          <target state="translated">-De animatie van de eigenschap kan worden toegepast.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Animation Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>overzicht van animatie<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can report when the previous value of the property has been changed and the property value can be coerced.</source>
          <target state="translated">-De eigenschap kan rapporteren wanneer de vorige waarde van de eigenschap is gewijzigd en de waarde van eigenschap kan worden afgedwongen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>afhankelijkheid eigenschap retouraanroepen en validatie<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property reports information to <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, such as whether changing a property value should require the layout system to recompose the visuals for an element.</source>
          <target state="translated">-De eigenschap rapporteert informatie <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, zoals of wijzigen van een eigenschapswaarde moet het systeem lay-out om opnieuw de visuele elementen voor een element.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property receives support in the <ph id="ph1">[!INCLUDE[wpfdesigner_current_long](~/add/includes/wpfdesigner-current-long-md.md)]</ph>.</source>
          <target state="translated">-De eigenschap ontvangt ondersteuning voor de <ph id="ph1">[!INCLUDE[wpfdesigner_current_long](~/add/includes/wpfdesigner-current-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the property can be edited in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window.</source>
          <target state="translated">Bijvoorbeeld: de eigenschap kan worden bewerkt de <bpt id="p1">**</bpt>eigenschappen<ept id="p1">**</ept> venster.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To learn more about dependency properties, see <bpt id="p1">[</bpt>Dependency Properties Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie over de afhankelijkheidseigenschappen van, <bpt id="p1">[</bpt>afhankelijkheid eigenschappen overzicht<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want properties on your custom types to support the capabilities in the preceding list, you should create a dependency property.</source>
          <target state="translated">Als u eigenschappen op uw aangepaste typen wilt ter ondersteuning van de mogelijkheden in de bovenstaande lijst, moet u een afhankelijkheidseigenschap maken.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To learn how to create custom dependency properties, see <bpt id="p1">[</bpt>Custom Dependency Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie over het maken van aangepaste afhankelijkheidseigenschappen, <bpt id="p1">[</bpt>aangepaste afhankelijkheidseigenschappen<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attached property is a property that enables any object to report information to the type that defines the attached property.</source>
          <target state="translated">Een gekoppelde eigenschap is een eigenschap waarmee een object voor het rapporteren van gegevens naar het type dat de gekoppelde eigenschap definieert.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, any type that inherits from &lt;xref:System.Windows.DependencyObject&gt; can use an attached property regardless of whether the type inherits from the type that defines the property.</source>
          <target state="translated">In <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, type dat eigenschappen van overneemt &lt;xref:System.Windows.DependencyObject&gt;kunt gebruiken een gekoppelde eigenschap ongeacht of het type neemt over van het type dat de eigenschap definieert.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attached property is a feature of the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> language.</source>
          <target state="translated">Een gekoppelde eigenschap is een functie van de <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> taal.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set an attached property in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, use the <bpt id="p1">*</bpt>ownerType<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept> syntax.</source>
          <target state="translated">Een gekoppelde eigenschap instellen in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, gebruiken de <bpt id="p1">*</bpt>ownerType<ept id="p1">*</ept>.<bpt id="p2">*</bpt> propertyName<ept id="p2">*</ept> syntaxis.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of an attached property is the &lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">Een voorbeeld van een gekoppelde eigenschap is de &lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;eigenschap.&lt;/xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to create a property that can be used on all &lt;xref:System.Windows.DependencyObject&gt; types, then you should create an attached property.</source>
          <target state="translated">Als u wilt maken van een eigenschap die kan worden gebruikt voor alle &lt;xref:System.Windows.DependencyObject&gt;typt, moet u een gekoppelde eigenschap maken.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>To learn more about attached properties, including how to create them, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie over de bijgevoegde eigenschappen, waaronder het maken, <bpt id="p1">[</bpt>gekoppeld eigenschappen overzicht<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_DependencyProperty"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="dependencyPropertyName"/&gt;   - or -   &lt;object property="ownerType.dependencyPropertyName"/&gt;   - or -   &lt;object property="attachedPropertyOwnerType.attachedPropertyName"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_DependencyProperty"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <ph id="ph2">`dependencyPropertyName`</ph>    A string that specifies the &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt; of the desired dependency property.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_DependencyProperty"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML Kenmerkgebruik <ph id="ph1">```   &lt;object property="dependencyPropertyName"/&gt;   - or -   &lt;object property="ownerType.dependencyPropertyName"/&gt;   - or -   &lt;object property="attachedPropertyOwnerType.attachedPropertyName"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_DependencyProperty"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## XAML waarden <ph id="ph2">`dependencyPropertyName`</ph> een tekenreeks waarmee de &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;van de gewenste afhankelijkheidseigenschap.&lt;/xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;      </target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be preceded by an XML namespace prefix if the property is not in the default XML namespace (for details, see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.)       <ph id="ph1">`ownerType`</ph>.<ph id="ph2">`dependencyPropertyName`</ph></source>
          <target state="translated">Dit kan worden voorafgegaan door een XML-naamruimtevoorvoegsel als de eigenschap niet de standaard XML-naamruimte is (Zie voor meer informatie <bpt id="p1">[</bpt>XAML-naamruimten en Namespace toe te wijzen voor WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.)       <ph id="ph1">`ownerType`</ph>.<ph id="ph2">`dependencyPropertyName`</ph></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>A string that specifies an owner type of a dependency property, a dot (.), then the &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Een tekenreeks die een Eigenaartype van een afhankelijkheidseigenschap, een punt (.) en vervolgens de &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ownerType`</ph> can also be preceded by an XML namespace prefix.</source>
          <target state="translated"><ph id="ph1">`ownerType`</ph>kan ook worden voorafgegaan door een XML-naamruimtevoorvoegsel.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This usage is particular to late-bound styles and templates, where the owner of the dependency property must be specified for parsing context because the <ph id="ph1">`TargetType`</ph> is not yet known.</source>
          <target state="translated">Dit gebruik is ingesteld voor een laatgebonden stijlen en sjablonen, waarbij de eigenaar van de afhankelijkheidseigenschap moet worden opgegeven voor het parseren van de context omdat de <ph id="ph1">`TargetType`</ph> nog niet bekend.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](../Topic/Styling%20and%20Templating.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>stijlen en Templating<ept id="p1">](../Topic/Styling%20and%20Templating.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`attachedPropertyOwnerType`</ph> <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`attachedPropertyOwnerType`</ph> <bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`attachedPropertyName`</ph>    A string that specifies  the owner of an attached property, a dot (.), then the attached property name.</source>
          <target state="translated"><ph id="ph1">`attachedPropertyName`</ph>Een tekenreeks die de eigenaar van een gekoppelde eigenschap, een punt (.) en vervolgens de naam van de gekoppelde eigenschap opgeeft.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`attachedPropertyOwnerType`</ph> can also be preceded by an XML namespace prefix.</source>
          <target state="translated"><ph id="ph1">`attachedPropertyOwnerType`</ph>kan ook worden voorafgegaan door een XML-naamruimtevoorvoegsel.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adds another type as an owner of a dependency property that has already been registered.</source>
          <target state="translated">Voegt een ander type als eigenaar van een afhankelijkheidseigenschap die is al geregistreerd.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables the property system to recognize a dependency property on a type that did not register that particular dependency property initially.</source>
          <target state="translated">Deze methode kunt het systeem eigenschap voor het herkennen van een afhankelijkheidseigenschap op een type dat is dat bepaalde afhankelijkheidseigenschap niet in eerste instantie geregistreerd.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, AddOwner is used to add dependency properties to classes that do not already expose that dependency property through managed class inheritance (class inheritance would cause the wrapper properties to be inherited by the derived class, and thus would provide general members-table access to the dependency property already).</source>
          <target state="translated">AddOwner wordt normaal gesproken gebruikt om toe te voegen afhankelijkheidseigenschappen voor klassen die niet al deze afhankelijkheidseigenschap via beheerde klassenovername blootstellen (klassenovername ervoor zou zorgen dat de wrapper-eigenschappen worden overgenomen door de afgeleide klasse en daarom zou tabel algemene leden toegang bieden tot de afhankelijkheidseigenschap al).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>AddOwner enables the property system to recognize a dependency property on a type that did not register that dependency property initially.</source>
          <target state="translated">AddOwner zorgt voor de eigenschap-systeem voor het herkennen van een afhankelijkheidseigenschap op een type dat daarvan kan die afhankelijkheidseigenschap niet in eerste instantie registreren.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature does not allow for specifying metadata.</source>
          <target state="translated">Deze handtekening is niet toegestaan voor het opgeven van metagegevens.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this method, the metadata is automatically generated for the new &lt;xref:System.Windows.DependencyProperty&gt; and its owner type.</source>
          <target state="translated">Wanneer u deze methode gebruikt, de metagegevens wordt automatisch gegenereerd voor de nieuwe &lt;xref:System.Windows.DependencyProperty&gt;en het eigenaarstype.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The auto-generated metadata is the result of the merged metadata from all of the base types that have this property defined.</source>
          <target state="translated">De metagegevens van de automatisch gegenereerde is het resultaat van de samengevoegde metagegevens uit alle van de basistypen waarvoor deze eigenschap is gedefinieerd.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no merged metadata is available, then the default metadata for the property is used.</source>
          <target state="translated">Als er geen samengevoegde metagegevens beschikbaar is, wordt de standaard-metagegevens voor de eigenschap gebruikt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property is registered by using the &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; method, then the default metadata is the same as the metadata that is created when &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; was called.</source>
          <target state="translated">Als de eigenschap is geregistreerd met behulp van de &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;methode en vervolgens de metagegevens van de standaardwaarde is hetzelfde als de metagegevens die wordt gemaakt wanneer &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;is aangeroepen.&lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the &lt;xref:System.Windows.PropertyMetadata&gt; object is created with the &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; property set to the property type's default and all other properties of the &lt;xref:System.Windows.PropertyMetadata&gt; is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Anders wordt de &lt;xref:System.Windows.PropertyMetadata&gt;object is gemaakt met de &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;eigenschap is ingesteld op het eigenschapstype standaard en alle andere eigenschappen van de &lt;xref:System.Windows.PropertyMetadata&gt;is ingesteld op <ph id="ph1">`null`</ph>.&lt;/xref:System.Windows.PropertyMetadata&gt; &lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; &lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt; signature if you want to provide metadata for the version of the dependency property as added to the provided type.</source>
          <target state="translated">Gebruik de &lt;xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;handtekening als u wilt dat metagegevens op te geven voor de versie van de afhankelijkheidseigenschap toegevoegd aan het opgegeven type.&lt;/xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value of this method is typically used to declare and expose the dependency property by storing a dependency property identifier.</source>
          <target state="translated">De geretourneerde waarde van deze methode wordt doorgaans gebruikt voor declareren en maak de afhankelijkheidseigenschap zichtbaar doordat een afhankelijkheid eigenschaps-id.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The identifier provides access to the dependency property if you want to call property system <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> against the dependency property, particularly as it exists on the adding owner class.</source>
          <target state="translated">De id biedt toegang tot de afhankelijkheidseigenschap als u wilt aanroepen van de eigenschap system <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> tegen de afhankelijkheidseigenschap met name als bestaat op de eigenaar-klasse toe te voegen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same property name for both original owner and added owner should be used to indicate the similar functionality.</source>
          <target state="translated">De naam van de dezelfde eigenschap voor zowel de oorspronkelijke eigenaar en de toegevoegde eigenaar moet worden gebruikt om aan te geven van de vergelijkbare functionaliteit.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use the &lt;xref:System.Windows.DependencyProperty&gt; return value of the AddOwner method to define the dependency property identifier, and also to declare <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> property wrappers, for dependency properties that are added to types using AddOwner.</source>
          <target state="translated">Moet u de &lt;xref:System.Windows.DependencyProperty&gt;retourwaarde van de AddOwner-methode voor het definiëren van de eigenschap id van afhankelijkheid en om te declareren <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> eigenschap wrappers, voor afhankelijkheidseigenschappen die zijn toegevoegd aan de typen met behulp van AddOwner.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddOwner methodology recommended above is used when creating the dependency properties that are declared within <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">De hierboven aanbevolen AddOwner-methode wordt gebruikt bij het maken van de eigenschappen van de afhankelijkheid die zijn gedeclareerd binnen <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, both &lt;xref:System.Windows.Controls.Border&gt; and &lt;xref:System.Windows.Controls.Control&gt; define a <ph id="ph1">`BorderBrush`</ph> dependency property, which have similar functionality.</source>
          <target state="translated">Bijvoorbeeld: beide &lt;xref:System.Windows.Controls.Border&gt;en &lt;xref:System.Windows.Controls.Control&gt;definiëren een <ph id="ph1">`BorderBrush`</ph> afhankelijkheidseigenschap met vergelijkbare functionaliteit.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Border&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.Control&gt; defines its <ph id="ph1">`BorderBrush`</ph> property to the property system by calling AddOwner based on the original owner &lt;xref:System.Windows.Controls.Border&gt; and its registered &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt; dependency property identifer.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Control&gt;definieert de <ph id="ph1">`BorderBrush`</ph> eigenschap met de eigenschap systeem door het aanroepen van AddOwner op basis van de oorspronkelijke eigenaar &lt;xref:System.Windows.Controls.Border&gt;en de geregistreerde &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt;eigenschap-id van afhankelijkheid.&lt;/xref:System.Windows.Controls.Border.BorderBrushProperty&gt; &lt;/xref:System.Windows.Controls.Border&gt;&lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddOwner return value is then used to establish a new static &lt;xref:System.Windows.DependencyProperty&gt; field (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;) for that property on the added owner, and a <ph id="ph1">`BorderBrush`</ph> property wrapper is also declared.</source>
          <target state="translated">De AddOwner retourneren waarde wordt vervolgens gebruikt voor het tot stand brengen van een nieuw statisch &lt;xref:System.Windows.DependencyProperty&gt;veld (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;) voor die eigenschap in de toegevoegde eigenaar en een <ph id="ph1">`BorderBrush`</ph> eigenschap wrapper wordt ook gedeclareerd.&lt;/xref:System.Windows.Controls.Control.BorderBrushProperty&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The type to add as an owner of this dependency property.</source>
          <target state="translated">Het type moet worden toegevoegd als een eigenaar van deze afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A reference to the original <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier that identifies the dependency property.</source>
          <target state="translated">Een verwijzing naar de oorspronkelijke <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -id waarmee de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This identifier should be exposed by the adding class as a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field.</source>
          <target state="translated">Deze id moet worden weergegeven door de klasse toe te voegen als een <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> veld.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Adds another type as an owner of a dependency property that has already been registered, providing dependency property metadata for the dependency property as it will exist on the provided owner type.</source>
          <target state="translated">Een ander type toegevoegd als een eigenaar van een afhankelijkheidseigenschap die al is geregistreerd, verstrekken die de metagegevens van de eigenschap afhankelijkheid voor de afhankelijkheidseigenschap bestaat deze op het type van de opgegeven eigenaar.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables the property system to recognize a dependency property on a type that did not register that particular dependency property initially.</source>
          <target state="translated">Deze methode kunt het systeem eigenschap voor het herkennen van een afhankelijkheidseigenschap op een type dat is dat bepaalde afhankelijkheidseigenschap niet in eerste instantie geregistreerd.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value of this method is used to declare and expose the dependency property, particularly as it exists on the adding owner class.</source>
          <target state="translated">De geretourneerde waarde van deze methode wordt gebruikt voor declareren en de afhankelijkheidseigenschap weer te geven, met name als deze op de eigenaar-klasse toe te voegen bestaat.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, the same property name for both original owner and added owner should be used to indicate the similar functionality.</source>
          <target state="translated">In het algemeen moet dezelfde eigenschapsnaam voor zowel de oorspronkelijke eigenaar en de toegevoegde eigenaar worden gebruikt om aan te geven van de vergelijkbare functionaliteit.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is good practice to expose the identifiers, as well as new <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> property wrappers, for dependency properties that are added to types using &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;.</source>
          <target state="translated">Het is raadzaam om te kunnen stellen de-id's, ook als een nieuwe <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> eigenschap wrappers, voor afhankelijkheidseigenschappen die zijn toegevoegd aan de typen met behulp van &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; methodology recommended above is used when creating <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> declared within <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">De &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;hierboven aanbevolen methodologie wordt gebruikt bij het maken van <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> gedeclareerd binnen <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.&lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, both &lt;xref:System.Windows.Controls.Border&gt; and &lt;xref:System.Windows.Controls.Control&gt; define a <ph id="ph1">`BorderBrush`</ph> dependency property, which have similar functionality.</source>
          <target state="translated">Bijvoorbeeld: beide &lt;xref:System.Windows.Controls.Border&gt;en &lt;xref:System.Windows.Controls.Control&gt;definiëren een <ph id="ph1">`BorderBrush`</ph> afhankelijkheidseigenschap met vergelijkbare functionaliteit.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Border&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.Control&gt; defines its <ph id="ph1">`BorderBrush`</ph> property to the property system by calling &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; on original owner &lt;xref:System.Windows.Controls.Border&gt; and its registered &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt; dependency property identifer.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Control&gt;definieert de <ph id="ph1">`BorderBrush`</ph> eigenschap met de eigenschap systeem door het aanroepen van &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;in de oorspronkelijke eigenaar &lt;xref:System.Windows.Controls.Border&gt;en de geregistreerde &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt;afhankelijkheid eigenschap-id.&lt;/xref:System.Windows.Controls.Border.BorderBrushProperty&gt; &lt;/xref:System.Windows.Controls.Border&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;&lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; return value is then used to establish a static &lt;xref:System.Windows.DependencyProperty&gt; field (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;)for that property on the added owner, and a <ph id="ph1">`BorderBrush`</ph> property wrapper is also declared.</source>
          <target state="translated">De &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;retourneren waarde wordt vervolgens gebruikt voor het tot stand brengen van een statische &lt;xref:System.Windows.DependencyProperty&gt;veld (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;) voor die eigenschap in de toegevoegde eigenaar en een <ph id="ph1">`BorderBrush`</ph> eigenschap wrapper wordt ook gedeclareerd.&lt;/xref:System.Windows.Controls.Control.BorderBrushProperty&gt; &lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The added owner's dependency property identifier should be used for operations such as &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.</source>
          <target state="translated">De toegevoegde eigenaar afhankelijkheid eigenschaps-id moet worden gebruikt voor bewerkingen, zoals &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.&lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, type-specific operations involving either types or instances of the class that was added as owner with different metadata will still return the expected results even if the original (not the added owner's) dependency property identifier is specified in calls to methods such as &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt; or &lt;xref:System.Windows.DependencyProperty.GetMetadata%2A&gt;.</source>
          <target state="translated">Type-specifieke bewerkingen met betrekking tot typen of exemplaren van de klasse die is toegevoegd als eigenaar met andere metagegevens nog retourneert echter de verwachte resultaten zelfs als de oorspronkelijke (geen toegevoegde van de eigenaar) afhankelijkheid eigenschaps-id is opgegeven in aanroepen van methoden zoals &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;of &lt;xref:System.Windows.DependencyProperty.GetMetadata%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.GetMetadata%2A&gt; &lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The metadata for the added owner is perpetuated by the AddOwner call itself, not necessarily referenced exclusively by the adding owner class identifier field.</source>
          <target state="translated">De metagegevens voor de eigenaar van de toegevoegde is door de AddOwner perpetuated aanroepen zelf niet noodzakelijkerwijs waarnaar wordt verwezen exclusief gebruik door het veld toe te voegen eigenaar klasse-id.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nevertheless, it is good practice to expose the  identifier, as well as new <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> property wrappers, for dependency properties that are added to types using AddOwner, because failing to do so creates disparity between the <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> and <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> representations of your properties.</source>
          <target state="translated">Evenwel is het verstandig om de id, ook als een nieuwe weer te <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> eigenschap wrappers, voor afhankelijkheidseigenschappen die zijn toegevoegd aan de typen met behulp van AddOwner, omdat dit niet te doen verschillen tussen maakt de <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> en <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> representaties van uw eigenschappen.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied metadata is merged with the property metadata for the dependency property as it exists on the base owner.</source>
          <target state="translated">De opgegeven metagegevens is samengevoegd met de metagegevens van de eigenschap voor de afhankelijkheidseigenschap zoals zich dit in de eigenaar van het basistype.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any characteristics that were specified in the original base metadata will persist.</source>
          <target state="translated">Alle kenmerken die zijn opgegeven in de metagegevens van de oorspronkelijke base bewaard.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only those characteristics that were specifically changed in the new metadata will override the characteristics of the base metadata.</source>
          <target state="translated">De kenmerken van de metagegevens van de base wordt overschreven door kenmerken die specifiek zijn gewijzigd in de nieuwe metagegevens.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characteristics, such as &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;, are replaced if they are specified in the new metadata.</source>
          <target state="translated">Enkele kenmerken, zoals &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;, worden vervangen als ze worden opgegeven in de nieuwe metagegevens.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Others, such as &lt;xref:System.Windows.PropertyChangedCallback&gt;, are combined.</source>
          <target state="translated">Anderen, zoals &lt;xref:System.Windows.PropertyChangedCallback&gt;, worden gecombineerd.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ultimately, the merge behavior depends on the property metadata type being used for the override, so the behavior described here is for the existing property metadata classes used by <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> dependency properties.</source>
          <target state="translated">Uiteindelijk het gedrag samenvoegen is afhankelijk van het metagegevenstype van eigenschap wordt gebruikt voor de onderdrukking, zodat het gedrag dat hier wordt beschreven voor de bestaande eigenschap metagegevens klassen die worden gebruikt door <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> afhankelijkheidseigenschappen.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Metadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Framework Property Metadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>metagegevens van de eigenschap afhankelijkheid<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> en <bpt id="p2">[</bpt>metagegevens van de eigenschap Framework<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The type to add as owner of this dependency property.</source>
          <target state="translated">Het type om toe te voegen als de eigenaar van deze afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The metadata that qualifies the dependency property as it exists on the provided type.</source>
          <target state="translated">De metagegevens die in aanmerking de afhankelijkheidseigenschap komt zoals zich dit op het opgegeven type.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A reference to the original <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier that identifies the dependency property.</source>
          <target state="translated">Een verwijzing naar de oorspronkelijke <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -id waarmee de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This identifier should be exposed by the adding class as a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field.</source>
          <target state="translated">Deze id moet worden weergegeven door de klasse toe te voegen als een <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> veld.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets the default metadata of the dependency property.</source>
          <target state="translated">Hiermee haalt u de standaard-metagegevens van de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default metadata is the property metadata that is available to that particular object or an object of a derived type where no alternative metadata was supplied by an explicit &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; call.</source>
          <target state="translated">De metagegevens die standaard is de metagegevens van de eigenschap die beschikbaar is voor dit object of een object van een afgeleid type waarin geen alternatieve metagegevens is geleverd door een expliciete &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;of &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;aanroepen.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the original owner applied metadata to the first &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call that established the dependency property, then that metadata is returned as DefaultMetadata.</source>
          <target state="translated">Als de oorspronkelijke eigenaar metagegevens op de eerste toegepast &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;oproep waarin de afhankelijkheidseigenschap tot stand worden gebracht en vervolgens de metagegevens wordt geretourneerd als DefaultMetadata.&lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no metadata was applied in the original &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call, then default metadata is generated from within the &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call and this value is returned as the DefaultMetadata.</source>
          <target state="translated">Als er geen metagegevens is toegepast in de oorspronkelijke &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;aanroep, standaard metagegevens worden gegenereerd vanuit de &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;aanroep en deze waarde wordt geretourneerd als de DefaultMetadata.&lt;/xref:System.Windows.DependencyProperty.Register%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The main purpose of having default metadata associated with a &lt;xref:System.Windows.DependencyProperty&gt; is to supply a default value for this property on any &lt;xref:System.Windows.DependencyObject&gt; or a derived type.</source>
          <target state="translated">Het belangrijkste doel van de standaard metagegevens gekoppeld aan een &lt;xref:System.Windows.DependencyProperty&gt;is het leveren van een standaardwaarde voor deze eigenschap op een &lt;xref:System.Windows.DependencyObject&gt;of een afgeleid type.&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For nonattached properties, the metadata type returned by this property cannot be cast to derived types of &lt;xref:System.Windows.PropertyMetadata&gt; type, even if the property was originally registered with a derived metadata type.</source>
          <target state="translated">Voor nonattached eigenschappen de metagegevenstype dat is geretourneerd door deze eigenschap kan niet worden geconverteerd naar afgeleide typen &lt;xref:System.Windows.PropertyMetadata&gt;typt, zelfs als de eigenschap oorspronkelijk is geregistreerd met een afgeleide metagegevenstype.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the originally registered metadata including its original possibly derived metadata type, call &lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Type%29&gt; instead, passing the original registering type as a parameter.</source>
          <target state="translated">Als u wilt dat de oorspronkelijk geregistreerde metagegevens, met inbegrip van de oorspronkelijke mogelijk afgeleide metagegevenstype, belt &lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Type%29&gt;in plaats daarvan het doorgeven van de oorspronkelijke registratie typt als parameter.&lt;/xref:System.Windows.DependencyProperty.GetMetadata%28System.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For attached properties, the type of the metadata returned by this property will match the type given in the original &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; registration method.</source>
          <target state="translated">Voor de bijgevoegde eigenschappen, het type van de metagegevens die zijn geretourneerd door deze eigenschap komt overeen met het type dat is opgegeven in de oorspronkelijke &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;registratiemethode.&lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default metadata of the dependency property.</source>
          <target state="translated">De standaard-metagegevens van de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns a hash code for this <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een hashcode voor deze <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system uses its own unique identifier &lt;xref:System.Windows.DependencyProperty.GlobalIndex%2A&gt;, and the value of that property is returned by GetHashCode.</source>
          <target state="translated">Het systeem eigenschap maakt gebruik van zijn eigen unieke id &lt;xref:System.Windows.DependencyProperty.GlobalIndex%2A&gt;, en de waarde van deze eigenschap wordt geretourneerd door GetHashCode.&lt;/xref:System.Windows.DependencyProperty.GlobalIndex%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The hash code for this <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De hash-code voor deze <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns the metadata for this dependency property as it exists on a specified existing type.</source>
          <target state="translated">Retourneert de metagegevens voor deze afhankelijkheidseigenschap zoals zich dit op een opgegeven bestaande type.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying either the type or an object reference to use as type is necessary because the metadata can vary from the original registration due either to &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; calls that alter the metadata of the dependency property as it exists on a type.</source>
          <target state="translated">Het opgeven van het type of een verwijzing naar een object om te gebruiken als het type is nodig omdat de metagegevens kan afwijken van de registratie van de oorspronkelijke vervaldatum toekennen aan &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;of &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;aanroepen die de metagegevens van de afhankelijkheidseigenschap alter zoals dit zich op een type.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The specific type from which to retrieve the dependency property metadata.</source>
          <target state="translated">Het specifieke type van waaruit de metagegevens van de eigenschap afhankelijkheid ophalen.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A property metadata object.</source>
          <target state="translated">Het metagegevensobject voor een eigenschap.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns the metadata for this dependency property as it exists on the specified object instance.</source>
          <target state="translated">Retourneert de metagegevens voor deze afhankelijkheidseigenschap zoals zich dit op het exemplaar van het opgegeven object.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying either the type or an object reference is necessary because the metadata of any given dependency property can vary from the original registration due either to &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; calls that can refine the property metadata as it exists on a type.</source>
          <target state="translated">Het opgeven van het type of een objectverwijzing is nodig omdat de metagegevens van een bepaalde afhankelijkheidseigenschap kan afwijken van de registratie van de oorspronkelijke vervaldatum toekennen aan &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;of &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;aanroepen die u de metagegevens van de eigenschap verfijnen kunnen zoals dit zich op een type.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you request property metadata based on an instance, you are really just passing the instance so that its type can be evaluated internally.</source>
          <target state="translated">Wanneer u de metagegevens van de eigenschap op basis van een exemplaar aanvraagt, doorgeeft u gewoon het exemplaar dat het type intern kan worden geëvalueerd.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency property metadata does not vary per instance; it is always consistent for any given type-property combination.</source>
          <target state="translated">Metagegevens van de eigenschap afhankelijkheid komt niet verschillen per exemplaar; het is altijd consistent zijn voor elke combinatie van het gegeven type-eigenschap.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A dependency object that is checked for type, to determine which type-specific version of the dependency property the metadata should come from.</source>
          <target state="translated">Een afhankelijkheidsobject dat wordt gecontroleerd op type om te bepalen welke specifieke versie van de afhankelijkheidseigenschap de metagegevens moet voortkomen uit.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A property metadata object.</source>
          <target state="translated">Het metagegevensobject voor een eigenschap.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Returns the metadata for this dependency property as it exists on a specified type.</source>
          <target state="translated">Retourneert de metagegevens voor deze afhankelijkheidseigenschap zoals zich dit op een bepaald type.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying either the type or an object reference is necessary because the metadata of any given dependency property can vary from the original registration due either to &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; calls that can refine the property metadata as it exists on a type.</source>
          <target state="translated">Het opgeven van het type of een objectverwijzing is nodig omdat de metagegevens van een bepaalde afhankelijkheidseigenschap kan afwijken van de registratie van de oorspronkelijke vervaldatum toekennen aan &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;of &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;aanroepen die u de metagegevens van de eigenschap verfijnen kunnen zoals dit zich op een type.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A specific object that records the dependency object type from which the dependency property metadata is desired.</source>
          <target state="translated">Een specifiek object waarmee de afhankelijkheid van het type van waaruit de metagegevens van de eigenschap afhankelijkheid gewenst is vastgelegd.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A property metadata object.</source>
          <target state="translated">Het metagegevensobject voor een eigenschap.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets an internally generated value that uniquely identifies the dependency property.</source>
          <target state="translated">Hiermee wordt een intern gegenereerde waarde die een unieke identificatie van de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is an integer, not a <ph id="ph1">[!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">Deze waarde is een geheel getal, niet een <ph id="ph1">[!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, using this index value is not required, and there is no index access to tables of all dependency properties.</source>
          <target state="translated">In het algemeen met behulp van de waarde voor deze index is niet vereist en er is geen index toegang tot tabellen van alle eigenschappen van afhankelijkheid.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency properties should instead be referenced by their identifier fields.</source>
          <target state="translated">Afhankelijkheidseigenschappen moeten in plaats daarvan worden verwezen door de id-velden.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>GlobalIndex is used internally for faster access to data structures that use the GlobalIndex as a zero-based array index.</source>
          <target state="translated">GlobalIndex wordt intern gebruikt voor sneller toegang tot gegevensstructuren die de GlobalIndex als een index op nul gebaseerde matrix gebruiken.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>A similar usage might have applications for designers or tools.</source>
          <target state="translated">Een vergelijkbaar gebruik wellicht toepassingen voor ontwerpers of hulpprogramma's.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A unique numeric identifier.</source>
          <target state="translated">Een unieke numerieke id.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Determines whether a specified value is acceptable for this dependency property's type, as checked against the property type provided in the original dependency property registration.</source>
          <target state="translated">Hiermee wordt bepaald of een bepaalde waarde aanvaardbaar is voor deze afhankelijkheidseigenschap type, zoals vergeleken met het eigenschapstype opgegeven in de oorspronkelijke eigenschap registratie van cacheafhankelijkheid.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value of <ph id="ph1">`null`</ph> is a valid type for reference type dependency properties, or for a &lt;xref:System.Nullable%601&gt; dependency property, and would return <ph id="ph2">`true`</ph> for these cases.</source>
          <target state="translated">Een waarde van <ph id="ph1">`null`</ph> is een ongeldig type voor afhankelijkheidseigenschappen reference-type, of voor een &lt;xref:System.Nullable%601&gt;afhankelijkheidseigenschap, en zou retourneren <ph id="ph2">`true`</ph> voor dergelijke gevallen.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>In cases where the dependency property is neither a reference nor a &lt;xref:System.Nullable%601&gt; type, IsValidType will return <ph id="ph1">`false`</ph> for a null value rather than raise an exception.</source>
          <target state="translated">In gevallen waarin de afhankelijkheidseigenschap geen van beide een verwijzing is noch een &lt;xref:System.Nullable%601&gt;type, IsValidType retourneert <ph id="ph1">`false`</ph> voor een null-waarde plaats van een uitzondering wilt verhogen.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The value to check.</source>
          <target state="translated">De waarde om te controleren.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified value is the registered property type or an acceptable derived type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de opgegeven waarde het geregistreerde type of een acceptabele afgeleid type is; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Determines whether the provided value is accepted for the type of property through basic type checking, and also potentially if it is within the allowed range of values for that type.</source>
          <target state="translated">Hiermee wordt bepaald of de opgegeven waarde voor het type eigenschap door middel van controle van het algemene type wordt geaccepteerd en mogelijk ook als deze zich binnen het toegestane bereik van waarden voor dat type.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a dependency property, an allowed range of values for that type can be specified through a &lt;xref:System.Windows.ValidateValueCallback&gt; that is provided in the dependency property registration.</source>
          <target state="translated">Voor een afhankelijkheidseigenschap een toegestane waardenbereik voor dat type kan worden opgegeven via een &lt;xref:System.Windows.ValidateValueCallback&gt;die is opgegeven in de eigenschap registratie van cacheafhankelijkheid.&lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt; internally.</source>
          <target state="translated">Deze methode aanroept &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;intern.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the dependency property in question has no &lt;xref:System.Windows.ValidateValueCallback&gt;,then calling this method is effectively equivalent to calling &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;.</source>
          <target state="translated">Als de desbetreffende afhankelijkheidseigenschap geen &lt;xref:System.Windows.ValidateValueCallback&gt;vervolgens aanroepen met deze methode is effectief gelijk is aan het aanroepen van &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt; heeft&lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the dependency property does have a &lt;xref:System.Windows.ValidateValueCallback&gt;, and if &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt; would have returned <ph id="ph1">`true`</ph>, then the value returned will be as implemented in the callback.</source>
          <target state="translated">Als de afhankelijkheidseigenschap beschikt over een &lt;xref:System.Windows.ValidateValueCallback&gt;, en als &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;zouden hebben geretourneerd <ph id="ph1">`true`</ph>, wordt de waarde geretourneerd worden geïmplementeerd in de callback.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt; &lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>A null value is a valid value for reference type dependency properties, or for a &lt;xref:System.Nullable%601&gt; dependency property, and would return <ph id="ph1">`true`</ph> for these cases.</source>
          <target state="translated">Een null-waarde is een geldige waarde voor afhankelijkheidseigenschappen reference-type, of voor een &lt;xref:System.Nullable%601&gt;afhankelijkheidseigenschap, en zou retourneren <ph id="ph1">`true`</ph> voor dergelijke gevallen.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>In cases where the dependency property is neither a reference nor a &lt;xref:System.Nullable%601&gt; type, &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt; will return <ph id="ph1">`false`</ph> for a null value rather than raise an exception.</source>
          <target state="translated">In gevallen waarin de afhankelijkheidseigenschap geen van beide een verwijzing is noch een &lt;xref:System.Nullable%601&gt;type, &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;retourneert <ph id="ph1">`false`</ph> voor een null-waarde plaats van een uitzondering wilt verhogen.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt; &lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The value to check.</source>
          <target state="translated">De waarde om te controleren.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value is acceptable and is of the correct type or a derived type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de waarde acceptabel is en van het juiste type of een afgeleid type is; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets the name of the dependency property.</source>
          <target state="translated">Hiermee haalt u de naam van de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property gets the name provided as the <ph id="ph1">`name`</ph> parameter during dependency property registration.</source>
          <target state="translated">Deze eigenschap wordt de naam die is opgegeven als de <ph id="ph1">`name`</ph> parameter tijdens de registratie van cacheafhankelijkheid-eigenschap.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This name is immutable, and cannot be <ph id="ph1">`null`</ph> or an empty string.</source>
          <target state="translated">Deze naam is onveranderbaar en kan niet worden <ph id="ph1">`null`</ph> of een lege tekenreeks.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Duplicate name registrations on the same owner type are not permitted, and will throw an exception when you attempt to register the duplicate.</source>
          <target state="translated">Dubbele naamregistraties van hetzelfde eigenaarstype als zijn niet toegestaan en genereert een uitzondering opgetreden bij het registreren van het duplicaat.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The Name of a dependency property must follow the convention of matching the name of its dependency property identifier minus the suffix "Property".</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; De naam van een afhankelijkheidseigenschap moet voldoen aan de overeenkomst van die overeenkomt met de naam van de id van de eigenschap afhankelijkheid minus het achtervoegsel 'Eigenschap'.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Custom Dependency Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>aangepaste afhankelijkheidseigenschappen<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">De naam van de eigenschap.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Specifies alternate metadata for this dependency property when it is present on instances of a specified type, overriding the metadata that existed for the dependency property as it was inherited from base types.</source>
          <target state="translated">Hiermee geeft u alternatieve metagegevens voor deze afhankelijkheidseigenschap wanneer dit zich op exemplaren van een bepaald type, de metagegevens die beschikbaar voor de afhankelijkheidseigenschap bevindt waren zoals deze is overgenomen van de basistypen te overschrijven.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency property metadata should be overridden before the property system uses the dependency property.</source>
          <target state="translated">Metagegevens van de eigenschap afhankelijkheid moet worden vervangen voordat het systeem eigenschap maakt gebruik van de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>This equates to the time that specific instances are created using the class that registers the dependency property.</source>
          <target state="translated">Dit is gelijk aan de tijd die specifieke exemplaren worden gemaakt met behulp van de klasse die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to OverrideMetadata should only be performed within the static constructors of the type that provides itself as the <ph id="ph1">`forType`</ph> parameter of this method, or through similar instantiation.</source>
          <target state="translated">Aanroepen naar OverrideMetadata moeten alleen worden uitgevoerd binnen de statische constructors van het type waarmee zelf als de <ph id="ph1">`forType`</ph> parameter van deze methode of via vergelijkbare instantiëring.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to change metadata after instances of the owner type exist will not raise exceptions, but will result in inconsistent behaviors in the property system.</source>
          <target state="translated">Probeert metagegevens wijzigen nadat de exemplaren van het eigenaarstype bestaan niet uitzonderingen verhoogt, maar zal leiden tot inconsistent gedrag in het systeem eigenschap.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>After metadata for a particular derived class override is established with this method, subsequent attempts to override metadata on this same derived class will raise an exception.</source>
          <target state="translated">Nadat de metagegevens voor een onderdrukking bepaalde afgeleide klasse is gemaakt met deze methode, wordt in daaropvolgende pogingen worden gedaan voor het onderdrukken van metagegevens voor deze dezelfde afgeleide klasse een uitzondering veroorzaakt.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied metadata is merged with the property metadata for the dependency property as it exists on the base owner.</source>
          <target state="translated">De opgegeven metagegevens is samengevoegd met de metagegevens van de eigenschap voor de afhankelijkheidseigenschap zoals zich dit in de eigenaar van het basistype.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any characteristics that were specified in the original base metadata will persist; only those characteristics that were specifically changed in the new metadata will override the characteristics of the base metadata.</source>
          <target state="translated">Alle kenmerken die zijn opgegeven in de metagegevens van de oorspronkelijke base bewaard; de kenmerken van de metagegevens van de base wordt overschreven door kenmerken die specifiek zijn gewijzigd in de nieuwe metagegevens.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characteristics such as &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; are replaced if specified in the new metadata.</source>
          <target state="translated">Enkele kenmerken zoals &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;worden vervangen als opgegeven in de nieuwe metagegevens.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Others, such as &lt;xref:System.Windows.PropertyChangedCallback&gt;, are combined.</source>
          <target state="translated">Anderen, zoals &lt;xref:System.Windows.PropertyChangedCallback&gt;, worden gecombineerd.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ultimately, the merge behavior depends on the property metadata type being used for the override, so the behavior described here is for the existing property metadata classes used by <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> dependency properties.</source>
          <target state="translated">Uiteindelijk het gedrag samenvoegen is afhankelijk van het metagegevenstype van eigenschap wordt gebruikt voor de onderdrukking, zodat het gedrag dat hier wordt beschreven voor de bestaande eigenschap metagegevens klassen die worden gebruikt door <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> afhankelijkheidseigenschappen.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Metadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Framework Property Metadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>metagegevens van de eigenschap afhankelijkheid<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> en <bpt id="p2">[</bpt>metagegevens van de eigenschap Framework<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The type where this dependency property is inherited and where the provided alternate metadata will be applied.</source>
          <target state="translated">Het type waar deze afhankelijkheidseigenschap is overgenomen en waar u de opgegeven alternatieve metagegevens worden toegepast.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The metadata to apply to the dependency property on the overriding type.</source>
          <target state="translated">De metagegevens toe te passen aan de afhankelijkheidseigenschap voor de overschrijvende type.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An attempt was made to override metadata on a read-only dependency property (that operation cannot be done using this signature).</source>
          <target state="translated">Er is een poging gedaan voor het onderdrukken van metagegevens voor een alleen-lezen afhankelijkheidseigenschap (dat de bewerking kan niet worden uitgevoerd met deze handtekening).</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Metadata was already established for the dependency property as it exists on the provided type.</source>
          <target state="translated">Metagegevens is al ingesteld voor de afhankelijkheidseigenschap zoals zich dit op het opgegeven type.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Supplies alternate metadata for a read-only dependency property when it is present on instances of a specified type, overriding the metadata that was provided in the initial dependency property registration.</source>
          <target state="translated">Leveringen alternatieve metagegevens voor een alleen-lezen afhankelijkheidseigenschap wanneer dit zich op exemplaren van een bepaald type bevindt, de metagegevens die is opgegeven in de registratie van de eigenschap initiële afhankelijkheid te overschrijven.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>You must pass the <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the read-only dependency property to avoid raising an exception.</source>
          <target state="translated">U moet doorgeven de <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor de alleen-lezen afhankelijkheidseigenschap om te voorkomen dat een uitzondering.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature provides underlying implementation for a read-only dependency property identifier (&lt;xref:System.Windows.DependencyPropertyKey&gt;) method.</source>
          <target state="translated">Deze handtekening bevat onderliggende implementatie voor een afhankelijkheid voor alleen-lezen eigenschap-id (&lt;xref:System.Windows.DependencyPropertyKey&gt;) methode.&lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>If overriding metadata for a read-write dependency property, use &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;.</source>
          <target state="translated">Als de metagegevens voor een van de alleen-lezen afhankelijkheidseigenschap te overschrijven, gebruikt u &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency property metadata should be overridden before the property system uses the dependency property.</source>
          <target state="translated">Metagegevens van de eigenschap afhankelijkheid moet worden vervangen voordat het systeem eigenschap maakt gebruik van de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This equates to the time that specific objects are created for the class that registers the dependency property.</source>
          <target state="translated">Dit is gelijk aan de tijd die specifieke objecten zijn gemaakt voor de klasse die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; should only be performed within the static constructors of the type that provides itself as the <ph id="ph1">`forType`</ph> parameter of this method, or through similar instantiation.</source>
          <target state="translated">Aanroepen naar &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;moet alleen worden uitgevoerd binnen de statische constructors van het type waarmee zelf als de <ph id="ph1">`forType`</ph> parameter van deze methode of via vergelijkbare instantiëring.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to change metadata after instances of the owner type exist will not raise exceptions, but will result in inconsistent behaviors in the property system.</source>
          <target state="translated">Probeert metagegevens wijzigen nadat de exemplaren van het eigenaarstype bestaan niet uitzonderingen verhoogt, maar zal leiden tot inconsistent gedrag in het systeem eigenschap.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>After metadata for a particular derived class override is established with this method, subsequent attempts to override metadata on this same derived class will raise an exception.</source>
          <target state="translated">Nadat de metagegevens voor een onderdrukking bepaalde afgeleide klasse is gemaakt met deze methode, wordt in daaropvolgende pogingen worden gedaan voor het onderdrukken van metagegevens voor deze dezelfde afgeleide klasse een uitzondering veroorzaakt.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied metadata is merged with the property metadata for the dependency property as it exists on the base owner.</source>
          <target state="translated">De opgegeven metagegevens is samengevoegd met de metagegevens van de eigenschap voor de afhankelijkheidseigenschap zoals zich dit in de eigenaar van het basistype.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any characteristics that were specified in the original base metadata will persist; only those characteristics that were specifically changed in the new metadata will override the characteristics of the base metadata.</source>
          <target state="translated">Alle kenmerken die zijn opgegeven in de metagegevens van de oorspronkelijke base bewaard; de kenmerken van de metagegevens van de base wordt overschreven door kenmerken die specifiek zijn gewijzigd in de nieuwe metagegevens.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characteristics such as &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; are replaced if specified in the new metadata.</source>
          <target state="translated">Enkele kenmerken zoals &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;worden vervangen als opgegeven in de nieuwe metagegevens.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Others, such as &lt;xref:System.Windows.PropertyChangedCallback&gt;, are combined.</source>
          <target state="translated">Anderen, zoals &lt;xref:System.Windows.PropertyChangedCallback&gt;, worden gecombineerd.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The merge behavior depends on the property metadata type being used for the override.</source>
          <target state="translated">Het gedrag samenvoegen, is afhankelijk van het metagegevenstype van eigenschap wordt gebruikt voor de onderdrukking.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Metadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Framework Property Metadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>metagegevens van de eigenschap afhankelijkheid<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> en <bpt id="p2">[</bpt>metagegevens van de eigenschap Framework<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The type where this dependency property is inherited and where the provided alternate metadata will be applied.</source>
          <target state="translated">Het type waar deze afhankelijkheidseigenschap is overgenomen en waar u de opgegeven alternatieve metagegevens worden toegepast.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The metadata to apply to the dependency property on the overriding type.</source>
          <target state="translated">De metagegevens toe te passen aan de afhankelijkheidseigenschap voor de overschrijvende type.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The access key for a read-only dependency property.</source>
          <target state="translated">De toegangssleutel voor een alleen-lezen afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Gets the type of the object that registered the dependency property with the property system, or added itself as owner of the property.</source>
          <target state="translated">Hiermee wordt het type van het object dat de afhankelijkheidseigenschap geregistreerd bij de eigenschap system of zelf als eigenaar van de eigenschap toegevoegd.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value was provided during property registration.</source>
          <target state="translated">Deze waarde is opgegeven tijdens de registratie van eigenschap.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owner will be either the original registering type in the case of a &lt;xref:System.Windows.DependencyProperty&gt; identifier generated from a &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call, or the type that added itself as owner in the case of a &lt;xref:System.Windows.DependencyProperty&gt; identifier generated from an &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; call.</source>
          <target state="translated">De eigenaar is het oorspronkelijke registreren dat in het geval van een &lt;xref:System.Windows.DependencyProperty&gt;id gegenereerd op basis van een &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;aanroep of het type dat zelf toegevoegd als eigenaar in het geval van een &lt;xref:System.Windows.DependencyProperty&gt;id gegenereerd op basis van een &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;aanroepen.&lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OwnerType on any given &lt;xref:System.Windows.DependencyProperty&gt; is immutable, and cannot be <ph id="ph1">`null`</ph> in a valid &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">De OwnerType op een gegeven &lt;xref:System.Windows.DependencyProperty&gt;is onveranderbaar en kan niet worden <ph id="ph1">`null`</ph> in een geldige &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The type of the object that registered the property or added itself as owner of the property.</source>
          <target state="translated">Het type van het object dat de eigenschap is geregistreerd of zelf als eigenaar van de eigenschap toegevoegd.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets the type that the dependency property uses for its value.</source>
          <target state="translated">Hiermee wordt het type dat de afhankelijkheidseigenschap voor de waarde ervan gebruikt.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property reports the type of the property's value as declared by the original property registration, through the <ph id="ph1">`propertyType`</ph> parameter.</source>
          <target state="translated">Deze eigenschap het type van de eigenschap waarde zoals opgegeven door de oorspronkelijke registratie van de eigenschap via rapporten de <ph id="ph1">`propertyType`</ph> parameter.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similar to the &lt;xref:System.Windows.DependencyProperty.Name%2A&gt;, the property type of a dependency property is immutable after registration.</source>
          <target state="translated">Net als bij de &lt;xref:System.Windows.DependencyProperty.Name%2A&gt;, het eigenschapstype van een afhankelijkheidseigenschap na de registratie is onveranderbaar.&lt;/xref:System.Windows.DependencyProperty.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the property value.</source>
          <target state="translated">De &lt;xref:System.Type&gt;van de eigenschapswaarde.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the dependency property identified by this <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance is a read-only dependency property.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of de afhankelijkheidseigenschap geïdentificeerd door dit <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> exemplaar is een alleen-lezen afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties are registered within the property system by calling the &lt;xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt; method as opposed to the &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; method.</source>
          <target state="translated">Alleen-lezen afhankelijkheidseigenschappen zijn geregistreerd in het systeem eigenschap door het aanroepen van de &lt;xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt;methode niet de &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;methode.&lt;/xref:System.Windows.DependencyProperty.Register%2A&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attached properties can also be registered as read-only; see &lt;xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt;.</source>
          <target state="translated">De bijgevoegde eigenschappen kunnen ook worden geregistreerd als alleen-lezen. Zie &lt;xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties require a &lt;xref:System.Windows.DependencyPropertyKey&gt; identifier rather than a &lt;xref:System.Windows.DependencyProperty&gt; identifier to perform metadata operations such as overriding the metadata or setting the value.</source>
          <target state="translated">Alleen-lezen afhankelijkheidseigenschappen vereisen een &lt;xref:System.Windows.DependencyPropertyKey&gt;id in plaats van een &lt;xref:System.Windows.DependencyProperty&gt;id metagegevensbewerkingen zoals het onderdrukken van de metagegevens of als u de waarde uit te voeren.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you obtained a collection of &lt;xref:System.Windows.DependencyProperty&gt; identifiers through a call to &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt; or another <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> that exposes identifiers, check the ReadOnly value before attempting to call &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; using that dependency property identifier as an input parameter, to verify that the dependency property that the identifier represents is not read-only.</source>
          <target state="translated">Als u een verzameling hebt aangeschaft &lt;xref:System.Windows.DependencyProperty&gt;id's via een aanroep van &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;of een andere <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> die beschrijft de id's, controleert u de waarde van het kenmerk alleen-lezen voordat u probeert aan te roepen &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;of &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;met behulp van deze afhankelijkheid eigenschaps-id als invoerparameter, om te controleren of de afhankelijkheidseigenschap met de id is niet alleen-lezen.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyObject.SetValue%2A&gt; &lt;/xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of ReadOnly is <ph id="ph1">`true`</ph> on a dependency property, there is no programmatic way to obtain a reference to the &lt;xref:System.Windows.DependencyPropertyKey&gt; identifier of that dependency property, from the metadata or from the &lt;xref:System.Windows.DependencyProperty&gt; identifier; the identifier must be available as a static field in order to call &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt; against a read-only dependency property.</source>
          <target state="translated">Als de waarde van het kenmerk alleen-lezen <ph id="ph1">`true`</ph> op een afhankelijkheidseigenschap is geen manier om op te halen van een verwijzing naar de &lt;xref:System.Windows.DependencyPropertyKey&gt;id van die afhankelijkheidseigenschap van de metagegevens of van de &lt;xref:System.Windows.DependencyProperty&gt;id; van de id moet beschikbaar zijn als een statisch veld om aan te roepen &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;tegen een alleen-lezen afhankelijkheidseigenschap.&lt;/xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt; &lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a custom dependency property, and register it as read-only, you should define only a get accessor for the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> wrapper property.</source>
          <target state="translated">Wanneer u een aangepaste afhankelijkheidseigenschap maken en als alleen-lezen registreren, moet u alleen een get-accessor voor definiëren de <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> wrapper-eigenschap.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, your class will have a confusing object model for the property wrapper as compared to the access to the backing dependency property.</source>
          <target state="translated">Anders wordt hebben uw klasse een verwarrend objectmodel voor de eigenschap wrapper in vergelijking met de toegang tot de afhankelijkheidseigenschap back-ups maken.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Custom Dependency Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>Read-Only Dependency Properties<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>aangepaste afhankelijkheidseigenschappen<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> of <bpt id="p2">[</bpt>alleen-lezen-Dependency Properties<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the dependency property is read-only; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de afhankelijkheidseigenschap alleen-lezen is. anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Registers a dependency property with the specified property name, property type, and owner type.</source>
          <target state="translated">Registreert een afhankelijkheidseigenschap met de opgegeven eigenschapsnaam, eigenschapstype en eigenaarstype.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Zie voor meer informatie over registratie van cacheafhankelijkheid eigenschap &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">De naam van de afhankelijkheidseigenschap te registreren.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The name must be unique within the registration namespace of the owner type.</source>
          <target state="translated">De naam moet uniek zijn binnen de naamruimte van de registratie van het eigenaarstype.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Het type van de eigenschap.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Het eigenaarstype die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Een afhankelijkheid eigenschaps-id die moet worden gebruikt om de waarde van een <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> veld in uw klasse.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Deze id wordt vervolgens gebruikt om te verwijzen naar de afhankelijkheidseigenschap later voor bewerkingen, zoals de waarde ervan programmatisch instellen of ophalen van metagegevens.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Registers a dependency property with the specified property name, property type, owner type, and property metadata.</source>
          <target state="translated">Registreert een afhankelijkheidseigenschap met de opgegeven eigenschapsnaam, eigenschapstype, eigenaarstype en metagegevens van de eigenschap.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Zie voor meer informatie over registratie van cacheafhankelijkheid eigenschap &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">De naam van de afhankelijkheidseigenschap te registreren.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Het type van de eigenschap.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Het eigenaarstype die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">De metagegevens van de eigenschap voor de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Een afhankelijkheid eigenschaps-id die moet worden gebruikt om de waarde van een <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> veld in uw klasse.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Deze id wordt vervolgens gebruikt om te verwijzen naar de afhankelijkheidseigenschap later voor bewerkingen, zoals de waarde ervan programmatisch instellen of ophalen van metagegevens.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Registers a dependency property with the specified property name, property type, owner type, property metadata, and a value validation callback for the property.</source>
          <target state="translated">Registreert een afhankelijkheidseigenschap met de opgegeven eigenschapsnaam, eigenschapstype eigenaarstype, metagegevens van de eigenschap en een waarde validatie retouraanroep voor de eigenschap.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Zie voor meer informatie over registratie van cacheafhankelijkheid eigenschap &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">De naam van de afhankelijkheidseigenschap te registreren.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Het type van de eigenschap.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Het eigenaarstype die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">De metagegevens van de eigenschap voor de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">Een verwijzing naar een callback die moet worden uitgevoerd door een aangepaste validatie van de eigenschapswaarde afhankelijkheid dan typische typevalidatie.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Een afhankelijkheid eigenschaps-id die moet worden gebruikt om de waarde van een <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> veld in uw klasse.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Deze id wordt vervolgens gebruikt om te verwijzen naar de afhankelijkheidseigenschap later voor bewerkingen, zoals de waarde ervan programmatisch instellen of ophalen van metagegevens.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Registers an attached property with the specified property name, property type, and owner type.</source>
          <target state="translated">Registreert een gekoppelde eigenschap met de opgegeven eigenschapsnaam, eigenschapstype en eigenaarstype.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attached property is a property concept defined by <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Een gekoppelde eigenschap is een eigenschap concept gedefinieerd door <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> implements attached properties as dependency properties.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>Implements eigenschappen als afhankelijkheidseigenschappen gekoppeld.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> attached properties are dependency properties, they can have metadata applied that can be used by the general property system for operations such as reporting layout characteristics.</source>
          <target state="translated">Omdat de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> de bijgevoegde eigenschappen zijn afhankelijkheidseigenschappen, metagegevens toegepast die door de algemene eigenschap systeem kan worden gebruikt voor bewerkingen, zoals rapportage indeling kenmerken hebben.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>gekoppeld eigenschappen overzicht<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Zie voor meer informatie over registratie van cacheafhankelijkheid eigenschap &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">De naam van de afhankelijkheidseigenschap te registreren.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Het type van de eigenschap.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Het eigenaarstype die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Een afhankelijkheid eigenschaps-id die moet worden gebruikt om de waarde van een <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> veld in uw klasse.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Deze id wordt vervolgens gebruikt om te verwijzen naar de afhankelijkheidseigenschap later voor bewerkingen, zoals de waarde ervan programmatisch instellen of ophalen van metagegevens.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Registers an attached property with the specified property name, property type, owner type, and property metadata.</source>
          <target state="translated">Registreert een gekoppelde eigenschap met de opgegeven eigenschapsnaam, eigenschapstype, eigenaarstype en metagegevens van de eigenschap.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">De naam van de afhankelijkheidseigenschap te registreren.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Het type van de eigenschap.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Het eigenaarstype die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">De metagegevens van de eigenschap voor de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This can include the default value as well as other characteristics.</source>
          <target state="translated">Dit kunnen bijvoorbeeld de standaardwaarde, evenals andere kenmerken.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Een afhankelijkheid eigenschaps-id die moet worden gebruikt om de waarde van een <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> veld in uw klasse.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Deze id wordt vervolgens gebruikt om te verwijzen naar de afhankelijkheidseigenschap later voor bewerkingen, zoals de waarde ervan programmatisch instellen of ophalen van metagegevens.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Registers an attached property with the specified property type, owner type, property metadata, and value validation callback for the property.</source>
          <target state="translated">Registreert een gekoppelde eigenschap met het opgegeven eigenschapstype, eigenaarstype, metagegevens van de eigenschap en waarde validatie retouraanroep voor de eigenschap.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">De naam van de afhankelijkheidseigenschap te registreren.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Het type van de eigenschap.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Het eigenaarstype die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">De metagegevens van de eigenschap voor de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>This can include the default value as well as other characteristics.</source>
          <target state="translated">Dit kunnen bijvoorbeeld de standaardwaarde, evenals andere kenmerken.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">Een verwijzing naar een callback die moet worden uitgevoerd door een aangepaste validatie van de eigenschapswaarde afhankelijkheid dan typische typevalidatie.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Een afhankelijkheid eigenschaps-id die moet worden gebruikt om de waarde van een <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> veld in uw klasse.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Deze id wordt vervolgens gebruikt om te verwijzen naar de afhankelijkheidseigenschap later voor bewerkingen, zoals de waarde ervan programmatisch instellen of ophalen van metagegevens.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Registers a read-only attached property, with the specified property type, owner type, and property metadata.</source>
          <target state="translated">Registreert een alleen-lezen gekoppelde eigenschap, met het opgegeven eigenschapstype, eigenaarstype en metagegevens van de eigenschap.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">De naam van de afhankelijkheidseigenschap te registreren.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Het type van de eigenschap.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Het eigenaarstype die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">De metagegevens van de eigenschap voor de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.</source>
          <target state="translated">Een sleutel van de afhankelijkheid eigenschap die moet worden gebruikt om de waarde van een statisch veld voor de alleen-lezen instellen in uw klasse, vervolgens gebruikt wordt voor de afhankelijkheidseigenschap later naar verwijzen.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Registers a read-only attached property, with the specified property type, owner type, property metadata, and a validation callback.</source>
          <target state="translated">Registreert een alleen-lezen gekoppelde eigenschap, met het opgegeven eigenschapstype, eigenaarstype, metagegevens van de eigenschap en een retouraanroep voor validatie.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">De naam van de afhankelijkheidseigenschap te registreren.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Het type van de eigenschap.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Het eigenaarstype die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">De metagegevens van de eigenschap voor de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">Een verwijzing naar een gebruiker gemaakte callbackfunctie die moet worden uitgevoerd door een aangepaste validatie van de eigenschapswaarde afhankelijkheid dan typische typevalidatie.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.</source>
          <target state="translated">Een sleutel van de afhankelijkheid eigenschap die moet worden gebruikt om de waarde van een statisch veld voor de alleen-lezen instellen in uw klasse, die vervolgens wordt gebruikt om te verwijzen naar de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Registers a read-only dependency property, with the specified property type, owner type, and property metadata.</source>
          <target state="translated">Registreert een alleen-lezen afhankelijkheidseigenschap met het opgegeven eigenschapstype, eigenaarstype en metagegevens van de eigenschap.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the type &lt;xref:System.Windows.DependencyPropertyKey&gt;, whereas &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; returns the type &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Deze methode retourneert het type &lt;xref:System.Windows.DependencyPropertyKey&gt;, terwijl &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;retourneert het type &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the keys that represent read-only properties are not made public, because the keys can be used to set the dependency property value by calling &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.</source>
          <target state="translated">Normaal gesproken worden de sleutels die alleen-lezen eigenschappen vertegenwoordigen niet openbaar gemaakt, omdat de sleutels kunnen worden gebruikt om de waarde van de eigenschap afhankelijkheid door het aanroepen van &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.&lt;/xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your class design will affect your requirements, but it is generally recommended to limit the access and visibility of any &lt;xref:System.Windows.DependencyPropertyKey&gt; to only those parts of your code that are necessary to set that dependency property as part of class or application logic.</source>
          <target state="translated">Het ontwerp van de klasse is van invloed op uw behoeften, maar het is raadzaam om te beperken van de toegang en de zichtbaarheid van een &lt;xref:System.Windows.DependencyPropertyKey&gt;alleen de delen van uw code die nodig zijn voor die afhankelijkheidseigenschap instellen als onderdeel van de klasse of toepassing logica.&lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also recommended that you expose a dependency property identifier for the read-only dependency property, by exposing the value of &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt; as a <ph id="ph1">`public static readonly`</ph> field on your class.</source>
          <target state="translated">Het is ook raadzaam een afhankelijkheid eigenschaps-id voor de afhankelijkheidseigenschap alleen-lezen-beschikbaar te stellen bij het blootstellen van de waarde van &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;als een <ph id="ph1">`public static readonly`</ph> op uw klasse&lt;/xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties are a fairly typical scenario both in the existing <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> and for customization scenarios, because other <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> features might require a dependency property even if that property is not intended to be settable by callers.</source>
          <target state="translated">Alleen-lezen afhankelijkheidseigenschappen zijn een vrij normale scenario beide in de bestaande <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> en voor scenario's voor aanpassingen, omdat andere <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> -functies vereisen mogelijk een afhankelijkheidseigenschap zelfs als die eigenschap is niet bedoeld als worden ingesteld door aanroepfuncties.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the value of a read-only dependency property as the basis for other property system operations that take a dependency property, such as basing a &lt;xref:System.Windows.Trigger&gt; on the dependency property in a style.</source>
          <target state="translated">U kunt de waarde van een alleen-lezen afhankelijkheidseigenschap gebruiken als basis voor andere systeembewerkingen eigenschap die een afhankelijkheidseigenschap zoals als uitgangspunt nemen een &lt;xref:System.Windows.Trigger&gt;op de afhankelijkheidseigenschap in een style.&lt;/xref:System.Windows.Trigger&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Zie voor meer informatie over registratie van cacheafhankelijkheid eigenschap &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">De naam van de afhankelijkheidseigenschap te registreren.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Het type van de eigenschap.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Het eigenaarstype die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">De metagegevens van de eigenschap voor de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.</source>
          <target state="translated">Een sleutel van de afhankelijkheid eigenschap die moet worden gebruikt om de waarde van een statisch veld voor de alleen-lezen instellen in uw klasse, die vervolgens wordt gebruikt om te verwijzen naar de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Registers a read-only dependency property, with the specified property type, owner type, property metadata, and a validation callback.</source>
          <target state="translated">Registreert een alleen-lezen afhankelijkheidseigenschap met het opgegeven eigenschapstype, eigenaarstype, metagegevens van de eigenschap en een retouraanroep voor validatie.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the type &lt;xref:System.Windows.DependencyPropertyKey&gt;, whereas &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; returns the type &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Deze methode retourneert het type &lt;xref:System.Windows.DependencyPropertyKey&gt;, terwijl &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;retourneert het type &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the keys that represent read-only properties are not made public, because the keys can be used to set the dependency property value by calling &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.</source>
          <target state="translated">Normaal gesproken worden de sleutels die alleen-lezen eigenschappen vertegenwoordigen niet openbaar gemaakt, omdat de sleutels kunnen worden gebruikt om de waarde van de eigenschap afhankelijkheid door het aanroepen van &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.&lt;/xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your class design will affect your requirements, but it is generally recommended to limit the access and visibility of any &lt;xref:System.Windows.DependencyPropertyKey&gt; to only those parts of your code that are necessary to set that dependency property as part of class or application logic.</source>
          <target state="translated">Het ontwerp van de klasse is van invloed op uw behoeften, maar het is raadzaam om te beperken van de toegang en de zichtbaarheid van een &lt;xref:System.Windows.DependencyPropertyKey&gt;alleen de delen van uw code die nodig zijn voor die afhankelijkheidseigenschap instellen als onderdeel van de klasse of toepassing logica.&lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also recommended that you expose a dependency property identifier for the read-only dependency property, by exposing the value of &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt; as a <ph id="ph1">`public static readonly`</ph> field on your class.</source>
          <target state="translated">Het is ook raadzaam een afhankelijkheid eigenschaps-id voor de afhankelijkheidseigenschap alleen-lezen-beschikbaar te stellen bij het blootstellen van de waarde van &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;als een <ph id="ph1">`public static readonly`</ph> op uw klasse&lt;/xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties are a fairly typical scenario.</source>
          <target state="translated">Alleen-lezen afhankelijkheidseigenschappen zijn een vrij normale scenario.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the value of a read-only dependency property as the basis for other property system operations that take a dependency property, such as basing a &lt;xref:System.Windows.Trigger&gt; on the dependency property in a style.</source>
          <target state="translated">U kunt de waarde van een alleen-lezen afhankelijkheidseigenschap gebruiken als basis voor andere systeembewerkingen eigenschap die een afhankelijkheidseigenschap zoals als uitgangspunt nemen een &lt;xref:System.Windows.Trigger&gt;op de afhankelijkheidseigenschap in een style.&lt;/xref:System.Windows.Trigger&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Zie voor meer informatie over registratie van cacheafhankelijkheid eigenschap &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>Validation on a read-only dependency property might be less important.</source>
          <target state="translated">Validatie van een alleen-lezen afhankelijkheidseigenschap mogelijk minder belangrijk zijn.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>The nonpublic access level you specify for the key reduces the likelihood for arbitrary invalid input.</source>
          <target state="translated">De niet-openbare toegangsniveau dat u voor de sleutel opgeeft vermindert de kans voor willekeurige ongeldige invoer.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">De naam van de afhankelijkheidseigenschap te registreren.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">Het type van de eigenschap.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">Het eigenaarstype die de afhankelijkheidseigenschap registreert.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">De metagegevens van de eigenschap voor de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">Een verwijzing naar een gebruiker gemaakte callbackfunctie die moet worden uitgevoerd door een aangepaste validatie van de eigenschapswaarde afhankelijkheid dan typische typevalidatie.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.</source>
          <target state="translated">Een sleutel van de afhankelijkheid eigenschap die moet worden gebruikt om de waarde van een statisch veld voor de alleen-lezen instellen in uw klasse, vervolgens gebruikt wordt voor de afhankelijkheidseigenschap later naar verwijzen.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the dependency property.</source>
          <target state="translated">Retourneert de tekenreeksrepresentatie van de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation returns the &lt;xref:System.Windows.DependencyProperty.Name%2A&gt; property value.</source>
          <target state="translated">Deze implementatie retourneert de &lt;xref:System.Windows.DependencyProperty.Name%2A&gt;eigenschapswaarde.&lt;/xref:System.Windows.DependencyProperty.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The string representation of the dependency property.</source>
          <target state="translated">De tekenreeksrepresentatie van de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Specifies a static value that is used by the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system rather than <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the property exists, but does not have its value set by the property system.</source>
          <target state="translated">Hiermee geeft u een statische waarde die wordt gebruikt door de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> eigenschap system plaats <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> om aan te geven dat de eigenschap bestaat, maar geen bijbehorende waarde door het systeem eigenschap ingesteld heeft.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue is a sentinel value that is used for scenarios where the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system is unable to determine a requested &lt;xref:System.Windows.DependencyProperty&gt; value.</source>
          <target state="translated">UnsetValue is een sentinel-waarde die wordt gebruikt voor scenario's waar de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> eigenschap systeem kan niet vaststellen een aangevraagde &lt;xref:System.Windows.DependencyProperty&gt;waarde.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue is used rather than <ph id="ph1">`null`</ph>, because <ph id="ph2">`null`</ph> could be a valid property value, as well as a valid (and frequently used) &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;.</source>
          <target state="translated">UnsetValue wordt gebruikt in plaats <ph id="ph1">`null`</ph>omdat <ph id="ph2">`null`</ph> kan de waarde van een geldige eigenschap, evenals een geldige (en vaak gebruikte) &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue is never returned out of &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">UnsetValue wordt nooit buiten de &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt; geretourneerd</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt; on a dependency property on a &lt;xref:System.Windows.DependencyObject&gt; instance, one of the following applies:      -   A dependency property has a default value established in metadata and that value is returned.</source>
          <target state="translated">Als u aanroept &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;op een afhankelijkheidseigenschap op een &lt;xref:System.Windows.DependencyObject&gt;exemplaar, een van de volgende van toepassing is: - een afhankelijkheidseigenschap heeft een standaardwaarde tot stand gebracht in metagegevens en dat de waarde wordt geretourneerd.&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value might come from &lt;xref:System.Windows.DependencyProperty.DefaultMetadata%2A&gt;.</source>
          <target state="translated">Deze waarde kan afkomstig zijn van &lt;xref:System.Windows.DependencyProperty.DefaultMetadata%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.DefaultMetadata%2A&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Some other value was established by the property system, and the default value is no longer relevant.</source>
          <target state="translated">-Een andere waarde door het systeem eigenschap tot stand is gebracht en de standaardwaarde niet langer relevant is.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>afhankelijkheid eigenschap waarde prioriteit<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting a &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; of UnsetValue is specifically disallowed.</source>
          <target state="translated">Instellen van een &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;van UnsetValue is specifiek niet toegestaan.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.DependencyObject.ReadLocalValue%2A?displayProperty=fullName&gt; returns UnsetValue when the requested property has not been locally set.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyObject.ReadLocalValue%2A?displayProperty=fullName&gt;retourneert UnsetValue wanneer de aangevraagde eigenschap niet lokaal is ingesteld.&lt;/xref:System.Windows.DependencyObject.ReadLocalValue%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue has a special meaning when used as the return value of a &lt;xref:System.Windows.CoerceValueCallback&gt;.</source>
          <target state="translated">UnsetValue heeft een speciale betekenis als gebruikt als de retourwaarde van een &lt;xref:System.Windows.CoerceValueCallback&gt;.&lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>afhankelijkheid eigenschap retouraanroepen en validatie<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are binding to a database, note that UnsetValue is not equivalent to &lt;xref:System.DBNull.Value&gt;, in a similar way to how &lt;xref:System.DBNull.Value&gt; is not equivalent to a true null.</source>
          <target state="translated">Als u een database afhankelijk, houd er rekening mee UnsetValue komt niet overeen met &lt;xref:System.DBNull.Value&gt;, op soortgelijke wijze aan de &lt;xref:System.DBNull.Value&gt;komt niet overeen met een null-waarde true.&lt;/xref:System.DBNull.Value&gt; &lt;/xref:System.DBNull.Value&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Moet worden toegevoegd.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Gets the value validation callback for the dependency property.</source>
          <target state="translated">Hiermee wordt de waarde validatie retouraanroep voor de afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property will contain <ph id="ph1">`null`</ph> for any dependency property with no registered validation callback.</source>
          <target state="translated">Deze eigenschap bevat <ph id="ph1">`null`</ph> voor elke afhankelijkheidseigenschap met geen geregistreerde validatie-callback.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>Validate value callbacks must act in a static sense: validation applied through the &lt;xref:System.Windows.ValidateValueCallback&gt; cannot determine whether the provided value is valid for any particular instance.</source>
          <target state="translated">Waarde retouraanroepen in een statische zin moeten fungeren niet valideren: validatie toegepast via de &lt;xref:System.Windows.ValidateValueCallback&gt;kan niet bepalen of de opgegeven waarde ongeldig voor een bepaalde instantie is.&lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback can only determine whether all objects that possess the dependency property should or should not accept the provided value as valid.</source>
          <target state="translated">De callback kan alleen bepalen of alle objecten die beschikken over de afhankelijkheidseigenschap moeten of moeten niet akkoord met de opgegeven waarde als geldig.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to perform validation that relies on knowing the values of other dependency properties on a particular instance, use a &lt;xref:System.Windows.CoerceValueCallback&gt; instead.</source>
          <target state="translated">Als u valideren die afhankelijk is wilt van de waarden van andere afhankelijkheidseigenschappen van een bepaalde instantie, gebruik weten een &lt;xref:System.Windows.CoerceValueCallback&gt;in plaats daarvan.&lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.CoerceValueCallback&gt; is registered as part of dependency property metadata, rather than directly within the dependency property identifier.</source>
          <target state="translated">De &lt;xref:System.Windows.CoerceValueCallback&gt;is geregistreerd als onderdeel van de metagegevens van de eigenschap afhankelijkheid, in plaats van rechtstreeks in de eigenschaps-id van afhankelijkheid.&lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>afhankelijkheid eigenschap retouraanroepen en validatie<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The value validation callback for this dependency property, as provided for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">validateValueCallback</ph><ept id="p1">&lt;/code&gt;</ept> parameter in the original dependency property registration.</source>
          <target state="translated">De waarde validatie retouraanroep voor deze afhankelijkheidseigenschap als in de <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">validateValueCallback</ph> <ept id="p1">&lt;/code&gt;</ept> parameter in de oorspronkelijke eigenschap registratie van cacheafhankelijkheid.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>