<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8617fd2888dadcba65ab15c4e282aa49bbc924c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices._ConstructorInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc3c766acde23918e6859d213e3b96605b28c676</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7093f0a2a9ffd066a512ff33ff5ea197de00752d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes the public members of the <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.ConstructorInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> class to unmanaged code.</source>
          <target state="translated">Beschrijft de openbare leden van de <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.ConstructorInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> klasse code naar onbegeleide code.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze interface is voor toegang tot beheerde klassen vanuit niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt; class discovers the attributes of a class constructor and provides access to constructor metadata.</source>
          <target state="translated">De &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt;klasse detecteert de kenmerken van een klassen-constructor en biedt toegang tot de metagegevens van de constructor.&lt;/xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The _ConstructorInfo interface preserves the vtable order of the &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">De interface _ConstructorInfo vtable-volgorde van bewaart de &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt;klasse leden die toegankelijk zijn voor niet-beheerde COM-objecten.&lt;/xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Attributes*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.Attributes*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.Attributes*&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.Attributes%2A&gt; property gets the attributes associated with this method.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.Attributes%2A&gt;eigenschap haalt de kenmerken die zijn gekoppeld aan deze methode.&lt;/xref:System.Reflection.MethodBase.Attributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>One of the &lt;xref:System.Reflection.MethodAttributes&gt; values.</source>
          <target state="translated">Een van de &lt;xref:System.Reflection.MethodAttributes&gt;waarden.&lt;/xref:System.Reflection.MethodAttributes&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.CallingConvention*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.CallingConvention*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.CallingConvention*&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt; property gets a value indicating the calling conventions for this method.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt;eigenschap haalt een waarde die aangeeft van de conventies voor deze methode.&lt;/xref:System.Reflection.MethodBase.CallingConvention%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.CallingConventions&gt; for this method.</source>
          <target state="translated">De &lt;xref:System.Reflection.CallingConventions&gt;voor deze methode.&lt;/xref:System.Reflection.CallingConventions&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt;eigenschap.&lt;/xref:System.Reflection.MemberInfo.DeclaringType*&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.</source>
          <target state="translated">De &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;eigenschap haalt de klasse die wordt gedeclareerd dit lid.&lt;/xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object for the class that declares this member.</source>
          <target state="translated">De &lt;xref:System.Type&gt;object voor de klasse die wordt gedeclareerd dit lid.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Object.Equals*&gt;methode.&lt;/xref:System.Object.Equals*&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">De &lt;xref:System.Object.Equals%2A&gt;methode bepaalt of de opgegeven die &lt;xref:System.Object&gt;gelijk is aan de huidige &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; &lt;/xref:System.Object&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;Om te vergelijken met de huidige &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de opgegeven &lt;xref:System.Object&gt;gelijk is aan de huidige &lt;xref:System.Object&gt;; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;methode.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array containing all the custom attributes.</source>
          <target state="translated">De &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;methode retourneert een matrix met de aangepaste kenmerken.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">Geeft aan of dit lid overname keten vinden van de kenmerken.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</source>
          <target state="translated">Een matrix met de aangepaste kenmerken, of een matrix met nul elementen als geen kenmerken zijn gedefinieerd.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*&gt; method.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*&gt;methode.&lt;/xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.</source>
          <target state="translated">De &lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt;methode retourneert een matrix van aangepaste kenmerken die zijn geïdentificeerd door &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; &lt;/xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The type of attribute to search for.</source>
          <target state="translated">Het type van kenmerk om te zoeken.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Only attributes that are assignable to this type are returned.</source>
          <target state="translated">Alleen de kenmerken die toegewezen aan dit type zijn worden geretourneerd.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">Geeft aan of dit lid overname keten vinden van de kenmerken.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">Een matrix van aangepaste kenmerken die worden toegepast op dit lid of een matrix met nul (0) elementen als er geen kenmerken zijn toegepast.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Object.GetHashCode*&gt;methode.&lt;/xref:System.Object.GetHashCode*&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.</source>
          <target state="translated">De &lt;xref:System.Object.GetHashCode%2A&gt;methode fungeert als een hash-functie voor een bepaald type.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures like a hash table.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;is geschikt voor gebruik in de hash-algoritmen en gegevens structuren zoals hash-tabel.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The hash code for the current instance.</source>
          <target state="translated">De hash-code voor het huidige exemplaar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">Een set namen toegewezen aan een overeenkomende set van dispatch-id.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">Voor meer informatie over <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, Zie de MSDN-bibliotheek.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">Gereserveerd voor toekomstig gebruik.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">Moet IID_NULL.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Passed-in array of names to be mapped.</source>
          <target state="translated">Doorgegeven in de matrix van namen worden toegewezen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Count of the names to be mapped.</source>
          <target state="translated">Telling van de namen worden toegewezen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">De landinstelling context waarin u de namen te interpreteren.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Caller-allocated array that receives the IDs corresponding to the names.</source>
          <target state="translated">Aanroeper toegewezen matrix die de id's die overeenkomen met de namen ontvangt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt; member.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt;lid.&lt;/xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt; member returns the &lt;xref:System.Reflection.MethodImplAttributes&gt; flags.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt;retourneert de &lt;xref:System.Reflection.MethodImplAttributes&gt;vlaggen.&lt;/xref:System.Reflection.MethodImplAttributes&gt; &lt;/xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodImplAttributes&gt; flags.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodImplAttributes&gt;vlaggen.&lt;/xref:System.Reflection.MethodImplAttributes&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.GetParameters*&gt; method.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.GetParameters*&gt;methode.&lt;/xref:System.Reflection.MethodBase.GetParameters*&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt; method gets the parameters of the specified method or constructor.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt;methode haalt de parameters van de opgegeven methode of constructor.&lt;/xref:System.Reflection.MethodBase.GetParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Reflection.ParameterInfo&gt; containing information that matches the signature of the method (or constructor) reflected by this instance.</source>
          <target state="translated">Een matrix van het type &lt;xref:System.Reflection.ParameterInfo&gt;dat informatie bevat die overeenkomt met de handtekening van de methode (of een constructor) worden weergegeven door dit exemplaar.&lt;/xref:System.Reflection.ParameterInfo&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetType*&gt; method.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Object.GetType*&gt;methode.&lt;/xref:System.Object.GetType*&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.GetType%2A&gt; method gets the type of the current instance.</source>
          <target state="translated">De &lt;xref:System.Object.GetType%2A&gt;methode Hiermee wordt het type van het huidige exemplaar.&lt;/xref:System.Object.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object.</source>
          <target state="translated">Een &lt;xref:System.Type&gt;object.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Retrieves the type information for an object, which can then be used to get the type information for an interface.</source>
          <target state="translated">Haalt de type-informatie voor een object, die vervolgens kan worden gebruikt voor het type-informatie voor een interface.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">Voor meer informatie over <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, Zie de MSDN-bibliotheek.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The type information to return.</source>
          <target state="translated">De type-informatie te retourneren.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The locale identifier for the type information.</source>
          <target state="translated">De landinstellingen-id voor de type-informatie.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Receives a pointer to the requested type information object.</source>
          <target state="translated">Hiermee krijgt een verwijzing naar het gevraagde type-informatie-object.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">Het nummer van het type informatie interfaces dat een object (0 of 1) biedt opgehaald.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">Voor meer informatie over <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, Zie de MSDN-bibliotheek.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Points to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">Verwijst naar een locatie die het nummer van het type informatie interfaces van het object ontvangt.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">Biedt toegang tot eigenschappen en methoden die worden weergegeven door een object.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">Voor meer informatie over <ph id="ph1">`IDispatch::Invoke`</ph>, Zie de MSDN-bibliotheek.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Identifies the member.</source>
          <target state="translated">Identificeert het lid.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">Gereserveerd voor toekomstig gebruik.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">Moet IID_NULL.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">De landinstelling context waarin u argumenten interpreteren.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Flags describing the context of the call.</source>
          <target state="translated">De vlaggen met een beschrijving van de context van de aanroep.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">Verwijzing naar een structuur met een matrix van argumenten, een matrix van dit argument DISPID's voor benoemde argumenten en tellingen voor het aantal elementen in de arrays.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Pointer to the location where the result is to be stored.</source>
          <target state="translated">Verwijzing naar de locatie van het resultaat moet worden opgeslagen.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Pointer to a structure that contains exception information.</source>
          <target state="translated">Verwijzing naar een structuur die informatie over de uitzondering bevat.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">De index van het eerste argument waarvoor een fout.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Invoke*&gt; method.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.Invoke*&gt;methode.&lt;/xref:System.Reflection.MethodBase.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt; method invokes the constructor reflected by this &lt;xref:System.Reflection.ConstructorInfo&gt; with the specified arguments, under the constraints of the specified &lt;xref:System.Reflection.Binder&gt;.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;methode roept de constructor weerspiegeld door deze &lt;xref:System.Reflection.ConstructorInfo&gt;met de opgegeven argumenten, onder de beperkingen van de opgegeven &lt;xref:System.Reflection.Binder&gt;.&lt;/xref:System.Reflection.Binder&gt; &lt;/xref:System.Reflection.ConstructorInfo&gt; &lt;/xref:System.Reflection.MethodBase.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The instance that created this method.</source>
          <target state="translated">Het exemplaar dat deze methode wordt gemaakt.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the type of binding.</source>
          <target state="translated">Een van de <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden waarmee het type van de binding.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die definieert een set eigenschappen en schakelt de binding, afdwingen van argumenttypen en het aanroepen van leden met reflectie.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An array of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to match the number, order, and type of the parameters for this constructor, under the constraints of <ph id="ph1">`binder`</ph>.</source>
          <target state="translated">Een matrix van het type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die overeenkomt met het aantal, de volgorde en het type van de parameters voor deze constructor, onder de beperkingen van <ph id="ph1">`binder`</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].</source>
          <target state="translated">Als u deze constructor geen parameters vereist, geeft u een matrix met nul elementen, zoals in Object [] parameters = Nieuw Object [0].</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">Een object in deze matrix die niet expliciet is geïnitialiseerd met een waarde bevat de standaardwaarde voor het objecttype.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For reference-type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Voor type verwijzing elementen deze waarde is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For value-type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">Voor waardetype elementen, is deze waarde 0, 0,0, of <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, afhankelijk van het specifieke elementtype.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; used to govern the coercion of types.</source>
          <target state="translated">Een &lt;xref:System.Globalization.CultureInfo&gt;gebruikt om te bepalen van het afdwingen van typen.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">Als dit <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, wordt de &lt;xref:System.Globalization.CultureInfo&gt;voor de huidige thread wordt gebruikt.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">Een exemplaar van de klasse die is gekoppeld aan de constructor.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Invoke*&gt; method.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.Invoke*&gt;methode.&lt;/xref:System.Reflection.MethodBase.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt; method invokes the method or constructor represented by this object, using the specified parameters.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;methode roept de methode of constructor vertegenwoordigd door dit object, met de opgegeven parameters.&lt;/xref:System.Reflection.MethodBase.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The instance that created this method.</source>
          <target state="translated">Het exemplaar dat deze methode wordt gemaakt.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An argument list for the invoked method or constructor.</source>
          <target state="translated">Een lijst met argumenten voor de aangeroepen methode of constructor.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.</source>
          <target state="translated">Dit is een matrix met objecten met dezelfde nummer, volgorde en type als de parameters van de methode of constructor moet worden aangeroepen.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If there are no parameters, <ph id="ph1">`parameters`</ph> should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Als er geen parameters zijn <ph id="ph1">`parameters`</ph> moet <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If the method or constructor represented by this instance takes a <bpt id="p1">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter (<bpt id="p2">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic), no special attribute is required for that parameter in order to invoke the method or constructor using this function.</source>
          <target state="translated">Als de methode of constructor dat wordt vertegenwoordigd door dit exemplaar heeft een <bpt id="p1">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> parameter (<bpt id="p2">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> in Visual Basic), geen speciale kenmerk is vereist voor deze parameter om de methode of een constructor met deze functie aanroepen.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">Een object in deze matrix die niet expliciet is geïnitialiseerd met een waarde bevat de standaardwaarde voor het objecttype.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For reference-type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Voor type verwijzing elementen deze waarde is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For value-type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">Voor waardetype elementen, is deze waarde 0, 0,0, of <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, afhankelijk van het specifieke elementtype.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">Een exemplaar van de klasse die is gekoppeld aan de constructor.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.ConstructorInfo.Invoke*&gt; method.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.ConstructorInfo.Invoke*&gt;methode.&lt;/xref:System.Reflection.ConstructorInfo.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt; method invokes the constructor reflected by this &lt;xref:System.Reflection.ConstructorInfo&gt; object with the specified arguments, under the constraints of the specified &lt;xref:System.Reflection.Binder&gt; object.</source>
          <target state="translated">De &lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt;methode roept de constructor doorgevoerd door &lt;xref:System.Reflection.ConstructorInfo&gt;object met de opgegeven argumenten, onder de beperkingen van de opgegeven &lt;xref:System.Reflection.Binder&gt;object.&lt;/xref:System.Reflection.Binder&gt; &lt;/xref:System.Reflection.ConstructorInfo&gt; &lt;/xref:System.Reflection.ConstructorInfo.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the type of binding.</source>
          <target state="translated">Een van de <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden waarmee het type van de binding.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die definieert een set eigenschappen en schakelt de binding, afdwingen van argumenttypen en het aanroepen van leden met reflectie.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>An array of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to match the number, order, and type of the parameters for this constructor, under the constraints of <ph id="ph1">`binder`</ph>.</source>
          <target state="translated">Een matrix van het type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die overeenkomt met het aantal, de volgorde en het type van de parameters voor deze constructor, onder de beperkingen van <ph id="ph1">`binder`</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].</source>
          <target state="translated">Als u deze constructor geen parameters vereist, geeft u een matrix met nul elementen, zoals in Object [] parameters = Nieuw Object [0].</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">Een object in deze matrix die niet expliciet is geïnitialiseerd met een waarde bevat de standaardwaarde voor het objecttype.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For reference-type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Voor type verwijzing elementen deze waarde is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For value-type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">Voor waardetype elementen, is deze waarde 0, 0,0, of <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, afhankelijk van het specifieke elementtype.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; used to govern the coercion of types.</source>
          <target state="translated">Een &lt;xref:System.Globalization.CultureInfo&gt;gebruikt om te bepalen van het afdwingen van typen.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">Als dit <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, wordt de &lt;xref:System.Globalization.CultureInfo&gt;voor de huidige thread wordt gebruikt.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">Een exemplaar van de klasse die is gekoppeld aan de constructor.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.ConstructorInfo.Invoke*&gt; method.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.ConstructorInfo.Invoke*&gt;methode.&lt;/xref:System.Reflection.ConstructorInfo.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt; method invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.</source>
          <target state="translated">De &lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt;methode roept de constructor weergegeven door het exemplaar met de opgegeven parameters, leveren van standaardwaarden voor de niet-gebruikte parameters.&lt;/xref:System.Reflection.ConstructorInfo.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>An array of values that matches the number, order, and type (under the constraints of the default binder) of the parameters for this constructor.</source>
          <target state="translated">Een matrix met waarden die overeenkomt met het aantal, de volgorde en het type (onder de beperkingen van de standaard binder) van de parameters voor deze constructor.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If this constructor takes no parameters, then use either an array with zero elements or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, as in Object[] parameters = new Object[0].</source>
          <target state="translated">Als u deze constructor niets parameters nodig heeft, gebruikt u ofwel een matrix met nul elementen of <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, als u in Object [] parameters = Nieuw Object [0].</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">Een object in deze matrix die niet expliciet is geïnitialiseerd met een waarde bevat de standaardwaarde voor het objecttype.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For reference-type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Voor type verwijzing elementen deze waarde is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For value-type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">Voor waardetype elementen, is deze waarde 0, 0,0, of <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, afhankelijk van het specifieke elementtype.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">Een exemplaar van de klasse die is gekoppeld aan de constructor.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsAbstract*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsAbstract*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsAbstract*&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt; property gets a value indicating whether the method is abstract.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt;eigenschap haalt een waarde die aangeeft of de methode abstract is.&lt;/xref:System.Reflection.MethodBase.IsAbstract%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method is abstract; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de methode abstract is; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsAssembly*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsAssembly*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt; property gets a value indicating whether this method can be called by other classes in the same assembly.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt;eigenschap een waarde die aangeeft of deze methode kan worden aangeroepen door andere klassen in dezelfde assembly opgehaald.&lt;/xref:System.Reflection.MethodBase.IsAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method can be called by other classes in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als deze methode kan worden aangeroepen door andere klassen in dezelfde assembly; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsConstructor*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsConstructor*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsConstructor*&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt; property gets a value indicating whether the method is a constructor.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt;eigenschap een waarde die aangeeft of de methode een constructor wordt opgehaald.&lt;/xref:System.Reflection.MethodBase.IsConstructor%2A&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is a constructor; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als deze methode een constructor is; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; member.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt;lid.&lt;/xref:System.Reflection.MemberInfo.IsDefined*&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; member indicates whether one or more instances of <ph id="ph1">`attributeType`</ph> is applied to this member.</source>
          <target state="translated">De &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt;lid geeft aan of een of meer exemplaren van <ph id="ph1">`attributeType`</ph> wordt toegepast op dit lid.&lt;/xref:System.Reflection.MemberInfo.IsDefined%2A&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to which the custom attributes are applied.</source>
          <target state="translated">De <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object waarop de aangepaste kenmerken zijn toegepast.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">Geeft aan of dit lid overname keten vinden van de kenmerken.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if one or more instances of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">attributeType</ph><ept id="p2">&lt;/code&gt;</ept> is applied to this member; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als een of meer exemplaren van <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">attributeType</ph> <ept id="p2">&lt;/code&gt;</ept> is toegepast op dit lid, anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamily*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsFamily*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsFamily*&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt; property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt;eigenschap haalt een waarde die aangeeft of de toegang tot deze methode beperkt tot leden van de klasse en leden van de afgeleide klassen is.&lt;/xref:System.Reflection.MethodBase.IsFamily%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als u toegang tot de klasse wordt beperkt tot leden van de klasse zelf en leden van de afgeleide klassen; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt; property gets a value indicating whether this method can be called by derived classes if they are in the same assembly.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt;eigenschap een waarde die aangeeft of deze methode kan worden aangeroepen door afgeleide klassen als ze in dezelfde assembly opgehaald.&lt;/xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als u toegang tot deze methode is beperkt tot leden van de klasse zelf en leden van de afgeleide klassen die zich in dezelfde assembly; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt; property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt;eigenschap een waarde die aangeeft of deze methode kan worden aangeroepen door afgeleide klassen, waar ze ook zijn, en door alle klassen in dezelfde assembly opgehaald.&lt;/xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als u toegang tot deze methode is beperkt tot leden van de klasse zelf, leden van afgeleide klassen waar ze zich bevinden en leden van andere klassen in dezelfde assembly; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFinal*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsFinal*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsFinal*&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt; property gets a value indicating whether this method is <ph id="ph1">`final`</ph>.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt;eigenschap haalt een waarde die aangeeft of deze methode <ph id="ph1">`final`</ph>.&lt;/xref:System.Reflection.MethodBase.IsFinal%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_final" name="final" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als deze methode is <bpt id="p2">&lt;xref uid="langword_csharp_final" name="final" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsHideBySig*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsHideBySig*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsHideBySig*&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt; property gets a value indicating whether only a member of the same kind with exactly the same signature is hidden in the derived class.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt;eigenschap haalt een waarde die aangeeft of alleen een lid van het zelfde type met dezelfde handtekening is verborgen in de afgeleide klasse.&lt;/xref:System.Reflection.MethodBase.IsHideBySig%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the member is hidden by signature; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als het lid wordt verborgen door handtekening; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsPrivate*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsPrivate*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsPrivate*&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt; property gets a value indicating whether this member is private.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt;eigenschap een waarde die aangeeft of dit lid persoonlijke opgehaald.&lt;/xref:System.Reflection.MethodBase.IsPrivate%2A&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to other members of the class itself; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als u toegang tot deze methode is beperkt tot andere leden van de klasse zelf. anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsPublic*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsPublic*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsPublic*&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt; property gets a value indicating whether this is a public method.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt;eigenschap een waarde die aangeeft of dit een openbare methode is opgehaald.&lt;/xref:System.Reflection.MethodBase.IsPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is public; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als deze methode openbare is; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsSpecialName*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsSpecialName*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsSpecialName*&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt; property gets a value indicating whether this method has a special name.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt;eigenschap een waarde die aangeeft of deze methode een speciale naam heeft opgehaald.&lt;/xref:System.Reflection.MethodBase.IsSpecialName%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method has a special name; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als deze methode een speciale naam heeft; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsStatic*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsStatic*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsStatic*&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt; property gets a value indicating whether the method is <ph id="ph1">`static`</ph>.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt;eigenschap haalt een waarde die aangeeft of de methode wordt <ph id="ph1">`static`</ph>.&lt;/xref:System.Reflection.MethodBase.IsStatic%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_static" name="static" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als deze methode is <bpt id="p2">&lt;xref uid="langword_csharp_static" name="static" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsVirtual*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.IsVirtual*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.IsVirtual*&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt; property gets a value indicating whether the method is <ph id="ph1">`virtual`</ph>.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt;eigenschap haalt een waarde die aangeeft of de methode <ph id="ph1">`virtual`</ph>.&lt;/xref:System.Reflection.MethodBase.IsVirtual%2A&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_virtual" name="virtual" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als deze methode is <bpt id="p2">&lt;xref uid="langword_csharp_virtual" name="virtual" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.ConstructorInfo.MemberType*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.ConstructorInfo.MemberType*&gt;eigenschap.&lt;/xref:System.Reflection.ConstructorInfo.MemberType*&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.ConstructorInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating the type of the member — method, constructor, event, and so on.</source>
          <target state="translated">De &lt;xref:System.Reflection.ConstructorInfo.MemberType%2A&gt;opgehaald van de eigenschap een &lt;xref:System.Reflection.MemberTypes&gt;waarde die aangeeft van het type van het lid: methode, constructor en gebeurtenis.&lt;/xref:System.Reflection.MemberTypes&gt; &lt;/xref:System.Reflection.ConstructorInfo.MemberType%2A&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating the type of member.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarde die aangeeft van het type van lid.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.MethodHandle*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MethodBase.MethodHandle*&gt;eigenschap.&lt;/xref:System.Reflection.MethodBase.MethodHandle*&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt; property gets a handle to the internal metadata representation of a method.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt;eigenschap opgehaald een ingang naar de interne metagegevens representatie van een methode.&lt;/xref:System.Reflection.MethodBase.MethodHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.RuntimeMethodHandle&gt; object.</source>
          <target state="translated">Een &lt;xref:System.RuntimeMethodHandle&gt;object.&lt;/xref:System.RuntimeMethodHandle&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MemberInfo.Name*&gt;eigenschap.&lt;/xref:System.Reflection.MemberInfo.Name*&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.</source>
          <target state="translated">De &lt;xref:System.Reflection.MemberInfo.Name%2A&gt;eigenschap wordt de naam van het huidige lid.&lt;/xref:System.Reflection.MemberInfo.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of this member.</source>
          <target state="translated">Een &lt;xref:System.String&gt;met de naam van dit lid.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt;eigenschap.&lt;/xref:System.Reflection.MemberInfo.ReflectedType*&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this instance of &lt;xref:System.Reflection.MemberInfo&gt;.</source>
          <target state="translated">De &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;eigenschap haalt de klassenobject dat is gebruikt voor het verkrijgen van dit exemplaar van &lt;xref:System.Reflection.MemberInfo&gt;.&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object through which this &lt;xref:System.Reflection.MemberInfo&gt; object was obtained.</source>
          <target state="translated">De &lt;xref:System.Type&gt;-object via waarvoor deze &lt;xref:System.Reflection.MemberInfo&gt;object is opgehaald.&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.</source>
          <target state="translated">COM-objecten bevat met versie-onafhankelijke toegang tot de &lt;xref:System.Object.ToString*&gt;methode.&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Deze methode is om toegang te krijgen tot beheerde klassen van niet-beheerde code en moet niet worden aangeroepen vanuit beheerde code.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A string that represents the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">Een tekenreeks met de huidige &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>