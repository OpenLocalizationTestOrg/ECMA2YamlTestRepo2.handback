<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ce0b224927104a1128e11d8115c047dedbac509</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.CharEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6496d4cad20c484b5b3dde327b7a84e6f96ee6e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bd8ffbc3a7ac62cdc2a76dc47127321c76dbd07</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports iterating over a &lt;xref:System.String&gt; object and reading its individual characters.</source>
          <target state="translated">Ondersteunt iteratie van een &lt;xref:System.String&gt;object en de afzonderlijke tekens te lezen.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Deze klasse kan niet worden overgenomen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A CharEnumerator provides read-only access to the characters in a referenced &lt;xref:System.String&gt; object.</source>
          <target state="translated">Een CharEnumerator geeft alleen-lezen toegang tot de tekens in een waarnaar wordt verwezen &lt;xref:System.String&gt;object.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">`foreach`</ph> statement of the Microsoft Visual Basic and C# programming languages, which iterates through the elements of a collection, retrieves a CharEnumerator from a &lt;xref:System.String&gt; object in order to iterate through the characters in that object.</source>
          <target state="translated">Bijvoorbeeld, de <ph id="ph1">`foreach`</ph> -instructie van de Microsoft Visual Basic en C# programmeertalen, waarvan de elementen van een verzameling doorlopen, haalt u een CharEnumerator van een &lt;xref:System.String&gt;object om te kunnen doorlopen van de tekens in dat object.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no public constructor for CharEnumerator.</source>
          <target state="translated">Er is geen openbare constructor voor CharEnumerator.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call a &lt;xref:System.String&gt; object's &lt;xref:System.String.GetEnumerator%2A&gt; method to obtain a CharEnumerator that is initialized to reference the string.</source>
          <target state="translated">Roep in plaats daarvan een &lt;xref:System.String&gt;van het object &lt;xref:System.String.GetEnumerator%2A&gt;methode voor het verkrijgen van een CharEnumerator die om te verwijzen naar de tekenreeks is geïnitialiseerd.&lt;/xref:System.String.GetEnumerator%2A&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A CharEnumerator maintains an internal index to the characters in the string the CharEnumerator references.</source>
          <target state="translated">Een CharEnumerator onderhoudt een interne index van de tekens in de tekenreeks de CharEnumerator-verwijzingen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state of the index is invalid when it references a character position logically before the first character or after the last character in the string, and valid when it references a character within the string.</source>
          <target state="translated">De status van de index is ongeldig wanneer deze verwijst naar een tekenpositie logisch vóór het eerste teken of na het laatste teken in de tekenreeks en geldig wanneer deze verwijst naar een teken in de tekenreeks.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is initialized to a position logically before the first character, and is set to a position after the last character when the iteration is complete.</source>
          <target state="translated">De index naar een positie logisch vóór het eerste teken is geïnitialiseerd en is ingesteld op een positie na het laatste teken wanneer de herhaling voltooid is.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown if you attempt to access a character while the index is invalid.</source>
          <target state="translated">Als u probeert toegang tot een teken terwijl de index ongeldig is, wordt er een uitzondering gegenereerd.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method increments the index by one, so the first and subsequent characters are accessed in turn.</source>
          <target state="translated">De &lt;xref:System.CharEnumerator.MoveNext%2A&gt;methode wordt de index verhoogd met één, zodat de eerste en de volgende tekens zijn toegankelijk zijn op zijn beurt.&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.Reset%2A&gt; method sets the index to a position logically before the first character.</source>
          <target state="translated">De &lt;xref:System.CharEnumerator.Reset%2A&gt;methode stelt u de index naar een positie logisch vóór het eerste teken.&lt;/xref:System.CharEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.Current%2A&gt; property retrieves the character currently referenced by index.</source>
          <target state="translated">De &lt;xref:System.CharEnumerator.Current%2A&gt;eigenschap haalt het teken momenteel waarnaar wordt verwezen door de index.&lt;/xref:System.CharEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.Clone%2A&gt; method creates a copy of the CharEnumerator.</source>
          <target state="translated">De &lt;xref:System.CharEnumerator.Clone%2A&gt;methode maakt u een kopie van de CharEnumerator.&lt;/xref:System.CharEnumerator.Clone%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Several independent instances of CharEnumerator across one or more threads can have access to a single instance of &lt;xref:System.String&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Meerdere onafhankelijke exemplaren van CharEnumerator tussen een of meer threads hebben toegang tot één exemplaar van &lt;xref:System.String&gt;.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is implemented to support the &lt;xref:System.Collections.IEnumerator&gt; interface.</source>
          <target state="translated">Deze klasse is geïmplementeerd ter ondersteuning van de &lt;xref:System.Collections.IEnumerator&gt;interface.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information regarding the use of an enumerator, see the &lt;xref:System.Collections.IEnumerator&gt; topic.</source>
          <target state="translated">Zie voor meer informatie over het gebruik van een enumerator de &lt;xref:System.Collections.IEnumerator&gt;onderwerp.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Maakt een kopie van de huidige <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is a copy of this instance of &lt;xref:System.CharEnumerator&gt; and its current state.</source>
          <target state="translated">De geretourneerde waarde is een kopie van dit exemplaar van &lt;xref:System.CharEnumerator&gt;en de huidige status.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for saving your state while iterating through a &lt;xref:System.String&gt; object.</source>
          <target state="translated">Dit is handig voor het opslaan van uw status tijdens het doorlopen een &lt;xref:System.String&gt;object.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose your application uses an original instance of &lt;xref:System.CharEnumerator&gt; to iterate through each character in a &lt;xref:System.String&gt;.</source>
          <target state="translated">Stel bijvoorbeeld dat uw toepassing gebruikmaakt van een oorspronkelijke exemplaar van &lt;xref:System.CharEnumerator&gt;aan elk teken in een &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; doorlopen&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When some unique character is encountered, your application pauses processing and invokes the Clone method.</source>
          <target state="translated">Wanneer een unieke teken wordt aangetroffen, wordt uw toepassing verwerking wordt onderbroken en roept de methode Clone.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>In effect, this saves the &lt;xref:System.CharEnumerator&gt; object's index in the &lt;xref:System.String&gt;.</source>
          <target state="translated">In feite slaat Hiermee u de &lt;xref:System.CharEnumerator&gt;index van het object in de &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application uses the clone to navigate to another part of the <ph id="ph1">`String`</ph> to perform some auxiliary processing.</source>
          <target state="translated">Uw toepassing de kloon wordt gebruikt om te navigeren naar een ander deel van de <ph id="ph1">`String`</ph> om uit te voeren sommige hulpverwerkingsknooppunt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The side-effect of this navigation is the clone loses track of the position where processing stopped.</source>
          <target state="translated">De neveneffect van deze navigatie is dat de kloon verliest voor het bijhouden van de positie waar verwerking wordt gestopt.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when the auxiliary processing is complete, your application discards the clone and uses the original &lt;xref:System.CharEnumerator&gt; instance to resume working on the &lt;xref:System.String&gt; where the original processing stopped.</source>
          <target state="translated">Echter, wanneer het hulpverwerkingsknooppunt voltooid is, uw toepassing wordt verwijderd van de kloon en maakt gebruik van de oorspronkelijke &lt;xref:System.CharEnumerator&gt;exemplaar hervatten werken op de &lt;xref:System.String&gt;waarbij de oorspronkelijke verwerking wordt gestopt.&lt;/xref:System.String&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is implemented to support the &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Deze methode is geïmplementeerd ter ondersteuning van de &lt;xref:System.ICloneable&gt;interface.&lt;/xref:System.ICloneable&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is a copy of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Een &lt;xref:System.Object&gt;die een kopie van de huidige <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the currently referenced character in the string enumerated by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Hiermee haalt u het teken dat momenteel waarnaar wordt verwezen in de tekenreeks die wordt geïnventariseerd door dit <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the Current property returns the character that is currently referenced by the index.</source>
          <target state="translated">De &lt;xref:System.CharEnumerator&gt;klasse onderhoudt een interne index van de geïnventariseerde tekenreeks en de huidige eigenschap retourneert het teken dat momenteel wordt verwezen door de index.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property should be invoked only when the index is valid; otherwise, an exception is thrown.</source>
          <target state="translated">Deze eigenschap moet worden aangeroepen, alleen wanneer de index geldig is. anders wordt er een uitzondering gegenereerd.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is always invalid for an empty string ("").</source>
          <target state="translated">De index is altijd ongeldig voor een lege tekenreeks ("").</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is also invalid after the &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; or &lt;xref:System.CharEnumerator.Reset%2A&gt; method is called.</source>
          <target state="translated">De index is ook ongeldig na de &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;of &lt;xref:System.CharEnumerator.Reset%2A&gt;methode wordt aangeroepen.&lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>After either of these methods is called, invoke the &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method to adjust the index to the first character in the enumerated string.</source>
          <target state="translated">Nadat een van deze methoden is aangeroepen, roepen de &lt;xref:System.CharEnumerator.MoveNext%2A&gt;methode voor het aanpassen van de index van het eerste teken van de geïnventariseerde tekenreeks.&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is valid whenever the &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">De index is geldig wanneer de &lt;xref:System.CharEnumerator.MoveNext%2A&gt;methode retourneert <ph id="ph1">`true`</ph>.&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current does not move the index, and consecutive calls to Current return the same character until &lt;xref:System.CharEnumerator.MoveNext%2A&gt;, &lt;xref:System.CharEnumerator.Reset%2A&gt;, or &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; is called.</source>
          <target state="translated">Huidige verplaatst de index geen en opeenvolgende aanroepen naar de huidige retourneren teken tot &lt;xref:System.CharEnumerator.MoveNext%2A&gt;, &lt;xref:System.CharEnumerator.Reset%2A&gt;, of &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;wordt aangeroepen.&lt;/xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; &lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The Unicode character currently referenced by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Het Unicode-teken momenteel waarnaar wordt verwezen door dit <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The index is invalid; that is, it is before the first or after the last character of the enumerated string.</source>
          <target state="translated">De index is ongeldig; dat wil zeggen, is voor de eerste of na het laatste teken van de geïnventariseerde tekenreeks.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Versies van alle resources die worden gebruikt door het huidige exemplaar van de <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call Dispose when you are finished using the &lt;xref:System.CharEnumerator&gt;.</source>
          <target state="translated">Dispose aanroepen wanneer u klaar bent met de &lt;xref:System.CharEnumerator&gt;.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method leaves the &lt;xref:System.CharEnumerator&gt; in an unusable state.</source>
          <target state="translated">De methode Dispose verlaat de &lt;xref:System.CharEnumerator&gt;in een onbruikbare status.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.CharEnumerator&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.CharEnumerator&gt; was occupying.</source>
          <target state="translated">Na Dispose aanroepen, moet u alle verwijzingen naar vrijgeven de &lt;xref:System.CharEnumerator&gt;zodat het geheugen door de garbage collector vrijmaken kunt die de &lt;xref:System.CharEnumerator&gt;is bepaald dat zich bevindt.&lt;/xref:System.CharEnumerator&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>onbeheerde hulpbronnen reinigen<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> en <bpt id="p2">[</bpt>uitvoering van een methode Dispose<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.CharEnumerator&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Altijd aanroep verwijderen voordat u uw laatste verwijzing naar de &lt;xref:System.CharEnumerator&gt;.&lt;/xref:System.CharEnumerator&gt; vrijgeven</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.CharEnumerator&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">Anders wordt de resources die worden gebruikt niet vrij tot het aanroepen van de garbagecollector van de &lt;xref:System.CharEnumerator&gt;van het object <ph id="ph1">`Finalize`</ph> methode.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Increments the internal index of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the next character of the enumerated string.</source>
          <target state="translated">Verhoogt de interne index van de huidige <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object naar het volgende teken van de geïnventariseerde tekenreeks.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the MoveNext method increments the index by one.</source>
          <target state="translated">De &lt;xref:System.CharEnumerator&gt;klasse houdt een interne index van de geïnventariseerde tekenreeks en de methode MoveNext wordt de index met één verhoogd.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call MoveNext after calling &lt;xref:System.String.GetEnumerator%2A&gt; or &lt;xref:System.CharEnumerator.Reset%2A&gt; to increment the current character position to the first character in the enumerated string.</source>
          <target state="translated">Roep MoveNext na het aanroepen &lt;xref:System.String.GetEnumerator%2A&gt;of &lt;xref:System.CharEnumerator.Reset%2A&gt;moet worden verhoogd, de huidige tekenpositie naar het eerste teken in de geïnventariseerde tekenreeks.&lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.String.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check that the return value is <ph id="ph1">`true`</ph> to determine that the current character position is valid.</source>
          <target state="translated">Controleer of de geretourneerde waarde is <ph id="ph1">`true`</ph> om te bepalen of de huidige tekenpositie geldig is.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the index is already beyond the last character of the enumerated string, the index is not changed and <ph id="ph1">`false`</ph> is returned.</source>
          <target state="translated">Als de index al afgezien van het laatste teken van de geïnventariseerde tekenreeks is, wordt de index wordt niet gewijzigd en <ph id="ph1">`false`</ph> wordt geretourneerd.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that if the enumerated string is empty (""), the state of the &lt;xref:System.CharEnumerator&gt; is always invalid.</source>
          <target state="translated">U ziet dat als de geïnventariseerde tekenreeks leeg is (""), wordt de status van de &lt;xref:System.CharEnumerator&gt;altijd is ongeldig.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the internal index for the &lt;xref:System.CharEnumerator&gt; is initially before the first character of the enumerated string and is therefore invalid.</source>
          <target state="translated">Dit komt doordat de interne index voor de &lt;xref:System.CharEnumerator&gt;is in eerste instantie vóór het eerste teken van de geïnventariseerde tekenreeks en is daarom ongeldig.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>MoveNext logically sets the index after the last (nonexistent) character of the enumerated string which is also invalid.</source>
          <target state="translated">De index MoveNext logisch ingesteld na het laatste (niet-bestaande) teken van de geïnventariseerde tekenreeks ook ongeldig is.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the index is successfully incremented and within the enumerated string; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de index met succes wordt verhoogd, en binnen de geïnventariseerde tekenreeks; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes the index to a position logically before the first character of the enumerated string.</source>
          <target state="translated">Initialiseert de index van een positie logisch vóór het eerste teken van de geïnventariseerde tekenreeks.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the Reset method sets the index to the invalid state.</source>
          <target state="translated">De &lt;xref:System.CharEnumerator&gt;klasse houdt een interne index van de geïnventariseerde tekenreeks en de methode voor opnieuw instellen wordt de index ingesteld op de ongeldige status.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the currently referenced character in the string enumerated by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Hiermee haalt u het teken dat momenteel waarnaar wordt verwezen in de tekenreeks die wordt geïnventariseerd door dit <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Zie voor een beschrijving van dit lid <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Dit lid is een expliciete interface lid-implementatie.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.CharEnumerator&gt; instance is cast to an &lt;xref:System.Collections.IEnumerator&gt; interface.</source>
          <target state="translated">Het kan worden gebruikt alleen wanneer de &lt;xref:System.CharEnumerator&gt;exemplaar is geconverteerd naar een &lt;xref:System.Collections.IEnumerator&gt;interface.&lt;/xref:System.Collections.IEnumerator&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The boxed Unicode character currently referenced by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Het in een vak Unicode-teken momenteel waarnaar wordt verwezen door dit <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Enumeration has not started.</source>
          <target state="translated">Opsomming is niet gestart.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-or-       Enumeration has ended.</source>
          <target state="translated">- of - inventarisatie is geëindigd.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>