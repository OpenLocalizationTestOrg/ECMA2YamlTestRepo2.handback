<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7e2580d45ed309e1abd53aa26d43d98acb0c74d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Net.Http.StreamContent.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3098163e876dac724a3a964285a1330b112c264e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6970a80ad3171ee608c2cf9c5f3cb3dc4792120d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides HTTP content based on a stream.</source>
          <target state="translated">HTTP-inhoud op basis van een stream bevat.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Maakt een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The content used to initialize the <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De inhoud voor het initialiseren van de <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Maakt een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The content used to initialize the <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De inhoud voor het initialiseren van de <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the buffer for the <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De grootte, in bytes van de buffer voor de <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">content</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">content</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bufferSize</ph><ept id="p1">&lt;/code&gt;</ept> was less than or equal to zero.</source>
          <target state="translated">De <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bufferSize</ph> <ept id="p1">&lt;/code&gt;</ept> is kleiner dan of gelijk zijn aan nul.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Write the HTTP stream content to a memory stream as an asynchronous operation.</source>
          <target state="translated">De stroom HTTP-inhoud naar een geheugenstream schrijven als een asynchrone bewerking.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">Deze bewerking wordt niet geblokkeerd.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been written to the memory stream.</source>
          <target state="translated">De geretourneerde &lt;xref:System.Threading.Tasks.Task%601&gt;object voltooid nadat alle inhoud is geschreven naar de geheugenstroom.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CreateContentReadStreamAsync method buffers the content to a memory stream.</source>
          <target state="translated">De methode CreateContentReadStreamAsync buffert de inhoud naar een geheugenstream.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can override this behavior if there is a better way to retrieve the content as stream.</source>
          <target state="translated">Afgeleide klassen kunnen dit gedrag negeren als er een betere manier voor het ophalen van de inhoud als stream.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a byte array or a string could use a more efficient method way such as wrapping a read-only &lt;xref:System.IO.MemoryStream&gt; around the bytes or string.)</source>
          <target state="translated">For example, een bytematrix of een tekenreeks een efficiÃ«ntere manier methode zoals wrapping een alleen-lezen kan gebruiken &lt;xref:System.IO.MemoryStream&gt;rond de bytes of de tekenreeks.)&lt;/xref:System.IO.MemoryStream&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Het taakobject dat de asynchrone bewerking vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally disposes of the managed resources.</source>
          <target state="translated">Heft de niet-beheerde bronnen worden gebruikt door de <bpt id="p1">&lt;xref href="System.Net.Http.StreamContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> en eventueel verwijdert de beheerde bronnen.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">Deze methode wordt aangeroepen door het publiek <ph id="ph1">`Dispose()`</ph> methode en de &lt;xref:System.Object.Finalize%2A&gt;methode.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>Hiermee wordt de beveiligde <ph id="ph2">`Dispose(Boolean)`</ph> methode met de <ph id="ph3">`disposing`</ph> parameter ingesteld op <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.When the <ph id="ph4">`disposing`</ph> parameter is <ph id="ph5">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Net.Http.StreamContent&gt; references.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;roept <ph id="ph1">`Dispose`</ph> met <ph id="ph2">`disposing`</ph> ingesteld op <ph id="ph3">`false`</ph>. Wanneer de <ph id="ph4">`disposing`</ph> parameter <ph id="ph5">`true`</ph>, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit &lt;xref:System.Net.Http.StreamContent&gt;verwijzingen.&lt;/xref:System.Net.Http.StreamContent&gt;&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Deze methode roept de <ph id="ph1">`Dispose()`</ph> methode van elk object waarnaar wordt verwezen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to releases only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> zonder begeleiding resources op alleen-versies.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a stream as an asynchronous operation.</source>
          <target state="translated">De HTTP-inhoud naar een stream worden geserialiseerd als een asynchrone bewerking.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
          <target state="translated">Deze bewerking wordt niet geblokkeerd.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Threading.Tasks.Task&gt; object will complete after all of the content has been serialized to the target stream.</source>
          <target state="translated">De geretourneerde &lt;xref:System.Threading.Tasks.Task&gt;object voltooid nadat alle inhoud naar de doel-stroom heeft is geserialiseerd.&lt;/xref:System.Threading.Tasks.Task&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The target stream.</source>
          <target state="translated">De doel-stroom.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Information about the transport (channel binding token, for example).</source>
          <target state="translated">Informatie over het transport (kanaalbindingstoken, bijvoorbeeld).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This parameter may be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Deze parameter mogelijk <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Het taakobject dat de asynchrone bewerking vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Determines whether the stream content has a valid length in bytes.</source>
          <target state="translated">Hiermee wordt bepaald of de stroominhoud een geldige lengte in bytes.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TryComputeLength method gives HTTP stream content the ability to calculate the content length.</source>
          <target state="translated">De methode TryComputeLength biedt HTTP-stroominhoud de mogelijkheid voor het berekenen van de lengte van de inhoud.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for content types which are able to easily calculate the content length.</source>
          <target state="translated">Dit is handig voor inhoudstypen die kunnen eenvoudig de lengte van de inhoud te berekenen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Als de lengte van de inhoud is niet mogelijk of dure (vereist het systeem voor het bufferen van de volledige inhoud waarbij de serialisatie zou duur of dat het systeem een grote hoeveelheid geheugen toewijzen) computing, deze methode kunt terugkeren <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method returns <ph id="ph1">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</source>
          <target state="translated">Als deze methode retourneert <ph id="ph1">`false`</ph>, betekent dit dat gesegmenteerde overdracht nodig is of de inhoud moet ophalen gebufferd voordat ze worden verzonden naar de server.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The length in bytes of the stream content.</source>
          <target state="translated">De lengte in bytes van de stroominhoud.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">length</ph><ept id="p2">&lt;/code&gt;</ept> is a valid length; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">length</ph> <ept id="p2">&lt;/code&gt;</ept> is een geldige lengte; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>