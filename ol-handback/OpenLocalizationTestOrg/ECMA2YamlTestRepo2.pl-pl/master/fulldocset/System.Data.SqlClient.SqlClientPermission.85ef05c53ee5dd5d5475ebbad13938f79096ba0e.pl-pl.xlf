<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afa752a968ad1f1f7defccbe71802e52e4cb645d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.SqlClient.SqlClientPermission.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edccb5a01f388cab534605635a5a9b5a2fc126f3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ade6d850d18b161f60cefc3bca8b75066ab82b5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables the .NET Framework Data Provider for SQL Server to help make sure that a user has a security level sufficient to access a data source.</source>
          <target state="translated">Umożliwia dostawcy danych programu .NET Framework dla programu SQL Server upewnić się, że użytkownik ma wystarczające, aby uzyskiwać dostęp do źródła danych poziomu zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A&gt; property takes precedence over the &lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A&gt;Właściwość ma wyższy priorytet niż &lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;Właściwości.&lt;/xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt; &lt;/xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if you set &lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt; to <ph id="ph1">`false`</ph>, you must also set &lt;xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A&gt; to <ph id="ph2">`false`</ph> to prevent a user from making a connection using a blank password.</source>
          <target state="translated">W związku z tym Jeśli ustawisz &lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;do <ph id="ph1">`false`</ph>, należy także ustawić &lt;xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A&gt;do <ph id="ph2">`false`</ph> aby uniemożliwić użytkownikowi połączenie przy użyciu pustego hasła.&lt;/xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A&gt; &lt;/xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Korzystając z uprawnień zabezpieczeń dostępu kodu dla ADO.NET, poprawne wzorzec jest rozpoczynać się od przypadku najbardziej restrykcyjne (nie uprawnienia we wszystkich), a następnie dodaj określone uprawnienia, które są wymagane dla określonego zadania, które musi wykonać kod.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The opposite pattern, starting with all permissions and then denying a specific permission, is not secure, because there are many ways of expressing the same connection string.</source>
          <target state="translated">Wzorzec przeciwnej, następnie odrzuciła określone uprawnienia, począwszy od wszystkie uprawnienia nie jest bezpieczne, ponieważ istnieje wiele sposobów wyrażenia te same parametry połączenia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</source>
          <target state="translated">Na przykład, jeśli rozpoczynać wszystkie uprawnienia, a następnie spróbuj zezwolić na korzystanie z parametrów połączenia "serwera = someserver", ciąg "server=someserver.mycompany.com" nadal będzie dozwolony.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</source>
          <target state="translated">Należy zawsze uruchomić przyznając w ogóle nie ma uprawnień, można zmniejszyć prawdopodobieństwo, że istnieją luk w zestaw uprawnień.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlClientPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlClientPermission"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasy.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlClientPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlClientPermission"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasy.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Jeden z <bpt id="p1">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wartości.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlClientPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlClientPermission"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasy.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Security.Permissions.PermissionState&gt; enumeration takes precedence over the &lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Security.Permissions.PermissionState&gt;Wyliczenie ma pierwszeństwo przed &lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;Właściwości.&lt;/xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt; &lt;/xref:System.Security.Permissions.PermissionState&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if you set &lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt; to <ph id="ph1">`false`</ph>, you must also set &lt;xref:System.Security.Permissions.PermissionState&gt; to <ph id="ph2">`None`</ph> to prevent a user from making a connection using a blank password.</source>
          <target state="translated">W związku z tym Jeśli ustawisz &lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;do <ph id="ph1">`false`</ph>, należy także ustawić &lt;xref:System.Security.Permissions.PermissionState&gt;do <ph id="ph2">`None`</ph> aby uniemożliwić użytkownikowi połączenie przy użyciu pustego hasła.&lt;/xref:System.Security.Permissions.PermissionState&gt; &lt;/xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example demonstrating how to use security demands, see <bpt id="p1">[</bpt>Code Access Security and ADO.NET<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Na przykład pokazuje sposób użycia żądania kontroli zabezpieczeń, zobacz <bpt id="p1">[</bpt>zabezpieczenia dostępu kodu i ADO.NET<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Jeden z <bpt id="p1">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wartości.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Indicates whether a blank password is allowed.</source>
          <target state="translated">Wskazuje, czy puste hasło jest dozwolone.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Adds a new connection string and a set of restricted keywords to the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlClientPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Dodaje nowe parametry połączenia i zestaw ograniczeniami słów kluczowych <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlClientPermission"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to configure which connection strings are allowed by a particular permission object.</source>
          <target state="translated">Użyj tej metody, aby skonfigurować parametry połączenia, które są dozwolone przez obiekt określone uprawnienie.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, use the following code fragment if you want to only allow a specific connection string and nothing else:       <ph id="ph1">`permission.Add("server=MyServer; database=MyDatabase; Integrated Security=true", "", KeyRestrictionBehavior.AllowOnly)`</ph>       The following example allows connection strings that use any database, but only on the server named MyServer, with any user and password combination and containing no other connection string keywords:       <ph id="ph2">`permission.Add("server=MyServer;", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`</ph>       The following example uses the same scenario as above but allows for a failover partner that can be used when connecting to servers configured for mirroring:       <ph id="ph3">`permission.Add("server=MyServer; failover partner=MyMirrorServer", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`</ph><ph id="ph4">      &gt; </ph><ph id="ph5">[!NOTE]</ph> &gt;  When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</source>
          <target state="translated">Na przykład użyć następującego fragmentu kodu, jeśli chcesz zezwolić tylko określony ciąg połączenia i niczego poza: <ph id="ph1">`permission.Add("server=MyServer; database=MyDatabase; Integrated Security=true", "", KeyRestrictionBehavior.AllowOnly)`</ph> poniższy przykład umożliwia parametry połączeń używające wszystkie bazy danych, ale tylko na serwerze o nazwie MójSerwer, o dowolnej kombinacji użytkownika i hasła i nie inne słowa kluczowe parametrów połączenia: <ph id="ph2">`permission.Add("server=MyServer;", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`</ph> w poniższym przykładzie używa tego samego scenariusz jako powyżej, ale pozwala na serwer partnerski trybu failover, używaną podczas nawiązywania połączenia z serwerów skonfigurowanych dublowania : <ph id="ph3">`permission.Add("server=MyServer; failover partner=MyMirrorServer", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`</ph> <ph id="ph4">      &gt; </ph> <ph id="ph5">[!NOTE]</ph> &gt; Korzystając z uprawnień zabezpieczeń dostępu kodu dla ADO.NET, poprawne wzorzec jest rozpoczynać się od przypadku najbardziej restrykcyjne (nie uprawnienia we wszystkich), a następnie dodaj określone uprawnienia, które są wymagane dla określonego zadania, które musi wykonać kod.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The opposite pattern, starting with all permissions and then trying to deny a specific permission, is not secure, because there are many ways of expressing the same connection string.</source>
          <target state="translated">Wzorzec przeciwnej, począwszy od wszystkie uprawnienia, a następnie ponawiając odrzucanie określone uprawnienia nie jest bezpieczne, ponieważ istnieje wiele sposobów wyrażenia te same parametry połączenia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</source>
          <target state="translated">Na przykład, jeśli rozpoczynać wszystkie uprawnienia, a następnie spróbuj zezwolić na korzystanie z parametrów połączenia "serwera = someserver", ciąg "server=someserver.mycompany.com" nadal będzie dozwolony.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</source>
          <target state="translated">Należy zawsze uruchomić przyznając w ogóle nie ma uprawnień, można zmniejszyć prawdopodobieństwo, że istnieją luk w zestaw uprawnień.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The connection string.</source>
          <target state="translated">Parametry połączenia.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The key restrictions.</source>
          <target state="translated">Ograniczenia klucza.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.KeyRestrictionBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumerations.</source>
          <target state="translated">Jeden z <bpt id="p1">&lt;xref href="System.Data.KeyRestrictionBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wyliczenia.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlClientPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an <bpt id="p2">&lt;xref href="System.Security.IPermission"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Returns the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlClientPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an <bpt id="p2">&lt;xref href="System.Security.IPermission"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A copy of the current permission object.</source>
          <target state="translated">Kopię bieżącego obiektu uprawnień.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>