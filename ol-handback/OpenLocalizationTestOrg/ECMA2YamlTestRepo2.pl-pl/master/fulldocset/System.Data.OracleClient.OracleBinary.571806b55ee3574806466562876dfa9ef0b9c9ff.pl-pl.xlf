<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">698d2401c6e74ed8302db434ce80b0968a98b6a6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.OracleClient.OracleBinary.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fd4662773689b638a6b411c0604cadf4fcdebc7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d505c5bf4c1647b9a59c85cb521ab891791b9abf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a variable-length stream of binary data to be stored in or retrieved from a database.</source>
          <target state="translated">Reprezentuje o zmiennej długości strumienia danych binarnych, które mają być przechowywane w lub pobrać z bazy danych.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain an OracleBinary object, call the &lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A&gt; method.</source>
          <target state="translated">Aby uzyskać obiekt OracleBinary, należy wywołać &lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A&gt;metody.&lt;/xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure, setting the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property to the contents of the supplied byte array.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury, ustawienie &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;Właściwość do zawartości tablicy bajtów podany.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The byte array to be stored in the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property.</source>
          <target state="translated">Tablica bajtów do zapisania w &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;Właściwości.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Compares this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the supplied object and returns an indication of their relative values.</source>
          <target state="translated">Porównuje to <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiekt do podanego obiektu i zwraca dane dotyczące ich względne wartości.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The object to be compared to this <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Obiekt do porównania z tym <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A signed number indicating the relative values of this <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure and the object.</source>
          <target state="translated">Podpisem liczbę określającą wartości względne <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury i obiektu.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Return Value</source>
          <target state="translated">Wartość zwracana</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Condition</source>
          <target state="translated">Warunek</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Less than zero</source>
          <target state="translated">Mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The value of this <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is less than the object.</source>
          <target state="translated">Wartość tego <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiekt jest mniejszy niż obiekt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Zero</source>
          <target state="translated">Zero</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is the same as the object.</source>
          <target state="translated">To <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiekt jest taki sam, jak obiekt.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Greater than zero</source>
          <target state="translated">Większa niż zero</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is greater than the object.</source>
          <target state="translated">To <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiekt jest większy niż obiekt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-or-       The object is a null reference.</source>
          <target state="translated">- lub - obiekt jest odwołaniem o wartości zerowej.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Concatenates two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to create a new <bpt id="p2">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Łączy dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby utworzyć nową <bpt id="p2">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> struktury.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure with the concatenated values of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p3">&lt;/code&gt;</ept> parameters.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury połączonych wartościami <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">x</ph> <ept id="p2">&lt;/code&gt;</ept> i <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">y</ph> <ept id="p3">&lt;/code&gt;</ept> parametrów.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Compares the supplied object parameter to the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Porównuje parametru podanego obiektu &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;Właściwość <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The object to be compared.</source>
          <target state="translated">Obiekt do porównania.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if object is an instance of <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the two are equal; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli obiekt jest wystąpieniem <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> i są równe; w przeciwnym razie <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if they are equal.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby ustalić, czy są równe.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the two instances are equal or <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the two instances are not equal.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> dwa wystąpienia są równe lub <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> dwa wystąpienia nie są równe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Zwraca wartość skrótu dla tego <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32-bitowej podpisanej liczby całkowitej wartość skrótu.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is greater than the second.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby określić, jeśli pierwsze jest większe od drugiego.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is greater than the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Jeśli pierwsze wystąpienie jest większa niż drugie wystąpienie, w przeciwnym razie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is greater than or equal to the second.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby określić, jeśli pierwsze jest większe lub równe drugiemu.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Jeśli pierwsze wystąpienie jest większa niż lub równa drugie wystąpienie, w przeciwnym razie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure is null.</source>
          <target state="translated">Pobiera wartość wskazującą czy &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;Właściwość <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury ma wartość null.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is null, otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli <bpt id="p2">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ma wartość null, w przeciwnym razie <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the single byte from the <bpt id="p1">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property located at the position indicated by the integer parameter, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Pobiera pojedynczy bajt z <bpt id="p1">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> właściwości znajdujący się w pozycji parametru liczby całkowitej <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">index</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> indicates a position beyond the end of the byte array, an exception is raised.</source>
          <target state="translated">Jeśli <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">index</ph> <ept id="p1">&lt;/code&gt;</ept> wskazuje położenie poza koniec tablicy bajtów jest wyjątek.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid raising an <ph id="ph1">`OracleNullValueException`</ph>, always check the &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt; property and the <ph id="ph2">`Length`</ph> property before reading <ph id="ph3">`this`</ph>.</source>
          <target state="translated">Aby uniknąć wywoływanie <ph id="ph1">`OracleNullValueException`</ph>, sprawdzać &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;Właściwości i <ph id="ph2">`Length`</ph> właściwości przed przeczytaniem <ph id="ph3">`this`</ph>.&lt;/xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The position of the byte to be retrieved.</source>
          <target state="translated">Pozycja bajtów, które mają zostać pobrane.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The byte located at the position indicated by the integer parameter.</source>
          <target state="translated">Bajt, znajdujący się w pozycji parametru liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets the length in bytes of the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property.</source>
          <target state="translated">Pobiera długość w bajtach &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;Właściwości.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This property is read-only.</source>
          <target state="translated">Ta właściwość jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid raising an <ph id="ph1">`OracleNullValueException`</ph>, always check the &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt; property before reading the <ph id="ph2">`Length`</ph> property.</source>
          <target state="translated">Aby uniknąć wywoływanie <ph id="ph1">`OracleNullValueException`</ph>, sprawdzać &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;Właściwości przed przeczytaniem <ph id="ph2">`Length`</ph> właściwości.&lt;/xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The length of the binary data in the <bpt id="p1">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">Długość danych binarnych w <bpt id="p1">&lt;xref uid="langword_csharp_Value" name="Value" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> właściwości.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is less than the second.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby określić, jeśli pierwsze jest mniejsze od drugiego.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is less than the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Jeśli początkowo mniejszej niż drugi jest wystąpienie, w przeciwnym razie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is less than or equal to the second.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby określić, jeśli pierwsze jest mniejsze niż drugi.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Jeśli pierwsze wystąpienie jest mniejsza niż drugie wystąpienie, w przeciwnym razie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if they are not equal.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby określić, jeśli nie są takie same.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Struktury.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the two instances are equal.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> dwa wystąpienia nie są równe lub <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> dwa wystąpienia są równe.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Represents a null value that can be assigned to the &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt; property of an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Reprezentuje wartość null, które mogą być przypisane do &lt;xref:System.Data.OracleClient.OracleBinary.Value*&gt;Właściwość <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury.&lt;/xref:System.Data.OracleClient.OracleBinary.Value*&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Null`</ph> functions as a constant for the <ph id="ph2">`OracleBinary`</ph> structure.</source>
          <target state="translated"><ph id="ph1">`Null`</ph>działa jako stała dla <ph id="ph2">`OracleBinary`</ph> struktury.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Do dodania.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Concatenates the two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameters to create a new <bpt id="p2">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Łączy dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> parametrów do utworzenia nowego <bpt id="p2">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> struktury.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> will appear first in the resulting <ph id="ph2">`OracleBinary`</ph>, followed by <ph id="ph3">`y`</ph>.</source>
          <target state="translated"><ph id="ph1">`x`</ph>będą występować jako pierwszy w wynikowym <ph id="ph2">`OracleBinary`</ph>, a następnie <ph id="ph3">`y`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic]       In Visual Basic, you can use the operators defined by a class, but you cannot override them or create your own.</source>
          <target state="translated">[Visual Basic]       W języku Visual Basic można używać operatorów zdefiniowanych przez klasę, ale nie można zastąpić je lub Utwórz swój własny.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The concatenated values of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept> parameters.</source>
          <target state="translated">Połączone wartości <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">x</ph> <ept id="p1">&lt;/code&gt;</ept> i <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">y</ph> <ept id="p2">&lt;/code&gt;</ept> parametrów.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if they are equal.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby ustalić, czy są równe.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the two instances are equal or <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the two instances are not equal.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> dwa wystąpienia są równe lub <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> dwa wystąpienia nie są równe.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Do dodania.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Do dodania.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is greater than the second.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby określić, jeśli pierwsze jest większe od drugiego.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is greater than the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Jeśli pierwsze wystąpienie jest większa niż drugie wystąpienie, w przeciwnym razie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is greater than or equal to the second.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby określić, jeśli pierwsze jest większe lub równe drugiemu.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Jeśli pierwsze wystąpienie jest większa niż lub równa drugie wystąpienie, w przeciwnym razie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Do dodania.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Do dodania.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if they are equal.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby ustalić, czy są równe.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the two instances are equal.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> dwa wystąpienia nie są równe lub <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> dwa wystąpienia są równe.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is less than the second.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby określić, jeśli pierwsze jest mniejsze od drugiego.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is less than the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Jeśli początkowo mniejszej niż drugi jest wystąpienie, w przeciwnym razie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structures to determine if the first is less than or equal to the second.</source>
          <target state="translated">Porównuje dwa <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury tak, aby określić, jeśli pierwsze jest mniejsze niż drugi.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Obiektu.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance, otherwise <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Czyli <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Jeśli pierwsze wystąpienie jest mniejsza niż drugie wystąpienie, w przeciwnym razie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If either instance of <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt; of the <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will be <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli wystąpienie albo <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ma wartość null, &lt;xref:System.Data.OracleClient.OracleBoolean.Value*&gt;z <bpt id="p2">&lt;xref uid="langword_csharp_OracleBoolean" name="OracleBoolean" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> będzie <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBoolean.Null"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OracleClient.OracleBoolean.Value*&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets the value of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Pobiera wartość <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This property is read-only.</source>
          <target state="translated">Ta właściwość jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid raising an <ph id="ph1">`OracleNullValueException`</ph>, always check the &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt; property before reading the <ph id="ph2">`Value`</ph> property.</source>
          <target state="translated">Aby uniknąć wywoływanie <ph id="ph1">`OracleNullValueException`</ph>, sprawdzać &lt;xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;Właściwości przed przeczytaniem <ph id="ph2">`Value`</ph> właściwości.&lt;/xref:System.Data.OracleClient.OracleBinary.IsNull%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure.</source>
          <target state="translated">Wartość <bpt id="p1">&lt;xref uid="langword_csharp_OracleBinary" name="OracleBinary" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> struktury.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>