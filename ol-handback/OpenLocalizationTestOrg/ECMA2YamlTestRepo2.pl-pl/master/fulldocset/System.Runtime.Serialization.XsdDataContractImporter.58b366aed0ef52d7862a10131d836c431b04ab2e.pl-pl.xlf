<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab88a4badc7d65529132b91581280c15f8f00c28</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.XsdDataContractImporter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f739caa4cd00dbe894c3cc2b12fc01cfe874002</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f250172b1cc0a8ea0f9df420abe79cb27f9dd7d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows the transformation of a set of XML schema files (.xsd) into common language runtime (CLR) types.</source>
          <target state="translated">Umożliwia przekształcania zestawu plików schematów XML (XSD) do wspólnego języka typów środowiska uruchomieniowego (języka wspólnego CLR).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the XsdDataContractImporter if you are creating a Web service that must interoperate with an existing Web service, or to create data contract types from XML schemas.</source>
          <target state="translated">XsdDataContractImporter — należy użyć, jeśli podczas tworzenia usługi sieci Web konieczna jest współpraca z istniejącej usługi sieci Web lub aby utworzyć typy kontraktu danych na podstawie schematów XML.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>XsdDataContractImporter will transform a set of XML schemas and create the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> types that represent the data contract in a selected programming language.</source>
          <target state="translated">XsdDataContractImporter — spowoduje przekształcenie zestaw schematów XML i utworzenie <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> Zwiń typy reprezentujące dane w wybranym języku programowania.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create the code, use the classes in the &lt;xref:System.CodeDom&gt; namespace.</source>
          <target state="translated">Aby utworzyć kod, należy użyć klasy w &lt;xref:System.CodeDom&gt;przestrzeni nazw.&lt;/xref:System.CodeDom&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, use the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt; class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services.</source>
          <target state="translated">Z drugiej strony, użyj &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;klasy po utworzeniu usługi sieci Web, który zawiera dane reprezentowane przez typy CLR i kiedy należy wyeksportować schematów XML dla każdego typu danych do użycia przez inne usługi sieci Web.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt; transforms a set of CLR types into a set of XML schemas.</source>
          <target state="translated">Oznacza to, że &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;przekształca Zestaw CLR typów na zestaw schematów XML.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  To generate CLR types from XML schemas at design time, use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Do generowania typów CLR z schematów XML w czasie projektowania, użyj <bpt id="p1">[</bpt>narzędzie narzędzia metadanych elementu ServiceModel (Svcutil.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To generated code from XSD files, use the <ph id="ph1">`/dataContractOnly`</ph> switch of the tool.</source>
          <target state="translated">Wygenerowany kod z pliki XSD, użyj <ph id="ph1">`/dataContractOnly`</ph> przełącznika narzędzia.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the XsdDataContractImporter if you need more control over the process or need to do it programmatically.</source>
          <target state="translated">Umożliwia także XsdDataContractImporter — Jeśli więcej kontroli nad procesem lub trzeba przeprowadzić programowo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractImporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractImporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasy.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractImporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that will be used to generate CLR code.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractImporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasy z <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> który będzie używany do generowania kodu CLR.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to add more code into a &lt;xref:System.CodeDom.CodeCompileUnit&gt; that has already been generated.</source>
          <target state="translated">Użyj tego konstruktora, aby dodać więcej kodu do &lt;xref:System.CodeDom.CodeCompileUnit&gt;który został już wygenerowany.&lt;/xref:System.CodeDom.CodeCompileUnit&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that will be used to store the code.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Który będzie używany do przechowywania kodu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the schemas contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be transformed into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Pobiera wartość wskazującą, czy schematów zawartych w <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> może zostać zamieniony na <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schemas to transform.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> zawierającego schematy do przekształcenia.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the schemas can be transformed to data contract types; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli schematów może służyć do typów kontraktu danych. w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Kontrakt danych objętego importu jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the specified set of types contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be transformed into CLR types generated into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Pobiera wartość wskazującą, czy określony zestaw typów zawartych w <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> może służyć do generowania typów CLR <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schemas to transform.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> zawierającego schematy do przekształcenia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> of &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the set of schema types to import.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>Xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> z &lt;xref:System.Xml.XmlQualifiedName&gt;reprezentujący zestaw typów schematu do zaimportowania.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the schemas can be transformed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli można je przekształcać schematów; w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeNames</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeNames</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Kontrakt danych objętego importu jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a specific schema element contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be imported.</source>
          <target state="translated">Pobiera wartość wskazującą, czy element schematu zawarte w <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> możliwym do zaimportowania.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method checks the type and all schema types referenced from it.</source>
          <target state="translated">Ta metoda sprawdza typ i wszystkie typy schemat przywoływany z niego.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to import.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Do zaimportowania.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A specific <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to check in the set of schemas.</source>
          <target state="translated">Określony <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> w zestawie schematów.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element can be imported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli element może być importowany; w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">element</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">element</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Kontrakt danych objętego importu jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the schemas contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be transformed into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Pobiera wartość wskazującą, czy schematów zawartych w <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> może zostać zamieniony na <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about types that can be imported, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat typów, które można importować, zobacz <bpt id="p1">[</bpt>typy obsługiwane przez serializator kontraktu danych<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schema representations.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> zawierający reprezentacje schematu.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; of &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the names of the schema types that need to be imported from the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;z &lt;xref:System.Xml.XmlQualifiedName&gt;, który określa nazwy typów schematów, które muszą zostać zaimportowane z <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Xml.XmlQualifiedName&gt; &lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the schemas can be transformed to data contract types; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli schematów może służyć do typów kontraktu danych. w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeName</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeName</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Kontrakt danych objętego importu jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used for storing the CLR types generated.</source>
          <target state="translated">Pobiera <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> używany do przechowywania typów CLR wygenerowany.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this property after importing schemas using the &lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt; to access the &lt;xref:System.CodeDom.CodeCompileUnit&gt; in which all the generated code is stored.</source>
          <target state="translated">Wywołanie tej właściwości po zaimportowaniu schematów przy użyciu &lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;dostępu &lt;xref:System.CodeDom.CodeCompileUnit&gt;Wszystkie wygenerowany kod jest przechowywany.&lt;/xref:System.CodeDom.CodeCompileUnit&gt; &lt;/xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to store the CLR types generated.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> używany do przechowywania wygenerowane typy CLR.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the CLR type generated for the schema type with the specified &lt;xref:System.Xml.XmlQualifiedName&gt;.</source>
          <target state="translated">Zwraca <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> na typ CLR dla typu schematu o określonym &lt;xref:System.Xml.XmlQualifiedName&gt;.&lt;/xref:System.Xml.XmlQualifiedName&gt; generowane</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to look up the reference to a generated CLR type after calling the &lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt; method.</source>
          <target state="translated">Ta metoda umożliwia wyszukiwanie odwołanie do wygenerowanego typu środowiska CLR po wywołaniu &lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;metody.&lt;/xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CodeDom.CodeTypeReference&gt; contains the name of the generated type and can be used to look up the corresponding &lt;xref:System.CodeDom.CodeTypeDeclaration&gt; in the &lt;xref:System.CodeDom.CodeCompileUnit&gt;.</source>
          <target state="translated">&lt;xref:System.CodeDom.CodeTypeReference&gt;Zawiera nazwę wygenerowanego typu i może służyć do wyszukiwania z odpowiedniego &lt;xref:System.CodeDom.CodeTypeDeclaration&gt; &lt;xref:System.CodeDom.CodeCompileUnit&gt;.&lt;/xref:System.CodeDom.CodeCompileUnit&gt; &lt;/xref:System.CodeDom.CodeTypeDeclaration&gt; &lt;/xref:System.CodeDom.CodeTypeReference&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the schema type to look up.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;Określa typ schematu do wyszukiwania oceny.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> reference to the CLR type generated for the schema type with the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">typeName</ph><ept id="p2">&lt;/code&gt;</ept> specified.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> odwołania do typu CLR dla typu schematu o generowane <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">typeName</ph> <ept id="p2">&lt;/code&gt;</ept> określony.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified XML qualified element and schema element.</source>
          <target state="translated">Zwraca <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dla określonego pliku XML kwalifikowana elementu i elemencie schema.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema element is needed for data about the type that is specified at the element scope.</source>
          <target state="translated">Element schematu jest potrzebne dane dotyczące typu, który jest określony w zakresie elementu.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The main example of this is the XSD attribute <ph id="ph1">`nillable`</ph>.</source>
          <target state="translated">Najlepszym przykładem tego jest atrybutu XSD <ph id="ph1">`nillable`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>In schema, setting <ph id="ph1">`nillable`</ph> to <ph id="ph2">`true`</ph> is specified on the containing schema element whereas the concept of null is expressed in the CLR type &lt;xref:System.Nullable%601&gt;.</source>
          <target state="translated">W schemacie ustawienie <ph id="ph1">`nillable`</ph> do <ph id="ph2">`true`</ph> jest określony w elemencie zawierający schemat, pojęcie wartość null jest wyrażone w typie CLR &lt;xref:System.Nullable%601&gt;.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The element is passed in so that this importer can look up the element-level information and return the correct type reference accordingly.</source>
          <target state="translated">Element jest przekazywana, aby ten importer można odszukać informacje na poziomie elementu i odpowiednio zwraca odwołanie do nieprawidłowego typu.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>When importing WSDL, each parameter is imported separately and therefore the parameter elements need to be passed in separately.</source>
          <target state="translated">Podczas importu WSDL, każdy parametr jest importowany oddzielnie i w związku z tym należy oddzielnie przekazano elementów parametrów.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the XML qualified name of the schema type to look up.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;, Który określa nazwy kwalifikowanej XML typu schematu do wyszukiwania oceny.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies an element in an XML schema.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Określająca element w schemacie XML.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the type that was generated for the specified schema type.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> reprezentujący typ, który został wygenerowany dla typu określonego schematu.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Returns a list of <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that represents the known types generated when generating code for the specified schema type.</source>
          <target state="translated">Zwraca listę <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektów, które reprezentuje znane typy, które są generowane podczas generowania kodu dla typu określonego schematu.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>When generating CLR types for schema types, known types are also generated for all derived types that are present in the schema.</source>
          <target state="translated">Podczas generowania typów CLR dla typów schematów, znane typy są także generowane dla wszystkich typów pochodnych, które znajdują się w schemacie.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>In many cases, these known types are added using attributes to the generated code.</source>
          <target state="translated">W wielu przypadkach te znane typy są dodawane przy użyciu atrybutów w wygenerowanym kodzie.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, see the &lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt; class.</source>
          <target state="translated">(Na przykład, patrz &lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;klasy.&lt;/xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>) However, for the top-level type, there needs to be a way to return the set of known types generated.</source>
          <target state="translated">) Jednak dla tego typu najwyższego poziomu, musi istnieć sposób zwrócenia zbiór znane typy wygenerowane.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the &lt;xref:System.CodeDom.CodeTypeReference&gt; for known types that were generated for a specific schema type.</source>
          <target state="translated">Ta metoda zwraca &lt;xref:System.CodeDom.CodeTypeReference&gt;znanych typów, które zostały wygenerowane dla typu schematu.&lt;/xref:System.CodeDom.CodeTypeReference&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Data Contract Known Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>znane typy kontraktu danych<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the schema type to look up known types for.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;Reprezentujący typ schematu do odszukania for. znane typy&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id="ph2">&amp;gt;</ph> typu <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Transforms the specified set of XML schemas contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Przekształca określony zestaw schematów XML zawartych w <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> do <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schema representations to generate CLR types for.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> zawierający reprezentacje schematu do generowania typów CLR dla.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Transforms the specified set of schema types contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into CLR types generated into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Przekształca określony zbiór typów schematów zawartych w <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> na typy CLR do generowania <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schema representations.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> zawierający reprezentacje schematu.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> (of &lt;xref:System.Xml.XmlQualifiedName&gt;) that represents the set of schema types to import.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> (z &lt;xref:System.Xml.XmlQualifiedName&gt;) reprezentujący zestaw typów schematu do zaimportowania.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Transforms the specified schema element in the set of specified XML schemas into a <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and returns an &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the data contract name for the specified element.</source>
          <target state="translated">Przekształca element określony schemat w zestawie określonego schematów XML do <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> i zwraca &lt;xref:System.Xml.XmlQualifiedName&gt;reprezentujący nazwę kontraktu danych dla określonego elementu.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schemas to transform.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Zawierającego schematy do przekształcenia.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the specific schema element to transform.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Reprezentujący element określonego schematu do przekształcenia.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the specified element.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;Reprezentujący określonego elementu.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">element</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">element</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Transforms the specified XML schema type contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Przekształca określony typ schematu XML zawartych w <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> do <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schema representations.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> zawierający reprezentacje schematu.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlQualifiedName&gt; that represents a specific schema type to import.</source>
          <target state="translated">A &lt;xref:System.Xml.XmlQualifiedName&gt;reprezentujący typ określonego schematu do zaimportowania.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeName</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeName</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ImportOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains settable options for the import operation.</source>
          <target state="translated">Pobiera lub ustawia <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ImportOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> zawiera opcje można ustawić dla operacji importowania.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Runtime.Serialization.ImportOptions&gt; class to customize how the CLR types are generated during schema import.</source>
          <target state="translated">Użyj &lt;xref:System.Runtime.Serialization.ImportOptions&gt;klasę, aby dostosować jak typów CLR są generowane podczas importowania schematu.&lt;/xref:System.Runtime.Serialization.ImportOptions&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ImportOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains settable options.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ImportOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> zawiera opcje można ustawić.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>