<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59d0e692a4f187a91206d925ed26bd10132538f6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices.HandleRef.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4427df096bd8308baccf9b6e46d0cd2d7e9471ec</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffde11eda59cc7e4497da620dd922a195c60d014</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Wraps a managed object holding a handle to a resource that is passed to unmanaged code using platform invoke.</source>
          <target state="translated">Zawija wywołania zarządzanego obiektu zawierający dojścia do zasobu, który zostanie przekazany do kodu niezarządzanego, przy użyciu platformy.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Starting with the .NET Framework 2.0, the functionality of the HandleRef class has been replaced by the &lt;xref:System.Runtime.InteropServices.SafeHandle&gt; class and its derived classes, as well as by the &lt;xref:System.Runtime.InteropServices.CriticalHandle&gt; class.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; W programie .NET Framework 2.0, funkcjonalność klasy element HandleRef został zastąpiony przez &lt;xref:System.Runtime.InteropServices.SafeHandle&gt;klasy i jej klas pochodnych, jak również funkcję &lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;klasy&lt;/xref:System.Runtime.InteropServices.CriticalHandle&gt; &lt;/xref:System.Runtime.InteropServices.SafeHandle&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use platform invoke to call a managed object, and the object is not referenced elsewhere after the platform invoke call, it is possible for the garbage collector to finalize the managed object.</source>
          <target state="translated">Jeśli używasz platformy wywołania do wywołania zarządzanego obiektu i obiekt nie odwołuje się w innym miejscu po wywołaniu wywołanie platformy, istnieje możliwość, że moduł zbierający elementy bezużyteczne w celu sfinalizowania obiektu zarządzanego.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This action releases the resource and invalidates the handle, causing the platform invoke call to fail.</source>
          <target state="translated">Ta akcja zwalnia zasobu i unieważnia uchwytu powoduje platformy wywołania Niepowodzenie wywołania.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Wrapping a handle with HandleRef guarantees that the managed object is not garbage collected until the platform invoke call completes.</source>
          <target state="translated">Zawijanie dojścia z element HandleRef gwarantuje, że obiektu zarządzanego nie jest zakończeniu bezużytecznych do momentu wywołania wywołania platformy.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of platform invoke services, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Opis platformy wywołania usług, zobacz <bpt id="p1">[</bpt>wykorzystywanie niezarządzanych funkcji DLL<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HandleRef value type, like &lt;xref:System.Runtime.InteropServices.GCHandle&gt;, is a special type recognized by the interop marshaler.</source>
          <target state="translated">Tak samo, jak typ, wartości element HandleRef &lt;xref:System.Runtime.InteropServices.GCHandle&gt;, to specjalny typ rozpoznawane przez organizatora międzyoperacyjnego.&lt;/xref:System.Runtime.InteropServices.GCHandle&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A normal, nonpinned &lt;xref:System.Runtime.InteropServices.GCHandle&gt; also prevents untimely garbage collection, yet HandleRef provides better performance.</source>
          <target state="translated">Normalny, nonpinned &lt;xref:System.Runtime.InteropServices.GCHandle&gt;uniemożliwia także programowi przedwczesnemu wyrzucanie elementów bezużytecznych, ale element HandleRef zapewnia lepszą wydajność.&lt;/xref:System.Runtime.InteropServices.GCHandle&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although using HandleRef to keep an object alive for the duration of a platform invoke call is preferred, you can also use the &lt;xref:System.GC.KeepAlive%2A?displayProperty=fullName&gt; method for the same purpose.</source>
          <target state="translated">Chociaż podtrzymywania obiektu w czasie trwania platformy przy użyciu element HandleRef wywołania wywołanie jest preferowana, można również użyć &lt;xref:System.GC.KeepAlive%2A?displayProperty=fullName&gt;metody w tym samym celu.&lt;/xref:System.GC.KeepAlive%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HandleRef constructor takes two parameters: an &lt;xref:System.Object&gt; representing the wrapper, and an &lt;xref:System.IntPtr&gt; representing the unmanaged handle.</source>
          <target state="translated">Konstruktor element HandleRef przyjmuje dwa parametry: &lt;xref:System.Object&gt;reprezentujący otoki i &lt;xref:System.IntPtr&gt;reprezentujący dojścia niezarządzanego.&lt;/xref:System.IntPtr&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The interop marshaler passes only the handle to unmanaged code, and guarantees that the wrapper (passed as the first parameter to the constructor of the <ph id="ph1">`HandleRef`</ph>) remains alive for the duration of the call.</source>
          <target state="translated">Organizator międzyoperacyjnego przekazuje tylko dojście do kodu niezarządzanego i gwarantuje, że otoka (przekazany jako pierwszego parametru do konstruktora obiektu <ph id="ph1">`HandleRef`</ph>) pozostaje aktywne w czasie trwania wywołanie.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the object to wrap and a handle to the resource used by unmanaged code.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasy z obiektu zawijania i dojścia do zasobu używany przez kod niezarządzany.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A managed object that should not be finalized until the platform invoke call returns.</source>
          <target state="translated">Zwraca obiekt zarządzany, którego powinien zrealizowane, dopóki wywołania wywołania platformy.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IntPtr&gt; that indicates a handle to a resource.</source>
          <target state="translated">&lt;xref:System.IntPtr&gt;Wskazuje, że dojście do zasobu.&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets the handle to a resource.</source>
          <target state="translated">Pobiera dojścia do zasobu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The handle to a resource.</source>
          <target state="translated">Dojście do zasobu.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Do dodania.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Do dodania.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns the internal integer representation of a <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Zwraca reprezentację wewnętrzny całkowitą <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to retrieve an internal integer representation from.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu można pobrać reprezentacji wewnętrznej liczby całkowitej z.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IntPtr&gt; object that represents a <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.IntPtr&gt;Obiekt, który reprezentuje <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.HandleRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu.&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the object holding the handle to a resource.</source>
          <target state="translated">Pobiera obiekt zawierający dojście do zasobu.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The object holding the handle to a resource.</source>
          <target state="translated">Obiekt zawierający dojście do zasobu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>