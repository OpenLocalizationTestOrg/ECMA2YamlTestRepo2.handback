<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">622d983b53c274129793847d685acbdd440b7fa2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d909024656128c7971f07a0768b1053761ca513d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7dba3e780d88fd1bff1362801691f4fb4116ef3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides support for user customization of interop stubs in managed-to-COM interop scenarios.</source>
          <target state="translated">Zapewnia obsługę użytkownika dostosowywania międzyoperacyjnego klas zastępczych w scenariuszach, zarządzane przez COM interop.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute enables interop developers who have knowledge about marshaling and the inner workings of interop calls to do the following:      -   Take advantage of customized interop stubs at build time instead of run time.</source>
          <target state="translated">Ten atrybut umożliwia międzyoperacyjnego deweloperów, którzy mają wiedzą na temat organizowanie i przebiega międzyoperacyjnego wywołań, wykonaj następujące czynności:-korzystać z dostosowanego międzyoperacyjnego klas zastępczych w czasie kompilacji zamiast w czasie wykonywania.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Debug customized interop stubs.</source>
          <target state="translated">-Debug dostosowane międzyoperacyjnego klas zastępczych.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Provide marshaling capabilities within a stub that the runtime does not provide.</source>
          <target state="translated">— Podać kierowania możliwości w ramach klasy zastępczej, który nie wymaga środowiska uruchomieniowego.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Provide user-specific method dispatch capabilities.</source>
          <target state="translated">— Podać możliwości wysyłania — metoda specyficzne dla użytkownika.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You apply the attribute on a method in an interface to specify a corresponding stub method for managed-to-native COM interop.</source>
          <target state="translated">Należy zastosować atrybut dla metody interfejsu do określania odpowiedniej metody klasy zastępczej dla międzyoperacyjności z modelem COM zarządzane przez macierzystego.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this attribute is encountered during run time, the common language runtime does not dynamically generate an interop stub.</source>
          <target state="translated">Jeśli ten atrybut w czasie wykonywania, środowisko uruchomieniowe języka wspólnego nie generuje dynamicznie stub międzyoperacyjnego.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it invokes the custom stub that was created at build time.</source>
          <target state="translated">Zamiast tego wywołuje stub niestandardowych, który został utworzony podczas kompilacji.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ManagedToNativeComInteropStubAttribute attribute has the following characteristics:      -   The attribute can be used only on methods from interfaces that are marked <ph id="ph1">`[ComImport]`</ph>.</source>
          <target state="translated">Atrybut atrybucie ManagedToNativeComInteropStubAttribute ma następujące parametry:-atrybut może być używany tylko metody z interfejsów, które są oznaczone jako <ph id="ph1">`[ComImport]`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the attribute is applied to non-interface types, it is ignored by the runtime.</source>
          <target state="translated">Jeśli atrybut jest stosowany do typów innych niż interfejsu, jest ignorowany w czasie wykonywania.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The attribute can be used only once on the same method in an interface.</source>
          <target state="translated">— Atrybut może być użyte tylko raz w tej samej metody w interfejsie.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is used more than once, the compiler generates a duplicated attribute error.</source>
          <target state="translated">Jeśli jest używany więcej niż jeden raz, kompilator generuje błąd zduplikowany atrybut.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The attribute is not inheritable from a base interface.</source>
          <target state="translated">-Atrybut nie jest dziedziczone z interfejs podstawowy.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived interfaces must explicitly assign the attribute.</source>
          <target state="translated">Interfejsy pochodnej jawnie przypisać atrybutu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The assembly that contains the attributed method must also contain the customized stub.</source>
          <target state="translated">-Zestaw zawierający metody oparte na atrybutach musi także zawierać dostosowane stub.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloaded stub methods are valid.</source>
          <target state="translated">Stub przeciążonej metody są prawidłowe.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you specify only the type and the name of the stub method, the runtime will discover the corresponding stub.</source>
          <target state="translated">Mimo że można określić tylko typ i nazwę metody zastępczej, środowisko uruchomieniowe wykryje odpowiedniego stub.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does this by examining all the arguments on the interface method, and then performing full signature matching by using an explicit <ph id="ph1">`this`</ph> pointer.</source>
          <target state="translated">Dzieje się tak, sprawdzając wszystkie argumenty dla metody interfejsu i zostanie wykonana pełna podpisu dopasowania za pomocą jawnego <ph id="ph1">`this`</ph> wskaźnika.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also possible for multiple methods in an interface to share the same stub method; however, you should be careful when you use shared stubs.</source>
          <target state="translated">Możliwe jest również wiele metod w interfejsie na współużytkowanie tej samej metody klasy zastępczej; jednak należy zachować ostrożność podczas używania udostępnionego klas zastępczych.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Stub methods must be static.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Szkieletu metody muszą być statyczne.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You could inform the runtime to use a customized interop stub at build time instead of run time with the following C# code:      <ph id="ph1">```   [ComImport]   interface IMyInterface   {       [ManagedToNativeComInteropStubAttribute(typeof(TestStubClass),                 "ForwardTestStub")]       void GetString (string arg);   }   ```</ph>       You could then use the following code to declare the corresponding stub method:      <ph id="ph2">```   class TestStubClass   {       internal static void ForwardTestStub(IMyInterface thisObject,                string arg) {…}   }   ```</ph></source>
          <target state="translated">Może poinformować środowiska uruchomieniowego do użycia podczas kompilacji zamiast w czasie wykonywania w następującym kodem C# dostosowane stub międzyoperacyjnego: <ph id="ph1">```   [ComImport]   interface IMyInterface   {       [ManagedToNativeComInteropStubAttribute(typeof(TestStubClass),                 "ForwardTestStub")]       void GetString (string arg);   }   ```</ph> można następnie użyć poniższego kodu, aby zadeklarować odpowiedniej metody klasy zastępczej:<ph id="ph2">```   class TestStubClass   {       internal static void ForwardTestStub(IMyInterface thisObject,                string arg) {…}   }   ```</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified class type and method name.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasy o nazwie typu i metody określonej klasy.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The class that contains the required stub method.</source>
          <target state="translated">Klasa, która zawiera metody zastępczej wymagane.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The name of the stub method.</source>
          <target state="translated">Nazwa metody zastępczej.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;methodName&lt;/code&gt;</ph> cannot be found.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;methodName&lt;/code&gt;</ph>Nie można odnaleźć.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-or-       The method is not static or non-generic.</source>
          <target state="translated">- lub - metoda nie jest statyczny lub inny niż ogólny.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-or-       The method's parameter list does not match the expected parameter list for the stub.</source>
          <target state="translated">- lub - liście parametrów metody nie jest zgodna z listą oczekiwanego parametru dla elementu zastępczego.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The interface that contains the managed interop method has no access to the stub method, because the stub method has private or protected accessibility, or because of a security issue.</source>
          <target state="translated">Interfejs, który zawiera zarządzanego metodę międzyoperacyjnego nie ma dostępu do metoda zastępcza, ponieważ metoda zastępcza ma prywatne lub chronione ułatwień dostępu lub ze względu na problem z zabezpieczeniami.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the class that contains the required stub method.</source>
          <target state="translated">Pobiera klasę, która zawiera metody zastępczej wymagane.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The class that contains the customized interop stub.</source>
          <target state="translated">Klasa, która zawiera dostosowany stub międzyoperacyjnego.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the name of the stub method.</source>
          <target state="translated">Pobiera nazwę metody zastępczej.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The name of a customized interop stub.</source>
          <target state="translated">Nazwa dostosowanego stub międzyoperacyjnego.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>