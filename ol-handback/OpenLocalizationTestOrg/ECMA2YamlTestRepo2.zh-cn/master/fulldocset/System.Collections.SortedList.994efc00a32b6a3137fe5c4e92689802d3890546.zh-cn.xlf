<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eea5d39fa138db1db722d30397b62477911a2643</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.SortedList.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1622ab7a3e142d470d010b3dd95358ceb457111</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77929b6051f98313b71b605920fefbe82eaba97b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</source>
          <target state="translated">表示按键排序并可按照键和索引访问的键/值对的集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>For the generic version of this collection, see &lt;xref:System.Collections.Generic.SortedList%602?displayProperty=fullName&gt;.</source>
          <target state="translated">此集合的泛型版本，请参阅&lt;xref:System.Collections.Generic.SortedList%602?displayProperty=fullName&gt;。&lt;/xref:System.Collections.Generic.SortedList%602?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A SortedList element can be accessed by its key, like an element in any &lt;xref:System.Collections.IDictionary&gt; implementation, or by its index, like an element in any &lt;xref:System.Collections.IList&gt; implementation.</source>
          <target state="translated">SortedList 元素可以访问由键，像在任何元素&lt;xref:System.Collections.IDictionary&gt;实现，或通过其索引，像在任何元素&lt;xref:System.Collections.IList&gt;实现。&lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A SortedList object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</source>
          <target state="translated">SortedList 对象在内部维护两个数组存储的列表; 元素键和关联的值的另一个数组，它是一个数组。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair that can be accessed as a &lt;xref:System.Collections.DictionaryEntry&gt; object.</source>
          <target state="translated">每个元素都是可作为访问键/值对&lt;xref:System.Collections.DictionaryEntry&gt;对象。&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">密钥不能为<ph id="ph1">`null`</ph>，但可以是一个值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The capacity of a SortedList object is the number of elements the SortedList can hold.</source>
          <target state="translated">SortedList 对象的容量是 SortedList 能够容纳的元素数。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>As elements are added to a SortedList, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">当元素添加到 SortedList 时，自动增加容量通过重新分配所需的方式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.SortedList.TrimToSize%2A&gt; or by setting the &lt;xref:System.Collections.SortedList.Capacity%2A&gt; property explicitly.</source>
          <target state="translated">可以通过调用减少容量&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;或通过设置&lt;xref:System.Collections.SortedList.Capacity%2A&gt;属性显式。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt; &lt;/xref:System.Collections.SortedList.TrimToSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For very large SortedList objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph1">`enabled`</ph> attribute of the  configuration element to <ph id="ph2">`true`</ph> in the run-time environment.</source>
          <target state="translated">对于非常大 SortedList 对象，你可以通过设置增加到 20 亿元素在 64 位系统上的最大容量<ph id="ph1">`enabled`</ph>到的配置元素的属性<ph id="ph2">`true`</ph>在运行时环境中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The elements of a SortedList object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the SortedList is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">SortedList 对象的元素进行排序的键是根据特定&lt;xref:System.Collections.IComparer&gt;指定当创建 SortedList 或根据实现&lt;xref:System.IComparable&gt;键本身提供的实现。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In either case, a SortedList does not allow duplicate keys.</source>
          <target state="translated">在任一情况下，SortedList 不允许重复键。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into SortedList in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">添加的元素，它正确的排序顺序中，插入到 SortedList 而索引会相应地调整。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the SortedList object.</source>
          <target state="translated">因此，添加或从 SortedList 对象中删除元素时，可能会更改特定键/值对的索引。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Operations on a SortedList object tend to be slower than operations on a &lt;xref:System.Collections.Hashtable&gt; object because of the sorting.</source>
          <target state="translated">SortedList 对象上的操作往往速度要慢于对操作&lt;xref:System.Collections.Hashtable&gt;由于排序的对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, the SortedList offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</source>
          <target state="translated">但是，SortedList 提供更大的灵活性，通过允许对值的访问，可以通过在相关的键或索引。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">可以使用整数索引访问此集合中的元素。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">在此集合中的索引是从零开始。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 返回集合中的元素的类型的对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Since each element of the SortedList object is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">由于 SortedList 对象的每个元素是键/值对，元素类型不是键的类型或值的类型。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Rather, the element type is &lt;xref:System.Collections.DictionaryEntry&gt;.</source>
          <target state="translated">相反，元素类型是&lt;xref:System.Collections.DictionaryEntry&gt;.&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic SortedList Example#2<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.sor_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>Classic SortedList Example#2<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.sor_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic SortedList Example#2<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.sor_1.vb)</ept><ept id="p5">]</ept>       The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated">例如︰ <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>经典 SortedList 第二个示例<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.sor_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>经典 SortedList 第二个示例<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.sor_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>经典 SortedList 第二个示例<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.sor_1.vb)</ept><ept id="p5">]</ept> <ph id="ph1">`foreach`</ph>语句是枚举器，允许从，不写入集合只能读取允许周围的包装器。    </target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the default initial capacity, and is sorted according to the &lt;xref:System.IComparable&gt; interface implemented by each key added to the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类为空，具有默认初始容量，并且根据排序&lt;xref:System.IComparable&gt;由每个密钥添加到实现接口<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">每个键必须实现&lt;xref:System.IComparable&gt;接口，才能与中的其他所有键的比较&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the &lt;xref:System.IComparable&gt; implementation of each key added to the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">对元素进行排序&lt;xref:System.IComparable&gt;的每个密钥添加到&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;实现&lt;/xref:System.IComparable&gt;根据</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;对象是元素的数目，&lt;xref:System.Collections.SortedList&gt;可以容纳。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.SortedList&gt;，自动增加容量通过重新分配在内部数组所需的方式。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the default initial capacity, and is sorted according to the specified &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类为空，具有默认初始容量，并且排序按照指定&lt;xref:System.Collections.IComparer&gt;接口。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">对元素进行排序按照指定&lt;xref:System.Collections.IComparer&gt;实现。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the &lt;xref:System.IComparable&gt; implementation of each key is used; therefore, each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>参数是<ph id="ph2">`null`</ph>、&lt;xref:System.IComparable&gt;使用的每个键的实现; 因此，必须实现每个键&lt;xref:System.IComparable&gt;接口，才能与中的其他所有键的比较&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;对象是元素的数目，&lt;xref:System.Collections.SortedList&gt;可以容纳。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.SortedList&gt;，自动增加容量通过重新分配在内部数组所需的方式。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing keys.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;实现对键进行比较时使用。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the &lt;xref:System.IComparable&gt; implementation of each key.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用&lt;xref:System.IComparable&gt;实现的每个键。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the &lt;xref:System.IComparable&gt; interface implemented by each key.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，该类包含从指定的字典中，复制的元素已复制的元素数相同的初始容量，并且根据排序&lt;xref:System.IComparable&gt;接口实现的每个键。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">每个键必须实现&lt;xref:System.IComparable&gt;接口，才能与中的其他所有键的比较&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the &lt;xref:System.IComparable&gt; implementation of each key added to the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">对元素进行排序&lt;xref:System.IComparable&gt;的每个密钥添加到&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;实现&lt;/xref:System.IComparable&gt;根据</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Hashtable&gt; object is an example of an &lt;xref:System.Collections.IDictionary&gt; implementation that can be passed to this constructor.</source>
          <target state="translated">A&lt;xref:System.Collections.Hashtable&gt;对象是一种&lt;xref:System.Collections.IDictionary&gt;可以传递给此构造函数的实现。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Collections.SortedList&gt; object contains a copy of the keys and values stored in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">新&lt;xref:System.Collections.SortedList&gt;对象包含的键和值存储在&lt;xref:System.Collections.Hashtable&gt;。&lt;/xref:System.Collections.Hashtable&gt;一份&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;对象是元素的数目，&lt;xref:System.Collections.SortedList&gt;可以容纳。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.SortedList&gt;，自动增加容量通过重新分配在内部数组所需的方式。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`d`</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; implementation to copy to a new <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;实现，以将复制到新<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>One or more elements in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> do not implement the &lt;xref:System.IComparable&gt; interface.</source>
          <target state="translated">中的一个或多个元素<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">d</ph> <ept id="p1">&lt;/code&gt;</ept>未实现&lt;xref:System.IComparable&gt;接口。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and is sorted according to the &lt;xref:System.IComparable&gt; interface implemented by each key added to the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类为空且具有指定的初始容量，并且根据排序&lt;xref:System.IComparable&gt;由每个密钥添加到实现接口<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">每个键必须实现&lt;xref:System.IComparable&gt;接口，才能与中的其他所有键的比较&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the &lt;xref:System.IComparable&gt; implementation of each key added to the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">对元素进行排序&lt;xref:System.IComparable&gt;的每个密钥添加到&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;实现&lt;/xref:System.IComparable&gt;根据</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;对象是元素的数目，&lt;xref:System.Collections.SortedList&gt;可以容纳。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.SortedList&gt;，自动增加容量通过重新分配在内部数组所需的方式。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialCapacity`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`initialCapacity`</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can contain.</source>
          <target state="translated">初始元素数的<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象可以包含。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;initialCapacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;initialCapacity&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to create a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">initialCapacity</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">不是内存不足，无法创建<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的对象<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">initialCapacity</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and is sorted according to the specified &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类为空，具有指定的初始容量，并且排序按照指定&lt;xref:System.Collections.IComparer&gt;接口。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">对元素进行排序按照指定&lt;xref:System.Collections.IComparer&gt;实现。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the &lt;xref:System.IComparable&gt; implementation of each key is used; therefore, each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>参数是<ph id="ph2">`null`</ph>、&lt;xref:System.IComparable&gt;使用的每个键的实现; 因此，必须实现每个键&lt;xref:System.IComparable&gt;接口，才能与中的其他所有键的比较&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;对象是元素的数目，&lt;xref:System.Collections.SortedList&gt;可以容纳。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.SortedList&gt;，自动增加容量通过重新分配在内部数组所需的方式。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing keys.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;实现对键进行比较时使用。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the &lt;xref:System.IComparable&gt; implementation of each key.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用&lt;xref:System.IComparable&gt;实现的每个键。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can contain.</source>
          <target state="translated">初始元素数的<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象可以包含。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to create a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">capacity</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">不是内存不足，无法创建<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的对象<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">capacity</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，该类包含从指定的字典中，复制的元素已复制的元素数相同的初始容量，并且排序按照指定&lt;xref:System.Collections.IComparer&gt;接口。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">对元素进行排序按照指定&lt;xref:System.Collections.IComparer&gt;实现。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the &lt;xref:System.IComparable&gt; implementation of each key is used; therefore, each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>参数是<ph id="ph2">`null`</ph>、&lt;xref:System.IComparable&gt;使用的每个键的实现; 因此，必须实现每个键&lt;xref:System.IComparable&gt;接口，才能与中的其他所有键的比较&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Hashtable&gt; object is an example of an &lt;xref:System.Collections.IDictionary&gt; implementation that can be passed to this constructor.</source>
          <target state="translated">A&lt;xref:System.Collections.Hashtable&gt;对象是一种&lt;xref:System.Collections.IDictionary&gt;可以传递给此构造函数的实现。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Collections.SortedList&gt; object contains a copy of the keys and values stored in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">新&lt;xref:System.Collections.SortedList&gt;对象包含的键和值存储在&lt;xref:System.Collections.Hashtable&gt;。&lt;/xref:System.Collections.Hashtable&gt;一份&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;对象是元素的数目，&lt;xref:System.Collections.SortedList&gt;可以容纳。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.SortedList&gt;，自动增加容量通过重新分配在内部数组所需的方式。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`d`</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; implementation to copy to a new <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;实现，以将复制到新<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing keys.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;实现对键进行比较时使用。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the &lt;xref:System.IComparable&gt; implementation of each key.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用&lt;xref:System.IComparable&gt;实现的每个键。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and one or more elements in <ph id="ph2">&lt;code&gt;d&lt;/code&gt;</ph> do not implement the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，和中的一个或多个元素<ph id="ph2">&lt;code&gt;d&lt;/code&gt;</ph>未实现<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Adds an element with the specified key and value to a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">添加一个带有指定的键和值的元素<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The insertion point is determined based on the comparer selected, either explicitly or by default, when the &lt;xref:System.Collections.SortedList&gt; object was created.</source>
          <target state="translated">插入点根据显式或默认情况下，选择的比较器确定当&lt;xref:System.Collections.SortedList&gt;创建对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.SortedList.Count%2A&gt; already equals &lt;xref:System.Collections.SortedList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.SortedList&gt; object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">如果&lt;xref:System.Collections.SortedList.Count%2A&gt;已经等于&lt;xref:System.Collections.SortedList.Capacity%2A&gt;、 容量的&lt;xref:System.Collections.SortedList&gt;对象提高自动重新分配内部数组，并添加新的元素之前，现有的元素被复制到新数组。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList.Capacity%2A&gt; &lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;xref:System.Collections.SortedList.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.SortedList&gt; object (for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">你还可以使用&lt;xref:System.Collections.SortedList.Item%2A&gt;中不存在要添加新元素的键的值设置属性&lt;xref:System.Collections.SortedList&gt;对象 (例如， <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>)。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.SortedList&gt;, setting the &lt;xref:System.Collections.SortedList.Item%2A&gt; property overwrites the old value.</source>
          <target state="translated">但是，如果指定的键已存在于&lt;xref:System.Collections.SortedList&gt;，则设置&lt;xref:System.Collections.SortedList.Item%2A&gt;属性将会覆盖旧值。&lt;/xref:System.Collections.SortedList.Item%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In contrast, the Add method does not modify existing elements.</source>
          <target state="translated">与此相反，Add 方法不会修改现有元素。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">元素&lt;xref:System.Collections.SortedList&gt;对象进行排序的键是根据特定&lt;xref:System.Collections.IComparer&gt;实现时指定&lt;xref:System.Collections.SortedList&gt;创建或按照&lt;xref:System.IComparable&gt;键本身提供的实现。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">密钥不能为<ph id="ph1">`null`</ph>，但可以是一个值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作未排序的数据，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>It is an O(log <ph id="ph1">`n`</ph>) operation if the new element is added at the end of the list.</source>
          <target state="translated">它是 O (日志<ph id="ph1">`n`</ph>) 如果在列表的末尾添加了新元素的操作。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">如果插入导致大小调整，运算复杂度为 O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The key of the element to add.</source>
          <target state="translated">要添加的元素的键。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The value of the element to add.</source>
          <target state="translated">要添加的元素的值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An element with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> already exists in the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">具有指定的元素<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>中已存在<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is set to use the &lt;xref:System.IComparable&gt; interface, and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p2">&lt;/code&gt;</ept> does not implement the &lt;xref:System.IComparable&gt; interface.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>设置为使用&lt;xref:System.IComparable&gt;接口，和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p2">&lt;/code&gt;</ept>不实现&lt;xref:System.IComparable&gt;接口。&lt;/xref:System.IComparable&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to add the element to the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">不是内存不足，无法将元素添加到<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比较器引发异常。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets the capacity of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取或设置的容量<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Capacity is the number of elements that the &lt;xref:System.Collections.SortedList&gt; object can store.</source>
          <target state="translated">容量是元素的数目，&lt;xref:System.Collections.SortedList&gt;对象可以存储。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Count%2A&gt; is the number of elements that are actually in the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Count%2A&gt;是其实是&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;的元素的数目&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Capacity is always greater than or equal to &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">容量始终是大于或等于&lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.SortedList.Count%2A&gt; exceeds Capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果&lt;xref:System.Collections.SortedList.Count%2A&gt;添加元素时超过容量，通过在复制旧元素和添加新的元素之前重新分配在内部数组自动增加容量。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.SortedList.TrimToSize%2A&gt; or by setting the Capacity property explicitly.</source>
          <target state="translated">可以通过调用减少容量&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;或通过显式设置的容量属性。&lt;/xref:System.Collections.SortedList.TrimToSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When the value of Capacity is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">当显式设置的容量的值时，在内部数组也会重新分配以适应指定的容量。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">检索此属性的值的运算 o （1）;将属性设置为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>新容量。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The number of elements that the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can contain.</source>
          <target state="translated">元素的数目， <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象可以包含。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The value assigned is less than the current number of elements in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">分配的值小于元素中的当前数目<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">没有足够的内存可用系统上。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Removes all elements from a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">移除所有元素从<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Count%2A&gt; is set to zero and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Count%2A&gt;设置为零并且对其他对象的集合的元素引用也被释放。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Capacity%2A&gt; remains unchanged.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;保持不变。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To reset the capacity of the &lt;xref:System.Collections.SortedList&gt; object, call &lt;xref:System.Collections.SortedList.TrimToSize%2A&gt; or set the &lt;xref:System.Collections.SortedList.Capacity%2A&gt; property directly.</source>
          <target state="translated">若要重置的容量&lt;xref:System.Collections.SortedList&gt;对象，请调用&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;或设置&lt;xref:System.Collections.SortedList.Capacity%2A&gt;属性直接。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt; &lt;/xref:System.Collections.SortedList.TrimToSize%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.SortedList&gt; sets the capacity of the &lt;xref:System.Collections.SortedList&gt; to the default capacity.</source>
          <target state="translated">截去空&lt;xref:System.Collections.SortedList&gt;的容量设置&lt;xref:System.Collections.SortedList&gt;到默认的容量。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象是只读的。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">创建的浅表复制<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</source>
          <target state="translated">集合的浅表副本仅集合的元素复制，无论它们是引用类型还是值类型，但不会复制引用所引用的对象。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">新集合中的引用都指向原始集合中的引用指向同一对象。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">与此相反，集合的深层副本复制这些元素，以及由这些元素直接或间接引用的所有内容。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">浅表复制<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Determines whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object contains a specific key.</source>
          <target state="translated">确定是否<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象包含特定键。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">元素&lt;xref:System.Collections.SortedList&gt;对象进行排序的键是根据特定&lt;xref:System.Collections.IComparer&gt;实现时指定&lt;xref:System.Collections.SortedList&gt;创建或按照&lt;xref:System.IComparable&gt;键本身提供的实现。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Contains implements &lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">包含实现&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;.&lt;/xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>It behaves exactly as &lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;.</source>
          <target state="translated">它的行为完全相同&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;.&lt;/xref:System.Collections.SortedList.ContainsKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法使用二进制搜索算法;因此，此方法为 O (日志<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要查找中的键<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象包含具有指定的元素<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p3">&lt;/code&gt;</ept>; 否则为<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比较器引发异常。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Determines whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object contains a specific key.</source>
          <target state="translated">确定是否<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象包含特定键。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">元素&lt;xref:System.Collections.SortedList&gt;对象进行排序的键是根据特定&lt;xref:System.Collections.IComparer&gt;实现时指定&lt;xref:System.Collections.SortedList&gt;创建或按照&lt;xref:System.IComparable&gt;键本身提供的实现。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This method behaves exactly as the &lt;xref:System.Collections.SortedList.Contains%2A&gt; method.</source>
          <target state="translated">此方法的行为完全相同&lt;xref:System.Collections.SortedList.Contains%2A&gt;方法。&lt;/xref:System.Collections.SortedList.Contains%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法使用二进制搜索算法;因此，此方法为 O (日志<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要查找中的键<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象包含具有指定的元素<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p3">&lt;/code&gt;</ept>; 否则为<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比较器引发异常。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Determines whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object contains a specific value.</source>
          <target state="translated">确定是否<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象包含特定值。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The values of the elements of the &lt;xref:System.Collections.SortedList&gt; object are compared to the specified value using the &lt;xref:System.Object.Equals%2A&gt; method.</source>
          <target state="translated">元素的值&lt;xref:System.Collections.SortedList&gt;相比对象指定的值使用&lt;xref:System.Object.Equals%2A&gt;方法。&lt;/xref:System.Object.Equals%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, the average execution time is proportional to &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法执行的线性搜索;因此，平均执行时间正比&lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">也就是说，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The value to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要查找中的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象包含具有指定的元素<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p3">&lt;/code&gt;</ept>; 否则为<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Copies <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> elements to a one-dimensional &lt;xref:System.Array&gt; object, starting at the specified index in the array.</source>
          <target state="translated">副本<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>元素的一维&lt;xref:System.Array&gt;对象，数组中的指定索引处开始。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The key/value pairs are copied to the &lt;xref:System.Array&gt; object in the same order in which the enumerator iterates through the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">键/值对复制到&lt;xref:System.Array&gt;枚举数循环访问的相同顺序中对象&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>To copy only the keys in the &lt;xref:System.Collections.SortedList&gt;, use <ph id="ph1">`SortedList.Keys.CopyTo`</ph>.</source>
          <target state="translated">若要复制仅在密钥&lt;xref:System.Collections.SortedList&gt;，使用<ph id="ph1">`SortedList.Keys.CopyTo`</ph>。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To copy only the values in the &lt;xref:System.Collections.SortedList&gt;, use <ph id="ph1">`SortedList.Values.CopyTo`</ph>.</source>
          <target state="translated">若要仅中的值复制&lt;xref:System.Collections.SortedList&gt;，使用<ph id="ph1">`SortedList.Values.CopyTo`</ph>。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; object that is the destination of the &lt;xref:System.Collections.DictionaryEntry&gt; objects copied from <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一维&lt;xref:System.Array&gt;对象，它的目标&lt;xref:System.Collections.DictionaryEntry&gt;从复制的对象<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.DictionaryEntry&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;必须具有从零开始的索引。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">中的从零开始索引<ph id="ph1">`array`</ph>复制开始处。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>是多维的。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is greater than the available space from <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-源中的元素的数目<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象是否大于从的可用空间<ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>到目标的末尾<ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">源类型<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>无法自动转换为目标的类型<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Gets the number of elements contained in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取包含中的元素数<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair that can be accessed as a &lt;xref:System.Collections.DictionaryEntry&gt; object.</source>
          <target state="translated">每个元素都是可作为访问键/值对&lt;xref:System.Collections.DictionaryEntry&gt;对象。&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Capacity%2A&gt; is the number of elements that the &lt;xref:System.Collections.SortedList&gt; object can store.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;是的元素数的&lt;xref:System.Collections.SortedList&gt;对象可以存储。&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Count is the number of elements that are actually in the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">计数是其实是&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;的元素的数目</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Capacity%2A&gt; is always greater than or equal to Count.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;始终是大于或等于计数。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If Count exceeds &lt;xref:System.Collections.SortedList.Capacity%2A&gt; while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果计数超过&lt;xref:System.Collections.SortedList.Capacity%2A&gt;时添加元素，则自动增大容量通过重新在内部数组分配在复制旧元素和添加新的元素之前。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">中包含的元素数<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets the value at the specified index of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取指定索引处的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到&lt;xref:System.Collections.SortedList&gt;中正确的排序顺序和索引进行相应调整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The zero-based index of the value to get.</source>
          <target state="translated">要获取的值的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The value at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定索引处的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>超出的有效索引范围<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that iterates through a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">返回&lt;xref:System.Collections.IDictionaryEnumerator&gt;循环访问的对象<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建议，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;此外会回此位置的枚举数。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">在此位置上，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是不确定的。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，你必须调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;的第一个元素的集合，然后再读取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;的值枚举器向前移动&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回相同的对象之前&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;到下一个元素。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;还返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">如果最后一次调用到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是不确定的。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;可以再次，集合的第一个元素调用&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;后, 跟&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果对集合进行更改，如添加、 修改或删除元素，则枚举数将失效且不可恢复，而且其行为是不确定。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合; 独占访问权因此，枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以锁定在整个枚举期间的集合。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要允许访问集合以进行读取和写入的多个线程，则必须实现自己的同步。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionaryEnumerator&gt; object for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionaryEnumerator&gt;对象<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Gets the key at the specified index of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取指定索引处的密钥， <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到&lt;xref:System.Collections.SortedList&gt;中正确的排序顺序和索引进行相应调整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The zero-based index of the key to get.</source>
          <target state="translated">要获取的键的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The key at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定索引处的键<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>超出的有效索引范围<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Gets the keys in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取中的键<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Collections.IList&gt; object is a read-only view of the keys of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">返回&lt;xref:System.Collections.IList&gt;对象是只读的视图的键的&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">对基础&lt;xref:System.Collections.SortedList&gt;&lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;中将立即反映&lt;/xref:System.Collections.SortedList&gt;所做的修改</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The elements of the returned &lt;xref:System.Collections.IList&gt; are sorted in the same order as the keys of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">返回&lt;xref:System.Collections.IList&gt;作为的&lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;键相同的顺序排序&lt;/xref:System.Collections.IList&gt;的元素</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>This method is similar to the &lt;xref:System.Collections.SortedList.Keys%2A&gt; property, but returns an &lt;xref:System.Collections.IList&gt; object instead of an &lt;xref:System.Collections.ICollection&gt; object.</source>
          <target state="translated">此方法类似于是&lt;xref:System.Collections.SortedList.Keys%2A&gt;属性，但返回&lt;xref:System.Collections.IList&gt;对象而不是&lt;xref:System.Collections.ICollection&gt;对象。&lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.SortedList.Keys%2A&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; object containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;对象，其中包含中的键<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Gets the values in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取中的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Collections.IList&gt; object is a read-only view of the values of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">返回&lt;xref:System.Collections.IList&gt;对象是只读的值的视图&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">对基础&lt;xref:System.Collections.SortedList&gt;&lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;中将立即反映&lt;/xref:System.Collections.SortedList&gt;所做的修改</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The elements of the returned &lt;xref:System.Collections.IList&gt; are sorted in the same order as the values of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">返回&lt;xref:System.Collections.IList&gt;按用作&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;的值相同的顺序进行排序&lt;/xref:System.Collections.IList&gt;的元素</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>This method is similar to the &lt;xref:System.Collections.SortedList.Values%2A&gt; property, but returns an &lt;xref:System.Collections.IList&gt; object instead of an &lt;xref:System.Collections.ICollection&gt; object.</source>
          <target state="translated">此方法类似于是&lt;xref:System.Collections.SortedList.Values%2A&gt;属性，但返回&lt;xref:System.Collections.IList&gt;对象而不是&lt;xref:System.Collections.ICollection&gt;对象。&lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.SortedList.Values%2A&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; object containing the values in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;包含中的值的对象<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Returns the zero-based index of the specified key in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">返回在指定的键的从零开始索引<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created, or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">元素&lt;xref:System.Collections.SortedList&gt;对象进行排序的键是根据特定&lt;xref:System.Collections.IComparer&gt;实现时指定&lt;xref:System.Collections.SortedList&gt;创建，或按照&lt;xref:System.IComparable&gt;键本身提供的实现。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到&lt;xref:System.Collections.SortedList&gt;中正确的排序顺序和索引进行相应调整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或删除从&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;元素</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法使用二进制搜索算法;因此，此方法为 O (日志<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要查找中的键<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The zero-based index of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object; otherwise, -1.</source>
          <target state="translated">从零开始的索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>参数，如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">key</ph> <ept id="p2">&lt;/code&gt;</ept>中找到<bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>对象; 否则为-1。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比较器引发异常。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Returns the zero-based index of the first occurrence of the specified value in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">返回在指定的值的第一个匹配项的从零开始索引<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到&lt;xref:System.Collections.SortedList&gt;中正确的排序顺序和索引进行相应调整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The values of the elements of the &lt;xref:System.Collections.SortedList&gt; are compared to the specified value using the &lt;xref:System.Object.Equals%2A&gt; method.</source>
          <target state="translated">元素的值&lt;xref:System.Collections.SortedList&gt;相比于指定的值使用&lt;xref:System.Object.Equals%2A&gt;方法。&lt;/xref:System.Object.Equals%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>This method uses a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法使用的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The value to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要查找中的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object; otherwise, -1.</source>
          <target state="translated">第一个匹配项的从零开始索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>参数，如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p2">&lt;/code&gt;</ept>中找到<bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>对象; 否则为-1。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象具有固定的大小。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合不允许添加或移除元素后集合创建后，但允许修改现有元素。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是只是一个集合的包装器防止添加和移除元素;因此，如果对基础集合，包括添加或移除元素，进行更改的固定大小的集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object has a fixed size; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象具有固定大小; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象是只读的。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">集合是只读的不允许添加、 移除或修改元素的集合在创建后。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">集合是只读的是只是一个集合与防止集合; 进行修改的包装因此，如果对基础集合进行更改，只读集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象是只读的; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is synchronized (thread safe).</source>
          <target state="translated">获取一个值，该值指示是否访问<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象已同步 （线程安全）。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of a &lt;xref:System.Collections.SortedList&gt; object, all operations must be done through the wrapper returned by the &lt;xref:System.Collections.SortedList.Synchronized%2A&gt; method.</source>
          <target state="translated">若要确保的线程安全性&lt;xref:System.Collections.SortedList&gt;对象，所有操作必须通过返回的包装器来都完成&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.SortedList.Synchronized%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果访问<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象已同步 （线程安全）; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Gets and sets the value associated with a specific key in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取和设置与中的特定键关联的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>You can use the Item property to access a specific element in a collection by specifying the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">你可以使用 Item 属性访问集合中的特定元素通过指定以下语法︰ <ph id="ph1">`myCollection[key]`</ph>。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>You can also use this property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.SortedList&gt; object (for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue)`</ph>.</source>
          <target state="translated">你还可以使用此属性来添加新元素中不存在的键的值设置&lt;xref:System.Collections.SortedList&gt;对象 (例如， <ph id="ph1">`myCollection["myNonexistentKey"] = myValue)`</ph>。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.SortedList&gt;, setting the Item property overwrites the old value.</source>
          <target state="translated">但是，如果指定的键已存在于&lt;xref:System.Collections.SortedList&gt;，设置项目属性将覆盖旧值。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>In contrast, the &lt;xref:System.Collections.SortedList.Add%2A&gt; method does not modify existing elements.</source>
          <target state="translated">与此相反，&lt;xref:System.Collections.SortedList.Add%2A&gt;方法不会修改现有元素。&lt;/xref:System.Collections.SortedList.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">密钥不能为<ph id="ph1">`null`</ph>，但可以是一个值。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the &lt;xref:System.Collections.SortedList.Contains%2A&gt; method or the &lt;xref:System.Collections.SortedList.ContainsKey%2A&gt; method to determine if the key exists in the list.</source>
          <target state="translated">来区分<ph id="ph1">`null`</ph>返回因为找不到指定的键和<ph id="ph2">`null`</ph>返回指定键的值是因为<ph id="ph3">`null`</ph>，使用&lt;xref:System.Collections.SortedList.Contains%2A&gt;方法或&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;方法来确定在列表中是否存在的项。&lt;/xref:System.Collections.SortedList.ContainsKey%2A&gt; &lt;/xref:System.Collections.SortedList.Contains%2A&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">元素&lt;xref:System.Collections.SortedList&gt;按键排序是根据特定&lt;xref:System.Collections.IComparer&gt;实现时指定&lt;xref:System.Collections.SortedList&gt;创建或按照&lt;xref:System.IComparable&gt;键本身提供的实现。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the &lt;xref:System.Collections.SortedList.Keys%2A&gt;property.</source>
          <target state="translated">C# 语言使用关键字进行定义而不是实现索引器&lt;xref:System.Collections.SortedList.Keys%2A&gt;属性。&lt;/xref:System.Collections.SortedList.Keys%2A&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Visual Basic implements Item as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 实现为默认属性，它提供相同的索引功能的项。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">检索此属性的值是 O (日志<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Setting the property is an O(log <ph id="ph1">`n`</ph>) operation if the key is already in the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">将属性设置为 O (日志<ph id="ph1">`n`</ph>) 操作，如果该密钥已处于&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>If the key is not in the list, setting the property is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, or O(log <ph id="ph2">`n`</ph>) if the new element is added at the end of the list.</source>
          <target state="translated">如果该键不在列表中，将属性设置为 O (<ph id="ph1">`n`</ph>) 未排序的数据或 O 操作 (日志<ph id="ph2">`n`</ph>) 如果在列表的末尾添加了新元素。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">如果插入导致大小调整，运算复杂度为 O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The key associated with the value to get or set.</source>
          <target state="translated">要获取或设置的值与关联的密钥。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The value associated with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter in the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">与关联的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>中的参数<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象，如果<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">key</ph> <ept id="p3">&lt;/code&gt;</ept>找到; 否则为<bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The property is set and the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated">将属性设置和<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象是只读的。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>-or-       The property is set, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the collection, and the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或-设置该属性， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>不存在于集合中，与<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to add the element to the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">不是内存不足，无法将元素添加到<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比较器引发异常。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Gets the keys in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取中的键<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; object is a read-only view of the keys of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;对象是只读的视图的键的&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">对基础&lt;xref:System.Collections.SortedList&gt;&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;中将立即反映&lt;/xref:System.Collections.SortedList&gt;所做的修改</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ICollection&gt; are sorted in the same order as the keys of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;按&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;的键相同的顺序进行排序&lt;/xref:System.Collections.ICollection&gt;的元素</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>This property is similar to the &lt;xref:System.Collections.SortedList.GetKeyList%2A&gt; method, but returns an &lt;xref:System.Collections.ICollection&gt; object instead of an &lt;xref:System.Collections.IList&gt; object.</source>
          <target state="translated">此属性是类似于&lt;xref:System.Collections.SortedList.GetKeyList%2A&gt;方法，但返回&lt;xref:System.Collections.ICollection&gt;对象而不是&lt;xref:System.Collections.IList&gt;对象。&lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.SortedList.GetKeyList%2A&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;对象，其中包含中的键<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Removes the element with the specified key from a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">移除带有指定键的元素<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.SortedList&gt; object does not contain an element with the specified key, the &lt;xref:System.Collections.SortedList&gt; remains unchanged.</source>
          <target state="translated">如果&lt;xref:System.Collections.SortedList&gt;对象具有指定键，不包含的元素&lt;xref:System.Collections.SortedList&gt;保持不变。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>No exception is thrown.</source>
          <target state="translated">不引发异常。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素，如列表，集合中移除的元素下面的元素的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶，如哈希表的集合。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除的元素的键。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象是只读的。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified index of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">移除的指定索引处的元素<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到&lt;xref:System.Collections.SortedList&gt;中正确的排序顺序和索引进行相应调整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素，如列表，集合中移除的元素下面的元素的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶，如哈希表的集合。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">要移除的元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>超出的有效索引范围<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Replaces the value at a specific index in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">替换中的特定索引处的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到&lt;xref:System.Collections.SortedList&gt;中正确的排序顺序和索引进行相应调整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The zero-based index at which to save <ph id="ph1">`value`</ph>.</source>
          <target state="translated">从零开始的索引位置用于保存<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to save into the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;要保存到<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>超出的有效索引范围<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Returns a synchronized (thread-safe) wrapper for a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">返回同步的 （线程安全） 包装器<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of a &lt;xref:System.Collections.SortedList&gt; object, all operations must be done through this wrapper only.</source>
          <target state="translated">若要确保的线程安全性&lt;xref:System.Collections.SortedList&gt;对象，必须通过此包装器仅执行所有操作。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to synchronize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要同步的对象。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>A synchronized (thread-safe) wrapper for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个同步 （线程安全） 包装器<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取可以用于对访问进行同步的对象<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>To create a synchronized version of the &lt;xref:System.Collections.SortedList&gt; object, use the &lt;xref:System.Collections.SortedList.Synchronized%2A&gt; method.</source>
          <target state="translated">若要创建的同步的版本&lt;xref:System.Collections.SortedList&gt;对象，请使用&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.SortedList.Synchronized%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>However, derived classes can provide their own synchronized version of the &lt;xref:System.Collections.SortedList&gt; using the SyncRoot property.</source>
          <target state="translated">但是，派生的类可以提供自己的同步的版本&lt;xref:System.Collections.SortedList&gt;使用 SyncRoot 属性。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.SortedList&gt;, not directly on the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">同步代码必须对执行操作的 SyncRoot &lt;xref:System.Collections.SortedList&gt;，不是直接对&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">这可确保正确地执行操作的从其他对象派生的集合。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">具体地说，这样可保持正确的同步，与可能同时对修改其他线程&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">可以用于对访问进行同步的对象<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; that iterates through the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回&lt;xref:System.Collections.IEnumerator&gt;，它循环访问<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic、 C#]      <ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建议，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;此外会回此位置的枚举数。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>At this position, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">在此位置，调用&lt;xref:System.Collections.IEnumerator.Current%2A&gt;引发异常。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，你必须调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;的第一个元素的集合，然后再读取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;的值枚举器向前移动&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回相同的对象之前&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;到下一个元素。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;还返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">如果最后一次调用到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>，则调用&lt;xref:System.Collections.IEnumerator.Current%2A&gt;引发异常。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;可以再次，集合的第一个元素调用&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;后, 跟&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果对集合进行更改，如添加、 修改或删除元素，枚举数将失效下, 一个调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;引发&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;到</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之间修改集合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;和&lt;xref:System.Collections.IEnumerator.Current%2A&gt;，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回到，设置的元素，即使枚举数已经无效。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合; 独占访问权因此，枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Sets the capacity to the actual number of elements in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">将容量设置中的元素的实际数目<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">此方法可以用于降低集合的内存开销，如果没有新的元素将添加到集合。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>To reset a &lt;xref:System.Collections.SortedList&gt; object to its initial state, call the &lt;xref:System.Collections.SortedList.Clear%2A&gt; method before calling TrimToSize.</source>
          <target state="translated">若要重置&lt;xref:System.Collections.SortedList&gt;对象为其初始状态，调用&lt;xref:System.Collections.SortedList.Clear%2A&gt;方法之前调用 TrimToSize。&lt;/xref:System.Collections.SortedList.Clear%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.SortedList&gt; sets the capacity of the &lt;xref:System.Collections.SortedList&gt; to the default capacity.</source>
          <target state="translated">截去空&lt;xref:System.Collections.SortedList&gt;的容量设置&lt;xref:System.Collections.SortedList&gt;到默认的容量。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象是只读的。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Gets the values in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取中的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; object is a read-only view of the values of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;对象是只读的值的视图&lt;xref:System.Collections.SortedList&gt;对象。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">对基础&lt;xref:System.Collections.SortedList&gt;&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;中将立即反映&lt;/xref:System.Collections.SortedList&gt;所做的修改</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ICollection&gt; are sorted in the same order as the values of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;用作&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;的值相同的顺序排序&lt;/xref:System.Collections.ICollection&gt;的元素</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>This property is similar to the &lt;xref:System.Collections.SortedList.GetValueList%2A&gt; method, but returns an &lt;xref:System.Collections.ICollection&gt; object instead of an &lt;xref:System.Collections.IList&gt; object.</source>
          <target state="translated">此属性是类似于&lt;xref:System.Collections.SortedList.GetValueList%2A&gt;方法，但返回&lt;xref:System.Collections.ICollection&gt;对象而不是&lt;xref:System.Collections.IList&gt;对象。&lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.SortedList.GetValueList%2A&gt;</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing the values in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;包含中的值的对象<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>