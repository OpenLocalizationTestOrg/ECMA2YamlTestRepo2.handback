<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c32d0b882a779f931e8bb875e7daf43dfad8da89</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.SqlClient.SqlCommandBuilder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30acda7cc6e1c4a1eaf9a7a8ecac573d159e139d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">413c14e9eee4c274b4210d40c34fe1d651ed6509</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Automatically generates single-table commands that are used to reconcile changes made to a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the associated SQL Server database.</source>
          <target state="translated">自动生成用于协调对所做更改的单表命令<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与关联的 SQL Server 数据库。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; does not automatically generate the Transact-SQL statements required to reconcile changes made to a &lt;xref:System.Data.DataSet&gt; with the associated instance of SQL Server.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;不会自动生成所需进行对帐对所做更改的 TRANSACT-SQL 语句&lt;xref:System.Data.DataSet&gt;与关联的 SQL Server 实例。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, you can create a SqlCommandBuilder object to automatically generate Transact-SQL statements for single-table updates if you set the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">但是，你可以在其中创建 SqlCommandBuilder 对象以自动生成单表更新的 TRANSACT-SQL 语句，如果设置&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;的&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;属性&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Then, any additional Transact-SQL statements that you do not set are generated by the SqlCommandBuilder.</source>
          <target state="translated">然后，由 SqlCommandBuilder 生成未设置任何其他 TRANSACT-SQL 语句。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The SqlCommandBuilder registers itself as a listener for &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; events whenever you set the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt; property.</source>
          <target state="translated">SqlCommandBuilder 将自己注册为侦听器&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;事件每当你设置&lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;属性。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can only associate one &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; or SqlCommandBuilder object with each other at one time.</source>
          <target state="translated">你可以仅将一个相关联&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;或 SqlCommandBuilder 对象相互一次。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To generate INSERT, UPDATE, or DELETE statements, the SqlCommandBuilder uses the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; property to retrieve a required set of metadata automatically.</source>
          <target state="translated">若要生成 INSERT、 UPDATE 或 DELETE 语句，SqlCommandBuilder 使用&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;要自动检索所需的元数据集属性。&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you change the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; after the metadata has been retrieved, such as after the first update, you should call the &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; method to update the metadata.</source>
          <target state="translated">如果你更改&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;元数据进行检索，如第一次更新，应调用后&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;方法来更新元数据。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated"><ph id="ph1">`SelectCommand`</ph>还必须返回至少一个主键或唯一列。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If none are present, an <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept> exception is generated, and the commands are not generated.</source>
          <target state="translated">如果这些都不存在， <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept>则会生成异常，并不会生成命令。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The SqlCommandBuilder also uses the &lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;, &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;, and &lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt; properties referenced by the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">SqlCommandBuilder 还使用&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;， &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;，和&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;属性引用的&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt; &lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; &lt;/xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The user should call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if one or more of these properties are modified, or if the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; itself is replaced.</source>
          <target state="translated">用户应调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果修改一个或多个这些属性，或如果&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;本身被替换。&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Otherwise the &lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;, and &lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt; properties retain their previous values.</source>
          <target state="translated">否则为&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;， &lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;，和&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;属性保留其以前的值。&lt;/xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you call &lt;xref:System.ComponentModel.Component.Dispose%2A&gt;, the SqlCommandBuilder is disassociated from the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;, and the generated commands are no longer used.</source>
          <target state="translated">如果调用&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;，与关联被断开 SqlCommandBuilder &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;，并且不再使用所生成的命令。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the associated <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用关联的类<bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; registers itself as a listener for &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; events that are generated by the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; specified in this property.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;将自己注册为侦听器&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;由生成的事件&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;此属性中指定。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you create a new instance of &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;, any existing &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; associated with this &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; is released.</source>
          <target state="translated">当你创建的新实例&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;，任何现有&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;与此关联&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;发布。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">名称<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Sets or gets the <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an instance of the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">设置或获取<bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的实例<bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Sets or gets a string used as the catalog separator for an instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">设置或获取的字符串用作的实例的目录分隔符<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A string that indicates the catalog separator for use with an instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">一个字符串，指示与实例一起使用的目录分隔符<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for which Transact-SQL statements are automatically generated.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对于哪些 TRANSACT-SQL 语句会自动生成的对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; registers itself as a listener for &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; events that are generated by the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; specified in this property.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;将自己注册为侦听器&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;由生成的事件&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;此属性中指定。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When you create a new instance of &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;, any existing &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; associated with this &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; is released.</source>
          <target state="translated">当你创建的新实例&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;，任何现有&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;与此关联&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;发布。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Retrieves parameter information from the stored procedure specified in the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and populates the &lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt; collection of the specified <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">从存储过程中指定检索参数信息<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>并填充&lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt;的指定集合<bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Data.SqlClient.SqlCommand.Parameters*&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DeriveParameters`</ph> overwrites any existing parameter information for the <ph id="ph2">`SqlDbCommand`</ph>.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph>将覆盖任何现有参数信息<ph id="ph2">`SqlDbCommand`</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DeriveParameters`</ph> requires an additional call to the database to obtain the information.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph>需要其他调用数据库以获取信息。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</source>
          <target state="translated">如果在提前知道参数信息，则更有效地通过显式设置的信息填充的参数集合。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can only use <ph id="ph1">`DeriveParameters`</ph> with stored procedures.</source>
          <target state="translated">你只能使用<ph id="ph1">`DeriveParameters`</ph>的存储过程。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> with extended stored procedures.</source>
          <target state="translated">不能使用<ph id="ph1">`DeriveParameters`</ph>与扩展存储过程。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> to populate the &lt;xref:System.Data.SqlClient.SqlParameterCollection&gt; with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</source>
          <target state="translated">不能使用<ph id="ph1">`DeriveParameters`</ph>来填充&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;使用任意 Transact SQL 语句，例如参数化的 SELECT 语句。&lt;/xref:System.Data.SqlClient.SqlParameterCollection&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>配置参数和参数数据类型<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> referencing the stored procedure from which the parameter information is to be derived.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>引用存储的过程是派生参数信息。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The derived parameters are added to the &lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt; collection of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生的参数添加到&lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt;集合<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.SqlClient.SqlCommand.Parameters*&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The command text is not a valid stored procedure name.</source>
          <target state="translated">命令文本不是有效的存储的过程名称。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform deletions on the database.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>数据库执行删除操作所需的对象。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An application can use the GetDeleteCommand method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可用于 GetDeleteCommand 方法条信息性或故障排除目的因为它返回&lt;xref:System.Data.SqlClient.SqlCommand&gt;要执行对象。&lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can also use GetDeleteCommand as the basis of a modified command.</source>
          <target state="translated">你还可以用作 GetDeleteCommand 修改命令的基础。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, you might call GetDeleteCommand and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">例如，你可能会调用 GetDeleteCommand 和修改&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;值，然后显式设置的时间为&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Otherwise, the GetDeleteCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则，GetDeleteCommand 仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetDeleteCommand.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或 GetDeleteCommand。&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform deletions.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行删除操作所需的对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform deletions on the database.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>数据库执行删除操作所需的对象。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An application can use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可以使用&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;方法为信息性或故障排除目的，因为它返回&lt;xref:System.Data.SqlClient.SqlCommand&gt;要执行对象。&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can also use &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">你还可以使用&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;作为修改命令的基础。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For example, you might call &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">例如，你可能在其中调用&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;和修改&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;值，然后显式设置的时间为&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;仍将使用从上一条语句，这可能不是正确的信息。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;.</source>
          <target state="translated">当应用程序调用其中一种&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;首先生成 SQL 语句</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数允许你强制&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;生成改为根据列名称的参数。&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">此操作成功仅当满足以下条件:-&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;指定集合并且其长度等于或大于生成的参数名。&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection regular expression.</source>
          <target state="translated">-生成的参数名满足中指定的条件&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;集合正则表达式。&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection is specified.</source>
          <target state="translated">-A&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;指定的集合。&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names if possible.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成尽可能与列名相匹配的参数名称。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，依次类推。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform deletions.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行删除操作所需的对象。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform insertions on the database.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>需对数据库执行插入的对象。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An application can use the GetInsertCommand method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可用于 GetInsertCommand 方法条信息性或故障排除目的因为它返回&lt;xref:System.Data.SqlClient.SqlCommand&gt;要执行对象。&lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You can also use GetInsertCommand as the basis of a modified command.</source>
          <target state="translated">你还可以用作 GetInsertCommand 修改命令的基础。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, you might call GetInsertCommand and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">例如，你可能会调用 GetInsertCommand 和修改&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;值，然后显式设置的时间为&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 TRANSACT-SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Otherwise, the GetInsertCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则，GetInsertCommand 仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetInsertCommand.</source>
          <target state="translated">应用程序调用时，将首先生成 TRANSACT-SQL 语句&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或 GetInsertCommand。&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform insertions.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行插入所需的对象。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform insertions on the database.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>需对数据库执行插入的对象。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An application can use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可以使用&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;方法为信息性或故障排除目的，因为它返回&lt;xref:System.Data.SqlClient.SqlCommand&gt;要执行对象。&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can also use &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">你还可以使用&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;作为修改命令的基础。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For example, you might call &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">例如，你可能在其中调用&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;和修改&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;值，然后显式设置的时间为&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 TRANSACT-SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;仍将使用从上一条语句，这可能不是正确的信息。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;.</source>
          <target state="translated">当应用程序调用其中一种&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;首先生成 TRANSACT-SQL 语句</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数允许你强制&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;生成改为根据列名称的参数。&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">此操作成功仅当满足以下条件:-&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;指定集合并且其长度等于或大于生成的参数名。&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection regular expression.</source>
          <target state="translated">-生成的参数名满足中指定的条件&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;集合正则表达式。&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection is specified.</source>
          <target state="translated">-A&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;指定的集合。&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names if possible.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成尽可能与列名相匹配的参数名称。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，依次类推。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform insertions.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行插入所需的对象。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates on the database.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>数据库上执行更新所需的对象。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An application can use the GetUpdateCommand method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可用于 GetUpdateCommand 方法条信息性或故障排除目的因为它返回&lt;xref:System.Data.SqlClient.SqlCommand&gt;要执行对象。&lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can also use GetUpdateCommand as the basis of a modified command.</source>
          <target state="translated">你还可以用作 GetUpdateCommand 修改命令的基础。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For example, you might call GetUpdateCommand and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">例如，你可能会调用 GetUpdateCommand 和修改&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;值，然后显式设置的时间为&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 TRANSACT-SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Otherwise, the GetUpdateCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则，GetUpdateCommand 仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetUpdateCommand.</source>
          <target state="translated">应用程序调用时，将首先生成 TRANSACT-SQL 语句&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或 GetUpdateCommand。&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform updates.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行更新所需的对象。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates on the database.</source>
          <target state="translated">获取自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>数据库上执行更新所需的对象。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>An application can use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">应用程序可以使用&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;方法为信息性或故障排除目的，因为它返回&lt;xref:System.Data.SqlClient.SqlCommand&gt;要执行对象。&lt;/xref:System.Data.SqlClient.SqlCommand&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can also use &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">你还可以使用&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;作为修改命令的基础。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For example, you might call &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">例如，你可能在其中调用&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;和修改&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;值，然后显式设置的时间为&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt; &lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; &lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">当首次生成 TRANSACT-SQL 语句后，应用程序必须显式调用&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;如果更改该语句以任何方式。&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;仍将使用从上一条语句，这可能不是正确的信息。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;.</source>
          <target state="translated">当应用程序调用其中一种&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;或&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;首先生成 TRANSACT-SQL 语句</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数允许你强制&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;生成改为根据列名称的参数。&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">此操作成功仅当满足以下条件:-&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;指定集合并且其长度等于或大于生成的参数名。&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection regular expression.</source>
          <target state="translated">-生成的参数名满足中指定的条件&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;集合正则表达式。&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection is specified.</source>
          <target state="translated">-A&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;指定的集合。&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; &lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names if possible.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成尽可能与列名相匹配的参数名称。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，生成<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，依次类推。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates.</source>
          <target state="translated">自动生成<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>执行更新所需的对象。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">指定在正确的目录的情况下不带引号的标识符，则会返回正确带引号的该标识符的形式。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">这包括正确转义任何在标识符中嵌入的引号。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The original unquoted identifier.</source>
          <target state="translated">原始不带引号的标识符。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The quoted version of the identifier.</source>
          <target state="translated">带引号的标识符的版本。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Embedded quotes within the identifier are correctly escaped.</source>
          <target state="translated">正确转义标识符中嵌入的引号。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">获取或设置的起始字符或字符指定 SQL Server 数据库对象，如表或列，其名称包含空格或保留的令牌等字符时使用。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The starting character or characters to use.</source>
          <target state="translated">起始字符或要使用的字符。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
          <target state="translated">默认值为一个空字符串。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.</source>
          <target state="translated">此属性后的 INSERT、 UPDATE，不能更改或生成删除命令。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">获取或设置的结束字符或字符指定 SQL Server 数据库对象，如表或列，其名称包含空格或保留的令牌等字符时使用。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The ending character or characters to use.</source>
          <target state="translated">结束字符或要使用的字符。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
          <target state="translated">默认值为一个空字符串。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          <target state="translated">生成 insert、 update 或 delete 命令后，无法更改此属性。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">获取或设置要用于架构标识符和任何其他标识符之间的分隔符的字符。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">通常情况下，数据库服务器通过将架构名称与具有某些字符标识符分离指示标识符的架构。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">例如，SQL Server 使用一段中，创建完整的标识符，例如，Person.CustomerName，其中"Person"是架构名称，"CustomerName"是的标识符。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Setting this property lets developers modify this behavior.</source>
          <target state="translated">设置此属性使开发人员修改此行为。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">要用作架构分隔符的字符。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier.</source>
          <target state="translated">指定带引号的标识符，则会返回该标识符的正确却未加引号的形式。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This includes correctly unescaping any embedded quotes in the identifier.</source>
          <target state="translated">这包括未在标识符中任何嵌入的引号正确转义。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">将已删除其嵌入的引号的标识符。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The unquoted identifier, with embedded quotes properly unescaped.</source>
          <target state="translated">不带引号的标识符，使用嵌入的引号未正确转义。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>