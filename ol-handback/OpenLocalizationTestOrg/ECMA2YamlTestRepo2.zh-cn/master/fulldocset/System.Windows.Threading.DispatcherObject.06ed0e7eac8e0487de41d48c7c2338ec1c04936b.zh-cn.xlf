<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dccb4aa4f25f3fea9a69d3e9e4ca0a7c46d2d816</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Threading.DispatcherObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c51cd6f6b809a676666b388945099199dbc78475</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec931dc4703c807b6b08a63d6ffda0b7ea3dbcb3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an object that is associated with a <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">表示与关联的对象<bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Only the thread that the &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt; was created on may access the DispatcherObject directly.</source>
          <target state="translated">只有的线程，&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;创建在可能 DispatcherObject 直接访问。&lt;/xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To access a DispatcherObject from a thread other than the thread the DispatcherObject was created on, call &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; or &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; on the &lt;xref:System.Windows.Threading.Dispatcher&gt; the DispatcherObject is associated with.</source>
          <target state="translated">若要访问 DispatcherObject DispatcherObject 创建的线程的线程，调用&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;或&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;上&lt;xref:System.Windows.Threading.Dispatcher&gt;与关联 DispatcherObject。&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Subclasses of DispatcherObject that need to enforce thread safety can do so by calling &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; on all public methods.</source>
          <target state="translated">需要强制线程安全的 DispatcherObject 的子类可以执行操作来调用&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;对所有公共方法。&lt;/xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This guarantees the calling thread is the thread that the DispatcherObject was created on.</source>
          <target state="translated">这将确保调用线程创建 DispatcherObject 的线程。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A DispatcherObject cannot be independently instantiated; that is, all constructors are protected.</source>
          <target state="translated">不能独立实例化 DispatcherObject;也就是说，所有构造函数会受到保护。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Objects that derive from DispatcherObject have thread affinity.</source>
          <target state="translated">从 DispatcherObject 派生的对象具有线程关联。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Objects that derive from &lt;xref:System.Windows.Freezable&gt; are free-threaded when they are frozen.</source>
          <target state="translated">从派生的对象&lt;xref:System.Windows.Freezable&gt;是自由线程时它们已冻结。&lt;/xref:System.Windows.Freezable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Freezable Objects Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>可冻结对象概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Determines whether the calling thread has access to this <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">确定调用线程是否有权访问此<bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Only the thread the &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt; was created on may access the &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">只有线程&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;创建在可以访问&lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Any thread can check to see whether it has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">任何线程可以检查以查看它是否有权访问此&lt;xref:System.Windows.Threading.DispatcherObject&gt;。&lt;/xref:System.Windows.Threading.DispatcherObject&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The difference between CheckAccess and &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; is that CheckAccess returns a Boolean that specifies whether the calling thread has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt; and &lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; throws an exception if the calling thread does not have access to the this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">Checkaccess 方法之间的差异和&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;是 checkaccess 方法返回一个布尔值，指定调用线程是否有权访问此&lt;xref:System.Windows.Threading.DispatcherObject&gt;和&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;引发异常，如果调用线程不具有访问此&lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Calling this method is identical to calling &lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt; on the associated &lt;xref:System.Windows.Threading.Dispatcher&gt; object.</source>
          <target state="translated">调用此方法相当于调用&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt;上关联&lt;xref:System.Windows.Threading.Dispatcher&gt;对象。&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the calling thread has access to this object; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果调用线程有权访问此对象;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this <bpt id="p2">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is associated with.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>这<bpt id="p2">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>与相关联。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Only the thread that the Dispatcher was created on may access the &lt;xref:System.Windows.Threading.DispatcherObject&gt; directly.</source>
          <target state="translated">在创建调度程序线程可能访问&lt;xref:System.Windows.Threading.DispatcherObject&gt;直接。&lt;/xref:System.Windows.Threading.DispatcherObject&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To access a &lt;xref:System.Windows.Threading.DispatcherObject&gt; from a thread other than the thread the &lt;xref:System.Windows.Threading.DispatcherObject&gt; was created on, call &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; and &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; on the &lt;xref:System.Windows.Threading.Dispatcher&gt; the &lt;xref:System.Windows.Threading.DispatcherObject&gt; is associated with.</source>
          <target state="translated">访问&lt;xref:System.Windows.Threading.DispatcherObject&gt;线程的线程&lt;xref:System.Windows.Threading.DispatcherObject&gt;已创建，调用&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;和&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;上&lt;xref:System.Windows.Threading.Dispatcher&gt;&lt;xref:System.Windows.Threading.DispatcherObject&gt;与相关联。&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The dispatcher.</source>
          <target state="translated">调度程序。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Enforces that the calling thread has access to this <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">强制执行调用的线程有权访问此<bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Only the thread the &lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt; was created on may access the &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">只有线程&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;创建在可以访问&lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Any thread can check to see whether it has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">任何线程可以检查以查看它是否有权访问此&lt;xref:System.Windows.Threading.DispatcherObject&gt;。&lt;/xref:System.Windows.Threading.DispatcherObject&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The difference between &lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt; and VerifyAccess is that &lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt; returns a Boolean that specifies whether the calling thread has access to this &lt;xref:System.Windows.Threading.DispatcherObject&gt; and VerifyAccess throws an exception if the calling thread does not have access to the this &lt;xref:System.Windows.Threading.DispatcherObject&gt;.</source>
          <target state="translated">之间的差异&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;和 VerifyAccess 在于&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;返回一个布尔值，指定调用线程是否有权访问此&lt;xref:System.Windows.Threading.DispatcherObject&gt;并 VerifyAccess 引发异常，如果调用线程不具有访问此&lt;xref:System.Windows.Threading.DispatcherObject&gt;.&lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>the calling thread does not have access to this <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">调用线程没有访问此<bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>