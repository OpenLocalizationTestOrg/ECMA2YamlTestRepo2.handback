<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e4f31994a036ce0ec8acfb3e4f81d9245b4039d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.SendKeys.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08abf70e02face41ab8cf687b54b6dc9d6946cf0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">535fd4f7ecb4aeb1266cec4c7e0ca8d932b50e53</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods for sending keystrokes to an application.</source>
          <target state="translated">提供将击键发送到应用程序的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use SendKeys to send keystrokes and keystroke combinations to the active application.</source>
          <target state="translated">使用 SendKeys 发送键击和击键组合到活动的应用程序。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class cannot be instantiated.</source>
          <target state="translated">此类不能实例化。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To send a keystroke to a class and immediately continue with the flow of your program, use &lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt;.</source>
          <target state="translated">将击键发送到的类，并立即继续执行程序的流，请使用&lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt;.&lt;/xref:System.Windows.Forms.SendKeys.Send%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To wait for any processes started by the keystroke, use &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;.</source>
          <target state="translated">若要等待启动的键击任何进程，请使用&lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;。&lt;/xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Each key is represented by one or more characters.</source>
          <target state="translated">每个键是由一个或多个字符表示。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To specify a single keyboard character, use the character itself.</source>
          <target state="translated">若要指定单个键盘字符，使用该字符本身。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, to represent the letter A, pass in the string "A" to the method.</source>
          <target state="translated">例如，若要表示字母 A，请将"A"的字符串传递给方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To represent more than one character, append each additional character to the one preceding it.</source>
          <target state="translated">若要表示多个字符，附加到它之前每增加一个字符。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To represent the letters A, B, and C, specify the parameter as "ABC".</source>
          <target state="translated">若要表示字母 A、 B 和 C，请将参数指定为"ABC"。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to SendKeys.</source>
          <target state="translated">加号 （+）、 脱字号 (^)、 百分号 （%）、 波形符 （~） 和括号 （） 具有到 SendKeys 的特殊含义。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To specify one of these characters, enclose it within braces ({}).</source>
          <target state="translated">若要指定这些字符之一，请将其括在大括号 （{}） 内。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, to specify the plus sign, use "{+}".</source>
          <target state="translated">例如，若要指定加号，使用"{+}"。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To specify brace characters, use "{{}" and "{}}".</source>
          <target state="translated">若要指定大括号字符、 使用"{{}"和"{}}"。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Brackets ([ ]) have no special meaning to SendKeys, but you must enclose them in braces.</source>
          <target state="translated">方括号 ([]) 具有到 SendKeys，没有特殊含义，但必须将它们括在大括号中。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</source>
          <target state="translated">在其他应用程序，方括号有可能会很明显，动态数据交换 (DDE) 发生时具有特殊含义。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  If your application is intended for international use with a variety of keyboards, the use of &lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt; could yield unpredictable results and should be avoided.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 如果你的应用程序旨在用于全球各种键盘，使用&lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt;可能会产生不可预知的结果，应当避免。&lt;/xref:System.Windows.Forms.SendKeys.Send%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</source>
          <target state="translated">若要指定在按下一个键，如 ENTER 或选项卡上，以及密钥表示操作，而不是字符，不显示的字符使用下表中的代码。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>|Key|Code|   |---------|----------|   |BACKSPACE|{BACKSPACE}, {BS}, or {BKSP}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |DEL or DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER|{ENTER}or ~|   |ESC|{ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS or INSERT|{INSERT} or {INS}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |PRINT SCREEN|{PRTSC} (reserved for future use)|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1|{F1}|   |F2|{F2}|   |F3|{F3}|   |F4|{F4}|   |F5|{F5}|   |F6|{F6}|   |F7|{F7}|   |F8|{F8}|   |F9|{F9}|   |F10|{F10}|   |F11|{F11}|   |F12|{F12}|   |F13|{F13}|   |F14|{F14}|   |F15|{F15}|   |F16|{F16}|   |Keypad add|{ADD}|   |Keypad subtract|{SUBTRACT}|   |Keypad multiply|{MULTIPLY}|   |Keypad divide|{DIVIDE}|       To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</source>
          <target state="translated">|密钥 |代码 |  |---------|----------|  |退格符 |{退格符}，{BS} 或 {BKSP} |  |中断 |{中断} |  |CAPS LOCK |{CAPSLOCK} |  |DEL 或 DELETE |{删除} 或 {DEL} |  |向下箭头 |{向下} |  |结束 |{结束} |  |输入 |{输入} 或 ~ |  |ESC |{ESC} |  |帮助 |{帮助} |  |主页 |{主页} |  |单元或插入 |{插入} 或 {单元} |  |向的左键 |{LEFT} |  |NUM LOCK |{NUMLOCK} |  |向下翻页 |{PGDN} |  |向上翻页 |{PGUP} |  |打印屏幕 |{PRTSC}（保留供将来使用） |  |右箭头 |{RIGHT} |  |SCROLL LOCK |{SCROLLLOCK} |  |选项卡 |{选项卡} |  |向上键 |{最多} |  |F1 |{F1} |  |F2 |{F2} |  |F3 |{F3} |  |F4 |{F4} |  |F5 |{F5} |  |F6 |{F6} |  |F7 |{F7} |  |F8 |{F8} |  |F9 |{F9} |  |F10 |{F10} |  |F11 |{F11} |  |F12 |{F12} |  |F13 |{F13} |  |F14 |{F14} |  |F15 |{F15} |  |F16 |{F16} |  |键盘添加 |{添加} |  |数字键盘减号 |{减去} |  |数字键盘乘号 |{乘} |  |数字键盘除号 |{划分} |      若要指定结合 SHIFT、 CTRL 和 ALT 键的任意组合的密钥，在前面使用一个或多个以下的代码的键代码。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>|Key|Code|   |---------|----------|   |SHIFT|+|   |CTRL|^|   |ALT|%|       To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</source>
          <target state="translated">|密钥 |代码 |  |---------|----------|  |SHIFT | + |  |CTRL | ^ |  |ALT | %|      若要指定 SHIFT、 CTRL 和 ALT 的任意组合当按下了几个其他键按住，将这些密钥的代码在括号中。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</source>
          <target state="translated">例如，若要指定以按住 SHIFT 并按下 E 和 C，使用"+ (EC)"。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</source>
          <target state="translated">若要指定以按住 SHIFT 并按 E 下跟 C 而无需 shift 键，使用"+ EC"。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To specify repeating keys, use the form {key number}.</source>
          <target state="translated">若要指定重复键，使用窗体 {密钥号}。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You must put a space between key and number.</source>
          <target state="translated">你必须放置键和数字之间留一个空格。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</source>
          <target state="translated">例如，{左 42} 表示 42 时间; 同时按左箭头键{h 10} 意味着的按 H 10 倍。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 由于没有激活其他应用程序的托管的方法，你可以使用当前应用程序中的此类，或者使用本机 Windows 方法，如<ph id="ph2">`FindWindow`</ph>和<ph id="ph3">`SetForegroundWindow`</ph>、 将焦点强制上其他应用程序。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The SendKeys class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph> 1&gt; SendKeys 类已更新为.NET Framework 3.0，从而可用于在 Windows Vista 运行的应用程序。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</source>
          <target state="translated">增强的安全性的 Windows Vista （称为用户帐户控件或 UAC） 可防止在按预期方式工作从以前的实现。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The SendKeys class is susceptible to timing issues, which some developers have had to work around.</source>
          <target state="translated">&gt;&gt; SendKeys 类是容易遭受某些开发人员不得不解决的计时问题。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</source>
          <target state="translated">更新后的实现仍然容易计时问题，但速度稍微快一些，可能需要更改解决方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The SendKeys class tries to use the previous implementation first, and if that fails, uses the new implementation.</source>
          <target state="translated">SendKeys 类先尝试使用以前的实现，并且如果失败，使用新的实现。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>As a result, the SendKeys class may behave differently on different operating systems.</source>
          <target state="translated">因此，SendKeys 类可能以不同方式行为，在不同操作系统上。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Additionally, when the SendKeys class uses the new implementation, the &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; method will not wait for messages to be processed when they are sent to another process.</source>
          <target state="translated">此外，当 SendKeys 类使用的新实现，&lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;方法不会等到消息被处理后发送到另一个进程。&lt;/xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  If your application relies on consistent behavior regardless of the operating system, you can force the SendKeys class to use the new implementation by adding the following application setting to your app.config file.</source>
          <target state="translated">&gt;&gt; 如果你的应用程序依赖于一致的行为，无论操作系统，你可以强制 SendKeys 类通过将以下应用程序设置添加到 app.config 文件中使用的新实现。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  <ph id="ph1">`&lt;appSettings&gt;`</ph>   &gt;    &gt;  <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph>   &gt;    &gt;  <ph id="ph3">`&lt;/appSettings&gt;`</ph>   &gt;    &gt;  To force the SendKeys class to use the previous implementation, use the value <ph id="ph4">`"JournalHook"`</ph> instead.</source>
          <target state="translated">&gt;&gt; <ph id="ph1">`&lt;appSettings&gt;`</ph> &gt;&gt; <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph> &gt;&gt; <ph id="ph3">`&lt;/appSettings&gt;`</ph> &gt;&gt; 若要强制 SendKeys 类以使用以前的实现，使用值<ph id="ph4">`"JournalHook"`</ph>相反。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Processes all the Windows messages currently in the message queue.</source>
          <target state="translated">处理当前在消息队列中的所有 Windows 消息。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Use Flush to wait for the application to process keystrokes and other operating system messages that are in the message queue.</source>
          <target state="translated">使用刷新等待处理的键击和其他操作系统的消息的消息队列应用程序。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName&gt; until there are no more keys to process.</source>
          <target state="translated">这是等效于调用&lt;xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName&gt;直到没有任何要处理的多个密钥。&lt;/xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 由于没有激活其他应用程序的托管的方法，你可以使用当前应用程序中的此类，或者使用本机 Windows 方法，如<ph id="ph2">`FindWindow`</ph>和<ph id="ph3">`SetForegroundWindow`</ph>、 将焦点强制上其他应用程序。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Sends keystrokes to the active application.</source>
          <target state="translated">将击键发送到活动的应用程序。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Each key is represented by one or more characters.</source>
          <target state="translated">每个键是由一个或多个字符表示。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To specify a single keyboard character, use the character itself.</source>
          <target state="translated">若要指定单个键盘字符，使用该字符本身。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, to represent the letter A, pass in the string "A" to the method.</source>
          <target state="translated">例如，若要表示字母 A，请将"A"的字符串传递给方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To represent more than one character, append each additional character to the one preceding it.</source>
          <target state="translated">若要表示多个字符，附加到它之前每增加一个字符。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To represent the letters A, B, and C, specify the parameter as "ABC".</source>
          <target state="translated">若要表示字母 A、 B 和 C，请将参数指定为"ABC"。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to &lt;xref:System.Windows.Forms.SendKeys&gt;.</source>
          <target state="translated">加号 （+）、 脱字号 (^)、 百分号 （%）、 波形符 （~） 和括号 （） 具有特殊含义到&lt;xref:System.Windows.Forms.SendKeys&gt;。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To specify one of these characters, enclose it within braces ({}).</source>
          <target state="translated">若要指定这些字符之一，请将其括在大括号 （{}） 内。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, to specify the plus sign, use "{+}".</source>
          <target state="translated">例如，若要指定加号，使用"{+}"。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To specify brace characters, use "{{}" and "{}}".</source>
          <target state="translated">若要指定大括号字符、 使用"{{}"和"{}}"。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Brackets ([ ]) have no special meaning to &lt;xref:System.Windows.Forms.SendKeys&gt;, but you must enclose them in braces.</source>
          <target state="translated">方括号 ([]) 具有到没有特殊含义&lt;xref:System.Windows.Forms.SendKeys&gt;，但你必须将它们括在大括号中。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</source>
          <target state="translated">在其他应用程序，方括号有可能会很明显，动态数据交换 (DDE) 发生时具有特殊含义。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  If your application is intended for international use with a variety of keyboards, the use of Send could yield unpredictable results and should be avoided.</source>
          <target state="translated">1&gt; <ph id="ph1">[!CAUTION]</ph>&amp;1;&gt; 如果你的应用程序旨在用于全球各种键盘，发送的使用可能会产生不可预知的结果，应当避免。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</source>
          <target state="translated">若要指定在按下一个键，如 ENTER 或选项卡上，以及密钥表示操作，而不是字符，不显示的字符使用下表中的代码。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>|Key|Code|   |---------|----------|   |BACKSPACE|{BACKSPACE}, {BS}, or {BKSP}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |DEL or DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER|{ENTER}or ~|   |ESC|{ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS or INSERT|{INSERT} or {INS}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |PRINT SCREEN|{PRTSC} (reserved for future use)|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1|{F1}|   |F2|{F2}|   |F3|{F3}|   |F4|{F4}|   |F5|{F5}|   |F6|{F6}|   |F7|{F7}|   |F8|{F8}|   |F9|{F9}|   |F10|{F10}|   |F11|{F11}|   |F12|{F12}|   |F13|{F13}|   |F14|{F14}|   |F15|{F15}|   |F16|{F16}|   |Keypad add|{ADD}|   |Keypad subtract|{SUBTRACT}|   |Keypad multiply|{MULTIPLY}|   |Keypad divide|{DIVIDE}|       To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</source>
          <target state="translated">|密钥 |代码 |  |---------|----------|  |退格符 |{退格符}，{BS} 或 {BKSP} |  |中断 |{中断} |  |CAPS LOCK |{CAPSLOCK} |  |DEL 或 DELETE |{删除} 或 {DEL} |  |向下箭头 |{向下} |  |结束 |{结束} |  |输入 |{输入} 或 ~ |  |ESC |{ESC} |  |帮助 |{帮助} |  |主页 |{主页} |  |单元或插入 |{插入} 或 {单元} |  |向的左键 |{LEFT} |  |NUM LOCK |{NUMLOCK} |  |向下翻页 |{PGDN} |  |向上翻页 |{PGUP} |  |打印屏幕 |{PRTSC}（保留供将来使用） |  |右箭头 |{RIGHT} |  |SCROLL LOCK |{SCROLLLOCK} |  |选项卡 |{选项卡} |  |向上键 |{最多} |  |F1 |{F1} |  |F2 |{F2} |  |F3 |{F3} |  |F4 |{F4} |  |F5 |{F5} |  |F6 |{F6} |  |F7 |{F7} |  |F8 |{F8} |  |F9 |{F9} |  |F10 |{F10} |  |F11 |{F11} |  |F12 |{F12} |  |F13 |{F13} |  |F14 |{F14} |  |F15 |{F15} |  |F16 |{F16} |  |键盘添加 |{添加} |  |数字键盘减号 |{减去} |  |数字键盘乘号 |{乘} |  |数字键盘除号 |{划分} |      若要指定结合 SHIFT、 CTRL 和 ALT 键的任意组合的密钥，在前面使用一个或多个以下的代码的键代码。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>|Key|Code|   |---------|----------|   |SHIFT|+|   |CTRL|^|   |ALT|%|       To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</source>
          <target state="translated">|密钥 |代码 |  |---------|----------|  |SHIFT | + |  |CTRL | ^ |  |ALT | %|      若要指定 SHIFT、 CTRL 和 ALT 的任意组合当按下了几个其他键按住，将这些密钥的代码在括号中。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</source>
          <target state="translated">例如，若要指定以按住 SHIFT 并按下 E 和 C，使用"+ (EC)"。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</source>
          <target state="translated">若要指定以按住 SHIFT 并按 E 下跟 C 而无需 shift 键，使用"+ EC"。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To specify repeating keys, use the form {key number}.</source>
          <target state="translated">若要指定重复键，使用窗体 {密钥号}。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You must put a space between key and number.</source>
          <target state="translated">你必须放置键和数字之间留一个空格。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</source>
          <target state="translated">例如，{左 42} 表示 42 时间; 同时按左箭头键{h 10} 意味着的按 H 10 倍。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 由于没有激活其他应用程序的托管的方法，你可以使用当前应用程序中的此类，或者使用本机 Windows 方法，如<ph id="ph2">`FindWindow`</ph>和<ph id="ph3">`SetForegroundWindow`</ph>、 将焦点强制上其他应用程序。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.SendKeys&gt; class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph> 1&gt;&lt;xref:System.Windows.Forms.SendKeys&gt;类已更新为.NET Framework 3.0，从而可用于在 Windows Vista 运行的应用程序。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</source>
          <target state="translated">增强的安全性的 Windows Vista （称为用户帐户控件或 UAC） 可防止在按预期方式工作从以前的实现。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The &lt;xref:System.Windows.Forms.SendKeys&gt; class is susceptible to timing issues, which some developers have had to work around.</source>
          <target state="translated">&gt;&gt;&lt;xref:System.Windows.Forms.SendKeys&gt;类是容易遭受某些开发人员不得不解决的计时问题。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</source>
          <target state="translated">更新后的实现仍然容易计时问题，但速度稍微快一些，可能需要更改解决方法。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.SendKeys&gt; class tries to use the previous implementation first, and if that fails, uses the new implementation.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.SendKeys&gt;类先尝试使用以前的实现，并且如果失败，使用新的实现。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>As a result, the &lt;xref:System.Windows.Forms.SendKeys&gt; class may behave differently on different operating systems.</source>
          <target state="translated">因此，&lt;xref:System.Windows.Forms.SendKeys&gt;类在不同操作系统上行为可能不同。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Additionally, when the &lt;xref:System.Windows.Forms.SendKeys&gt; class uses the new implementation, the &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; method will not wait for messages to be processed when they are sent to another process.</source>
          <target state="translated">此外，当&lt;xref:System.Windows.Forms.SendKeys&gt;类使用的新实现，&lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;方法不会等到消息被处理后发送到另一个进程。&lt;/xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; &lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  If your application relies on consistent behavior regardless of the operating system, you can force the &lt;xref:System.Windows.Forms.SendKeys&gt; class to use the new implementation by adding the following application setting to your app.config file.</source>
          <target state="translated">&gt;&gt; 如果你的应用程序依赖于一致的行为，无论操作系统，你可以强制&lt;xref:System.Windows.Forms.SendKeys&gt;类通过将以下应用程序设置添加到 app.config 文件中使用的新实现。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  <ph id="ph1">`&lt;appSettings&gt;`</ph>   &gt;    &gt;  <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph>   &gt;    &gt;  <ph id="ph3">`&lt;/appSettings&gt;`</ph>   &gt;    &gt;  To force the &lt;xref:System.Windows.Forms.SendKeys&gt; class to use the previous implementation, use the value <ph id="ph4">`"JournalHook"`</ph> instead.</source>
          <target state="translated">&gt;&gt; <ph id="ph1">`&lt;appSettings&gt;`</ph> &gt;&gt; <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph> &gt;&gt; <ph id="ph3">`&lt;/appSettings&gt;`</ph> &gt;&gt; 强制&lt;xref:System.Windows.Forms.SendKeys&gt;类以使用以前的实现，请使用值<ph id="ph4">`"JournalHook"`</ph>相反。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The string of keystrokes to send.</source>
          <target state="translated">要发送的击键字符串。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>There is not an active application to send keystrokes to.</source>
          <target state="translated">没有活动应用程序发送到的键击。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keys&lt;/code&gt;</ph> does not represent valid keystrokes</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;keys&lt;/code&gt;</ph>不表示有效的键击</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Sends the given keys to the active application, and then waits for the messages to be processed.</source>
          <target state="translated">活动的应用程序，发送给定的键，然后等待要处理的消息。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use SendWait to send keystrokes or combinations of keystrokes to the active application and wait for the keystroke messages to be processed.</source>
          <target state="translated">使用 SendWait 来向活动应用程序发送击键或的击键组合并等待击键消息被处理。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can use this method to send keystrokes to an application and wait for any processes that are started by the keystrokes to be completed.</source>
          <target state="translated">此方法可用于将击键发送到应用程序并等待通过击键完成启动任何进程。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This can be important if the other application must finish before your application can continue.</source>
          <target state="translated">这可能很重要，如果在你的应用程序可以继续之前，必须完成其他应用程序。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 由于没有激活其他应用程序的托管的方法，你可以使用当前应用程序中的此类，或者使用本机 Windows 方法，如<ph id="ph2">`FindWindow`</ph>和<ph id="ph3">`SetForegroundWindow`</ph>、 将焦点强制上其他应用程序。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.SendKeys&gt; class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph> 1&gt;&lt;xref:System.Windows.Forms.SendKeys&gt;类已更新为.NET Framework 3.0，从而可用于在 Windows Vista 运行的应用程序。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</source>
          <target state="translated">增强的安全性的 Windows Vista （称为用户帐户控件或 UAC） 可防止在按预期方式工作从以前的实现。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The &lt;xref:System.Windows.Forms.SendKeys&gt; class is susceptible to timing issues, which some developers have had to work around.</source>
          <target state="translated">&gt;&gt;&lt;xref:System.Windows.Forms.SendKeys&gt;类是容易遭受某些开发人员不得不解决的计时问题。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</source>
          <target state="translated">更新后的实现仍然容易计时问题，但速度稍微快一些，可能需要更改解决方法。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.SendKeys&gt; class tries to use the previous implementation first, and if that fails, uses the new implementation.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.SendKeys&gt;类先尝试使用以前的实现，并且如果失败，使用新的实现。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>As a result, the &lt;xref:System.Windows.Forms.SendKeys&gt; class may behave differently on different operating systems.</source>
          <target state="translated">因此，&lt;xref:System.Windows.Forms.SendKeys&gt;类在不同操作系统上行为可能不同。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Additionally, when the &lt;xref:System.Windows.Forms.SendKeys&gt; class uses the new implementation, the SendWait method will not wait for messages to be processed when they are sent to another process.</source>
          <target state="translated">此外，当&lt;xref:System.Windows.Forms.SendKeys&gt;类使用的新实现，SendWait 方法不会等到消息被处理后发送到另一个进程。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  If your application relies on consistent behavior regardless of the operating system, you can force the &lt;xref:System.Windows.Forms.SendKeys&gt; class to use the new implementation by adding the following application setting to your app.config file.</source>
          <target state="translated">&gt;&gt; 如果你的应用程序依赖于一致的行为，无论操作系统，你可以强制&lt;xref:System.Windows.Forms.SendKeys&gt;类通过将以下应用程序设置添加到 app.config 文件中使用的新实现。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  <ph id="ph1">`&lt;appSettings&gt;`</ph>   &gt;    &gt;  <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph>   &gt;    &gt;  <ph id="ph3">`&lt;/appSettings&gt;`</ph>   &gt;    &gt;  To force the &lt;xref:System.Windows.Forms.SendKeys&gt; class to use the previous implementation, use the value <ph id="ph4">`"JournalHook"`</ph> instead.</source>
          <target state="translated">&gt;&gt; <ph id="ph1">`&lt;appSettings&gt;`</ph> &gt;&gt; <ph id="ph2">`&lt;add key="SendKeys" value="SendInput"/&gt;`</ph> &gt;&gt; <ph id="ph3">`&lt;/appSettings&gt;`</ph> &gt;&gt; 强制&lt;xref:System.Windows.Forms.SendKeys&gt;类以使用以前的实现，请使用值<ph id="ph4">`"JournalHook"`</ph>相反。&lt;/xref:System.Windows.Forms.SendKeys&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The string of keystrokes to send.</source>
          <target state="translated">要发送的击键字符串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>