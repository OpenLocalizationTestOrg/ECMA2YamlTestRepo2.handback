<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8075061d7baa4bc539f5c764bb51c9b9ae1c260f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.WaitOrTimerCallback.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65f16d0c8b83100df0e8085cba2ec80b68e96286</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06ed585e353ee17c2a33af40d027e54893e1b5cd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a method to be called when a &lt;xref:System.Threading.WaitHandle&gt; is signaled or times out.</source>
          <target state="translated">表示的方法时要调用&lt;xref:System.Threading.WaitHandle&gt;发出信号或超时。&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WaitOrTimerCallback represents a callback method that you want to execute when a registered wait handle times out or is signaled.</source>
          <target state="translated">WaitOrTimerCallback 表示你想要在已注册的等待句柄超时时，或处于有信号状态时执行的回调方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create the delegate by passing your callback method to the WaitOrTimerCallback constructor.</source>
          <target state="translated">通过将你的回调方法传递给 WaitOrTimerCallback 构造函数创建委托。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Your method must have the signature shown here.</source>
          <target state="translated">你的方法必须具有此处所示的签名。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Create the registered wait handle by passing the WaitOrTimerCallback delegate and a &lt;xref:System.Threading.WaitHandle&gt; to &lt;xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">通过传递 WaitOrTimerCallback 委托和&lt;xref:System.Threading.WaitHandle&gt;到&lt;xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A?displayProperty=fullName&gt;。&lt;/xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A?displayProperty=fullName&gt;&lt;/xref:System.Threading.WaitHandle&gt;创建已注册的等待句柄</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Your callback method executes each time the &lt;xref:System.Threading.WaitHandle&gt; times out or is signaled.</source>
          <target state="translated">你的回调方法执行每次&lt;xref:System.Threading.WaitHandle&gt;超时或处于有信号状态。&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>[Visual Basic]      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  Visual Basic users can omit the WaitOrTimerCallback constructor, and simply use the <ph id="ph2">`AddressOf`</ph> operator when passing the callback method to &lt;xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A&gt;.</source>
          <target state="translated">[Visual Basic]&amp;1;&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; Visual Basic 用户可以省略 WaitOrTimerCallback 构造函数中，而只需使用<ph id="ph2">`AddressOf`</ph>运算符时将回调方法传递给&lt;xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A&gt;.&lt;/xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Visual Basic automatically calls the correct delegate constructor.</source>
          <target state="translated">Visual Basic 会自动调用正确的委托构造函数。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you want to pass information to your callback method, create an object that contains the necessary information and pass it to &lt;xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A&gt; when you create the registered wait handle.</source>
          <target state="translated">如果你想要将信息传递给你的回调方法，创建包含所需的信息的对象，并将其传递到&lt;xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A&gt;当你创建的已注册的等待句柄。&lt;/xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Each time your callback method executes, the <ph id="ph1">`state`</ph> parameter contains this object.</source>
          <target state="translated">执行回调方法时，每次<ph id="ph1">`state`</ph>参数包含此对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about using callback methods to synchronize thread pool threads, see <bpt id="p1">[</bpt>The Managed Thread Pool<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关使用回调方法以同步线程池线程的详细信息，请参阅<bpt id="p1">[</bpt>托管线程池<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>