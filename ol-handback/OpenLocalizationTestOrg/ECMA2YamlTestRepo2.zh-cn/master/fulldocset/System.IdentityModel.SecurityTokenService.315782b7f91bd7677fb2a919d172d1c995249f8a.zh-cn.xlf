<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">456404cc887844e1e8f71ec73aad24765cc3c94f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.SecurityTokenService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29828d5699385b99ca678c56b1ac780595400c87</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8b3ed043909c4e884226058fcb219031c2a5321</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The abstract base class that defines the properties and methods of a security token service (STS).</source>
          <target state="translated">抽象基类，该类定义的属性和方法的安全令牌服务 (STS)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To create an STS you must derive from the SecurityTokenService class.</source>
          <target state="translated">若要创建某一 STS 必须从 SecurityTokenService 类进行派生。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In your custom class you must, at a minimum, override the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; and &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; methods.</source>
          <target state="translated">在你自定义类必须在最低限度上，重写&lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;和&lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>With these overrides, the STS created using the default implementation of all the other methods defined in the class is capable of issuing security tokens in response to security token requests (RST).</source>
          <target state="translated">通过这些重写，使用的类中定义的所有其他方法的默认实现创建 STS 是能够颁发安全令牌来响应安全令牌请求 (RST)。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>That is, the Issue binding defined in the WS-Trust specification is implemented.</source>
          <target state="translated">即，实现 Ws-trust 规范中定义的问题绑定。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This binding is implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">在中实现此绑定&lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>None of the other WS-Trust bindings (Renew, Cancel, and Validate) are implemented in the default case and an appropriate fault is returned to the caller if an RST that corresponds to one of these bindings is encountered.</source>
          <target state="translated">默认情况下实现的任何其他 WS 信任绑定 （续订、 取消和验证） 和相应的错误返回给调用方，如果遇到 RST 对应的这些绑定之一。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can, of course, override the appropriate methods (&lt;xref:System.IdentityModel.SecurityTokenService.Renew%2A&gt;, &lt;xref:System.IdentityModel.SecurityTokenService.Cancel%2A&gt;, and &lt;xref:System.IdentityModel.SecurityTokenService.Validate%2A&gt;) to implement these bindings in your STS.</source>
          <target state="translated">当然，可以重写适当的方法 (&lt;xref:System.IdentityModel.SecurityTokenService.Renew%2A&gt;， &lt;xref:System.IdentityModel.SecurityTokenService.Cancel%2A&gt;，和&lt;xref:System.IdentityModel.SecurityTokenService.Validate%2A&gt;) 在你 STS.中实施这些绑定&lt;/xref:System.IdentityModel.SecurityTokenService.Validate%2A&gt;&lt;/xref:System.IdentityModel.SecurityTokenService.Cancel%2A&gt;&lt;/xref:System.IdentityModel.SecurityTokenService.Renew%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Implementing a production-ready STS entails careful planning and considerable resources to mitigate the potential security risks inherent in exposing such a service.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 实现生产就绪 STS 需要仔细的规划和相当多的资源来缓解潜在的安全风险固有在公开此类服务。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Most developers using Windows Identity Foundation (WIF) will be developing applications that outsource identity management to an STS, rather than developing an STS itself.</source>
          <target state="translated">使用 Windows Identity Foundation (WIF) 的大多数开发人员将开发外包到 STS，标识管理的应用程序而不是本身开发 STS。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>WIF provides a Visual Studio extension, the Identity and Access Tool for Visual Studio 2012, to help developers test solutions in the development environment.</source>
          <target state="translated">WIF 提供了一个 Visual Studio 扩展，标识和访问工具对于 Visual Studio 2012，以帮助开发人员在开发环境中测试解决方案。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This tool includes an STS, <ph id="ph1">`LocalSTS`</ph>, that you can configure to serve specific claims to the application that you are developing.</source>
          <target state="translated">此工具包含 STS， <ph id="ph1">`LocalSTS`</ph>，你可以对其进行配置以提供到你正在开发的应用程序的特定声明。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information about the Identity and Access tool, see <bpt id="p1">[</bpt>Identity and Access Tool for Visual Studio 2012<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关标识和访问工具的详细信息，请参阅<bpt id="p1">[</bpt>标识和访问工具用于 Visual Studio 2012<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In some scenarios, <ph id="ph1">`LocalSTS`</ph> may not provide the functionality necessary to adequately test your application; for example, in a scenario that involves developing a custom token handler for use by an application.</source>
          <target state="translated">在某些情况下，<ph id="ph1">`LocalSTS`</ph>可能无法提供充分测试你的应用程序所必需的功能; 例如，在涉及的方案中开发应用程序使用的自定义令牌处理程序。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In these cases, you can derive from SecurityTokenService to create one or more simple STSs that can be deployed in your development environment and that can be used to test such features in your application.</source>
          <target state="translated">在这些情况下，你可以从派生 SecurityTokenService 创建一个或多个简单 Sts，可以在开发环境中部署并可用来在你的应用程序中测试此类功能。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The rest of this section focuses on the methods exposed by the SecurityTokenService class that enable you to implement a simple STS and extend the token issuance pipeline.</source>
          <target state="translated">本部分的其余部分重点介绍由 SecurityTokenService 类公开的方法，可用于实现简单的 STS 和扩展令牌颁发管道。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following list provides a brief overview of the methods of primary importance to the developer for use in a test or development environment.</source>
          <target state="translated">以下列表提供最为重要的方法的简要概述向开发人员在测试或开发环境中使用。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; method.</source>
          <target state="translated">-&lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;xref:System.IdentityModel.Scope&gt; object that contains information about the RP.</source>
          <target state="translated">此方法返回&lt;xref:System.IdentityModel.Scope&gt;包含 RP 有关的信息的对象。&lt;/xref:System.IdentityModel.Scope&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This object is used in the rest of the token issuance pipeline and includes information about the signing and encrypting credentials to use in the response, as well as the <ph id="ph1">`AppliesTo`</ph> and <ph id="ph2">`ReplyTo`</ph> (if required) addresses.</source>
          <target state="translated">此对象使用的令牌发出管道的其余部分中，并包含有关签名和加密凭据以在响应中，使用信息以及<ph id="ph1">`AppliesTo`</ph>和<ph id="ph2">`ReplyTo`</ph>（如果需要） 地址。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You must override this method.</source>
          <target state="translated">你必须重写此方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; method.</source>
          <target state="translated">-&lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;xref:System.Security.Claims.ClaimsIdentity&gt; object that contains the claims to return to the RP.</source>
          <target state="translated">此方法返回&lt;xref:System.Security.Claims.ClaimsIdentity&gt;包含要返回到 RP 的声明的对象。&lt;/xref:System.Security.Claims.ClaimsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You must override this method.</source>
          <target state="translated">你必须重写此方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">-&lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method implements the token request pipeline, which processes an incoming security token request (RST) and returns a response (RSTR) to the caller that contains a token that can be used to authenticate with an RP.</source>
          <target state="translated">此方法实现令牌请求管道，后者处理传入安全令牌请求 (RST) 并返回包含一个令牌，可用于使用 RP 进行身份验证调用方的响应 (RSTR)。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Many of the other methods defined in the SecurityTokenService class are called from this method, including the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; and &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; methods.</source>
          <target state="translated">从这种方法，调用许多 SecurityTokenService 类中定义的其他方法包括&lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;和&lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You do not have to override this method, but an understanding of the token request pipeline it implements may be helpful.</source>
          <target state="translated">无需重写此方法，但它实现令牌请求管道了解可能很有帮助。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An STS is configured through the &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&gt; class.</source>
          <target state="translated">STS 配置通过&lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&gt;类。&lt;/xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Called from derived classes to initialize the <bpt id="p1">&lt;xref href="System.IdentityModel.SecurityTokenService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified configuration settings.</source>
          <target state="translated">若要初始化的派生类中调用<bpt id="p1">&lt;xref href="System.IdentityModel.SecurityTokenService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的配置设置。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use this constructor to initialize scope provider and token issuer certificate.</source>
          <target state="translated">使用此构造函数初始化范围提供程序和令牌颁发者证书。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the settings for the STS.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含 sts 的设置。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;securityTokenServiceConfiguration&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;securityTokenServiceConfiguration&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous WS-Trust Cancel request.</source>
          <target state="translated">当在派生类中重写，开始 WS 信任取消的异步请求。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">此方法的默认实现将引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌请求者的标识。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示安全令牌请求。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">这包括请求消息，以及其他客户端相关信息，如授权上下文。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous cancel operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;可接收异步取消操作完成通知的委托。&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous cancel operation.</source>
          <target state="translated">包含与异步取消操作相关联的状态信息的对象。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous cancel operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;引用异步取消操作。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous call to the &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*&gt; method.</source>
          <target state="translated">当在派生类中重写，开始对的异步调用&lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">此方法的默认实现将引发一种&lt;xref:System.NotImplementedException&gt;。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌请求者的标识。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示安全令牌请求。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">这包括请求消息，以及其他客户端相关信息，如授权上下文。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains information about the relying party associated with the request.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，包含有关与请求关联的信赖方信息。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;可接收异步操作完成通知的委托。&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous operation.</source>
          <target state="translated">包含与异步操作关联的状态信息的对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;引用异步操作。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous call for the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope*&gt; method.</source>
          <target state="translated">当在派生类中重写，开始异步调用的&lt;xref:System.IdentityModel.SecurityTokenService.GetScope*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.GetScope*&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">此方法的默认实现将引发一种&lt;xref:System.NotImplementedException&gt;。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌请求者的标识。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示安全令牌请求。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">这包括请求消息，以及其他客户端相关信息，如授权上下文。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;可接收异步操作完成通知的委托。&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous operation.</source>
          <target state="translated">包含与异步操作关联的状态信息的对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous cancel operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;引用异步取消操作。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous WS-Trust Issue request.</source>
          <target state="translated">当在派生类中重写，开始一个异步 WS 信任发出请求。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">此方法的默认实现将引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌请求者的标识。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示安全令牌请求。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">这包括请求消息，以及其他客户端相关信息，如授权上下文。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous issue operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;可接收异步问题操作完成通知的委托。&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous issue operation.</source>
          <target state="translated">包含与异步问题操作关联的状态信息的对象。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous issue operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;引用异步问题操作。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous WS-Trust Renew request.</source>
          <target state="translated">当在派生类中重写，开始异步 WS 信任续订请求。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">此方法的默认实现将引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌请求者的标识。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示安全令牌请求。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">这包括请求消息，以及其他客户端相关信息，如授权上下文。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous renew operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;可接收异步完成通知的委托续订操作。&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous renew operation.</source>
          <target state="translated">包含与异步相关联的状态信息的对象的续订操作。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous renew operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;引用异步续订操作。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous WS-Trust Validate request.</source>
          <target state="translated">当在派生类中重写，开始异步 WS 信任验证请求。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">此方法的默认实现将引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌请求者的标识。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示安全令牌请求。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">这包括请求消息，以及其他客户端相关信息，如授权上下文。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous validate operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;可接收异步完成通知的委托验证操作。&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous validate operation.</source>
          <target state="translated">包含与异步相关联的状态信息的对象验证操作。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous validate operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;引用异步验证操作。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, processes a WS-Trust Cancel request.</source>
          <target state="translated">当在派生类中重写，处理 Ws-trust 取消请求。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">此方法的默认实现将引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌请求者的标识。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示安全令牌请求。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">这包括请求消息，以及其他客户端相关信息，如授权上下文。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示 RSTR 以返回到调用方。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Creates an instance of a &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;.</source>
          <target state="translated">创建一种&lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;。&lt;/xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;的实例</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Invoked during token issuance after &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;.</source>
          <target state="translated">在后&lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;.&lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;令牌颁发过程中调用</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The incoming token request.</source>
          <target state="translated">传入的令牌请求。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.Scope<bpt id="p1">*</bpt>&gt; object returned from &lt;xref:System.IdentityModel.SecurityTokenService.GetScope<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>1&gt; 从返回的对象&lt;&gt; <ept id="p1">*</ept>1&gt;。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;.&lt;/xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;scope&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;scope&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous WS-Trust Cancel request.</source>
          <target state="translated">当在派生类中重写，完成异步的 WS 信任取消请求。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">此方法的默认实现将引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginCancel*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;返回通过调用&lt;xref:System.IdentityModel.SecurityTokenService.BeginCancel*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.BeginCancel*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示 RSTR 以返回到调用方。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt; method.</source>
          <target state="translated">当在派生类中重写，完成对异步调用&lt;xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">此方法的默认实现将引发一种&lt;xref:System.NotImplementedException&gt;。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;返回通过调用&lt;xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the collection of claims that will be placed in the issued security token.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，包含将被放入颁发的安全令牌的声明的集合。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt; method.</source>
          <target state="translated">当在派生类中重写，完成对异步调用&lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">此方法的默认实现将引发一种&lt;xref:System.NotImplementedException&gt;。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;返回通过调用&lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that encapsulates the relying party (RP) information associated with the request (RST) specified in the call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt; method.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>封装到调用中指定的请求 (RST) 关联的信赖方 (RP) 信息&lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous WS-Trust Issue request.</source>
          <target state="translated">当在派生类中重写，完成异步 WS 信任颁发请求。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">此方法的默认实现将引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginIssue*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;返回通过调用&lt;xref:System.IdentityModel.SecurityTokenService.BeginIssue*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.BeginIssue*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示 RSTR 以返回到调用方。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous WS-Trust Renew request.</source>
          <target state="translated">当在派生类中重写，完成异步的 WS 信任续订请求。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">此方法的默认实现将引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginRenew*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;返回通过调用&lt;xref:System.IdentityModel.SecurityTokenService.BeginRenew*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.BeginRenew*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示 RSTR 以返回到调用方。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous WS-Trust Validate request.</source>
          <target state="translated">当在派生类中重写，完成异步的 WS 信任验证请求。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">此方法的默认实现将引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginValidate*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;返回通过调用&lt;xref:System.IdentityModel.SecurityTokenService.BeginValidate*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.BeginValidate*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示 RSTR 以返回到调用方。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets the name of the security token service (STS).</source>
          <target state="translated">获取安全令牌服务 (STS) 的名称。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">从默认的令牌颁发管道实现中调用此方法&lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default implementation returns the &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A&gt; property from configuration accessed through the &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt; property.</source>
          <target state="translated">默认实现返回&lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A&gt;从通过访问的配置属性&lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt;属性。&lt;/xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt; &lt;/xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The issuer name.</source>
          <target state="translated">颁发者名称中。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, this method returns a collection of output subjects to be included in the issued token.</source>
          <target state="translated">当在派生类中重写此方法返回的输出的科目，以便包括已颁发令牌中的集合。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The GetOutputClaimsIdentity method is called from the token issuance pipeline, which is implemented by the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">GetOutputClaimsIdentity 方法调用从令牌颁发管道，由实现&lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>It returns an &lt;xref:System.Security.Claims.ClaimsIdentity&gt; that contains the claims to include in the issued security token based on the requestor of the token (the <ph id="ph1">`principal`</ph> parameter), the incoming RST (the <ph id="ph2">`request`</ph> parameter), and the relying party for which the token is intended (the <ph id="ph3">`scope`</ph> parameter).</source>
          <target state="translated">它将返回&lt;xref:System.Security.Claims.ClaimsIdentity&gt;，包含要包含在基于令牌请求者颁发的安全令牌中的声明 (<ph id="ph1">`principal`</ph>参数)，传入的 RST (<ph id="ph2">`request`</ph>参数)，和信赖方的令牌的目标 (<ph id="ph3">`scope`</ph>参数)。&lt;/xref:System.Security.Claims.ClaimsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The logic in this method is primarily concerned with answering the following questions:      -   <bpt id="p1">**</bpt>Which claim types should be included in the response based on the RP for which it is intended?<ept id="p1">**</ept></source>
          <target state="translated">此方法中的逻辑主要关心的回答以下问题:-<bpt id="p1">**</bpt>哪种声明类型应包含在基于所针对的 RP 响应？<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Typically this is decided on a per-RP basis from lists of claim types required for each RP or on a per-request basis by examining the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A&gt; property of the request.</source>
          <target state="translated">这通常通过检查决定每个 RP 根据从列表中的所需的每个 RP 的声明类型或基于每个请求&lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A&gt;的请求的属性。&lt;/xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>However, the logic and details for determining the claims to include in the response is completely up to your implementation.</source>
          <target state="translated">但是的逻辑和用于确定要在响应中包含的声明的详细信息负责完全实现。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Which claim values should be assigned to the claims in the response?<ept id="p1">**</ept></source>
          <target state="translated">-<bpt id="p1">**</bpt>哪种声明值应分配到响应中的声明？<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For an Identity Provider (IP-STS) this typically means using one or more claims in the requestor’s &lt;xref:System.Security.Claims.ClaimsPrincipal&gt; (provided by the <ph id="ph1">`principal`</ph> parameter) to access a store (or other entity) to return values for the required claim types.</source>
          <target state="translated">对于标识提供程序 (IP STS)，这通常意味着在请求者的使用一个或多个声明&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;(由<ph id="ph1">`principal`</ph>参数) 来访问应用商店 （或其他实体） 以返回所需的声明类型的值。&lt;/xref:System.Security.Claims.ClaimsPrincipal&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For a Federation Provider (R-STS) this typically means performing some kind of processing on the requestor’s incoming claims to fulfill the request; perhaps performing filtering or transformation on some claims presented by the requestor, while passing others through unmodified.</source>
          <target state="translated">对于联合身份验证提供程序 (R STS)，这通常意味着对请求者的传入声明，从而满足请求; 执行某种类型的处理可能对提供者，同时传递其他通过未修改某些声明执行筛选或转换。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Of course, as in the case of deciding which claims to include in the response, the details and logic of how to determine the values of these claims is up to your implementation.</source>
          <target state="translated">当然，如下所示决定要在响应中包含的声明的情况下，在详细信息和如何确定这些声明的值的逻辑负责你的实现。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌请求者的标识。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示安全令牌请求。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">这包括请求消息，以及其他客户端相关信息，如授权上下文。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains information about the relying party associated with the request.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，包含有关与请求关联的信赖方信息。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This is the <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that was returned by the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope*&gt; method.</source>
          <target state="translated">这是<bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>返回的对象&lt;xref:System.IdentityModel.SecurityTokenService.GetScope*&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.GetScope*&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the collection of claims that will be placed in the issued security token.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，包含将被放入颁发的安全令牌的声明的集合。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets the proof token to be included in the response (RSTR).</source>
          <target state="translated">获取要包括在响应 (RSTR) 证明令牌。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">从默认的令牌颁发管道实现中调用此方法&lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The default implementation returns a proof descriptor or throws an appropriate exception.</source>
          <target state="translated">默认实现返回校验描述符或引发适当的异常。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the incoming token request (RST).</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示传入的令牌请求 (RST)。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance that encapsulates information about the relying party.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>封装有关信赖方的信息的实例。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.ProofDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the newly created proof descriptor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.ProofDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示新创建的证明描述符。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the bearer token case.</source>
          <target state="translated">证明描述符可以是一个非对称校验描述符，对称校验描述符，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>持有者令牌用例中。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;scope&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;scope&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets the requestor's proof encrypting credentials.</source>
          <target state="translated">获取加密凭据的请求者的证明。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This method is called from the &lt;xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt; method.</source>
          <target state="translated">此方法调用从&lt;xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The default implementation does the following.</source>
          <target state="translated">默认实现执行以下操作。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`null`</ph> if there is no encryption token specified in the request (the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName&gt; property is <ph id="ph2">`null`</ph>).</source>
          <target state="translated">返回<ph id="ph1">`null`</ph>不是否有任何请求中指定的加密令牌 (&lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName&gt;属性是<ph id="ph2">`null`</ph>)。&lt;/xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Otherwise, if it can get the token as an &lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;, it returns credentials based on that token.</source>
          <target state="translated">否则为如果它可以获取作为令牌&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;，它将返回基于该令牌的凭据。&lt;/xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If it cannot resolve the token as an &lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;, a &lt;xref:System.IdentityModel.RequestFailedException&gt; is thrown.</source>
          <target state="translated">如果无法解析作为令牌&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;、&lt;xref:System.IdentityModel.RequestFailedException&gt;引发。&lt;/xref:System.IdentityModel.RequestFailedException&gt; &lt;/xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the incoming token request (RST).</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示传入的令牌请求 (RST)。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.EncryptingCredentials"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the requestor’s encrypting credentials.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.EncryptingCredentials"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象，表示请求者的加密凭据。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Creates the response (RSTR) that contains the issued token by using the specified request (RST) and security token descriptor.</source>
          <target state="translated">创建使用指定的请求 (RST) 和安全令牌描述符包含已颁发的令牌的响应 (RSTR)。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The GetResponse method is called as the last step from the token issuance pipeline, which is implemented by the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">从令牌颁发管道，由实现，最后一步调用 GetResponse 方法，则&lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>It creates and returns the response (RSTR) by using the original incoming request (RST) and the token descriptor that was built up during previous steps in the token issuance pipeline.</source>
          <target state="translated">它创建，并通过使用原始的传入请求 (RST) 和令牌颁发管道中的上一个步骤期间建立的令牌描述符返回响应 (RSTR)。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The default implementation creates the RSTR by passing the RST specified in the request parameter to the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName&gt; constructor, invoking the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName&gt; method on the token descriptor passed into GetResponse to apply its properties to the newly created RSTR, setting the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A&gt; property on the RSTR by using the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A&gt; property on the token descriptor, and finally setting the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A&gt; property on the RSTR according to the following table:      |<ph id="ph1">`RST.ReplyTo`</ph> property|&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt; property.|<ph id="ph2">`RSTR.ReplyTo`</ph> property|   |----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|   |Set|Not Set|Not Set|   |Set|Set|&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt;|   |Not Set|Set|Not Set|   |Not Set|Not Set|Not Set|</source>
          <target state="translated">默认实现将 RSTR 创建通过传递 RST&lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName&gt;构造函数的请求参数中指定调用在传入 GetResponse 要应用于新创建的 RSTR，通过使用&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A&gt;属性上的令牌的描述符，并在最后上按下表 RSTR 设置&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A&gt;属性设置 RSTR&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A&gt;属性其属性的令牌描述符上&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName&gt;方法:      |<ph id="ph1">`RST.ReplyTo`</ph>属性 |&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt;属性。 |<ph id="ph2">`RSTR.ReplyTo`</ph>属性 |  |----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  |设置 |未设置 |未设置 |  |设置 |设置 |&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt;|  |未设置 |设置 |未设置 |  |未设置 |未设置 |Not Set|&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt;&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt;&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName&gt;&lt;/xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A&gt;&lt;/xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A&gt;&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A&gt;&lt;/xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The RST that contains the token request.</source>
          <target state="translated">包含令牌请求 RST。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The token descriptor that contains the information to use for the issued token.</source>
          <target state="translated">包含要用于颁发的令牌的信息令牌描述符。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The response (RSTR) or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a response cannot be created from the specified request and token descriptor.</source>
          <target state="translated">响应 (RSTR) 或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果无法从指定的请求和令牌描述符创建响应。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The default implementation returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">tokenDescriptor</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认实现返回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">tokenDescriptor</ph> <ept id="p2">&lt;/code&gt;</ept>参数是<bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains information about the relying party (RP) associated with the specified request (RST).</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，其中包含有关与指定的请求 (RST) 关联的信赖方 (RP) 的信息。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>You must override this method in your implementation of the <bpt id="p1">&lt;xref href="System.IdentityModel.SecurityTokenService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">必须实现中重写此方法<bpt id="p1">&lt;xref href="System.IdentityModel.SecurityTokenService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The GetScope method is called from the token issuance pipeline after the &lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt; method and should return a &lt;xref:System.IdentityModel.Scope&gt; object configured for the incoming request.</source>
          <target state="translated">GetScope 方法调用从令牌颁发管道后&lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt;方法，应返回&lt;xref:System.IdentityModel.Scope&gt;为传入的请求配置的对象。&lt;/xref:System.IdentityModel.Scope&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>(The token issuance pipeline is implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.) The &lt;xref:System.IdentityModel.Scope&gt; object encapsulates information about the RP associated with the security token request (RST).</source>
          <target state="translated">(在中实现令牌颁发管道&lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;方法。)&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;&lt;xref:System.IdentityModel.Scope&gt;对象封装有关 RP 与安全令牌请求 (RST) 相关联的信息。&lt;/xref:System.IdentityModel.Scope&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This includes information about the encrypting and signing credentials to be used with the RP and whether or not to encrypt any issued tokens and/or symmetric keys in the response.</source>
          <target state="translated">这包括有关要用于 RP 和加密任何已颁发的令牌和/或响应中的对称密钥的加密和签名凭据的信息。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Some typical tasks performed in the GetScope method are:      -   Determine whether the RP for which the token is intended is a recognized RP.</source>
          <target state="translated">GetScope 方法中执行的一些典型任务包括:-确定的 RP 令牌所针对的是已识别的 RP。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>How this is accomplished depends on your implementation.</source>
          <target state="translated">如何完成此操作取决于您的实现。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>If the intended RP is not a valid RP for this STS, then the method should throw an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">如果预期的 RP 不是此 STS 有效 RP，通过然后方法应引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>-   Determine the signing credentials to be used in the response (RSTR) and set the &lt;xref:System.IdentityModel.Scope.SigningCredentials%2A&gt; property accordingly.</source>
          <target state="translated">-确定要用于响应 (RSTR) 和设置的签名凭据&lt;xref:System.IdentityModel.Scope.SigningCredentials%2A&gt;属性相应地。&lt;/xref:System.IdentityModel.Scope.SigningCredentials%2A&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>-   Determine whether the response and/or any included symmetrical keys should be encrypted and the credentials to be used for encryption.</source>
          <target state="translated">-确定是否应加密响应和/或任何包含的对称密钥以及要用于加密的凭据。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Set the &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;, &lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;, and &lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt; properties accordingly.</source>
          <target state="translated">设置&lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;， &lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;，和&lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt;属性相应地。&lt;/xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt; &lt;/xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt; &lt;/xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph>     &gt;  By default, the &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt; and &lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt; properties are set <ph id="ph2">`true`</ph> to prevent the STS from issuing tokens that are not secure.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 默认情况下，&lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;和&lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;属性设置<ph id="ph2">`true`</ph>以防止 STS 颁发是不安全的令牌。&lt;/xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt; &lt;/xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>It is recommended that these properties never be set to <ph id="ph1">`false`</ph> in a production environment.</source>
          <target state="translated">建议永远不会设置这些属性<ph id="ph1">`false`</ph>在生产环境中。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>-   Determine the address to which the response should be returned.</source>
          <target state="translated">-确定应返回响应的地址。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Set either the &lt;xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt; or &lt;xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt; property accordingly.</source>
          <target state="translated">设置&lt;xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt;或&lt;xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt;属性相应地。&lt;/xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt; &lt;/xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the client making the request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示客户端发出请求。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the incoming request (RST).</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>该对象表示传入的请求 (RST)。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that encapsulates the RP information associated with the request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>封装与请求关联的 RP 信息。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Gets the appropriate security token handler for issuing a security token of the specified type.</source>
          <target state="translated">颁发安全令牌的指定类型获取适当的安全令牌处理程序。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>In the default implementation if <ph id="ph1">`requestedTokenType`</ph> is <ph id="ph2">`null`</ph> or an empty string, the default token type from configuration is used.</source>
          <target state="translated">默认实现中如果<ph id="ph1">`requestedTokenType`</ph>是<ph id="ph2">`null`</ph>或空字符串，使用从配置的令牌类型的默认值。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This is specified by the &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A&gt; property of the STS configuration object accessed through the &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt; property.</source>
          <target state="translated">这通过指定&lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A&gt;通过访问 STS 配置对象的属性&lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt;属性。&lt;/xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt; &lt;/xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">从默认的令牌颁发管道实现中调用此方法&lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A string that contains the requested token type URI.</source>
          <target state="translated">包含所请求的令牌类型 URI 的字符串。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the token handler to be used for creating the issued security token.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示要用于创建已颁发的安全令牌的令牌处理程序。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the requested token type is not supported (there is no handler configured for the specified token type).</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不支持所请求的令牌类型 （没有配置为指定的令牌类型没有处理程序）。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Gets the lifetime for the issued token.</source>
          <target state="translated">获取已颁发令牌的生存期。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This method is normally called with the lifetime that arrived in the RST.</source>
          <target state="translated">与在 RST 中，传入的生存期通常调用此方法。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>In the default implementation, the token lifetime is calculated according to the following table.</source>
          <target state="translated">在默认实现中，令牌生存期是下表根据计算的。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>|Created (in)|Expires (in)|Created (in)|Expires (out)|   |--------------------|--------------------|--------------------|---------------------|   |<ph id="ph1">`null`</ph><ph id="ph2">|</ph><ph id="ph3">`null`</ph>|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt; + &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt;|   |C|<ph id="ph4">`null`</ph>|C|C + &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt;|   |<ph id="ph5">`null`</ph>|E|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;|E|   |C|E|C|E|       This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">|创建 （英寸） |过期 （英寸） |创建 （英寸） |过期 （出） |  |--------------------|--------------------|--------------------|---------------------|  |<ph id="ph1">`null`</ph><ph id="ph2">|</ph><ph id="ph3">`null`</ph>|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt; + &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt;|  |C |<ph id="ph4">`null`</ph>|C |C + &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt;|  |<ph id="ph5">`null`</ph>|E |&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;|E |  |C |E |C |E |      从默认的令牌颁发管道实现中调用此方法&lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;方法。&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; &lt;/xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt; &lt;/xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt; &lt;/xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt; &lt;/xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt; &lt;/xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.Lifetime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the requested lifetime.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.Lifetime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示请求的生存期。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.Lifetime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the granted lifetime.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.Lifetime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示授予的生存期。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Issues a security token.</source>
          <target state="translated">颁发安全令牌。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>This method implements the Issue binding defined in the WS-Trust specification.</source>
          <target state="translated">此方法实现 Ws-trust 规范中定义的问题绑定。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The default implementation of the Issue method processes the incoming request (RST) through a token issuance (claims issuance) pipeline and returns either a response (RSTR) that contains a security token with the appropriate claims to authenticate the requestor with the RP or an appropriate exception.</source>
          <target state="translated">问题方法的默认实现处理传入请求 (RST) 通过令牌颁发 （声明发出） 管道并返回响应 (RSTR)，其中包含具有相应声明进行身份验证与 RP 请求者的安全令牌或相应的异常。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The token issuance pipeline in the default implementation consists of calls to the following methods (of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class).</source>
          <target state="translated">令牌颁发管道中的默认实现包含对以下方法的调用 (的&lt;xref:System.IdentityModel.SecurityTokenService&gt;类)。&lt;/xref:System.IdentityModel.SecurityTokenService&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt; method to validate the request (RST).</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt;方法验证请求 (RST)。&lt;/xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; method to get a &lt;xref:System.IdentityModel.Scope&gt; object that contains information about the relying party (RP) associated with the request.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;方法以获取&lt;xref:System.IdentityModel.Scope&gt;对象，其中包含与请求关联的信赖方 (RP) 有关的信息。&lt;/xref:System.IdentityModel.Scope&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>You must override this method.</source>
          <target state="translated">你必须重写此方法。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; returns <ph id="ph1">`null`</ph>, a &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">如果&lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;返回<ph id="ph1">`null`</ph>、&lt;xref:System.InvalidOperationException&gt;引发。&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A&gt; method to return a security token descriptor based on the RST and the &lt;xref:System.IdentityModel.Scope&gt; object returned in the previous step.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A&gt;方法以返回安全令牌描述符基于 RST 和&lt;xref:System.IdentityModel.Scope&gt;上一步中返回的对象。&lt;/xref:System.IdentityModel.Scope&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The security token descriptor (&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor&gt;) contains information about the request in a form that can be used by a token handler.</source>
          <target state="translated">安全令牌描述符 (&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor&gt;) 包含有关可由标记处理程序的窗体中的请求的信息。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName&gt; property is set to the descriptor returned by the call.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName&gt;属性设置为调用所返回的描述符。&lt;/xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph> is returned or if the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A&gt; property of the descriptor is <ph id="ph2">`null`</ph>, an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">如果<ph id="ph1">`null`</ph>返回或如果&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A&gt;属性的描述符是<ph id="ph2">`null`</ph>、&lt;xref:System.InvalidOperationException&gt;引发。&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The exception is also thrown if the &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName&gt; property is <ph id="ph1">`true`</ph> but the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A&gt; property on the returned descriptor is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">如果也会引发异常&lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName&gt;属性是<ph id="ph1">`true`</ph>但&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A&gt;属性返回的描述符<ph id="ph2">`null`</ph>。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A&gt; &lt;/xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A&gt; method to get the appropriate token handler based on the kind of token requested.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A&gt;方法以获取适当的令牌处理程序根据请求标记的类型。&lt;/xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph> is returned, a &lt;xref:System.NotImplementedException&gt; is thrown.</source>
          <target state="translated">如果<ph id="ph1">`null`</ph>返回，&lt;xref:System.NotImplementedException&gt;引发。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A&gt; method to get the issuer name for the token.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A&gt;方法以获取令牌的颁发者名称。&lt;/xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Throws an &lt;xref:System.InvalidOperationException&gt; if the name is <ph id="ph1">`null`</ph> or empty; otherwise sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A&gt; property on the descriptor.</source>
          <target state="translated">引发&lt;xref:System.InvalidOperationException&gt;如果名称是<ph id="ph1">`null`</ph>或为空; 否则，将设置&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A&gt;有关描述符的属性。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A&gt; method to get the lifetime for the token and sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A&gt; property on the descriptor.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A&gt;方法以获取的令牌和集的生存期&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A&gt;有关描述符的属性。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt; method to get the proof token to include in the issued token and sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A&gt; property on the descriptor.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt;方法以获取证明令牌包含在已颁发的令牌以及集&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A&gt;有关描述符的属性。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>8.</source>
          <target state="translated">8.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; method to get the claims to include in the issued token and sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A&gt; property on the descriptor.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;方法以获取要包括在颁发的令牌和集的声明&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A&gt;有关描述符的属性。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>You must override this method.</source>
          <target state="translated">你必须重写此方法。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>9.</source>
          <target state="translated">9.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetResponse%2A&gt; method to create a response (RSTR) that contains the issued token.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetResponse%2A&gt;方法来创建包含已颁发的令牌的响应 (RSTR)。&lt;/xref:System.IdentityModel.SecurityTokenService.GetResponse%2A&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>You can override the Issue method to implement a custom token issuance pipeline; however this is typically not necessary in the development and test environments for which most custom implementations of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class are intended.</source>
          <target state="translated">你可以重写问题方法来实现一个自定义令牌颁发管道;但是这通常是不必要在开发和测试环境中的哪些最自定义实现&lt;xref:System.IdentityModel.SecurityTokenService&gt;类旨在。&lt;/xref:System.IdentityModel.SecurityTokenService&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>In many of these cases you override the &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; and &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; methods and optionally override the &lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt; method  to provide a serviceable STS for your environment.</source>
          <target state="translated">在许多这类情况你重写&lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;和&lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;方法和选择重写&lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt;方法来为你的环境提供可维修 STS。&lt;/xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>If further customization is necessary you can often provide it by overriding the methods that implement each stage of the default token issuance pipeline listed above.</source>
          <target state="translated">是否需要进一步执行自定义你通常可以通过重写实现令牌颁发管道上面列出的默认值的每个阶段的方法提供它。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌请求者的标识。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示安全令牌请求。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">这包括请求消息，以及其他客户端相关信息，如授权上下文。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the issued security token.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含颁发的安全令牌。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Gets or sets the principal associated with the current instance.</source>
          <target state="translated">获取或设置与当前实例关联的主体。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the current principal.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，它表示当前的主体。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, processes a WS-Trust Renew request.</source>
          <target state="translated">当在派生类中重写，处理 Ws-trust 续订请求。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">此方法的默认实现将引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌请求者的标识。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示安全令牌请求。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">这包括请求消息，以及其他客户端相关信息，如授权上下文。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示 RSTR 以返回到调用方。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets or sets the security token request (RST) associated with the current instance.</source>
          <target state="translated">获取或设置与当前实例关联的安全令牌请求 (RST)。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含请求。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Gets or sets the scope associated with the current instance.</source>
          <target state="translated">获取或设置与当前实例关联的范围。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the configuration for the token issuance request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌颁发请求的配置。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the current instance.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与当前实例相关联。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The security token descriptor that is associated with the current instance.</source>
          <target state="translated">当前实例相关联的安全令牌描述符。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>An attempt to set the property to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> occurs.</source>
          <target state="translated">试图将属性设置为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>时发生。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Gets the owner configuration instance.</source>
          <target state="translated">获取配置实例的所有者。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the configuration for the current instance.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含当前实例的配置。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, processes a WS-Trust Validate request.</source>
          <target state="translated">当在派生类中重写，处理 WS 信任验证请求。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">此方法的默认实现将引发&lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示令牌请求者的标识。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示安全令牌请求。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">这包括请求消息，以及其他客户端相关信息，如授权上下文。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示 RSTR 以返回到调用方。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Validates the security token request (RST) encapsulated by this instance.</source>
          <target state="translated">安全令牌对请求进行验证 (RST) 封装此实例。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The ValidateRequest method is called from the token issuance pipeline (the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method) to validate the incoming RST.</source>
          <target state="translated">从令牌颁发管道调用 ValidateRequest 方法 (&lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;方法) 来验证传入的 RST。&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The RST is validated against the requirements (policy) of the STS and an appropriate exception is thrown if it is not valid.</source>
          <target state="translated">RST 验证对 STS 的要求 （策略），并且如果它不是有效引发相应的异常。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The default implementation of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A&gt; property of the request must be set to &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName&gt;).</source>
          <target state="translated">默认实现&lt;xref:System.IdentityModel.SecurityTokenService&gt;类支持仅 RST RSTR 模式和 Ws-trust 规范的问题绑定 (&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A&gt;的请求的属性必须设置为&lt;xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName&gt;)。&lt;/xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName&gt; &lt;/xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The default implementation of this method enforces these requirements (and others noted in the exceptions section).</source>
          <target state="translated">此方法的默认实现强制执行这些需求 （和其他异常部分中所述）。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>You can override this method if you must enforce different validation requirements for your custom STS.</source>
          <target state="translated">如果必须强制实施不同的验证要求你自定义 STS，您可以重写此方法。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>该对象表示请求。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>-or-       The <ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*&gt;</ph> property of the request is not set to <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-或-<ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*&gt;</ph>的请求的属性未设置为<bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>-or-       The <ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*&gt;</ph> property of the request is not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or one of the constants defined in the <bpt id="p2">&lt;xref href="System.IdentityModel.Protocols.WSTrust.KeyTypes"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">-或-<ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*&gt;</ph>的请求的属性不是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或中定义的常量之一<bpt id="p2">&lt;xref href="System.IdentityModel.Protocols.WSTrust.KeyTypes"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>-or-       The <ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*&gt;</ph> of the request is <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the <bpt id="p2">&lt;xref uid="langword_csharp_KeySize" name="KeySize" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element is present, but its value is not equal to zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*&gt;</ph>请求<bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_KeySize" name="KeySize" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>元素存在，但其值是否不等于零。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The STS does not support the request token type (based on the value of the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*&gt; property of the request).</source>
          <target state="translated">STS 不支持请求的令牌类型 (基于值&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*&gt;属性的请求)。&lt;/xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>