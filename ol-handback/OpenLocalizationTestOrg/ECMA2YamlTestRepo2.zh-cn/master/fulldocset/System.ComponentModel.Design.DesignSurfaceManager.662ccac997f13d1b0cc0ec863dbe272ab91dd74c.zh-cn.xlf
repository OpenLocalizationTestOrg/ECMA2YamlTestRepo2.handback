<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbe3038dbd6853d5b2ffd171a900755dfb7aaa05</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.DesignSurfaceManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aea0c34999ff3a5943b421338c09c8f382ab8a46</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffb49dee0809272db3f921eda0f01b188e02d6d3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manages a collection of <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">管理集合<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The DesignSurfaceManager class is designed to be a container of &lt;xref:System.ComponentModel.Design.DesignSurface&gt; objects.</source>
          <target state="translated">DesignSurfaceManager 类旨在作为容器的&lt;xref:System.ComponentModel.Design.DesignSurface&gt;对象。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It provides common services that handle event routing between designers, property windows, and other global objects.</source>
          <target state="translated">它提供公共服务该句柄事件之间的路由设计器，属性窗口和其他全局对象。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Using DesignSurfaceManager is optional, but it is recommended if you intend to have several designer windows.</source>
          <target state="translated">使用 DesignSurfaceManager 是可选的但建议如果您计划让多个设计器窗口。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The DesignSurfaceManager class provides several design-time services automatically.</source>
          <target state="translated">DesignSurfaceManager 类自动提供了一些设计时服务。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can override each of these services by replacing them in the protected &lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt; property.</source>
          <target state="translated">您可以通过将它们替换在受保护覆盖每个这些服务&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;属性。&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To replace a service, override the constructor, call base, and make any changes through the protected &lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt; property.</source>
          <target state="translated">若要替换服务，重写构造函数、 调用基类，和通过受保护的任何更改&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;属性。&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>All services added to the service container that implement the &lt;xref:System.IDisposable&gt; interface are disposed when the design surface manager is disposed.</source>
          <target state="translated">已添加到服务容器的所有实现服务&lt;xref:System.IDisposable&gt;释放设计图面管理器时，将释放接口。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The DesignSurfaceManager class provides the &lt;xref:System.ComponentModel.Design.IDesignerEventService&gt; interface as the default service.</source>
          <target state="translated">DesignSurfaceManager 类提供&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;为默认服务的接口。&lt;/xref:System.ComponentModel.Design.IDesignerEventService&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt; provides a global eventing mechanism for designer events.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;提供设计器事件的全局事件处理机制。&lt;/xref:System.ComponentModel.Design.IDesignerEventService&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>With this mechanism, an application is informed when a designer becomes active.</source>
          <target state="translated">通过此机制，应用程序将设计器变为活动状态时得到通知。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.</source>
          <target state="translated">该服务提供设计器的集合和其中全局对象，如属性窗口中，可以监视选择一个位置更改事件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A parent service provider.</source>
          <target state="translated">父服务提供程序。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</source>
          <target state="translated">如果它们无法解析的设计图面管理器，服务请求将转发到此提供程序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets the active designer.</source>
          <target state="translated">获取或设置活动设计器。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The ActiveDesignSurface property should be set by the designer's user interface whenever a designer becomes the active window.</source>
          <target state="translated">当设计器无法活动窗口，则应该通过设计器的用户界面将设置 ActiveDesignSurface 属性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The default implementation of this property works with the default implementation of the &lt;xref:System.ComponentModel.Design.IDesignerEventService&gt; interface to notify interested parties that a new designer is now active.</source>
          <target state="translated">此属性的默认实现适用于的默认实现&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;接口来通知相关的方新设计器目前处于活动状态。&lt;/xref:System.ComponentModel.Design.IDesignerEventService&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you provide your own implementation of &lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;, you should override this property to notify your service appropriately.</source>
          <target state="translated">如果提供您自己的实现&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;，则应重写此属性以适当地通知你的服务。&lt;/xref:System.ComponentModel.Design.IDesignerEventService&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This property can be set to <ph id="ph1">`null`</ph>, indicating that no designer is active.</source>
          <target state="translated">此属性可以设置为<ph id="ph1">`null`</ph>，指示没有设计器处于活动状态。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The active designer.</source>
          <target state="translated">活动设计器。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Occurs when the currently active designer changes.</source>
          <target state="translated">当前活动设计器更改时发生。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Creates an instance of a design surface.</source>
          <target state="translated">创建实例的设计图面。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A new design surface instance.</source>
          <target state="translated">新的设计图面实例中。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Creates an instance of a design surface.</source>
          <target state="translated">创建实例的设计图面。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you want to conveniently add additional per-designer services, use the <ph id="ph1">`parentProvider`</ph> parameter to provide a service provider for this design surface.</source>
          <target state="translated">如果你想要方便地添加其他每个设计器服务，使用<ph id="ph1">`parentProvider`</ph>参数来为此设计图面中提供的服务提供程序。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The CreateDesignSurface method creates a merged service provider that can satisfy service requests from both the given service provider as well as the &lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt; itself.</source>
          <target state="translated">CreateDesignSurface 方法创建的合并的服务提供程序能够满足从给定的服务提供程序的服务请求以及&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;本身。&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The CreateDesignSurface method then passes this service provider into the &lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt; method.</source>
          <target state="translated">CreateDesignSurface 方法随后将传递到此服务提供商&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;方法。&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>After &lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt; returns the design surface, the CreateDesignSurface method tries to obtain the &lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;.</source>
          <target state="translated">后&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;返回设计图面上，方法尝试获取&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;.&lt;/xref:System.ComponentModel.Design.IDesignerEventService&gt; CreateDesignSurface&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If it is present, and if it is the instance of the service that &lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt; provided by default, the CreateDesignSurface method raises the &lt;xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated&gt; event.</source>
          <target state="translated">如果不存在，并且它是服务的实例，&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;提供默认情况下，CreateDesignSurface 方法引发&lt;xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated&gt;事件。&lt;/xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated&gt; &lt;/xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A parent service provider.</source>
          <target state="translated">父服务提供程序。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object.</source>
          <target state="translated">新的合并的服务提供程序将创建，将首先请求一种服务，此提供程序并分派到设计图面管理器对象的任何故障。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This merged provider will be passed into the &lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*&gt; method.</source>
          <target state="translated">此合并的提供程序将传递给&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*&gt;方法。&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A new design surface instance.</source>
          <target state="translated">新的设计图面实例中。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;parentProvider&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;parentProvider&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Implementation that creates the design surface.</source>
          <target state="translated">创建在设计图面的实现。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The CreateDesignSurfaceCore method is called by both &lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt; methods.</source>
          <target state="translated">两个调用 CreateDesignSurfaceCore 方法&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;方法。&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>It is the implementation that actually creates the design surface.</source>
          <target state="translated">它是实际创建设计图面的实现。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The default implementation just returns a new &lt;xref:System.ComponentModel.Design.DesignSurface&gt;.</source>
          <target state="translated">默认实现只返回新&lt;xref:System.ComponentModel.Design.DesignSurface&gt;。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You may override this method to provide a custom object that derives from the &lt;xref:System.ComponentModel.Design.DesignSurface&gt; class.</source>
          <target state="translated">你可以重写该方法以提供自定义对象派生自&lt;xref:System.ComponentModel.Design.DesignSurface&gt;类。&lt;/xref:System.ComponentModel.Design.DesignSurface&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A service provider to pass to the design surface.</source>
          <target state="translated">要传递到设计图面服务提供程序。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This is either an instance of <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an object that implements &lt;xref:System.IServiceProvider&gt;, and represents a merge between the service provider of the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class and an externally passed provider.</source>
          <target state="translated">这是任一实例<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或实现的对象&lt;xref:System.IServiceProvider&gt;，和表示的服务提供程序之间的合并<bpt id="p2">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>类和外部传递提供程序。&lt;/xref:System.IServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A new design surface instance.</source>
          <target state="translated">新的设计图面实例中。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Occurs when a designer is created.</source>
          <target state="translated">创建设计器时出现。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Occurs when a designer is disposed.</source>
          <target state="translated">释放设计器时发生。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets a collection of design surfaces.</source>
          <target state="translated">获取设计图面的集合。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The DesignSurfaces property is implemented directly on top of &lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;, so if you provide your own implementation of that service, this property uses your implementation.</source>
          <target state="translated">DesignSurfaces 属性实现直接的顶部&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;，因此如果你提供的该服务实现，此属性使用您的实现。&lt;/xref:System.ComponentModel.Design.IDesignerEventService&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A collection of design surfaces that are currently hosted by the design surface manager.</source>
          <target state="translated">当前承载的设计图面管理器的设计图面的集合。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的资源<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The public Dispose method follows the standard &lt;xref:System.IDisposable&gt; pattern.</source>
          <target state="translated">公共的 Dispose 方法遵循标准&lt;xref:System.IDisposable&gt;模式。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Calling this method destroys the design surface manager.</source>
          <target state="translated">调用此方法将销毁设计图面管理器。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It also disposes the service container, which causes all services that implement &lt;xref:System.IDisposable&gt; to also be disposed.</source>
          <target state="translated">它还将释放导致实现的所有服务的服务容器&lt;xref:System.IDisposable&gt;也被释放。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal &lt;xref:System.IDisposable&gt; pattern.</source>
          <target state="translated">此方法的受保护的版本是<ph id="ph1">`virtual`</ph>，它遵循普通&lt;xref:System.IDisposable&gt;模式。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because &lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt; does not have any native code to clean up, it does not have a finalizer that calls &lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 由于&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;不具有任何本机代码，以清理时，它没有调用&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;.&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;终结器&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you need to call &lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;, you must add a finalizer yourself.</source>
          <target state="translated">如果你需要调用&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;，你必须自己添加一个终结器。&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The public &lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt; method follows the standard &lt;xref:System.IDisposable&gt; pattern.</source>
          <target state="translated">公共&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;方法遵循标准&lt;xref:System.IDisposable&gt;模式。&lt;/xref:System.IDisposable&gt; &lt;/xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Calling this method destroys the design surface manager.</source>
          <target state="translated">调用此方法将销毁设计图面管理器。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>It also disposes the service container, which causes all services that implement &lt;xref:System.IDisposable&gt; to also be disposed.</source>
          <target state="translated">它还将释放导致实现的所有服务的服务容器&lt;xref:System.IDisposable&gt;也被释放。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal &lt;xref:System.IDisposable&gt; pattern.</source>
          <target state="translated">此方法的受保护的版本是<ph id="ph1">`virtual`</ph>，它遵循普通&lt;xref:System.IDisposable&gt;模式。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because &lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt; does not have any native code to clean up, it does not have a finalizer that calls Dispose.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 由于&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;不具有任何本机代码，以清理时，它不具有一个调用 Dispose 的终结器。&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you need to call Dispose, you must add a finalizer yourself.</source>
          <target state="translated">如果你需要调用 Dispose，你必须自己添加一个终结器。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用<ph id="ph1">`Dispose`</ph>与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数为 true 时，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;引用。&lt;/xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose()`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets a service in the design surface manager’s service container.</source>
          <target state="translated">在设计图面管理器的服务容器中获取服务。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The GetService method forwards to any service provider that was given to the design surface manager at construction time.</source>
          <target state="translated">GetService 方法将转发到任何服务提供程序在构造时提供给设计图面管理器。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The service type to retrieve.</source>
          <target state="translated">要检索的服务类型。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An object that implements, or is a derived class of, the given service type; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the service does not exist in the service container.</source>
          <target state="translated">实现时，或者是的给定的服务类型; 一个派生的类的对象否则为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果服务不存在服务容器中。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Occurs when the global selection changes.</source>
          <target state="translated">当全局所选内容更改时发生。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This event is raised when the active designer's selection of component set changes.</source>
          <target state="translated">组件的活动设计器的选择集更改时，引发此事件。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This is mapped through the &lt;xref:System.ComponentModel.Design.IDesignerEventService&gt; interface.</source>
          <target state="translated">这通过映射&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;接口。&lt;/xref:System.ComponentModel.Design.IDesignerEventService&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets the design surface manager's ServiceContainer.</source>
          <target state="translated">获取设计图面管理器的 ServiceContainer。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The design surface manager's ServiceContainer.</source>
          <target state="translated">设计图面管理器的 ServiceContainer。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>