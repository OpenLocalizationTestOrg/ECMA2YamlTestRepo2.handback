<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1df74697c42b6d7608eb37143f457472cb861f7e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.UnhandledExceptionEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55c24fd161c7638f5aa74deb577d84ade66a73c9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88af0b19fae061cabcfe20b4d97595fd3402068c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the event that is raised when there is an exception that is not handled in any application domain.</source>
          <target state="translated">在任何应用程序域中不会对其进行处理的异常时引发的事件提供数据。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>UnhandledExceptionEventArgs provides access to the exception object and a flag indicating whether the common language runtime is terminating.</source>
          <target state="translated">UnhandledExceptionEventArgs 提供对异常对象和一个标志，指示是否正在终止公共语言运行时访问。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The UnhandledExceptionEventArgs is one of the parameters passed into &lt;xref:System.UnhandledExceptionEventHandler&gt; for the &lt;xref:System.AppDomain.UnhandledException?displayProperty=fullName&gt; event.</source>
          <target state="translated">UnhandledExceptionEventArgs 是传入的参数之一&lt;xref:System.UnhandledExceptionEventHandler&gt;为&lt;xref:System.AppDomain.UnhandledException?displayProperty=fullName&gt;事件。&lt;/xref:System.AppDomain.UnhandledException?displayProperty=fullName&gt; &lt;/xref:System.UnhandledExceptionEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information about event handler delegates, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关事件处理程序委托的详细信息，请参阅<bpt id="p1">[</bpt>事件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.UnhandledExceptionEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the exception object and a common language runtime termination flag.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.UnhandledExceptionEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与异常对象和一个公共语言运行时终止标志的类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The exception that is not handled.</source>
          <target state="translated">未处理的异常。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the runtime is terminating; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果运行时是否即将终止;，否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets the unhandled exception object.</source>
          <target state="translated">获取未经处理的异常对象。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This property returns an object of type &lt;xref:System.Object&gt; rather than one derived from &lt;xref:System.Exception&gt;.</source>
          <target state="translated">此属性返回类型&lt;xref:System.Object&gt;而不是一个派生自&lt;xref:System.Exception&gt;.&lt;/xref:System.Exception&gt;&lt;/xref:System.Object&gt;的对象</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Although the Common Language Specification requires that all exception types derive from &lt;xref:System.Exception&gt;, it is possible for methods to throw exceptions with objects not derived from &lt;xref:System.Exception&gt;.</source>
          <target state="translated">虽然公共语言规范中需要的所有异常类型都派生&lt;xref:System.Exception&gt;，则可能的方法引发异常不从&lt;xref:System.Exception&gt;.&lt;/xref:System.Exception&gt;派生的对象&lt;/xref:System.Exception&gt;从</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can do the following to work with this exception:      -   Apply the  &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt; attribute with a &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows%2A?displayProperty=fullName&gt; value of <ph id="ph1">`true`</ph> to the assembly that contains the event handler.</source>
          <target state="translated">你可以执行以下操作来处理此异常:-应用&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;特性与&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows%2A?displayProperty=fullName&gt;值<ph id="ph1">`true`</ph>到包含事件处理程序的程序集。&lt;/xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This wraps all exceptions not derived from the &lt;xref:System.Exception&gt; class in a &lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt; object.</source>
          <target state="translated">此包装不派生自的所有异常&lt;xref:System.Exception&gt;类&lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt;对象。&lt;/xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt; &lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can then safely cast (in C#) or convert (in Visual Basic) the object returned by this property to an &lt;xref:System.Exception&gt; object, and retrieve the original exception object from the &lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">然后，可以安全地强制转换 （在 C# 中) 或将此属性返回的对象转换 （在 Visual Basic)&lt;xref:System.Exception&gt;对象，并检索从原始的异常对象&lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A?displayProperty=fullName&gt; &lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Note that some compilers, such as the C# and Visual Basic compilers, automatically apply this attribute.</source>
          <target state="translated">请注意一些编译器，如 C# 和 Visual Basic 编译器，自动将应用此属性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   Cast the object returned by this property to an &lt;xref:System.Exception&gt; object.</source>
          <target state="translated">-将对象强制转换到此属性返回&lt;xref:System.Exception&gt;对象。&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The unhandled exception object.</source>
          <target state="translated">未经处理的异常对象中。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Indicates whether the common language runtime is terminating.</source>
          <target state="translated">指示公共语言运行时是否即将终止。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Beginning with the .NET Framework version 2.0, this property returns <ph id="ph1">`true`</ph> for most unhandled exceptions, unless an application compatibility flag is used to revert to the behavior of versions 1.0 and 1.1.</source>
          <target state="translated">从.NET Framework 2.0 版开始，此属性返回<ph id="ph1">`true`</ph>对于大多数未经处理的异常，除非应用程序兼容性标志，用于恢复为 1.0 和 1.1 版的行为。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The reason is that most unhandled exceptions in threads, including thread pool threads, are allowed to proceed naturally, which normally results in termination of the application.</source>
          <target state="translated">原因是最线程，包括线程池线程中未经处理的异常将可以继续当然，这通常会导致应用终止。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, including a list of cases in which the runtime does not terminate, see <bpt id="p1">[</bpt>Exceptions in Managed Threads<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，包括列表的情况下在其中运行时不会终止，请参阅<bpt id="p1">[</bpt>托管线程中的异常<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Version Information    The following applies to the .NET Framework versions 1.0 and 1.1: This property returns <ph id="ph1">`true`</ph> when an exception is received in, but not handled by, an application's main thread.</source>
          <target state="translated">以下规则适用于.NET framework 1.0 和 1.1 版的版本信息︰ 此属性返回<ph id="ph1">`true`</ph>接收在中，但未由应用程序的主线程异常时。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This property also returns <ph id="ph1">`true`</ph> if an unmanaged thread is executing managed code and receives an unhandled exception.</source>
          <target state="translated">此属性也会返回<ph id="ph1">`true`</ph>如果非托管的线程正在执行托管的代码，并且收到未处理的异常。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Finally, this property returns <ph id="ph1">`false`</ph> for thread pool threads and managed threads created by an application, because versions 1.0 and 1.1 catch unhandled exceptions in such threads and ignore them.</source>
          <target state="translated">最后，此属性返回<ph id="ph1">`false`</ph>的线程池线程和应用程序创建的因为 1.0 和 1.1 版中的此类线程中捕获未经处理的异常，并忽略它们的托管的线程。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the runtime is terminating; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果运行时是否即将终止;，否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>