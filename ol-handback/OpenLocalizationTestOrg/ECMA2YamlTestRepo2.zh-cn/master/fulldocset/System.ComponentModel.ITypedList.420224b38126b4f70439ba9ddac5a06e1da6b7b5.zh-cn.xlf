<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ea1994f1496824894066e864b37ae1925c21cf0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.ITypedList.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64387915229cd0e042322690c468ccca6ae0d573</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6dd27b5e8c9ff5ccf75935f134d9f1a0f34184b7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.</source>
          <target state="translated">提供功能以发现可绑定列表中，可用于绑定的属性要绑定到的对象的公共属性与不同的架构。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use this interface if, for instance, you are using a &lt;xref:System.Data.DataView&gt; object that represents a <ph id="ph1">`customer`</ph> table, you want to bind to the properties on the <ph id="ph2">`customer`</ph> object that the &lt;xref:System.Data.DataView&gt; represents, not the properties of the &lt;xref:System.Data.DataView&gt;.</source>
          <target state="translated">如果，例如，你将使用此接口&lt;xref:System.Data.DataView&gt;对象，表示<ph id="ph1">`customer`</ph>表，你想要绑定到属性<ph id="ph2">`customer`</ph>对象&lt;xref:System.Data.DataView&gt;表示，不是属性的&lt;xref:System.Data.DataView&gt;。&lt;/xref:System.Data.DataView&gt; &lt;/xref:System.Data.DataView&gt; &lt;/xref:System.Data.DataView&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This interface is not required for design-time support of a bindable list.</source>
          <target state="translated">此接口不需要的可绑定列表的设计时支持。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Binding to data can occur either at run time or in a designer, but there are rules for both.</source>
          <target state="translated">绑定到数据可以发生在运行时或在设计器中，但有两个规则。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>At run time, you can bind to data in any of the following:      -   &lt;xref:System.Array&gt;      -   Implementer of &lt;xref:System.Collections.IList&gt;, provided the implementer has a strongly typed &lt;xref:System.Collections.IList.Item%2A&gt; property (that is, the &lt;xref:System.Type&gt; is anything but &lt;xref:System.Object&gt;).</source>
          <target state="translated">在运行时，你可以将绑定到数据采用以下任一:- &lt;xref:System.Array&gt;-的实施者&lt;xref:System.Collections.IList&gt;、 提供实施者具有强类型化&lt;xref:System.Collections.IList.Item%2A&gt;属性 (即，&lt;xref:System.Type&gt;算作是&lt;xref:System.Object&gt;)。&lt;/xref:System.Object&gt; &lt;/xref:System.Type&gt; &lt;/xref:System.Collections.IList.Item%2A&gt; &lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can accomplish this by making the default implementation of &lt;xref:System.Collections.IList.Item%2A&gt; private.</source>
          <target state="translated">你可以完成此操作通过进行的默认实现&lt;xref:System.Collections.IList.Item%2A&gt;私有。&lt;/xref:System.Collections.IList.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you want to create an &lt;xref:System.Collections.IList&gt; that follows the rules of a strongly typed collection, you should derive from &lt;xref:System.Collections.CollectionBase&gt;.</source>
          <target state="translated">如果你想要创建&lt;xref:System.Collections.IList&gt;后面的强类型集合的规则，你应该派生自&lt;xref:System.Collections.CollectionBase&gt;.&lt;/xref:System.Collections.CollectionBase&gt; &lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>-   Implementer of ITypedList.</source>
          <target state="translated">-ITypedList 的实施者。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In a designer, you can initialize binding to &lt;xref:System.ComponentModel.Component&gt; objects by following the same rules.</source>
          <target state="translated">在设计器中，你可以初始化绑定到&lt;xref:System.ComponentModel.Component&gt;按照相同的规则的对象。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information on binding to a data source, see the &lt;xref:System.Windows.Forms.Binding?displayProperty=fullName&gt; class.</source>
          <target state="translated">绑定到数据源的详细信息，请参阅&lt;xref:System.Windows.Forms.Binding?displayProperty=fullName&gt;类。&lt;/xref:System.Windows.Forms.Binding?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the properties on each item used to bind data.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示用于将数据绑定的每个项的属性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`listAccessors`</ph> parameter is not <ph id="ph2">`null`</ph>, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements &lt;xref:System.ComponentModel.ITypedList&gt;.</source>
          <target state="translated">如果<ph id="ph1">`listAccessors`</ph>参数不是<ph id="ph2">`null`</ph>，它通常包含标识要检索的实现&lt;xref:System.ComponentModel.ITypedList&gt;.&lt;/xref:System.ComponentModel.ITypedList&gt;的对象的容器列表的属性描述符</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, a &lt;xref:System.Data.DataSet&gt; containing two tables, <ph id="ph1">`myCustomers`</ph> and <ph id="ph2">`myOrders`</ph>, with a relationship between them called <ph id="ph3">`myCustOrders`</ph>.</source>
          <target state="translated">例如，&lt;xref:System.Data.DataSet&gt;包含两个表，<ph id="ph1">`myCustomers`</ph>和<ph id="ph2">`myOrders`</ph>，与它们调用之间的关系<ph id="ph3">`myCustOrders`</ph>。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you create a &lt;xref:System.Data.DataView&gt; object to view <ph id="ph1">`myCustomers`</ph>, then calling the GetItemProperties method with <ph id="ph2">`null`</ph> returns the property descriptors for the columns in <ph id="ph3">`myCustomers`</ph>.</source>
          <target state="translated">如果你创建&lt;xref:System.Data.DataView&gt;对象以查看<ph id="ph1">`myCustomers`</ph>，然后调用带有 GetItemProperties 方法<ph id="ph2">`null`</ph>返回中的列的属性描述符<ph id="ph3">`myCustomers`</ph>。&lt;/xref:System.Data.DataView&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>As a result, one of the returned property descriptors is a property descriptor for <ph id="ph1">`myCustOrders`</ph>, just as calling the GetItemProperties method with a list accessor array containing the property descriptors for <ph id="ph2">`myCustOrders`</ph> will return the property descriptors for <ph id="ph3">`myOrders`</ph>.</source>
          <target state="translated">因此，返回的属性描述符之一是属性的属性描述符<ph id="ph1">`myCustOrders`</ph>，就像与包含的属性说明符列表访问器数组调用 GetItemProperties 方法<ph id="ph2">`myCustOrders`</ph>将返回的属性描述符<ph id="ph3">`myOrders`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects to find in the collection as bindable.</source>
          <target state="translated">数组<bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要作为可绑定的集合中找到的对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">这可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the properties on each item used to bind data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，表示用于将数据绑定的每个项的属性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns the name of the list.</source>
          <target state="translated">返回的列表的名称。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This method is used only in the design-time framework and by the obsolete &lt;xref:System.Windows.Forms.DataGrid&gt; control.</source>
          <target state="translated">使用此方法只能在设计时框架，并且由已过时&lt;xref:System.Windows.Forms.DataGrid&gt;控件。&lt;/xref:System.Windows.Forms.DataGrid&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects, for which the list name is returned.</source>
          <target state="translated">数组<bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为其返回列表名称的对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">这可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The name of the list.</source>
          <target state="translated">列表的名称。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>