<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">369b157777e366ead5cccc73baf9eabedc811ef6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.AppContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">122b958539f851e0d03217d2766b4411c3cd66a6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1771e5aea560ab11c830e3792e8b5c5a74ecfe13</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides members for setting and retrieving data about an application's context.</source>
          <target state="translated">提供用于设置和检索应用程序的上下文相关数据成员。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Gets the pathname of the base directory that the assembly resolver uses to probe for assemblies.</source>
          <target state="translated">获取程序集冲突解决程序用来探测程序集的基目录的路径名。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This is a per application domain property.</source>
          <target state="translated">这是每个应用程序域属性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Its value corresponds to the &lt;xref:System.AppDomain.BaseDirectory%2A?displayProperty=fullName&gt; property of the current application domain.</source>
          <target state="translated">其值对应于&lt;xref:System.AppDomain.BaseDirectory%2A?displayProperty=fullName&gt;当前的应用程序域属性。&lt;/xref:System.AppDomain.BaseDirectory%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>the pathname of the base directory that the assembly resolver uses to probe for assemblies.</source>
          <target state="translated">程序集冲突解决程序用来探测程序集的基目录的路径名。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Sets the value of a switch.</source>
          <target state="translated">设置开关的值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The name of the switch.</source>
          <target state="translated">交换机的名称。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The value of the switch.</source>
          <target state="translated">开关的值。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph> is <ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph>是<ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Tries to get the value of a switch.</source>
          <target state="translated">尝试获取开关的值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AppContext&gt; class enables library writers to provide a uniform opt-out mechanism for new functionality for their users.</source>
          <target state="translated">&lt;xref:System.AppContext&gt;类使库编写器可为其用户提供统一的新功能选择退出机制。&lt;/xref:System.AppContext&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It establishes a loosely-coupled contract between components in order to communicate an opt-out request.</source>
          <target state="translated">它将建立松耦合的协定，以便进行通信的选择退出请求的组件之间。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This capability is typically important when a change is made to existing functionality.</source>
          <target state="translated">此功能在对现有功能进行更改时通常很重要。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Conversely, there is already an implicit opt-in for new functionality.</source>
          <target state="translated">相反，已存在隐式选择加入的新功能。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The common language runtime automatically populates the switches assigned to an &lt;xref:System.AppContext&gt; instance by reading the registry and the application's configuration file.</source>
          <target state="translated">公共语言运行时将自动填充分配到的交换机&lt;xref:System.AppContext&gt;通过阅读注册表和应用程序的配置文件的实例。&lt;/xref:System.AppContext&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The value of these switches can then be overridden, and new switches added, by calling the &lt;xref:System.AppContext.SetSwitch%2A&gt; method.</source>
          <target state="translated">然后可以重写这些开关的值，并添加新的开关，通过调用&lt;xref:System.AppContext.SetSwitch%2A&gt;方法。&lt;/xref:System.AppContext.SetSwitch%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A library calls the TryGetSwitch method to check whether its consumers have declared the value of the switch and then act appropriately on it.</source>
          <target state="translated">要检查其使用者是否已声明开关的值，然后相应地作用于它的 TryGetSwitch 方法调用库。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>By default, if the switch is not defined, the new functionality is enabled..</source>
          <target state="translated">默认情况下，如果未定义交换机，新的功能处于启用状态...</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the switch is defined and its value is <ph id="ph1">`false`</ph>, the new functionality is also enabled.</source>
          <target state="translated">如果定义了开关，其值为<ph id="ph1">`false`</ph>，也可以启用新功能。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If its value is <ph id="ph1">`true`</ph>, the legacy behavior is enabled.</source>
          <target state="translated">如果其值为<ph id="ph1">`true`</ph>，启用旧行为。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The name of the switch.</source>
          <target state="translated">交换机的名称。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the value of <ph id="ph1">`switchName`</ph> if <ph id="ph2">`switchName`</ph> was found, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph3">`switchName`</ph> was not found.</source>
          <target state="translated">此方法返回时，包含值的<ph id="ph1">`switchName`</ph>如果<ph id="ph2">`switchName`</ph>找，或<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<ph id="ph3">`switchName`</ph>找不到。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数传递时未经初始化。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">switchName</ph><ept id="p2">&lt;/code&gt;</ept> was set and the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">isEnabled</ph><ept id="p3">&lt;/code&gt;</ept> argument contains the value of the switch; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">switchName</ph> <ept id="p2">&lt;/code&gt;</ept>设置和<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">isEnabled</ph> <ept id="p3">&lt;/code&gt;</ept>参数包含开关的值; 否则为<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph> is <ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;switchName&lt;/code&gt;</ph>是<ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>