<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc96f5d826913c72f4b28898e711248f18446e84</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.IDesignerSerializationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3325d71e29da63851ddbbd328e6f975b1c257023</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0c7a907a00a6ba1e153d6d7eb21a26b8486e3ba</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an interface that can manage design-time serialization.</source>
          <target state="translated">提供可以管理设计时序列化的接口。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A designer can utilize IDesignerSerializationManager to access services useful to managing design-time serialization processes.</source>
          <target state="translated">设计器可以利用 IDesignerSerializationManager 访问服务对于管理设计时序列化过程很有用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For example, a class that implements the designer serialization manager can use this interface to create objects, look up types, identify objects, and customize the serialization of particular types.</source>
          <target state="translated">例如，实现设计器的序列化管理器的类可以使用此接口来创建对象、 查找类型、 标识对象和自定义特定类型的序列化。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Adds the specified serialization provider to the serialization manager.</source>
          <target state="translated">将指定的序列化提供程序添加到序列化管理器。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This method adds a custom serialization provider to the serialization manager.</source>
          <target state="translated">此方法将自定义序列化提供程序添加到序列化管理器。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</source>
          <target state="translated">序列化提供程序可以为特定类型的对象或类型的对象集提供自定义序列化程序。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</source>
          <target state="translated">序列化期间，每个自定义序列化提供程序将查询以返回的序列化程序特定的数据类型，如果它可以提供一个。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</source>
          <target state="translated">序列化管理器使用此方法之前，为特定类型使用默认序列化程序提供的自定义序列化程序。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The serialization provider to add.</source>
          <target state="translated">要添加的序列化提供程序。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets a stack-based, user-defined storage area that is useful for communication between serializers.</source>
          <target state="translated">获取基于堆栈的、 用户定义的存储区域，对于序列化程序之间的通信十分有用。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This storage area provides communication of object context information to serializers.</source>
          <target state="translated">此存储区向序列化程序提供的对象的上下文信息的通信。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Context information about objects that are being serialized can be stored and accessed through this &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;.</source>
          <target state="translated">有关要序列化的对象的上下文信息可以存储并通过此&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;。&lt;/xref:System.ComponentModel.Design.Serialization.ContextStack&gt;访问</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that stores data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>存储数据。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Creates an instance of the specified type and adds it to a collection of named instances.</source>
          <target state="translated">创建指定类型的实例并将其添加到已命名实例的集合。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Objects that implement &lt;xref:System.ComponentModel.IComponent&gt; are added to the design-time container if the <ph id="ph1">`addToContainer`</ph> parameter is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">对象实现&lt;xref:System.ComponentModel.IComponent&gt;被添加到设计时容器如果<ph id="ph1">`addToContainer`</ph>参数是<ph id="ph2">`true`</ph>。&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The data type to create.</source>
          <target state="translated">要创建的数据类型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The arguments to pass to the constructor for this type.</source>
          <target state="translated">要为此类型传递给构造函数的参数。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name of the object.</source>
          <target state="translated">对象的名称。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This name can be used to access the object later through &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.</source>
          <target state="translated">此名称可以用于访问对象，稍后通过&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is passed, the object is still created but cannot be accessed by name.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是传递时，对象仍会创建，但不能按名称访问。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, this object is added to the design container.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，该对象添加到设计容器。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The object must implement <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this to have any effect.</source>
          <target state="translated">该对象必须实现<bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使这种方式产生任何影响。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The newly created object instance.</source>
          <target state="translated">新创建的对象实例中。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets an instance of a created object of the specified name, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if that object does not exist.</source>
          <target state="translated">获取指定的名称，对创建对象的实例或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果该对象不存在。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The name of the object to retrieve must have been set through a prior call to &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.</source>
          <target state="translated">要检索的对象的名称必须通过调用&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;设置</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The name of the object to retrieve.</source>
          <target state="translated">要检索的对象的名称。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An instance of the object with the given name, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no object by that name can be found.</source>
          <target state="translated">具有给定名称的对象的实例或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到该名称没有任何对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the name of the specified object, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object has no name.</source>
          <target state="translated">获取指定的对象的名称或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果对象没有名称。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The object to retrieve the name for.</source>
          <target state="translated">要检索其名称的对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The name of the object, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object is unnamed.</source>
          <target state="translated">对象的名称，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未命名的对象是否。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets a serializer of the requested type for the specified object type.</source>
          <target state="translated">获取指定的对象类型的请求类型的序列化程序。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The type of the object to get the serializer for.</source>
          <target state="translated">要获取的序列化程序的对象的类型。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The type of the serializer to retrieve.</source>
          <target state="translated">若要检索的序列化程序的类型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An instance of the requested serializer, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no appropriate serializer can be located.</source>
          <target state="translated">实例的请求序列化程序，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果没有相应的序列化程序可以位于。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets a type of the specified name.</source>
          <target state="translated">获取指定名称的类型。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the type to load.</source>
          <target state="translated">要加载的类型完全限定的名称。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An instance of the type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type cannot be loaded.</source>
          <target state="translated">类型的实例，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果无法加载此类型。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Indicates custom properties that can be serializable with available serializers.</source>
          <target state="translated">指示可通过可用序列化程序可序列化的自定义属性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This property can contain an empty collection.</source>
          <target state="translated">此属性可包含空集合。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A serializer should never assume that such properties exist.</source>
          <target state="translated">序列化程序也不应假定存在这样的属性。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A derived class or implementation of &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; defines the set of properties that are exposed here.</source>
          <target state="translated">派生的类或实现&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;定义的此处公开的属性集。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the properties to be serialized.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含要进行序列化的属性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Removes a custom serialization provider from the serialization manager.</source>
          <target state="translated">从序列化管理器中删除自定义序列化提供程序。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The provider to remove.</source>
          <target state="translated">要删除的提供程序。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This object must have been added using &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*&gt;.</source>
          <target state="translated">此对象必须使用添加&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Reports an error in serialization.</source>
          <target state="translated">报告序列化中的错误。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If the serialization manager supports logging multiple errors in its implementation of ReportError, it can store the error information object for a future report where all the errors encountered can be displayed at once.</source>
          <target state="translated">如果序列化管理器支持多个错误登录 ReportError 其实现，它可以存储将来的报表可以一次显示遇到的所有错误的位置错误信息对象。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If this method stores multiple errors, serialization can continue after a call to this method.</source>
          <target state="translated">如果此方法可以存储多个错误，可以在调用此方法后继续序列化。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If this method does not support logging multiple errors, this method should throw an exception, which aborts serialization.</source>
          <target state="translated">如果此方法不支持日志记录多个错误，则此方法应引发异常，这将中止序列化。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The serialization manager should never throw an exception for errors encountered during serialization.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 序列化管理器应永远不会引发异常的序列化过程中遇到错误。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It should only throw an exception during deserialization.</source>
          <target state="translated">它应只引发反序列化过程中的出现异常。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Otherwise, users become confused because saving the document should never fail.</source>
          <target state="translated">否则，会变得混淆，因为保存的文档的用户应永远不会失败。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The error to report.</source>
          <target state="translated">报告的错误。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This information object can be of any object type.</source>
          <target state="translated">此信息对象可以是任何对象类型。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If it is an exception, the message of the exception is extracted and reported to the user.</source>
          <target state="translated">如果它是一个异常，该异常的消息提取，并报告给用户。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If it is any other type, &lt;xref:System.Object.ToString*&gt; is called to display the information to the user.</source>
          <target state="translated">如果它是任何其他类型，&lt;xref:System.Object.ToString*&gt;调用以向用户显示该信息。&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Occurs when &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*&gt; cannot locate the specified name in the serialization manager's name table.</source>
          <target state="translated">发生时&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*&gt;在序列化管理器的名称表中找不到指定的名称。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</source>
          <target state="translated">此事件提供了一种序列化程序以点播情况下，创建对象的方法，以便序列化程序不需要的依赖对象的创建顺序。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The delegate for this event is cleared immediately after serialization or deserialization is complete.</source>
          <target state="translated">序列化后立即清除此事件的委托或反序列化完成。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Occurs when serialization is complete.</source>
          <target state="translated">在序列化完成时发生。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This event is raised when serialization or deserialization is complete.</source>
          <target state="translated">序列化或反序列化完成时，引发此事件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</source>
          <target state="translated">通常，序列化代码被编写为发出序列化数据，并且通常不要求与状态相关的检查和处理。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the SerializationComplete event, and clear the data after serialization.</source>
          <target state="translated">如果有必要保留在整个序列化的状态数据，则可以设置数据，并将其序列化程序，它可以侦听 SerializationComplete 事件，并在序列化之后清除的数据访问。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Restoring the proper state after serialization can be important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</source>
          <target state="translated">序列化可以很重要，因为序列化期间，可以重复使用序列化程序和剩余的状态数据或打开的流可能不正确后，请还原正确的状态。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, if a serializer needs to write to another file, such as a resource file, it is inefficient to design the serializer to close the file when finished.</source>
          <target state="translated">例如，如果序列化程序需要写入到另一个文件，如资源文件是低效设计序列化程序完成后关闭该文件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Serializing an object graph usually requires several serializers.</source>
          <target state="translated">序列化对象图通常需要多个序列化程序。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The resource file would be opened and closed many times.</source>
          <target state="translated">将打开和关闭次数多的资源文件。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Instead, the resource file can be closed at the end of serialization by an object that listened to the SerializationComplete event.</source>
          <target state="translated">相反，资源文件可以在序列化的末尾由关闭侦听 SerializationComplete 事件的对象。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Sets the name of the specified existing object.</source>
          <target state="translated">设置指定的现有对象的名称。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This method is useful when it is necessary to create and then name an instance of an object without using &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.</source>
          <target state="translated">此方法很有用，需要创建并然后命名对象的实例，而无需使用&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;时</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An exception is thrown if you try to rename an existing object or if you try to give a new object a name that is already taken.</source>
          <target state="translated">如果你尝试重命名现有对象或者试图为新对象指定已在使用中的名称，将引发异常。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The object instance to name.</source>
          <target state="translated">为名称的对象实例。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name to give the instance.</source>
          <target state="translated">要为实例指定的名称。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>