<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">282e4a89a3653308e4dbe6830fc8fb79e56fe16f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.ISynchronizeInvoke.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4aa9800f55a14b13674572070e3f756b7727f4d7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">034095357185fb9c6d9767ab9eede0e54fe9c20e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a way to synchronously or asynchronously execute a delegate.</source>
          <target state="translated">提供一种同步或异步执行委托。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Asynchronously executes the delegate on the thread that created this object.</source>
          <target state="translated">创建此对象的线程上异步执行委托。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`method`</ph> delegate is executed on the thread that created the object, instead of the thread on which BeginInvoke was called.</source>
          <target state="translated"><ph id="ph1">`method`</ph>创建的对象，而不是在其调用 BeginInvoke 的线程的线程上执行委托。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The delegate is called asynchronously, and this method returns immediately.</source>
          <target state="translated">以异步方式调用的委托，此方法将立即返回。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can call this method from any thread.</source>
          <target state="translated">你可以从任何线程调用此方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you need the return value from a process started with this method, call &lt;xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A&gt; to get the value.</source>
          <target state="translated">如果你需要使用此方法启动的进程的返回值，调用&lt;xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A&gt;来获取的值。&lt;/xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you need to call the delegate synchronously, use the &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt; method instead.</source>
          <target state="translated">如果你需要以同步方式调用委托时，使用&lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;方法相反。&lt;/xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Delegate&gt; to a method that takes parameters of the same number and type that are contained in <ph id="ph1">`args`</ph>.</source>
          <target state="translated">A&lt;xref:System.Delegate&gt;采用的相同的数量和中包含的类型参数的方法<ph id="ph1">`args`</ph>。&lt;/xref:System.Delegate&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Object&gt; to pass as arguments to the given method.</source>
          <target state="translated">类型的数组&lt;xref:System.Object&gt;作为自变量传递给给定的方法。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no arguments are needed.</source>
          <target state="translated">这可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不需要参数。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; interface that represents the asynchronous operation started by calling this method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;通过调用此方法启动表示异步操作的接口。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Waits until the process started by calling &lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt; completes, and then returns the value generated by the process.</source>
          <target state="translated">通过调用进程一直等到启动&lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt;完成后，，然后返回进程生成的值。&lt;/xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This method gets the return value of the asynchronous operation represented by the &lt;xref:System.IAsyncResult&gt; passed by this interface.</source>
          <target state="translated">此方法获取所表示的异步操作的返回值&lt;xref:System.IAsyncResult&gt;通过此接口。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the asynchronous operation has not completed, this method will wait until the result is available.</source>
          <target state="translated">如果未完成异步操作，在结果可用之前将等待此方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; interface that represents the asynchronous operation started by calling &lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt;.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;表示通过调用&lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt;.&lt;/xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke*&gt;开始的异步操作的接口&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the return value generated by the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.Object&gt;，表示生成的异步操作的返回值。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.</source>
          <target state="translated">以同步方式创建此对象，并将对创建的线程的调用封送的线程上执行委托。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Unlike &lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A&gt;, this method operates synchronously, that is, it waits until the process completes before returning.</source>
          <target state="translated">与不同&lt;xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A&gt;，此方法同步运行，也就是说，它等待，直到在返回之前完成此过程。&lt;/xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Exceptions raised during the call are propagated back to the caller.</source>
          <target state="translated">在调用过程中引发的异常会传播回调用方。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use this method when calling a method from a different thread to marshal the call to the proper thread.</source>
          <target state="translated">从另一个线程调用方法时使用此方法要封送到合适的线程的调用。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Delegate&gt; that contains a method to call, in the context of the thread for the control.</source>
          <target state="translated">A &lt;xref:System.Delegate&gt;，其中包含要调用的控件的线程上下文中的方法。&lt;/xref:System.Delegate&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Object&gt; that represents the arguments to pass to the given method.</source>
          <target state="translated">类型的数组&lt;xref:System.Object&gt;，表示要传递给给定方法的自变量。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no arguments are needed.</source>
          <target state="translated">这可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不需要参数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the return value from the delegate being invoked, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the delegate has no return value.</source>
          <target state="translated">&lt;xref:System.Object&gt;，表示正在调用的委托的返回值或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果委托没有返回值。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the caller must call &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt; when calling an object that implements this interface.</source>
          <target state="translated">获取一个值，该值指示调用方是否必须调用&lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt;时调用对象实现此接口。&lt;/xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This property determines whether the caller must call &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt; when making method calls to an object that implements this interface.</source>
          <target state="translated">此属性确定调用方是否必须调用&lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;时进行的对象的方法调用，实现此接口。&lt;/xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Such objects are bound to a specific thread and are not thread-safe.</source>
          <target state="translated">此类对象绑定到特定线程并不是线程安全。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you are calling a method from a different thread, you must use the &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt; method to marshal the call to the proper thread.</source>
          <target state="translated">如果你正在从另一个线程调用的方法，则必须使用&lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;封送到合适的线程调用的方法。&lt;/xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the caller must call &lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt;; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果调用方必须调用&lt;xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt;; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.ComponentModel.ISynchronizeInvoke.Invoke*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>