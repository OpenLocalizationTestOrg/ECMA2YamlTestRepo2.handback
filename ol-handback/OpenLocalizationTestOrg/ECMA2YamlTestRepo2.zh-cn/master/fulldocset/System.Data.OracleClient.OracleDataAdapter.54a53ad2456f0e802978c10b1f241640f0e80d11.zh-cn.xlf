<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18201ed58ad08fcc2b0f46dee45fc5ecea5d595e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.OracleClient.OracleDataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d3ecefb7490c16ac1161e7f08a33987b1c51cdf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">810057a2eff7bdeb5998ccfe80ee3721d6788d41</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of data commands and a connection to a database that are used to fill the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and update the database.</source>
          <target state="translated">表示一组数据命令和用于填充数据库的连接<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>并更新数据库。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This type is deprecated and will be removed in a future version of the .NET Framework.</source>
          <target state="translated">此类型已弃用，将.NET Framework 的未来版本中删除。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Oracle and ADO.NET<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Oracle 和 ADO.NET<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The OracleDataAdapter serves as a bridge between a <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept> and database for retrieving and saving data.</source>
          <target state="translated">OracleDataAdapter 用作之间的桥梁<bpt id="p1">**</bpt>数据集<ept id="p1">**</ept>和用于检索和保存数据的数据库。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The OracleDataAdapter provides this bridge by using &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; to load data from the database into the &lt;xref:System.Data.DataSet&gt;, and using &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; to send changes made in the &lt;xref:System.Data.DataSet&gt; back to the data source.</source>
          <target state="translated">OracleDataAdapter 通过使用提供此桥&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;将数据从数据库到&lt;xref:System.Data.DataSet&gt;，并使用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;发送中所做更改&lt;xref:System.Data.DataSet&gt;回数据源。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When the OracleDataAdapter fills a &lt;xref:System.Data.DataSet&gt;, it creates the necessary tables and columns for the returned data if they do not already exist.</source>
          <target state="translated">当 OracleDataAdapter 填充&lt;xref:System.Data.DataSet&gt;，它创建必要的表和列返回的数据如果不存在。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, primary key information is not included in the implicitly created schema unless the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property is set to &lt;xref:System.Data.MissingSchemaAction&gt;.</source>
          <target state="translated">但是，主键信息除非不包含隐式创建的架构中的&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;属性设置为&lt;xref:System.Data.MissingSchemaAction&gt;。&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You may also have the OracleDataAdapter create the schema of the &lt;xref:System.Data.DataSet&gt;, including primary key information, before filling it with data using &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.</source>
          <target state="translated">你还可以创建的&lt;xref:System.Data.DataSet&gt;，包括主前的关键信息，填充它使用&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;处理数据&lt;/xref:System.Data.DataSet&gt;的架构 OracleDataAdapter</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>将现有约束添加到数据集<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  By default, numeric fields imported to a &lt;xref:System.Data.DataTable&gt; with &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; are mapped to &lt;xref:System.Data.OracleClient.OracleNumber&gt; objects.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 默认情况下，数值字段导入到&lt;xref:System.Data.DataTable&gt;与&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;映射到&lt;xref:System.Data.OracleClient.OracleNumber&gt;对象。&lt;/xref:System.Data.OracleClient.OracleNumber&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It is possible to overflow the &lt;xref:System.Data.OracleClient.OracleNumber&gt;, and throw an Oracle exception, by importing a non-integral numeric value that is either too large or too high precision for the &lt;xref:System.Data.OracleClient.OracleNumber&gt;'s precision limitations.</source>
          <target state="translated">很可能溢出&lt;xref:System.Data.OracleClient.OracleNumber&gt;，并引发 Oracle 异常，通过导入是太大或过高精度的非整型数值&lt;xref:System.Data.OracleClient.OracleNumber&gt;的精度限制。&lt;/xref:System.Data.OracleClient.OracleNumber&gt; &lt;/xref:System.Data.OracleClient.OracleNumber&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Refer to the description of &lt;xref:System.Data.OracleClient.OracleNumber&gt; for more information.</source>
          <target state="translated">说明，请参阅&lt;xref:System.Data.OracleClient.OracleNumber&gt;有关详细信息。&lt;/xref:System.Data.OracleClient.OracleNumber&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The OracleDataAdapter also includes the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;, &lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A&gt;, &lt;xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A&gt;, and <ph id="ph1">`TableMappings`</ph> properties to facilitate loading and updating of data.</source>
          <target state="translated">此外包括 OracleDataAdapter &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;， &lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;， &lt;xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A&gt;， &lt;xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A&gt;，和<ph id="ph1">`TableMappings`</ph>属性以便于加载和更新的数据。&lt;/xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for Oracle does not support batched SQL statements.</source>
          <target state="translated">适用于 Oracle 的.NET Framework 数据提供程序不支持批处理的 SQL 语句。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, it does allow you to use multiple <ph id="ph1">`REF CURSOR`</ph> output parameters to fill a <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept>, each in its own &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">但是，它允许使用多个<ph id="ph1">`REF CURSOR`</ph>输出参数，以填充<bpt id="p1">**</bpt>数据集<ept id="p1">**</ept>，每个在其拥有&lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You must define the parameters, mark them as output parameters, and indicate that they are <ph id="ph1">`REF CURSOR`</ph> data types.</source>
          <target state="translated">必须定义的参数、 将其标记为输出参数，并指示它们是<ph id="ph1">`REF CURSOR`</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Note that you cannot use the &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; method when the OracleDataAdapter is filled using <ph id="ph1">`REF CURSOR`</ph> parameters returned by a stored procedure, because Oracle does not provide the information necessary to determine what the table name and column names are when the SQL statement is executed.</source>
          <target state="translated">请注意，不能使用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;方法时使用填充 OracleDataAdapter<ph id="ph1">`REF CURSOR`</ph>参数返回的存储过程，因为 Oracle 不提供能够确定的表名称和列名称执行 SQL 语句时，所需的信息。&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following C# example assumes that you have created this stored procedure.</source>
          <target state="translated">下面的 C# 示例假设你已创建此存储的过程。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create the following Oracle package on the Oracle server.</source>
          <target state="translated">在 Oracle 服务器上创建以下 Oracle 包。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```</ph>       Create the following Oracle package body on the Oracle server.</source>
          <target state="translated"><ph id="ph1">```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```</ph>在 Oracle 服务器上创建以下 Oracle 包正文。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO &lt;&gt; 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```</ph>       The following C# example demonstrates how you might obtain table and column information using the stored procedure.</source>
          <target state="translated"><ph id="ph1">```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO &lt;&gt; 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```</ph>下面的 C# 示例演示如何获取使用存储的过程的表和列信息。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```c#   // GetConnectionString() returns a connection string for   // the data source.      string connString = GetConnectionString();   DataSet ds = new DataSet();   OracleConnection conn = new OracleConnection(connString);   OracleCommand cmd = conn.CreateCommand();      cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS";   cmd.CommandType = CommandType.StoredProcedure;   cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction =           ParameterDirection.Output;   cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction =           ParameterDirection.Output;      OracleDataAdapter da = new OracleDataAdapter(cmd);   da.TableMappings.Add("Table", "Emp");   da.TableMappings.Add("Table1", "Dept");   da.Fill(ds);      ds.Relations.Add("EmpDept", ds.Tables["Dept"].Columns["Deptno"],          ds.Tables["Emp"].Columns["Deptno"], false);   ```</ph>       The following Visual Basic example demonstrates how to use an OracleDataAdapter to fill a &lt;xref:System.Data.DataSet&gt; using an Oracle <ph id="ph2">`REF CURSOR`</ph>.</source>
          <target state="translated"><ph id="ph1">```c#   // GetConnectionString() returns a connection string for   // the data source.      string connString = GetConnectionString();   DataSet ds = new DataSet();   OracleConnection conn = new OracleConnection(connString);   OracleCommand cmd = conn.CreateCommand();      cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS";   cmd.CommandType = CommandType.StoredProcedure;   cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction =           ParameterDirection.Output;   cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction =           ParameterDirection.Output;      OracleDataAdapter da = new OracleDataAdapter(cmd);   da.TableMappings.Add("Table", "Emp");   da.TableMappings.Add("Table1", "Dept");   da.Fill(ds);      ds.Relations.Add("EmpDept", ds.Tables["Dept"].Columns["Deptno"],          ds.Tables["Emp"].Columns["Deptno"], false);   ```</ph>下面的 Visual Basic 示例演示如何使用 OracleDataAdapter 填充&lt;xref:System.Data.DataSet&gt;使用 Oracle <ph id="ph2">`REF CURSOR`</ph>。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>These examples use tables that are defined in the Oracle Scott/Tiger schema, and require the following PL/SQL package and package body.</source>
          <target state="translated">这些示例使用 Oracle Scott/Tiger 架构中定义，并且需要以下 PL/SQL 包和包正文表。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You must create these on your server to use the examples.</source>
          <target state="translated">你必须创建这些服务器以使用示例。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Create the following Oracle package on the Oracle server.</source>
          <target state="translated">在 Oracle 服务器上创建以下 Oracle 包。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```</ph>       Create the following Oracle package body on the Oracle server.</source>
          <target state="translated"><ph id="ph1">```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```</ph>在 Oracle 服务器上创建以下 Oracle 包正文。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO &lt;&gt; 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```</ph>       This Visual Basic example executes a PL/SQL stored procedure that returns two <ph id="ph2">`REF CURSOR`</ph> parameters, and fills a &lt;xref:System.Data.DataSet&gt; with the rows that are returned.</source>
          <target state="translated"><ph id="ph1">```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO &lt;&gt; 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```</ph>此 Visual Basic 示例执行一个 PL/SQL 存储过程，返回两个<ph id="ph2">`REF CURSOR`</ph>参数和填充&lt;xref:System.Data.DataSet&gt;返回的行。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```vb#      ' GetConnectionString() returns a connection string for   ' the data source.          Dim connString As New String(GetConnectionString())       Dim ds As New DataSet()       Dim conn As New OracleConnection(connString)       Dim cmd As OracleCommand = conn.CreateCommand()          cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS"       cmd.CommandType = CommandType.StoredProcedure       cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction = _          ParameterDirection.Output       cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction = _          ParameterDirection.Output          Dim da As New OracleDataAdapter(cmd)       da.TableMappings.Add("Table", "Emp")       da.TableMappings.Add("Table1", "Dept")       da.Fill(ds)          ds.Relations.Add("EmpDept", ds.Tables("Dept").Columns("Deptno"), _         ds.Tables("Emp").Columns("Deptno"), False)   ```</ph>       After using the OracleDataAdapter to perform a <ph id="ph2">`Fill`</ph> or <ph id="ph3">`FillSchema`</ph> operation, the <ph id="ph4">`DataColumn.ReadOnly`</ph> property always returns false, regardless of whether a column can be updated or not, because the Oracle server does not return this information.</source>
          <target state="translated"><ph id="ph1">```vb#      ' GetConnectionString() returns a connection string for   ' the data source.          Dim connString As New String(GetConnectionString())       Dim ds As New DataSet()       Dim conn As New OracleConnection(connString)       Dim cmd As OracleCommand = conn.CreateCommand()          cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS"       cmd.CommandType = CommandType.StoredProcedure       cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction = _          ParameterDirection.Output       cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction = _          ParameterDirection.Output          Dim da As New OracleDataAdapter(cmd)       da.TableMappings.Add("Table", "Emp")       da.TableMappings.Add("Table1", "Dept")       da.Fill(ds)          ds.Relations.Add("EmpDept", ds.Tables("Dept").Columns("Deptno"), _         ds.Tables("Emp").Columns("Deptno"), False)   ```</ph>之后使用 OracleDataAdapter 执行<ph id="ph2">`Fill`</ph>或<ph id="ph3">`FillSchema`</ph>操作，<ph id="ph4">`DataColumn.ReadOnly`</ph>属性始终返回 false，而不考虑是否可以更新列，因为在 Oracle 服务器并不返回此信息。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When you create an instance of &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;, the following read/write properties are set to their default values, as shown in the table.</source>
          <target state="translated">当你创建的实例&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;，以下的读/写属性设置为其默认值，如表中所示。&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>|Properties|Default value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">|属性 |默认值 |  |----------------|-------------------|  |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|  |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|      您可以更改任何通过单独属性调用这些属性的值。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified SQL SELECT statement.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与指定的 SQL SELECT 语句一起使用的类。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This implementation of the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; constructor sets the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; property to the value specified in the <ph id="ph1">`selectCommand`</ph> parameter.</source>
          <target state="translated">此实现的&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;构造函数集&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;属性中指定的值<ph id="ph1">`selectCommand`</ph>参数。&lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you create an instance of &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;, the following read/write properties are set to their default values, as shown in the table.</source>
          <target state="translated">当你创建的实例&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;，以下的读/写属性设置为其默认值，如表中所示。&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">|属性 |初始值 |  |----------------|-------------------|  |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|  |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|      您可以更改任何通过单独属性调用这些属性的值。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is an SQL SELECT statement or stored procedure, and is set as the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt; property of the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，是 SQL SELECT 语句或存储的过程，并被设置为&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;属性<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an SQL SELECT statement and an <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与 SQL SELECT 语句一起使用的类和<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This implementation of the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; can be useful in an application that must call the <ph id="ph1">`Fill`</ph> method for two or more &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; objects.</source>
          <target state="translated">此实现的&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;很有用的应用程序必须调用中<ph id="ph1">`Fill`</ph>方法为两个或多个&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;对象。&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个字符串，表示的 SQL SELECT 语句或存储的过程用于&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;属性<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the connection.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示的连接。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an SQL SELECT statement and a connection string.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>替换 SQL SELECT 语句和连接字符串的类。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个字符串，表示的 SQL SELECT 语句或存储的过程用于&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;属性<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The connection string.</source>
          <target state="translated">连接字符串中。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to delete records in the database.</source>
          <target state="translated">获取或设置的 SQL 语句或存储的过程用于删除数据库中的记录。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When the DeleteCommand property is assigned to a previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt;, the &lt;xref:System.Data.OracleClient.OracleCommand&gt; is not cloned.</source>
          <target state="translated">当分配 DeleteCommand 属性到以前创建&lt;xref:System.Data.OracleClient.OracleCommand&gt;、&lt;xref:System.Data.OracleClient.OracleCommand&gt;不克隆。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Instead, the DeleteCommand maintains a reference to the previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt;.</source>
          <target state="translated">相反，DeleteCommand 保留以前创建的&lt;xref:System.Data.OracleClient.OracleCommand&gt;.&lt;/xref:System.Data.OracleClient.OracleCommand&gt;的引用</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>During an update operation, if DeleteCommand is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, you can use the &lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt; class to automatically generate the DeleteCommand, and additional commands needed to reconcile the &lt;xref:System.Data.DataSet&gt; to the database.</source>
          <target state="translated">更新操作期间，如果未设置 DeleteCommand 和主键信息位于&lt;xref:System.Data.DataSet&gt;，你可以使用&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;类自动生成 DeleteCommand，并对帐所需的其他命令&lt;xref:System.Data.DataSet&gt;到数据库。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.OracleClient.OracleCommandBuilder&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To do this, set the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;.</source>
          <target state="translated">若要执行此操作，设置&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;属性的&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;。&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The generation logic also requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">生成逻辑也需要要&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;中存在的键列信息</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update operation to delete records in the database that correspond to deleted rows in the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在更新操作期间用于删除数据库中对应的已删除行的记录<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to insert new records into the database.</source>
          <target state="translated">获取或设置的 SQL 语句或存储的过程用于将新记录插入数据库。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When the InsertCommand property is assigned to a previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt; object, the &lt;xref:System.Data.OracleClient.OracleCommand&gt; is not cloned.</source>
          <target state="translated">当分配 InsertCommand 属性到以前创建&lt;xref:System.Data.OracleClient.OracleCommand&gt;对象，&lt;xref:System.Data.OracleClient.OracleCommand&gt;不克隆。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Instead, InsertCommand maintains a reference to the previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt;.</source>
          <target state="translated">相反，InsertCommand 保留以前创建的&lt;xref:System.Data.OracleClient.OracleCommand&gt;.&lt;/xref:System.Data.OracleClient.OracleCommand&gt;的引用</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>During an update operation, if InsertCommand is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, you can use the &lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt; class to automatically generate InsertCommand, and additional commands needed to reconcile the &lt;xref:System.Data.DataSet&gt; to the database.</source>
          <target state="translated">更新操作期间，如果未设置 InsertCommand 和主键信息位于&lt;xref:System.Data.DataSet&gt;，你可以使用&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;类自动生成 InsertCommand，并对帐所需的其他命令&lt;xref:System.Data.DataSet&gt;到数据库。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.OracleClient.OracleCommandBuilder&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To do this, set the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;.</source>
          <target state="translated">若要执行此操作，设置&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;属性的&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;。&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The generation logic also requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">生成逻辑也需要要&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;中存在的键列信息</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If execution of this command returns rows, these rows may be added to the &lt;xref:System.Data.DataSet&gt; depending upon how you set the &lt;xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt; property of the &lt;xref:System.Data.OracleClient.OracleCommand&gt; object.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果执行此命令返回行，这些行可能添加到&lt;xref:System.Data.DataSet&gt;取决于你如何设置&lt;xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt;属性&lt;xref:System.Data.OracleClient.OracleCommand&gt;对象。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When you update a column with the <ph id="ph1">`LONG RAW`</ph> data type, an exception is thrown when you enter a value of <ph id="ph2">`NULL`</ph> in the column.</source>
          <target state="translated">更新的列时<ph id="ph1">`LONG RAW`</ph>数据类型，将引发异常时输入的值为<ph id="ph2">`NULL`</ph>列中。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The Oracle <ph id="ph1">`LONG RAW`</ph> data type is a deprecated type in Oracle version 8.0.</source>
          <target state="translated">Oracle<ph id="ph1">`LONG RAW`</ph>数据类型为 Oracle 版本 8.0 中的不推荐使用的类型。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To avoid this error, use the <ph id="ph1">`BLOB`</ph> data type instead of <ph id="ph2">`LONG RAW`</ph>.</source>
          <target state="translated">若要避免此错误，使用<ph id="ph1">`BLOB`</ph>数据类型而不是<ph id="ph2">`LONG RAW`</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update operation to insert records in the database that correspond to new rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在更新操作期间用于将记录插入数据库中对应于中新行<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Occurs during an update operation after a command is executed against the database.</source>
          <target state="translated">对数据库执行命令后，在更新操作期间发生。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When using the <ph id="ph1">`Update`</ph> method, there are two events that occur per data row updated.</source>
          <target state="translated">使用时<ph id="ph1">`Update`</ph>方法，有两个事件发生每个更新的数据行。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">执行的顺序，如下所示是︰ 1。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">中的值&lt;xref:System.Data.DataRow&gt;移动到的参数值。&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OnRowUpdating`</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">`OnRowUpdating`</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The command executes.</source>
          <target state="translated">该命令执行。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`UpdateRowSource`</ph> enumeration is set to <ph id="ph2">`FirstReturnedRecord`</ph>, the first returned result is placed in the <bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>.</source>
          <target state="translated">如果<ph id="ph1">`UpdateRowSource`</ph>枚举设置为<ph id="ph2">`FirstReturnedRecord`</ph>，第一个返回结果将放置在<bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If there are output parameters, they are placed in the <bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>.</source>
          <target state="translated">如果没有输出参数，它们都将置于<bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OnRowUpdated`</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">`OnRowUpdated`</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AcceptChanges`</ph> is called.</source>
          <target state="translated"><ph id="ph1">`AcceptChanges`</ph>调用。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Occurs during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; before a command is executed against the data source.</source>
          <target state="translated">期间出现&lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;针对数据源执行命令之前。&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>When using the <ph id="ph1">`Update`</ph> method, there are two events that occur per data row updated.</source>
          <target state="translated">使用时<ph id="ph1">`Update`</ph>方法，有两个事件发生每个更新的数据行。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">执行的顺序，如下所示是︰ 1。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">中的值&lt;xref:System.Data.DataRow&gt;移动到的参数值。&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OnRowUpdating`</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">`OnRowUpdating`</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The command executes.</source>
          <target state="translated">该命令执行。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`UpdateRowSource`</ph> enumeration is set to <ph id="ph2">`FirstReturnedRecord`</ph>, the first returned result is placed in the <bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>.</source>
          <target state="translated">如果<ph id="ph1">`UpdateRowSource`</ph>枚举设置为<ph id="ph2">`FirstReturnedRecord`</ph>，第一个返回结果将放置在<bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If there are output parameters, they are placed in the <bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>.</source>
          <target state="translated">如果没有输出参数，它们都将置于<bpt id="p1">**</bpt>DataRow<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`OnRowUpdated`</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">`OnRowUpdated`</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AcceptChanges`</ph> is called.</source>
          <target state="translated"><ph id="ph1">`AcceptChanges`</ph>调用。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to select records in the database.</source>
          <target state="translated">获取或设置的 SQL 语句或存储的过程用于在数据库中选择的记录。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>When SelectCommand is assigned to a previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt;, the &lt;xref:System.Data.OracleClient.OracleCommand&gt; is not cloned.</source>
          <target state="translated">当分配 SelectCommand 到以前创建&lt;xref:System.Data.OracleClient.OracleCommand&gt;、&lt;xref:System.Data.OracleClient.OracleCommand&gt;不克隆。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Instead, the SelectCommand maintains a reference to the previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt; object.</source>
          <target state="translated">相反，SelectCommand 保留以前创建的引用&lt;xref:System.Data.OracleClient.OracleCommand&gt;对象。&lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If SelectCommand does not return any rows, no tables are added to the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept>, and no exception is raised.</source>
          <target state="translated">如果函数未返回任何行，没有表将添加到<bpt id="p1">**</bpt>数据集<ept id="p1">**</ept>，并且不引发任何异常。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during a fill operation to select records from database for placement in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，填充操作过程中，用于从数据库中的放置操作选择记录<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;.</source>
          <target state="translated">有关此成员的说明，请参阅&lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;。&lt;/xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;实例被强制转换为&lt;xref:System.Data.IDbDataAdapter&gt;接口。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A string representing the command.</source>
          <target state="translated">表示命令的字符串。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;.</source>
          <target state="translated">有关此成员的说明，请参阅&lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;。&lt;/xref:System.Data.IDbDataAdapter.InsertCommand*&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;实例被强制转换为&lt;xref:System.Data.IDbDataAdapter&gt;接口。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A string representing the command.</source>
          <target state="translated">表示命令的字符串。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;.</source>
          <target state="translated">有关此成员的说明，请参阅&lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;。&lt;/xref:System.Data.IDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;实例被强制转换为&lt;xref:System.Data.IDbDataAdapter&gt;接口。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A string representing the command.</source>
          <target state="translated">表示命令的字符串。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;.</source>
          <target state="translated">有关此成员的说明，请参阅&lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;。&lt;/xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;实例被强制转换为&lt;xref:System.Data.IDbDataAdapter&gt;接口。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A string representing the command.</source>
          <target state="translated">表示命令的字符串。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;实例被强制转换为&lt;xref:System.ICloneable&gt;接口。&lt;/xref:System.ICloneable&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A new object that is a copy of this instance.</source>
          <target state="translated">此实例副本的新对象。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</source>
          <target state="translated">获取或设置一个值，启用或禁用批处理支持，并指定可以在批处理中执行的命令数。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Use the UpdateBatchSize property to update a data source with changes from a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">使用 UpdateBatchSize 属性使用从一种&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;更改更新数据源</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This can increase application performance by reducing the number of round-trips to the server.</source>
          <target state="translated">这可以通过减少服务器的往返次数来提高应用程序性能。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Executing an extremely large batch could decrease performance.</source>
          <target state="translated">执行极大的批处理会降低性能。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Therefore, you should test for the optimum batch size setting before you implement your application.</source>
          <target state="translated">因此，你应测试以得到最佳的批大小设置，在实现你的应用程序之前。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.ArgumentOutOfRangeException&gt; is thrown if the value is set to a number less than zero.</source>
          <target state="translated">&lt;xref:System.ArgumentOutOfRangeException&gt;如果的值设置为一个数字，将引发小于零。&lt;/xref:System.ArgumentOutOfRangeException&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The number of rows to process per batch.</source>
          <target state="translated">要处理每批的行数。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Value:</source>
          <target state="translated">Value：</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Effect:</source>
          <target state="translated">影响︰</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>There is no limit on the batch size.</source>
          <target state="translated">批大小上没有任何限制。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Disables batch updating.</source>
          <target state="translated">禁用批量更新。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&amp;gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Changes are sent using batches of UpdateBatchSize operations at a time.</source>
          <target state="translated">一次使用的 UpdateBatchSize 操作批发送更改。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>When setting this to a value other than 1 all the commands associated with the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> have to have their &lt;xref:System.Data.IDbCommand.UpdatedRowSource*&gt; property set to <bpt id="p2">&lt;xref uid="langword_csharp_None" name="None" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_OutputParameters" name="OutputParameters" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">当将它设置为 1 以外的值与关联的所有命令<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>必须具有其&lt;xref:System.Data.IDbCommand.UpdatedRowSource*&gt;属性设置为<bpt id="p2">&lt;xref uid="langword_csharp_None" name="None" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_OutputParameters" name="OutputParameters" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.IDbCommand.UpdatedRowSource*&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>An exception is thrown otherwise.</source>
          <target state="translated">否则引发异常。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to update records in the database.</source>
          <target state="translated">获取或设置的 SQL 语句或存储的过程用于更新数据库中的记录。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>When UpdateCommand is assigned to a previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt;, the &lt;xref:System.Data.OracleClient.OracleCommand&gt; is not cloned.</source>
          <target state="translated">当分配 UpdateCommand 到以前创建&lt;xref:System.Data.OracleClient.OracleCommand&gt;、&lt;xref:System.Data.OracleClient.OracleCommand&gt;不克隆。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Instead, the UpdateCommand maintains a reference to the previously created &lt;xref:System.Data.OracleClient.OracleCommand&gt; object.</source>
          <target state="translated">相反，限于 UpdateCommand 保留以前创建的引用&lt;xref:System.Data.OracleClient.OracleCommand&gt;对象。&lt;/xref:System.Data.OracleClient.OracleCommand&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>During an update operation, if &lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt; is not set and primary key information is present in the <bpt id="p1">**</bpt>DataSet<ept id="p1">**</ept>, you can use the &lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt; class to automatically generate &lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;, and additional commands needed to reconcile the &lt;xref:System.Data.DataSet&gt; to the database.</source>
          <target state="translated">更新操作期间，如果&lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;不是组和主键信息位于<bpt id="p1">**</bpt>数据集<ept id="p1">**</ept>，可以使用&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;类自动生成&lt;xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;，和对帐所需的其他命令&lt;xref:System.Data.DataSet&gt;到数据库。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt; &lt;/xref:System.Data.OracleClient.OracleCommandBuilder&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>To do this, set the &lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;.</source>
          <target state="translated">若要执行此操作，设置&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;属性的&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;。&lt;/xref:System.Data.OracleClient.OracleDataAdapter&gt; &lt;/xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The generation logic also requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">生成逻辑也需要要&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;中存在的键列信息</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If execution of this command returns rows, these rows may be merged with the &lt;xref:System.Data.DataSet&gt; depending upon how you set the &lt;xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt; property of the &lt;xref:System.Data.OracleClient.OracleCommand&gt; object.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果执行此命令返回行，这些行可能会与合并&lt;xref:System.Data.DataSet&gt;取决于你如何设置&lt;xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt;属性&lt;xref:System.Data.OracleClient.OracleCommand&gt;对象。&lt;/xref:System.Data.OracleClient.OracleCommand&gt; &lt;/xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>When you update a column with the <ph id="ph1">`LONG RAW`</ph> data type, an exception is thrown when you enter a value of <ph id="ph2">`NULL`</ph> in the column.</source>
          <target state="translated">更新的列时<ph id="ph1">`LONG RAW`</ph>数据类型，将引发异常时输入的值为<ph id="ph2">`NULL`</ph>列中。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The Oracle <ph id="ph1">`LONG RAW`</ph> data type is a deprecated type in Oracle version 8.0.</source>
          <target state="translated">Oracle<ph id="ph1">`LONG RAW`</ph>数据类型为 Oracle 版本 8.0 中的不推荐使用的类型。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>To avoid this error, use the <ph id="ph1">`BLOB`</ph> data type instead of <ph id="ph2">`LONG RAW`</ph>.</source>
          <target state="translated">若要避免此错误，使用<ph id="ph1">`BLOB`</ph>数据类型而不是<ph id="ph2">`LONG RAW`</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update operation to update records in the database that correspond to modified rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在更新操作期间用于对已修改行中更新数据库中对应的记录<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>