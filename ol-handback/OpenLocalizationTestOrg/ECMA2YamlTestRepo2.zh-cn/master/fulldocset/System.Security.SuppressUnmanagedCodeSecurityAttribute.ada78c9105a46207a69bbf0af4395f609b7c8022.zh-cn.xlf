<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ac52e03e3577a2244ec4cdfbfed14314e89e93f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.SuppressUnmanagedCodeSecurityAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b007bd4a439b4ff6375bd7b992c982dbbb1088c7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f01d1b53a78893ee183abb519398d2cfb8073950</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows managed code to call into unmanaged code without a stack walk.</source>
          <target state="translated">允许托管的代码能够调入非托管代码而无需进行堆栈审核。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!CAUTION]</ph> &gt;  Use this attribute with extreme care.</source>
          <target state="translated"><ph id="ph1">&gt; [!CAUTION]</ph>1&gt; 特别小心使用此属性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Incorrect use can create security weaknesses.</source>
          <target state="translated">使用不当可造成安全漏洞。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This attribute can be applied to methods that want to call into native code without incurring the performance loss of a run-time security check when doing so.</source>
          <target state="translated">此特性可以应用于想要调入本机代码而不会产生运行时安全检查的性能损失，执行此操作时的方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The stack walk performed when calling unmanaged code is omitted at run time, resulting in substantial performance savings.</source>
          <target state="translated">执行时调用非托管的代码在运行时，省略导致显著的性能收益堆栈审核。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Using this attribute in a class applies it to all contained methods.</source>
          <target state="translated">类中使用此属性可将其应用到所有包含的方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Generally, whenever managed code calls into unmanaged code (by PInvoke or COM interop into native code), there is a demand for the <ph id="ph1">`UnmanagedCode`</ph> permission to ensure all callers have the necessary permission to allow this.</source>
          <target state="translated">通常，每当托管的代码调用到非托管代码 （由到本机代码的 PInvoke 或 COM 互操作），则要求提供<ph id="ph1">`UnmanagedCode`</ph>权限，以确保所有调用方拥有必要的权限以允许此操作。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By applying this explicit attribute, developers can suppress the demand at run time.</source>
          <target state="translated">通过应用此显式特性，开发人员可以取消在运行时的需求。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The developer must take responsibility for assuring that the transition into unmanaged code is sufficiently protected by other means.</source>
          <target state="translated">开发人员必须负责确保转换到非托管代码充分受其他方式。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The demand for the <ph id="ph1">`UnmanagedCode`</ph> permission will still occur at link time.</source>
          <target state="translated">需求<ph id="ph1">`UnmanagedCode`</ph>权限仍将发生在链接时。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, if function A calls function B and function B is marked with SuppressUnmanagedCodeSecurityAttribute, function A will be checked for unmanaged code permission during just-in-time compilation, but not subsequently during run time.</source>
          <target state="translated">例如，如果函数 A 调用函数 B，并且使用 SuppressUnmanagedCodeSecurityAttribute 标记函数 B，函数 A 将检查的过程中在实时编译，但随后不在运行时的非托管的代码权限。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This attribute is only effective when applied to PInvoke methods (or classes that contain PInvoke methods) or the definition of an interface through which interop calls will be made.</source>
          <target state="translated">此属性才会生效时应用于 PInvoke 方法 （或包含 PInvoke 方法的类） 或通过其进行互操作调用接口的定义。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It will be ignored in all other contexts.</source>
          <target state="translated">它将在所有其他上下文中被忽略。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This attribute is useful for implementing a class that provides access to system resources through unmanaged code.</source>
          <target state="translated">此属性可用于实现一个类，提供对通过非托管代码的系统资源的访问。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Code that does not have permission to access unmanaged code can call a class with this attribute to access unmanaged code.</source>
          <target state="translated">有权访问非托管的代码的代码可以调用具有此属性可访问非托管的代码的类。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This is only safe if the writer of the class with this attribute has programmed the class to be secure.</source>
          <target state="translated">这是类的仅当使用此特性编写器已经是类的安全的类安全。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If not, this attribute is dangerous and can allow the code that uses it to be misused.</source>
          <target state="translated">如果没有，此属性是危险的可以允许使用它来被误用的代码。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is not a declarative security attribute, but a regular attribute (it derives from &lt;xref:System.Attribute&gt;, not &lt;xref:System.Security.Permissions.SecurityAttribute&gt;).</source>
          <target state="translated">这不是声明性安全特性，而常规属性 (它派生自&lt;xref:System.Attribute&gt;，而不&lt;xref:System.Security.Permissions.SecurityAttribute&gt;)。&lt;/xref:System.Security.Permissions.SecurityAttribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.SuppressUnmanagedCodeSecurityAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.SuppressUnmanagedCodeSecurityAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The default constructor initializes any fields to their default values.</source>
          <target state="translated">默认构造函数初始化为其默认值的任何字段。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>