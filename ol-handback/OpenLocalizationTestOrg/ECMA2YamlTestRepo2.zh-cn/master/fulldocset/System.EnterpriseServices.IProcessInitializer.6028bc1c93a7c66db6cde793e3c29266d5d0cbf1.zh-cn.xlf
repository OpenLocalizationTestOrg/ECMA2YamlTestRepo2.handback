<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4602ef117dd03cd0fdcb285a408828fdacdbe351</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.EnterpriseServices.IProcessInitializer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc3734f2ec5c3e9312e06a274d0ab3dbf2cb24ba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6e88b5c54646b8f30bce4b5eff2658bebc60465</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports methods that can be called when a COM component starts up or shuts down.</source>
          <target state="translated">支持的 COM 组件启动或关闭时可以调用的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Implement the IProcessInitializer interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</source>
          <target state="translated">如果你想要时服务器进程 (Dllhost.exe) 启动或关闭，分别运行初始化或关闭代码，请在服务组件中实现 IProcessInitializer 接口方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>COM+ provides <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events when Dllhost.exe starts and ends.</source>
          <target state="translated">COM + 提供<ph id="ph1">`Startup`</ph>和<ph id="ph2">`Shutdown`</ph>Dllhost.exe 开始和结束时的事件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</source>
          <target state="translated">此功能允许任何安装在 COM + 服务器应用程序 （称为服务器组件以后） 来运行自定义初始化和清理代码的 COM + 组件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An instance of each component that implements the IProcessInitializer interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</source>
          <target state="translated">将创建和存储的持续时间内的进程，并在启动和关闭过程中调用接口方法上实现 IProcessInitializer 接口的每个组件的实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When implemented on a &lt;xref:System.EnterpriseServices.ServicedComponent&gt;, during registration of the component, the <ph id="ph1">`InitializesServerApplication`</ph> parameter in the <ph id="ph2">`COMAdminCatalogObject`</ph> within the Components collection is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">在上实现时&lt;xref:System.EnterpriseServices.ServicedComponent&gt;，该组件，注册期间<ph id="ph1">`InitializesServerApplication`</ph>中的参数<ph id="ph2">`COMAdminCatalogObject`</ph>内组件集合设置为<ph id="ph3">`true`</ph>。&lt;/xref:System.EnterpriseServices.ServicedComponent&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Using the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</source>
          <target state="translated">使用<ph id="ph1">`Startup`</ph>和<ph id="ph2">`Shutdown`</ph>事件，你可以初始化资源、 创建连接、 初始化共享数据，并运行清理代码。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</source>
          <target state="translated">但是，你不能访问不特定于 COM +，因为尚未创建的服务器组件实例的状态。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In addition, the code in the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</source>
          <target state="translated">此外中的代码<ph id="ph1">`Startup`</ph>和<ph id="ph2">`Shutdown`</ph>事件应尽可能快地返回，因为系统等待 90 秒仅针对 Dllhost.exe 若要准备接受激活，则在系统启动过程。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</source>
          <target state="translated">如果 Dllhost.exe 不发出信号，就可以在 90 秒内，系统会结束该进程;因此，所有的初始化处理需要在此时限内完成。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Each server component that participates in initialization must support the IProcessInitializer interface.</source>
          <target state="translated">参与初始化每个服务器组件必须支持 IProcessInitializer 接口。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>On DllHost.exe startup, COM+ creates all server components that requested this service, calls <ph id="ph1">`QueryInterface`</ph> for the IProcessInitializer interface, and calls the &lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt; function.</source>
          <target state="translated">在 DllHost.exe 启动 COM + 创建请求此服务，调用的所有服务器组件<ph id="ph1">`QueryInterface`</ph>IProcessInitializer 接口，并调用&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;函数。&lt;/xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Similarly, when the DllHost.exe process is shut down, it calls the &lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt; function on those previously stored interface pointers.</source>
          <target state="translated">同样，当 DllHost.exe 进程关闭的情况下，它将调用&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;函数对以前存储的接口指针。&lt;/xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Performs shutdown actions.</source>
          <target state="translated">执行关闭操作。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Called when Dllhost.exe is shut down.</source>
          <target state="translated">当 Dllhost.exe 关闭时调用。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Shutdown is not called during a failfast or other catastrophic shutdown events.</source>
          <target state="translated">Failfast 或其他灾难性关闭事件过程中没有调用关闭。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Performs initialization at startup.</source>
          <target state="translated">执行在启动时初始化。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Called when Dllhost.exe is started.</source>
          <target state="translated">启动 Dllhost.exe 时调用。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The object referenced by <ph id="ph1">`punkProcessControl`</ph> implements an &lt;xref:System.EnterpriseServices.IProcessInitControl&gt; interface.</source>
          <target state="translated">所引用的对象<ph id="ph1">`punkProcessControl`</ph>实现&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;接口。&lt;/xref:System.EnterpriseServices.IProcessInitControl&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.EnterpriseServices.IProcessInitControl&gt; supports the single method &lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;.</source>
          <target state="translated">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;支持单个方法&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;.&lt;/xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;&lt;/xref:System.EnterpriseServices.IProcessInitControl&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The initialization code in Startup can call the &lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</source>
          <target state="translated">中启动的初始化代码可以调用&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;，且超时的值将设置为等于在组件超时的启动之前剩余的秒数。&lt;/xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In Microsoft Windows XP, a pointer to the <bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface of the COM component starting up.</source>
          <target state="translated">在 Microsoft Windows XP 中，指向的指针<bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>启动的 COM 组件的接口。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In Microsoft Windows 2000, this argument is always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">在 Microsoft Windows 2000 中，此自变量始终是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>