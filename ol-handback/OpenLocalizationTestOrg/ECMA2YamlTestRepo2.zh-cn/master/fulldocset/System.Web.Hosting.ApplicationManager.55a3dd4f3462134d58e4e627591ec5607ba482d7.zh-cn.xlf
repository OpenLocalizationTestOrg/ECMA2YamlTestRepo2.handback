<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a3c9f8a556c17d4d4b487bdc3006512ac45a722</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Hosting.ApplicationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6fd613b7cb5a281cb37408b4b8a1f89b4847dfa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c2ead49966114e05eab13bc605b0199202662ef</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manages ASP.NET application domains for an ASP.NET hosting application.</source>
          <target state="translated">ASP.NET 承载的应用程序可管理 ASP.NET 应用程序域。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ApplicationManager object provides lifetime management of objects in the hosting environment for an ASP.NET application.</source>
          <target state="translated">ApplicationManager 对象提供 ASP.NET 应用程序的宿主环境中的对象的生存期的管理。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It is responsible for:      -   Activating and initializing ASP.NET applications.</source>
          <target state="translated">它负责:-激活并初始化 ASP.NET 应用程序。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>-   Managing the application lifetime and the lifetime of objects registered in the application.</source>
          <target state="translated">-管理应用程序和对象的生存期注册应用程序中。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>-   Exposing objects used by the hosting environment to process ASP.NET application requests.</source>
          <target state="translated">-公开由宿主环境中用于处理 ASP.NET 应用程序请求的对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>-   Providing a list of applications running in the hosting process at any given moment.</source>
          <target state="translated">-提供在任何给定时刻在宿主进程中运行的应用程序的列表。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Shuts down all application domains.</source>
          <target state="translated">关闭所有应用程序域。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If a call to the Close method reduces the reference count of applications using the application manager to 0, the Close method calls the &lt;xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A&gt; method.</source>
          <target state="translated">如果对关闭方法的调用减少了使用为 0 的应用程序管理器的应用程序的引用计数，关闭的方法调用&lt;xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A&gt;方法。&lt;/xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Creates an object for the specified application domain, based on type.</source>
          <target state="translated">创建指定的应用程序域，基于类型的对象。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>CreateObject is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">CreateObject 是.NET Framework 3.5 版中引入的。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>版本和依赖关系<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.Hosting.IApplicationHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.Hosting.IApplicationHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The type of the object to create.</source>
          <target state="translated">要创建的对象的类型。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A new object of the type specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">中指定的类型的新对象<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A physical path for the application does not exist.</source>
          <target state="translated">应用程序的物理路径不存在。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</source>
          <target state="translated">创建基于类型、 虚拟和物理路径和指定类型的对象已存在时指示失败行为的布尔值的指定的应用程序域的对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The CreateObject method is used to create and register objects in the application.</source>
          <target state="translated">CreateObject 方法用于创建和注册应用程序中的对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Only one object of each type can be created.</source>
          <target state="translated">可以创建的每种类型的一个对象。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you need to create multiple objects of the same type, you must implement an object factory.</source>
          <target state="translated">如果你需要创建多个相同类型的对象，则必须实现的对象工厂。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see the code example in this topic.</source>
          <target state="translated">有关详细信息，请参阅本主题中的代码示例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each application, identified by a unique application identifier, runs in its own application domain.</source>
          <target state="translated">每个应用程序，由唯一的应用程序标识符，标识在其自己的应用程序域中运行。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The CreateObject method creates an object of the specified type in the application domain of the application specified in the <ph id="ph1">`appID`</ph> parameter.</source>
          <target state="translated">CreateObject 方法中指定的应用程序的应用程序域中创建指定类型的对象<ph id="ph1">`appID`</ph>参数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If an application domain does not exist for the specified application, one is created before the object is created.</source>
          <target state="translated">如果应用程序域不存在指定应用程序中，将创建对象之前，创建一个。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`failIfExists`</ph> parameter controls the behavior of the CreateObject method when an object of the specified type already exists in the application.</source>
          <target state="translated"><ph id="ph1">`failIfExists`</ph>参数控制 CreateObject 方法的行为，当应用程序中已存在的指定类型的对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`failIfExists`</ph> is <ph id="ph2">`true`</ph>, the CreateObject method throws an &lt;xref:System.InvalidOperationException&gt; exception.</source>
          <target state="translated">当<ph id="ph1">`failIfExists`</ph>是<ph id="ph2">`true`</ph>，CreateObject 方法将引发&lt;xref:System.InvalidOperationException&gt;异常。&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`failIfExists`</ph> is <ph id="ph2">`false`</ph>, the CreateObject method returns the existing registered object of the specified type.</source>
          <target state="translated">当<ph id="ph1">`failIfExists`</ph>是<ph id="ph2">`false`</ph>，CreateObject 方法返回指定类型的现有已注册的对象。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The CreateObject method calls the overload that takes an additional <ph id="ph1">`throwOnError`</ph> parameter with <ph id="ph2">`throwOnError`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">CreateObject 方法调用的重载采用一个附加<ph id="ph1">`throwOnError`</ph>参数<ph id="ph2">`throwOnError`</ph>设置为<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The unique identifier for the application that owns the object.</source>
          <target state="translated">该对象所属应用程序的唯一标识符。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The type of the object to create.</source>
          <target state="translated">要创建的对象的类型。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The virtual path to the application.</source>
          <target state="translated">应用程序的虚拟路径。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The physical path to the application.</source>
          <target state="translated">应用程序的物理路径。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to throw an exception if an object of the specified type is currently registered; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to return the existing registered object of the specified type.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>引发异常如果指定类型的对象是当前已注册;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>返回指定类型的现有已注册的对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A new object of the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">指定的新对象<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;failIfExists&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and an object of the specified type is already registered.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;failIfExists&lt;/code&gt;</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和已注册的指定类型的对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</source>
          <target state="translated">创建基于类型、 虚拟和物理路径、 时已存在指定类型的对象，和一个布尔值，该值指示是否引发宿主初始化错误异常指示失败行为的布尔值的指定的应用程序域的对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This overload of the &lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt; method provides the <ph id="ph1">`throwOnError`</ph> parameter, which allows you to control whether hosting initialization exceptions are thrown.</source>
          <target state="translated">此重载&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;方法提供<ph id="ph1">`throwOnError`</ph>参数，它允许你控制是否宿主初始化异常引发。&lt;/xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The overload of the &lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt; method that does not provide <ph id="ph1">`throwOnError`</ph> calls this overload with the parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">重载&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;不提供的方法<ph id="ph1">`throwOnError`</ph>参数设置为调用此重载<ph id="ph2">`false`</ph>。&lt;/xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The unique identifier for the application that owns the object.</source>
          <target state="translated">该对象所属应用程序的唯一标识符。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The type of the object to create.</source>
          <target state="translated">要创建的对象的类型。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The virtual path to the application.</source>
          <target state="translated">应用程序的虚拟路径。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The physical path to the application.</source>
          <target state="translated">应用程序的物理路径。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to throw an exception if an object of the specified type is currently registered; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to return the existing registered object of the specified type.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>引发异常如果指定类型的对象是当前已注册;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>返回指定类型的现有已注册的对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to throw exceptions for hosting initialization errors; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to not throw hosting initialization exceptions.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>引发异常用于托管初始化错误;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>到不承载初始化异常引发。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A new object of the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">指定的新对象<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;failIfExists&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and an object of the specified type is already registered.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;failIfExists&lt;/code&gt;</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和已注册的指定类型的对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets the application domain of the specified application.</source>
          <target state="translated">获取指定的应用程序的应用程序域。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The unique identifier for the application.</source>
          <target state="translated">应用程序的唯一标识符。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The application domain of the application.</source>
          <target state="translated">应用程序的应用程序域。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the application domain of an application using the specified host.</source>
          <target state="translated">获取使用指定的主机的应用程序的应用程序域。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The host to get the application domain for.</source>
          <target state="translated">要获取的应用程序域的主机。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The application domain of the application.</source>
          <target state="translated">应用程序的应用程序域。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns the single instance of the <bpt id="p1">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with this ASP.NET host process.</source>
          <target state="translated">返回的单个实例<bpt id="p1">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与此 ASP.NET 主机进程关联的对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Only one instance of the &lt;xref:System.Web.Hosting.ApplicationManager&gt; object is created by an ASP.NET host process in the default application domain.</source>
          <target state="translated">一个实例&lt;xref:System.Web.Hosting.ApplicationManager&gt;由 ASP.NET 主机进程默认应用程序域中创建对象。&lt;/xref:System.Web.Hosting.ApplicationManager&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If an instance of the &lt;xref:System.Web.Hosting.ApplicationManager&gt; class is not available, the GetApplicationManager method first creates an instance of the &lt;xref:System.Web.Hosting.ApplicationManager&gt; class and then returns the newly created object.</source>
          <target state="translated">实例时，如果&lt;xref:System.Web.Hosting.ApplicationManager&gt;类不可用，GetApplicationManager 方法首先创建的一个实例&lt;xref:System.Web.Hosting.ApplicationManager&gt;类，然后返回新创建的对象。&lt;/xref:System.Web.Hosting.ApplicationManager&gt; &lt;/xref:System.Web.Hosting.ApplicationManager&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If an instance of the &lt;xref:System.Web.Hosting.ApplicationManager&gt; class was previously created, the GetApplicationManager method returns the existing object.</source>
          <target state="translated">实例时，如果&lt;xref:System.Web.Hosting.ApplicationManager&gt;以前创建类，GetApplicationManager 方法将返回现有对象。&lt;/xref:System.Web.Hosting.ApplicationManager&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The single instance of the <bpt id="p1">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the ASP.NET host process that is running.</source>
          <target state="translated">单个实例<bpt id="p1">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与正在运行的 ASP.NET 主机进程关联的对象。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns the registered object of the specified type from the specified application.</source>
          <target state="translated">从指定的应用程序中返回指定类型的已注册的对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The unique identifier for the application that owns the object.</source>
          <target state="translated">该对象所属应用程序的唯一标识符。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The type of the object to return.</source>
          <target state="translated">要返回的对象的类型。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The registered object of the specified type; or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type has not been registered through a call to the &lt;xref:System.Web.Hosting.ApplicationManager.CreateObject*&gt; method.</source>
          <target state="translated">指定的类型; 的已注册的对象或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果未通过调用注册类型时&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject*&gt;方法。&lt;/xref:System.Web.Hosting.ApplicationManager.CreateObject*&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;appId&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;appId&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>—or—       <ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">—or—       <ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns a snapshot of running applications.</source>
          <target state="translated">返回正在运行的应用程序的快照。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Web.Hosting.ApplicationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that contain information about the applications managed by this <bpt id="p2">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">数组<bpt id="p1">&lt;xref href="System.Web.Hosting.ApplicationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含此托管的应用程序有关的信息的对象<bpt id="p2">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实例。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gives the application domain an infinite lifetime by preventing a lease from being created.</source>
          <target state="translated">为应用程序域提供无限生存期通过防止创建租约。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This method overrides the &lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt; method in its base class.</source>
          <target state="translated">此方法重写&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;方法在其基本类。&lt;/xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It always returns <ph id="ph1">`null`</ph> and thereby prevents a lease from being created that would limit the application domain's lifetime.</source>
          <target state="translated">它始终返回<ph id="ph1">`null`</ph>，从而防止创建租约，会限制应用程序域的生存期。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</source>
          <target state="translated">返回一个值，该值指示是否托管进程的所有应用程序都处于空闲状态且未在处理请求。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The IsIdle method returns <ph id="ph1">`true`</ph> if all applications hosted by the process are idle.</source>
          <target state="translated">IsIdle 方法返回<ph id="ph1">`true`</ph>如果托管进程的所有应用程序都处于空闲状态。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if all applications in the process are idle; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果在进程中的所有应用程序都处于空闲状态;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Makes a thread-safe increment to the user reference count of the application manager instance.</source>
          <target state="translated">线程安全增量对应用程序管理器实例的用户引用计数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Unloads all application resources.</source>
          <target state="translated">卸载应用程序的所有资源。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Calling the ShutdownAll method is equivalent to calling the &lt;xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName&gt; method in all application domains managed by this &lt;xref:System.Web.Hosting.ApplicationManager&gt; instance; however, the ShutdownAll method can be called from outside the managed application domains.</source>
          <target state="translated">调用 ShutdownAll 方法等效于调用&lt;xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName&gt;由此管理的所有应用程序域中的方法&lt;xref:System.Web.Hosting.ApplicationManager&gt;实例; 但是，ShutdownAll 方法可以从外部调用的托管应用程序域。&lt;/xref:System.Web.Hosting.ApplicationManager&gt; &lt;/xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Unloads the specified application.</source>
          <target state="translated">卸载指定的应用程序。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Calling the ShutdownApplication method is equivalent to calling the &lt;xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName&gt; method for a specific application domain; however, the ShutdownApplication method can be called from outside managed application domains.</source>
          <target state="translated">调用 ShutdownApplication 方法等效于调用&lt;xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName&gt;方法的特定应用程序域; 但是，在从外部托管的应用程序域调用 ShutdownApplication 方法。&lt;/xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The unique identifier of the application to unload.</source>
          <target state="translated">要卸载的应用程序唯一标识符。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;appId&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;appId&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Removes the specified object from the list of registered objects in an application.</source>
          <target state="translated">从应用程序中的已注册对象列表中移除指定的对象。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</source>
          <target state="translated">如果要删除的对象的应用程序中的已注册对象列表中的最后一个剩余对象，卸载应用程序为止。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The unique identifier for the application that owns the object.</source>
          <target state="translated">该对象所属应用程序的唯一标识符。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The type of the object to unload.</source>
          <target state="translated">要卸载的对象类型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>