<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18e366ad8b4ec0bed32aaeaa0054b441b06c34a4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Reflection.Binder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8590adc4f64a80adc08b69a2df63fe0d4f522eb0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f98751ecd10a223ca3b0da29a09e354e8b710aeb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</source>
          <target state="translated">从候选项列表中选择成员并执行从实参类型到形参类型的类型转换。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Implementations of the Binder class are used by methods such as &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;, which selects from a set of possible members to execute, based on a set of parameter types and argument values; &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;, which selects a method based on parameter types; and so on.</source>
          <target state="translated">联编程序类的实现使用的方法&lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;，如从一组的可能的成员，若要执行，选择基于一组参数类型和自变量值;&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;，后者选择基于参数类型; 等的方法。&lt;/xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; &lt;/xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A default implementation of the Binder class is provided by the &lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">联编程序类的默认实现由&lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This constructor is called by the constructors of derived classes, to initialize state in this type.</source>
          <target state="translated">派生类中，可将在这种类型的状态初始化的构造函数将调用此构造函数。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Selects a field from the given set of fields, based on the specified criteria.</source>
          <target state="translated">从给定的一组字段，基于指定条件中选择一个字段。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`bindingAttr`</ph> does not include &lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;, the default binder implementation provided by &lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt; simply returns the first element of <ph id="ph2">`match`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`bindingAttr`</ph>不包括&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;，由提供的默认联编程序实现&lt;xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt;只是返回的第一个元素<ph id="ph2">`match`</ph>。&lt;/xref:System.Type.DefaultBinder%2A?displayProperty=fullName&gt; &lt;/xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>No selection is done.</source>
          <target state="translated">不进行选择。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This method controls the binding provided by &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法由&lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;.&lt;/xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;绑定的控件</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">按位组合<bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The set of fields that are candidates for matching.</source>
          <target state="translated">用于匹配的候选项的字段集。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">例如，当<bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用对象<ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>，此参数指定的反射已确定为可能的字段集匹配项，通常是因为它们具有正确的成员名称。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">由提供的默认实现<ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>更改此数组的顺序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The field value used to locate a matching field.</source>
          <target state="translated">用于查找匹配的字段的字段值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An instance of &lt;xref:System.Globalization.CultureInfo&gt; that is used to control the coercion of data types, in binder implementations that coerce types.</source>
          <target state="translated">实例&lt;xref:System.Globalization.CultureInfo&gt;用于控制类型强制的数据，强制类型的联编程序实现中。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`culture`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">如果<ph id="ph1">`culture`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、&lt;xref:System.Globalization.CultureInfo&gt;则使用当前线程。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents 1000 to a <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">注意︰ 对于示例中，如果联编程序实现允许将值强制转换字符串为数值类型，此参数是必需的要转换<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示 1000 到<bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>值，因为不同的区域性以不同方式表示 1000年。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The default binder does not do such string coercions.</source>
          <target state="translated">默认的联编程序不执行此类字符串强制。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The matching field.</source>
          <target state="translated">匹配字段。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">match</ph><ept id="p3">&lt;/code&gt;</ept> contains multiple fields that are equally good matches for <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
          <target state="translated">对于默认联编程序， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept>包括<bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，和<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">match</ph> <ept id="p3">&lt;/code&gt;</ept>包含同样很好的匹配项的多个字段<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> contains a <ph id="ph2">`MyClass`</ph> object that implements the <ph id="ph3">`IMyClass`</ph> interface, and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">match</ph><ept id="p2">&lt;/code&gt;</ept> contains a field of type <ph id="ph5">`MyClass`</ph> and a field of type <ph id="ph6">`IMyClass`</ph>.</source>
          <target state="translated">例如， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>包含<ph id="ph2">`MyClass`</ph>实现对象<ph id="ph3">`IMyClass`</ph>接口，和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph4">match</ph> <ept id="p2">&lt;/code&gt;</ept>包含类型的字段<ph id="ph5">`MyClass`</ph>和类型的字段<ph id="ph6">`IMyClass`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">match</ph><ept id="p3">&lt;/code&gt;</ept> contains no fields that can accept <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
          <target state="translated">对于默认联编程序， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept>包括<bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，和<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">match</ph> <ept id="p3">&lt;/code&gt;</ept>不包含可以接受任何字段<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">match</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">对于默认联编程序， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bindingAttr</ph> <ept id="p1">&lt;/code&gt;</ept>包括<bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，和<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">match</ph> <ept id="p3">&lt;/code&gt;</ept>是<bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>或为空数组。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept> includes <bpt id="p2">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Selects a method to invoke from the given set of methods, based on the supplied arguments.</source>
          <target state="translated">选择要从给定的一组方法，根据所提供的参数调用的方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The default binder takes into account both parameters that have values and <ph id="ph1">`params`</ph> arrays (<ph id="ph2">`ParamArray`</ph> arrays in Visual Basic).</source>
          <target state="translated">默认的联编程序会考虑这两个参数具有值和<ph id="ph1">`params`</ph>数组 (<ph id="ph2">`ParamArray`</ph> Visual Basic 中的数组)。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Thus, it is possible to find a match in cases where <ph id="ph1">`args`</ph> and <ph id="ph2">`match`</ph> do not contain the same number of elements.</source>
          <target state="translated">因此，很可能在情况下查找匹配项其中<ph id="ph1">`args`</ph>和<ph id="ph2">`match`</ph>不包含相同数量的元素。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by BindToMethod.</source>
          <target state="translated">联编程序使客户端将参数数组的映射回其原始格式，如果自变量数组具有已由 BindToMethod 操作。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Use this remap capability to get back by-reference arguments when such arguments are present.</source>
          <target state="translated">使用此重新映射功能时应存在的此类参数取回按引用自变量。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When you pass arguments by name, the binder reorders the argument array.</source>
          <target state="translated">当你按名称传递自变量时，活页夹重新排序自变量数组。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`state`</ph> parameter keeps track of argument reordering, thus enabling the binder's &lt;xref:System.Reflection.Binder.ReorderArgumentArray%2A&gt; method to reorder the argument array to its original form.</source>
          <target state="translated"><ph id="ph1">`state`</ph>参数将跟踪的参数重新排序，从而使活页夹的&lt;xref:System.Reflection.Binder.ReorderArgumentArray%2A&gt;方法能够为其原始形式自变量数组重新排序。&lt;/xref:System.Reflection.Binder.ReorderArgumentArray%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The BindToMethod method is used by the &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">将使用 BindToMethod 方法的&lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">按位组合<bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The set of methods that are candidates for matching.</source>
          <target state="translated">方法用于匹配的候选项集。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">例如，当<bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用对象<ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>，此参数指定的反射已确定为可能的方法集匹配项，通常是因为它们具有正确的成员名称。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">由提供的默认实现<ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>更改此数组的顺序。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The arguments that are passed in.</source>
          <target state="translated">在传递的参数。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <ph id="ph1">`names`</ph> parameter is used to specify an order other than positional order.</source>
          <target state="translated">联编程序可以更改此数组中; 中的自变量的顺序例如，默认的联编程序更改参数的顺序，如果<ph id="ph1">`names`</ph>参数用于指定位置顺序以外顺序。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</source>
          <target state="translated">如果联编程序实现将自变量类型强制转换，可以以及更改的类型和参数的值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">启用绑定，以便与在其中修改类型的参数签名一起工作的参数修饰符的数组。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The default binder implementation does not use this parameter.</source>
          <target state="translated">默认的联编程序实现不使用此参数。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An instance of &lt;xref:System.Globalization.CultureInfo&gt; that is used to control the coercion of data types, in binder implementations that coerce types.</source>
          <target state="translated">实例&lt;xref:System.Globalization.CultureInfo&gt;用于控制类型强制的数据，强制类型的联编程序实现中。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`culture`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">如果<ph id="ph1">`culture`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、&lt;xref:System.Globalization.CultureInfo&gt;则使用当前线程。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents 1000 to a <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">注意︰ 对于示例中，如果联编程序实现允许将值强制转换字符串为数值类型，此参数是必需的要转换<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示 1000 到<bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>值，因为不同的区域性以不同方式表示 1000年。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The default binder does not do such string coercions.</source>
          <target state="translated">默认的联编程序不执行此类字符串强制。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The parameter names, if parameter names are to be considered when matching, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if arguments are to be treated as purely positional.</source>
          <target state="translated">参数名称，如果参数名称都视为匹配时，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果的被视为纯位置自变量。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, parameter names must be used if arguments are not supplied in positional order.</source>
          <target state="translated">例如，如果自变量不按位置顺序提供，则必须使用参数名称。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>After the method returns, <ph id="ph1">`state`</ph> contains a binder-provided object that keeps track of argument reordering.</source>
          <target state="translated">该方法返回后，<ph id="ph1">`state`</ph>包含一个提供联编程序的对象，用于跟踪的参数重新排序。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The binder creates this object, and the binder is the sole consumer of this object.</source>
          <target state="translated">联编程序创建此对象，并活页夹是此对象的唯一使用者。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`state`</ph> is not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when <bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> returns, you must pass <ph id="ph2">`state`</ph> to the &lt;xref:System.Reflection.Binder.ReorderArgumentArray*&gt; method if you want to restore <ph id="ph3">`args`</ph> to its original order, for example, so that you can retrieve the values of <bpt id="p3">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> parameters (<bpt id="p4">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> parameters in Visual Basic).</source>
          <target state="translated">如果<ph id="ph1">`state`</ph>不<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>时<bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>返回时，必须传递<ph id="ph2">`state`</ph>到&lt;xref:System.Reflection.Binder.ReorderArgumentArray*&gt;方法如果你想要还原<ph id="ph3">`args`</ph>到其原始顺序，例如，以便你可以检索的值<bpt id="p3">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>参数 (<bpt id="p4">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>参数在 Visual Basic 中的)。&lt;/xref:System.Reflection.Binder.ReorderArgumentArray*&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The matching method.</source>
          <target state="translated">匹配的方法。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains multiple methods that are equally good matches for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">args</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">对于默认联编程序， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept>包含同样很好的匹配项的多个方法<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">args</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> contains a <ph id="ph2">`MyClass`</ph> object that implements the <ph id="ph3">`IMyClass`</ph> interface, and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">match</ph><ept id="p2">&lt;/code&gt;</ept> contains a method that takes <ph id="ph5">`MyClass`</ph> and a method that takes <ph id="ph6">`IMyClass`</ph>.</source>
          <target state="translated">例如， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">args</ph> <ept id="p1">&lt;/code&gt;</ept>包含<ph id="ph2">`MyClass`</ph>实现对象<ph id="ph3">`IMyClass`</ph>接口，和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph4">match</ph> <ept id="p2">&lt;/code&gt;</ept>包含采用的方法<ph id="ph5">`MyClass`</ph>和采用的方法<ph id="ph6">`IMyClass`</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains no methods that can accept the arguments supplied in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">args</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">对于默认联编程序， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept>包含可以接受中提供的参数没有方法<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">args</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">对于默认联编程序， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或为空数组。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Changes the type of the given <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given <bpt id="p2">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">类型更改给定<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到给定<bpt id="p2">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Reflection models the accessibility rules of the common type system.</source>
          <target state="translated">反射建模常规类型系统可访问性的规则。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</source>
          <target state="translated">例如，如果调用方在同一程序集，调用方不将特殊权限需要用于内部成员。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Otherwise, the caller needs &lt;xref:System.Security.Permissions.ReflectionPermission&gt;.</source>
          <target state="translated">否则，调用方需要&lt;xref:System.Security.Permissions.ReflectionPermission&gt;.&lt;/xref:System.Security.Permissions.ReflectionPermission&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This is consistent with lookup of members that are protected, private, and so on.</source>
          <target state="translated">这是与受保护的成员的查找一致、 专用和等。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The general principle is that <ph id="ph1">`ChangeType`</ph> should perform only widening coercions, which never lose data.</source>
          <target state="translated">一般原则是，<ph id="ph1">`ChangeType`</ph>应执行仅扩大强制转换，永远不会丢失数据。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</source>
          <target state="translated">扩大强制的一个示例强制转换为 64 位有符号的整数的值将 32 位有符号的整数的值。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This is distinguished from a narrowing coercion, which may lose data.</source>
          <target state="translated">这被有别于收缩强制不同，后者可能会丢失数据。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</source>
          <target state="translated">收缩强制的一个示例强制转换为 32 位有符号整数一个 64 位带符号的整数。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following table lists the coercions performed by the default <ph id="ph1">`ChangeType`</ph>.</source>
          <target state="translated">下表列出了默认情况下执行的强制<ph id="ph1">`ChangeType`</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>|Source type|Target type|   |-----------------|-----------------|   |Any type|Its base type.|   |Any type|The interface it implements.|   |Char|UInt16, UInt32, Int32, UInt64, Int64, Single, Double|   |Byte|Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double|   |SByte|Int16, Int32, Int64, Single, Double|   |UInt16|UInt32, Int32, UInt64, Int64, Single, Double|   |Int16|Int32, Int64, Single, Double|   |UInt32|UInt64, Int64, Single, Double|   |Int32|Int64, Single, Double|   |UInt64|Single, Double|   |Int64|Single, Double|   |Single|Double|   |Non-reference|By-reference.|</source>
          <target state="translated">|源类型 |目标类型 |  |-----------------|-----------------|  |任何类型 |与其基类型。 |  |任何类型 |它实现的接口。 |  |Char |UInt16、 UInt32、 Int32、 UInt64、 Int64、 Single、 Double |  |字节 |Char、 UInt16、 Int16、 UInt32、 Int32、 UInt64、 Int64、 Single、 Double |  |SByte |Int16、 Int32、 Int64、 Single、 Double |  |UInt16 |UInt32、 Int32、 UInt64、 Int64、 Single、 Double |  |Int16 |Int32、 Int64、 Single、 Double |  |UInt32 |UInt64、 Int64、 Single、 Double |  |Int32 |Int64、 单，双击 |  |UInt64 |单个，双精度型 |  |Int64 |单个，双精度型 |  |单个 |Double |  |非引用 |按引用。 |</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The object to change into a new <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要将更改为一个新的对象<bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that <ph id="ph1">`value`</ph> will become.</source>
          <target state="translated">新<bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，<ph id="ph1">`value`</ph>将变得。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An instance of &lt;xref:System.Globalization.CultureInfo&gt; that is used to control the coercion of data types.</source>
          <target state="translated">实例&lt;xref:System.Globalization.CultureInfo&gt;用于控制类型强制的数据。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`culture`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">如果<ph id="ph1">`culture`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、&lt;xref:System.Globalization.CultureInfo&gt;则使用当前线程。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Note   For example, this parameter is necessary to convert a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents 1000 to a <bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">注意︰ 对于示例中，此参数是必需要转换<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示 1000 到<bpt id="p2">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>值，因为不同的区域性以不同方式表示 1000年。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An object that contains the given value as the new type.</source>
          <target state="translated">一个包含给定的值作为新类型的对象。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Upon returning from &lt;xref:System.Reflection.Binder.BindToMethod*&gt;, restores the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> argument to what it was when it came from <bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回从时&lt;xref:System.Reflection.Binder.BindToMethod*&gt;，还原<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">args</ph> <ept id="p1">&lt;/code&gt;</ept>它来自时自变量<bpt id="p2">&lt;xref uid="langword_csharp_BindToMethod" name="BindToMethod" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Reflection.Binder.BindToMethod*&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The common language runtime calls this method if <ph id="ph1">`state`</ph> is not <ph id="ph2">`null`</ph> after a return from <ph id="ph3">`BindToMethod`</ph>.</source>
          <target state="translated">公共语言运行时调用此方法，如果<ph id="ph1">`state`</ph>不<ph id="ph2">`null`</ph>后从返回<ph id="ph3">`BindToMethod`</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The actual arguments that are passed in.</source>
          <target state="translated">在传递的实际自变量。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Both the types and values of the arguments can be changed.</source>
          <target state="translated">可以更改的类型和参数的值。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A binder-provided object that keeps track of argument reordering.</source>
          <target state="translated">一个提供联编程序的对象，用于跟踪的参数重新排序。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Selects a method from the given set of methods, based on the argument type.</source>
          <target state="translated">从给定的一组方法，根据自变量类型选择的方法。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This method should return <ph id="ph1">`null`</ph> if no method matches the criteria.</source>
          <target state="translated">此方法应返回<ph id="ph1">`null`</ph>如果没有方法与条件匹配。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This method controls the selection provided by the <ph id="ph1">`GetConstructor`</ph> and <ph id="ph2">`GetMethod`</ph> methods on <ph id="ph3">`Type`</ph>.</source>
          <target state="translated">此方法控制由所选内容<ph id="ph1">`GetConstructor`</ph>和<ph id="ph2">`GetMethod`</ph>方法<ph id="ph3">`Type`</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">按位组合<bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The set of methods that are candidates for matching.</source>
          <target state="translated">方法用于匹配的候选项集。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">例如，当<bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用对象<ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>，此参数指定的反射已确定为可能的方法集匹配项，通常是因为它们具有正确的成员名称。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">由提供的默认实现<ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>更改此数组的顺序。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The parameter types used to locate a matching method.</source>
          <target state="translated">用于定位匹配方法的参数类型。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">启用绑定，以便与在其中修改类型的参数签名一起工作的参数修饰符的数组。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The matching method, if found; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">匹配方法，如果找到了;否则为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains multiple methods that are equally good matches for the parameter types described by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">types</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">对于默认联编程序， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept>包含很好的匹配项所描述的参数类型的多个方法<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">types</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For example, the array in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">types</ph><ept id="p1">&lt;/code&gt;</ept> contains a &lt;xref:System.Type&gt; object for <ph id="ph2">`MyClass`</ph> and the array in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">match</ph><ept id="p2">&lt;/code&gt;</ept> contains a method that takes a base class of <ph id="ph4">`MyClass`</ph> and a method that takes an interface that <ph id="ph5">`MyClass`</ph> implements.</source>
          <target state="translated">例如中的数组<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">types</ph> <ept id="p1">&lt;/code&gt;</ept>包含&lt;xref:System.Type&gt;对象<ph id="ph2">`MyClass`</ph>和中的数组<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph3">match</ph> <ept id="p2">&lt;/code&gt;</ept>包含采用的基类的方法<ph id="ph4">`MyClass`</ph>和采用接口的方法<ph id="ph5">`MyClass`</ph>实现。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">对于默认联编程序， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或为空数组。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-or-       An element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">types</ph><ept id="p1">&lt;/code&gt;</ept> derives from &lt;xref:System.Type&gt;, but is not of type <bpt id="p2">&lt;xref uid="langword_csharp_RuntimeType" name="RuntimeType" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-的元素<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">types</ph> <ept id="p1">&lt;/code&gt;</ept>派生自&lt;xref:System.Type&gt;，但不是类型<bpt id="p2">&lt;xref uid="langword_csharp_RuntimeType" name="RuntimeType" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Selects a property from the given set of properties, based on the specified criteria.</source>
          <target state="translated">从给定的一组属性，基于指定条件中选择一个属性。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This method controls the selection provided by the <ph id="ph1">`GetProperty`</ph> method on <ph id="ph2">`Type`</ph>.</source>
          <target state="translated">此方法控制由所选内容<ph id="ph1">`GetProperty`</ph>方法<ph id="ph2">`Type`</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">按位组合<bpt id="p1">&lt;xref href="System.Reflection.BindingFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The set of properties that are candidates for matching.</source>
          <target state="translated">用于匹配的候选项的属性集。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For example, when a <bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is used by <ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">例如，当<bpt id="p1">&lt;xref href="System.Reflection.Binder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用对象<ph id="ph1">&amp;lt;</ph>xref:System.Type.InvokeMember%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>，此参数指定的反射已确定为可能的属性集匹配项，通常是因为它们具有正确的成员名称。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The default implementation provided by <ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> changes the order of this array.</source>
          <target state="translated">由提供的默认实现<ph id="ph1">&amp;lt;</ph>xref:System.Type.DefaultBinder%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>更改此数组的顺序。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The return value the matching property must have.</source>
          <target state="translated">必须具有返回值匹配的属性。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The index types of the property being searched for.</source>
          <target state="translated">要搜索的属性索引类型。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Used for index properties such as the indexer for a class.</source>
          <target state="translated">用于索引属性，例如一个类的索引器。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">启用绑定，以便与在其中修改类型的参数签名一起工作的参数修饰符的数组。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The matching property.</source>
          <target state="translated">匹配的属性。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> contains multiple properties that are equally good matches for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">returnType</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">indexes</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">对于默认联编程序， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept>包含多个属性都同样很好的匹配项<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">returnType</ph> <ept id="p2">&lt;/code&gt;</ept>和<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">indexes</ph> <ept id="p3">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For the default binder, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">match</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or an empty array.</source>
          <target state="translated">对于默认联编程序， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">match</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或为空数组。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>