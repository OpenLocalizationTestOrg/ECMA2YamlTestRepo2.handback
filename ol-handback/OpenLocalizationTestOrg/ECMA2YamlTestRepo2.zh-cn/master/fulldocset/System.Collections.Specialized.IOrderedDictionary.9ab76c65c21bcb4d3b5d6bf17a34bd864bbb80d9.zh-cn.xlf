<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4bc886fa7a56c7eb8ae26cc12138d2c48f9cd2f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Specialized.IOrderedDictionary.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ffa8dfee746400ea128289277f1cef7d8b6d229</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79bb36ed007e7b4f9de4a448db98cff7469fee9c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an indexed collection of key/value pairs.</source>
          <target state="translated">表示键/值对的索引的集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>IOrderedDictionary elements can be accessed either with the key or with the index.</source>
          <target state="translated">可以访问 IOrderedDictionary 元素，与键或索引。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair stored in a &lt;xref:System.Collections.DictionaryEntry&gt; structure.</source>
          <target state="translated">每个元素是存储在一个键/值对&lt;xref:System.Collections.DictionaryEntry&gt;结构。&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Each pair must have a unique key that is not <ph id="ph1">`null`</ph>, but the value can be <ph id="ph2">`null`</ph> and does not have to be unique.</source>
          <target state="translated">每个对必须具有唯一键不<ph id="ph1">`null`</ph>，但该值可以为<ph id="ph2">`null`</ph>和不必是唯一的。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The IOrderedDictionary interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated">IOrderedDictionary 接口允许的所包含的键和值进行枚举，但它并不表示任何特定的排序顺序。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`For Each`</ph>在 Visual Basic 中) 返回集合中的元素的类型的对象。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Because each element of the &lt;xref:System.Collections.IDictionary&gt; is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">因为每个元素的&lt;xref:System.Collections.IDictionary&gt;是一个键/值对，元素类型不是键的类型或值的类型。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Instead, the element type is &lt;xref:System.Collections.DictionaryEntry&gt;, as the following example shows.</source>
          <target state="translated">相反，元素类型是&lt;xref:System.Collections.DictionaryEntry&gt;，如下面的示例所示。&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#03<ept id="p2">](~/add/codesnippet/csharp/t-system.collections.spe_7_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#03<ept id="p4">](~/add/codesnippet/cpp/t-system.collections.spe_7_1.cpp)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#03<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.spe_7_1.vb)</ept><ept id="p5">]</ept>       The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#03<ept id="p2">](~/add/codesnippet/csharp/t-system.collections.spe_7_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#03<ept id="p4">](~/add/codesnippet/cpp/t-system.collections.spe_7_1.cpp)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#03<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.spe_7_1.vb)</ept> <ept id="p5">]</ept> <ph id="ph1">`foreach`</ph>语句是枚举器，允许从，不写入集合只能读取允许周围的包装器。    </target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">返回的枚举数循环访问<bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>集合。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic、 C#]      <ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建议而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;此外会回此位置的枚举数。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>At this position, the &lt;xref:System.Collections.IEnumerator.Current%2A&gt; property is undefined.</source>
          <target state="translated">在此位置上，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;属性是不确定。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，你必须调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;的第一个元素的集合，然后再读取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;的值枚举器向前移动&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回相同的对象之前&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;到下一个元素。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;还返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">如果最后一次调用到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是不确定的。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;可以再次，集合的第一个元素调用&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;后, 跟&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果对集合进行更改，如添加、 修改或删除元素，则枚举数将失效且不可恢复，而且其行为是不确定。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合; 独占访问权因此，枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以锁定在整个枚举期间的集合。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要允许访问集合以进行读取和写入的多个线程，则必须实现自己的同步。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionaryEnumerator&gt; for the entire <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionaryEnumerator&gt;整个<bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>集合。&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Inserts a key/value pair into the collection at the specified index.</source>
          <target state="translated">将键/值对插入到集合中指定索引处。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;接受<ph id="ph1">`null`</ph>作为有效的值，并允许重复的元素。&lt;/xref:System.Collections.Specialized.IOrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`index`</ph> parameter is equal to &lt;xref:System.Collections.ICollection.Count%2A&gt;, the <ph id="ph2">`value`</ph> parameter is added to the end of the &lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; collection.</source>
          <target state="translated">如果<ph id="ph1">`index`</ph>参数等于&lt;xref:System.Collections.ICollection.Count%2A&gt;、<ph id="ph2">`value`</ph>参数添加到末尾&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;集合。&lt;/xref:System.Collections.Specialized.IOrderedDictionary&gt; &lt;/xref:System.Collections.ICollection.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">在集合中的连续元素，如列表，在插入点之后的元素将下移以容纳新元素。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分在一起，如哈希表的集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The zero-based index at which the key/value pair should be inserted.</source>
          <target state="translated">从零开始的索引，应在此处插入的键/值对。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The object to use as the key of the element to add.</source>
          <target state="translated">要用作要添加的元素的键的对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The object to use as the value of the element to add.</source>
          <target state="translated">要用作要添加的元素的值的对象。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于 0。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;xref:System.Collections.ICollection.Count*&gt;</ph>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>大于<ph id="ph2">&lt;xref:System.Collections.ICollection.Count*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An element with the same key already exists in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">中已存在具有相同键的元素<bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>集合。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>集合是只读的。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>集合具有固定的大小。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">获取或设置指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;接受<ph id="ph1">`null`</ph>作为有效的值，并允许重复的元素。&lt;/xref:System.Collections.Specialized.IOrderedDictionary&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the Item property.</source>
          <target state="translated">C# 语言使用关键字来定义而不是实现项属性的索引器。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Visual Basic implements Item as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 实现为默认属性，它提供相同的索引功能的项。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This property allows you to access a specific element in the collection by using the following syntax:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#04<ept id="p2">](~/add/codesnippet/csharp/p-system.collections.spe_12_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#04<ept id="p4">](~/add/codesnippet/cpp/p-system.collections.spe_12_1.cpp)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#04<ept id="p6">](~/add/codesnippet/visualbasic/p-system.collections.spe_12_1.vb)</ept><ept id="p5">]</ept></source>
          <target state="translated">此属性允许你通过使用以下语法访问集合中的特定元素︰ <bpt id="p1">[!code-cs</bpt> <bpt id="p2">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#04<ept id="p2">](~/add/codesnippet/csharp/p-system.collections.spe_12_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cpp</bpt><bpt id="p4">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#04<ept id="p4">](~/add/codesnippet/cpp/p-system.collections.spe_12_1.cpp)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Specialized.IOrderedDictionary_Implementation#04    <ept id="p6">](~/add/codesnippet/visualbasic/p-system.collections.spe_12_1.vb)</ept><ept id="p5">]</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">要获取或设置元素的从零开始索引。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The element at the specified index.</source>
          <target state="translated">指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于 0。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref:System.Collections.ICollection.Count*&gt;</ph>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>等于或大于<ph id="ph2">&lt;xref:System.Collections.ICollection.Count*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified index.</source>
          <target state="translated">移除指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素，如列表，集合中移除的元素下面的元素的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分在一起，如哈希表的集合。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">要移除的元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于 0。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref:System.Collections.ICollection.Count*&gt;</ph>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>等于或大于<ph id="ph2">&lt;xref:System.Collections.ICollection.Count*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>集合是只读的。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.Specialized.IOrderedDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>集合具有固定的大小。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>