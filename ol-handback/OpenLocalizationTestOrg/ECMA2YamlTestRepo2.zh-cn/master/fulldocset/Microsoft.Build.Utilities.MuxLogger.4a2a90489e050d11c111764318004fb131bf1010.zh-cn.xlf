<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1a58f4258e37de8646e9bfd12202cc63ef6b9f1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.Build.Utilities.MuxLogger.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3aca3c7e03c5de31ed550e9598f60739bf980430</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2154be4bc3b547d29a543508f7b1355f80b13ab5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a multiplexing logger.</source>
          <target state="translated">表示多路复用记录器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The purpose of this logger is to register and unregister multiple loggers during the build.</source>
          <target state="translated">此记录器旨在注册和注销生成过程的多个记录器。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Supports the <ph id="ph1">[!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)]</ph> IDE scenario in which loggers are registered and unregistered for each project system’s build request.</source>
          <target state="translated">支持<ph id="ph1">[!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)]</ph>IDE 方案记录器是否注册并取消注册每个项目系统生成请求。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>One physical build can have multiple logical builds, each with its own set of loggers.</source>
          <target state="translated">一个物理生成可以有多个逻辑生成，各自具有自己的记录器。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>registers itself with the build manager as a regular central /l style logger.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>将自身注册到作为正则中央 /l 样式记录器的生成管理器。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.</source>
          <target state="translated">它将从生成管理器接收消息和路由到正确的记录器，基于逻辑生成消息的来源。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph>generally functions as follows:      -   The <ph id="ph2">`MuxLogger`</ph> is registered at the beginning of the build manager’s Begin build.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>通常函数，如下所示:-<ph id="ph2">`MuxLogger`</ph>注册生成管理器的开始生成开头。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Any loggers registered before the build manager starts the build get the build-started event at the same time as the <ph id="ph1">`MuxLogger`</ph>.</source>
          <target state="translated">注册，然后生成管理器启动生成任何记录器获取生成开始事件在同一时间<ph id="ph1">`MuxLogger`</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Any loggers registered after the build manager starts the build get a synthesized build-started event.</source>
          <target state="translated">注册后生成管理器启动生成任何记录器会获得合成的生成开始事件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the <ph id="ph1">`MuxLogger`</ph>.</source>
          <target state="translated">无法缓存事件，因为生成开始事件的时间戳在创建的事件，并缓存该事件将在注册到的记录器中为不正确的生成时间时确定<ph id="ph1">`MuxLogger`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`MuxLogger`</ph> is initialized by the build manager           The <ph id="ph2">`MuxLogger`</ph> listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</source>
          <target state="translated">-<ph id="ph1">`MuxLogger`</ph>生成管理器初始化<ph id="ph2">`MuxLogger`</ph>侦听从生成管理器上的事件源的所有事件，并将事件正确路由到已注册的记录器。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`MuxLogger`</ph> is shutdown when the build is finished in end build.</source>
          <target state="translated">-<ph id="ph1">`MuxLogger`</ph>完成生成后端生成中已关闭。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>At this time, it unregisters any loggers attached to it.</source>
          <target state="translated">在此期间，它将注销附加到它的任何记录器。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`MuxLogger`</ph> logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</source>
          <target state="translated">-<ph id="ph1">`MuxLogger`</ph>记录生成完成事件时每个记录器观察到的第一个项目启动事件的项目完成事件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph> registers loggers in the following way:      1.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>按以下方式注册记录器︰ 1。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The logger is passed to the <ph id="ph1">`MuxLogger.RegisterLogger`</ph> method with a submission ID that is used to route a message to that logger.</source>
          <target state="translated">记录器传递给<ph id="ph1">`MuxLogger.RegisterLogger`</ph>提交 id 用于将消息路由到该记录器的方法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph> registers the logger to the <ph id="ph2">`MuxLogger`</ph> event source.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>注册的记录器<ph id="ph2">`MuxLogger`</ph>事件源。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the build-started event has already been logged, the <ph id="ph1">`MuxLogger`</ph> creates a new build-started event and sends it to the logger’s event source.</source>
          <target state="translated">如果已记录生成开始事件、<ph id="ph1">`MuxLogger`</ph>创建一个新的生成开始事件并将其发送到记录器的事件源。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph> unregisters loggers in the following way:      1.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>注销记录器方式如下︰ 1。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When a build submission is completed, the <ph id="ph1">`MuxLogger.UnregisterLogger`</ph> method is called with the submission ID for the logger.</source>
          <target state="translated">完成生成提交后，<ph id="ph1">`MuxLogger.UnregisterLogger`</ph>调用方法时，提交 ID 为记录器。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph> looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>提交 id 查找项目完成事件的成功状态并将生成完成的事件记录到记录器。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph>cleans up the event source.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>清理事件源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</source>
          <target state="translated">请注意，注销来自日志记录线程外的线程，并且如果注销称为将记录事件时，可能出现同步问题。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the multiplexing logger.</source>
          <target state="translated">创建多路复用记录器的新实例。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initialize the <bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance with the specified event source.</source>
          <target state="translated">初始化<bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例与指定的事件源。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The event source.</source>
          <target state="translated">事件源。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initialize the <bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance with the specified event source and specified maximum number of nodes.</source>
          <target state="translated">初始化<bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例与指定的事件源和指定的最大节点数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The event source.</source>
          <target state="translated">事件源。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The maximum number of nodes.</source>
          <target state="translated">最大节点数。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets and sets the Parameters attribute, required by the <bpt id="p1">&lt;xref uid="langword_csharp_ILogger" name="ILogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">获取和设置所需的参数属性<bpt id="p1">&lt;xref uid="langword_csharp_ILogger" name="ILogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接口。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns the Parameters attribute.</source>
          <target state="translated">返回的参数属性。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Registers a logger on the <bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and raises a build-started event if the build-started event has already been logged.</source>
          <target state="translated">在注册记录器<bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和是否已记录了生成开始事件引发生成开始事件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The submission ID of the logger being registered.</source>
          <target state="translated">要注册的记录器提交 ID。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The logger to register.</source>
          <target state="translated">要注册的记录器。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Shuts down the <bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and clears out any state.</source>
          <target state="translated">关闭<bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>并清除任何状态。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Removes the specified logger from the MuxLogger.</source>
          <target state="translated">从 MuxLogger 中删除指定的记录器。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The submission ID of the logger to be removed.</source>
          <target state="translated">要删除的记录器提交 ID。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method is successful in removing the logger, otherwise, returns <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果方法成功地删除记录器，否则，返回<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets and sets the Verbosity attribute, required by the <bpt id="p1">&lt;xref uid="langword_csharp_ILogger" name="ILogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">获取和设置所需的详细级别属性<bpt id="p1">&lt;xref uid="langword_csharp_ILogger" name="ILogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接口。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns the Verbosity attribute.</source>
          <target state="translated">返回的详细属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>