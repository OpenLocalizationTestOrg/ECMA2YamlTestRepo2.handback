<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a311318563ae7911a01b48ef53acf92cf9e9ccdb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Services.Protocols.SoapHttpClientProtocol.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">666f0e473fe0297bd333bde4f82e74131c1f4cc8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8bc895695e22f10437368ef9180f5ba50e103ec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the class client that proxies derive from when using SOAP.</source>
          <target state="translated">指定当使用 SOAP 时，代理将派生自的类客户端。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>If you are building an XML Web service client, then a proxy class that derives indirectly or directly from &lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt; must be created for the XML Web service.</source>
          <target state="translated">如果要生成的 XML Web 服务客户端，然后代理派生的类间接或直接从&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;必须为 XML Web 服务创建。&lt;/xref:System.Web.Services.Protocols.WebClientProtocol&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When the XML Web service client calls using SOAP, the proxy class must derive from SoapHttpClientProtocol, which derives from &lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;.</source>
          <target state="translated">当 XML Web 服务客户端调用时使用 SOAP 时，代理类必须派生自 SoapHttpClientProtocol，派生自&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;.&lt;/xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;, in turn, derives from &lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;.</source>
          <target state="translated">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;反过来，派生自&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;.&lt;/xref:System.Web.Services.Protocols.WebClientProtocol&gt;&lt;/xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To communicate with an XML Web service, create a proxy class that derives indirectly or directly from &lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt; for the XML Web service you want to call.</source>
          <target state="translated">若要与 XML Web 服务进行通信，创建派生自的间接或直接代理类&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;为你想要调用 XML Web 服务。&lt;/xref:System.Web.Services.Protocols.WebClientProtocol&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description.</source>
          <target state="translated">而不是手动创建代理类，使用 Web 服务描述语言工具 (Wsdl.exe) 创建给定的 XML Web 服务的服务说明的代理类。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt; method, whereas asynchronous calls are made using the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt; method and the &lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt; method.</source>
          <target state="translated">当 SOAP 协议生成代理类时，同步对 XML Web 服务方法调用通过&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;方法，而使用进行异步调用&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;方法和&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;方法。&lt;/xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt; &lt;/xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt; &lt;/xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapHttpClientProtocol"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapHttpClientProtocol"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Starts an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">启动异步调用的 XML Web 服务方法使用 SOAP。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Typically, you would not call the BeginInvoke method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">通常情况下，您将不 BeginInvoke 方法直接调用，除非你打算重新构建您自己的 XML Web 服务的代理类。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously.</source>
          <target state="translated">从服务说明由 Web 服务描述语言工具 (Wsdl.exe) 生成的代理类将 XML Web 服务方法公开为派生自要以同步方式调用 XML Web 服务方法的代理类的名称。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">若要以异步方式调用 XML Web 服务方法，两个其他方法将添加到每个 XML Web 服务方法中，另一个使用的代理类<ph id="ph1">`Begin`</ph>添加到的 XML Web service 方法和一个具有名称的前缀<ph id="ph2">`End`</ph>添加的前缀。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The proxy class calls the BeginInvoke method to start an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">代理类调用 BeginInvoke 方法来启动对 XML Web service 方法的异步调用调用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`BeginAdd`</ph>, for starting an invocation to the XML Web service method.</source>
          <target state="translated">例如，如果 XML Web 服务公开 XML Web 服务方法名为<ph id="ph1">`Add`</ph>，代理类包含一个名为方法<ph id="ph2">`BeginAdd`</ph>，用于启动调用到 XML Web 服务方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Within the code for the <ph id="ph1">`BeginAdd`</ph>, a call is made to the BeginInvoke method and the results are placed into the expected return type for <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">中的代码<ph id="ph1">`BeginAdd`</ph>、 调用 BeginInvoke 方法和结果放入的预期返回类型<ph id="ph2">`Add`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`methodName`</ph> is used to find the custom attributes which may have been added to the method, such as &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph>用于查找可能已添加到该方法，如&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;.&lt;/xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;的自定义属性</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt; provides additional information about the derived method that is required for the SOAP protocol.</source>
          <target state="translated">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;提供有关派生方法所需的 SOAP 协议的其他信息。&lt;/xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`asyncState`</ph> is passed into <ph id="ph2">`callback`</ph> and is included in the &lt;xref:System.IAsyncResult&gt; that is returned from the BeginInvoke method.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph>传递到<ph id="ph2">`callback`</ph>并且包含在&lt;xref:System.IAsyncResult&gt;从 BeginInvoke 方法返回。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`asyncState`</ph> parameter can be used to pass information about the context of the asynchronous call, specified in the <ph id="ph2">`callback`</ph> parameter, to the delegate that handles the result.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph>参数可以用于传递信息有关的上下文中指定的异步调用的<ph id="ph2">`callback`</ph>参数，处理结果的委托。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the XML Web service method in the derived class that is invoking the BeginInvoke method.</source>
          <target state="translated">正在调用 BeginInvoke 方法的派生类中的 XML Web 服务方法的名称。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An array of objects containing the parameters to pass to the XML Web service.</source>
          <target state="translated">包含要传递到 XML Web 服务的参数的对象的数组。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">数组中的值的顺序对应于求值中派生的类调用方法的参数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The delegate to call when the asynchronous invoke is complete.</source>
          <target state="translated">要在异步调用已完成时调用的委托。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`callback`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the delegate is not called.</source>
          <target state="translated">如果<ph id="ph1">`callback`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，不会调用的委托。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Extra information supplied by the caller.</source>
          <target state="translated">由调用方提供的额外信息。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that is passed to the &lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*&gt; method to obtain the return values from the remote method call.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;传递给&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*&gt;方法以从远程方法调用中获取的返回值。&lt;/xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">请求到达服务器计算机上，但未成功处理。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">请求的对象的当前状态无效。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">访问网络时出错。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Dynamically binds to an XML Web service described in the discovery document at &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url*&gt;.</source>
          <target state="translated">动态地绑定到&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url*&gt;.&lt;/xref:System.Web.Services.Protocols.WebClientProtocol.Url*&gt;发现文档中所述的 XML Web 服务</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the Discover method.</source>
          <target state="translated">XML Web 服务客户端可以动态绑定到不是在使用发现方法的代理类中引用的 XML Web 服务。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Typically, the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt; property refers to the base address of the XML Web service.</source>
          <target state="translated">通常情况下，&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;属性是指 XML Web 服务的基址。&lt;/xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>However, before invoking the Discover method, set the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt; property to a URL of a discovery document.</source>
          <target state="translated">但是，在调用 Discover 方法之前, 设置&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;到发现文档的 URL 的属性。&lt;/xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Discover method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it.</source>
          <target state="translated">发现方法尝试发现的代理类中定义的绑定到文档中找到匹配项，然后动态绑定到它。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If successful, subsequent method calls are directed to the XML Web service described in the discovery document.</source>
          <target state="translated">如果成功，则后续方法调用将定向到 XML Web 服务发现文档中所述。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the &lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;.</source>
          <target state="translated">如果代理类使用 Web 服务描述语言工具 (Wsdl.exe) 生成的代理类定义了由它调用使用&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;.&lt;/xref:System.Web.Services.WebServiceBindingAttribute&gt;的 XML Web 服务方法实现该绑定</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding.</source>
          <target state="translated">当 XML Web 服务实现多个绑定时，Wsdl.exe 创建每个绑定的代理类。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Applied to each proxy class is a &lt;xref:System.Web.Services.WebServiceBindingAttribute&gt; that defines the name of the binding and its namespace.</source>
          <target state="translated">应用于每个代理类是&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;，它定义的绑定和其命名空间的名称。&lt;/xref:System.Web.Services.WebServiceBindingAttribute&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The discovery document you set the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt; property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown.</source>
          <target state="translated">你设置的发现文档&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;属性必须包含对实现相同的绑定名称和命名空间，XML Web 服务的引用或引发异常。&lt;/xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The proxy class does not have a binding defined.</source>
          <target state="translated">代理类没有定义的绑定。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">结束 XML Web 服务方法使用 SOAP 的异步调用。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Typically, you would not call the EndInvoke method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">通常情况下，您将不 EndInvoke 方法直接调用，除非你打算重新构建您自己的 XML Web 服务的代理类。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously.</source>
          <target state="translated">由 XML Web 服务 Web 服务描述语言工具 (Wsdl.exe) 生成的代理类公开 XML Web 服务方法，用作从代理类中移出的同步调用 XML Web 服务方法的名称。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">用于以异步方式调用 XML Web 服务方法，两个附加方法添加到每个 XML Web 服务方法中，另一个使用的代理类<ph id="ph1">`Begin`</ph>添加到的 XML Web service 方法和一个具有名称的前缀<ph id="ph2">`End`</ph>添加的前缀。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The proxy class calls the EndInvoke method to complete an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">代理类调用 EndInvoke 方法以完成对 XML Web service 方法的异步调用调用。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`EndAdd`</ph>, for completing an asynchronous invocation of an XML Web service method.</source>
          <target state="translated">例如，如果 XML Web 服务公开 XML Web 服务方法名为<ph id="ph1">`Add`</ph>，代理类包含一个名为方法<ph id="ph2">`EndAdd`</ph>，完成的异步调用 XML Web 服务方法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Within the code for the <ph id="ph1">`EndAdd`</ph> a call is made to the EndInvoke method and then the results are placed into the expected return type for <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">中的代码<ph id="ph1">`EndAdd`</ph>调用 EndInvoke 方法，然后将结果放入的预期返回类型<ph id="ph2">`Add`</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; returned from the &lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;从返回&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt;方法。&lt;/xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the return value and any by-reference or <bpt id="p1">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameters of the derived class method.</source>
          <target state="translated">包含返回值和任何引用对象的数组或<bpt id="p1">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的派生的类方法的参数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is not the return value from the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>不是中的返回值<ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke*&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">请求到达服务器计算机上，但未成功处理。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">请求的对象的当前状态无效。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">访问网络时出错。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Xml.XmlReader&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter.</source>
          <target state="translated">返回&lt;xref:System.Xml.XmlReader&gt;使用初始化&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;属性<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>参数。&lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; &lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; to initialize the &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;初始化&lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt;&lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;提供</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The initial buffer size of the &lt;xref:System.IO.StreamReader&gt; used by the &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">&lt;xref:System.IO.StreamReader&gt;使用受支持&lt;xref:System.Xml.XmlReader&gt;。&lt;/xref:System.Xml.XmlReader&gt;&lt;/xref:System.IO.StreamReader&gt;的初始缓冲区大小</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlReader&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">A&lt;xref:System.Xml.XmlReader&gt;使用初始化&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;属性<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">message</ph> <ept id="p1">&lt;/code&gt;</ept>参数。&lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; &lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Creates a &lt;xref:System.Net.WebRequest&gt; for the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">uri</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">创建&lt;xref:System.Net.WebRequest&gt;指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">uri</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.Net.WebRequest&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This method can be overridden to customize the &lt;xref:System.Net.WebRequest&gt; before the XML Web service request is made.</source>
          <target state="translated">可以重写此方法以自定义&lt;xref:System.Net.WebRequest&gt;之前 XML Web 服务请求。&lt;/xref:System.Net.WebRequest&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, you could add a custom header to the request.</source>
          <target state="translated">例如，无法将自定义标头添加到请求。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; to use when creating the &lt;xref:System.Net.WebRequest&gt;.</source>
          <target state="translated">&lt;xref:System.Uri&gt;创建&lt;xref:System.Net.WebRequest&gt;.&lt;/xref:System.Net.WebRequest&gt;时要使用&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.WebRequest&gt; for the specified URI.</source>
          <target state="translated">&lt;xref:System.Net.WebRequest&gt;为指定的 URI。&lt;/xref:System.Net.WebRequest&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">uri</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">uri</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Xml.XmlWriter&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter.</source>
          <target state="translated">返回&lt;xref:System.Xml.XmlWriter&gt;使用初始化&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;属性<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>参数。&lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; &lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; to initialize the &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapClientMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;初始化&lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt;&lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;提供</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The initial buffer size of the &lt;xref:System.IO.StreamWriter&gt; used by the &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">&lt;xref:System.IO.StreamWriter&gt;使用受支持&lt;xref:System.Xml.XmlWriter&gt;。&lt;/xref:System.Xml.XmlWriter&gt;&lt;/xref:System.IO.StreamWriter&gt;的初始缓冲区大小</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlWriter&gt; initialized with the &lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; property of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">A&lt;xref:System.Xml.XmlWriter&gt;使用初始化&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt;属性<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">message</ph> <ept id="p1">&lt;/code&gt;</ept>参数。&lt;/xref:System.Web.Services.Protocols.SoapMessage.Stream*&gt; &lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Invokes an XML Web service method synchronously using SOAP.</source>
          <target state="translated">调用 XML Web 服务方法使用 SOAP 以同步方式。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Typically, you do not call the Invoke method directly, unless you are building your own proxy class for an XML Web service.</source>
          <target state="translated">通常情况下，不调用 Invoke 方法直接，除非正在生成您自己的 XML Web 服务的代理类。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class.</source>
          <target state="translated">由 XML Web 服务 Web 服务描述语言工具 (Wsdl.exe) 生成的代理类将从代理类的名称作为公开 XML Web 服务方法。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The proxy class calls the Invoke method to invoke an XML Web service method call.</source>
          <target state="translated">代理类调用 Invoke 方法来调用 XML Web 服务方法调用。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class also contains a method named <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">例如，如果 XML Web 服务公开 XML Web 服务方法名为<ph id="ph1">`Add`</ph>，代理类还包含一个名为方法<ph id="ph2">`Add`</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Within the code for the <ph id="ph1">`Add`</ph> method in the proxy class, a synchronous call is made to the XML Web service method through the Invoke method and then the results are placed into the expected return type for <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">中的代码<ph id="ph1">`Add`</ph>方法中的代理类，通过调用方法中对 XML Web service 方法进行同步调用，然后将结果放入的预期返回类型<ph id="ph2">`Add`</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the custom attributes that may have been added to the method, such as &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph>参数用于查找可能已添加到该方法，如&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;.&lt;/xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;的自定义属性</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt; provides additional information on the derived method which is required for the SOAP protocol.</source>
          <target state="translated">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;如果派生方法所需的 SOAP 协议上提供其他信息。&lt;/xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The name of the XML Web service method.</source>
          <target state="translated">XML Web service 方法的名称。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the parameters to pass to the XML Web service.</source>
          <target state="translated">包含要传递到 XML Web 服务的参数的对象数组。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">在派生类调用方法中的参数顺序对应数组中的值的顺序。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the return value and any <bpt id="p1">&lt;xref uid="langword_csharp_reference" name="reference" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> parameters of the derived class method.</source>
          <target state="translated">包含返回值和任何对象的数组<bpt id="p1">&lt;xref uid="langword_csharp_reference" name="reference" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_out" name="out" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>的派生的类方法的参数。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">请求到达服务器计算机上，但未成功处理。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">请求的对象的当前状态无效。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">访问网络时出错。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">以异步方式调用指定的方法。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The name of the method to invoke.</source>
          <target state="translated">要调用的方法的名称。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the method.</source>
          <target state="translated">要传递给方法的参数。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">当方法调用尚未完成时，将调用委托。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">以异步方式调用指定的方法。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The name of the method to invoke.</source>
          <target state="translated">要调用的方法的名称。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the method.</source>
          <target state="translated">要传递给方法的参数。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">当方法调用尚未完成时，将调用委托。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An object used to pass state information into the <ph id="ph1">`callback`</ph> delegate.</source>
          <target state="translated">用于传递到的状态信息的对象<ph id="ph1">`callback`</ph>委托。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</source>
          <target state="translated">获取或设置用于对 XML Web 服务进行 SOAP 请求的 SOAP 协议的版本。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The SoapVersion property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt; by default when a WSDL document for an XML Web service supports SOAP version 1.1.</source>
          <target state="translated">在到由 Web 服务描述语言工具 (Wsdl.exe) 生成的代理类中设置 SoapVersion 属性&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;默认情况下，如果 XML Web 服务的 WSDL 文档支持 SOAP 1.1 版。&lt;/xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the SoapVersion property to &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;.</source>
          <target state="translated">但是，如果 XML Web 服务仅支持 SOAP 1.2，Wsdl.exe SoapVersion 将属性设置为&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;.&lt;/xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the <ph id="ph1">`/protocol`</ph> switch with the <ph id="ph2">`SOAP`</ph> or <ph id="ph3">`SOAP12`</ph> settings to set the SoapVersion property to &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt; and &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;, respectively.</source>
          <target state="translated">若要生成与 Wsdl.exe 的代理类时，请选择 SOAP 协议的版本，使用<ph id="ph1">`/protocol`</ph>切换与<ph id="ph2">`SOAP`</ph>或<ph id="ph3">`SOAP12`</ph>设置以将 SoapVersion 属性设置为&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;和&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;分别。&lt;/xref:System.Web.Services.Protocols.SoapProtocolVersion&gt; &lt;/xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapProtocolVersion"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapProtocolVersion"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapProtocolVersion"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.SoapProtocolVersion"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>