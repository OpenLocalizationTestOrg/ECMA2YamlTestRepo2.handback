<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">740b118c4a91a6f7abc89628967f5fb01d6c2ed5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Compilation.ClientBuildManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68f15970f4b3b182ec7551918c4f71a02dcf3355</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65aaedd70277deb0e6ac687f72d41b723c0af11d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides compilation services for ASP.NET applications.</source>
          <target state="translated">提供 ASP.NET 应用程序的编译服务。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ClientBuildManager class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code.</source>
          <target state="translated">ClientBuildManager 类提供方法和属性用于编译 ASP.NET Web 应用程序和检索生成的程序集，或生成源代码。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS).</source>
          <target state="translated">类的实例在客户端的应用程序域中建立并提供对 ASP.NET 生成系统 Microsoft Internet 信息服务 (IIS) 外部访问。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The class can be used to develop customized tools for compiling Web applications.</source>
          <target state="translated">类可以用于开发编译 Web 应用程序的自定义的工具。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The command-line tool <ph id="ph1">`aspnet_compiler`</ph> uses the ClientBuildManager class.</source>
          <target state="translated">命令行工具<ph id="ph1">`aspnet_compiler`</ph>使用 ClientBuildManager 类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class without a specified target directory or precompilation flags.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>而无需指定的目标目录或预编译的标志的类。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The virtual path to the application root.</source>
          <target state="translated">应用程序根目录的虚拟路径。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The physical path to the application root.</source>
          <target state="translated">应用程序根目录的物理路径。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified target directory.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与指定的目标目录的类。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.</source>
          <target state="translated">这种形式的构造函数通常用于预编译，因为它指定预编译目标目录。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The virtual path to the application root.</source>
          <target state="translated">应用程序根目录的虚拟路径。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The physical path to the application root.</source>
          <target state="translated">应用程序根目录的物理路径。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The target directory for precompilation.</source>
          <target state="translated">预编译目标目录。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified target directory and compilation parameter.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与指定的目标目录和编译参数的类。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.</source>
          <target state="translated">这种形式的构造函数通常用于预编译，因为它指定了预编译目标目录和预编译的标志。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The virtual path to the application root.</source>
          <target state="translated">应用程序根目录的虚拟路径。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The physical path to the application root.</source>
          <target state="translated">应用程序根目录的物理路径。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The target directory for precompilation.</source>
          <target state="translated">预编译目标目录。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Values that determine the precompilation behavior.</source>
          <target state="translated">确定预编译的行为的值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过使用指定的虚拟目录、 源目录、 目标目录、 编译参数和类型说明提供程序的类。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The virtual path of the application root.</source>
          <target state="translated">应用程序根目录的虚拟路径。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The physical path of the application root.</source>
          <target state="translated">应用程序根目录的物理路径。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The target directory for precompilation.</source>
          <target state="translated">预编译目标目录。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Values that determine the precompilation behavior.</source>
          <target state="translated">确定预编译的行为的值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The type-description provider to use.</source>
          <target state="translated">要使用的类型说明提供程序。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio.</source>
          <target state="translated">此参数主要用于 Visual Studio 中支持的多目标的基础结构。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.</source>
          <target state="translated">它用于检索特定版本的.NET Framework 的筛选有关类型的元数据。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Occurs when an application domain is shut down.</source>
          <target state="translated">当应用程序域关闭时发生。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Occurs when an application domain is started.</source>
          <target state="translated">当启动应用程序域时发生。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Occurs when an application domain is unloaded.</source>
          <target state="translated">卸载应用程序域时将发生。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the physical path to the directory used for code generation.</source>
          <target state="translated">获取用于代码生成的目录的物理路径。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The directory for code generation is typically in the temporary ASP.NET files directory.</source>
          <target state="translated">代码生成的目录通常是临时 ASP.NET 文件目录。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the directory path used for code generation.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含用于代码生成的目录路径。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.</source>
          <target state="translated">编译依赖于应用程序的文件，如 App_Code 目录中的文件、 Global.asax 文件、 资源文件和 Web 引用。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The CompileApplicationDependencies method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.</source>
          <target state="translated">CompileApplicationDependencies 方法可以确保编译的资源、 Web 引用、 App_Code 目录中的文件、.browser App_Browsers 目录中的文件和 Global.asax 文件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Compiles the file represented by the virtual path.</source>
          <target state="translated">编译表示的虚拟路径的文件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The path to the file to be compiled.</source>
          <target state="translated">要编译的文件路径。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.</source>
          <target state="translated">编译表示的虚拟路径的文件，并提供一个回调类，以接收有关生成的状态信息。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The path to the file to be compiled.</source>
          <target state="translated">要编译的文件路径。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The object to receive status information from compilation.</source>
          <target state="translated">要接收来自编译状态信息的对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates an object in the application domain of the ASP.NET runtime.</source>
          <target state="translated">在 ASP.NET 运行时的应用程序域中创建的对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The type of object to be created.</source>
          <target state="translated">要创建的对象类型。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果已在 ASP.NET 运行时; 的应用程序域中创建对象，则引发异常否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An object in the application domain of the ASP.NET runtime.</source>
          <target state="translated">ASP.NET 运行时的应用程序域中的对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The object already exists in the application domain and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">failIfExists</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该对象已存在应用程序域中和<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">failIfExists</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Generates code from the contents of a file.</source>
          <target state="translated">从文件的内容生成代码。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">文件的虚拟路径。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The contents of the file.</source>
          <target state="translated">文件的内容。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">此方法返回时，包含行杂注的字典。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the generated code.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含生成的代码。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</source>
          <target state="translated">返回 codeDOM 树、 编译器类型和虚拟路径所表示的文件的编译器参数。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The GenerateCodeCompileUnit method retrieves information needed to compile a file.</source>
          <target state="translated">GenerateCodeCompileUnit 方法检索编译文件所需的信息。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In addition to a &lt;xref:System.CodeDom.CodeCompileUnit&gt; object as a return value, it returns three <ph id="ph1">`out`</ph> parameters.</source>
          <target state="translated">除了&lt;xref:System.CodeDom.CodeCompileUnit&gt;对象作为返回值，它返回三个<ph id="ph1">`out`</ph>参数。&lt;/xref:System.CodeDom.CodeCompileUnit&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the file.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph>参数返回用于生成和编译该文件提供程序类型。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph>参数包含确定编译行为的属性。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`linePragmasTable`</ph> parameter contains a dictionary of line pragmas.</source>
          <target state="translated"><ph id="ph1">`linePragmasTable`</ph>参数包含行杂注的字典。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">文件的虚拟路径。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the codeDOM provider type used for code generation and compilation.</source>
          <target state="translated">此方法返回时，包含用于代码生成和编译的 codeDOM 提供程序类型。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">此方法返回时，包含定义如何将编译该文件的属性。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">此方法返回时，包含行杂注的字典。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the given file.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对于给定的文件。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</source>
          <target state="translated">返回的内容、 codeDOM 树、 编译器类型和虚拟路径所表示的文件的编译器参数。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The GenerateCodeCompileUnit method retrieves information needed to compile a file.</source>
          <target state="translated">GenerateCodeCompileUnit 方法检索编译文件所需的信息。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In addition to a &lt;xref:System.CodeDom.CodeCompileUnit&gt; object as a return value, it returns three <ph id="ph1">`out`</ph> parameters.</source>
          <target state="translated">除了&lt;xref:System.CodeDom.CodeCompileUnit&gt;对象作为返回值，它返回三个<ph id="ph1">`out`</ph>参数。&lt;/xref:System.CodeDom.CodeCompileUnit&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the file.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph>参数返回用于生成和编译该文件提供程序类型。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph>参数包含确定编译行为的属性。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`linePragmasTable`</ph> parameter contains a dictionary of line pragmas.</source>
          <target state="translated"><ph id="ph1">`linePragmasTable`</ph>参数包含行杂注的字典。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">文件的虚拟路径。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The contents of the file represented by the <ph id="ph1">`virtualPath`</ph> parameter.</source>
          <target state="translated">表示的文件的内容<ph id="ph1">`virtualPath`</ph>参数。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the codeDOM provider type used for code generation and compilation.</source>
          <target state="translated">此方法返回时，包含用于代码生成和编译的 codeDOM 提供程序类型。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file represented by the <ph id="ph1">`virtualPath`</ph> parameter will be compiled.</source>
          <target state="translated">此方法返回时，包含定义如何表示的文件的属性<ph id="ph1">`virtualPath`</ph>将编译参数。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">此方法返回时，包含行杂注的字典。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the given file.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对于给定的文件。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets the directories with files that, when changed, cause the application domain to shut down.</source>
          <target state="translated">获取目录的文件，更改时，会导致应用程序域关闭。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Changes to files in specific top-level directories cause the application domain to shut down.</source>
          <target state="translated">对特定的顶级目录中的文件的更改会导致应用程序域关闭。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes.</source>
          <target state="translated">Bin、 App_Code、 Global_Resources、 Web 引用和 App_Browsers 目录中的文件监视以检测任何更改。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When changes are detected, the application domain is shut down.</source>
          <target state="translated">检测到更改后，应用程序域关闭的情况下。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array containing the top-level directory names.</source>
          <target state="translated">A&lt;xref:System.String&gt;数组，其中包含顶级目录名称。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets a collection of browser elements.</source>
          <target state="translated">获取浏览器元素的集合。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object contains browser names for the keys and &lt;xref:System.Web.UI.Triplet&gt; objects for the values.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;对象包含的键的浏览器名称和&lt;xref:System.Web.UI.Triplet&gt;对象的值。&lt;/xref:System.Web.UI.Triplet&gt; &lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.Triplet&gt; objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.</source>
          <target state="translated">&lt;xref:System.Web.UI.Triplet&gt;对象每个包含父浏览器元素、 说明和在树中的浏览器元素深度的名称。&lt;/xref:System.Web.UI.Triplet&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; containing browser elements.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;包含浏览器的元素。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.</source>
          <target state="translated">获取有关的编译器类型、 编译器参数以及要在其中存储从非代码文件，如.wsdl 文件生成代码文件的目录信息。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The GetCodeDirectoryInformation method retrieves information needed to build a code directory.</source>
          <target state="translated">GetCodeDirectoryInformation 方法检索生成的代码目录所需的信息。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>It returns this information through three <ph id="ph1">`out`</ph> parameters.</source>
          <target state="translated">它将返回此信息通过三个<ph id="ph1">`out`</ph>参数。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the files in the code directory.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph>参数返回用于生成和编译代码目录中的文件提供程序类型。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph>参数包含确定编译行为的属性。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`generatedFilesDir`</ph> parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.</source>
          <target state="translated"><ph id="ph1">`generatedFilesDir`</ph>参数将存储包含从在代码目录中，如.wsdl 文件的非代码文件生成的所有代码文件的目录路径。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The directory about which to retrieve information.</source>
          <target state="translated">有关要检索其信息目录。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the provider type used for code generation and compilation.</source>
          <target state="translated">此方法返回时，包含用于代码生成和编译的提供程序类型。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">此方法返回时，包含定义如何将编译该文件的属性。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the directory for files generated from non-code files.</source>
          <target state="translated">此方法返回时，包含从非代码文件生成的文件的目录。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualCodeDir&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualCodeDir&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Compiles the file represented by the virtual path and returns its compiled type.</source>
          <target state="translated">编译表示的虚拟路径的文件，并返回其已编译的类型。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The virtual path of the file to compile.</source>
          <target state="translated">要编译的文件的虚拟路径。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the compiled file.</source>
          <target state="translated">&lt;xref:System.Type&gt;的已编译的文件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Returns the compiler type and parameters that are used to build a file represented by a virtual path.</source>
          <target state="translated">返回的编译器类型和用于生成虚拟路径所表示的文件的参数。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">文件的虚拟路径。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the provider type used for code generation and compilation.</source>
          <target state="translated">此方法返回时，包含用于代码生成和编译的提供程序类型。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">此方法返回时，包含定义如何将编译该文件的属性。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Returns the virtual path of a generated file.</source>
          <target state="translated">返回生成的文件的虚拟路径。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The full physical path to a generated file.</source>
          <target state="translated">生成文件的完整物理路径。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the virtual path for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filePath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含的虚拟路径<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">filePath</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filePath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;filePath&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets the physical path to the generated file for a virtual path.</source>
          <target state="translated">获取为虚拟路径生成的文件的物理路径。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The virtual path of the file to retrieve.</source>
          <target state="translated">要检索的文件的虚拟路径。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the physical path to the generated file.</source>
          <target state="translated">A &lt;xref:System.String&gt;，其中包含生成的文件的物理路径。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns an array of the assemblies defined in the Bin directory and the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section of the Web configuration file.</source>
          <target state="translated">返回数组的 Bin 目录中定义的程序集和<bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Web 配置文件节。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The configuration name and path.</source>
          <target state="translated">配置名称和路径。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array containing paths to code bases in the Bin directory and the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section of the Web configuration file.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含代码路径的数组中的 Bin 目录的基本和<bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Web 配置文件节。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.</source>
          <target state="translated">返回到 App_Code 目录及其子目录 ASP.NET 应用程序中的虚拟路径。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array containing all the virtual paths to code directories in an application.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含所有应用程序中的代码目录的虚拟路径的数组。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Gives the application domain an infinite lifetime by preventing a lease from being created.</source>
          <target state="translated">为应用程序域提供无限生存期通过防止创建租约。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>This method overrides the &lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt; method in its base class.</source>
          <target state="translated">此方法重写&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;方法在其基本类。&lt;/xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>It always returns <ph id="ph1">`null`</ph> and thereby prevents a lease from being created that would limit the application domain's lifetime.</source>
          <target state="translated">它始终返回<ph id="ph1">`null`</ph>，从而防止创建租约，会限制应用程序域的生存期。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Indicates whether an assembly is a code assembly.</source>
          <target state="translated">指示程序集是否是代码的程序集。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The name of the assembly to be identified as a code assembly.</source>
          <target state="translated">程序集被标识为一个代码程序集的名称。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">assemblyName</ph><ept id="p2">&lt;/code&gt;</ept> parameter matches one of the generated code assemblies; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">assemblyName</ph> <ept id="p2">&lt;/code&gt;</ept>参数与匹配某个生成的代码的程序集; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.</source>
          <target state="translated">获取一个值，该值指示是否已创建编译 ASP.NET Web 应用程序的应用程序域。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain for compiling ASP.NET Web applications has been created; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果创建了编译 ASP.NET Web 应用程序的应用程序域;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Precompiles an ASP.NET application.</source>
          <target state="translated">预编译的 ASP.NET 应用程序。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET 支持三种形式的预编译。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">一种形式允许 ASP.NET 应用程序就地预编译。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">在此窗体中，站点是部署到生产环境，然后进行预编译，因而不需要用户首次访问时动态编译站点。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">站点的第一个用户将不会遇到通常遇到动态编译的站点上的延迟。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">部署使用两个其他形式的预编译。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">在其中任一种形式的布局的站点生成可以部署到生产计算机。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">其中一种形式包括标记页，因此可以在编译的站点上执行一定量的更新。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">其他窗体不包含标记页，并因此无法更新无需重新编译原始站点。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">没有源代码部署到目标环境中的这些形式的预编译。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The application to precompile is defined through the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; constructor.</source>
          <target state="translated">要预编译的应用程序通过定义&lt;xref:System.Web.Compilation.ClientBuildManager&gt;构造函数。&lt;/xref:System.Web.Compilation.ClientBuildManager&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt; object of the &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;对象&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;构造函数定义的三种形式的预编译才能执行。&lt;/xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; &lt;/xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the PrecompileApplication method.</source>
          <target state="translated">开发人员可以预编译网站与<ph id="ph1">`aspnet_compiler`</ph>命令行工具或通过调用 PrecompileApplication 方法。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Precompiles an ASP.NET application and provides a callback method to receive status information about the build.</source>
          <target state="translated">预编译的 ASP.NET 应用程序，并提供一个回调方法来接收有关生成的状态信息。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET 支持三种形式的预编译。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">一种形式允许 ASP.NET 应用程序就地预编译。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">在此窗体中，站点是部署到生产环境，然后进行预编译，因而不需要用户首次访问时动态编译站点。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">站点的第一个用户将不会遇到通常遇到动态编译的站点上的延迟。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`callback`</ph> parameter contains the method to call when reporting the result of compilation.</source>
          <target state="translated"><ph id="ph1">`callback`</ph>参数包含报告的编译结果时要调用的方法。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">部署使用两个其他形式的预编译。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">在其中任一种形式的布局的站点生成可以部署到生产计算机。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">其中一种形式包括标记页，因此可以在编译的站点上执行一定量的更新。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">其他窗体不包含标记页，并因此无法更新无需重新编译原始站点。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">没有源代码部署到目标环境中的这些形式的预编译。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The application to precompile is defined through the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; constructor.</source>
          <target state="translated">要预编译的应用程序通过定义&lt;xref:System.Web.Compilation.ClientBuildManager&gt;构造函数。&lt;/xref:System.Web.Compilation.ClientBuildManager&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt; object of the &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;对象&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;构造函数定义的三种形式的预编译才能执行。&lt;/xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; &lt;/xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the PrecompileApplication method.</source>
          <target state="translated">开发人员可以预编译网站与<ph id="ph1">`aspnet_compiler`</ph>命令行工具或通过调用 PrecompileApplication 方法。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the method to call when reporting the result of compilation.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含报告的编译结果时要调用的方法。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.</source>
          <target state="translated">预编译的 ASP.NET 应用程序，提供一个回调方法来接收状态关于版本的信息，并指示是否要创建一个干净的生成。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET 支持三种形式的预编译。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">一种形式允许 ASP.NET 应用程序就地预编译。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">在此窗体中，站点是部署到生产环境，然后进行预编译，因而不需要用户首次访问时动态编译站点。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">站点的第一个用户将不会遇到通常遇到动态编译的站点上的延迟。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`callback`</ph> parameter contains the method to call when reporting the result of compilation.</source>
          <target state="translated"><ph id="ph1">`callback`</ph>参数包含报告的编译结果时要调用的方法。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">部署使用两个其他形式的预编译。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">在其中任一种形式的布局的站点生成可以部署到生产计算机。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">其中一种形式包括标记页，因此可以在编译的站点上执行一定量的更新。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">其他窗体不包含标记页，并因此无法更新无需重新编译原始站点。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">没有源代码部署到目标环境中的这些形式的预编译。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The application to precompile is defined through the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; constructor.</source>
          <target state="translated">要预编译的应用程序通过定义&lt;xref:System.Web.Compilation.ClientBuildManager&gt;构造函数。&lt;/xref:System.Web.Compilation.ClientBuildManager&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt; object of the &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;对象&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;构造函数定义的三种形式的预编译才能执行。&lt;/xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; &lt;/xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the &lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt; method.</source>
          <target state="translated">开发人员可以预编译网站与<ph id="ph1">`aspnet_compiler`</ph>命令行工具或通过调用&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;方法。&lt;/xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the method to call when reporting the result of compilation.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含报告的编译结果时要调用的方法。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to perform a clean build, which will first delete all object and intermediate files; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to rebuild only those files that have changed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要执行干净的生成，将首先删除所有对象和中间文件;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>重新生成已更改的那些文件。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Set to true if there is a chance that a dependency might not be picked up by the build environment.</source>
          <target state="translated">设置为 true，如果没有依赖关系可能不会选取生成环境的机会。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Terminates the current ASP.NET application.</source>
          <target state="translated">终止当前的 ASP.NET 应用程序。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Unloads the application domain for compiling ASP.NET Web applications.</source>
          <target state="translated">卸载编译 ASP.NET Web 应用程序的应用程序域。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain is unloaded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应用程序域卸载;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>