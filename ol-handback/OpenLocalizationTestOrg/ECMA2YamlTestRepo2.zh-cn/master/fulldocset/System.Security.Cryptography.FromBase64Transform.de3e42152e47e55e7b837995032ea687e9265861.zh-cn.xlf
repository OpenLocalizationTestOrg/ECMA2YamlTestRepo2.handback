<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf883d7abe395608ff7cd13e7a7d5fdb83f071e6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.FromBase64Transform.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89da4292aded80a3204d51834faa02fa271904b9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c289d6601067b38bf77297a507c2429ba01d9477</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Converts a <bpt id="p1">&lt;xref href="System.Security.Cryptography.CryptoStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from base 64.</source>
          <target state="translated">将转换<bpt id="p1">&lt;xref href="System.Security.Cryptography.CryptoStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从 base 64。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</source>
          <target state="translated">Base 64 内容传输编码表示用户不可窗体中的任意位序列可读。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In the default configuration, white spaces are ignored.</source>
          <target state="translated">在默认配置中，将忽略空格。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Cryptography.FromBase64TransformMode&gt; for more details.</source>
          <target state="translated">请参阅&lt;xref:System.Security.Cryptography.FromBase64TransformMode&gt;有关详细信息。&lt;/xref:System.Security.Cryptography.FromBase64TransformMode&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified transformation mode.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与指定的转换模式的类。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">获取一个值，该值指示是否可以重复使用当前转换。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether multiple blocks can be transformed.</source>
          <target state="translated">获取一个值，该值指示是否可以转换多个块。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the current implementation, only one block can be transformed at a time, so this property is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">在当前实现中，只有一个块可以转换一次，因此此属性始终为<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This method is a simple call to &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法是对&lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;.&lt;/xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;的简单调用</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the &lt;xref:System.Security.Cryptography.FromBase64Transform&gt; to be reallocated for other purposes.</source>
          <target state="translated">调用<ph id="ph1">`Dispose`</ph>允许使用的资源&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;可以重新分配用于其他目的。&lt;/xref:System.Security.Cryptography.FromBase64Transform&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">`Dispose`</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">释放当前实例所使用的所有资源<bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.Cryptography.FromBase64Transform&gt;.</source>
          <target state="translated">调用<ph id="ph1">`Dispose`</ph>在完成使用&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;.&lt;/xref:System.Security.Cryptography.FromBase64Transform&gt;时</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Security.Cryptography.FromBase64Transform&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>方法使&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;中不可用状态。&lt;/xref:System.Security.Cryptography.FromBase64Transform&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.Cryptography.FromBase64Transform&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.FromBase64Transform&gt; was occupying.</source>
          <target state="translated">在调用<ph id="ph1">`Dispose`</ph>，必须释放对所有引用&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;以便垃圾回收器才能回收的内存，&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;占用。&lt;/xref:System.Security.Cryptography.FromBase64Transform&gt; &lt;/xref:System.Security.Cryptography.FromBase64Transform&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.Cryptography.FromBase64Transform&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 始终调用<ph id="ph2">`Dispose`</ph>在发布到&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;。&lt;/xref:System.Security.Cryptography.FromBase64Transform&gt;最后一个引用之前</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Cryptography.FromBase64Transform&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否则，它所使用的资源之前，不会释放垃圾回收器调用&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;对象的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.Security.Cryptography.FromBase64Transform&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">`Finalize`</ph>方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法释放参数设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with disposing set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>调用<ph id="ph2">`Dispose`</ph>释放设置为<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.FromBase64Transform&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;引用。&lt;/xref:System.Security.Cryptography.FromBase64Transform&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose()`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the input block size.</source>
          <target state="translated">获取输入的块大小。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The input block size for this transformation is one byte.</source>
          <target state="translated">此转换的输入的块大小是一个字节。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The size of the input data blocks in bytes.</source>
          <target state="translated">输入数据块的大小以字节为单位。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets the output block size.</source>
          <target state="translated">获取输出块大小。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The output block size for this transformation is 3 bytes.</source>
          <target state="translated">此转换的输出块大小为 3 个字节。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The size of the output data blocks in bytes.</source>
          <target state="translated">输出数据块的大小以字节为单位。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Converts the specified region of the input byte array from base 64 and copies the result to the specified region of the output byte array.</source>
          <target state="translated">从 base 64 转换的输入的字节数组的指定的区域，并将结果复制到输出字节数组的指定区域。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The input to compute from base 64.</source>
          <target state="translated">要从 base 64 计算的输入。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The offset into the input byte array from which to begin using data.</source>
          <target state="translated">偏移量从其开始使用数据的输入的字节数组。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">要用作数据的输入的字节数组中的字节数。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The output to which to write the result.</source>
          <target state="translated">要向其写入结果输出。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The offset into the output byte array from which to begin writing data.</source>
          <target state="translated">偏移量从此处开始写入数据的输出字节数组。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The number of bytes written.</source>
          <target state="translated">写入的字节数。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has already been disposed.</source>
          <target state="translated">当前<bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>已释放对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph> uses an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph>使用了无效值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> has an invalid offset length.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>具有一个无效的偏移量长度。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph>超出了范围。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">此参数要求的非负数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Converts the specified region of the specified byte array from base 64.</source>
          <target state="translated">将指定的字节数组的指定的区域从 base 64 转换。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The input to convert from base 64.</source>
          <target state="translated">要从 base 64 转换的输入。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">偏移量从其开始使用数据的字节数组。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">要用作数据的字节数组中的字节数。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The computed conversion.</source>
          <target state="translated">计算的转换。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has already been disposed.</source>
          <target state="translated">当前<bpt id="p1">&lt;xref href="System.Security.Cryptography.FromBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>已释放对象。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> has an invalid offset length.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>有一个无效的偏移量的长度。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph> has an invalid value.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph>具有无效值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph>超出了范围。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">此参数要求的非负数。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>