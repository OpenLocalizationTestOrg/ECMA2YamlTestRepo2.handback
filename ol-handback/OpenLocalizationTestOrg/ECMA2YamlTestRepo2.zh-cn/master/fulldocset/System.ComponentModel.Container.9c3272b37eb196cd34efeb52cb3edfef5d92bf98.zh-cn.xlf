<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38fa3b242fa058cbf3179240a9fd42c1a9d75a38</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Container.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ad491ce576ed07d21e7c69843b5456dc0588fd6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cbfc54dd04101b66c2188d6ceb33a470c040391</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates zero or more components.</source>
          <target state="translated">封装零个或多个组件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The Container class is the default implementation for the &lt;xref:System.ComponentModel.IContainer&gt; interface.</source>
          <target state="translated">容器类是的默认实现&lt;xref:System.ComponentModel.IContainer&gt;接口。&lt;/xref:System.ComponentModel.IContainer&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Containers are objects that encapsulate and track zero or more components.</source>
          <target state="translated">容器是封装并跟踪零个或多个组件的对象。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this context, containment refers to logical containment, not visual containment.</source>
          <target state="translated">在此上下文中，包含引用逻辑包容，而不是直观包容。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can use components and containers in a variety of scenarios, including scenarios that are both visual and not visual.</source>
          <target state="translated">你可以使用组件和容器中的各种方案，包括 visual 和非可视化的方案。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</source>
          <target state="translated">在第一个中先进先出列表，它还定义容器内的组件的顺序中，容器中的组件进行跟踪。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Added components are appended to the end of the list.</source>
          <target state="translated">添加的组件将追加到列表的末尾。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Adds the specified <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the <bpt id="p2">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将指定的<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到<bpt id="p2">&lt;xref href="System.ComponentModel.Container"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The component is unnamed.</source>
          <target state="translated">组件是未命名的。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">此方法由派生类中重写。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.ComponentModel.Component&gt; is added to the end of the list.</source>
          <target state="translated">新&lt;xref:System.ComponentModel.Component&gt;添加到列表的末尾。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The component to add.</source>
          <target state="translated">要添加的组件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Adds the specified <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the <bpt id="p2">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and assigns it a name.</source>
          <target state="translated">将指定的<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到<bpt id="p2">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>并将其分配一个名称。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">此方法由派生类中重写。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.ComponentModel.Component&gt; is added to the end of the list.</source>
          <target state="translated">新&lt;xref:System.ComponentModel.Component&gt;添加到列表的末尾。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The component to add.</source>
          <target state="translated">要添加的组件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The unique, case-insensitive name to assign to the component.</source>
          <target state="translated">唯一不区分大小写的名称将分配给该组件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which leaves the component unnamed.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，它使未命名的组件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is not unique.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>不是唯一的。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets all the components in the <bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取所有组件中<bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">此方法由派生类中重写。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The components in the collection are stored in the same order as they were added to the &lt;xref:System.ComponentModel.Container&gt;.</source>
          <target state="translated">由于添加到&lt;xref:System.ComponentModel.Container&gt;.&lt;/xref:System.ComponentModel.Container&gt;集合中的组件存储在相同的顺序</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A collection that contains the components in the <bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个包含中的组件集合<bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Creates a site <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the given <bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and assigns the given name to the site.</source>
          <target state="translated">创建一个站点<bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为给定<bpt id="p2">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>和分配到站点的给定名称。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`name`</ph> parameter is <ph id="ph2">`null`</ph>, the &lt;xref:System.ComponentModel.IComponent&gt; is added to the &lt;xref:System.ComponentModel.Container&gt; without an identifying name.</source>
          <target state="translated">如果<ph id="ph1">`name`</ph>参数是<ph id="ph2">`null`</ph>、&lt;xref:System.ComponentModel.IComponent&gt;添加到&lt;xref:System.ComponentModel.Container&gt;没有标识的名称。&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">此方法由派生类中重写。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Implementers that need to override the CreateSite method can provide a custom implementation through a class that implements the &lt;xref:System.ComponentModel.ISite&gt; interface.</source>
          <target state="translated">需要重写 CreateSite 方法的实现程序可以提供通过实现的类的自定义实现&lt;xref:System.ComponentModel.ISite&gt;接口。&lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to create a site for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要创建一个站点。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The name to assign to <ph id="ph1">`component`</ph>, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to skip the name assignment.</source>
          <target state="translated">要分配给名称<ph id="ph1">`component`</ph>，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要跳过的名称分配。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The newly created site.</source>
          <target state="translated">新创建的网站。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.ComponentModel.Container.Dispose%2A&gt; when you are finished using the &lt;xref:System.ComponentModel.Container&gt;.</source>
          <target state="translated">调用&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;在完成使用&lt;xref:System.ComponentModel.Container&gt;.&lt;/xref:System.ComponentModel.Container&gt;时&lt;/xref:System.ComponentModel.Container.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Container.Dispose%2A&gt; method leaves the &lt;xref:System.ComponentModel.Container&gt; in an unusable state.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;方法使&lt;xref:System.ComponentModel.Container&gt;中不可用状态。&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Container.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>After calling &lt;xref:System.ComponentModel.Container.Dispose%2A&gt;, you must release all references to the &lt;xref:System.ComponentModel.Container&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.Container&gt; was occupying.</source>
          <target state="translated">在调用&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;，必须释放对所有引用&lt;xref:System.ComponentModel.Container&gt;以便垃圾回收器才能回收的内存，&lt;xref:System.ComponentModel.Container&gt;占用。&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Container.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call &lt;xref:System.ComponentModel.Container.Dispose%2A&gt; before you release your last reference to the &lt;xref:System.ComponentModel.Container&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 始终调用&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;发布到&lt;xref:System.ComponentModel.Container&gt;。&lt;/xref:System.ComponentModel.Container&gt;最后一个引用之前&lt;/xref:System.ComponentModel.Container.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.Container&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否则，它所使用的资源之前，不会释放垃圾回收器调用&lt;xref:System.ComponentModel.Container&gt;对象的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.ComponentModel.Container&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose`</ph>方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用<ph id="ph1">`Dispose`</ph>与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.Container&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数为 true 时，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.ComponentModel.Container&gt;引用。&lt;/xref:System.ComponentModel.Container&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph>method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Releases unmanaged resources and performs other cleanup operations before the <bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is reclaimed by garbage collection.</source>
          <target state="translated">释放非托管的资源并执行其他清理操作之前<bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过垃圾回收回收。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Object.Finalize%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.Object.Finalize%2A&gt;.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A&gt; method.</source>
          <target state="translated">应用程序代码不应调用此方法。对象的<ph id="ph1">`Finalize`</ph>方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止&lt;xref:System.GC.SuppressFinalize%2A&gt;方法。&lt;/xref:System.GC.SuppressFinalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Finalize 方法和析构函数<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>，<bpt id="p2">[</bpt>清洗向上非托管资源<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>，和<bpt id="p3">[</bpt>重写 Finalize 方法<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets the service object of the specified type, if it is available.</source>
          <target state="translated">如果可用，请获取指定类型的服务对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns the current instance of the class if <ph id="ph1">`service`</ph> is an &lt;xref:System.ComponentModel.IContainer&gt;; otherwise, it returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">此方法的默认实现返回类的当前实例，如果<ph id="ph1">`service`</ph>是&lt;xref:System.ComponentModel.IContainer&gt;; 否则为它将返回<ph id="ph2">`null`</ph>。&lt;/xref:System.ComponentModel.IContainer&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can override this method to provide a custom implementation to return a service object.</source>
          <target state="translated">你可以重写该方法以提供自定义实现可返回一个服务对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;xref:System.IServiceProvider.GetService%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.IServiceProvider.GetService%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IServiceProvider.GetService%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the service to retrieve.</source>
          <target state="translated">&lt;xref:System.Type&gt;要检索的服务。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; implementing the requested service, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the service cannot be resolved.</source>
          <target state="translated">&lt;xref:System.Object&gt;实现请求的服务，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果无法解析服务。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Removes a component from the <bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">删除的组件<bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">此方法由派生类中重写。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The component to remove.</source>
          <target state="translated">要删除的组件。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Removes a component from the <bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> without setting &lt;xref:System.ComponentModel.IComponent.Site*&gt; to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">删除的组件<bpt id="p1">&lt;xref href="System.ComponentModel.Container"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>但不包括设置&lt;xref:System.ComponentModel.IComponent.Site*&gt;到<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.ComponentModel.IComponent.Site*&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The RemoveWithoutUnsiting method cleans up the site as usual, but it does not set the component's &lt;xref:System.ComponentModel.IComponent.Site%2A&gt; property to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">RemoveWithoutUnsiting 方法清理站点像往常一样，但不设置组件的&lt;xref:System.ComponentModel.IComponent.Site%2A&gt;属性<ph id="ph1">`null`</ph>。&lt;/xref:System.ComponentModel.IComponent.Site%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The component to remove.</source>
          <target state="translated">要删除的组件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Determines whether the component name is unique for this container.</source>
          <target state="translated">确定该组件名称是否唯一为此容器。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The ValidateName method is called by the &lt;xref:System.ComponentModel.Container.Add%2A&gt; method to determine if the name of the <ph id="ph1">`component`</ph> being added is unique for this &lt;xref:System.ComponentModel.Container&gt;.</source>
          <target state="translated">调用 ValidateName 方法&lt;xref:System.ComponentModel.Container.Add%2A&gt;方法可确定的名称<ph id="ph1">`component`</ph>正在增加了对此&lt;xref:System.ComponentModel.Container&gt;。&lt;/xref:System.ComponentModel.Container&gt;唯一&lt;/xref:System.ComponentModel.Container.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`name`</ph> parameter is not <ph id="ph2">`null`</ph> and is not unique, an &lt;xref:System.ArgumentException&gt; is thrown.</source>
          <target state="translated">如果<ph id="ph1">`name`</ph>参数不是<ph id="ph2">`null`</ph>并且不是唯一的&lt;xref:System.ArgumentException&gt;引发。&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The named component.</source>
          <target state="translated">命名的组件。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The component name to validate.</source>
          <target state="translated">要验证的组件名称。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is not unique.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>不是唯一的。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>