<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97b8f0e925aa738f8cee4da0329367baf7c6407e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Application.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eaa1a724eded114c5c0d84abac223d153f3bdc9f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b75537628da94f6b326c9ea337d189d986f59a3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application.</source>
          <target state="translated">封装<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>应用程序。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Application is a class that encapsulates <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application-specific functionality, including the following:      -   <bpt id="p1">**</bpt>Application Lifetime<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Activated&gt;, &lt;xref:System.Windows.Application.Current%2A&gt;, &lt;xref:System.Windows.Application.Deactivated&gt;, &lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;, &lt;xref:System.Windows.Application.Exit&gt;, &lt;xref:System.Windows.Application.Run%2A&gt;, &lt;xref:System.Windows.Application.SessionEnding&gt;, &lt;xref:System.Windows.Application.Shutdown%2A&gt;, &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;, &lt;xref:System.Windows.Application.Startup&gt;.</source>
          <target state="translated">应用程序是一个类，封装<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>应用程序特定的功能，其中包括:-<bpt id="p1">**</bpt>应用程序生存期<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Activated&gt; &lt;xref:System.Windows.Application.Current%2A&gt; &lt;xref:System.Windows.Application.Deactivated&gt; &lt;xref:System.Windows.Application.DispatcherUnhandledException&gt; &lt;xref:System.Windows.Application.Exit&gt; &lt;xref:System.Windows.Application.Run%2A&gt; &lt;xref:System.Windows.Application.SessionEnding&gt; &lt;xref:System.Windows.Application.Shutdown%2A&gt; &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;、 &lt;xref:System.Windows.Application.Startup&gt;.&lt;/xref:System.Windows.Application.Startup&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.Application.SessionEnding&gt; &lt;/xref:System.Windows.Application.Run%2A&gt; &lt;/xref:System.Windows.Application.Exit&gt; &lt;/xref:System.Windows.Application.DispatcherUnhandledException&gt; &lt;/xref:System.Windows.Application.Deactivated&gt; &lt;/xref:System.Windows.Application.Current%2A&gt; &lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Application-Scope Window, Property, and Resource Management<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FindResource%2A&gt;, &lt;xref:System.Windows.Application.GetContentStream%2A&gt;, &lt;xref:System.Windows.Application.GetResourceStream%2A&gt;, &lt;xref:System.Windows.Application.LoadComponent%2A&gt;, &lt;xref:System.Windows.Application.MainWindow%2A&gt;, &lt;xref:System.Windows.Application.Properties%2A&gt;, &lt;xref:System.Windows.Application.Resources%2A&gt;, &lt;xref:System.Windows.Application.StartupUri%2A&gt;, &lt;xref:System.Windows.Application.Windows%2A&gt;.</source>
          <target state="translated">-<bpt id="p1">**</bpt>作用域的应用程序窗口、 属性和资源管理<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FindResource%2A&gt; &lt;xref:System.Windows.Application.GetContentStream%2A&gt; &lt;xref:System.Windows.Application.GetResourceStream%2A&gt; &lt;xref:System.Windows.Application.LoadComponent%2A&gt; &lt;xref:System.Windows.Application.MainWindow%2A&gt; &lt;xref:System.Windows.Application.Properties%2A&gt; &lt;xref:System.Windows.Application.Resources%2A&gt; &lt;xref:System.Windows.Application.StartupUri%2A&gt;、 &lt;xref:System.Windows.Application.Windows%2A&gt;.&lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Application.StartupUri%2A&gt; &lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application.Properties%2A&gt; &lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.LoadComponent%2A&gt; &lt;/xref:System.Windows.Application.GetResourceStream%2A&gt; &lt;/xref:System.Windows.Application.GetContentStream%2A&gt; &lt;/xref:System.Windows.Application.FindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Command-Line Parameter and Exit Code Processing<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Startup?displayProperty=fullName&gt;, &lt;xref:System.Windows.Application.Exit?displayProperty=fullName&gt;, &lt;xref:System.Windows.Application.Shutdown%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">-<bpt id="p1">**</bpt>命令行参数和退出代码处理<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Startup?displayProperty=fullName&gt; &lt;xref:System.Windows.Application.Exit?displayProperty=fullName&gt;、 &lt;xref:System.Windows.Application.Shutdown%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Application.Shutdown%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Application.Exit?displayProperty=fullName&gt; &lt;/xref:System.Windows.Application.Startup?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Navigation<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FragmentNavigation&gt;, &lt;xref:System.Windows.Application.LoadCompleted&gt;, &lt;xref:System.Windows.Application.Navigated&gt;, &lt;xref:System.Windows.Application.Navigating&gt;, &lt;xref:System.Windows.Application.NavigationProgress&gt;, &lt;xref:System.Windows.Application.NavigationStopped&gt;, &lt;xref:System.Windows.Application.NavigationFailed&gt;, &lt;xref:System.Windows.Application.SetCookie%2A&gt;, &lt;xref:System.Windows.Application.GetCookie%2A&gt;.</source>
          <target state="translated">-   <bpt id="p1">**</bpt>Navigation<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FragmentNavigation&gt;, &lt;xref:System.Windows.Application.LoadCompleted&gt;, &lt;xref:System.Windows.Application.Navigated&gt;, &lt;xref:System.Windows.Application.Navigating&gt;, &lt;xref:System.Windows.Application.NavigationProgress&gt;, &lt;xref:System.Windows.Application.NavigationStopped&gt;, &lt;xref:System.Windows.Application.NavigationFailed&gt;, &lt;xref:System.Windows.Application.SetCookie%2A&gt;, &lt;xref:System.Windows.Application.GetCookie%2A&gt;.&lt;/xref:System.Windows.Application.GetCookie%2A&gt;&lt;/xref:System.Windows.Application.SetCookie%2A&gt;&lt;/xref:System.Windows.Application.NavigationFailed&gt;&lt;/xref:System.Windows.Application.NavigationStopped&gt;&lt;/xref:System.Windows.Application.NavigationProgress&gt;&lt;/xref:System.Windows.Application.Navigating&gt;&lt;/xref:System.Windows.Application.Navigated&gt;&lt;/xref:System.Windows.Application.LoadCompleted&gt;&lt;/xref:System.Windows.Application.FragmentNavigation&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Application implements the singleton pattern to provide shared access to its window, property, and resource scope services.</source>
          <target state="translated">应用程序实现以提供对其窗口、 属性和资源作用域服务的共享的访问的单一实例模式。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Consequently, only one instance of the Application class can be created per &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">因此，在每&lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt;创建应用程序类的一个实例</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can implement an Application using markup, markup and code-behind, or code.</source>
          <target state="translated">你可以实现使用标记、 标记和代码隐藏或代码的应用程序。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If Application is implemented with markup, whether markup or markup and code-behind, the markup file must be configured as an <ph id="ph1">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> <ph id="ph2">`ApplicationDefinition`</ph> item.</source>
          <target state="translated">如果应用程序通过实现的标记，是否标记文件标记或标记和代码隐藏，必须配置为<ph id="ph1">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph><ph id="ph2">`ApplicationDefinition`</ph>项。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  A standalone application does not require an Application object; it is possible to implement a custom <ph id="ph2">`static`</ph> entry point method (<ph id="ph3">`Main`</ph>) that opens a window without creating an instance of Application.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 独立的应用程序不需要应用程序对象; 它是可以实现一个自定义<ph id="ph2">`static`</ph>入口点方法 (<ph id="ph3">`Main`</ph>)，这将打开一个窗口，而无需创建应用程序的实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph> require an Application object.</source>
          <target state="translated">但是，<ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>需要应用程序对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Only one instance of the &lt;xref:System.Windows.Application&gt; class can be created per &lt;xref:System.AppDomain&gt;, to ensure shared access to a single set of application-scope window, property, and resource data.</source>
          <target state="translated">一个实例&lt;xref:System.Windows.Application&gt;类可以创建每个&lt;xref:System.AppDomain&gt;，以确保对单个数据集的作用域的应用程序窗口、 属性和资源的共享的访问。&lt;/xref:System.AppDomain&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Consequently, the default constructor of the &lt;xref:System.Windows.Application&gt; class detects whether the instance being initialized is the first instance in an &lt;xref:System.AppDomain&gt;; if it is not, an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">因此，默认构造函数的&lt;xref:System.Windows.Application&gt;类检测到正在初始化的实例是否中的第一个实例&lt;xref:System.AppDomain&gt;; 如果不是，&lt;xref:System.InvalidOperationException&gt;引发。&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.AppDomain&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Application&gt; object for the current &lt;xref:System.AppDomain&gt; is exposed from the static &lt;xref:System.Windows.Application.Current%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Windows.Application&gt;当前对象&lt;xref:System.AppDomain&gt;公开从静态&lt;xref:System.Windows.Application.Current%2A&gt;属性。&lt;/xref:System.Windows.Application.Current%2A&gt; &lt;/xref:System.AppDomain&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>More than one instance of the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class is created per <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">多个实例<bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类创建每个<bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Occurs when an application becomes the foreground application.</source>
          <target state="translated">当应用程序变得前台应用程序时发生。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application that has one or more open windows is activated (becomes the foreground application) when one of the windows is activated for the first time since the application was launched, or when one of the windows is activated while the application is inactive: Specifically, activation occurs when:      -   An application opens its first window.</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>激活应用程序具有一个或多个打开的窗口 （成为前景应用程序） 时一窗口以来激活时首次启动应用程序，或在应用程序处于非活动状态期间激活了一窗口时︰ 具体而言，执行了激活时:-应用程序打开其第一个窗口。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-   A user switches to the application by using ALT+TAB or by using Task Manager.</source>
          <target state="translated">-A 用户切换到应用程序，通过使用 ALT + TAB 或使用任务管理器。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   A user clicks the taskbar button for one of the windows in an application.</source>
          <target state="translated">-用户单击其中一个应用程序中窗口的任务栏按钮。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Applications that need to detect when they activate can handle the Activated event.</source>
          <target state="translated">需要检测何时及其激活的应用程序可以处理已激活事件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</source>
          <target state="translated">第一次激活应用程序之后，它可能会停用并且在其生存期内多次重新激活。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If an application's behavior or state depends on its activation state, it can handle both Activated and &lt;xref:System.Windows.Application.Deactivated&gt; events to determine which activation state it's in.</source>
          <target state="translated">如果应用程序的行为或状态取决于其激活状态，它可以处理已激活和&lt;xref:System.Windows.Application.Deactivated&gt;事件，以确定哪些激活状态的单元&lt;/xref:System.Windows.Application.Deactivated&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Once an application becomes active, Activated will not be raised again until the application is deactivated, irrespective of how many windows within an application are activated while the application is active.</source>
          <target state="translated">一旦应用程序将变为活动状态，已激活将不会再次引发直到停用应用程序，而不考虑应用程序处于活动状态时激活了多少应用程序中的窗口。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Activated is not raised for <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">激活不的引发<ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>当前对象<bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Application&gt; is a per-&lt;xref:System.AppDomain&gt; singleton type that implements the static Current property to provide shared access to the &lt;xref:System.Windows.Application&gt; instance for the current &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Application&gt;为每个-&lt;xref:System.AppDomain&gt;实现静态当前的属性，以提供对&lt;xref:System.Windows.Application&gt;当前&lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt;实例&lt;/xref:System.Windows.Application&gt;的共享的访问的单一实例类型&lt;/xref:System.AppDomain&gt;&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This design guarantees that state managed by &lt;xref:System.Windows.Application&gt;, including shared resources and state, is available from a single, shared location.</source>
          <target state="translated">这种设计保证由该状态&lt;xref:System.Windows.Application&gt;，包括共享的资源和状态，可从一个单个的共享位置。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This property is thread safe and is available from any thread.</source>
          <target state="translated">此属性是线程安全的可从任意线程。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>当前对象<bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Occurs when an application stops being the foreground application.</source>
          <target state="translated">在应用程序不再前台应用程序时发生。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application that has one or more open windows deactivates (stops being the foreground application) when a user does the following:      -   Switches to another application by using ALT+TAB or by using Task Manager.</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>具有一个或多个打开的 windows 应用程序会停用 （停止作为前台应用程序） 时用户执行下列任务:-通过使用 ALT + TAB 或使用任务管理器切换到另一个应用程序。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-   Clicks the taskbar button for a window in another application.</source>
          <target state="translated">-单击另一个应用程序中的窗口的任务栏按钮。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Applications that need to detect deactivation can handle the Deactivated event.</source>
          <target state="translated">需要检测停用应用程序可以处理已停用事件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</source>
          <target state="translated">第一次激活应用程序之后，它可能会停用并且在其生存期内多次重新激活。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If an application's behavior or state depends on its activation state, it can handle both Deactivated and &lt;xref:System.Windows.Application.Activated&gt; events to determine which state it's in.</source>
          <target state="translated">如果应用程序的行为或状态取决于其激活状态，它可以处理这两个已停用和&lt;xref:System.Windows.Application.Activated&gt;事件，以确定其状态很单元&lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Deactivated is not raised for <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">停用的情况下不会引发<ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Occurs when an exception is thrown by an application but not handled.</source>
          <target state="translated">当应用程序引发但未处理异常时发生。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> catches unhandled exceptions, notifies users of the exception from a dialog box (from which they can report the exception), and automatically shuts down an application.</source>
          <target state="translated">默认情况下，<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>捕获未经处理的异常、 将通知用户 （它们可以从该对话框报告异常） 对话框中，从异常和应用程序将自动关闭。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, if an application needs to perform custom unhandled exception processing from a centralized location, you should handle DispatcherUnhandledException.</source>
          <target state="translated">但是，如果应用程序需要执行自定义处理从一个集中位置的未经处理的异常，则应处理 DispatcherUnhandledException。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>DispatcherUnhandledException is raised by an &lt;xref:System.Windows.Application&gt; for each exception that is unhandled by code running on the main UI thread.</source>
          <target state="translated">由引发 DispatcherUnhandledException&lt;xref:System.Windows.Application&gt;对于每个主 UI 线程上运行的代码中未经处理的异常。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If an exception is not handled on either a background <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread (a thread with its own &lt;xref:System.Windows.Threading.Dispatcher&gt;) or a background worker thread (a thread without a &lt;xref:System.Windows.Threading.Dispatcher&gt;), the exception is not forwarded to the main <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread.</source>
          <target state="translated">如果未处理异常时在后台<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>线程 (具有其自己的线程&lt;xref:System.Windows.Threading.Dispatcher&gt;) 或后台辅助线程 (而无需线程&lt;xref:System.Windows.Threading.Dispatcher&gt;)，该异常不会转发到主<ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>线程。&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Consequently, DispatcherUnhandledException is not raised.</source>
          <target state="translated">因此，不会引发 DispatcherUnhandledException。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In these circumstances, you will need to write code to do the following:      1.</source>
          <target state="translated">在这些情况下，你将需要编写代码来执行以下操作︰ 1。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Handle exceptions on the background thread.</source>
          <target state="translated">处理异常的后台线程上。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Dispatch those exceptions to the main <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread.</source>
          <target state="translated">这些异常调度到主<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>线程。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Rethrow them on the main <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread without handling them to allow DispatcherUnhandledException to be raised.</source>
          <target state="translated">再次引发这些异常在主<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>而不进行处理，以允许 DispatcherUnhandledException 引发的线程。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Threading Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> overview.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>线程处理模型<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>概述。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The DispatcherUnhandledException event handler is passed a &lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs&gt; argument that contains contextual information regarding the exception, including:      -   The exception (&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A&gt;).</source>
          <target state="translated">DispatcherUnhandledException 事件处理程序传递&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs&gt;包含与异常，相关的上下文信息的自变量包括:-异常 (&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A&gt;)。&lt;/xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Windows.Threading.Dispatcher&gt; from which it originated (&lt;xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A&gt;).</source>
          <target state="translated">-&lt;xref:System.Windows.Threading.Dispatcher&gt;从它 (&lt;xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A&gt;)。&lt;/xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can use this information to determine whether an exception is recoverable or not.</source>
          <target state="translated">可以使用此信息来确定异常是否可恢复。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A recoverable exception might be a &lt;xref:System.IO.FileNotFoundException&gt;, for example, while an unrecoverable exception might be a &lt;xref:System.StackOverflowException&gt;, for example.</source>
          <target state="translated">可恢复的异常可能是&lt;xref:System.IO.FileNotFoundException&gt;，例如，尽管可能不可恢复的异常&lt;xref:System.StackOverflowException&gt;，例如。&lt;/xref:System.StackOverflowException&gt; &lt;/xref:System.IO.FileNotFoundException&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When you process an unhandled exception from DispatcherUnhandledException, and you don't want <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> to continue processing it, you need to set the &lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A&gt; property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">当处理 DispatcherUnhandledException，未经处理的异常，并且不希望<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>以便继续处理它，你需要设置&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A&gt;属性<ph id="ph2">`true`</ph>。&lt;/xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Unlike the other events that &lt;xref:System.Windows.Application&gt; raises, DispatcherUnhandledException does not have a matching protected virtual implementation (OnDispatcherUnhandledException).</source>
          <target state="translated">与其他事件不同，&lt;xref:System.Windows.Application&gt;引发，DispatcherUnhandledException 没有匹配的受保护虚拟实现 (OnDispatcherUnhandledException)。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Consequently, classes that derive from &lt;xref:System.Windows.Application&gt; must always register an event handler with DispatcherUnhandledException to process unhandled exceptions.</source>
          <target state="translated">因此，类派生自&lt;xref:System.Windows.Application&gt;必须始终将注册事件处理程序 DispatcherUnhandledException 处理未经处理的异常。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Occurs just before an application shuts down, and cannot be canceled.</source>
          <target state="translated">应用程序关闭，且无法取消之前发生。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An application can shut down for either of the following reasons:      -   The &lt;xref:System.Windows.Application.Shutdown%2A&gt; method of the &lt;xref:System.Windows.Application&gt; object is called, either explicitly or as determined by the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; property.</source>
          <target state="translated">应用程序可以关闭这两个由于以下原因:-&lt;xref:System.Windows.Application.Shutdown%2A&gt;方法&lt;xref:System.Windows.Application&gt;调用对象时，无论是显式还是作为确定通过&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;属性。&lt;/xref:System.Windows.Application.ShutdownMode%2A&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-   The user ends the session by logging off or shutting down.</source>
          <target state="translated">-用户将通过注销或关闭来结束会话。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can detect when application shutdown occurs by handling the Exit event, and perform any additional processing as required.</source>
          <target state="translated">你可以检测应用程序关闭时通过处理退出事件，并执行所需进行任何其他处理。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can also handle Exit to inspect or change the application exit code when you don't need to call &lt;xref:System.Windows.Application.Shutdown%2A&gt; explicitly.</source>
          <target state="translated">你还可以处理退出以检查或更改应用程序退出代码时无需调用&lt;xref:System.Windows.Application.Shutdown%2A&gt;显式。&lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The exit code is exposed from the &lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt; property of the &lt;xref:System.Windows.ExitEventArgs&gt; argument that's passed to the Exit event handler.</source>
          <target state="translated">退出代码公开从&lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;属性&lt;xref:System.Windows.ExitEventArgs&gt;传递给退出事件处理程序自变量。&lt;/xref:System.Windows.ExitEventArgs&gt; &lt;/xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When the application stops running, the exit code is passed to the operating system for subsequent processing.</source>
          <target state="translated">当应用程序停止运行时，退出代码将被传递到操作系统，以进行后续处理。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If your application handles the &lt;xref:System.Windows.Application.SessionEnding&gt; event and subsequently cancels it, Exit is not raised and the application continues running in accordance with the shutdown mode.</source>
          <target state="translated">如果你的应用程序处理&lt;xref:System.Windows.Application.SessionEnding&gt;事件并且随后它退出，则不会引发的取消和应用程序将继续在符合关闭模式中运行。&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The exit code can be set from an <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>, although the value is ignored.</source>
          <target state="translated">退出代码可以设置从<ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>，尽管忽略的值。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]</ph>, Exit is raised in the following circumstances:      -   An <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph> is navigated away from.</source>
          <target state="translated">有关<ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]</ph>，在以下情况下引发退出:-一个<ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph>离开。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-   In <ph id="ph1">[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]</ph>, when the tab that is hosting the <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph> is closed.</source>
          <target state="translated">-在<ph id="ph1">[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]</ph>，当选项卡承载<ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph>已关闭。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-   When the browser is closed.</source>
          <target state="translated">-如果已关闭浏览器。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In all cases, the value of the &lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt; property is ignored.</source>
          <target state="translated">在所有情况下，值&lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;属性将被忽略。&lt;/xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Searches for a <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> resource, such as a <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, with the specified key, and throws an exception if the requested resource is not found (see <bpt id="p3">[</bpt>XAML Resources<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">搜索<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>资源，如<bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 与指定的键，将引发异常如果找不到请求的资源 (请参阅<bpt id="p3">[</bpt>XAML 资源<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>FindResource will first look in application-scope resources for the specified resource.</source>
          <target state="translated">FindResource 将首先在应用程序范围内指定资源的资源中查找。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Application-scope resources are managed by &lt;xref:System.Windows.Application&gt;, and are exposed from the &lt;xref:System.Windows.Application.Resources%2A&gt; property.</source>
          <target state="translated">应用程序范围的资源由&lt;xref:System.Windows.Application&gt;，和从公开&lt;xref:System.Windows.Application.Resources%2A&gt;属性。&lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If the specified resource is not found in the set of application-scope resources, FindResource then next searches the system resources.</source>
          <target state="translated">如果应用程序范围的资源组中未找到指定的资源，FindResource 下一步搜索系统资源。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</source>
          <target state="translated">系统资源是由用户定义的命令行程序资源，包括颜色、 字体和外壳程序配置。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>These are exposed from the &lt;xref:System.Windows.SystemColors&gt;, &lt;xref:System.Windows.SystemFonts&gt;, and &lt;xref:System.Windows.SystemParameters&gt; types, respectively, as static properties.</source>
          <target state="translated">这些来自&lt;xref:System.Windows.SystemColors&gt;， &lt;xref:System.Windows.SystemFonts&gt;，和&lt;xref:System.Windows.SystemParameters&gt;分别为静态属性类型。&lt;/xref:System.Windows.SystemParameters&gt; &lt;/xref:System.Windows.SystemFonts&gt; &lt;/xref:System.Windows.SystemColors&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To use FindResource to acquire them, these types also expose resource key properties that are designed to be passed to FindResource; for example, &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.</source>
          <target state="translated">若要使用 FindResource 获取它们，这些类型还公开旨在传递给 FindResource; 的资源键属性例如， &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.&lt;/xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Because FindResource returns an object, you must cast the returned value to the appropriate type if the resource is found.</source>
          <target state="translated">因为 FindResource 返回一个对象，您必须强制转换为适当的类型的返回的值，如果找到资源。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If you call this method for a key that cannot be found, an exception is thrown.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 如果找不到键调用此方法，将引发异常。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If you do not want to handle exceptions that result from calling FindResource, call &lt;xref:System.Windows.Application.TryFindResource%2A&gt; instead; &lt;xref:System.Windows.Application.TryFindResource%2A&gt; returns a <ph id="ph1">`null`</ph> reference when a requested resource cannot be found, and does not throw an exception.</source>
          <target state="translated">如果你不希望以处理调用 FindResource 导致的异常，请改为; 调用&lt;xref:System.Windows.Application.TryFindResource%2A&gt;&lt;xref:System.Windows.Application.TryFindResource%2A&gt;返回<ph id="ph1">`null`</ph>引用时找不到请求的资源，并不会引发异常。&lt;/xref:System.Windows.Application.TryFindResource%2A&gt; &lt;/xref:System.Windows.Application.TryFindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This method is thread safe and can be called from any thread.</source>
          <target state="translated">此方法是线程安全的可以从任何线程调用。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The name of the resource to find.</source>
          <target state="translated">要查找的资源的名称。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The requested resource object.</source>
          <target state="translated">所请求的资源对象。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the requested resource is not found, a <bpt id="p1">&lt;xref href="System.Windows.ResourceReferenceKeyNotFoundException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown.</source>
          <target state="translated">如果未找到请求的资源， <bpt id="p1">&lt;xref href="System.Windows.ResourceReferenceKeyNotFoundException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>引发。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The resource cannot be found.</source>
          <target state="translated">找不到资源。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Occurs when a navigator in the application begins navigation to a content fragment, Navigation occurs immediately if the desired fragment is in the current content, or after the source <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> content has been loaded if the desired fragment is in different content.</source>
          <target state="translated">当应用程序中的导航器开始导航到内容片段中，如果所需的片段中的当前内容，或源之后立即发生导航<ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>如果所需的片段位于不同的内容已加载内容。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">导航器是其中一种&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或一种&lt;xref:System.Windows.Controls.Frame&gt;。&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName&gt;.</source>
          <target state="translated">请参阅&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName&gt;。&lt;/xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns a resource stream for a content data file that is located at the specified &lt;xref:System.Uri&gt; (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">返回位于指定的内容的数据文件的资源流&lt;xref:System.Uri&gt;(请参阅<bpt id="p1">[</bpt>WPF 应用程序资源、 内容和数据文件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>)。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This method is not thread safe.</source>
          <target state="translated">此方法不是线程安全。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The relative &lt;xref:System.Uri&gt; that maps to a loose resource.</source>
          <target state="translated">相对&lt;xref:System.Uri&gt;映射到松散的资源。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a content data file that is located at the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含位于指定&lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt;的内容的数据文件</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If a loose resource is not found, null is returned.</source>
          <target state="translated">如果未找到松散资源，则返回 null。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetContentStream is null.</source>
          <target state="translated">&lt;xref:System.Uri&gt;传递给 GetContentStream 为 null。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetContentStream is an absolute &lt;xref:System.Uri&gt;.</source>
          <target state="translated">&lt;xref:System.Uri&gt;，它是传递给 GetContentStream 是绝对&lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt; &lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Retrieves a cookie for the location specified by a &lt;xref:System.Uri&gt;.</source>
          <target state="translated">检索用于指定一种&lt;xref:System.Uri&gt;。&lt;/xref:System.Uri&gt;的位置的 cookie。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>GetCookie retrieves a cookie for the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">GetCookie 检索指定&lt;xref:System.Uri&gt;。&lt;/xref:System.Uri&gt; cookie</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If the cookie can't be retrieved, a &lt;xref:System.ComponentModel.Win32Exception&gt; is thrown.</source>
          <target state="translated">如果无法检索 cookie，&lt;xref:System.ComponentModel.Win32Exception&gt;引发。&lt;/xref:System.ComponentModel.Win32Exception&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You need to write the code to parse the cookie string into a list of name/value pairs.</source>
          <target state="translated">你需要编写代码以将 cookie 字符串分析为名称/值对的列表。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For an overview of cookies in <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>, see <bpt id="p1">[</bpt>Navigation Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关概述中的 cookie <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>，请参阅<bpt id="p1">[</bpt>导航概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that specifies the location for which a cookie was created.</source>
          <target state="translated">&lt;xref:System.Uri&gt;，它指定为其创建 cookie 的位置。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; value, if the cookie exists; otherwise, a <bpt id="p1">&lt;xref href="System.ComponentModel.Win32Exception"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown.</source>
          <target state="translated">A&lt;xref:System.String&gt;值，如果存在 cookie; 否则为<bpt id="p1">&lt;xref href="System.ComponentModel.Win32Exception"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>引发。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> error is raised by the <bpt id="p1">&lt;xref uid="langword_csharp_InternetGetCookie" name="InternetGetCookie" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function (called by GetCookie) if a problem occurs when attempting to retrieve the specified cookie.</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>错误由<bpt id="p1">&lt;xref uid="langword_csharp_InternetGetCookie" name="InternetGetCookie" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数 （由 GetCookie） 如果尝试检索指定的 cookie 时出现问题。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Returns a resource stream for a site-of-origin data file that is located at the specified &lt;xref:System.Uri&gt; (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">返回位于指定的源站点数据文件的资源流&lt;xref:System.Uri&gt;(请参阅<bpt id="p1">[</bpt>WPF 应用程序资源、 内容和数据文件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>)。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This method is not thread safe.</source>
          <target state="translated">此方法不是线程安全。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that maps to a loose resource at the site of origin.</source>
          <target state="translated">&lt;xref:System.Uri&gt;映射到在源站点的松散资源。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a resource stream for a site-of-origin data file that is located at the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含指定&lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt;在所在的源站点数据文件的资源流</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If the loose resource is not found, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is returned.</source>
          <target state="translated">如果未找到松散的资源， <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>返回。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetRemoteStream is null.</source>
          <target state="translated">&lt;xref:System.Uri&gt;传递给 GetRemoteStream 为 null。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetRemoteStream is either not relative, or is absolute but not in the <ph id="ph1">`pack://siteoforigin:,,,/`</ph> form.</source>
          <target state="translated">&lt;xref:System.Uri&gt;传递给 GetRemoteStream 不是相对的而不是在绝对值<ph id="ph1">`pack://siteoforigin:,,,/`</ph>窗体。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns a resource stream for a resource data file that is located at the specified &lt;xref:System.Uri&gt; (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">返回位于指定的资源数据文件的资源流&lt;xref:System.Uri&gt;(请参阅<bpt id="p1">[</bpt>WPF 应用程序资源、 内容和数据文件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>)。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This method is not thread safe.</source>
          <target state="translated">此方法不是线程安全。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that maps to an embedded resource.</source>
          <target state="translated">&lt;xref:System.Uri&gt;映射到嵌入的资源。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a resource stream for resource data file that is located at the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含指定&lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt;在所在的资源数据文件的资源流</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetResourceStream is null.</source>
          <target state="translated">&lt;xref:System.Uri&gt;传递给 GetResourceStream 为 null。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetResourceStream is either not relative, or is absolute but not in the <ph id="ph1">`pack://application:,,,/`</ph> form.</source>
          <target state="translated">&lt;xref:System.Uri&gt;传递给 GetResourceStream 不是相对的而不是在绝对值<ph id="ph1">`pack://application:,,,/`</ph>窗体。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetResourceStream cannot be found.</source>
          <target state="translated">&lt;xref:System.Uri&gt;传递给找不到 GetResourceStream。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Occurs when content that was navigated to by a navigator in the application has been loaded, parsed, and has begun rendering.</source>
          <target state="translated">在已加载，分析，并开始呈现应用程序中的导航器导航到的内容时发生。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">导航器是其中一种&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或一种&lt;xref:System.Windows.Controls.Frame&gt;。&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName&gt;.</source>
          <target state="translated">请参阅&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName&gt;。&lt;/xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Listen for events on the navigated content such as the &lt;xref:System.Windows.FrameworkElement.Loaded&gt;event on &lt;xref:System.Windows.Controls.Page&gt; before you access properties of the navigated content.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如侦听事件导航内容&lt;xref:System.Windows.FrameworkElement.Loaded&gt;上的事件&lt;xref:System.Windows.Controls.Page&gt;访问导航的内容的属性之前。&lt;/xref:System.Windows.Controls.Page&gt; &lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Loads a <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file that is located at the specified <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>, and converts it to an instance of the object that is specified by the root element of the <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file.</source>
          <target state="translated">加载<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>位于指定的文件<ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>，并将其转换到的根元素指定的对象实例<ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>文件。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>You must explicitly convert the return value to the same type as the root element of the <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file.</source>
          <target state="translated">你必须显式转换到的根元素相同类型的返回值<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>文件。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> file can be an application code file (configured as an <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> Page item) or an application data file (a resource file, content file, or site-of-origin file; see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>文件可以是应用程序代码文件 (配置为<ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph>页项) 或应用程序数据文件 (资源文件、 内容文件或的源站点文件; 请参阅<bpt id="p1">[</bpt>WPF 应用程序资源、 内容和数据文件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is not thread-safe.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 此方法不是线程安全。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; that maps to a relative <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">A&lt;xref:System.Uri&gt;映射到相对<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>文件。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>An instance of the root element specified by the XAML file loaded.</source>
          <target state="translated">指定加载的 XAML 文件的根元素的实例。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The file is not a <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> file.</source>
          <target state="translated">文件不是<ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>文件。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Loads a <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file that is located at the specified <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> and converts it to an instance of the object that is specified by the root element of the <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file.</source>
          <target state="translated">加载<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>位于指定的文件<ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>并将其转换到的根元素指定的对象实例<ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>文件。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> file can be an application code file (configured as an <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> Page item) or an application data file (a resource file, content file, or site-of-origin file; see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>文件可以是应用程序代码文件 (配置为<ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph>页项) 或应用程序数据文件 (资源文件、 内容文件或的源站点文件; 请参阅<bpt id="p1">[</bpt>WPF 应用程序资源、 内容和数据文件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is not thread-safe.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 此方法不是线程安全。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>An object of the same type as the root element of the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">与的根元素相同的类型的对象<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>文件。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; that maps to a relative <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">A&lt;xref:System.Uri&gt;映射到相对<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>文件。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph>为 null。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is of a type that does not match the root element of the <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>不匹配的根元素的类型<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>文件。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets or sets the main window of the application.</source>
          <target state="translated">获取或设置应用程序的主窗口。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>MainWindow is automatically set with a reference to the first &lt;xref:System.Windows.Window&gt; object to be instantiated in the &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">主窗口将自动设置为第一个&lt;xref:System.Windows.Window&gt;要在&lt;xref:System.AppDomain&gt;。&lt;/xref:System.AppDomain&gt;实例化的对象&lt;/xref:System.Windows.Window&gt;的引用</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>You can specify a different main window by setting MainWindow assigning another &lt;xref:System.Windows.Application.Windows%2A&gt; object to the MainWindow property.</source>
          <target state="translated">你可以通过设置 MainWindow 分配另一个指定不同的主窗口&lt;xref:System.Windows.Application.Windows%2A&gt;到 MainWindow 属性的对象。&lt;/xref:System.Windows.Application.Windows%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; property of the &lt;xref:System.Windows.Application&gt; object is set to &lt;xref:System.Windows.ShutdownMode&gt;, closing the main window causes the application to shut down.</source>
          <target state="translated">如果&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;属性&lt;xref:System.Windows.Application&gt;对象设置为&lt;xref:System.Windows.ShutdownMode&gt;，关闭主窗口导致应用程序关闭。&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>It is possible to set the MainWindow property from <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>, if an application's main window is not the window that is produced by setting the &lt;xref:System.Windows.Application.StartupUri%2A&gt; property in <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>.</source>
          <target state="translated">可以设置从 MainWindow 属性<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>，如果应用程序的主窗口不是通过设置生成的窗口&lt;xref:System.Windows.Application.StartupUri%2A&gt;中的属性<ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>。&lt;/xref:System.Windows.Application.StartupUri%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The two limitations of the <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> approach are:      -   You can specify either a <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-only &lt;xref:System.Windows.Window&gt; or a <ph id="ph3">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-only &lt;xref:System.Windows.Navigation.NavigationWindow&gt; as the main window.</source>
          <target state="translated">两个限制<ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>方法是:-你可以指定<ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-仅&lt;xref:System.Windows.Window&gt;或<ph id="ph3">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-仅&lt;xref:System.Windows.Navigation.NavigationWindow&gt;作为主窗口。&lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-   You must set the &lt;xref:System.Windows.UIElement.Visibility%2A&gt; property of the window you specify, otherwise it won't be shown.</source>
          <target state="translated">-你必须设置&lt;xref:System.Windows.UIElement.Visibility%2A&gt;你指定的窗口的属性，否则它将不会。&lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The reference to the first &lt;xref:System.Windows.Window&gt; object to be instantiated is also added as the first item to the &lt;xref:System.Windows.Application.Windows%2A&gt; collection.</source>
          <target state="translated">第一个引用&lt;xref:System.Windows.Window&gt;要实例化的对象还添加到的第一项为&lt;xref:System.Windows.Application.Windows%2A&gt;集合。&lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If MainWindow is subsequently set with a reference to a different &lt;xref:System.Windows.Window&gt;, the position of the item with the reference to the main window will change, while the order of items in &lt;xref:System.Windows.Application.Windows%2A&gt; remains the same.</source>
          <target state="translated">如果使用的引用为另一种随后设置 MainWindow &lt;xref:System.Windows.Window&gt;，与对主窗口的引用项的位置会更改，而在中的项的顺序&lt;xref:System.Windows.Application.Windows%2A&gt;保持不变。&lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Consequently, always use MainWindow to refer to the main window instead of the first item in &lt;xref:System.Windows.Application.Windows%2A&gt;.</source>
          <target state="translated">因此，始终使用 MainWindow 来引用而不是&lt;xref:System.Windows.Application.Windows%2A&gt;.&lt;/xref:System.Windows.Application.Windows%2A&gt;的第一项的主窗口</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the main window is a &lt;xref:System.Windows.Navigation.NavigationWindow&gt;, and you need specific access to &lt;xref:System.Windows.Navigation.NavigationWindow&gt; members, you will need to cast the value of MainWindow to &lt;xref:System.Windows.Navigation.NavigationWindow&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 主窗口是否&lt;xref:System.Windows.Navigation.NavigationWindow&gt;，而且您需要&lt;xref:System.Windows.Navigation.NavigationWindow&gt;成员，您将需要为&lt;xref:System.Windows.Navigation.NavigationWindow&gt;。&lt;/xref:System.Windows.Navigation.NavigationWindow&gt; MainWindow 的值转换&lt;/xref:System.Windows.Navigation.NavigationWindow&gt;到的特定权限&lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  This property is available only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">&gt;&gt; 此属性则仅可从创建的线程&lt;xref:System.Windows.Application&gt;对象。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is designated as the main application window.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>被指定为应用程序主窗口。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>MainWindow is set from an application that's hosted in a browser, such as an <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">从应用程序托管在浏览器中，如设置 MainWindow <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Occurs when the content that is being navigated to by a navigator in the application has been found, although it may not have completed loading.</source>
          <target state="translated">当已发现应用程序中的导航器要将其导航到的内容，即使可能未完成加载时发生。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">导航器是其中一种&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或一种&lt;xref:System.Windows.Controls.Frame&gt;。&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;.</source>
          <target state="translated">请参阅&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;。&lt;/xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Occurs when a new navigation is requested by a navigator in the application.</source>
          <target state="translated">当新导航请求的应用程序中的导航器时发生。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">导航器是其中一种&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或一种&lt;xref:System.Windows.Controls.Frame&gt;。&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName&gt;.</source>
          <target state="translated">请参阅&lt;xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName&gt;。&lt;/xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Occurs when an error occurs while a navigator in the application is navigating to the requested content.</source>
          <target state="translated">在应用程序中的导航器导航到所请求的内容时发生错误时发生。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">导航器是其中一种&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或一种&lt;xref:System.Windows.Controls.Frame&gt;。&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;.</source>
          <target state="translated">请参阅&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;。&lt;/xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Occurs periodically during a download that is being managed by a navigator in the application to provide navigation progress information.</source>
          <target state="translated">在由应用程序以提供导航进度信息中的导航器的下载期间定期发生。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">导航器是其中一种&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或一种&lt;xref:System.Windows.Controls.Frame&gt;。&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName&gt;.</source>
          <target state="translated">请参阅&lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName&gt;。&lt;/xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Occurs when the <bpt id="p1">&lt;xref uid="langword_csharp_StopLoading" name="StopLoading" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method of a navigator in the application is called, or when a new navigation is requested by a navigator while a current navigation is in progress.</source>
          <target state="translated">发生时<bpt id="p1">&lt;xref uid="langword_csharp_StopLoading" name="StopLoading" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>调用应用程序中的导航器的方法，或正在进行当前导航时，通过导航器请求一个新的导航时发生时。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">导航器是其中一种&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或一种&lt;xref:System.Windows.Controls.Frame&gt;。&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName&gt;.</source>
          <target state="translated">请参阅&lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName&gt;。&lt;/xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Activated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.Activated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>OnActivated raises the &lt;xref:System.Windows.Application.Activated&gt; event.</source>
          <target state="translated">OnActivated 引发&lt;xref:System.Windows.Application.Activated&gt;事件。&lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnActivated.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可能会重写 OnActivated。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnActivated in the base class if &lt;xref:System.Windows.Application.Activated&gt; needs to be raised.</source>
          <target state="translated">重写的方法必须调用 OnActivated 基类中如果&lt;xref:System.Windows.Application.Activated&gt;需要引发。&lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;包含事件数据。&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Deactivated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.Deactivated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>OnDeactivated raises the &lt;xref:System.Windows.Application.Deactivated&gt; event.</source>
          <target state="translated">OnDeactivated 引发&lt;xref:System.Windows.Application.Deactivated&gt;事件。&lt;/xref:System.Windows.Application.Deactivated&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnDeactivated.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可能会重写 OnDeactivated。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnDeactivated in the base class if &lt;xref:System.Windows.Application.Deactivated&gt; needs to be raised.</source>
          <target state="translated">重写的方法必须调用 OnDeactivated 基类中如果&lt;xref:System.Windows.Application.Deactivated&gt;需要引发。&lt;/xref:System.Windows.Application.Deactivated&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;包含事件数据。&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Exit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.Exit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>OnExit raises the &lt;xref:System.Windows.Application.Exit&gt; event.</source>
          <target state="translated">OnExit 引发&lt;xref:System.Windows.Application.Exit&gt;事件。&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override the OnExit method.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可以重写 OnExit 方法。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnExit in the base class if &lt;xref:System.Windows.Application.Exit&gt; needs to be raised.</source>
          <target state="translated">重写的方法必须调用 OnExit 基类中如果&lt;xref:System.Windows.Application.Exit&gt;需要引发。&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.ExitEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.ExitEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.FragmentNavigation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.FragmentNavigation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>OnFragmentNavigation raises the &lt;xref:System.Windows.Application.FragmentNavigation&gt; event.</source>
          <target state="translated">OnFragmentNavigation 引发&lt;xref:System.Windows.Application.FragmentNavigation&gt;事件。&lt;/xref:System.Windows.Application.FragmentNavigation&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnFragmentNavigation.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可能会重写 OnFragmentNavigation。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnFragmentNavigation in the base class if &lt;xref:System.Windows.Application.FragmentNavigation&gt; needs to be raised.</source>
          <target state="translated">重写的方法必须调用 OnFragmentNavigation 基类中如果&lt;xref:System.Windows.Application.FragmentNavigation&gt;需要引发。&lt;/xref:System.Windows.Application.FragmentNavigation&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.FragmentNavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.FragmentNavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.LoadCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.LoadCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>OnLoadCompleted raises the &lt;xref:System.Windows.Application.LoadCompleted&gt; event.</source>
          <target state="translated">OnLoadCompleted 引发&lt;xref:System.Windows.Application.LoadCompleted&gt;事件。&lt;/xref:System.Windows.Application.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnLoadCompleted.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可能会重写 OnLoadCompleted。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnLoadCompleted in the base class if &lt;xref:System.Windows.Application.LoadCompleted&gt; needs to be raised.</source>
          <target state="translated">重写的方法必须调用 OnLoadCompleted 基类中如果&lt;xref:System.Windows.Application.LoadCompleted&gt;需要引发。&lt;/xref:System.Windows.Application.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Navigated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.Navigated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>OnNavigated raises the &lt;xref:System.Windows.Application.Navigated&gt; event.</source>
          <target state="translated">OnNavigated 引发&lt;xref:System.Windows.Application.Navigated&gt;事件。&lt;/xref:System.Windows.Application.Navigated&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigated.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可能会重写 OnNavigated。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnNavigated in the base class if &lt;xref:System.Windows.Application.Navigated&gt; needs to be raised.</source>
          <target state="translated">重写的方法必须调用 OnNavigated 基类中如果&lt;xref:System.Windows.Application.Navigated&gt;需要引发。&lt;/xref:System.Windows.Application.Navigated&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Navigating"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.Navigating"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>OnNavigating raises the &lt;xref:System.Windows.Application.Navigating&gt; event.</source>
          <target state="translated">OnNavigating 引发&lt;xref:System.Windows.Application.Navigating&gt;事件。&lt;/xref:System.Windows.Application.Navigating&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigating.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可能会重写 OnNavigating。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnNavigating in the base class if &lt;xref:System.Windows.Application.Navigating&gt; needs to be raised.</source>
          <target state="translated">重写的方法必须调用 OnNavigating 基类中如果&lt;xref:System.Windows.Application.Navigating&gt;需要引发。&lt;/xref:System.Windows.Application.Navigating&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigatingCancelEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigatingCancelEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationFailed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.NavigationFailed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>OnNavigationFailed raises the &lt;xref:System.Windows.Application.NavigationFailed&gt; event.</source>
          <target state="translated">OnNavigationFailed 引发&lt;xref:System.Windows.Application.NavigationFailed&gt;事件。&lt;/xref:System.Windows.Application.NavigationFailed&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigationFailed.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可能会重写 OnNavigationFailed。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnNavigationFailed in the base class if &lt;xref:System.Windows.Application.NavigationFailed&gt; needs to be raised.</source>
          <target state="translated">重写的方法必须调用 OnNavigationFailed 基类中如果&lt;xref:System.Windows.Application.NavigationFailed&gt;需要引发。&lt;/xref:System.Windows.Application.NavigationFailed&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationFailedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationFailedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationProgress"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.NavigationProgress"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>OnNavigationProgress raises the &lt;xref:System.Windows.Application.NavigationProgress&gt; event.</source>
          <target state="translated">OnNavigationProgress 引发&lt;xref:System.Windows.Application.NavigationProgress&gt;事件。&lt;/xref:System.Windows.Application.NavigationProgress&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigationProgress.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可能会重写 OnNavigationProgress。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The overridden method must explicitly call OnNavigationProgress in the base class if &lt;xref:System.Windows.Application.NavigationProgress&gt; needs to be raised.</source>
          <target state="translated">重写的方法必须显式调用 OnNavigationProgress 基类中如果&lt;xref:System.Windows.Application.NavigationProgress&gt;需要引发。&lt;/xref:System.Windows.Application.NavigationProgress&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationProgressEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationProgressEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationStopped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.NavigationStopped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>OnNavigationStopped raises the &lt;xref:System.Windows.Application.NavigationStopped&gt; event.</source>
          <target state="translated">OnNavigationStopped 引发&lt;xref:System.Windows.Application.NavigationStopped&gt;事件。&lt;/xref:System.Windows.Application.NavigationStopped&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigationStopped.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可能会重写 OnNavigationStopped。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnNavigationStopped in the base class if &lt;xref:System.Windows.Application.NavigationStopped&gt; needs to be raised.</source>
          <target state="translated">重写的方法必须调用 OnNavigationStopped 基类中如果&lt;xref:System.Windows.Application.NavigationStopped&gt;需要引发。&lt;/xref:System.Windows.Application.NavigationStopped&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.SessionEnding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.SessionEnding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>OnSessionEnding raises the &lt;xref:System.Windows.Application.SessionEnding&gt; event.</source>
          <target state="translated">OnSessionEnding 引发&lt;xref:System.Windows.Application.SessionEnding&gt;事件。&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnSessionEnding.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可能会重写 OnSessionEnding。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnSessionEnding in the base class if &lt;xref:System.Windows.Application.SessionEnding&gt; needs to be raised.</source>
          <target state="translated">重写的方法必须调用 OnSessionEnding 基类中如果&lt;xref:System.Windows.Application.SessionEnding&gt;需要引发。&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.SessionEndingCancelEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.SessionEndingCancelEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Startup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.Application.Startup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>OnStartup raises the &lt;xref:System.Windows.Application.Startup&gt; event.</source>
          <target state="translated">OnStartup 引发&lt;xref:System.Windows.Application.Startup&gt;事件。&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnStartup.</source>
          <target state="translated">派生自类型&lt;xref:System.Windows.Application&gt;可能会重写 OnStartup。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnStartup in the base class if the &lt;xref:System.Windows.Application.Startup&gt; event needs to be raised.</source>
          <target state="translated">重写的方法必须调用 OnStartup 基类中如果&lt;xref:System.Windows.Application.Startup&gt;需要发出的事件。&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.StartupEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.StartupEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Gets a collection of application-scope properties.</source>
          <target state="translated">获取应用程序作用域属性的集合。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Application&gt; exposes a dictionary via Properties which you can use to store application-scope properties.</source>
          <target state="translated">&lt;xref:System.Windows.Application&gt;显示通过属性可以用于存储应用程序作用域属性的字典。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>This allows you to share state amongst all code in an &lt;xref:System.AppDomain&gt; in a thread-safe fashion, without the need to write your own state code.</source>
          <target state="translated">这使您可以共享状态中的所有代码&lt;xref:System.AppDomain&gt;以线程安全的方式，而无需编写你自己的状态代码。&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Properties stored in Properties must be converted to the appropriate type returned.</source>
          <target state="translated">存储在属性中的属性必须转换为适当的返回类型。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>TheProperties property is thread safe and is available from any thread.</source>
          <target state="translated">TheProperties 属性是线程安全的且都可从任何线程。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; that contains the application-scope properties.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;包含的应用程序作用域属性。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;xref:System.Reflection.Assembly&gt; that provides the pack <ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph> for resources in a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application.</source>
          <target state="translated">获取或设置&lt;xref:System.Reflection.Assembly&gt;提供包<ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph>中的资源<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>应用程序。&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> resources are resolved at run time with respect to the entry assembly, which is identified by the value returned from the &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; method.</source>
          <target state="translated">默认情况下，<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>资源项程序集，从返回的值由标识相关的运行时进行解析&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;方法。&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The entry assembly is the assembly that is returned by &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; and could be the following:      -   The executable assembly in the default application domain.</source>
          <target state="translated">入口程序集是通过返回的程序集&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;，并且可能以下:-默认应用程序域中的可执行程序集。&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>-   The first assembly to be executed by calling &lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.</source>
          <target state="translated">的通过调用&lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.&lt;/xref:System.AppDomain.ExecuteAssembly%2A&gt;要执行第一个程序集</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>In the following cases, however, a <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly cannot get a reference to the entry assembly:      -   An unmanaged (native) application hosts the <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly.</source>
          <target state="translated">在以下情况，但是，<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>程序集无法获取项程序集的引用:-一个非托管 （本机） 应用程序主机<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>程序集。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>-   A managed application hosts the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly by loading it into a new application domain using a method other than &lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.</source>
          <target state="translated">-A 托管应用程序主机<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>通过加载到新应用程序域之外使用某种方法&lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.&lt;/xref:System.AppDomain.ExecuteAssembly%2A&gt;的程序集</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>In both of these cases, &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; returns <ph id="ph1">`null`</ph>, and the <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly's resources cannot be resolved.</source>
          <target state="translated">在这两种情况，&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;返回<ph id="ph1">`null`</ph>，和<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>无法解析程序集的资源。&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>In these cases, ResourceAssembly can be set, once only, with a reference to the assembly that should be used to resolve resources.</source>
          <target state="translated">在这些情况下，ResourceAssembly 可以设置，一次仅具有对应该用于解析资源的程序集的引用。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>ResourceAssembly can only be set once because it is unlikely that the resource assembly will change after the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly is loaded.</source>
          <target state="translated">ResourceAssembly 只能设置一次由于不可能的资源程序集将更改后<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>则加载程序集。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  ResourceAssembly cannot be set when a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly can discover the entry assembly—that is, when &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; returns a reference to an assembly rather than <ph id="ph3">`null`</ph>.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; ResourceAssembly 不能设置时<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>程序集可以发现入口程序集-即，当&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;返回对程序集的引用而非<ph id="ph3">`null`</ph>。&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This property is thread safe and is available from any thread.</source>
          <target state="translated">此属性是线程安全的可从任意线程。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>ResourceAssembly is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">ResourceAssembly 是.NET Framework 3.5 版中引入的。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>版本和依赖关系<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A reference to the &lt;xref:System.Reflection.Assembly&gt; that provides the pack <ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph> for resources in a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application.</source>
          <target state="translated">对引用&lt;xref:System.Reflection.Assembly&gt;提供包<ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph>中的资源<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>应用程序。&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application has an entry assembly, or ResourceAssembly has already been set.</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>应用程序都有一个条目程序集，或 ResourceAssembly 已设置。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Gets or sets a collection of application-scope resources, such as styles and brushes.</source>
          <target state="translated">获取或设置应用程序范围的资源，如样式和画笔的集合。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The Resources property can be used to share resources across the windows and elements of an application.</source>
          <target state="translated">资源属性可用于在 windows 和应用程序的元素之间共享资源。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Additionally, the Resources property is included in the resource lookup path, which is traversed in the following order:      1.</source>
          <target state="translated">此外，资源属性包含在资源查找路径中，按以下顺序遍历︰ 1。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Elements      2.</source>
          <target state="translated">2 的元素。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Windows      3.</source>
          <target state="translated">Windows 3。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Resources      4.</source>
          <target state="translated">资源 4。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>System       Consequently, <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> elements can bind to application-scope resources.</source>
          <target state="translated">系统因此，<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>可以将元素绑定到应用程序范围的资源。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Additionally, if resources change, the resource system ensures that element properties which are bound to those resources are automatically updated to reflect the change.</source>
          <target state="translated">此外，如果更改资源，资源系统可确保该元素属性绑定到这些资源会自动更新以反映更改。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Application-scope resources provide a simple way to support a consistent theme across your application.</source>
          <target state="translated">应用程序范围的资源提供了一种简单的方法，可支持你的应用程序一致的主题。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>You can easily create a theme in <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> by using the <ph id="ph2">`Application.Resources`</ph> tag.</source>
          <target state="translated">你可以轻松创建中的主题<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>使用<ph id="ph2">`Application.Resources`</ph>标记。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>However, if your application supports multiple themes, which may contain a large number of theme elements, it might be easier to manage them using one &lt;xref:System.Windows.ResourceDictionary&gt; instance for each theme.</source>
          <target state="translated">但是，如果你的应用程序支持多个主题，其中可能包含大量的主题元素，则可能是更轻松地管理它们使用一个&lt;xref:System.Windows.ResourceDictionary&gt;每个主题的实例。&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>In this way, a new theme can be applied by setting the Resources property to the appropriate &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">这种方式，可以通过将资源属性设置为适当的&lt;xref:System.Windows.ResourceDictionary&gt;.&lt;/xref:System.Windows.ResourceDictionary&gt;应用新的主题</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>There are two considerations to make when using Resources.</source>
          <target state="translated">有两个注意事项，以便使用资源时。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>First, the dictionary <bpt id="p1">*</bpt>key<ept id="p1">*</ept> is an object, so you need to use exactly the same object instance when both setting and getting a property value (note that the key is case-sensitive when using a string).</source>
          <target state="translated">首先，字典<bpt id="p1">*</bpt>密钥<ept id="p1">*</ept>是一个对象，因此你需要使用完全相同的对象实例时设置和获取属性值 （请注意，使用字符串键时区分大小写）。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Second, the dictionary <bpt id="p1">*</bpt>value<ept id="p1">*</ept> is an object, so you will need to convert the value to the desired type when getting a property value.</source>
          <target state="translated">其次，字典<bpt id="p1">*</bpt>值<ept id="p1">*</ept>是一个对象，因此你将需要获取的属性值时，将的值转换为所需的类型。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Resources is thread safe and is available from any thread.</source>
          <target state="translated">资源是线程安全的且都可从任何线程。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.ResourceDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains zero or more application-scope resources.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.ResourceDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象，其中包含零个或多个应用程序范围的资源。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Starts a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application.</source>
          <target state="translated">启动<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>应用程序。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Application.Run%2A&gt; is called to start a <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application.</source>
          <target state="translated">&lt;xref:System.Windows.Application.Run%2A&gt;调用以启动<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>应用程序。&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>If you define your &lt;xref:System.Windows.Application&gt; using markup, or markup and code-behind, &lt;xref:System.Windows.Application.Run%2A&gt; will be called implicitly.</source>
          <target state="translated">如果你定义你&lt;xref:System.Windows.Application&gt;使用标记，或标记和代码隐藏&lt;xref:System.Windows.Application.Run%2A&gt;将隐式调用。&lt;/xref:System.Windows.Application.Run%2A&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>However, if you define your &lt;xref:System.Windows.Application&gt; using code, you will need to explicitly call &lt;xref:System.Windows.Application.Run%2A&gt;.</source>
          <target state="translated">但是，如果你定义&lt;xref:System.Windows.Application&gt;使用的代码中，你将需要显式调用&lt;xref:System.Windows.Application.Run%2A&gt;.&lt;/xref:System.Windows.Application.Run%2A&gt;&lt;/xref:System.Windows.Application&gt;你</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Windows.Application.Run%2A&gt; is called, &lt;xref:System.Windows.Application&gt; attaches a new &lt;xref:System.Windows.Threading.Dispatcher&gt; instance to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread.</source>
          <target state="translated">当&lt;xref:System.Windows.Application.Run%2A&gt;调用时，&lt;xref:System.Windows.Application&gt;将附加新&lt;xref:System.Windows.Threading.Dispatcher&gt;到实例<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>线程。&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Next, the &lt;xref:System.Windows.Threading.Dispatcher&gt; object's &lt;xref:System.Windows.Threading.Dispatcher.Run%2A&gt; method is called, which starts a message pump to process windows messages.</source>
          <target state="translated">接下来，&lt;xref:System.Windows.Threading.Dispatcher&gt;对象的&lt;xref:System.Windows.Threading.Dispatcher.Run%2A&gt;调用方法，以启动处理 windows 消息的消息泵。&lt;/xref:System.Windows.Threading.Dispatcher.Run%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;xref:System.Windows.Threading.Dispatcher&gt; object calls the &lt;xref:System.Windows.Application&gt; object's the &lt;xref:System.Windows.Application.OnStartup%2A&gt; method to raise the &lt;xref:System.Windows.Application.Startup&gt; event.</source>
          <target state="translated">最后，&lt;xref:System.Windows.Threading.Dispatcher&gt;对象调用&lt;xref:System.Windows.Application&gt;对象的&lt;xref:System.Windows.Application.OnStartup%2A&gt;方法来引发&lt;xref:System.Windows.Application.Startup&gt;事件。&lt;/xref:System.Windows.Application.Startup&gt; &lt;/xref:System.Windows.Application.OnStartup%2A&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Consequently, the application execution model has been established by the time you handle &lt;xref:System.Windows.Application.Startup&gt;, at which point the application is considered to be running.</source>
          <target state="translated">因此，你处理时建立的应用程序执行模型&lt;xref:System.Windows.Application.Startup&gt;，此时视为应用程序是否正在运行。&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>An application stops running when &lt;xref:System.Windows.Application.Shutdown%2A&gt; is called; the value of the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; property determines when &lt;xref:System.Windows.Application.Shutdown%2A&gt; is called, and whether it happens automatically or you need to explicitly call it.</source>
          <target state="translated">应用程序停止运行时&lt;xref:System.Windows.Application.Shutdown%2A&gt;称为; 的值&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;属性确定何时&lt;xref:System.Windows.Application.Shutdown%2A&gt;被调用，并且是自动还是需要显式调用它。&lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Application.Run%2A&gt; can be called only from the thread that creates the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">&lt;xref:System.Windows.Application.Run%2A&gt;可以仅从创建的线程调用&lt;xref:System.Windows.Application&gt;对象。&lt;/xref:System.Windows.Application&gt;&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Also, &lt;xref:System.Windows.Application.Run%2A&gt; cannot be called from a <ph id="ph1">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">此外，&lt;xref:System.Windows.Application.Run%2A&gt;不能从调用<ph id="ph1">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph>。&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Int32&gt; application exit code that is returned to the operating system when the application shuts down.</source>
          <target state="translated">&lt;xref:System.Int32&gt;应用程序关闭时返回到操作系统的应用程序退出代码。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>By default, the exit code value is 0.</source>
          <target state="translated">默认情况下，退出代码值为 0。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Run is called from a browser-hosted application (for example, an <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>).</source>
          <target state="translated">从浏览器承载的应用程序调用运行 (例如， <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>)。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Starts a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application and opens the specified window.</source>
          <target state="translated">启动<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>应用程序中，打开指定的窗口。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>This overload extends the &lt;xref:System.Windows.Application.Run%2A&gt; method to open the specified window after an application starts running.</source>
          <target state="translated">此重载扩展&lt;xref:System.Windows.Application.Run%2A&gt;方法以在应用程序开始运行后打开指定的窗口。&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>If you define a code &lt;xref:System.Windows.Application&gt; that opens a window when it starts running, you explicitly call Run.</source>
          <target state="translated">如果您定义代码&lt;xref:System.Windows.Application&gt;，这将打开一个窗口，在它开始运行时，显式调用 Run。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>If you create your &lt;xref:System.Windows.Application&gt; using markup, or markup and code-behind, you can automatically open a window during using either of the following techniques:      -   Declaratively, by setting &lt;xref:System.Windows.Application.StartupUri%2A&gt;.</source>
          <target state="translated">如果你创建你&lt;xref:System.Windows.Application&gt;使用标记，或标记和代码隐藏，您可以自动打开一个窗口在过程中使用以下方法之一:-以声明方式，通过设置&lt;xref:System.Windows.Application.StartupUri%2A&gt;.&lt;/xref:System.Windows.Application.StartupUri%2A&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>-   Programmatically, by handling &lt;xref:System.Windows.Application.Startup&gt;.</source>
          <target state="translated">-以编程方式处理&lt;xref:System.Windows.Application.Startup&gt;.&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that opens automatically when an application starts.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，这将打开自动应用程序启动时。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Int32&gt; application exit code that is returned to the operating system when the application shuts down.</source>
          <target state="translated">&lt;xref:System.Int32&gt;应用程序关闭时返回到操作系统的应用程序退出代码。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>By default, the exit code value is 0.</source>
          <target state="translated">默认情况下，退出代码值为 0。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Application.Run*&gt; is called from a browser-hosted application (for example, an <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>).</source>
          <target state="translated">&lt;xref:System.Windows.Application.Run*&gt;从浏览器承载的应用程序调用 (例如， <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>)。&lt;/xref:System.Windows.Application.Run*&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Occurs when the user ends the <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> session by logging off or shutting down the operating system.</source>
          <target state="translated">用户结束时发生<ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph>通过注销或关闭操作系统的会话。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>By default, an application shuts down when the <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> session ends, which occurs when a user logs off or shuts down.</source>
          <target state="translated">默认情况下，应用程序关闭时<ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph>会话结束时，发生在用户注销或关机。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>When this happens, <ph id="ph1">[!INCLUDE[TLA2#tla_mswin](~/add/includes/tla2sharptla-mswin-md.md)]</ph> asks each open application to shut down.</source>
          <target state="translated">在此情况下，<ph id="ph1">[!INCLUDE[TLA2#tla_mswin](~/add/includes/tla2sharptla-mswin-md.md)]</ph>要求每个打开的应用程序关闭。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>However, it is possible that an application may not be ready to shut down when this occurs.</source>
          <target state="translated">但是，它是应用程序可能不会准备好发生此情况时关闭。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>For example, an application may have data that is in an inconsistent state, or in the middle of a long-running operation.</source>
          <target state="translated">例如，应用程序可能拥有是处于不一致状态，或中间长时间运行操作的数据。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>In these situations, it may be desirable to prevent the session from ending, and may be more desirable to allow users the option to decide whether or not to let the session to end.</source>
          <target state="translated">在这些情况下，它可能需要阻止会话结束，并可能更需要允许用户决定让结束会话的选项。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>You can detect when a session ends by handling the SessionEnding event.</source>
          <target state="translated">你可以检测通过处理 SessionEnding 事件会话结束时。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>If an application needs to prevent the session from ending, the &lt;xref:System.Windows.SessionEndingCancelEventArgs&gt; argument that is passed to the event handler exposes the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; that you set to <ph id="ph1">`true`</ph> (the default value is <ph id="ph2">`false`</ph>).</source>
          <target state="translated">如果应用程序需要阻止会话结束，&lt;xref:System.Windows.SessionEndingCancelEventArgs&gt;传递给事件处理程序自变量公开&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;，设置为<ph id="ph1">`true`</ph>(默认值是<ph id="ph2">`false`</ph>)。&lt;/xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; &lt;/xref:System.Windows.SessionEndingCancelEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>If SessionEnding is unhandled, or is handled without being cancelled, &lt;xref:System.Windows.Application.Shutdown%2A&gt; is called and the &lt;xref:System.Windows.Application.Exit&gt; event is raised.</source>
          <target state="translated">如果 SessionEnding 未经处理，或不被取消的情况下处理&lt;xref:System.Windows.Application.Shutdown%2A&gt;称为和&lt;xref:System.Windows.Application.Exit&gt;引发事件。&lt;/xref:System.Windows.Application.Exit&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>To obtain more information about why the session is ending, an application can inspect &lt;xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A&gt;, which is one of the &lt;xref:System.Windows.ReasonSessionEnding&gt; values (&lt;xref:System.Windows.ReasonSessionEnding&gt; and &lt;xref:System.Windows.ReasonSessionEnding&gt;).</source>
          <target state="translated">若要获取有关为什么结束会话的详细信息，应用程序可以检查&lt;xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A&gt;，即之一&lt;xref:System.Windows.ReasonSessionEnding&gt;值 (&lt;xref:System.Windows.ReasonSessionEnding&gt;和&lt;xref:System.Windows.ReasonSessionEnding&gt;)。&lt;/xref:System.Windows.ReasonSessionEnding&gt; &lt;/xref:System.Windows.ReasonSessionEnding&gt; &lt;/xref:System.Windows.ReasonSessionEnding&gt; &lt;/xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>SessionEnding is not raised by console applications.</source>
          <target state="translated">SessionEnding 则不会引发由控制台应用程序。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>SessionEnding is raised only on the thread that creates the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">仅在创建的线程上引发 SessionEnding&lt;xref:System.Windows.Application&gt;对象。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>SessionEnding is not raised for <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">不会引发 SessionEnding <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Creates a cookie for the location specified by a &lt;xref:System.Uri&gt;.</source>
          <target state="translated">创建位置指定的一种&lt;xref:System.Uri&gt;。&lt;/xref:System.Uri&gt; cookie</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A cookie is an arbitrary piece of data that can be stored by an application on the client machine during application sessions (session cookies) or across application sessions (persistent cookies).</source>
          <target state="translated">Cookie 是任意的应用程序客户端计算机上应用程序的会话 (会话 cookie) 期间或跨应用程序会话 (永久 cookie) 可以存储的数据。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>You can create both types of cookies by calling SetCookie.</source>
          <target state="translated">可以通过调用 SetCookie 创建两种类型的 cookie。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Cookie data typically takes the form of a name/value pair in the following format:       <ph id="ph1">`Name=Value`</ph>       You pass a string of this format to SetCookie, along with the &lt;xref:System.Uri&gt; of the location for which the cookie should be set (typically, the application domain).</source>
          <target state="translated">Cookie 数据通常采用以下格式的名称/值对的形式︰<ph id="ph1">`Name=Value`</ph>连同的这种格式的字符串传递给 SetCookie，&lt;xref:System.Uri&gt;应为其设置 cookie 的位置 （通常情况下，应用程序域）。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Whether a cookie is a session cookie or a persistent cookie depends on whether the cookie string that you pass to SetCookie includes an expiry date.</source>
          <target state="translated">Cookie 是会话 cookie 或持久性 cookie 取决于传递给 SetCookie cookie 字符串是否包含一个到期日期。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The string for a session cookie does not include an expiry date.</source>
          <target state="translated">会话 cookie 的字符串不包括一个到期日期。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The string for a persistent cookie does, and must be in the following format:       <ph id="ph1">`NAME=VALUE; expires=DAY, DD-MMM-YYYY HH:MM:SS GMT`</ph>       Persistent cookies are stored in the current <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> installation's Temporary Internet Files folder until they expire, in which case they are deleted.</source>
          <target state="translated">持久性 cookie 的字符串存在，并且必须采用以下格式︰<ph id="ph1">`NAME=VALUE; expires=DAY, DD-MMM-YYYY HH:MM:SS GMT`</ph>永久 cookie 存储在当前<ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph>到期，在这种情况下删除它们之前安装的 Internet 临时文件文件夹。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>You can delete a persistent cookie from your application by setting its expiry date to a date/time value that is in the past.</source>
          <target state="translated">通过将其到期日期设置为在过去的日期/时间值，可以从你的应用程序删除持久性 cookie。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>For an overview of cookies in <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>, see <bpt id="p1">[</bpt>Navigation Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关概述中的 cookie <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>，请参阅<bpt id="p1">[</bpt>导航概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that specifies the location for which the cookie should be created.</source>
          <target state="translated">&lt;xref:System.Uri&gt;，它指定应为其创建 cookie 的位置。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.String&gt; that contains the cookie data.</source>
          <target state="translated">&lt;xref:System.String&gt;包含 cookie 数据。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> error is raised by the <bpt id="p1">&lt;xref uid="langword_csharp_InternetSetCookie" name="InternetSetCookie" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function (called by SetCookie) if a problem occurs when attempting to create the specified cookie.</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>错误由<bpt id="p1">&lt;xref uid="langword_csharp_InternetSetCookie" name="InternetSetCookie" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函数 （由 SetCookie） 如果尝试创建指定的 cookie 时出现问题。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Shuts down an application.</source>
          <target state="translated">关闭应用程序。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>When Shutdown is called, an application stops running.</source>
          <target state="translated">当调用关闭时，应用程序停止运行。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>You can handle the &lt;xref:System.Windows.Application.Exit&gt; event to detect when an application is about to stop running, to perform any appropriate processing.</source>
          <target state="translated">你可以处理&lt;xref:System.Windows.Application.Exit&gt;事件来检测应用程序时将要停止运行，以执行任何适当的处理。&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Shutdown is implicitly called by <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> in the following situations:      -   When &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; is set to &lt;xref:System.Windows.ShutdownMode&gt;.</source>
          <target state="translated">隐式调用关闭<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>在以下情况:-当&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;设置为&lt;xref:System.Windows.ShutdownMode&gt;。&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>-   When the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; is set to &lt;xref:System.Windows.ShutdownMode&gt;.</source>
          <target state="translated">-当&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;设置为&lt;xref:System.Windows.ShutdownMode&gt;。&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>-   When a user ends a session and the &lt;xref:System.Windows.Application.SessionEnding&gt; event is either unhandled, or handled without cancellation.</source>
          <target state="translated">-当用户结束会话和&lt;xref:System.Windows.Application.SessionEnding&gt;未处理时，或处理而无需取消事件。&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Calling Shutdown explicitly causes an application to shut down, regardless of the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; setting.</source>
          <target state="translated">显式调用关闭会导致应用程序才可关闭，而不考虑&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;设置。&lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>However, if &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; is set to &lt;xref:System.Windows.ShutdownMode&gt;, you must call Shutdown to shut down an application.</source>
          <target state="translated">但是，如果&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;设置为&lt;xref:System.Windows.ShutdownMode&gt;，必须调用关闭以关闭应用程序。&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When Shutdown is called, the application will shut down irrespective of whether the &lt;xref:System.Windows.Window.Closing&gt; event of any open windows is canceled.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 被调用时关闭时，应用程序将关闭而不考虑是否&lt;xref:System.Windows.Window.Closing&gt;取消事件的任何打开的窗口。&lt;/xref:System.Windows.Window.Closing&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>This method can be called only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">此方法可以仅从创建的线程调用&lt;xref:System.Windows.Application&gt;对象。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Shuts down an application that returns the specified exit code to the operating system.</source>
          <target state="translated">关闭的应用程序将指定的退出代码返回到操作系统。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>You can handle the &lt;xref:System.Windows.Application.Exit&gt; event to set an exit code.</source>
          <target state="translated">你可以处理&lt;xref:System.Windows.Application.Exit&gt;事件设置退出代码。&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>However, if you explicitly call &lt;xref:System.Windows.Application.Shutdown%2A&gt;, and you handle &lt;xref:System.Windows.Application.Exit&gt; only to set an exit code, you can call Shutdown instead.</source>
          <target state="translated">但是，如果你明确地调用&lt;xref:System.Windows.Application.Shutdown%2A&gt;，并且你处理&lt;xref:System.Windows.Application.Exit&gt;仅若要设置退出代码，可以改为调用关闭。&lt;/xref:System.Windows.Application.Exit&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>This method can be called only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">此方法可以仅从创建的线程调用&lt;xref:System.Windows.Application&gt;对象。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>An integer exit code for an application.</source>
          <target state="translated">整数退出应用程序代码。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The default exit code is 0.</source>
          <target state="translated">默认的退出代码为 0。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Gets or sets the condition that causes the &lt;xref:System.Windows.Application.Shutdown*&gt; method to be called.</source>
          <target state="translated">获取或设置导致的条件&lt;xref:System.Windows.Application.Shutdown*&gt;要调用方法。&lt;/xref:System.Windows.Application.Shutdown*&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Applications stop running only when the &lt;xref:System.Windows.Application.Shutdown%2A&gt; method of the Application is called.</source>
          <target state="translated">应用程序停止运行时，才&lt;xref:System.Windows.Application.Shutdown%2A&gt;调用应用程序的方法。&lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Shut down can occur implicitly or explicitly, as specified by the value of the ShutdownMode property.</source>
          <target state="translated">关闭可以进行隐式或显式指定的 ShutdownMode 属性的值。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>If you set ShutdownMode to &lt;xref:System.Windows.ShutdownMode&gt;, <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> implicitly calls &lt;xref:System.Windows.Application.Shutdown%2A&gt; when the last window in an application closes, even if any currently instantiated windows are set as the main window (see &lt;xref:System.Windows.Application.MainWindow%2A&gt;).</source>
          <target state="translated">如果 ShutdownMode 设置为&lt;xref:System.Windows.ShutdownMode&gt;，<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>隐式调用&lt;xref:System.Windows.Application.Shutdown%2A&gt;应用程序中的最后一个窗口关闭时，即使任何当前已实例化的 windows 设置作为主窗口 (请参阅&lt;xref:System.Windows.Application.MainWindow%2A&gt;)。&lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.ShutdownMode&gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>A ShutdownMode of &lt;xref:System.Windows.ShutdownMode&gt; causes <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>to implicitly call &lt;xref:System.Windows.Application.Shutdown%2A&gt; when the &lt;xref:System.Windows.Application.MainWindow%2A&gt; closes, even if other windows are currently open.</source>
          <target state="translated">ShutdownMode&lt;xref:System.Windows.ShutdownMode&gt;导致<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>隐式调用&lt;xref:System.Windows.Application.Shutdown%2A&gt;时&lt;xref:System.Windows.Application.MainWindow%2A&gt;关闭，即使其他窗口处于当前打开。&lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.ShutdownMode&gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The lifetime of some applications may not be dependent on when the main window or last window is closed, or may not be dependent on windows at all.</source>
          <target state="translated">某些应用程序的生存期可能不是依赖于主窗口或最后一个窗口已关闭，或可能根本不依赖于 windows 的时。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>For these scenarios you need to set the ShutdownMode property to &lt;xref:System.Windows.ShutdownMode&gt;, which requires an explicit &lt;xref:System.Windows.Application.Shutdown%2A&gt; method call to stop the application.</source>
          <target state="translated">你需要为这些方案将 ShutdownMode 属性设置为&lt;xref:System.Windows.ShutdownMode&gt;，这需要显式&lt;xref:System.Windows.Application.Shutdown%2A&gt;方法调用停止应用程序。&lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.ShutdownMode&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Otherwise, the application continues running in the background.</source>
          <target state="translated">否则，应用程序将继续在后台运行。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>ShutdownMode can be configured declaratively from <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> or programmatically from code.</source>
          <target state="translated">可以从以声明方式配置 ShutdownMode<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>或以编程方式从代码。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>This property is available only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">此属性则仅可从创建的线程&lt;xref:System.Windows.Application&gt;对象。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>枚举值。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Occurs when the &lt;xref:System.Windows.Application.Run*&gt; method of the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is called.</source>
          <target state="translated">发生时&lt;xref:System.Windows.Application.Run*&gt;方法<bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象称为。&lt;/xref:System.Windows.Application.Run*&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>A typical <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application may perform a variety of initialization tasks when it starts up, including:      -   Processing command-line parameters.</source>
          <target state="translated">典型<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>应用程序可能会执行的各种初始化任务，它在启动时，包括:-处理命令行参数。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>-   Opening the main window.</source>
          <target state="translated">--打开主窗口。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>-   Initializing application-scope resources.</source>
          <target state="translated">初始化应用程序范围的资源。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>-   Initializing application-scope properties.</source>
          <target state="translated">初始化应用程序作用域属性。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>You can declaratively specify the main window and application-scope resources using <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> (&lt;xref:System.Windows.Application.StartupUri%2A&gt; and &lt;xref:System.Windows.Application.Resources%2A&gt;, respectively).</source>
          <target state="translated">你可以以声明方式指定的主窗口和使用的应用程序作用域资源<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>(&lt;xref:System.Windows.Application.StartupUri%2A&gt;和&lt;xref:System.Windows.Application.Resources%2A&gt;分别)。&lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application.StartupUri%2A&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Sometimes, however, the resources or main window of your application can only be determined programmatically at run time.</source>
          <target state="translated">有时，但是，资源或应用程序的主窗口可以仅将以编程方式在运行时确定。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Additionally, application-scope properties and command-line parameters can only be used programmatically.</source>
          <target state="translated">此外，应用程序作用域属性和命令行参数只能以编程方式。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Programmatic initialization can be performed by handling the Startup event, including the following:      -   Acquire and process command-line parameters, which are available from the &lt;xref:System.Windows.StartupEventArgs.Args%2A&gt; property of the &lt;xref:System.Windows.StartupEventArgs&gt; class that is passed to the Startup event handler.</source>
          <target state="translated">可以通过处理启动事件，其中包括执行以编程方式初始化:-获取并处理命令行参数，它们是可从&lt;xref:System.Windows.StartupEventArgs.Args%2A&gt;属性&lt;xref:System.Windows.StartupEventArgs&gt;传递给启动事件处理程序的类。&lt;/xref:System.Windows.StartupEventArgs&gt; &lt;/xref:System.Windows.StartupEventArgs.Args%2A&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>-   Initialize application-scope resources by using the &lt;xref:System.Windows.Application.Resources%2A&gt; property.</source>
          <target state="translated">-通过使用初始化应用程序范围的资源&lt;xref:System.Windows.Application.Resources%2A&gt;属性。&lt;/xref:System.Windows.Application.Resources%2A&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>-   Initialize application-scope properties by using the &lt;xref:System.Windows.Application.Properties%2A&gt; property.</source>
          <target state="translated">-通过使用初始化应用程序作用域属性&lt;xref:System.Windows.Application.Properties%2A&gt;属性。&lt;/xref:System.Windows.Application.Properties%2A&gt;</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>-   Instantiate and show one (or more) windows.</source>
          <target state="translated">的实例化并显示一个 （或多个） 窗口。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Command-line parameters can also be acquired by calling the static &lt;xref:System.Environment.GetCommandLineArgs%2A&gt; method of the &lt;xref:System.Environment&gt; object.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 命令行参数还可获取通过调用静态&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;方法&lt;xref:System.Environment&gt;对象。&lt;/xref:System.Environment&gt; &lt;/xref:System.Environment.GetCommandLineArgs%2A&gt;</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>However, &lt;xref:System.Environment.GetCommandLineArgs%2A&gt; requires full trust to execute.</source>
          <target state="translated">但是，&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;需要完全信任才能执行。&lt;/xref:System.Environment.GetCommandLineArgs%2A&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>If you set &lt;xref:System.Windows.Application.StartupUri%2A&gt; using <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>, the main window that is created is not available from either the &lt;xref:System.Windows.Application.MainWindow%2A&gt; property or the &lt;xref:System.Windows.Application.Windows%2A&gt; property of the &lt;xref:System.Windows.Application&gt; object until after the Startup event is processed.</source>
          <target state="translated">如果你设置&lt;xref:System.Windows.Application.StartupUri%2A&gt;使用<ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>，创建主窗口不可用从&lt;xref:System.Windows.Application.MainWindow%2A&gt;属性或&lt;xref:System.Windows.Application.Windows%2A&gt;属性&lt;xref:System.Windows.Application&gt;处理启动事件后，直到对象。&lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.StartupUri%2A&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>If you need access to the main window during startup, you need to manually create a new window object from your Startup event handler.</source>
          <target state="translated">如果在启动期间需要向主窗口的访问，你需要手动启动事件处理程序创建新的窗口对象。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your application uses &lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt; to specify a credential policy, you need to set &lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt; after Startup is raised; otherwise, <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> sets it to a default internal policy directly after the Startup event has been raised.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果你的应用程序使用&lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;若要指定凭据策略，你需要设置&lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;启动引发; 否则为后<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>将其设置为默认内部策略直接后引发启动事件。&lt;/xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt; &lt;/xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The command-line arguments that are passed to the Startup event handler are not the same as the <ph id="ph1">[!INCLUDE[TLA#tla_url](~/add/includes/tlasharptla-url-md.md)]</ph> query string parameters that are passed to an <ph id="ph2">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>.</source>
          <target state="translated">传递给启动事件处理程序的命令行自变量不是相同<ph id="ph1">[!INCLUDE[TLA#tla_url](~/add/includes/tlasharptla-url-md.md)]</ph>查询字符串参数传递给<ph id="ph2">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Gets or sets a <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> that is automatically shown when an application starts.</source>
          <target state="translated">获取或设置<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>应用程序启动时自动显示。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>You can use StartupUri to automatically load a <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resource when an application starts.</source>
          <target state="translated">你可以使用 StartupUri 自动加载<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>资源应用程序启动时。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The following table shows the types of <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resources that can be loaded, the type of window they are opened into, and the type of application that these resources can be set as the StartupUri.</source>
          <target state="translated">下表显示类型的<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>可以加载的资源，到打开的窗口的类型，这些资源可以设置为 StartupUri 的应用程序的类型。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>|Type|Window|Application type|   |----------|------------|----------------------|   |&lt;xref:System.Windows.Window&gt;|&lt;xref:System.Windows.Window&gt;|Standalone only|   |&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone only|   |&lt;xref:System.Windows.Controls.Page&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|   |&lt;xref:System.Windows.Controls.UserControl&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|   |&lt;xref:System.Windows.Documents.FlowDocument&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|   |&lt;xref:System.Windows.Navigation.PageFunction%601&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|       Typically, you set the StartupUri property declaratively in <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">|类型 |窗口 |应用程序类型 |  |----------|------------|----------------------|  |&lt;xref:System.Windows.Window&gt;|&lt;xref:System.Windows.Window&gt;|仅独立应用程序 |  |&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|仅独立应用程序 |  |&lt;xref:System.Windows.Controls.Page&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|独立/浏览器承载 |  |&lt;xref:System.Windows.Controls.UserControl&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|独立/浏览器承载 |  |&lt;xref:System.Windows.Documents.FlowDocument&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|独立/浏览器承载 |  |&lt;xref:System.Windows.Navigation.PageFunction%601&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|独立/浏览器承载 |      通常情况下，设置 StartupUri 属性以声明方式在<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>。&lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Navigation.PageFunction%601&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Documents.FlowDocument&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Controls.UserControl&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Controls.Page&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>However, you can set StartupUri programmatically, such as from a &lt;xref:System.Windows.Application.Startup&gt; event handler, which is useful if for applications that can only load the necessary <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resources at run time.</source>
          <target state="translated">但是，可以以编程方式设置 StartupUri 如从&lt;xref:System.Windows.Application.Startup&gt;事件处理程序，如果对于只能加载所需的应用程序有用<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>在运行时的资源。&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>For example, an application might wait until run time to load its resources if the name of the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resource is stored in a configuration file.</source>
          <target state="translated">例如，应用程序可能会等待，直到运行时才加载其资源，如果名称<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>资源存储在配置文件中。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Whether you set StartupUri declaratively or programmatically, the corresponding <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resource is not loaded until after the &lt;xref:System.Windows.Application.Startup&gt; event is handled.</source>
          <target state="translated">是否以声明方式设置 StartupUri 或以编程方式，相应<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>资源不会加载直到后&lt;xref:System.Windows.Application.Startup&gt;处理事件。&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Consequently, you won't have access to the resulting window from either the &lt;xref:System.Windows.Application.Windows%2A&gt; property or the &lt;xref:System.Windows.Application.MainWindow%2A&gt; property when handling &lt;xref:System.Windows.Application.Startup&gt;.</source>
          <target state="translated">因此，你将无权访问生成的窗口从&lt;xref:System.Windows.Application.Windows%2A&gt;属性或&lt;xref:System.Windows.Application.MainWindow%2A&gt;属性时处理&lt;xref:System.Windows.Application.Startup&gt;.&lt;/xref:System.Windows.Application.Startup&gt; &lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.Windows%2A&gt;</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; that refers to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> that automatically opens when an application starts.</source>
          <target state="translated">A &lt;xref:System.Uri&gt;，是指<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>，这会自动将打开应用程序启动时。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>StartupUri is set with a value of null.</source>
          <target state="translated">StartupUri 设置的值为 null。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Queries for whether a specified ambient property is available in the current scope.</source>
          <target state="translated">为当前作用域中指定的环境属性是否可用的查询。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Windows.Application&gt; instance is cast to an &lt;xref:System.Windows.Markup.IQueryAmbient&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Windows.Application&gt;实例被强制转换为&lt;xref:System.Windows.Markup.IQueryAmbient&gt;接口。&lt;/xref:System.Windows.Markup.IQueryAmbient&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The name of the requested ambient property.</source>
          <target state="translated">请求的环境属性的名称。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the requested ambient property is available; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果可用; 请求的环境属性否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Searches for the specified resource.</source>
          <target state="translated">搜索指定的资源。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>TryFindResource will first look in application-scope resources for the specified resource.</source>
          <target state="translated">TryFindResource 将首先在应用程序范围内指定资源的资源中查找。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Application-scope resources are managed by &lt;xref:System.Windows.Application&gt;, and are exposed from the &lt;xref:System.Windows.Application.Resources%2A&gt; property.</source>
          <target state="translated">应用程序范围的资源由&lt;xref:System.Windows.Application&gt;，和从公开&lt;xref:System.Windows.Application.Resources%2A&gt;属性。&lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>If the specified resource is not found in the set of application-scope resources, TryFindResource then next searches the system resources.</source>
          <target state="translated">如果应用程序范围的资源组中未找到指定的资源，TryFindResource 下一步搜索系统资源。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</source>
          <target state="translated">系统资源是由用户定义的命令行程序资源，包括颜色、 字体和外壳程序配置。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>These are exposed from the &lt;xref:System.Windows.SystemColors&gt;, &lt;xref:System.Windows.SystemFonts&gt;, and &lt;xref:System.Windows.SystemParameters&gt; types, respectively, as static properties.</source>
          <target state="translated">这些来自&lt;xref:System.Windows.SystemColors&gt;， &lt;xref:System.Windows.SystemFonts&gt;，和&lt;xref:System.Windows.SystemParameters&gt;分别为静态属性类型。&lt;/xref:System.Windows.SystemParameters&gt; &lt;/xref:System.Windows.SystemFonts&gt; &lt;/xref:System.Windows.SystemColors&gt;</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>To use TryFindResource to acquire them, these types also expose resource key properties that are designed to be passed to TryFindResource; for example, &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.</source>
          <target state="translated">若要使用 TryFindResource 获取它们，这些类型还公开旨在传递给 TryFindResource; 的资源键属性例如， &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.&lt;/xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Because TryFindResource returns an object, you must cast the returned value to the appropriate type if the resource is found.</source>
          <target state="translated">因为 TryFindResource 返回一个对象，您必须强制转换为适当的类型的返回的值，如果找到资源。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>This method is thread safe and can be called from any thread.</source>
          <target state="translated">此方法是线程安全的可以从任何线程调用。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The name of the resource to find.</source>
          <target state="translated">要查找的资源的名称。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The requested resource object.</source>
          <target state="translated">所请求的资源对象。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>If the requested resource is not found, a null reference is returned.</source>
          <target state="translated">如果未找到请求的资源，则返回空引用。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Gets the instantiated windows in an application.</source>
          <target state="translated">获取应用程序中实例化的窗口。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Window&gt; reference is automatically added to Windows as soon as a window is instantiated on the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread; windows that are created by worker threads are not added.</source>
          <target state="translated">A&lt;xref:System.Windows.Window&gt;引用会自动添加到 Windows 上实例化一个窗口时，就会立即<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>线程; 创建辅助线程的线程不会添加的 windows。&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Window&gt; reference is automatically removed after its &lt;xref:System.Windows.Window.Closing&gt; event has been handled and before its &lt;xref:System.Windows.Window.Closed&gt; event is raised.</source>
          <target state="translated">A&lt;xref:System.Windows.Window&gt;后自动删除引用其&lt;xref:System.Windows.Window.Closing&gt;处理事件和之前其&lt;xref:System.Windows.Window.Closed&gt;引发事件。&lt;/xref:System.Windows.Window.Closed&gt; &lt;/xref:System.Windows.Window.Closing&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>By default, the first item added to the Windows property becomes the &lt;xref:System.Windows.Application.MainWindow%2A&gt;.</source>
          <target state="translated">默认情况下，添加到 Windows 属性的第一项将成为&lt;xref:System.Windows.Application.MainWindow%2A&gt;.&lt;/xref:System.Windows.Application.MainWindow%2A&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>This property is available only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">此属性则仅可从创建的线程&lt;xref:System.Windows.Application&gt;对象。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.WindowCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains references to all window objects in the current <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.WindowCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含在当前的所有窗口对象的引用<bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>