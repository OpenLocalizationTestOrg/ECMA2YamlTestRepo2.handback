<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c77c7c3e5516eaa1e8bf6511db9fab9f7b68189c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Specialized.StringEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2288bf8d7a85f69fff20748fd34c3586c33d1320</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">438fa99f93782ab283df53c0001e4819aa7c9eb3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports a simple iteration over a <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">支持简单遍历<bpt id="p1">&lt;xref href="System.Collections.Specialized.StringCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建议，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;此外会回此位置的枚举数。&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>At this position, calling &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">在此位置，调用&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;引发异常。&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，你必须调用&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;的第一个元素的集合，然后再读取&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;的值枚举器向前移动&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;返回相同的对象之前&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;设置&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;到下一个元素。&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;还返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">如果最后一次调用到&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>，则调用&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;引发异常。&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要设置&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;可以再次，集合的第一个元素调用&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;后, 跟&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果对集合进行更改，如添加、 修改或删除元素，枚举数将失效下, 一个调用&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;引发&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;到</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the collection is modified between &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;, &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之间修改集合&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;和&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;，&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;返回到，设置的元素，即使枚举数已经无效。&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合; 独占访问权因此，枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the current element in the collection.</source>
          <target state="translated">获取集合中的当前元素。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>After an enumerator is created or after a &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before reading the value of Current; otherwise, Current is undefined.</source>
          <target state="translated">创建一个枚举器或&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;调用时，&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;必须调用来枚举器向前移动到第一个元素的集合，然后再读取值的当前; 否则，当前是不确定。&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Current also throws an exception if the last call to &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">当前还会引发异常如果最后一次调用到&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>，指示集合的末尾。&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Current does not move the position of the enumerator, and consecutive calls to Current return the same object until either &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">当前不会移动该枚举数的位置和当前的连续调用返回的对象相同之前&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果对集合进行更改，如添加、 修改或删除元素，枚举数将失效下, 一个调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;引发&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;到</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之间修改集合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;和&lt;xref:System.Collections.IEnumerator.Current%2A&gt;，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回到，设置的元素，即使枚举数已经无效。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The current element in the collection.</source>
          <target state="translated">集合中的当前元素。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">枚举数定位在集合或最后一个元素之后的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">将枚举数推进到集合的下一个元素。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>After an enumerator is created or after a &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called, an enumerator is positioned before the first element of the collection, and the first call to MoveNext moves the enumerator over the first element of the collection.</source>
          <target state="translated">创建一个枚举器或&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;是调用，枚举数定位在集合中，第一个元素之前和 MoveNext 首次调用将枚举器移到集合的第一个元素上。&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果 MoveNext 将传递到集合的末尾，枚举数定位在集合中的最后一个元素之后和 MoveNext 返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to MoveNext also return <ph id="ph1">`false`</ph> until &lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">对 MoveNext 的后续调用时该枚举数将在此位置，还返回<ph id="ph1">`false`</ph>直到&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果对集合进行更改，如添加、 修改或删除元素，枚举数将失效下, 一个调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;引发&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;到</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之间修改集合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;和&lt;xref:System.Collections.IEnumerator.Current%2A&gt;，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回到，设置的元素，即使枚举数已经无效。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果枚举数已成功地推进到下一个元素;，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果枚举数传递到集合的末尾。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">创建枚举器之后，集合已修改。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">将枚举数设置为其初始位置，集合中第一个元素之前。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Reset moves the enumerator to the beginning of the collection, before the first element.</source>
          <target state="translated">重置将枚举器移动到集合，在第一个元素的开头。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>After Reset, &lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.</source>
          <target state="translated">重置之后，&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;必须调用的第一个元素的集合，然后再读取&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;的值枚举器向前&lt;/xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">创建枚举器之后，集合已修改。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>