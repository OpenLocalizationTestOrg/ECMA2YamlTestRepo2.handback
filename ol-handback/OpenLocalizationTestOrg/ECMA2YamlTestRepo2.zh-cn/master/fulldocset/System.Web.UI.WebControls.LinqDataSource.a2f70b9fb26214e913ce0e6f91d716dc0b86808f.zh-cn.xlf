<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3431287cbc41e8db4510b8861063728bc99f27d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.LinqDataSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4217e94433060ab56d3130ee2cb3299be73fcc2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ababdb133a5452ac0901f9e614d90c7f4afa207</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.</source>
          <target state="translated">允许在通过标记文本来检索和修改数据对象中的数据的 ASP.NET 网页中使用的语言集成查询 (LINQ)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this topic:      -   <bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept><ph id="ph1">      -   </ph><bpt id="p2">[</bpt>Order of Operations<ept id="p2">](#order_of_operations)</ept><ph id="ph2">      -   </ph><bpt id="p3">[</bpt>Ordering Data<ept id="p3">](#ordering_data)</ept><ph id="ph3">      -   </ph><bpt id="p4">[</bpt>Grouping Data<ept id="p4">](#grouping_data)</ept><ph id="ph4">      -   </ph><bpt id="p5">[</bpt>Data Modifications<ept id="p5">](#data_modifications)</ept><ph id="ph5">      -   </ph><bpt id="p6">[</bpt>Evaluating Values at Run Time<ept id="p6">](#evaluating_value_at_run_time)</ept><ph id="ph6">      -   </ph><bpt id="p7">[</bpt>Working with Stored Procedures<ept id="p7">](#working_with_stored_procedures)</ept><ph id="ph7">      -   </ph><bpt id="p8">[</bpt>Declarative Syntax<ept id="p8">](#declarative_syntax)</ept>      <bpt id="p9">&lt;a name="introduction"&gt;</bpt><ept id="p9">&lt;/a&gt;</ept>    ## Introduction    Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language.</source>
          <target state="translated">本主题中:-<bpt id="p1">[</bpt>简介<ept id="p1">](#introduction)</ept><ph id="ph1">      -   </ph><bpt id="p2">[</bpt>操作顺序<ept id="p2">](#order_of_operations)</ept><ph id="ph2">      -   </ph><bpt id="p3">[</bpt>排序数据<ept id="p3">](#ordering_data)</ept><ph id="ph3">      -   </ph><bpt id="p4">[</bpt>对数据进行分组<ept id="p4">](#grouping_data)</ept><ph id="ph4">      -   </ph><bpt id="p5">[</bpt>数据修改<ept id="p5">](#data_modifications)</ept><ph id="ph5">      -   </ph><bpt id="p6">[</bpt>在运行时计算值<ept id="p6">](#evaluating_value_at_run_time)</ept><ph id="ph6">      -   </ph><bpt id="p7">[</bpt>使用存储过程<ept id="p7">](#working_with_stored_procedures)</ept><ph id="ph7">      -   </ph><bpt id="p8">[</bpt>声明性语法<ept id="p8">](#declarative_syntax)</ept><bpt id="p9">&lt;a name="introduction"&gt;</bpt> <ept id="p9">&lt;/a&gt;</ept> # # Introduction Language-Integrated 查询 (LINQ) 是一种查询语法定义一组查询运算符，以便在任何声明性方式表示遍历、 筛选和投影操作。基于网络的编程语言。      </target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The data object can be an in-memory data collection or an object that represents data from a database.</source>
          <target state="translated">数据对象可以是内存中数据收集或从数据库中表示数据的对象。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can retrieve or modify the data without having to write SQL commands for each operation.</source>
          <target state="translated">你可以检索或修改数据而无需编写 SQL 命令为每个操作。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The LinqDataSource control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text.</source>
          <target state="translated">LinqDataSource 控件使您能够通过标记文本中设置属性 ASP.NET 网页中使用 LINQ。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The LinqDataSource control uses LINQ to SQL to automatically generate the data commands.</source>
          <target state="translated">LinqDataSource 控件使用 LINQ to SQL 会自动生成数据命令。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关 LINQ to SQL 的详细信息，请参阅<bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When you are retrieving data from an in-memory data collection, you set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property to the class that contains the data collection.</source>
          <target state="translated">当你从内存中的数据集合在检索数据时，您设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;属性设置为包含数据收集的类。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to the property or field that returns the data collection.</source>
          <target state="translated">你设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;属性的属性或返回数据集合的字段。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, you might have a class named <ph id="ph1">`Person`</ph> that contains a property named <ph id="ph2">`FavoriteCities`</ph> that returns an array of string values.</source>
          <target state="translated">例如，可能有一个名为类<ph id="ph1">`Person`</ph>，其中包含一个名为属性<ph id="ph2">`FavoriteCities`</ph>返回的字符串值的数组。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In that case, you set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property to <ph id="ph1">`Person`</ph> and set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to <ph id="ph2">`FavoriteCities`</ph>.</source>
          <target state="translated">在这种情况下，设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;属性<ph id="ph1">`Person`</ph>并设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;属性<ph id="ph2">`FavoriteCities`</ph>。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you are querying a database, you must first create entity classes that represent the database and its tables.</source>
          <target state="translated">在查询数据库时，你必须首先创建表示数据库和其表的实体类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">[!INCLUDE[vs_ordesigner_long](~/add/includes/vs-ordesigner-long-md.md)]</ph> or the SqlMetal.exe utility to generate these classes.</source>
          <target state="translated">你可以使用<ph id="ph1">[!INCLUDE[vs_ordesigner_long](~/add/includes/vs-ordesigner-long-md.md)]</ph>或 SqlMetal.exe 实用程序来生成这些类。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You then set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property to the class that represents the database and set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to the property that represents the database table.</source>
          <target state="translated">然后设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;属性表示数据库的类并设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;属性表示数据库表的属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="order_of_operations"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Order of Operations    The LinqDataSource control applies data operations in the following order:      1.</source>
          <target state="translated"><bpt id="p1">&lt;a name="order_of_operations"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 顺序操作 LinqDataSource 控件适用按以下顺序的数据操作︰ 1。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Where (specify which data records to return).</source>
          <target state="translated">其中 （指定哪些数据记录返回）。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Order By (sort).</source>
          <target state="translated">Order By （排序）。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Group By (aggregate data records that share values).</source>
          <target state="translated">Group By （共享的值的聚合数据记录）。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Order Groups By (sort grouped data).</source>
          <target state="translated">Order By （排序分组数据） 的组。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Select (specify which fields or properties to return).</source>
          <target state="translated">（指定的字段或属性返回） 的选择。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Auto-sort (sort data records by a property that the user has selected).</source>
          <target state="translated">自动排序 （由用户选定的属性数据记录进行排序）。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Auto-page (retrieve a subset of data records that were selected by the user).</source>
          <target state="translated">自动页 （检索已由用户选择的数据记录的子集）。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can add conditions to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property to filter the data records that are returned from a query.</source>
          <target state="translated">您可以添加到条件&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;属性筛选从查询返回的数据记录。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property is not set, the LinqDataSource control retrieves every record from the data object.</source>
          <target state="translated">如果&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;未设置属性、 LinqDataSource 控件检索此数据对象中的每个记录。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="ordering_data"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Ordering Data    You use the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property to specify the names of properties from the returned data to sort by.</source>
          <target state="translated"><bpt id="p1">&lt;a name="ordering_data"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 对你使用的数据进行排序&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;属性来指定从返回的数据要作为排序依据的属性的名称。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you use the LinqDataSource control with <ph id="ph2">[!INCLUDE[ss2k](~/add/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/add/includes/ssew-md.md)]</ph> and the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; property is set to <ph id="ph4">`true`</ph>, you must provide a value in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 当你使用具有 LinqDataSource 控件<ph id="ph2">[!INCLUDE[ss2k](~/add/includes/ss2k-md.md)]</ph>或<ph id="ph3">[!INCLUDE[ssEW](~/add/includes/ssew-md.md)]</ph>和&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;属性设置为<ph id="ph4">`true`</ph>，你必须提供中的值&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>By default, the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; property is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">默认情况下，&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;属性是<ph id="ph1">`true`</ph>。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you assign a value to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property, you must also include all identity columns in the list of properties that is returned in the query.</source>
          <target state="translated">如果将值赋给&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性，你还必须包括所有的 identity 列在查询中返回的属性列表。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="grouping_data"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Grouping Data    You use the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property to specify which properties are used to consolidate data records that have the same values.</source>
          <target state="translated"><bpt id="p1">&lt;a name="grouping_data"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 你使用的数据分组&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;属性以指定哪些属性用于合并具有相同的值的数据记录。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property.</source>
          <target state="translated">在您对数据进行分组，你可以纳入<ph id="ph1">`Key`</ph>和<ph id="ph2">`It`</ph>，它们动态创建中的属性，&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>属性是指中或多个用于对数据进行分组的属性的值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain all unique values in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">例如，如果通过名为的属性组<ph id="ph1">`Category`</ph>、<ph id="ph2">`Key`</ph>属性将包含中的所有唯一值<ph id="ph3">`Category`</ph>属性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
          <target state="translated"><ph id="ph1">`It`</ph>属性指的数据分组中的单个记录的集合。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
          <target state="translated">可以循环访问<ph id="ph1">`It`</ph>属性，以检索已经合并分组操作中的单个记录。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">例如，如果通过名为的属性组<ph id="ph1">`Category`</ph>、<ph id="ph2">`It`</ph>属性包含所有的共享中的常见值的单个记录<ph id="ph3">`Category`</ph>属性。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You use the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt; property to specify the properties to use for sorting the grouped data.</source>
          <target state="translated">你使用&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;属性来指定要用于对分组的数据进行排序的属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When you group data, the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property specifies how the individual records within the grouped data are sorted.</source>
          <target state="translated">数据，进行分组时&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;属性指定分组的数据中各记录的排序方式。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>By default, the LinqDataSource control retrieves values for all the properties from a data object.</source>
          <target state="translated">默认情况下，LinqDataSource 控件数据对象中检索所有属性的值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You use the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property to specify which properties to return if you want to work with a subset of available properties.</source>
          <target state="translated">你使用&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性来指定的属性以返回你是否想要使用的可用属性的子集。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The Select operation is applied after the Where, Order By, and Group By operations.</source>
          <target state="translated">选择操作应用后 Where、 Order By 和 Group By 操作。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.</source>
          <target state="translated">因此，如果 Select 子句中创建一个别名，别名不可用的其他子句中。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="data_modifications"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Data Modifications    You can specify whether data modifications are enabled by using the &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;, and &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt; properties.</source>
          <target state="translated"><bpt id="p1">&lt;a name="data_modifications"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 你可以指定是否使用启用数据修改的数据修改&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;， &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;，和&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The user interface for modifying data from a LinqDataSource control is typically provided through a data-bound control, such as a &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.</source>
          <target state="translated">修改数据从 LinqDataSource 控件的用户界面通常提供通过数据绑定控件，如&lt;xref:System.Web.UI.WebControls.DetailsView&gt;控件。&lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In addition to setting &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;, or &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt; to <ph id="ph1">`true`</ph>, the following conditions are required to enable automatic data modifications:      -   The &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property cannot be assigned a value.</source>
          <target state="translated">除了设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;， &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;，或&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;到<ph id="ph1">`true`</ph>，启用自动数据修改所需的以下条件:-&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性无法分配一个值。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property cannot be assigned a value.</source>
          <target state="translated">-&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;属性无法分配一个值。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-   The class that is assigned to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property must derive from &lt;xref:System.Data.Linq.DataContext&gt;.</source>
          <target state="translated">的分配给&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;属性必须从&lt;xref:System.Data.Linq.DataContext&gt;.&lt;/xref:System.Data.Linq.DataContext&gt;派生&lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;类</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-   The property that is assigned to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property must derive from &lt;xref:System.Data.Linq.Table%601&gt;.</source>
          <target state="translated">的分配给&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;属性必须从&lt;xref:System.Data.Linq.Table%601&gt;.&lt;/xref:System.Data.Linq.Table%601&gt;派生&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;属性</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can restrict which properties are displayed in a data-bound control in two ways.</source>
          <target state="translated">你可以限制在两种方式的数据绑定控件中显示的属性。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can either set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property to a subset of properties, or you can define the fields for a data-bound control by adding &lt;xref:System.Web.UI.WebControls.DataControlField&gt; controls.</source>
          <target state="translated">你可以设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性号码中的属性，或者你可以通过添加定义的字段的数据绑定控件&lt;xref:System.Web.UI.WebControls.DataControlField&gt;控件。&lt;/xref:System.Web.UI.WebControls.DataControlField&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>However, if you set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property, it means that automatic update, insert, and delete operations cannot be enabled.</source>
          <target state="translated">但是，如果你设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性，则表示无法启用自动更新、 插入和删除操作。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If you want to enable automatic data modifications while you work with a subset of available properties, do not set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property.</source>
          <target state="translated">如果你想要启用自动数据修改，在你使用的可用属性的子集时，不要设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control.</source>
          <target state="translated">相反，此数据对象中检索所有属性和管理哪些显示通过使用数据绑定控件。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When you use the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control or the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, you must also set the &lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt; or &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; properties to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">当你使用&lt;xref:System.Web.UI.WebControls.DetailsView&gt;控件或&lt;xref:System.Web.UI.WebControls.GridView&gt;控件，你还必须设置&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;或&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;属性设置为<ph id="ph1">`false`</ph>。&lt;/xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; &lt;/xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt; &lt;/xref:System.Web.UI.WebControls.GridView&gt; &lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This prevents the data-bound control from automatically including buttons for editing and deleting the data.</source>
          <target state="translated">这可以防止数据绑定控件自动包括按钮用于编辑和删除数据。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
          <target state="translated">数据绑定控件中不显示任何值存储视图状态中。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
          <target state="translated">它们是不变时传递给数据源执行数据更新。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="evaluating_value_at_run_time"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Evaluating Values at Run Time    If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;, or &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt; collections.</source>
          <target state="translated"><bpt id="p1">&lt;a name="evaluating_value_at_run_time"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 估计值在运行时如果您必须在运行时以进行排序，评估值筛选或分组的值，你可以将参数添加到&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;， &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;， &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;，或&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;集合。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you want to specify default values, you can add parameters to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt; collection.</source>
          <target state="translated">如果你想要指定默认值，你可以将参数添加到&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;集合。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If you want to examine or modify values before the data operation is executed, you can handle the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;, or &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt; events.</source>
          <target state="translated">如果你想要检查或修改值，数据操作执行之前，你可以处理&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;， &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;， &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;，或&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;事件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.</source>
          <target state="translated">若要取消数据操作，也可在检查根据用户输入的数据类中设置属性时出现的验证错误，你还可以处理这些事件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To examine values after the data operation has finished, handle the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;, or &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt; events.</source>
          <target state="translated">若要检查值，数据操作完成之后，处理&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;， &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;， &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;，或&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;事件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="working_with_stored_procedures"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Working with Stored Procedures    You use the LinqDataSource control to retrieve data from a stored procedure by creating an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="working_with_stored_procedures"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 使用存储过程你使用 LinqDataSource 控件从存储过程检索数据，通过创建的事件处理程序&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;事件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; object.</source>
          <target state="translated">在事件处理程序，你表示存储的过程的数据上下文类中调用该方法并将结果设置为&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;属性&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;对象。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property.</source>
          <target state="translated">如果你要启用自动更新、 插入和删除操作的数据，从方法返回的类型必须与匹配中指定的类型&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For more information about creating data context methods, see <bpt id="p1">[</bpt>How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关创建数据上下文方法的详细信息，请参阅<bpt id="p1">[</bpt>如何︰ 创建 DataContext 方法映射到存储的过程和函数 （O/R 设计器）<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="declarative_syntax"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Declarative Syntax      <bpt id="p2">&lt;CodeContentPlaceHolder&gt;</bpt>0<ept id="p2">&lt;/CodeContentPlaceHolder&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;a name="declarative_syntax"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 声明性语法<bpt id="p2">&lt;CodeContentPlaceHolder&gt;</bpt>0<ept id="p2">&lt;/CodeContentPlaceHolder&gt;</ept></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control dynamically creates an Order By clause based on values in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters*&gt; collection.</source>
          <target state="translated">获取或设置一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>控件动态创建 Order By 子句中的值为基础的&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters*&gt;集合。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters*&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When you set the AutoGenerateOrderByClause property to <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control dynamically creates an Order By clause that is based on the values in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt; collection.</source>
          <target state="translated">当将 AutoGenerateOrderByClause 属性设置为<ph id="ph1">`true`</ph>、&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件动态创建 Order By 子句中的值为基础&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;集合。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control sorts the data by the first parameter and then additionally sorts the data for each additional parameter.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件对数据进行排序的第一个参数，并为每个其他参数的数据，此外进行排序。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Order By clause.</source>
          <target state="translated">参数包含<ph id="ph1">`null`</ph>或 Order By 子句中不包含空值。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You do not set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property when the AutoGenerateOrderByClause is set to <ph id="ph1">`true`</ph>, because the parser dynamically creates the Order By clause.</source>
          <target state="translated">未设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;属性时 AutoGenerateOrderByClause 设置为<ph id="ph1">`true`</ph>，因为分析器可动态创建的 Order By 子句。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception if the AutoGenerateOrderByClause is set to <ph id="ph1">`true`</ph> and the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property is assigned values.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件将引发异常，如果 AutoGenerateOrderByClause 设置为<ph id="ph1">`true`</ph>和&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;属性分配值。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> control creates the Order By clause; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>控件创建的 Order By 子句; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control dynamically creates a Where clause based on values defined in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters*&gt; collection.</source>
          <target state="translated">获取或设置一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>控件动态创建 Where 子句基于中定义的值&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters*&gt;集合。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters*&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When you set the AutoGenerateWhereClause property to <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control dynamically creates the Where clause from the parameters in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; collection.</source>
          <target state="translated">当将 AutoGenerateWhereClause 属性设置为<ph id="ph1">`true`</ph>、&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件动态创建 Where 子句中的参数从&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;集合。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Each parameter that you add to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; collection must have its &lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt; property set to a value that matches a property in the data object that is being queried.</source>
          <target state="translated">你将添加到每个参数&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;集合中必须具有其&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;属性设置为与匹配正在查询的数据对象中的属性的值。&lt;/xref:System.Web.UI.WebControls.Parameter.Name%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The automatically generated Where clause will check whether the value specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; collection equals the value of the matching property in the data object.</source>
          <target state="translated">自动生成 Where 子句将检查是否在指定的值&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;集合等于数据对象中匹配的属性的值。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If you provide more than one parameter, the parameters are linked with a logical <ph id="ph1">`AND`</ph> operation.</source>
          <target state="translated">如果你提供多个参数，则这些参数将与逻辑<ph id="ph1">`AND`</ph>操作。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Where clause.</source>
          <target state="translated">参数包含<ph id="ph1">`null`</ph>或空值不包括在 Where 子句。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The automatically generated &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; clause can test only for equality and can link parameters only with the <ph id="ph1">`AND`</ph> operation.</source>
          <target state="translated">自动生成&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;子句可以仅测试相等性和链接参数只能与<ph id="ph1">`AND`</ph>操作。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Do not set the AutoGenerateWhereClause property to <ph id="ph1">`true`</ph> if you have to add a condition that does not test for equality or if you have to relate parameters with the <ph id="ph2">`OR`</ph> operation.</source>
          <target state="translated">未设置为 AutoGenerateWhereClause 属性<ph id="ph1">`true`</ph>如果你有要添加不会测试相等性的条件或你必须与参数替换<ph id="ph2">`OR`</ph>操作。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can accomplish these tasks by setting the AutoGenerateWhereClause property to <ph id="ph1">`false`</ph> and adding placeholders in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property for each parameter in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; collection.</source>
          <target state="translated">你可以通过将 AutoGenerateWhereClause 属性设置为完成这些任务<ph id="ph1">`false`</ph>和添加中的占位符&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;中每个参数的属性&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;集合。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property, preface each placeholder name with the @ symbol.</source>
          <target state="translated">在&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;属性，作为每个占位符名称的开头 @ 符号。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You do not set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property when the AutoGenerateWhereClause property is <ph id="ph1">`true`</ph>, because the parser dynamically creates the Where clause.</source>
          <target state="translated">未设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;属性 AutoGenerateWhereClause 属性时<ph id="ph1">`true`</ph>，因为分析器可动态创建 Where 子句。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception if the AutoGenerateWhereClause property is <ph id="ph1">`true`</ph> and the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property is assigned values.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件将引发异常，如果 AutoGenerateWhereClause 属性为<ph id="ph1">`true`</ph>和&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;属性分配值。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> control will create the Where clause; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>控件将创建 Where 子句; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control supports navigation through sections of the data at run time.</source>
          <target state="translated">获取或设置一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>控件支持在运行时各部分的数据进行导航。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Set the AutoPage property to <ph id="ph1">`true`</ph> to enable paging in the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.</source>
          <target state="translated">将自动创建数据页属性设置为<ph id="ph1">`true`</ph>若要在中启用分页&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.</source>
          <target state="translated">若要使用户能够对数据进行分页，连接提供用于对分页的接口的数据绑定控件&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When the AutoPage property is set to <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control retrieves only enough records for one page in the data-bound control.</source>
          <target state="translated">当自动创建数据页属性设置为<ph id="ph1">`true`</ph>、&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件中检索仅足够数据绑定控件中的一页的记录。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>It uses the &lt;xref:System.Linq.Enumerable.Skip%2A&gt; and &lt;xref:System.Linq.Enumerable.Take%2A&gt; methods to retrieve the records for the current page.</source>
          <target state="translated">它使用&lt;xref:System.Linq.Enumerable.Skip%2A&gt;和&lt;xref:System.Linq.Enumerable.Take%2A&gt;方法来检索当前页的记录。&lt;/xref:System.Linq.Enumerable.Take%2A&gt; &lt;/xref:System.Linq.Enumerable.Skip%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user can page through the data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果用户可以通过数据; 页，否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control supports sorting the data at run time.</source>
          <target state="translated">获取或设置一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>控件支持对数据进行排序在运行时。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control supports two approaches for sorting data.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件支持两种方法对数据进行排序。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can use the AutoSort property to enable run-time sorting or you can set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property to define the sorting at design time.</source>
          <target state="translated">你可以使用自动排序属性启用运行时排序或可以设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;属性来定义在设计时的排序。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Set the AutoSort property to <ph id="ph1">`true`</ph> to enable sorting in a &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control that is based on the sort expression from a data-bound control.</source>
          <target state="translated">将自动排序属性设置为<ph id="ph1">`true`</ph>中启用排序&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;基于的数据绑定控件的排序表达式的控件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.</source>
          <target state="translated">数据绑定控件提供的接口，使用户能够在运行时选择要用于排序的属性。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>You can programmatically set the order in which data is returned by setting the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property to the property or properties used for sorting.</source>
          <target state="translated">你可以以编程方式设置通过设置返回数据的顺序&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;属性的属性或用于排序的属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property is set to a property and the AutoSort property is <ph id="ph1">`true`</ph>, the sort expression from the data-bound control is applied after the expression in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property.</source>
          <target state="translated">当&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;属性设置为一个属性和自动排序属性是<ph id="ph1">`true`</ph>，从数据绑定控件的排序表达式应用中的表达式之后&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Therefore, this determines the final sorting of the data.</source>
          <target state="translated">因此，这将确定数据的最终排序。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user can sort the data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果用户可以将数据; 进行排序，否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Occurs after an instance of the context type object is created.</source>
          <target state="translated">创建上下文类型对象的实例后发生。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Handle the ContextCreated event to examine the context type object or examine exceptions that are raised while the object is being created.</source>
          <target state="translated">处理 ContextCreated 事件，以检查的上下文类型对象或检查在创建对象时引发的异常。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You retrieve the context type object from the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object that is associated with this event.</source>
          <target state="translated">检索中的上下文类型对象&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;属性&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;与此事件相关联的对象。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You retrieve the exception that was raised during the data operation from the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property.</source>
          <target state="translated">检索从数据操作过程中引发的异常&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The context type object is created during select, update, insert, and delete operations and is reused throughout the request.</source>
          <target state="translated">上下文类型对象选择、 更新、 插入和删除操作过程中创建，并且在整个请求重复。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>There is one time when the event is not raised.</source>
          <target state="translated">没有时不引发该事件的一次。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This is when you programmatically set the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property to an object during the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.</source>
          <target state="translated">这是以编程方式设置&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;期间的对象属性&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;事件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property implements the &lt;xref:System.Data.Linq.ITable&gt; interface.</source>
          <target state="translated">附加条件是原始值不需要存储在或中的对象的视图状态，&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;属性实现&lt;xref:System.Data.Linq.ITable&gt;接口。&lt;/xref:System.Data.Linq.ITable&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Occurs before an instance of the context type object is created.</source>
          <target state="translated">创建上下文类型对象的实例之前发生。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>By default, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control creates an instance of the type that is specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property.</source>
          <target state="translated">默认情况下，&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件创建一个实例中指定的类型&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control calls the default constructor of the data context object to create an instance of the object.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件调用要创建对象的实例的数据上下文对象的默认构造函数。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property.</source>
          <target state="translated">很可能你必须使用非默认构造函数，或你必须创建不同的对象中指定从&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>In that case, you must handle the ContextCreating event and manually create the data context object.</source>
          <target state="translated">在这种情况下，你必须处理 ContextCreating 事件，并手动创建的数据上下文对象。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The context type object is created during select, update, insert, and delete operations.</source>
          <target state="translated">在选择、 更新、 插入和删除操作期间创建上下文类型对象。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>There is one time when the event is not raised.</source>
          <target state="translated">没有时不引发该事件的一次。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This is when you programmatically set the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property to an object in an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.</source>
          <target state="translated">这是以编程方式设置&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;的事件处理程序中某个对象的属性&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;事件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property implements the &lt;xref:System.Data.Linq.ITable&gt; interface.</source>
          <target state="translated">附加条件是原始值不需要存储在或中的对象的视图状态，&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;属性实现&lt;xref:System.Data.Linq.ITable&gt;接口。&lt;/xref:System.Data.Linq.ITable&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Occurs before disposing the context type object.</source>
          <target state="translated">在释放上下文类型对象之前发生。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>You handle the ContextDisposing event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.</source>
          <target state="translated">处理 ContextDisposing 事件，若要手动释放对象或执行清理特定于该对象之前的对象被销毁。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.</source>
          <target state="translated">获取或设置包含其值具有的数据，你想要检索的属性的类型的名称。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>When you use the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control to retrieve data from either an in-memory data collection or a database, you must specify two properties.</source>
          <target state="translated">当你使用&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控制从内存中数据集合或数据库检索数据，必须指定两个属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The first is a data context class that represents the data source.</source>
          <target state="translated">第一个是表示数据源的数据上下文类。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The second is a property in the data context class that contains the data.</source>
          <target state="translated">第二个是中包含的数据的数据上下文类的属性。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>You set the ContextTypeName property to the name of the data context class and you set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to the data collection that contains the data.</source>
          <target state="translated">ContextTypeName 属性设置为数据上下文类的名称和你设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;到包含数据的数据集合的属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For example, when you retrieve data from a database, set the ContextTypeName property to the name of the class that represents the database.</source>
          <target state="translated">例如，当从数据库检索数据，ContextTypeName 属性设置为表示数据库的类的名称。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Also set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to the property that represents the table in the database.</source>
          <target state="translated">此外设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;属性表示数据库中的表的属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To generate classes from a database, use the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)]</ph> or the SqlMetal.exe utility to automatically generate those classes.</source>
          <target state="translated">若要从数据库中生成类，请使用<ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)]</ph>或 SqlMetal.exe 实用工具来自动生成这些类。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>When you retrieve data from an in-memory data collection such as an array, set the ContextTypeName property to the name of the class that contains the array property.</source>
          <target state="translated">当从内存中的数据集合 （如数组） 中检索数据时，设置 ContextTypeName 属性为包含数组属性的类的名称。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Then set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to the property that gets the array.</source>
          <target state="translated">然后设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;属性用于获取数组的属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>To enable automatic update, insert, or delete operations through the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control, the class assigned to the ContextTypeName property must derive from &lt;xref:System.Data.Linq.DataContext&gt;.</source>
          <target state="translated">若要启用自动更新，插入或删除操作通过&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件，分配给 ContextTypeName 属性的类必须派生从&lt;xref:System.Data.Linq.DataContext&gt;.&lt;/xref:System.Data.Linq.DataContext&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>In addition, the property assigned to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property must derive from &lt;xref:System.Data.Linq.Table%601&gt;.</source>
          <target state="translated">此外，此属性分配给&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;属性必须从&lt;xref:System.Data.Linq.Table%601&gt;.&lt;/xref:System.Data.Linq.Table%601&gt;派生&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the ContextTypeName property.</source>
          <target state="translated">如果你不需要以启用自动更新、 插入或删除操作，你可以将任何类型的类的名称分配给 ContextTypeName 属性。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>For information about how to select data from an instance of a class, see the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt; property.</source>
          <target state="translated">有关如何从一个类的实例中选择数据的信息，请参阅&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The name of the class to retrieve data from.</source>
          <target state="translated">要从中检索数据的类的名称。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Returns a queryable view.</source>
          <target state="translated">返回可查询的视图。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A queryable view.</source>
          <target state="translated">可查询的视图。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is associated with this control.</source>
          <target state="translated">创建的新实例<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与此控件相关联的类。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>To provide a custom view, you can override this method in a derived class.</source>
          <target state="translated">若要提供自定义视图，可以重写此方法在派生类中。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>An object that acts as the interface for data-bound controls.</source>
          <target state="translated">一个充当数据绑定控件的接口的对象。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Performs a delete operation.</source>
          <target state="translated">执行删除操作。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Typically, you do not have to call the Delete method from your code.</source>
          <target state="translated">通常情况下，无需在代码中调用 Delete 方法。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>When you use a &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control with a data-bound control, the data-bound control will automatically call the Delete method when the user takes action to delete a record.</source>
          <target state="translated">当你使用&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件与数据绑定控件，数据绑定控件将自动调用 Delete 方法如果用户执行操作以删除一条记录。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>You explicitly call the Delete method when you want to create your own process for deleting data.</source>
          <target state="translated">当你想要创建你自己的过程删除数据时，显式调用 Delete 方法。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>For example, you can call the Delete method when you want to delete a record based on an event outside the data-bound control.</source>
          <target state="translated">例如，你可以调用 Delete 方法，当你想要删除基于之外的数据绑定控件的事件的记录。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The row key values for the records to be deleted.</source>
          <target state="translated">要删除的记录行键值。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The row values that are evaluated to detect data conflicts.</source>
          <target state="translated">计算以检测数据冲突行值。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The number of records affected by the delete operation.</source>
          <target state="translated">删除操作所影响的记录数。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Occurs when a delete operation has finished.</source>
          <target state="translated">删除操作已完成时发生。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Handle the Deleted event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished.</source>
          <target state="translated">处理已删除事件，以捕获删除操作中，从任何异常，也可后在操作完成后检查输出参数。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can retrieve the output parameters from the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object that is passed to event handlers.</source>
          <target state="translated">你可以检索来自的输出参数&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;传递给事件处理程序的对象。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This property is not used by the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">不使用此属性<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>A collection of parameters.</source>
          <target state="translated">参数的集合。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Occurs before a delete operation.</source>
          <target state="translated">在删除操作之前发生。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Handle the Deleting event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation.</source>
          <target state="translated">处理删除事件，以验证要删除，以检查数据类，若要更改在删除操作中前, 一个值，或若要取消删除操作中的数据验证错误的对象。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control passes a &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; object to event handlers for the Deleting event.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控制将传递&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;到删除事件的事件处理程序的对象。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; object contains the data that will be deleted and enables you to cancel the delete operation.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;对象包含将被删除并使你能够取消删除操作的数据。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>If the data class throws a &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; exception, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; object contains that exception in the &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt; property.</source>
          <target state="translated">如果数据类将引发&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;异常，&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;对象包含在该异常&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>If an exception is thrown in an event handler for the Deleting event, you must handle the exception in that event handler.</source>
          <target state="translated">如果删除事件的事件处理中引发异常，则必须处理该事件处理程序中的异常。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The exception will not be passed to an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt; event (through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object).</source>
          <target state="translated">此异常不会传递到事件处理程序&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;事件 (通过&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;属性&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;对象)。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property contains only the exceptions that are thrown after the Deleting event.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;属性包含在删除事件后引发异常。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether data records can be deleted through the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
          <target state="translated">获取或设置一个值，该值指示是否可以通过删除数据记录<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>控件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Set the EnableDelete property to <ph id="ph1">`true`</ph> when you want to enable users to delete a data record through the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.</source>
          <target state="translated">将 EnableDelete 属性设置为<ph id="ph1">`true`</ph>如果想要使用户能够删除数据记录通过&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>When EnableDelete is <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses LINQ to SQL to automatically create the command to delete the data.</source>
          <target state="translated">EnableDelete 时<ph id="ph1">`true`</ph>、&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件使用 LINQ to SQL 会自动创建删除的数据的命令。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>You must include an interface that lets users select a record to delete, such as a &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.</source>
          <target state="translated">必须包括一个接口，使用户可以选择一条记录以删除，如&lt;xref:System.Web.UI.WebControls.DetailsView&gt;控件。&lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control does not support automatic delete operations when the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property or the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property is set.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件不支持自动删除操作时&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性或&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;属性设置。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>In that case, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception if a delete operation is tried.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件将引发异常，如果尝试删除操作。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if automatic delete operations are enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果启用了自动删除操作;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether data records can be inserted through the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
          <target state="translated">获取或设置一个值，该值指示是否可以通过插入数据记录<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>控件。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Set the EnableInsert property to <ph id="ph1">`true`</ph> when you want to enable users to insert a new data record through the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.</source>
          <target state="translated">将 EnableInsert 属性设置为<ph id="ph1">`true`</ph>如果想要使用户能够插入新数据记录通过&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>When EnableInsert is <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses LINQ to SQL to automatically create the command to insert the data.</source>
          <target state="translated">EnableInsert 时<ph id="ph1">`true`</ph>、&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件使用 LINQ to SQL 来自动创建命令插入数据。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>You must include an interface that lets users insert a new record, such as a &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.</source>
          <target state="translated">必须包括一个供用户插入一个新记录，例如界面&lt;xref:System.Web.UI.WebControls.DetailsView&gt;控件。&lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control does not support automatic insert operations when the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property or the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property is set.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件不支持自动插入操作时&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性或&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;属性设置。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>In that case, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception if an insert operation is tried.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件将引发异常，如果尝试插入操作。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if automatic insert operations are enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果启用了自动插入操作;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Gets or sets the value that indicates whether changes to the data context object are tracked.</source>
          <target state="translated">获取或设置值，该值指示是否跟踪数据上下文对象的更改。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The EnableObjectTracking property is only used when selecting data from a LINQ To SQL data context object.</source>
          <target state="translated">LINQ 到 SQL 数据上下文对象中选择数据时才使用 EnableObjectTracking 属性。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>When you are interacting with read-only data, setting the EnableObjectTracking property to <ph id="ph1">`false`</ph> improves performance because the data is not cached to determine if it has changed.</source>
          <target state="translated">当你与只读数据交互时，将 EnableObjectTracking 属性设置为<ph id="ph1">`false`</ph>能改善性能，因为数据不缓存以确定是否有更改。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>However, it also disables deferred query execution.</source>
          <target state="translated">但是，它还将禁用延迟的执行查询。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>This property must be set to <ph id="ph1">`true`</ph> if you want to use deferred query execution.</source>
          <target state="translated">此属性必须设置为<ph id="ph1">`true`</ph>如果你想要使用延迟的执行查询。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data context object is tracked for changes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果数据上下文对象跟踪的更改;，否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether data records can be updated through the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
          <target state="translated">获取或设置一个值，该值指示是否可以通过更新数据记录<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>控件。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Set the EnableUpdate property to <ph id="ph1">`true`</ph> when you want to enable users to update a data record by using the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.</source>
          <target state="translated">将 EnableUpdate 属性设置为<ph id="ph1">`true`</ph>如果想要使用户能够通过使用更新的数据记录&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>When EnableUpdate is <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses LINQ to SQL to automatically create the command to update the data.</source>
          <target state="translated">EnableUpdate 时<ph id="ph1">`true`</ph>、&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件使用 LINQ to SQL 会自动创建的命令以更新的数据。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>You must include an interface that lets users update a record, such as a &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.</source>
          <target state="translated">必须包含一个界面，从而让用户更新的记录，如&lt;xref:System.Web.UI.WebControls.DetailsView&gt;控件。&lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control does not support automatic update operations when the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property or the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property is set.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件不支持自动更新操作时&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性或&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;属性设置。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>In that case, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception if an update operation is tried.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件将引发异常，如果尝试更新操作。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if automatic update operations are enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果启用了自动更新操作;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies which properties are used for grouping the retrieved data.</source>
          <target state="translated">获取或设置一个值，指定哪些属性用于对检索到的数据进行分组。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>You use the GroupBy property to specify which properties are used for consolidating data records that have the same values.</source>
          <target state="translated">GroupBy 属性用于指定哪些属性用于将合并具有相同的值的数据记录。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>For example, if you set the GroupBy property to <ph id="ph1">`Name`</ph>, all the records in the query that have the same <ph id="ph2">`Name`</ph> property value are returned as a single consolidated record.</source>
          <target state="translated">例如，如果 GroupBy 属性设置为<ph id="ph1">`Name`</ph>，查询具有相同的所有记录<ph id="ph2">`Name`</ph>作为单个合并记录返回属性值。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>You can assign more than one property to the GroupBy property by enclosing all the properties in the <ph id="ph1">`new`</ph> function and separating each property by using a comma.</source>
          <target state="translated">你可以通过将中的所有属性分配给 GroupBy 属性多个属性<ph id="ph1">`new`</ph>函数，并使用逗号分隔每个属性。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>For example, to group by the properties <ph id="ph1">`Name`</ph> and then <ph id="ph2">`Category`</ph>, set the GroupBy property to <ph id="ph3">`new(Name, Category)`</ph>.</source>
          <target state="translated">例如，若要按属性分组<ph id="ph1">`Name`</ph>然后<ph id="ph2">`Category`</ph>，GroupBy 属性设置为<ph id="ph3">`new(Name, Category)`</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The values in the property that are used for grouping are returned through a generated property named <ph id="ph1">`Key`</ph>.</source>
          <target state="translated">用于分组属性中的值返回通过名为的生成属性<ph id="ph1">`Key`</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>You include the <ph id="ph1">`Key`</ph> property in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property to retrieve the grouped values.</source>
          <target state="translated">您包括<ph id="ph1">`Key`</ph>中的属性&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性来检索已分组的值。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>You can set the <ph id="ph1">`Key`</ph> property to an alias by using the <ph id="ph2">`As`</ph> keyword, but you are not required to use an alias.</source>
          <target state="translated">你可以设置<ph id="ph1">`Key`</ph>属性使用别名<ph id="ph2">`As`</ph>关键字，但你无需使用别名。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>For example, you might set the GroupBy property to a property named <ph id="ph1">`Category`</ph>.</source>
          <target state="translated">例如，你可能将 GroupBy 属性设置为一个名为属性<ph id="ph1">`Category`</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>You can retrieve the consolidated values from the <ph id="ph1">`Category`</ph> property by setting the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property to <ph id="ph2">`new(Key As ProductCategory)`</ph>.</source>
          <target state="translated">你可以检索中的合并的值<ph id="ph1">`Category`</ph>通过设置属性&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性<ph id="ph2">`new(Key As ProductCategory)`</ph>。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>You can access the individual records in a grouping by including the <ph id="ph1">`It`</ph> property in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property.</source>
          <target state="translated">你可以通过包括访问分组中的各记录<ph id="ph1">`It`</ph>中的属性&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`It`</ph> property contains a collection of records that share a value in the grouped property.</source>
          <target state="translated"><ph id="ph1">`It`</ph>属性包含共享中的分组属性的值的记录的集合。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records.</source>
          <target state="translated">可以循环访问<ph id="ph1">`It`</ph>属性来检索单个记录。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The GroupBy property is often used with aggregation methods.</source>
          <target state="translated">GroupBy 属性通常用于聚合方法。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>You can use the following aggregate methods:      -   <ph id="ph1">`Count()`</ph><ph id="ph2">      -   </ph><ph id="ph3">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph4">`)`</ph><ph id="ph5">      -   </ph><ph id="ph6">`Sum(`</ph> <bpt id="p2">*</bpt>column<ept id="p2">*</ept> <ph id="ph7">`)`</ph><ph id="ph8">      -   </ph><ph id="ph9">`Max(`</ph> <bpt id="p3">*</bpt>column<ept id="p3">*</ept> <ph id="ph10">`)`</ph><ph id="ph11">      -   </ph><ph id="ph12">`Min(`</ph> <bpt id="p4">*</bpt>column<ept id="p4">*</ept> <ph id="ph13">`)`</ph><ph id="ph14">      -   </ph><ph id="ph15">`Where(`</ph> <bpt id="p5">*</bpt>condition<ept id="p5">*</ept> <ph id="ph16">`)`</ph><ph id="ph17">      -   </ph><ph id="ph18">`Any()`</ph><ph id="ph19">      -   </ph><ph id="ph20">`All(`</ph> <bpt id="p6">*</bpt>condition<ept id="p6">*</ept> <ph id="ph21">`)`</ph>       For more information, see <bpt id="p7">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p7">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p8">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p8">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
          <target state="translated">你可以使用以下聚合方法:- <ph id="ph1">`Count()`</ph> <ph id="ph2">      -   </ph> <ph id="ph3">`Average(`</ph> <bpt id="p1">*</bpt>列<ept id="p1">*</ept> <ph id="ph4">`)`</ph> <ph id="ph5">      -   </ph> <ph id="ph6">`Sum(`</ph> <bpt id="p2">*</bpt>列<ept id="p2">*</ept> <ph id="ph7">`)`</ph> <ph id="ph8">      -   </ph> <ph id="ph9">`Max(`</ph> <bpt id="p3">*</bpt>列<ept id="p3">*</ept> <ph id="ph10">`)`</ph> <ph id="ph11">      -   </ph> <ph id="ph12">`Min(`</ph> <bpt id="p4">*</bpt>列<ept id="p4">*</ept> <ph id="ph13">`)`</ph> <ph id="ph14">      -   </ph> <ph id="ph15">`Where(`</ph> <bpt id="p5">*</bpt>条件<ept id="p5">*</ept> <ph id="ph16">`)`</ph> <ph id="ph17">      -   </ph> <ph id="ph18">`Any()`</ph> <ph id="ph19">      -   </ph> <ph id="ph20">`All(`</ph> <bpt id="p6">*</bpt>条件<ept id="p6">*</ept><ph id="ph21">`)`</ph>详细信息，请参阅<bpt id="p7">[</bpt>NIB: LinqDataSource Web 服务器控件概述<ept id="p7">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept>和<bpt id="p8">[</bpt>How to︰ 组和聚合数据使用 LinqDataSource控件<ept id="p8">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Group By clause.</source>
          <target state="translated">一个字符串，用于创建 Group By 子句。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used to create the Group By clause.</source>
          <target state="translated">获取用于创建 Group By 子句的参数的集合。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses parameters in the GroupByParameters collection to create the Group By clause at run time.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件 GroupByParameters 集合中使用参数在运行时创建 Group By 子句。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Typically you will not use the GroupByParameters collection to group data.</source>
          <target state="translated">通常将不使用 GroupByParameters 集合对数据进行分组。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Instead, you can use the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property.</source>
          <target state="translated">相反，你可以使用&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>You use the GroupByParameters collection only when a value in the Group By clause must be set at run time and that value is not a property name.</source>
          <target state="translated">你 GroupByParameters 集合仅当使用 Group By 子句中的值必须在运行时设置值不是属性名称。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>For example, use the GroupByParameters collection to group data based on whether the <ph id="ph1">`LastName`</ph> property in the data records equals a value provided by the user.</source>
          <target state="translated">例如，使用 GroupByParameters 集合对组数据进行基于是否<ph id="ph1">`LastName`</ph>数据记录中的属性将为用户提供一个值。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property.</source>
          <target state="translated">如果你想对数据进行分组的属性，并且不需要在运行时设置该属性，则可以定义中的分组属性&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>For example, to return values from a database table grouped by <ph id="ph1">`LastName`</ph>, set &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; to "LastName" without any parameters.</source>
          <target state="translated">例如，若要从数据库表中返回按分组<ph id="ph1">`LastName`</ph>，将其设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;为"LastName"不带任何参数。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>If you want to dynamically group data by a property, create an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event and customize the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property as needed.</source>
          <target state="translated">如果你想对动态数据进行分组的属性，创建的事件处理程序&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;事件和自定义&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;属性根据需要。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>You cannot assign the name of a property as the value for a parameter in the GroupByParameters collection.</source>
          <target state="translated">无法将属性的名称指定为 GroupByParameters 集合中的参数的值。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>You add parameters to the GroupByParameters collection when you want to add a condition to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property that must be set at run time.</source>
          <target state="translated">你需要将参数添加到 GroupByParameters 集合，当你想要添加到条件&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;必须在运行时设置的属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>To set values in the GroupByParameters collection, you assign a name to each parameter and then add a placeholder in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property for that named parameter.</source>
          <target state="translated">若要设置 GroupByParameters 集合中的值，将名称分配给每个参数，并将中的占位符&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;属性中的为该命名参数。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>In the Group By clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">在 Group By 子句中，作为开头的每个参数名称 @ 符号。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The parameters that are used to create the Group By clause.</source>
          <target state="translated">用于创建 Group By 子句的参数。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Performs an insert operation.</source>
          <target state="translated">执行插入操作。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Typically, you do not have to call the Insert method from your code.</source>
          <target state="translated">通常情况下，无需在代码中调用 Insert 方法。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The data-bound control will automatically call the Insert method when the user takes action to insert a new record.</source>
          <target state="translated">当用户执行操作以插入新记录时，数据绑定控件将自动调用 Insert 方法。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>You explicitly call the Insert method when you want to create your own process for inserting data.</source>
          <target state="translated">当你想要创建你自己的过程用于插入数据时，显式调用 Insert 方法。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The row values to be inserted into the data source.</source>
          <target state="translated">要插入到数据源的行值。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The number of rows affected by the insert operation.</source>
          <target state="translated">插入操作所影响的行数。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Occurs when an insert operation has finished.</source>
          <target state="translated">当插入操作已完成时发生。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Handle the Inserted event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished.</source>
          <target state="translated">处理插入事件，以捕获插入操作的任何异常也可在插入操作完成后检查的值。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>You can retrieve the new values through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object that is passed to event handlers.</source>
          <target state="translated">您可以通过将新值&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;传递给事件处理程序的对象。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>For example, you can use the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object to retrieve the identity property generated by a database for a new data record.</source>
          <target state="translated">例如，你可以使用&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;对象以检索生成的数据库以进行新的数据记录的标识属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Occurs before an insert operation.</source>
          <target state="translated">在插入操作之前发生。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Handle the Inserting event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation.</source>
          <target state="translated">处理插入事件，以验证要插入、 检查的数据类，若要更改在插入操作中前, 一个值，或将取消 insert 操作的数据验证错误的对象。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; object passed to event handlers for this event contains the new object to insert in the data source.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;为此事件包含要插入的数据源中的新对象，对象将传递到事件处理程序。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>If a validation error occurs during the insert operation, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; object contains the validation exceptions that are thrown by the data class.</source>
          <target state="translated">如果&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;对象包含验证异常由数据类&lt;/xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;的插入操作过程中发生验证错误</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
          <target state="translated">如果要插入的值与在数据类中，属性的类型不匹配或未通过自定义的验证检查，将发生验证错误。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>In an event handler for the Inserting event, you can retrieve the validation exceptions and take appropriate action.</source>
          <target state="translated">插入事件的事件处理中, 可以检索验证异常，并采取相应的操作。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>If an exception is thrown in an event handler for the Inserting event, you must handle the exception in that event handler.</source>
          <target state="translated">如果插入事件的事件处理中引发异常，则必须处理该事件处理程序中的异常。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The exception will not be passed to an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt; event (through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object).</source>
          <target state="translated">此异常不会传递到事件处理程序&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;事件 (通过&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;属性&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;对象)。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property contains only the exceptions that are thrown after the Inserting event.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;属性包含在插入事件后引发异常。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used during an insert operation.</source>
          <target state="translated">获取在插入操作过程中使用的参数的集合。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Typically the values that are needed for an insert operation are passed to the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control by the data-bound control.</source>
          <target state="translated">通常将所需的插入操作的值传递给&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;由数据绑定控件的控件。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>You specify insert parameters when you want to provide a default value or define whether to convert empty values to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">插入参数，如果你想要提供默认值或定义是否将转换到的空值可指定<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.</source>
          <target state="translated">无需将插入，只需为在用户不提供一个值时必须处理值的每个值提供一个参数。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The values that you provide in the InsertParameters collection are used only for fields that are defined in the data source but that are not bound in the data control.</source>
          <target state="translated">InsertParameters 集合中提供的值仅用于在数据源中定义但未绑定数据控件中的字段。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a &lt;xref:System.Web.UI.WebControls.ListView&gt; control that is bound to the table is bound only to the Name and Address fields.</source>
          <target state="translated">例如，假设数据库表具有列名称、 地址和邮政编码，分别名为但&lt;xref:System.Web.UI.WebControls.ListView&gt;已绑定到表的控件绑定到的名称和地址字段仅。&lt;/xref:System.Web.UI.WebControls.ListView&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The values in the InsertParameters collection will be used only for the PostalCode field.</source>
          <target state="translated">将仅为邮政编码字段使用 InsertParameters 集合中的值。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>They will not be used for the Name and Address field.</source>
          <target state="translated">它们不用于为名称和地址字段。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>This is true even if no value is entered for those fields.</source>
          <target state="translated">即使为这些字段中输入任何值，也是如此。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>If the data-bound control autogenerates fields for all fields in the data source, no values from the InsertParameters collection will be used.</source>
          <target state="translated">如果数据绑定控件自动生成字段的数据源中的所有都字段，将不使用 InsertParameters 集合中的任何值。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The parameters that are used during an insert operation.</source>
          <target state="translated">在插入操作期间使用的参数。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Initializes the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The event data.</source>
          <target state="translated">事件数据。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Control.Unload"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Web.UI.Control.Unload"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;包含事件数据的对象。&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies which fields are used for ordering the retrieved data.</source>
          <target state="translated">获取或设置一个值，指定哪些字段用于对检索到的数据进行排序。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>You use the OrderBy property to specify which properties from the returned data to use for sorting.</source>
          <target state="translated">OrderBy 属性用于指定从返回的数据要用于排序的属性。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The property for sorting the data must exist in the original data source, but it does not have to be included in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property.</source>
          <target state="translated">对数据进行排序的属性必须存在于原始数据源，但是它没有要包括在&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>You can add a space and <ph id="ph1">`Ascending`</ph>, <ph id="ph2">`ASC`</ph>, <ph id="ph3">`Descending`</ph>, or <ph id="ph4">`DESC`</ph> to a property in the OrderBy string in order to specify how the ordered data is returned.</source>
          <target state="translated">你可以添加一个空格和<ph id="ph1">`Ascending`</ph>， <ph id="ph2">`ASC`</ph>， <ph id="ph3">`Descending`</ph>，或<ph id="ph4">`DESC`</ph>中才能指定如何返回已排序的数据的 OrderBy 字符串的属性。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>You can provide more than one property in the OrderBy property by separating each property by using a comma.</source>
          <target state="translated">可以通过使用逗号分隔每个属性提供 OrderBy 属性中的多个属性。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>For example, to order by properties named <ph id="ph1">`LastName`</ph> and <ph id="ph2">`FirstName`</ph>, set the OrderBy property to "LastName, FirstName".</source>
          <target state="translated">例如，到排序依据属性名为<ph id="ph1">`LastName`</ph>和<ph id="ph2">`FirstName`</ph>，将 OrderBy 属性设为"姓氏 FirstName"。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you use the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control with <ph id="ph2">[!INCLUDE[ss2k](~/add/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/add/includes/ssew-md.md)]</ph> and the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; property is set to <ph id="ph4">`true`</ph>, you must provide a value in the OrderBy property.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 当你使用&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件替换为<ph id="ph2">[!INCLUDE[ss2k](~/add/includes/ss2k-md.md)]</ph>或<ph id="ph3">[!INCLUDE[ssEW](~/add/includes/ssew-md.md)]</ph>和&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;属性设置为<ph id="ph4">`true`</ph>，你必须提供 OrderBy 属性中的值。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>By default, the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; property is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">默认情况下，&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;属性是<ph id="ph1">`true`</ph>。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>If you assign a value to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property, you must also include all identity columns in the list of properties that is returned in the query.</source>
          <target state="translated">如果将值赋给&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性，你还必须包括所有的 identity 列在查询中返回的属性列表。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt; property is set to <ph id="ph1">`true`</ph>, a data-bound control can pass a sort expression to the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control at run time.</source>
          <target state="translated">如果&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;属性设置为<ph id="ph1">`true`</ph>，数据绑定控件可以传递到一个排序表达式&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件在运行时。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control will apply the sort expression from the data-bound control after it applies the OrderBy property.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;应用了 OrderBy 属性之后，控件将应用从数据绑定控件的排序表达式。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Therefore, the data is returned according to the sort expression from the data-bound control.</source>
          <target state="translated">因此，根据排序表达式被返回的数据，从数据绑定控件。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Order By clause.</source>
          <target state="translated">一个字符串，用于创建 Order By 子句。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used to create the Order By clause.</source>
          <target state="translated">获取用于创建 Order By 子句的参数的集合。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses parameters in the OrderByParameters collection to create the Order By clause at run time.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件 OrderByParameters 集合中使用参数在运行时创建的 Order By 子句。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Typically you set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt; property to <ph id="ph1">`true`</ph> when you add parameters to the OrderByParameters collection.</source>
          <target state="translated">通常情况下设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;属性<ph id="ph1">`true`</ph>时将参数添加到 OrderByParameters 集合。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt; property is set to <ph id="ph1">`true`</ph>, each parameter in the OrderByParameters collection is added to the Order By clause in the sequence that they are specified in the OrderByParameters collection.</source>
          <target state="translated">当&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;属性设置为<ph id="ph1">`true`</ph>，OrderByParameters 集合中的每个参数添加到序列中的 Order By 子句 OrderByParameters 集合中指定它们。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt; property is <ph id="ph1">`true`</ph>, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.</source>
          <target state="translated">当&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;属性是<ph id="ph1">`true`</ph>，参数不需要命名为，因为它们会按顺序应用和与占位符不匹配。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>If you do not have to set a value at run time in the Order By clause, you do not have to use the OrderByParameters collection.</source>
          <target state="translated">如果不需要在 Order By 子句中的运行时设置一个值，你不需要使用 OrderByParameters 集合。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>You can define the fields to use for ordering the data in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property.</source>
          <target state="translated">你可以定义要使用的排序顺序中的数据的字段&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>For example, to return values from a database table ordered by <ph id="ph1">`LastName`</ph>, set &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; to "LastName" without any parameters.</source>
          <target state="translated">例如，若要从数据库表中返回排序通过<ph id="ph1">`LastName`</ph>，将其设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;为"LastName"不带任何参数。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>You can set parameters in the OrderByParameters collection and match the parameters to placeholders in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property, but this approach has limited application.</source>
          <target state="translated">可以设置 OrderByParameters 集合中的参数和匹配的参数中的占位符&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;属性，但这种方法具有有限的应用程序。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>When you use this approach, the parameters in the OrderByParameters collection cannot represent a column name.</source>
          <target state="translated">当你使用这种方法时，OrderByParameters 集合中的参数不能表示的一个列名称。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>You can set a parameter to a value and then compare that value to values in a property.</source>
          <target state="translated">可以将参数设置为一个值，然后将该值与属性中的值进行比较。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
          <target state="translated">例如，你可以基于属性中的值是否小于该参数表示的运行时间值的数据进行排序。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The parameters that are used for creating the Order By clause.</source>
          <target state="translated">用于创建 Order By 子句的参数。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Gets or sets the fields that are used for ordering grouped data.</source>
          <target state="translated">获取或设置用于排序的分组数据的字段。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>You use the OrderGroupsBy property to specify how the groups of data are sorted.</source>
          <target state="translated">OrderGroupsBy 属性用于指定数据的组的排序方式。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>For example, you can group by the <ph id="ph1">`CategoryID`</ph> property and then sort each category ID group by the average of the <ph id="ph2">`Price`</ph> property.</source>
          <target state="translated">例如，你可通过组<ph id="ph1">`CategoryID`</ph>属性和每个类别 ID 分组依据的平均值的然后排序<ph id="ph2">`Price`</ph>属性。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>You can set the OrderGroupsBy property only when you have grouped the data.</source>
          <target state="translated">仅当对数据进行分组时，你可以设置 OrderGroupsBy 属性。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>If you set the OrderGroupsBy property without setting the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception.</source>
          <target state="translated">如果设置 OrderGroupsBy 属性但没有设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;属性，&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件将引发异常。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data.</source>
          <target state="translated">用于对数据进行排序的属性必须是一个属性，用于对数据进行分组或分组数据的聚合函数的结果。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>To specify how the data is sorted, you can add a space and the string "Ascending", "ASC", "Descending", or "DESC" to a property name in the OrderGroupsBy string.</source>
          <target state="translated">若要指定如何对数据进行排序，你可以向 OrderGroupsBy 字符串中的属性名称中添加一个空格和字符串"升序"、"ASC"、"降序"或"DESC"。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>You can specify more than one property in the OrderGroupsBy property.</source>
          <target state="translated">你可以在 OrderGroupsBy 属性中指定多个属性。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Separate each property by using a comma.</source>
          <target state="translated">使用逗号分隔每个属性。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Order Groups By clause.</source>
          <target state="translated">一个字符串，用于创建组 Order By 子句。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used to create the Order Groups By clause.</source>
          <target state="translated">获取用于创建组 Order By 子句的参数的集合。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses parameters in the OrderGroupsByParameters collection to create the Order Groups By clause at run time.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件 OrderGroupsByParameters 集合中使用参数在运行时创建的组 Order By 子句。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>You add values to the OrderGroupsByParameters collection only when you must set values at run time in the Order Groups By clause.</source>
          <target state="translated">仅在必须在组 Order By 子句中的运行时设置值时，你可以将值添加到 OrderGroupsByParameters 集合。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>You can define the fields that are used to order the data by using the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt; property.</source>
          <target state="translated">你可以定义用于按使用顺序对数据的字段&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>You can set parameters in the OrderGroupsByParameters collection and match the parameters to placeholders in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt; property.</source>
          <target state="translated">可以设置 OrderGroupsByParameters 集合中的参数和匹配的参数中的占位符&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>However, when you use this approach, the parameters in the OrderGroupsByParameters collection cannot represent a column name; they must represent values.</source>
          <target state="translated">但是，当你使用这种方法，OrderGroupsByParameters 集合中的参数不能表示; 的一个列名称它们还必须表示值。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>You can set a parameter to a value and then compare that value to a property.</source>
          <target state="translated">可以将参数设置为一个值，然后将该属性值进行比较。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
          <target state="translated">例如，你可以基于属性中的值是否小于该参数表示的运行时间值的数据进行排序。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The parameters that are used to create the Order Groups By clause.</source>
          <target state="translated">使用创建组 Order By 子句的参数。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Gets or sets the properties and calculated values that are included in the retrieved data.</source>
          <target state="translated">获取或设置的属性和计算中检索到的数据包含的值。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>If you do not set the Select property, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control retrieves all the properties (data columns) from the data object.</source>
          <target state="translated">如果你未设置所选的属性，&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控制此数据对象中检索所有属性 （数据列）。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>You use the Select property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.</source>
          <target state="translated">从对象中检索属性的子集或来计算新值，在检索数据时，你可以使用所选属性。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>You specify which properties to retrieve by setting the Select property to the names of the properties that you want to include in the returned data.</source>
          <target state="translated">指定要检索选择的属性设置为你想要包括在返回的数据的属性名称的属性。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>If you retrieve a subset of properties from the data object, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control dynamically creates a class that contains only the properties that you specify in the Select property.</source>
          <target state="translated">如果从数据对象，检索属性的子集&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件动态创建类，其中包含仅在选择的属性中指定的属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A class is also created dynamically if you calculate properties that are not properties in the data object.</source>
          <target state="translated">如果计算不在数据对象中的属性的属性，也会动态创建类。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>In these cases, the object returned from the query is not an instance of the class that is specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property.</source>
          <target state="translated">在这些情况下，从查询返回的对象不是在指定类的实例&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Instead, you must use the <ph id="ph1">`new`</ph> method in the Select property to indicate that a new class is returned from the query.</source>
          <target state="translated">相反，你必须使用<ph id="ph1">`new`</ph>选择属性以指示，从查询返回一个新类中的方法。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>For example, to return only the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> properties from an object that contains more than these properties, set the Select property to <ph id="ph3">`new(FirstName, LastName)`</ph>.</source>
          <target state="translated">例如，若要仅返回<ph id="ph1">`FirstName`</ph>和<ph id="ph2">`LastName`</ph>属性从一个对象，包含多个这些属性，则将选择的属性设置为<ph id="ph3">`new(FirstName, LastName)`</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control will dynamically create the new class that you specified in the <ph id="ph1">`new`</ph> method.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件动态创建中指定的新类<ph id="ph1">`new`</ph>方法。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`As`</ph> keyword to assign an alias to a selected value.</source>
          <target state="translated">你可以使用<ph id="ph1">`As`</ph>关键字来将别名分配给所选的值。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>If you assign an alias, you must include the aliased properties in the <ph id="ph1">`new`</ph> method.</source>
          <target state="translated">如果分配别名，则必须包含中的别名属性<ph id="ph1">`new`</ph>方法。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Any data-bound control that binds to the results from the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control must refer to the property by the alias.</source>
          <target state="translated">将绑定到的任何数据绑定控件&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件必须由该别名引用的属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>For example, if you set the Select property to <ph id="ph1">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>, the data-bound control can access two properties, <ph id="ph2">`SalesRegion`</ph> and <ph id="ph3">`RevenueThousands`</ph>.</source>
          <target state="translated">例如，如果所选属性设置为<ph id="ph1">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>，数据绑定控件可以访问两个属性，<ph id="ph2">`SalesRegion`</ph>和<ph id="ph3">`RevenueThousands`</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>You use the <ph id="ph1">`new`</ph> function in the Select property according to the conditions listed in the following table.</source>
          <target state="translated">你使用<ph id="ph1">`new`</ph>下表中列出的条件根据选择的属性中的函数。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>|Select|Use of new|Example|   |------------|----------------|-------------|   |Single property.|<ph id="ph1">`new`</ph> not needed.|<ph id="ph2">`Select="Category"`</ph>|   |Multiple properties.|<ph id="ph3">`new`</ph> needed.|<ph id="ph4">`Select="new(Cateogry, Name)"`</ph>|   |Single or multiple properties that have an alias.|<ph id="ph5">`new`</ph> needed.|<ph id="ph6">`Select="new(Category As CategoryGroup)"`</ph>|       If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the Select property.</source>
          <target state="translated">|选择 |使用的 new |示例 |  |------------|----------------|-------------|  |单一属性。 |<ph id="ph1">`new`</ph>不需要。 |<ph id="ph2">`Select="Category"`</ph>|  |多个属性。 |<ph id="ph3">`new`</ph>需要。 |<ph id="ph4">`Select="new(Cateogry, Name)"`</ph>|  |一个或多个具有别名的属性。 |<ph id="ph5">`new`</ph>需要。 |<ph id="ph6">`Select="new(Category As CategoryGroup)"`</ph>|      如果你想要启用自动数据修改，但你不希望显示此数据对象中的所有属性，则不要设置选择的属性。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Instead, manage the display through the data-bound control.</source>
          <target state="translated">相反，管理通过数据绑定控件显示。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>When you use the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control or the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, you must also set the &lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt; or the &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">当你使用&lt;xref:System.Web.UI.WebControls.DetailsView&gt;控件或&lt;xref:System.Web.UI.WebControls.GridView&gt;控件，你还必须设置&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;或&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;属性<ph id="ph1">`false`</ph>。&lt;/xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; &lt;/xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt; &lt;/xref:System.Web.UI.WebControls.GridView&gt; &lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
          <target state="translated">数据绑定控件中不显示任何值存储视图状态中。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
          <target state="translated">它们是不变时传递给数据源执行数据更新。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>When you group data in the query, you can include aggregate methods in the Select property.</source>
          <target state="translated">在查询中的数据进行分组，可以在选择属性包含聚合方法。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>You can use the following aggregate methods:      -   <ph id="ph1">`Count()`</ph><ph id="ph2">      -   </ph><ph id="ph3">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph4">`)`</ph><ph id="ph5">      -   </ph><ph id="ph6">`Sum(`</ph> <bpt id="p2">*</bpt>column<ept id="p2">*</ept> <ph id="ph7">`)`</ph><ph id="ph8">      -   </ph><ph id="ph9">`Max(`</ph> <bpt id="p3">*</bpt>column<ept id="p3">*</ept> <ph id="ph10">`)`</ph><ph id="ph11">      -   </ph><ph id="ph12">`Min(`</ph> <bpt id="p4">*</bpt>column<ept id="p4">*</ept> <ph id="ph13">`)`</ph><ph id="ph14">      -   </ph><ph id="ph15">`Where(`</ph> <bpt id="p5">*</bpt>condition<ept id="p5">*</ept> <ph id="ph16">`)`</ph><ph id="ph17">      -   </ph><ph id="ph18">`Any()`</ph><ph id="ph19">      -   </ph><ph id="ph20">`All(`</ph> <bpt id="p6">*</bpt>condition<ept id="p6">*</ept> <ph id="ph21">`)`</ph>       For more information, see <bpt id="p7">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p7">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p8">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p8">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
          <target state="translated">你可以使用以下聚合方法:- <ph id="ph1">`Count()`</ph> <ph id="ph2">      -   </ph> <ph id="ph3">`Average(`</ph> <bpt id="p1">*</bpt>列<ept id="p1">*</ept> <ph id="ph4">`)`</ph> <ph id="ph5">      -   </ph> <ph id="ph6">`Sum(`</ph> <bpt id="p2">*</bpt>列<ept id="p2">*</ept> <ph id="ph7">`)`</ph> <ph id="ph8">      -   </ph> <ph id="ph9">`Max(`</ph> <bpt id="p3">*</bpt>列<ept id="p3">*</ept> <ph id="ph10">`)`</ph> <ph id="ph11">      -   </ph> <ph id="ph12">`Min(`</ph> <bpt id="p4">*</bpt>列<ept id="p4">*</ept> <ph id="ph13">`)`</ph> <ph id="ph14">      -   </ph> <ph id="ph15">`Where(`</ph> <bpt id="p5">*</bpt>条件<ept id="p5">*</ept> <ph id="ph16">`)`</ph> <ph id="ph17">      -   </ph> <ph id="ph18">`Any()`</ph> <ph id="ph19">      -   </ph> <ph id="ph20">`All(`</ph> <bpt id="p6">*</bpt>条件<ept id="p6">*</ept><ph id="ph21">`)`</ph>详细信息，请参阅<bpt id="p7">[</bpt>NIB: LinqDataSource Web 服务器控件概述<ept id="p7">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept>和<bpt id="p8">[</bpt>How to︰ 组和聚合数据使用 LinqDataSource控件<ept id="p8">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the Select property.</source>
          <target state="translated">在您对数据进行分组，你可以纳入<ph id="ph1">`Key`</ph>和<ph id="ph2">`It`</ph>，它们动态创建属性，在选择属性。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>属性是指中或多个用于对数据进行分组的属性的值。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain each unique value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">例如，如果通过名为的属性组<ph id="ph1">`Category`</ph>、<ph id="ph2">`Key`</ph>属性将包含在每个唯一值<ph id="ph3">`Category`</ph>属性。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
          <target state="translated"><ph id="ph1">`It`</ph>属性指的数据分组中的单个记录的集合。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
          <target state="translated">可以循环访问<ph id="ph1">`It`</ph>属性，以检索已经合并分组操作中的单个记录。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">例如，如果通过名为的属性组<ph id="ph1">`Category`</ph>、<ph id="ph2">`It`</ph>属性包含所有的共享中的常见值的单个记录<ph id="ph3">`Category`</ph>属性。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>If you include the <ph id="ph1">`It`</ph> keyword in the Select property when you group data, you must assign an alias to the <ph id="ph2">`It`</ph> keyword.</source>
          <target state="translated">如果包含<ph id="ph1">`It`</ph>中数据进行分组时所选属性的关键字，你必须将分配的别名<ph id="ph2">`It`</ph>关键字。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control will throw an exception if <ph id="ph1">`It`</ph> does not have an alias.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件将引发异常，如果<ph id="ph1">`It`</ph>没有别名。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>You can assign an alias to the <ph id="ph1">`Key`</ph> keyword, but this is not required.</source>
          <target state="translated">你可以分配的别名<ph id="ph1">`Key`</ph>关键字，但这不是必需。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Select clause.</source>
          <target state="translated">一个字符串，用于创建 Select 子句。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Occurs when a data retrieval operation has finished.</source>
          <target state="translated">数据检索操作已完成时发生。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Handle the Selected event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished.</source>
          <target state="translated">处理所选事件捕获从数据检索操作的任何异常或检索操作完成之后检查数据对象。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The object is available from the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object that is passed to event handlers.</source>
          <target state="translated">该对象可用于从&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;传递给事件处理程序的对象。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Occurs before a data-retrieval operation.</source>
          <target state="translated">数据检索操作前发生。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Handle the Selecting event in order to perform the following tasks:      -   Modify parameters for data retrieval.</source>
          <target state="translated">处理选择事件，以便执行以下任务:-修改数据检索的参数。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>-   Generate the query programmatically.</source>
          <target state="translated">以编程方式生成查询。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>-   Modify the values for sorting or paging.</source>
          <target state="translated">-修改排序或分页的值。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>-   Perform custom sorting or paging.</source>
          <target state="translated">-执行自定义排序或分页。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>-   Cancel the data-retrieval operation.</source>
          <target state="translated">-取消该数据检索操作。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; object that is passed to event handlers for this event contains the parameters for the data-retrieval operation.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;为此事件包含该数据检索操作的参数传递到事件处理程序的对象。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>You can modify the parameters in the Selecting event handler before the query executes, or you can create a new result set and assign that to the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt; property.</source>
          <target state="translated">您可以修改选择事件处理程序中的参数，然后执行查询时，也可以创建新的结果集，并指定给&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;.</source>
          <target state="translated">若要实现自定义的排序或此事件处理程序中的分页的能力可能受到控件绑定到&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>For example, when the column header of a &lt;xref:System.Web.UI.WebControls.GridView&gt; control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.</source>
          <target state="translated">例如，当列标题的&lt;xref:System.Web.UI.WebControls.GridView&gt;单击控件，控件将执行自动排序，这可能会的替代任何订单，所以建立在事件处理程序。&lt;/xref:System.Web.UI.WebControls.GridView&gt;</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>If an exception is thrown in an event handler for the Selecting event, you must handle the exception in that event handler.</source>
          <target state="translated">如果选择事件的事件处理中引发异常，则必须处理该事件处理程序中的异常。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The exception will not be passed to an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt; event (through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object).</source>
          <target state="translated">此异常不会传递到事件处理程序&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;事件 (通过&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;属性&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;对象)。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property contains only the exceptions that are thrown after the Selecting event.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;属性包含仅选择事件之后引发的异常。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used during a data-retrieval operation.</source>
          <target state="translated">获取数据检索操作中使用的参数的集合。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses parameters in the SelectParameters collection to create the Select clause at run time.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件 SelectParameters 集合中使用参数在运行时创建 Select 子句。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>You add parameters to the SelectParameters collection when you want to use run-time values in the Select clause.</source>
          <target state="translated">当你想要在 Select 子句中使用运行时的值时，你可以将参数添加到 SelectParameters 集合。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>For example, you can add a parameter to the SelectParameters collection to represent a property in the user's profile.</source>
          <target state="translated">例如，你可以将参数添加到 SelectParameters 集合以表示用户的配置文件中的属性。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>You can then use that property and a value from the data source to calculate a new value.</source>
          <target state="translated">你可以然后使用该属性和值从数据源计算新值。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>If you do not have to set a value at run time in the Select clause, you do not have to use the SelectParameters collection.</source>
          <target state="translated">如果不需要在 Select 子句中的运行时设置一个值，你不需要使用 SelectParameters 集合。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>You can define the properties to retrieve in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property.</source>
          <target state="translated">你可以定义要检索的属性&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>For example, to return the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> values from a database table, set &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; to "FirstName, LastName" without any parameters.</source>
          <target state="translated">例如，若要返回<ph id="ph1">`FirstName`</ph>和<ph id="ph2">`LastName`</ph>从数据库表中的值设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;到"FirstName、 LastName"不带任何参数。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>To set values in the SelectParameters collection, you add a placeholder in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property for the named parameter.</source>
          <target state="translated">若要设置 SelectParameters 集合中的值，则添加中的占位符&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;的命名参数的属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>In the Select clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">在 Select 子句中，作为开头的每个参数名称 @ 符号。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>You cannot use a parameter in the SelectParameters collection to represent a property name.</source>
          <target state="translated">不能使用参数 SelectParameters 集合中表示属性名称。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>To dynamically set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property to the name of a property, create an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event and customize the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property as needed.</source>
          <target state="translated">动态设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;到属性的名称的属性创建的事件处理程序&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;事件和自定义&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;属性根据需要。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The parameters that are used to create the Select clause.</source>
          <target state="translated">用于创建 Select 子句的参数。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</source>
          <target state="translated">获取或设置一个值，该值指示是否应以确保到更新或删除操作之前已由另一个进程不更改数据的视图状态中存储数据源中的数据。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>By default, when update and delete operations have been enabled, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control stores the original values for all the records in view state.</source>
          <target state="translated">默认情况下，当更新和删除操作已启用，&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控制存储在视图状态中的所有记录的原始值。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control stores values for all primary keys and all properties not marked with <ph id="ph1">`UpdateCheck.Never`</ph> in the <ph id="ph2">`Column`</ph> attribute.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控制存储值的所有主键，并且所有属性不都标记为<ph id="ph1">`UpdateCheck.Never`</ph>中<ph id="ph2">`Column`</ph>属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>You set the <ph id="ph1">`UpdateCheck`</ph> property of the <ph id="ph2">`Column`</ph> attribute in the <ph id="ph3">[!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)]</ph>.</source>
          <target state="translated">你设置<ph id="ph1">`UpdateCheck`</ph>属性<ph id="ph2">`Column`</ph>属性中<ph id="ph3">[!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source.</source>
          <target state="translated">LINQ to SQL 更新或删除数据之前，它会检查针对数据源中的当前值在视图状态的值。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>If the values do not match, the data source record has changed.</source>
          <target state="translated">如果值不匹配，则数据源记录已更改。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation.</source>
          <target state="translated">在这种情况下，LINQ to SQL 将引发异常和不继续更新或删除操作。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关 LINQ to SQL 的详细信息，请参阅<bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user.</source>
          <target state="translated">状态视图中存储的原始值可能会导致的页大小变得不必要地大和可以公开给恶意用户的敏感数据。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>You can disable storing values in view state by setting the StoreOriginalValuesInViewState property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">你可以禁用 StoreOriginalValuesInViewState 属性设置为存储视图状态中值<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>If you do this, you must provide your own way to make sure that the data has not changed.</source>
          <target state="translated">如果你这样做，则必须提供您自己的方式，以确保数据未更改。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>If you set the StoreOriginalValuesInViewState property to <ph id="ph1">`false`</ph>, the original values are not persisted in view state for the data-bound control.</source>
          <target state="translated">如果 StoreOriginalValuesInViewState 属性设置为<ph id="ph1">`false`</ph>，原始值不会保留在数据绑定控件的视图状态。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>In that case, LINQ to SQL cannot verify the integrity of the data.</source>
          <target state="translated">在这种情况下，LINQ to SQL 无法验证数据的完整性。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.</source>
          <target state="translated">LINQ to SQL 将引发异常，该值指示数据冲突，即使数据源中的数据实际未更改。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state.</source>
          <target state="translated">如果基础数据源包含更新的过程中自动更新的时间戳字段，你可以存储视图状态中的此值。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>In that case, the timestamp property in the entity class is set to <ph id="ph1">`IsVersion=true`</ph> and all the properties are set to <ph id="ph2">`UpdateCheck.Never`</ph>.</source>
          <target state="translated">在这种情况下，实体类中的时间戳属性设置为<ph id="ph1">`IsVersion=true`</ph>和所有属性都设置为<ph id="ph2">`UpdateCheck.Never`</ph>。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed.</source>
          <target state="translated">因为每次该记录中的这些数据更改时，数据库自动更新时间戳字段，LINQ to SQL 确定从该值中，如果数据已更改。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>This helps reduce the size of view state, and no sensitive data is exposed.</source>
          <target state="translated">这有助于减少视图状态的大小，并且未公开任何敏感数据。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database.</source>
          <target state="translated">LINQ to SQL 数据库中的时间戳值的状态将通过比较时间戳值视图中检查的数据一致性。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity<ept id="p1">](http://msdn.microsoft.com/en-us/e7700162-4f05-4130-81f7-3be1361027fa)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>演练︰ 使用时间戳与 LinqDataSource 控件与检查数据完整性<ept id="p1">](http://msdn.microsoft.com/en-us/e7700162-4f05-4130-81f7-3be1361027fa)</ept>。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the values will be stored in view state; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果将视图中存储值的状态;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <bpt id="p1">&lt;xref href="System.Web.DynamicData.IDynamicDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关此成员的说明，请参阅<bpt id="p1">&lt;xref href="System.Web.DynamicData.IDynamicDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; instance is cast to an &lt;xref:System.Web.DynamicData.IDynamicDataSource&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;实例被强制转换为&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;接口。&lt;/xref:System.Web.DynamicData.IDynamicDataSource&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The type that is associated with the class.</source>
          <target state="translated">与类相关联的类型。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <bpt id="p1">&lt;xref href="System.Web.DynamicData.IDynamicDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有关此成员的说明，请参阅<bpt id="p1">&lt;xref href="System.Web.DynamicData.IDynamicDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; instance is cast to an &lt;xref:System.Web.DynamicData.IDynamicDataSource&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;实例被强制转换为&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;接口。&lt;/xref:System.Web.DynamicData.IDynamicDataSource&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The name of the entity.</source>
          <target state="translated">实体的名称。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the property or field in the data context class that represents a data collection.</source>
          <target state="translated">获取或设置表示数据收集的数据上下文类中属性或字段的名称。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Set the TableName property to the name of the property or field that represents the data that you want to retrieve.</source>
          <target state="translated">TableName 属性设置为属性或字段来代表你想要检索的数据的名称。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>When you are connecting to a database table, the name of the property is usually the same as the name of the table.</source>
          <target state="translated">当连接到数据库表时，属性的名称通常是表的名称相同。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>When you are connecting to an in-memory data collection, set the TableName property to the name of the property or field that returns the data collection.</source>
          <target state="translated">当连接到内存中的数据集合时，设置为属性或字段的返回数据集合的名称 TableName 属性。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>You can assign a property that returns any type to the TableName property for retrieval operations.</source>
          <target state="translated">你可以分配的 TableName 属性进行检索操作返回任何类型的属性。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>If the object that is represented by the property does not implement &lt;xref:System.Collections.IEnumerable&gt;, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control will automatically wrap the object in an instance of an &lt;xref:System.Collections.IEnumerable&gt; object.</source>
          <target state="translated">如果由属性表示的对象不实现&lt;xref:System.Collections.IEnumerable&gt;、&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件将自动包装该对象的实例中&lt;xref:System.Collections.IEnumerable&gt;对象。&lt;/xref:System.Collections.IEnumerable&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt; &lt;/xref:System.Collections.IEnumerable&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>To enable automatic update, insert, or delete operations, the class that is assigned to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property must derive from &lt;xref:System.Data.Linq.DataContext&gt; and the property that is assigned to the TableName property must derive from &lt;xref:System.Data.Linq.Table%601&gt;.</source>
          <target state="translated">若要启用自动更新、 插入或删除操作，分配给&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;属性必须从&lt;xref:System.Data.Linq.DataContext&gt;和属性分配给属性必须派生自&lt;xref:System.Data.Linq.Table%601&gt;.&lt;/xref:System.Data.Linq.Table%601&gt; TableName&lt;/xref:System.Data.Linq.DataContext&gt;派生&lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;的类</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>For information about how to select data from an instance of a class, see the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt; property.</source>
          <target state="translated">有关如何从一个类的实例中选择数据的信息，请参阅&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>A string that contains the name of the property that contains the data collection.</source>
          <target state="translated">包含包含数据收集属性的名称的字符串。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Performs an update operation.</source>
          <target state="translated">执行更新操作。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Typically, you do not have to call the Update method from your code.</source>
          <target state="translated">通常情况下，无需在代码中调用 Update 方法。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The data-bound control will automatically call the Update method when the user takes action to update a record.</source>
          <target state="translated">当用户执行操作以更新记录时，数据绑定控件将自动调用更新方法。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>You explicitly call the Update method when you want to create your own process for updating data.</source>
          <target state="translated">当你想要创建你自己的过程用于更新数据时，显式调用更新方法。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The row key values for the records to be updated.</source>
          <target state="translated">要更新的记录行键值。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The row values to be updated in the data source.</source>
          <target state="translated">在数据源中更新行值。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The row values that are evaluated to detect data conflicts.</source>
          <target state="translated">计算以检测数据冲突行值。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>The number of records affected by the update operation.</source>
          <target state="translated">更新操作所影响的记录数。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Occurs when an update operation has finished.</source>
          <target state="translated">更新操作已完成时发生。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Handle the Updated event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished.</source>
          <target state="translated">处理更新事件捕获从更新操作的任何异常或更新操作完成之后检查输出参数的值。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The output parameters are available from the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object that is passed to event handlers.</source>
          <target state="translated">输出参数均可用从&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;传递给事件处理程序的对象。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>This collection is not used by the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">不使用此集合<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>A collection of parameters.</source>
          <target state="translated">参数的集合。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Occurs before an update operation.</source>
          <target state="translated">在更新操作之前发生。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Handle the Updating event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation.</source>
          <target state="translated">处理更新事件以验证更新，以检查数据类，若要更改的值早更新操作，或取消更新操作中的数据验证错误的对象。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; object that is passed to event handlers contains both the original object and the updated object.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;传递给事件处理程序的对象包含对原始对象和更新的对象。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>If a validation error occurs during the update operation, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; object contains the validation exceptions that are thrown by the data class.</source>
          <target state="translated">如果&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;对象包含验证异常由数据类。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;在更新操作期间发生验证错误</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
          <target state="translated">如果要更新的值与在数据类中，属性的类型不匹配或未通过自定义的验证检查，将发生验证错误。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>In an event handler for the Updating event, you can retrieve the validation exceptions and take appropriate action.</source>
          <target state="translated">在更新事件的事件处理程序，可以检索验证异常，并采取相应的操作。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>If an exception is thrown in an event handler for the Updating event, you must handle the exception in that event handler.</source>
          <target state="translated">如果正在更新事件的事件处理中引发异常，则必须处理该事件处理程序中的异常。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The exception will not be passed to an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt; event (through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object).</source>
          <target state="translated">此异常不会传递到事件处理程序&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;事件 (通过&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;属性&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;对象)。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property contains only the exceptions that are thrown after the Updating event.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;属性包含在更新事件后引发异常。&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</source>
          <target state="translated">获取或设置一个值，指定哪些条件必须为适用于要包括在检索到的数据的记录。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Where clause.</source>
          <target state="translated">一个字符串来创建 Where 子句。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that is used to create the Where clause.</source>
          <target state="translated">获取参数的集合，用于创建 Where 子句。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses parameters in the WhereParameters collection to create the Where clause at run time.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;控件 WhereParameters 集合中使用参数创建 Where 子句在运行时。&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>You add parameters to the WhereParameters collection when you want to programmatically set one or more of the conditions in the Where clause.</source>
          <target state="translated">你需要将参数添加到 WhereParameters 集合，当你想要以编程方式将一个或多个条件设置在 Where 子句。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>For example, you might search a database table for records with a last name equal to the value of a &lt;xref:System.Web.UI.WebControls.TextBox&gt; control.</source>
          <target state="translated">例如，您可能在其中搜索姓氏等于的值的记录的数据库表&lt;xref:System.Web.UI.WebControls.TextBox&gt;控件。&lt;/xref:System.Web.UI.WebControls.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>In that case, you add a parameter to the WhereParameters collection for the text box value.</source>
          <target state="translated">在这种情况下，将参数添加到文本框的值的 WhereParameters 集合。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>If you do not have to set a value at run time in the Where clause, you do not have to use the WhereParameters collection.</source>
          <target state="translated">如果不需要在运行时设置一个值，在 Where 子句，则不需要使用 WhereParameters 集合。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>You can define the fields to retrieve in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property.</source>
          <target state="translated">你可以定义的字段中检索&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>For example, to return values from a database table where <ph id="ph1">`LastName`</ph> equals "Adams" in markup, set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property to <ph id="ph2">`'LastName = "Adams"'`</ph> without any parameters.</source>
          <target state="translated">例如，若要从数据库表中返回其中<ph id="ph1">`LastName`</ph>等于"Adams"在标记中，设置&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;属性<ph id="ph2">`'LastName = "Adams"'`</ph>不带任何参数。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>To set values in the WhereParameters collection, you assign a name to each parameter and then add a placeholder in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property for that parameter.</source>
          <target state="translated">若要设置 WhereParameters 集合中的值，将名称分配给每个参数，并将中的占位符&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;为该参数的属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>In the Where clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">在 Where 子句中，在与每个参数名之前 @ 符号。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>A collection of the parameters that are used to create the Where clause in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where*&gt; property.</source>
          <target state="translated">用于创建 Where 参数的集合中的子句&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where*&gt;属性。&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>