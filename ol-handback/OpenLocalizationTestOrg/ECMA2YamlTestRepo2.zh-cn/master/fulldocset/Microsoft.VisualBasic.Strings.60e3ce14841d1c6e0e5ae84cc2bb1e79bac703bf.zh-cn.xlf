<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">835d48ef298d118f4c72e7888f734da0ad8b1b49</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.Strings.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54afeab5fd817282b85b0a2a760e1b66fd1a6c9c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4989b6f0d59887429b4198491c25b76544368f0d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Strings" name="Strings" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> module contains procedures used to perform string operations.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Strings" name="Strings" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>模块包含用于执行字符串操作的过程。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This module supports the Visual Basic language keywords and run-time library members that manipulate strings.</source>
          <target state="translated">此模块支持的 Visual Basic 语言关键字和操作字符串的运行时库成员。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值表示为字符相对应的字符代码。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph>返回<bpt id="p1">*</bpt>代码点<ept id="p1">*</ept>，或输入的字符的字符代码。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">这可以是 0 到 255 的单字节字符集 (SBCS) 值和-32768 到 32767 之间的双字节字符集 (dbcs) 值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph>返回输入的字符的 Unicode 码位。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This can be 0 through 65535.</source>
          <target state="translated">这可以是 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">返回的值是独立于当前线程的区域性和代码页设置。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`AscB`</ph>的 Visual Basic 早期版本的函数返回一个字节，而不是一个字符的代码。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">所有 Visual Basic 2005 字符串都都以 unicode 格式，和<ph id="ph1">`AscB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, only the first character of the string is used for input.</source>
          <target state="translated">如果<ph id="ph1">`String`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式，仅字符串的第一个字符用于输入。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or contains no characters, an &lt;xref:System.ArgumentException&gt; error occurs.</source>
          <target state="translated">如果<ph id="ph1">`String`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或不包含任何字符，&lt;xref:System.ArgumentException&gt;发生错误。&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值表示为字符相对应的字符代码。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值表示为字符相对应的字符代码。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph>返回<bpt id="p1">*</bpt>代码点<ept id="p1">*</ept>，或输入的字符的字符代码。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">这可以是 0 到 255 的单字节字符集 (SBCS) 值和-32768 到 32767 之间的双字节字符集 (dbcs) 值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph>返回输入的字符的 Unicode 码位。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This can be 0 through 65535.</source>
          <target state="translated">这可以是 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">返回的值是独立于当前线程的区域性和代码页设置。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`AscB`</ph>的 Visual Basic 早期版本的函数返回一个字节，而不是一个字符的代码。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">所有 Visual Basic 2005 字符串都都以 unicode 格式，和<ph id="ph1">`AscB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, only the first character of the string is used for input.</source>
          <target state="translated">如果<ph id="ph1">`String`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式，仅字符串的第一个字符用于输入。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or contains no characters, an &lt;xref:System.ArgumentException&gt; error occurs.</source>
          <target state="translated">如果<ph id="ph1">`String`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或不包含任何字符，&lt;xref:System.ArgumentException&gt;发生错误。&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值表示为字符相对应的字符代码。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值表示为字符相对应的字符代码。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph>返回<bpt id="p1">*</bpt>代码点<ept id="p1">*</ept>，或输入的字符的字符代码。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">这可以是 0 到 255 的单字节字符集 (SBCS) 值和-32768 到 32767 之间的双字节字符集 (dbcs) 值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph>返回输入的字符的 Unicode 码位。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This can be 0 through 65535.</source>
          <target state="translated">这可以是 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">返回的值是独立于当前线程的区域性和代码页设置。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`AscB`</ph>的 Visual Basic 早期版本的函数返回一个字节，而不是一个字符的代码。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">所有 Visual Basic 2005 字符串都都以 unicode 格式，和<ph id="ph1">`AscB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, only the first character of the string is used for input.</source>
          <target state="translated">如果<ph id="ph1">`String`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式，仅字符串的第一个字符用于输入。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or contains no characters, an &lt;xref:System.ArgumentException&gt; error occurs.</source>
          <target state="translated">如果<ph id="ph1">`String`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或不包含任何字符，&lt;xref:System.ArgumentException&gt;发生错误。&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值表示为字符相对应的字符代码。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值表示为字符相对应的字符代码。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph>返回<bpt id="p1">*</bpt>代码点<ept id="p1">*</ept>，或输入的字符的字符代码。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">这可以是 0 到 255 的单字节字符集 (SBCS) 值和-32768 到 32767 之间的双字节字符集 (dbcs) 值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph>返回输入的字符的 Unicode 码位。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This can be 0 through 65535.</source>
          <target state="translated">这可以是 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">返回的值是独立于当前线程的区域性和代码页设置。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`AscB`</ph>的 Visual Basic 早期版本的函数返回一个字节，而不是一个字符的代码。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">所有 Visual Basic 2005 字符串都都以 unicode 格式，和<ph id="ph1">`AscB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, only the first character of the string is used for input.</source>
          <target state="translated">如果<ph id="ph1">`String`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式，仅字符串的第一个字符用于输入。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or contains no characters, an &lt;xref:System.ArgumentException&gt; error occurs.</source>
          <target state="translated">如果<ph id="ph1">`String`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或不包含任何字符，&lt;xref:System.ArgumentException&gt;发生错误。&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值表示为字符相对应的字符代码。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">返回与指定的字符代码关联的字符。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The asymmetric range accepted for <ph id="ph1">`CharCode`</ph> compensates for the storage differences between the <ph id="ph2">`Short`</ph> and the <ph id="ph3">`Integer`</ph>.</source>
          <target state="translated">非对称的范围已接受的针对<ph id="ph1">`CharCode`</ph>补偿存储之间的差异<ph id="ph2">`Short`</ph>和<ph id="ph3">`Integer`</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, -29183 is a <ph id="ph1">`Short`</ph> but +36353 is an <ph id="ph2">`Integer`</ph>.</source>
          <target state="translated">例如，-29183 是<ph id="ph1">`Short`</ph>但 +&amp;36353; 为<ph id="ph2">`Integer`</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This also facilitates compatibility with Visual Basic 6.0.</source>
          <target state="translated">这也便于与 Visual Basic 6.0 兼容性。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Chr`</ph> uses the &lt;xref:System.Text.Encoding&gt; class in the &lt;xref:System.Text?displayProperty=fullName&gt; namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</source>
          <target state="translated"><ph id="ph1">`Chr`</ph>使用&lt;xref:System.Text.Encoding&gt;类&lt;xref:System.Text?displayProperty=fullName&gt;命名空间，以确定当前线程是否使用单字节字符集 (SBCS) 或双字节字符设置 (DBCS)。&lt;/xref:System.Text?displayProperty=fullName&gt; &lt;/xref:System.Text.Encoding&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>It then takes <ph id="ph1">`CharCode`</ph> as a code point in the appropriate set.</source>
          <target state="translated">这就需要花费<ph id="ph1">`CharCode`</ph>作为代码点中相应的一组。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</source>
          <target state="translated">范围可以是 0 到 255 SBCS 字符和-32768 到 65535 的 DBCS 字符。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The returned value depends on the code page for the current thread, which is contained in the &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt; property of the &lt;xref:System.Globalization.TextInfo&gt; class in the &lt;xref:System.Globalization&gt; namespace.</source>
          <target state="translated">返回的值取决于当前线程中包含的代码页&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;属性&lt;xref:System.Globalization.TextInfo&gt;类&lt;xref:System.Globalization&gt;命名空间。&lt;/xref:System.Globalization&gt; &lt;/xref:System.Globalization.TextInfo&gt; &lt;/xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can obtain &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt; by specifying <ph id="ph1">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.</source>
          <target state="translated">你可以获取&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;通过指定<ph id="ph1">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>。&lt;/xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ChrW`</ph> takes <ph id="ph2">`CharCode`</ph> as a Unicode code point.</source>
          <target state="translated"><ph id="ph1">`ChrW`</ph>采用<ph id="ph2">`CharCode`</ph>为 Unicode 码位。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The range is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">范围是独立于当前线程的区域性和代码页设置。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</source>
          <target state="translated">32768 到-1 的值的处理方式范围&amp;32768; 到方式中的值相同。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</source>
          <target state="translated">从 0 到 31 的数字是标准不能打印的 ASCII 代码相同。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Chr(10)`</ph> returns a line feed character.</source>
          <target state="translated">例如，<ph id="ph1">`Chr(10)`</ph>返回以换行符。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`ChrB`</ph> function in earlier versions of Visual Basic returns a single byte.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`ChrB`</ph>在早期版本的 Visual Basic 中的函数返回一个字节。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>All strings in Visual Basic and the .NET Framework are in Unicode, and <ph id="ph1">`ChrB`</ph> is no longer supported.</source>
          <target state="translated">Visual Basic 和.NET Framework 中的所有字符串都都以 unicode 格式，和<ph id="ph1">`ChrB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression representing the <ph id="ph1">`code point`</ph>, or character code, for the character.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表达式表示<ph id="ph1">`code point`</ph>，或字符代码的字符。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">返回与指定的字符代码关联的字符。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;CharCode&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 or <ph id="ph3">&amp;gt;</ph> 255 for <bpt id="p1">&lt;xref uid="langword_csharp_Chr" name="Chr" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;CharCode&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 0 or <ph id="ph3">&amp;gt;</ph> 255 for <bpt id="p1">&lt;xref uid="langword_csharp_Chr" name="Chr" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">返回与指定的字符代码关联的字符。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The asymmetric range accepted for <ph id="ph1">`CharCode`</ph> compensates for the storage differences between the <ph id="ph2">`Short`</ph> and the <ph id="ph3">`Integer`</ph>.</source>
          <target state="translated">非对称的范围已接受的针对<ph id="ph1">`CharCode`</ph>补偿存储之间的差异<ph id="ph2">`Short`</ph>和<ph id="ph3">`Integer`</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example, -29183 is a <ph id="ph1">`Short`</ph> but +36353 is an <ph id="ph2">`Integer`</ph>.</source>
          <target state="translated">例如，-29183 是<ph id="ph1">`Short`</ph>但 +&amp;36353; 为<ph id="ph2">`Integer`</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This also facilitates compatibility with Visual Basic 6.0.</source>
          <target state="translated">这也便于与 Visual Basic 6.0 兼容性。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Chr`</ph> uses the &lt;xref:System.Text.Encoding&gt; class in the &lt;xref:System.Text?displayProperty=fullName&gt; namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</source>
          <target state="translated"><ph id="ph1">`Chr`</ph>使用&lt;xref:System.Text.Encoding&gt;类&lt;xref:System.Text?displayProperty=fullName&gt;命名空间，以确定当前线程是否使用单字节字符集 (SBCS) 或双字节字符设置 (DBCS)。&lt;/xref:System.Text?displayProperty=fullName&gt; &lt;/xref:System.Text.Encoding&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>It then takes <ph id="ph1">`CharCode`</ph> as a code point in the appropriate set.</source>
          <target state="translated">这就需要花费<ph id="ph1">`CharCode`</ph>作为代码点中相应的一组。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</source>
          <target state="translated">范围可以是 0 到 255 SBCS 字符和-32768 到 65535 的 DBCS 字符。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The returned value depends on the code page for the current thread, which is contained in the &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt; property of the &lt;xref:System.Globalization.TextInfo&gt; class in the &lt;xref:System.Globalization&gt; namespace.</source>
          <target state="translated">返回的值取决于当前线程中包含的代码页&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;属性&lt;xref:System.Globalization.TextInfo&gt;类&lt;xref:System.Globalization&gt;命名空间。&lt;/xref:System.Globalization&gt; &lt;/xref:System.Globalization.TextInfo&gt; &lt;/xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You can obtain &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt; by specifying <ph id="ph1">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.</source>
          <target state="translated">你可以获取&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;通过指定<ph id="ph1">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>。&lt;/xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ChrW`</ph> takes <ph id="ph2">`CharCode`</ph> as a Unicode code point.</source>
          <target state="translated"><ph id="ph1">`ChrW`</ph>采用<ph id="ph2">`CharCode`</ph>为 Unicode 码位。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The range is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">范围是独立于当前线程的区域性和代码页设置。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</source>
          <target state="translated">32768 到-1 的值的处理方式范围&amp;32768; 到方式中的值相同。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</source>
          <target state="translated">从 0 到 31 的数字是标准不能打印的 ASCII 代码相同。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Chr(10)`</ph> returns a line feed character.</source>
          <target state="translated">例如，<ph id="ph1">`Chr(10)`</ph>返回以换行符。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`ChrB`</ph> function in earlier versions of Visual Basic returns a single byte.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`ChrB`</ph>在早期版本的 Visual Basic 中的函数返回一个字节。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>All strings in Visual Basic and the .NET Framework are in Unicode, and <ph id="ph1">`ChrB`</ph> is no longer supported.</source>
          <target state="translated">Visual Basic 和.NET Framework 中的所有字符串都都以 unicode 格式，和<ph id="ph1">`ChrB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression representing the <ph id="ph1">`code point`</ph>, or character code, for the character.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表达式表示<ph id="ph1">`code point`</ph>，或字符代码的字符。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">返回与指定的字符代码关联的字符。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;CharCode&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> -32768 or <ph id="ph3">&amp;gt;</ph> 65535 for <bpt id="p1">&lt;xref uid="langword_csharp_ChrW" name="ChrW" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;CharCode&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> -32768 or <ph id="ph3">&amp;gt;</ph> 65535 for <bpt id="p1">&lt;xref uid="langword_csharp_ChrW" name="ChrW" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Returns a zero-based array containing a subset of a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array based on specified filter criteria.</source>
          <target state="translated">返回一个从零开始的数组，包含的子集<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>数组基于指定的筛选器条件。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If no matches of <ph id="ph1">`Match`</ph> are found within <ph id="ph2">`Source`</ph>, the <ph id="ph3">`Filter`</ph> function returns an empty array.</source>
          <target state="translated">如果没有匹配项的<ph id="ph1">`Match`</ph>内找到<ph id="ph2">`Source`</ph>、<ph id="ph3">`Filter`</ph>函数返回一个空数组。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An error occurs if <ph id="ph1">`Source`</ph> is set to <ph id="ph2">`Nothing`</ph> or is not a one-dimensional array.</source>
          <target state="translated">如果发生错误<ph id="ph1">`Source`</ph>设置为<ph id="ph2">`Nothing`</ph>或不是一维数组。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The array returned by the <ph id="ph1">`Filter`</ph> function contains only enough elements to contain the number of matched items.</source>
          <target state="translated">返回的数组<ph id="ph1">`Filter`</ph>函数仅包含足够的元素以包含匹配项的数目。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>自变量可以具有下列值。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`CompareMethod.Binary`</ph>|Performs a binary comparison|   |<ph id="ph2">`CompareMethod.Text`</ph>|Performs a textual comparison|</source>
          <target state="translated">|||  |-|-|  |常量 |说明 |  |<ph id="ph1">`CompareMethod.Binary`</ph>|执行二进制比较 |  |<ph id="ph2">`CompareMethod.Text`</ph>|执行文本比较 |</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>One-dimensional array of strings to be searched.</source>
          <target state="translated">要搜索的字符串的一维数组。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>String to search for.</source>
          <target state="translated">要搜索的字符串。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether to return substrings that include or exclude <ph id="ph1">`Match`</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值指示是否返回包含或排除的子字符串<ph id="ph1">`Match`</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Include`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the subset of the array that contains <ph id="ph2">`Match`</ph> as a substring.</source>
          <target state="translated">如果<ph id="ph1">`Include`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回的数组，其中包含子集<ph id="ph2">`Match`</ph>作为子字符串。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Include`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the subset of the array that does not contain <ph id="ph2">`Match`</ph> as a substring.</source>
          <target state="translated">如果<ph id="ph1">`Include`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回的数组不包含子集<ph id="ph2">`Match`</ph>作为子字符串。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Numeric value indicating the kind of string comparison to use.</source>
          <target state="translated">数字值，该值指示要使用的字符串比较的类型。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">值，请参阅"设置"。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns a zero-based array containing a subset of a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array based on specified filter criteria.</source>
          <target state="translated">返回一个从零开始的数组，包含的子集<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>数组基于指定的筛选器条件。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Source&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or is not a one-dimensional array.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Source&lt;/code&gt;</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或不是一维数组。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Returns a zero-based array containing a subset of a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array based on specified filter criteria.</source>
          <target state="translated">返回一个从零开始的数组，包含的子集<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>数组基于指定的筛选器条件。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If no matches of <ph id="ph1">`Match`</ph> are found within <ph id="ph2">`Source`</ph>, the <ph id="ph3">`Filter`</ph> function returns an empty array.</source>
          <target state="translated">如果没有匹配项的<ph id="ph1">`Match`</ph>内找到<ph id="ph2">`Source`</ph>、<ph id="ph3">`Filter`</ph>函数返回一个空数组。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>An error occurs if <ph id="ph1">`Source`</ph> is set to <ph id="ph2">`Nothing`</ph> or is not a one-dimensional array.</source>
          <target state="translated">如果发生错误<ph id="ph1">`Source`</ph>设置为<ph id="ph2">`Nothing`</ph>或不是一维数组。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The array returned by the <ph id="ph1">`Filter`</ph> function contains only enough elements to contain the number of matched items.</source>
          <target state="translated">返回的数组<ph id="ph1">`Filter`</ph>函数仅包含足够的元素以包含匹配项的数目。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>自变量可以具有下列值。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`CompareMethod.Binary`</ph>|Performs a binary comparison|   |<ph id="ph2">`CompareMethod.Text`</ph>|Performs a textual comparison|</source>
          <target state="translated">|||  |-|-|  |常量 |说明 |  |<ph id="ph1">`CompareMethod.Binary`</ph>|执行二进制比较 |  |<ph id="ph2">`CompareMethod.Text`</ph>|执行文本比较 |</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>One-dimensional array of strings to be searched.</source>
          <target state="translated">要搜索的字符串的一维数组。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>String to search for.</source>
          <target state="translated">要搜索的字符串。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether to return substrings that include or exclude <ph id="ph1">`Match`</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，该值指示是否返回包含或排除的子字符串<ph id="ph1">`Match`</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Include`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the subset of the array that contains <ph id="ph2">`Match`</ph> as a substring.</source>
          <target state="translated">如果<ph id="ph1">`Include`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回的数组，其中包含子集<ph id="ph2">`Match`</ph>作为子字符串。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Include`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the subset of the array that does not contain <ph id="ph2">`Match`</ph> as a substring.</source>
          <target state="translated">如果<ph id="ph1">`Include`</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回的数组不包含子集<ph id="ph2">`Match`</ph>作为子字符串。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Numeric value indicating the kind of string comparison to use.</source>
          <target state="translated">数字值，该值指示要使用的字符串比较的类型。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">值，请参阅"设置"。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Returns a zero-based array containing a subset of a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array based on specified filter criteria.</source>
          <target state="translated">返回一个从零开始的数组，包含的子集<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>数组基于指定的筛选器条件。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Source&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or is not a one-dimensional array.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Source&lt;/code&gt;</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或不是一维数组。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Returns a string formatted according to instructions contained in a format <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">返回根据格式中包含的说明设置格式的字符串<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Any valid expression.</source>
          <target state="translated">任何有效表达式。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A valid named or user-defined format <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">有效的已命名的或用户定义格式<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Returns a string formatted according to instructions contained in a format <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">返回根据格式中包含的说明设置格式的字符串<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</source>
          <target state="translated">返回格式设置为使用系统控制面板中定义的货币符号的货币值的表达式。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>When one or more optional arguments are omitted, the computer's matching regional-settings values are used instead.</source>
          <target state="translated">当省略一个或多个可选参数时，将改为使用计算机的匹配区域设置值。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The position of the currency symbol relative to the currency value is determined by the system's regional settings.</source>
          <target state="translated">相对于货币值的货币符号的位置取决于系统的区域设置。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  All settings information comes from the locale of the application.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 来自应用程序的区域设置的所有设置信息。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">默认情况下，将在控制面板中设置的区域设置。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>However, it may be changed programmatically by using the .NET Framework, except leading zero, which comes from the <ph id="ph1">`Number`</ph> tab.</source>
          <target state="translated">但是，可能通过来更改它以编程方式使用.NET Framework 中，除前导零，来自<ph id="ph1">`Number`</ph>选项卡。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments take the following TriState enumeration values.</source>
          <target state="translated"><ph id="ph1">`IncludeLeadingDigit`</ph>， <ph id="ph2">`UseParensForNegativeNumbers`</ph>，和<ph id="ph3">`GroupDigits`</ph>参数采用以下三态枚举值。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Value|Description|   |<ph id="ph1">`TriState.True`</ph>|True|   |<ph id="ph2">`TriState.False`</ph>|False|   |<ph id="ph3">`TriState.UseDefault`</ph>|The computer's regional settings|</source>
          <target state="translated">|||  |-|-|  |值 |说明 |  |<ph id="ph1">`TriState.True`</ph>|True |  |<ph id="ph2">`TriState.False`</ph>|False |  |<ph id="ph3">`TriState.UseDefault`</ph>|计算机的区域设置 |</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Expression to be formatted.</source>
          <target state="translated">要设置格式的表达式。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Numeric value indicating how many places are displayed to the right of the decimal.</source>
          <target state="translated">指示小数点右侧显示的多少位的数字值。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Default value is –1, which indicates that the computer's regional settings are used.</source>
          <target state="translated">默认值为-1，指示将使用计算机的区域设置。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates whether or not a leading zero is displayed for fractional values.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>枚举，指示显示小数值的前导零。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>See "Remarks" for values.</source>
          <target state="translated">值，请参阅"备注"。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates whether or not to place negative values within parentheses.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>枚举，指示将放在括号内的负值。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>See "Remarks" for values.</source>
          <target state="translated">值，请参阅"备注"。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>枚举，指示使用计算机的区域设置中指定的组分隔符对数字进行分组。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>See "Remarks" for values.</source>
          <target state="translated">值，请参阅"备注"。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</source>
          <target state="translated">返回格式设置为使用系统控制面板中定义的货币符号的货币值的表达式。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Number of digits after decimal point is greater than 99.</source>
          <target state="translated">小数点后的数字个数将大于 99。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Type is not numeric.</source>
          <target state="translated">类型不是数值。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Returns a string expression representing a date/time value.</source>
          <target state="translated">返回表示日期/时间值的字符串表达式。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Date`</ph> data type always contains both date and time information.</source>
          <target state="translated"><ph id="ph1">`Date`</ph>数据类型始终包含日期和时间信息。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For purposes of type conversion, Visual Basic considers 1/1/1 (January 1 of the year 1) to be a neutral value for the date, and 00:00:00 (midnight) to be a neutral value for the time.</source>
          <target state="translated">为进行类型转换，Visual Basic 将 1/1/1 (1 月 1 年 1) 作为非特定值作为时间的日期和 00:00:00 （午夜） 的非特定值。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>If you format a <ph id="ph1">`Date`</ph> value as a date/time string, <ph id="ph2">`FormatDateTime`</ph> does not include neutral values in the resulting string.</source>
          <target state="translated">如果你设置的格式<ph id="ph1">`Date`</ph>为日期/时间字符串，值<ph id="ph2">`FormatDateTime`</ph>不结果字符串中包括非特定值。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>For example, if you convert #1/1/0001 9:30:00# to a string, the result is "9:30:00 AM"; the date information is suppressed.</source>
          <target state="translated">例如，如果转换 #1/1/&amp;#0001; 为一个字符串，结果是"9:30:00 AM"; 的 9:30:00取消显示的日期信息。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>However, the date information is still present in the original <ph id="ph1">`Date`</ph> value and can be recovered with functions such as <ph id="ph2">`DatePart`</ph>.</source>
          <target state="translated">但是，日期信息是仍然存在于原始<ph id="ph1">`Date`</ph>值，并可以使用函数如恢复<ph id="ph2">`DatePart`</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you pass the <ph id="ph2">`Expression`</ph> argument as a <ph id="ph3">`String`</ph> literal, <ph id="ph4">`FormatDateTime`</ph> interprets it according to the &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; setting of your application.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 如果传递<ph id="ph2">`Expression`</ph>自变量作为<ph id="ph3">`String`</ph>文本，<ph id="ph4">`FormatDateTime`</ph>将根据其解释&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;设置你的应用程序。&lt;/xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>However, if you pass it as a <ph id="ph1">`Date`</ph> literal, use the format #mm/dd/yyyy#, because <ph id="ph2">`FormatDateTime`</ph> always interprets a <ph id="ph3">`Date`</ph> literal according to the English (US) culture.</source>
          <target state="translated">但是，如果将其作为传递<ph id="ph1">`Date`</ph>文本，使用格式 #mm/dd/yyyy # 中，因为<ph id="ph2">`FormatDateTime`</ph>总是将解释<ph id="ph3">`Date`</ph>文本根据英语 （美国） 区域性。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This is necessary because, if an application is developed and coded using <ph id="ph1">`Date`</ph> literals from one culture, but is then executed on a platform with a different culture, the <ph id="ph2">`Date`</ph> literals could be parsed incorrectly.</source>
          <target state="translated">这是必需的因为如果应用程序进行开发和编码使用<ph id="ph1">`Date`</ph>从一个文本的区域性，但具有不同区域性的平台上然后执行<ph id="ph2">`Date`</ph>无法正确地分析文本。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`NamedFormat`</ph> argument has the following settings.</source>
          <target state="translated"><ph id="ph1">`NamedFormat`</ph>自变量具有以下设置。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`DateFormat.GeneralDate`</ph>|Display a date and/or time.</source>
          <target state="translated">|||  |-|-|  |常量 |说明 |  |<ph id="ph1">`DateFormat.GeneralDate`</ph>|显示日期和/或时间。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Display a date part as a short date.</source>
          <target state="translated">显示为短日期的日期部分。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>If there is a time part, display it as a long time.</source>
          <target state="translated">如果没有时间部分，则将它显示为长时间。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If present, both parts display.|   |<ph id="ph1">`DateFormat.LongDate`</ph>|Display a date using the long date format specified in your computer's regional settings.|   |<ph id="ph2">`DateFormat.ShortDate`</ph>|Display a date using the short date format specified in your computer's regional settings.|   |<ph id="ph3">`DateFormat.LongTime`</ph>|Display a time using the time format specified in your computer's regional settings.|   |<ph id="ph4">`DateFormat.ShortTime`</ph>|Display a time using the 24-hour format (hh:mm).|</source>
          <target state="translated">如果存在，这两个部分都显示。 |  |<ph id="ph1">`DateFormat.LongDate`</ph>|使用你的计算机的区域设置中指定的长日期格式显示日期。 |  |<ph id="ph2">`DateFormat.ShortDate`</ph>|使用你的计算机的区域设置中指定的短日期格式显示日期。 |  |<ph id="ph3">`DateFormat.LongTime`</ph>|使用你的计算机的区域设置中指定的时间格式来显示时间。 |  |<ph id="ph4">`DateFormat.ShortTime`</ph>|显示时间使用 24 小时格式 (hh: mm)。 |</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression to be formatted.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要设置格式的表达式。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Numeric value that indicates the date/time format used.</source>
          <target state="translated">使用数字值，该值指示日期/时间格式。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>If omitted, <bpt id="p1">&lt;xref uid="langword_csharp_DateFormat.GeneralDate" name="DateFormat.GeneralDate" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">如果省略， <bpt id="p1">&lt;xref uid="langword_csharp_DateFormat.GeneralDate" name="DateFormat.GeneralDate" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Returns a string expression representing a date/time value.</source>
          <target state="translated">返回表示日期/时间值的字符串表达式。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;NamedFormat&lt;/code&gt;</ph> setting is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;NamedFormat&lt;/code&gt;</ph>设置无效。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a number.</source>
          <target state="translated">返回数字形式的格式设置的表达式。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>When one or more optional arguments are omitted the values for omitted arguments are provided by the locale settings.</source>
          <target state="translated">当省略一个或多个可选参数时省略自变量的值是由区域设置中提供。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  All settings information comes from the locale of the application.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 来自应用程序的区域设置的所有设置信息。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">默认情况下，将在控制面板中设置的区域设置。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>However, it may be changed programmatically by using the .NET Framework.</source>
          <target state="translated">但是，可能通过来更改它以编程方式使用.NET Framework。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments have the following settings.</source>
          <target state="translated"><ph id="ph1">`IncludeLeadingDigit`</ph>， <ph id="ph2">`UseParensForNegativeNumbers`</ph>，和<ph id="ph3">`GroupDigits`</ph>参数具有以下设置。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`TriState.True`</ph>|True|   |<ph id="ph2">`TriState.False`</ph>|False|   |<ph id="ph3">`TriState.UseDefault`</ph>|The computer's regional settings|</source>
          <target state="translated">|||  |-|-|  |常量 |说明 |  |<ph id="ph1">`TriState.True`</ph>|True |  |<ph id="ph2">`TriState.False`</ph>|False |  |<ph id="ph3">`TriState.UseDefault`</ph>|计算机的区域设置 |</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Expression to be formatted.</source>
          <target state="translated">要设置格式的表达式。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Numeric value indicating how many places are displayed to the right of the decimal.</source>
          <target state="translated">指示小数点右侧显示的多少位的数字值。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The default value is –1, which indicates that the computer's regional settings are used.</source>
          <target state="translated">默认值为-1，指示将使用计算机的区域设置。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether a leading 0 is displayed for fractional values.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指示是否显示小数值的前导 0 的常量。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">值，请参阅"设置"。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether to place negative values within parentheses.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>常量，指示是否要将放在括号内的负值。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">值，请参阅"设置"。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>常量，指示使用的区域设置中指定的组分隔符对数字进行分组。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">值，请参阅"设置"。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a number.</source>
          <target state="translated">返回数字形式的格式设置的表达式。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Type is not numeric.</source>
          <target state="translated">类型不是数值。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</source>
          <target state="translated">返回格式化为带有尾随 %字符的百分比 （即乘以 100） 的表达式。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>When one or more optional arguments are omitted, the values for omitted arguments are provided by the locale settings.</source>
          <target state="translated">当省略一个或多个可选参数时，是由区域设置提供省略的自变量的值。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  All settings information comes from the locale of the application.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 来自应用程序的区域设置的所有设置信息。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">默认情况下，将在控制面板中设置的区域设置。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>However, it may be changed programmatically by using the .NET Framework.</source>
          <target state="translated">但是，可能通过来更改它以编程方式使用.NET Framework。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments have the following settings.</source>
          <target state="translated"><ph id="ph1">`IncludeLeadingDigit`</ph>， <ph id="ph2">`UseParensForNegativeNumbers`</ph>，和<ph id="ph3">`GroupDigits`</ph>参数具有以下设置。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`TriState.True`</ph>|True|   |<ph id="ph2">`TriState.False`</ph>|False|   |<ph id="ph3">`TriState.Default`</ph>|The computer's regional settings|</source>
          <target state="translated">|||  |-|-|  |常量 |说明 |  |<ph id="ph1">`TriState.True`</ph>|True |  |<ph id="ph2">`TriState.False`</ph>|False |  |<ph id="ph3">`TriState.Default`</ph>|计算机的区域设置 |</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Expression to be formatted.</source>
          <target state="translated">要设置格式的表达式。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Numeric value indicating how many places to the right of the decimal are displayed.</source>
          <target state="translated">显示数字值，该值指示小数点右侧的多少位。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Default value is –1, which indicates that the locale settings are used.</source>
          <target state="translated">默认值为 –&amp;1;，表示使用的区域设置。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether or not a leading zero displays for fractional values.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指示对于小数值显示前导零的常数。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">值，请参阅"设置"。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether or not to place negative values within parentheses.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>常量，指示将放在括号内的负值。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">值，请参阅"设置"。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>常量，指示使用的区域设置中指定的组分隔符对数字进行分组。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">值，请参阅"设置"。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</source>
          <target state="translated">返回格式化为带有尾随 %字符的百分比 （即乘以 100） 的表达式。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Type is not numeric.</source>
          <target state="translated">类型不是数值。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character from the specified index in the supplied string.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示所提供的字符串中的指定索引处的字符的值。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Index`</ph> is less than 1 or greater than the index of the last character in <ph id="ph2">`str`</ph>, an <ph id="ph3">`ArgumentException`</ph> is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Index`</ph>小于 1 或大于中的最后一个字符的索引<ph id="ph2">`str`</ph>、<ph id="ph3">`ArgumentException`</ph>引发。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The (1-based) index of the character in <ph id="ph1">`str`</ph> to be returned.</source>
          <target state="translated">中的字符的 （基于&amp;1; 的） 索引<ph id="ph1">`str`</ph>要返回。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character from the specified index in the supplied string.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示所提供的字符串中的指定索引处的字符的值。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;str&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <ph id="ph2">&lt;code&gt;Index&lt;/code&gt;</ph> <ph id="ph3">&amp;lt;</ph> 1, or <ph id="ph4">&lt;code&gt;Index&lt;/code&gt;</ph> is greater than index of last character of <ph id="ph5">&lt;code&gt;str&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;str&lt;/code&gt;</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>， <ph id="ph2">&lt;code&gt;Index&lt;/code&gt;</ph> <ph id="ph3">&amp;lt;</ph> 1，或<ph id="ph4">&lt;code&gt;Index&lt;/code&gt;</ph>大于最后一个字符的索引<ph id="ph5">&lt;code&gt;str&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Returns an integer specifying the start position of the first occurrence of one string within another.</source>
          <target state="translated">返回一个整数，指定在另一个字符串的第一个匹配项的开始位置。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Typically, the <ph id="ph1">`InStr`</ph> function is used when parsing strings.</source>
          <target state="translated">通常情况下，<ph id="ph1">`InStr`</ph>分析字符串时使用函数。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`InStrB`</ph> function in previous versions of Visual Basic returns a number of bytes rather than a character position.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`InStrB`</ph>在以前版本的 Visual Basic 函数返回的字节，而不是字符位置数。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`InStrB`</ph> is no longer supported.</source>
          <target state="translated">所有 Visual Basic 2005 字符串都都以 unicode 格式，和<ph id="ph1">`InStrB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:      ||||   |-|-|-|   |Constant|Value|Description|   |<ph id="ph2">`Binary`</ph>|0|Performs a binary comparison|   |<ph id="ph3">`Text`</ph>|1|Performs a text comparison|</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>自变量设置不: | | |  |-|-|-|  |常量 |值 |说明 |  |<ph id="ph2">`Binary`</ph>|0|执行二进制比较 |  |<ph id="ph3">`Text`</ph>|1|执行文本比较 |</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression being searched.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要搜索的表达式。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression sought.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有所查找表达式。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">指定的字符串比较的类型。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Compare`</ph> is omitted, the <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> setting determines the type of comparison.</source>
          <target state="translated">如果<ph id="ph1">`Compare`</ph>省略， <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>设置确定的比较类型。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">如果</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>InStr returns</source>
          <target state="translated">InStr 返回</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String1&lt;/code&gt;</ph> is zero length or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String1&lt;/code&gt;</ph>长度为零或<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is zero length or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>长度为零或<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The starting position for the search, which defaults to the first character position.</source>
          <target state="translated">搜索，默认为第一个字符位置的起始位置。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is not found</source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>找不到</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is found within <ph id="ph2">&lt;code&gt;String1&lt;/code&gt;</ph></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>在中找到<ph id="ph2">&lt;code&gt;String1&lt;/code&gt;</ph></target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Position where match begins</source>
          <target state="translated">匹配的开始位置的位置</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Returns an integer specifying the start position of the first occurrence of one string within another.</source>
          <target state="translated">返回一个整数，指定在另一个字符串的第一个匹配项的开始位置。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Typically, the <ph id="ph1">`InStr`</ph> function is used when parsing strings.</source>
          <target state="translated">通常情况下，<ph id="ph1">`InStr`</ph>分析字符串时使用函数。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`InStrB`</ph> function in previous versions of Visual Basic returns a number of bytes rather than a character position.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`InStrB`</ph>在以前版本的 Visual Basic 函数返回的字节，而不是字符位置数。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`InStrB`</ph> is no longer supported.</source>
          <target state="translated">所有 Visual Basic 2005 字符串都都以 unicode 格式，和<ph id="ph1">`InStrB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:      ||||   |-|-|-|   |Constant|Value|Description|   |<ph id="ph2">`Binary`</ph>|0|Performs a binary comparison|   |<ph id="ph3">`Text`</ph>|1|Performs a text comparison|</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>自变量设置不: | | |  |-|-|-|  |常量 |值 |说明 |  |<ph id="ph2">`Binary`</ph>|0|执行二进制比较 |  |<ph id="ph3">`Text`</ph>|1|执行文本比较 |</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Numeric expression that sets the starting position for each search.</source>
          <target state="translated">设置每个搜索的起始位置的数值表达式。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>If omitted, search begins at the first character position.</source>
          <target state="translated">如果省略，则第一个字符位置开始搜索。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The start index is 1-based.</source>
          <target state="translated">起始索引是从 1 开始。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression being searched.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要搜索的表达式。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression sought.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有所查找表达式。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">指定的字符串比较的类型。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Compare`</ph> is omitted, the <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> setting determines the type of comparison.</source>
          <target state="translated">如果<ph id="ph1">`Compare`</ph>省略， <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>设置确定的比较类型。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">如果</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>InStr returns</source>
          <target state="translated">InStr 返回</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String1&lt;/code&gt;</ph> is zero length or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String1&lt;/code&gt;</ph>长度为零或<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is zero length or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>长度为零或<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is not found</source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>找不到</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is found within <ph id="ph2">&lt;code&gt;String1&lt;/code&gt;</ph></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>在中找到<ph id="ph2">&lt;code&gt;String1&lt;/code&gt;</ph></target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Position where match begins</source>
          <target state="translated">匹配的开始位置的位置</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph2">&amp;gt;</ph> length of <ph id="ph3">&lt;code&gt;String1&lt;/code&gt;</ph></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;Start&lt;/code&gt;</ph><ph id="ph2">&amp;gt;</ph>的长度<ph id="ph3">&lt;code&gt;String1&lt;/code&gt;</ph></target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Returns the position of the first occurrence of one string within another, starting from the right side of the string.</source>
          <target state="translated">返回一个字符串在另一个，从字符串右侧开始的第一个匹配项的位置。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Note that the syntax for the <ph id="ph1">`InStrRev`</ph> function is not the same as the syntax for the <ph id="ph2">`InStr`</ph> function.</source>
          <target state="translated">请注意的语法<ph id="ph1">`InStrRev`</ph>函数不是相同的语法<ph id="ph2">`InStr`</ph>函数。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>自变量可以具有下列值。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`Binary`</ph>|Performs a binary comparison.|   |<ph id="ph2">`Text`</ph>|Performs a textual comparison.|</source>
          <target state="translated">|||  |-|-|  |常量 |说明 |  |<ph id="ph1">`Binary`</ph>|执行二进制比较。 |  |<ph id="ph2">`Text`</ph>|执行文本比较。 |</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>String expression being searched.</source>
          <target state="translated">要搜索的字符串表达式。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>String expression being searched for.</source>
          <target state="translated">要搜索的字符串表达式。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Numeric expression setting the one-based starting position for each search, starting from the left side of the string.</source>
          <target state="translated">设置为每个搜索，从左侧的字符串开始的&amp;1; 开始的起始位置的数值表达式。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Start`</ph> is omitted then –1 is used, meaning the search begins at the last character position.</source>
          <target state="translated">如果<ph id="ph1">`Start`</ph>省略则使用为-1，这意味着最后一个字符位置开始执行搜索。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Search then proceeds from right to left.</source>
          <target state="translated">然后在搜索中继续从右到左。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Numeric value indicating the kind of comparison to use when evaluating substrings.</source>
          <target state="translated">数字值，该值指示要在计算子字符串时使用的比较类型。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>If omitted, a binary comparison is performed.</source>
          <target state="translated">如果省略，则执行二进制比较。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>See Settings for values.</source>
          <target state="translated">值，请参阅设置。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">如果</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>InStrRev returns</source>
          <target state="translated">InStrRev 返回</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;StringCheck&lt;/code&gt;</ph> is zero-length</source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;StringCheck&lt;/code&gt;</ph>为零长度</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph> is zero-length</source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph>为零长度</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph> is not found</source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph>找不到</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph> is found within <ph id="ph2">&lt;code&gt;StringCheck&lt;/code&gt;</ph></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph>在中找到<ph id="ph2">&lt;code&gt;StringCheck&lt;/code&gt;</ph></target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Position at which the first match is found, starting with the right side of the string.</source>
          <target state="translated">从字符串右侧找到第一个匹配项的位置。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;Start&lt;/code&gt;</ph> is greater than length of <ph id="ph2">&lt;code&gt;StringMatch&lt;/code&gt;</ph></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;Start&lt;/code&gt;</ph>大于的长度<ph id="ph2">&lt;code&gt;StringMatch&lt;/code&gt;</ph></target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph> = 0 or <ph id="ph2">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph3">&amp;lt;</ph> -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph>= 0 or <ph id="ph2">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph3">&amp;lt;</ph> -1.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">返回通过联接的多个子数组中包含创建的字符串。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>There is a parity between the <ph id="ph1">`Join`</ph> and <ph id="ph2">`Split`</ph> functions.</source>
          <target state="translated">没有之间的奇偶校验<ph id="ph1">`Join`</ph>和<ph id="ph2">`Split`</ph>函数。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Join`</ph> function takes an array of strings and joins them using a delimiter string, to return a single string.</source>
          <target state="translated"><ph id="ph1">`Join`</ph>函数接受一个字符串数组，并将它们联接起来使用分隔符字符串，以返回单个字符串。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Split`</ph> function takes a string and separates it at the delimiter, to return an array of strings.</source>
          <target state="translated"><ph id="ph1">`Split`</ph>函数接受一个字符串，并将它隔离在分隔符，返回的字符串数组。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>However, a key difference is that <ph id="ph1">`Join`</ph> can concatenate strings with any delimiter string, <ph id="ph2">`Split`</ph> can only separate strings using a single character delimiter.</source>
          <target state="translated">但是，主要区别在于<ph id="ph1">`Join`</ph>可以串联在一起使用任何分隔符字符串，字符串<ph id="ph2">`Split`</ph>可以仅使用分隔字符串的单个字符分隔符。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>One-dimensional array containing substrings to be joined.</source>
          <target state="translated">一维数组，包含要联接的子字符串。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Any string, used to separate the substrings in the returned string.</source>
          <target state="translated">任意字符串，用于分隔返回的字符串中子字符串。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>If omitted, the space character (" ") is used.</source>
          <target state="translated">如果省略，空格字符 ("") 使用。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Delimiter`</ph> is a zero-length string ("") or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, all items in the list are concatenated with no delimiters.</source>
          <target state="translated">如果<ph id="ph1">`Delimiter`</ph>是零长度字符串 ("") 或<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，列表中的所有项都不使用分隔符都连接。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">返回通过联接的多个子数组中包含创建的字符串。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;SourceArray&lt;/code&gt;</ph> is not one dimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;SourceArray&lt;/code&gt;</ph>不是一个维度。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">返回通过联接的多个子数组中包含创建的字符串。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>There is a parity between the <ph id="ph1">`Join`</ph> and <ph id="ph2">`Split`</ph> functions.</source>
          <target state="translated">没有之间的奇偶校验<ph id="ph1">`Join`</ph>和<ph id="ph2">`Split`</ph>函数。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Join`</ph> function takes an array of strings and joins them using a delimiter string, to return a single string.</source>
          <target state="translated"><ph id="ph1">`Join`</ph>函数接受一个字符串数组，并将它们联接起来使用分隔符字符串，以返回单个字符串。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Split`</ph> function takes a string and separates it at the delimiter, to return an array of strings.</source>
          <target state="translated"><ph id="ph1">`Split`</ph>函数接受一个字符串，并将它隔离在分隔符，返回的字符串数组。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>However, a key difference is that <ph id="ph1">`Join`</ph> can concatenate strings with any delimiter string, <ph id="ph2">`Split`</ph> can only separate strings using a single character delimiter.</source>
          <target state="translated">但是，主要区别在于<ph id="ph1">`Join`</ph>可以串联在一起使用任何分隔符字符串，字符串<ph id="ph2">`Split`</ph>可以仅使用分隔字符串的单个字符分隔符。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>One-dimensional array containing substrings to be joined.</source>
          <target state="translated">一维数组，包含要联接的子字符串。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Any string, used to separate the substrings in the returned string.</source>
          <target state="translated">任意字符串，用于分隔返回的字符串中子字符串。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>If omitted, the space character (" ") is used.</source>
          <target state="translated">如果省略，空格字符 ("") 使用。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Delimiter`</ph> is a zero-length string ("") or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, all items in the list are concatenated with no delimiters.</source>
          <target state="translated">如果<ph id="ph1">`Delimiter`</ph>是零长度字符串 ("") 或<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，列表中的所有项都不使用分隔符都连接。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">返回通过联接的多个子数组中包含创建的字符串。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;SourceArray&lt;/code&gt;</ph> is not one dimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;SourceArray&lt;/code&gt;</ph>不是一个维度。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">返回的字符串或字符转换为小写形式。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">只有大写的字母都转换为小写;所有小写字母和 nonletter 字符都保持不变。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">操作字符串，以便区分大小的更改适用于在其中使用的应用程序的区域设置时，此函数将使用应用程序的区域性信息。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt; method, and pass &lt;xref:System.StringComparison&gt; or &lt;xref:System.StringComparison&gt; for the <ph id="ph2">`comparisonType`</ph> argument.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 如果你的应用程序进行安全决策基于比较或大小写更改操作的结果，则该操作，应使用&lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;方法，并传入&lt;xref:System.StringComparison&gt;或&lt;xref:System.StringComparison&gt;为<ph id="ph2">`comparisonType`</ph>自变量。&lt;/xref:System.StringComparison&gt; &lt;/xref:System.StringComparison&gt; &lt;/xref:System.String.Compare%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何区域性影响字符串在 Visual Basic 中<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">返回的字符串或字符转换为小写形式。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">返回的字符串或字符转换为小写形式。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">只有大写的字母都转换为小写;所有小写字母和 nonletter 字符都保持不变。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">操作字符串，以便区分大小的更改适用于在其中使用的应用程序的区域设置时，此函数将使用应用程序的区域性信息。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt; method, and pass &lt;xref:System.StringComparison&gt; or &lt;xref:System.StringComparison&gt; for the <ph id="ph2">`comparisonType`</ph> argument.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 如果你的应用程序进行安全决策基于比较或大小写更改操作的结果，则该操作，应使用&lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;方法，并传入&lt;xref:System.StringComparison&gt;或&lt;xref:System.StringComparison&gt;为<ph id="ph2">`comparisonType`</ph>自变量。&lt;/xref:System.StringComparison&gt; &lt;/xref:System.StringComparison&gt; &lt;/xref:System.String.Compare%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何区域性影响字符串在 Visual Basic 中<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">返回的字符串或字符转换为小写形式。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Returns a string containing a specified number of characters from the left side of a string.</source>
          <target state="translated">返回包含指定的数目的字符串的左侧的字符的字符串。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">若要确定中的字符数<ph id="ph1">`str`</ph>，使用<ph id="ph2">`Len`</ph>函数。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>If used in a Windows Forms application, or any other class that has a <ph id="ph1">`Left`</ph> property, you must fully qualify the function with <ph id="ph2">`Microsoft.VisualBasic.Left`</ph>.</source>
          <target state="translated">如果在 Windows 窗体应用程序或具有的任何其他类中使用<ph id="ph1">`Left`</ph>属性，必须完全限定具有函数<ph id="ph2">`Microsoft.VisualBasic.Left`</ph>。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LeftB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LeftB`</ph>在以前版本的 Visual Basic 函数返回字节，而不是字符的字符串。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LeftB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LeftB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from which the leftmost characters are returned.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从中返回的最左侧字符的表达式。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Numeric expression indicating how many characters to return.</source>
          <target state="translated">指示要返回多少个字符的数值表达式。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>If 0, a zero-length string ("") is returned.</source>
          <target state="translated">如果为 0，零长度字符串 ("") 返回。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>If greater than or equal to the number of characters in <ph id="ph1">`str`</ph>, the entire string is returned.</source>
          <target state="translated">如果大于或等于的中的字符数<ph id="ph1">`str`</ph>，则返回整个字符串。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Returns a string containing a specified number of characters from the left side of a string.</source>
          <target state="translated">返回包含指定的数目的字符串的左侧的字符的字符串。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">使用用户定义的类型和<ph id="ph1">`Object`</ph>变量，<ph id="ph2">`Len`</ph>函数返回时将写入的文件的大小<ph id="ph3">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，它会返回对象的大小，因为它将写入到的文件<ph id="ph2">`FilePut`</ph>函数。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph>特性可以应用于对象，以写入时指示的大小的字符串，以字节为单位中的 string 字段到磁盘。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph>函数使用<ph id="ph2">`VBFixedString`</ph>属性，如果可用，在确定大<ph id="ph3">`Object`</ph>变量。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`Len`</ph>函数可能不能确定实际所需的用户定义数据类型中的可变长度字符串使用的存储字节数。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`LenB`</ph>在早期版本的 Visual Basic 的函数返回一个字符串，而不是字符的字节数。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`LenB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">智能设备的开发人员说明<ph id="ph1">`Len`</ph>函数仅接受<ph id="ph2">`String`</ph>和<ph id="ph3">`Object`</ph>作为参数的变量。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含<ph id="ph2">`String`</ph>，它将返回的长度<ph id="ph3">`String`</ph>。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">如果参数为 NULL<ph id="ph1">`Object`</ph>引用，该函数将返回零。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`Object`</ph>包含任何其他类型，将引发异常。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式或变量的名称。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>属于类型<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>函数返回时将写入的文件的大小<bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>函数。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">返回一个整数，该整数包含字符串中的字符数或的名义存储变量所需的字节数。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Returns a left-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">返回包含调整为指定长度的指定的字符串的左对齐字符串。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>If the specified string is longer than the specified length, the returned string is shortened to the specified length.</source>
          <target state="translated">如果指定的字符串的长度超过指定的长度，则返回的字符串将缩短为指定长度。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>If the specified string is shorter than the specified length, spaces are added to the right end of the returned string to produce the appropriate length.</source>
          <target state="translated">如果指定的字符串是短于指定的长度，则将空间添加到返回的字符串，以生成相应的长度的右端。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Name of string variable.</source>
          <target state="translated">字符串变量的名称。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Length of returned string.</source>
          <target state="translated">返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>Returns a left-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">返回包含调整为指定长度的指定的字符串的左对齐字符串。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">返回包含没有前导空格的指定字符串的副本的字符串 (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>)，则没有尾随空格 (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>)，或没有前导空格或尾随空格 (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated"><ph id="ph1">`LTrim`</ph>， <ph id="ph2">`RTrim`</ph>，和<ph id="ph3">`Trim`</ph>函数从字符串末尾删除空格。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">返回包含没有前导空格的指定字符串的副本的字符串 (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>)，则没有尾随空格 (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>)，或没有前导空格或尾随空格 (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>Returns a string that contains all the characters starting from a specified position in a string.</source>
          <target state="translated">返回包含从字符串中指定位置开始的所有字符的字符串。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">若要确定中的字符数<ph id="ph1">`str`</ph>，使用<ph id="ph2">`Len`</ph>函数。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>Visual Basic has a <ph id="ph1">`Mid`</ph> function and a <ph id="ph2">`Mid`</ph> statement.</source>
          <target state="translated">Visual Basic 具有<ph id="ph1">`Mid`</ph>函数和<ph id="ph2">`Mid`</ph>语句。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>These elements both operate on a specified number of characters in a string, but the <ph id="ph1">`Mid`</ph> function returns the characters while the <ph id="ph2">`Mid`</ph> statement replaces the characters.</source>
          <target state="translated">这些元素都指定数量的字符在字符串中，操作但<ph id="ph1">`Mid`</ph>函数将返回字符，而<ph id="ph2">`Mid`</ph>语句替换字符。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mid Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Mid 语句<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`MidB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`MidB`</ph>在以前版本的 Visual Basic 函数返回字节，而不是字符的字符串。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>All Visual Basic strings are in Unicode, and <ph id="ph1">`MidB`</ph> is no longer supported.</source>
          <target state="translated">所有 Visual Basic 字符串都都以 unicode 格式，和<ph id="ph1">`MidB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from which characters are returned.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从中返回字符表达式。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>Starting position of the characters to return.</source>
          <target state="translated">要返回的字符的起始位置。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Start`</ph> is greater than the number of characters in <ph id="ph2">`str`</ph>, the <bpt id="p1">&lt;xref uid="langword_csharp_Mid" name="Mid" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function returns a zero-length string ("").</source>
          <target state="translated">如果<ph id="ph1">`Start`</ph>大于中的字符数<ph id="ph2">`str`</ph>、 <bpt id="p1">&lt;xref uid="langword_csharp_Mid" name="Mid" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>函数返回一个零长度字符串 ("")。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Start`</ph> is one-based.</source>
          <target state="translated"><ph id="ph1">`Start`</ph>是一个基于。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>A string that consists of all the characters starting from the specified position in the string.</source>
          <target state="translated">从字符串中的指定位置开始的所有字符都组成的字符串。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>Returns a string that contains a specified number of characters starting from a specified position in a string.</source>
          <target state="translated">返回包含指定的数目的从字符串中指定位置开始的字符的字符串。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">若要确定中的字符数<ph id="ph1">`str`</ph>，使用<ph id="ph2">`Len`</ph>函数。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Visual Basic has a <ph id="ph1">`Mid`</ph> function and a <ph id="ph2">`Mid`</ph> statement.</source>
          <target state="translated">Visual Basic 具有<ph id="ph1">`Mid`</ph>函数和<ph id="ph2">`Mid`</ph>语句。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>These elements both operate on a specified number of characters in a string, but the <ph id="ph1">`Mid`</ph> function returns the characters while the <ph id="ph2">`Mid`</ph> statement replaces the characters.</source>
          <target state="translated">这些元素都指定数量的字符在字符串中，操作但<ph id="ph1">`Mid`</ph>函数将返回字符，而<ph id="ph2">`Mid`</ph>语句替换字符。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Mid Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Mid 语句<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`MidB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`MidB`</ph>在以前版本的 Visual Basic 函数返回字节，而不是字符的字符串。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>All Visual Basic strings are in Unicode, and <ph id="ph1">`MidB`</ph> is no longer supported.</source>
          <target state="translated">所有 Visual Basic 字符串都都以 unicode 格式，和<ph id="ph1">`MidB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from which characters are returned.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从中返回字符表达式。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>Starting position of the characters to return.</source>
          <target state="translated">要返回的字符的起始位置。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Start`</ph> is greater than the number of characters in <ph id="ph2">`str`</ph>, the <bpt id="p1">&lt;xref uid="langword_csharp_Mid" name="Mid" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function returns a zero-length string ("").</source>
          <target state="translated">如果<ph id="ph1">`Start`</ph>大于中的字符数<ph id="ph2">`str`</ph>、 <bpt id="p1">&lt;xref uid="langword_csharp_Mid" name="Mid" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>函数返回一个零长度字符串 ("")。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Start`</ph> is one based.</source>
          <target state="translated"><ph id="ph1">`Start`</ph>从&amp;1; 开始。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Number of characters to return.</source>
          <target state="translated">要返回的字符数。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>If omitted or if there are fewer than <ph id="ph1">`Length`</ph> characters in the text (including the character at position <ph id="ph2">`Start`</ph>), all characters from the start position to the end of the string are returned.</source>
          <target state="translated">如果省略或少于<ph id="ph1">`Length`</ph>文本中的字符 (包括位置处的字符<ph id="ph2">`Start`</ph>)，则返回从起始位置到字符串的末尾的所有字符。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>A string that consists of the specified number of characters starting from the specified position in the string.</source>
          <target state="translated">包含指定数量的字符从字符串中的指定位置开始的字符串。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Returns a string in which a specified substring has been replaced with another substring a specified number of times.</source>
          <target state="translated">返回一个字符串，其中指定的子字符串已替换为另一个子字符串指定的次数。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>The return value of the <ph id="ph1">`Replace`</ph> function is a string that begins at the position specified by <ph id="ph2">`Start`</ph> and concludes at the end of the <ph id="ph3">`Expression`</ph> string, with the substitutions made as specified by the <ph id="ph4">`Find`</ph> and <ph id="ph5">`Replace`</ph> values.</source>
          <target state="translated">返回值<ph id="ph1">`Replace`</ph>函数是一个字符串，则从指定位置开始<ph id="ph2">`Start`</ph>，并在末尾结束<ph id="ph3">`Expression`</ph>字符串，其中的替换所指定的<ph id="ph4">`Find`</ph>和<ph id="ph5">`Replace`</ph>值。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>自变量可以具有下列值。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`Binary`</ph>|Performs a binary comparison|   |<ph id="ph2">`Text`</ph>|Performs a textual comparison|</source>
          <target state="translated">|||  |-|-|  |常量 |说明 |  |<ph id="ph1">`Binary`</ph>|执行二进制比较 |  |<ph id="ph2">`Text`</ph>|执行文本比较 |</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>String expression containing substring to replace.</source>
          <target state="translated">包含子字符串替换字符串表达式。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Substring being searched for.</source>
          <target state="translated">要搜索的子字符串。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>Replacement substring.</source>
          <target state="translated">替换的子字符串。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Position within <ph id="ph1">`Expression`</ph> that starts a substring used for replacement.</source>
          <target state="translated">中的位置<ph id="ph1">`Expression`</ph>启动用于替换的子字符串。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>The return value of <bpt id="p1">&lt;xref uid="langword_csharp_Replace" name="Replace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a string that begins at <ph id="ph1">`Start`</ph>, with appropriate substitutions.</source>
          <target state="translated">返回值<bpt id="p1">&lt;xref uid="langword_csharp_Replace" name="Replace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是一个字符串，开始<ph id="ph1">`Start`</ph>，使用适当的替换。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>If omitted, 1 is assumed.</source>
          <target state="translated">如果省略，则假定为 1。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>Number of substring substitutions to perform.</source>
          <target state="translated">要执行的子字符串替换操作的数。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>If omitted, the default value is –1, which means "make all possible substitutions."</source>
          <target state="translated">如果省略，默认值为&amp;1;，这意味着"使所有可能的替换"。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>Numeric value indicating the kind of comparison to use when evaluating substrings.</source>
          <target state="translated">数字值，该值指示要在计算子字符串时使用的比较类型。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>See Settings for values.</source>
          <target state="translated">值，请参阅设置。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Replace" name="Replace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> returns the following values.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Replace" name="Replace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>返回以下值。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">如果</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>Replace returns</source>
          <target state="translated">Replace 返回</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Find</ph><ept id="p1">&lt;/code&gt;</ept> is zero-length or <bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Find</ph><ept id="p1">&lt;/code&gt;</ept>长度为零或<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>Copy of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept></source>
          <target state="translated">副本<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Replace</ph><ept id="p1">&lt;/code&gt;</ept> is zero-length</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Replace</ph><ept id="p1">&lt;/code&gt;</ept>为零长度</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>Copy of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept> with no occurrences of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">Find</ph><ept id="p2">&lt;/code&gt;</ept></source>
          <target state="translated">复制的<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Expression</ph> <ept id="p1">&lt;/code&gt;</ept>与未出现<bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">Find</ph><ept id="p2">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept> is zero-length or <bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">Start</ph><ept id="p3">&lt;/code&gt;</ept> is greater than length of <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">Expression</ph><ept id="p4">&lt;/code&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept>长度为零或<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，或<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">Start</ph> <ept id="p3">&lt;/code&gt;</ept>大于的长度<bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">Expression</ph><ept id="p4">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Count</ph><ept id="p1">&lt;/code&gt;</ept> is 0</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Count</ph><ept id="p1">&lt;/code&gt;</ept>为 0</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>Copy of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept></source>
          <target state="translated">副本<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Count&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> -1 or <ph id="ph3">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph>= 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Count&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> -1 or <ph id="ph3">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph>= 0.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Returns a string containing a specified number of characters from the right side of a string.</source>
          <target state="translated">返回包含指定的数量的从右侧的字符串的字符的字符串。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">若要确定中的字符数<ph id="ph1">`str`</ph>，使用<ph id="ph2">`Len`</ph>函数。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>If used in a Windows Form, or any other class that has a <ph id="ph1">`Right`</ph> property, you must fully qualify the function with <ph id="ph2">`Microsoft.VisualBasic.Strings.Right`</ph>.</source>
          <target state="translated">如果在 Windows 窗体或具有的任何其他类中使用<ph id="ph1">`Right`</ph>属性，必须完全限定具有函数<ph id="ph2">`Microsoft.VisualBasic.Strings.Right`</ph>。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`RightB`</ph> function in earlier versions of Visual Basic returns a string in bytes, rather than characters.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;<ph id="ph2">`RightB`</ph>在早期版本的 Visual Basic 中的函数返回字节，而不是字符的字符串。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">它主要用于在双字节字符集 (DBCS) 应用程序中转换字符串。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`RightB`</ph> is no longer supported.</source>
          <target state="translated">所有当前的 Visual Basic 字符串都以 unicode 格式，和<ph id="ph1">`RightB`</ph>不再受支持。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from which the rightmost characters are returned.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从中返回最右边的字符表达式。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Numeric expression indicating how many characters to return.</source>
          <target state="translated">指示要返回多少个字符的数值表达式。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>If 0, a zero-length string ("") is returned.</source>
          <target state="translated">如果为 0，零长度字符串 ("") 返回。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>If greater than or equal to the number of characters in <ph id="ph1">`str`</ph>, the entire string is returned.</source>
          <target state="translated">如果大于或等于的中的字符数<ph id="ph1">`str`</ph>，则返回整个字符串。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>Returns a string containing a specified number of characters from the right side of a string.</source>
          <target state="translated">返回包含指定的数量的从右侧的字符串的字符的字符串。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>Returns a right-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">返回右对齐的字符串包含调整为指定长度的指定的字符串。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Source`</ph> is longer than <ph id="ph2">`Length`</ph>, <ph id="ph3">`RSet`</ph> places only the leftmost characters, up to the length of <ph id="ph4">`Source`</ph>, in the returned string.</source>
          <target state="translated">如果<ph id="ph1">`Source`</ph>长于<ph id="ph2">`Length`</ph>，<ph id="ph3">`RSet`</ph>仅的最左侧字符，最长度为<ph id="ph4">`Source`</ph>，在返回的字符串。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>If the specified string is shorter than the specified length, spaces are added to the left end of the string to produce the appropriate length.</source>
          <target state="translated">如果指定的字符串是短于指定的长度，空间添加到要产生相应的长度的字符串的左端。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>If the specified string is longer than the specified length, it is shortened to the specified length.</source>
          <target state="translated">如果指定的字符串的长度超过指定的长度，则将它缩短为指定长度。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>Name of string variable.</source>
          <target state="translated">字符串变量的名称。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>Length of returned string.</source>
          <target state="translated">返回字符串的长度。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>Returns a right-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">返回右对齐的字符串包含调整为指定长度的指定的字符串。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">返回包含没有前导空格的指定字符串的副本的字符串 (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>)，则没有尾随空格 (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>)，或没有前导空格或尾随空格 (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated"><ph id="ph1">`LTrim`</ph>， <ph id="ph2">`RTrim`</ph>，和<ph id="ph3">`Trim`</ph>函数从字符串末尾删除空格。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">返回包含没有前导空格的指定字符串的副本的字符串 (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>)，则没有尾随空格 (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>)，或没有前导空格或尾随空格 (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>Returns a string consisting of the specified number of spaces.</source>
          <target state="translated">返回一个包含指定数量的空格的字符串。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Space`</ph> function is useful for formatting output and clearing data in fixed-length strings.</source>
          <target state="translated"><ph id="ph1">`Space`</ph>函数可用于设置输出的格式和清除固定长度字符串中的数据。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>The number of spaces you want in the string.</source>
          <target state="translated">您要在字符串中的空格数。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Returns a string consisting of the specified number of spaces.</source>
          <target state="translated">返回一个包含指定数量的空格的字符串。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>Returns a zero-based, one-dimensional array containing a specified number of substrings.</source>
          <target state="translated">返回包含指定的数量的子字符串中的从零开始的一维数组。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>By default, or when <ph id="ph1">`Limit`</ph> equals -1, the <ph id="ph2">`Split`</ph> function splits the input string at every occurrence of the delimiter string, and returns the substrings in an array.</source>
          <target state="translated">默认情况下，或当<ph id="ph1">`Limit`</ph>等于-1，<ph id="ph2">`Split`</ph>函数拆分输入的字符串中的分隔符字符串中，每个匹配项，并返回数组中的子字符串。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`Limit`</ph> parameter is greater than zero, the <ph id="ph2">`Split`</ph> function splits the string at the first <ph id="ph3">`Limit`</ph>-1 occurrences of the delimiter, and returns an array with the resulting substrings.</source>
          <target state="translated">当<ph id="ph1">`Limit`</ph>参数大于零，<ph id="ph2">`Split`</ph>函数将在第一个字符串拆分<ph id="ph3">`Limit`</ph>的分隔符，则为-1 匹配项并返回包含结果的子字符串的数组。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Split("a:b:c", ":")`</ph> returns the array <ph id="ph2">`{"a", "b", "c"}`</ph>, while <ph id="ph3">`Split("a:b:c", ":", 2)`</ph> returns the array <ph id="ph4">`{"a", "b:c"}`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Split("a:b:c", ":")`</ph>返回数组，数组<ph id="ph2">`{"a", "b", "c"}`</ph>，虽然<ph id="ph3">`Split("a:b:c", ":", 2)`</ph>返回数组，数组<ph id="ph4">`{"a", "b:c"}`</ph>。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`Split`</ph> function encounters two delimiters in a row, or a delimiter at the beginning or end of the string, it interprets them as surrounding an empty string ("").</source>
          <target state="translated">当<ph id="ph1">`Split`</ph>函数遇到在行中，两个分隔符或的开头或字符串末尾的分隔符，它会将其解析为围绕一个空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Split("xx", "x")`</ph> returns the array containing three empty strings: one from between the beginning of the string and the first "x", one from between the two "x" strings, and one from between the last "x" and the end of the string.</source>
          <target state="translated">例如，<ph id="ph1">`Split("xx", "x")`</ph>返回数组，其中包含三个空字符串︰ 之一开头的字符串和"x"，第二个介于两个"x"字符串，第一个和最后一个"x"和字符串的末尾之间的一个。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>This table demonstrates how the optional <ph id="ph1">`Delimiter`</ph>, <ph id="ph2">`Limit`</ph>, and <ph id="ph3">`Compare`</ph> parameters can change the behavior of the <ph id="ph4">`Split`</ph> function.</source>
          <target state="translated">此表说明了如何可选<ph id="ph1">`Delimiter`</ph>， <ph id="ph2">`Limit`</ph>，和<ph id="ph3">`Compare`</ph>参数可以更改的行为<ph id="ph4">`Split`</ph>函数。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Split Call|Return Value|   |<ph id="ph1">`Split("42, 12, 19")`</ph>|{"42," , "12," , "19"}|   |<ph id="ph2">`Split("42, 12, 19", ", ")`</ph>|{"42", "12", "19"}|   |<ph id="ph3">`Split("42, 12, 19", ", ", 2)`</ph>|{"42", "12, 19"}|   |<ph id="ph4">`Split("192.168.0.1", ".")`</ph>|{"192", "168", "0", "1"}|   |<ph id="ph5">`Split("Alice and Bob", " AND ")`</ph>|{"Alice and Bob"}|   |<ph id="ph6">`Split("Alice and Bob", " AND ", ,CompareMethod.Text)`</ph>|{"Alice", "Bob"}|   |<ph id="ph7">`Split("someone@example.com", "@",1)`</ph>|{"<ph id="ph8">someone@example.com</ph>"}|   |<ph id="ph9">`Split("someone@example.com", "@",2)`</ph>|{"someone", "example.com"}|       The <ph id="ph10">`Compare`</ph> argument can have the following values.</source>
          <target state="translated">|||  |-|-|  |拆分调用 |返回值 |  |<ph id="ph1">`Split("42, 12, 19")`</ph>|{"42"、"12，"、"19"} |  |<ph id="ph2">`Split("42, 12, 19", ", ")`</ph>|{"42"、"12"、"19"} |  |<ph id="ph3">`Split("42, 12, 19", ", ", 2)`</ph>|{"42"、"12，19"} |  |<ph id="ph4">`Split("192.168.0.1", ".")`</ph>|{"192"、"168"、"0"、"1"} |  |<ph id="ph5">`Split("Alice and Bob", " AND ")`</ph>|{"Alice 和 Bob"} |  |<ph id="ph6">`Split("Alice and Bob", " AND ", ,CompareMethod.Text)`</ph>|{"Alice"，"Bob"} |  |<ph id="ph7">`Split("someone@example.com", "@",1)`</ph>|{"<ph id="ph8">someone@example.com</ph>"}|  |<ph id="ph9">`Split("someone@example.com", "@",2)`</ph>|{"someone"，"example.com"}|      <ph id="ph10">`Compare`</ph>自变量可以具有下列值。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>||||   |-|-|-|   |Constant|Description|Value|   |<ph id="ph1">`CompareMethod.Binary`</ph>|Performs a binary comparison|0|   |<ph id="ph2">`CompareMethod.Text`</ph>|Performs a textual comparison|1|</source>
          <target state="translated">||||  |-|-|-|  |常量 |说明 |值 |  |<ph id="ph1">`CompareMethod.Binary`</ph>|执行二进制比较 |&amp;0; |  |<ph id="ph2">`CompareMethod.Text`</ph>|执行文本比较 |&amp;1; |</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing substrings and delimiters.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含子字符串和分隔符的表达式。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>Any single character used to identify substring limits.</source>
          <target state="translated">用于标识的子字符串限制任何单个字符。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Delimiter`</ph> is omitted, the space character (" ") is assumed to be the delimiter.</source>
          <target state="translated">如果<ph id="ph1">`Delimiter`</ph>省略，空格字符 ("") 被假定为分隔符。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>Maximum number of substrings into which the input string should be split.</source>
          <target state="translated">子字符串应在其中拆分输入的字符串的最大数量。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>The default, –1, indicates that the input string should be split at every occurrence of the <ph id="ph1">`Delimiter`</ph> string.</source>
          <target state="translated">默认值为-1，指示，应在出现的每个拆分输入的字符串<ph id="ph1">`Delimiter`</ph>字符串。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>Numeric value indicating the comparison to use when evaluating substrings.</source>
          <target state="translated">数字值，该值指示要使用计算子字符串时的比较。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">值，请参阅"设置"。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>数组。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept> is a zero-length string (""), <bpt id="p2">&lt;xref uid="langword_csharp_Split" name="Split" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> returns a single-element array containing a zero-length string.</source>
          <target state="translated">如果<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Expression</ph> <ept id="p1">&lt;/code&gt;</ept>是零长度字符串 ("")， <bpt id="p2">&lt;xref uid="langword_csharp_Split" name="Split" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>返回包含零长度字符串的单个元素数组。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Delimiter</ph><ept id="p1">&lt;/code&gt;</ept> is a zero-length string, or if it does not appear anywhere in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">Expression</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_Split" name="Split" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> returns a single-element array containing the entire <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">Expression</ph><ept id="p4">&lt;/code&gt;</ept> string.</source>
          <target state="translated">如果<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Delimiter</ph> <ept id="p1">&lt;/code&gt;</ept>是零长度字符串，或如果未显示任何位置中<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">Expression</ph> <ept id="p2">&lt;/code&gt;</ept>， <bpt id="p3">&lt;xref uid="langword_csharp_Split" name="Split" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>返回包含整个的单个元素数组<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">Expression</ph> <ept id="p4">&lt;/code&gt;</ept>字符串。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>Returns -1, 0, or 1, based on the result of a string comparison.</source>
          <target state="translated">返回-1、 0 或 1，基于字符串比较的结果。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>The strings are compared by alphanumeric sort values beginning with the first character.</source>
          <target state="translated">对字符串进行比较的第一个字符开头的字母数字排序值。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>For further information on binary comparisons, textual comparisons, and sort order, see <bpt id="p1">[</bpt>Option Compare Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关二进制比较、 文本比较和排序顺序的进一步信息，请参阅<bpt id="p1">[</bpt>选项比较语句<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:      |||   |-|-|   |Constant|Description|   |<ph id="ph2">`Binary`</ph>|Performs a binary comparison, based on a sort order derived from the internal binary representations of the characters.|   |<ph id="ph3">`Text`</ph>|Performs a text comparison, based on a case-insensitive text sort order determined by your system's <ph id="ph4">`LocaleID`</ph> value.|</source>
          <target state="translated"><ph id="ph1">`Compare`</ph>自变量设置不: | | |  |-|-|  |常量 |说明 |  |<ph id="ph2">`Binary`</ph>|执行二进制比较，基于派生自字符的内部二进制表示的排序顺序。 |  |<ph id="ph3">`Text`</ph>|执行文本比较，基于由你的系统的不区分大小写的文本排序顺序<ph id="ph4">`LocaleID`</ph>值。 |</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">指定的字符串比较的类型。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Compare`</ph> is omitted, the <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> setting determines the type of comparison.</source>
          <target state="translated">如果<ph id="ph1">`Compare`</ph>省略， <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>设置确定的比较类型。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_StrComp" name="StrComp" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function has the following return values.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_StrComp" name="StrComp" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>函数具有下列返回值。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">如果</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>StrComp returns</source>
          <target state="translated">StrComp 返回</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept> sorts ahead of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept>前面的种类<bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>-1</source>
          <target state="translated">-1</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept>等于<bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept> sorts after <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept>后进行排序<bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Compare&lt;/code&gt;</ph> value is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Compare&lt;/code&gt;</ph>值不是有效的。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>Returns a string converted as specified.</source>
          <target state="translated">返回根据指定进行转换的字符串。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>The constants <ph id="ph1">`VbStrConv.Wide`</ph>, <ph id="ph2">`VbStrConv.Narrow`</ph>, <ph id="ph3">`VbStrConv.SimplifiedChinese`</ph>, <ph id="ph4">`VbStrConv.TraditionalChinese`</ph>, <ph id="ph5">`VbStrConv.Katakana`</ph>, and <ph id="ph6">`VbStrConv.Hiragana`</ph> can cause run-time errors when used in locales where they do not apply, but not always: the constants <ph id="ph7">`VbStrConv.Katakana`</ph> and <ph id="ph8">`VbStrConv.Hiragana`</ph> can be used in a non-Japanese system with the Japanese Language Pack installed.</source>
          <target state="translated">常量<ph id="ph1">`VbStrConv.Wide`</ph>， <ph id="ph2">`VbStrConv.Narrow`</ph>， <ph id="ph3">`VbStrConv.SimplifiedChinese`</ph>， <ph id="ph4">`VbStrConv.TraditionalChinese`</ph>， <ph id="ph5">`VbStrConv.Katakana`</ph>，和<ph id="ph6">`VbStrConv.Hiragana`</ph>可能导致运行时错误时使用在区域设置中，不应用它们，但并非总是︰ 常量<ph id="ph7">`VbStrConv.Katakana`</ph>和<ph id="ph8">`VbStrConv.Hiragana`</ph>可用于非日语系统中安装了日语语言包。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>In addition, use of the constants <ph id="ph1">`VbStrConv.Wide`</ph> and <ph id="ph2">`VbStrConv.Narrow`</ph> is supported on any system with an East Asian language installed.</source>
          <target state="translated">此外，使用的常量<ph id="ph1">`VbStrConv.Wide`</ph>和<ph id="ph2">`VbStrConv.Narrow`</ph>与东亚语言安装支持在任何系统上。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">操作字符串，以便区分大小的更改适用于在其中使用的应用程序的区域设置时，此函数将使用应用程序的区域性信息。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt; method, and pass &lt;xref:System.StringComparison&gt; or &lt;xref:System.StringComparison&gt; for the <ph id="ph2">`comparisonType`</ph> argument.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 如果你的应用程序进行安全决策基于比较或大小写更改操作的结果，则该操作，应使用&lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;方法，并传入&lt;xref:System.StringComparison&gt;或&lt;xref:System.StringComparison&gt;为<ph id="ph2">`comparisonType`</ph>自变量。&lt;/xref:System.StringComparison&gt; &lt;/xref:System.StringComparison&gt; &lt;/xref:System.String.Compare%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何区域性影响字符串在 Visual Basic 中<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Conversion`</ph> argument settings are:      |||   |-|-|   |Enumeration member|Description|   |<ph id="ph2">`VbStrConv.None`</ph>|Performs no conversion|   |<ph id="ph3">`VbStrConv.LinguisticCasing`</ph>|Uses linguistic rules for casing, rather than File System (default).</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph>自变量设置不: | | |  |-|-|  |枚举成员 |说明 |  |<ph id="ph2">`VbStrConv.None`</ph>|不执行任何转换 |  |<ph id="ph3">`VbStrConv.LinguisticCasing`</ph>|使用大小写，而不是文件系统 （默认值） 的语言规则。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>Valid with <ph id="ph1">`VbStrConv.UpperCase`</ph> and <ph id="ph2">`VbStrConv.LowerCase`</ph> only.|   |<ph id="ph3">`VbStrConv.UpperCase`</ph>|Converts the string to uppercase characters.|   |<ph id="ph4">`VbStrConv.LowerCase`</ph>|Converts the string to lowercase characters.|   |<ph id="ph5">`VbStrConv.ProperCase`</ph>|Converts the first letter of every word in string to uppercase.|   |<ph id="ph6">`VbStrConv.Wide`</ph> <bpt id="p1">&lt;sup&gt;</bpt><bpt id="p2">*</bpt><ept id="p2">&lt;/sup&gt;</ept>|Converts narrow (half-width) characters in the string to wide (full-width) characters.|   |<ph id="ph7">`VbStrConv.Narrow`</ph> <bpt id="p3">&lt;sup&gt;</bpt><ept id="p3">*</ept><ept id="p1">&lt;/sup&gt;</ept>|Converts wide (full-width) characters in the string to narrow (half-width) characters.|   |<ph id="ph8">`VbStrConv.Katakana`</ph> <bpt id="p4">&lt;sup&gt;</bpt><bpt id="p5">**</bpt><ept id="p5">&lt;/sup&gt;</ept>|Converts Hiragana characters in the string to Katakana characters.|   |<ph id="ph9">`VbStrConv.Hiragana`</ph> <bpt id="p6">&lt;sup&gt;</bpt><ept id="p6">**</ept><ept id="p4">&lt;/sup&gt;</ept>|Converts Katakana characters in the string to Hiragana characters.|   |<ph id="ph10">`VbStrConv.SimplifiedChinese`</ph> <bpt id="p7">&lt;sup&gt;</bpt><bpt id="p8">*</bpt><ept id="p8">&lt;/sup&gt;</ept>|Converts Traditional Chinese characters to Simplified Chinese.|   |<ph id="ph11">`VbStrConv.TraditionalChinese`</ph> <bpt id="p9">&lt;sup&gt;</bpt><ept id="p9">*</ept><ept id="p7">&lt;/sup&gt;</ept>|Converts Simplified Chinese characters to Traditional Chinese.|       <bpt id="p10">&lt;sup&gt;</bpt><bpt id="p11">*</bpt><ept id="p11">&lt;/sup&gt;</ept> Applies to Asian locales.       <bpt id="p12">&lt;sup&gt;</bpt><ept id="p12">*</ept><ph id="ph12">*</ph><ept id="p10">&lt;/sup&gt;</ept> Applies to Japan only.</source>
          <target state="translated">有效，且<ph id="ph1">`VbStrConv.UpperCase`</ph>和<ph id="ph2">`VbStrConv.LowerCase`</ph>仅。 |  |<ph id="ph3">`VbStrConv.UpperCase`</ph>|将转换为大写字符的字符串。 |  |<ph id="ph4">`VbStrConv.LowerCase`</ph>|将转换为小写字符的字符串。 |  |<ph id="ph5">`VbStrConv.ProperCase`</ph>|将字符串中的每个单词的第一个字母转换为大写。 |  |<ph id="ph6">`VbStrConv.Wide`</ph> <bpt id="p1">&lt;sup&gt;</bpt><bpt id="p2">*</bpt><ept id="p2">&lt;/sup&gt;</ept>|将窄 （半角） 中为双字节 （全角） 个字符的字符串的字符转换。 |  |<ph id="ph7">`VbStrConv.Narrow`</ph> <bpt id="p3">&lt;sup&gt;</bpt><ept id="p3">*</ept><ept id="p1">&lt;/sup&gt;</ept>|将双字节 （全角） 中要缩小范围 （半角） 字符的字符串的字符转换。 |  |<ph id="ph8">`VbStrConv.Katakana`</ph> <bpt id="p4">&lt;sup&gt;</bpt><bpt id="p5">**</bpt><ept id="p5">&lt;/sup&gt;</ept>|将字符串中的平假名字符转换为片假名字符。 |  |<ph id="ph9">`VbStrConv.Hiragana`</ph> <bpt id="p6">&lt;sup&gt;</bpt><ept id="p6">**</ept><ept id="p4">&lt;/sup&gt;</ept>|将字符串中的片假名字符转换为平假名字符。 |  |<ph id="ph10">`VbStrConv.SimplifiedChinese`</ph> <bpt id="p7">&lt;sup&gt;</bpt><bpt id="p8">*</bpt><ept id="p8">&lt;/sup&gt;</ept>|将繁体中文字符转换为简体中文。 |  |<ph id="ph11">`VbStrConv.TraditionalChinese`</ph> <bpt id="p9">&lt;sup&gt;</bpt><ept id="p9">*</ept><ept id="p7">&lt;/sup&gt;</ept>|将简体中文字符转换为繁体中文。 |      <bpt id="p10">&lt;sup&gt;</bpt> <bpt id="p11">*</bpt> <ept id="p11">&lt;/sup&gt;</ept>适用于亚洲的区域设置。     <bpt id="p12">&lt;sup&gt;</bpt><ept id="p12">*</ept><ph id="ph12">*</ph><ept id="p10">&lt;/sup&gt;</ept>仅适用于日本。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  These constants are specified in the .NET Framework common language runtime.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 在.NET Framework 公共语言运行时中指定这些常量。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>As a result, they can be used anywhere in your code in place of the actual values.</source>
          <target state="translated">因此，它们可任意位置的实际值替换代码中。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>Most can be combined (for example, <ph id="ph1">`UpperCase + Wide`</ph>), except when they are mutually exclusive (for example, <ph id="ph2">`VbStrConv.Wide + VbStrConv.Narrow`</ph>).</source>
          <target state="translated">可以结合使用大多数 (例如， <ph id="ph1">`UpperCase + Wide`</ph>)，除非它们互相排斥的方式 (例如， <ph id="ph2">`VbStrConv.Wide + VbStrConv.Narrow`</ph>)。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>The following are valid word separators for proper casing: Null (<ph id="ph1">`Chr$(0)`</ph>), horizontal tab (<ph id="ph2">`Chr$(9)`</ph>), line feed (<ph id="ph3">`Chr$(10)`</ph>), vertical tab (<ph id="ph4">`Chr$(11)`</ph>), form feed (<ph id="ph5">`Chr$(12)`</ph>), carriage return (<ph id="ph6">`Chr$(13)`</ph>), space (single-byte character set) (<ph id="ph7">`Chr$(32)`</ph>).</source>
          <target state="translated">以下是正确的大小写的有效词分隔符︰ Null (<ph id="ph1">`Chr$(0)`</ph>)，水平制表符 (<ph id="ph2">`Chr$(9)`</ph>)，换行符 (<ph id="ph3">`Chr$(10)`</ph>)，垂直制表符 (<ph id="ph4">`Chr$(11)`</ph>)，换页符 (<ph id="ph5">`Chr$(12)`</ph>)，回车符 (<ph id="ph6">`Chr$(13)`</ph>)，空间 （单字节字符集） (<ph id="ph7">`Chr$(32)`</ph>)。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>The actual value for a space, which can be full or half width, varies by country/region for East Asian cultures.</source>
          <target state="translated">空格，这可以是 full 或半角的实际值因国家/地区对于东亚区域性而异。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression to be converted.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要转换的表达式。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.VbStrConv"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> member.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.VbStrConv"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>成员。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>The enumeration value specifying the type of conversion to perform.</source>
          <target state="translated">指定的执行的转换的类型的枚举值。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value, if different from the system <bpt id="p2">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>值，如果不同于系统<bpt id="p2">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>(The system <bpt id="p1">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value is the default.)</source>
          <target state="translated">(系统<bpt id="p1">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值是默认设置。)</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>Returns a string converted as specified.</source>
          <target state="translated">返回根据指定进行转换的字符串。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>Unsupported <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">LocaleID</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">Conversion</ph><ept id="p2">&lt;/code&gt;</ept> <ph id="ph3">&amp;lt;</ph> 0 or <ph id="ph4">&amp;gt;</ph> 2048, or unsupported conversion for specified locale.</source>
          <target state="translated">不支持<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">LocaleID</ph> <ept id="p1">&lt;/code&gt;</ept>， <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">Conversion</ph> <ept id="p2">&lt;/code&gt;</ept> <ph id="ph3">&amp;lt;</ph> 0 或<ph id="ph4">&amp;gt;</ph>2048，或不支持转换为指定的区域设置。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">返回字符串或对象包含的指定字符重复指定的次数。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">此函数将返回<ph id="ph1">`String`</ph>重复字符组成。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">组成的字符串的字符是中的第一个字符<ph id="ph1">`Character`</ph>重复自变量，但<ph id="ph2">`Number`</ph>次数。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>The length to the string to be returned.</source>
          <target state="translated">要返回的字符串长度。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">将使用仅表达式的第一个字符。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>If Character is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, it must contain either a <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or a <bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>value.</source>
          <target state="translated">如果字符是类型的<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，它必须包含<bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">返回字符串或对象包含的指定字符重复指定的次数。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph> is less than 0 or <ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph> type is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph>小于 0 或<ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph>类型无效。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">返回字符串或对象包含的指定字符重复指定的次数。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">此函数将返回<ph id="ph1">`String`</ph>重复字符组成。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">组成的字符串的字符是中的第一个字符<ph id="ph1">`Character`</ph>重复自变量，但<ph id="ph2">`Number`</ph>次数。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>The length to the string to be returned.</source>
          <target state="translated">要返回的字符串长度。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">将使用仅表达式的第一个字符。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>If Character is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, it must contain either a <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or a <bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>value.</source>
          <target state="translated">如果字符是类型的<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，它必须包含<bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">返回字符串或对象包含的指定字符重复指定的次数。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph> is less than 0 or <ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph> type is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph>小于 0 或<ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph>类型无效。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">返回字符串或对象包含的指定字符重复指定的次数。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">此函数将返回<ph id="ph1">`String`</ph>重复字符组成。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">组成的字符串的字符是中的第一个字符<ph id="ph1">`Character`</ph>重复自变量，但<ph id="ph2">`Number`</ph>次数。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>The length to the string to be returned.</source>
          <target state="translated">要返回的字符串长度。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">将使用仅表达式的第一个字符。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>If Character is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, it must contain either a <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or a <bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>value.</source>
          <target state="translated">如果字符是类型的<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，它必须包含<bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">返回字符串或对象包含的指定字符重复指定的次数。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph> is less than 0 or <ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph> type is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph>小于 0 或<ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph>类型无效。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>Returns a string in which the character order of a specified string is reversed.</source>
          <target state="translated">返回指定字符串的字符顺序相反顺序的字符串。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`StrReverse`</ph> function returns a string that contains the same characters as <ph id="ph2">`Expression`</ph>, but in the opposite order.</source>
          <target state="translated"><ph id="ph1">`StrReverse`</ph>函数将返回包含相同的字符的字符串<ph id="ph2">`Expression`</ph>，但以相反的顺序。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source>String expression whose characters are to be reversed.</source>
          <target state="translated">字符串的表达式，其字符顺序反转。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is a zero-length string (""), a zero-length string is returned.</source>
          <target state="translated">如果<ph id="ph1">`Expression`</ph>是零长度字符串 ("")，则返回一个零长度字符串。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>Returns a string in which the character order of a specified string is reversed.</source>
          <target state="translated">返回指定字符串的字符顺序相反顺序的字符串。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">返回包含没有前导空格的指定字符串的副本的字符串 (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>)，则没有尾随空格 (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>)，或没有前导空格或尾随空格 (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated"><ph id="ph1">`LTrim`</ph>， <ph id="ph2">`RTrim`</ph>，和<ph id="ph3">`Trim`</ph>函数从字符串末尾删除空格。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">返回包含没有前导空格的指定字符串的副本的字符串 (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>)，则没有尾随空格 (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>)，或没有前导空格或尾随空格 (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">返回的字符串或字符，其中包含指定的字符串转换为大写形式。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">小写字母都转换为大写;所有大写字母和 nonletter 字符都保持不变。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">操作字符串，以便区分大小的更改适用于在其中使用的应用程序的区域设置时，此函数将使用应用程序的区域性信息。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt; method, and pass &lt;xref:System.StringComparison&gt; or &lt;xref:System.StringComparison&gt; for the <ph id="ph2">`comparisonType`</ph> argument.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 如果你的应用程序进行安全决策基于比较或大小写更改操作的结果，则该操作，应使用&lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;方法，并传入&lt;xref:System.StringComparison&gt;或&lt;xref:System.StringComparison&gt;为<ph id="ph2">`comparisonType`</ph>自变量。&lt;/xref:System.StringComparison&gt; &lt;/xref:System.StringComparison&gt; &lt;/xref:System.String.Compare%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何区域性影响字符串在 Visual Basic 中<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">返回的字符串或字符，其中包含指定的字符串转换为大写形式。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">返回的字符串或字符，其中包含指定的字符串转换为大写形式。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">小写字母都转换为大写;所有大写字母和 nonletter 字符都保持不变。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">操作字符串，以便区分大小的更改适用于在其中使用的应用程序的区域设置时，此函数将使用应用程序的区域性信息。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt; method, and pass &lt;xref:System.StringComparison&gt; or &lt;xref:System.StringComparison&gt; for the <ph id="ph2">`comparisonType`</ph> argument.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 如果你的应用程序进行安全决策基于比较或大小写更改操作的结果，则该操作，应使用&lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;方法，并传入&lt;xref:System.StringComparison&gt;或&lt;xref:System.StringComparison&gt;为<ph id="ph2">`comparisonType`</ph>自变量。&lt;/xref:System.StringComparison&gt; &lt;/xref:System.StringComparison&gt; &lt;/xref:System.String.Compare%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何区域性影响字符串在 Visual Basic 中<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">任何有效<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>表达式。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">返回的字符串或字符，其中包含指定的字符串转换为大写形式。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>