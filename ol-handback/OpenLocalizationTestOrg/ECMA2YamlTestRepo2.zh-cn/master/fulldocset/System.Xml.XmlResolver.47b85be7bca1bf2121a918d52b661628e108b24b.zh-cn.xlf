<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d116adf6ac54b0769c077cefe69e74068024c0c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.XmlResolver.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9da5d02caf48d9e426c29eaef79d16b062c90c7d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3b9f46892b511c7eea4baaa472c07ef996e3c03</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Resolves external XML resources named by a Uniform Resource Identifier (URI).</source>
          <target state="translated">解析由统一资源标识符 (URI) 命名的外部 XML 资源。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The XmlResolver type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas.</source>
          <target state="translated">XmlResolver 类型用于解析外部 XML 资源，如实体、 文档类型定义 (Dtd) 或架构。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</source>
          <target state="translated">它也是用于过程包含和导入在可扩展样式表语言 (XSL) 样式表或 XML 架构定义语言 (XSD) 架构中找到的元素。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>XmlResolver handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type.</source>
          <target state="translated">XmlResolver 处理协商的资源，包括处理安全凭据、 打开数据源的连接和流或其他对象类型的形式返回资源的连接的所有方面。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The object that calls XmlResolver has the task of interpreting the stream.</source>
          <target state="translated">调用 XmlResolver 对象具有解释流的任务。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml&gt; namespace includes two concrete implementations of the XmlResolver class:      -   &lt;xref:System.Xml.XmlUrlResolver&gt; is the default resolver for all classes in the &lt;xref:System.Xml&gt; namespace.</source>
          <target state="translated">&lt;xref:System.Xml&gt;命名空间包含的 XmlResolver 类的两个具体实现:-&lt;xref:System.Xml.XmlUrlResolver&gt;是中的所有类的默认冲突解决程序&lt;xref:System.Xml&gt;命名空间。&lt;/xref:System.Xml&gt; &lt;/xref:System.Xml.XmlUrlResolver&gt; &lt;/xref:System.Xml&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It supports the <ph id="ph1">`file://`</ph> and <ph id="ph2">`http://`</ph> protocols and requests from the &lt;xref:System.Net.WebRequest?displayProperty=fullName&gt; class.</source>
          <target state="translated">它支持<ph id="ph1">`file://`</ph>和<ph id="ph2">`http://`</ph>协议和请求从&lt;xref:System.Net.WebRequest?displayProperty=fullName&gt;类。&lt;/xref:System.Net.WebRequest?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For examples of extending the class to improve performance, see the &lt;xref:System.Xml.XmlUrlResolver&gt; reference page.</source>
          <target state="translated">扩展类，以提高性能的示例，请参阅&lt;xref:System.Xml.XmlUrlResolver&gt;引用页。&lt;/xref:System.Xml.XmlUrlResolver&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xml.XmlSecureResolver&gt; helps secure another XmlResolver object by wrapping the object object and restricting the resources that it can access.</source>
          <target state="translated">-&lt;xref:System.Xml.XmlSecureResolver&gt;从而帮助保护另一个 XmlResolver 对象安全的包装的对象的对象，并限制它可以访问的资源。&lt;/xref:System.Xml.XmlSecureResolver&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Xml.XmlSecureResolver&gt; can prohibit access to specific Internet sites or zones.</source>
          <target state="translated">例如，&lt;xref:System.Xml.XmlSecureResolver&gt;可以禁止访问特定的 Internet 站点或区域。&lt;/xref:System.Xml.XmlSecureResolver&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can create and specify your own resolver.</source>
          <target state="translated">你可以创建并指定你自己的解析程序。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you don't specify a resolver, the reader uses a default &lt;xref:System.Xml.XmlUrlResolver&gt; with no user credentials.</source>
          <target state="translated">如果未指定解析程序，读取器将使用默认&lt;xref:System.Xml.XmlUrlResolver&gt;使用没有用户凭据。&lt;/xref:System.Xml.XmlUrlResolver&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You specify the XmlResolver to use by setting the &lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName&gt; property and passing the &lt;xref:System.Xml.XmlReaderSettings&gt; object to the &lt;xref:System.Xml.XmlReader.Create%2A&gt; method.</source>
          <target state="translated">指定要使用通过设置&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName&gt;属性并传入&lt;xref:System.Xml.XmlReaderSettings&gt;对象传递给&lt;xref:System.Xml.XmlReader.Create%2A&gt;方法。&lt;/xref:System.Xml.XmlReader.Create%2A&gt; &lt;/xref:System.Xml.XmlReaderSettings&gt; &lt;/xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the resource is stored on a system that requires authentication, you use the &lt;xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt; property to specify the necessary credentials.</source>
          <target state="translated">如果资源需要身份验证的系统上存储，则使用&lt;xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt;属性来指定所需的凭据。&lt;/xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Supplying authentication credentials    The file that contains the XML data to read may have a restricted access policy.</source>
          <target state="translated">提供身份验证凭据包含要读取的 XML 数据的文件可能具有受限制的访问策略。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If authentication is required to access a network resource, use the &lt;xref:System.Xml.XmlResolver.Credentials%2A&gt; property to specify the necessary credentials.</source>
          <target state="translated">如果需要身份验证来访问网络资源，使用&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;属性来指定所需的凭据。&lt;/xref:System.Xml.XmlResolver.Credentials%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Xml.XmlResolver.Credentials%2A&gt; property is not set, credentials are set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;未设置属性，凭据都设置为<ph id="ph1">`null`</ph>。&lt;/xref:System.Xml.XmlResolver.Credentials%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, assume that credentials are needed when requesting data from the web for authentication purposes.</source>
          <target state="translated">例如，假设从以进行身份验证 web 请求数据时所需凭据。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Unless the web virtual directory allows anonymous access, you must set the &lt;xref:System.Xml.XmlResolver.Credentials%2A&gt; property to supply credentials.</source>
          <target state="translated">除非 web 虚拟目录允许匿名访问，你必须设置&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;属性提供的凭据。&lt;/xref:System.Xml.XmlResolver.Credentials%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following example creates an &lt;xref:System.Xml.XmlReader&gt; object that uses an &lt;xref:System.Xml.XmlUrlResolver&gt; with default credentials to access the http://localhost/bookstore/inventory.xml site.</source>
          <target state="translated">下面的示例创建&lt;xref:System.Xml.XmlReader&gt;对象，它使用&lt;xref:System.Xml.XmlUrlResolver&gt;使用默认凭据，访问 http://localhost/bookstore/inventory.xml 站点。&lt;/xref:System.Xml.XmlUrlResolver&gt; &lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XmlReaderSettings.cctor#2<ept id="p2">](~/add/codesnippet/cpp/t-system.xml.xmlresolver_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XmlReaderSettings.cctor#2<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlresolver_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XmlReaderSettings.cctor#2<ept id="p6">](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_1.vb)</ept><ept id="p5">]</ept>       You can supply different credentials for different URIs and add them to a cache.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XmlReaderSettings.cctor#2<ept id="p2">](~/add/codesnippet/cpp/t-system.xml.xmlresolver_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XmlReaderSettings.cctor#2<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlresolver_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XmlReaderSettings.cctor#2<ept id="p6">](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_1.vb)</ept> <ept id="p5">]</ept>可以为不同的 Uri 提供不同的凭据并将其添加到缓存。    </target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These credentials are used to check authentication for the different URIs regardless of the original source of the XML.</source>
          <target state="translated">这些凭据用于检查不同 Uri 的 xml 的原始源无关的身份验证。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following example shows how to add credentials to a cache.</source>
          <target state="translated">下面的示例演示如何将凭据添加到缓存。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>XslCompiledTransform.Load#11<ept id="p2">](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_2.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XslCompiledTransform.Load#11<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlresolver_2.cs)</ept><ept id="p3">]</ept>      ## Security considerations    Consider the following items when working with the XmlResolver class.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>XslCompiledTransform.Load#11<ept id="p2">](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_2.vb)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XslCompiledTransform.Load#11<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlresolver_2.cs)</ept> <ept id="p3">]</ept> # # 使用 XmlResolver 类时，安全注意事项考虑下列事项。  </target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-   XmlResolver objects can contain sensitive information such as user credentials.</source>
          <target state="translated">-XmlResolver 对象可以包含敏感信息，例如用户凭据。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You should be careful when caching XmlResolver objects and should not pass the XmlResolver object to an untrusted component.</source>
          <target state="translated">缓存 XmlResolver 对象，并应将 XmlResolver 对象传递给不受信任的组件时，你应当小心。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-   If you are designing a class property that uses the XmlResolver class, the property should be defined as a write-only property.</source>
          <target state="translated">-如果您正在设计使用 XmlResolver 类的类属性，则该属性应定义为只写属性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The property can be used to specify the XmlResolver to use, but it cannot be used to return an XmlResolver object.</source>
          <target state="translated">属性可以用于指定要使用，但它不能用于返回 XmlResolver 对象。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-   If your application accepts XmlResolver objects from untrusted code, you cannot assume that the URI passed into the &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt; method will be the same as that returned by the &lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt; method.</source>
          <target state="translated">-如果你的应用程序接受不受信任代码的 XmlResolver 对象，您不能假设 URI 传递到&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;方法将返回的相同&lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt;方法。&lt;/xref:System.Xml.XmlResolver.ResolveUri%2A&gt; &lt;/xref:System.Xml.XmlResolver.GetEntity%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Classes derived from the XmlResolver class can override the &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt; method and return data that is different than what was contained in the original URI.</source>
          <target state="translated">从 XmlResolver 类派生的类可以重写&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;不同于原始 URI 中包含的方法，并且返回数据。&lt;/xref:System.Xml.XmlResolver.GetEntity%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-   Your application can mitigate memory denial of service threats to the &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt; method by implementing an &lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt; that limits the number of bytes read.</source>
          <target state="translated">-您的应用程序可以减轻内存拒绝服务威胁到&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;方法通过实现&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;限制读取的字节数。&lt;/xref:System.Runtime.InteropServices.ComTypes.IStream&gt; &lt;/xref:System.Xml.XmlResolver.GetEntity%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt; method.</source>
          <target state="translated">这有助于防止恶意代码尝试传递到的字节的无限流的情况下出现&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;方法。&lt;/xref:System.Xml.XmlResolver.GetEntity%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">派生的类构造函数来初始化此类型中的状态将调用此构造函数。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, sets the credentials used to authenticate web requests.</source>
          <target state="translated">当在派生类中重写，设置用于对 web 请求进行身份验证的凭据。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the virtual directory does not require authentication, this property doesn't have to be set.</source>
          <target state="translated">如果虚拟目录不要求身份验证，此属性没有设置。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Otherwise, the credentials of the user must be supplied.</source>
          <target state="translated">否则，必须提供用户的凭据。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following C# code sets credentials on the &lt;xref:System.Xml.XmlResolver&gt; object.</source>
          <target state="translated">下面的 C# 代码上设置凭据&lt;xref:System.Xml.XmlResolver&gt;对象。&lt;/xref:System.Xml.XmlResolver&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = nc;   ```</ph>       You can associate different credentials with different URIs and add them to a cache.</source>
          <target state="translated"><ph id="ph1">```   NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = nc;   ```</ph>你可以将不同的凭据与不同的 Uri 相关联，并将其添加到缓存。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.</source>
          <target state="translated">然后可以使用的凭据来检查不同 Uri 的 xml 的原始源无关的身份验证。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The credentials to be used to authenticate web requests.</source>
          <target state="translated">要使用 web 请求进行身份验证的凭据。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If this property is not set, the value defaults to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; that is, the <bpt id="p2">&lt;xref uid="langword_csharp_XmlResolver" name="XmlResolver" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has no user credentials.</source>
          <target state="translated">如果未设置此属性，则该值默认为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; 即， <bpt id="p2">&lt;xref uid="langword_csharp_XmlResolver" name="XmlResolver" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>没有用户凭据。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, maps a URI to an object that contains the actual resource.</source>
          <target state="translated">当在派生类中重写，请将 URI 映射到包含实际资源的对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents.</source>
          <target state="translated">当调用方想要将给定的 URI 映射到包含实际资源的 uri，该 URI 表示的对象，使用此方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The type of object returned is negotiable; however, the implementation must always support &lt;xref:System.IO.Stream?displayProperty=fullName&gt;.</source>
          <target state="translated">返回对象的类型是 negotiable;但是，实现必须始终支持&lt;xref:System.IO.Stream?displayProperty=fullName&gt;.&lt;/xref:System.IO.Stream?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For the asynchronous version of this method, see &lt;xref:System.Xml.XmlResolver.GetEntityAsync%2A&gt;.</source>
          <target state="translated">此方法的异步版本，请参阅&lt;xref:System.Xml.XmlResolver.GetEntityAsync%2A&gt;。&lt;/xref:System.Xml.XmlResolver.GetEntityAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Your application can mitigate memory denial of service threats to the GetEntity method by implementing an &lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt; that limits the number of bytes read.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 你的应用程序可以通过实现来缓解内存拒绝服务威胁到 GetEntity 方法&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;限制读取的字节数。&lt;/xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the GetEntity method.</source>
          <target state="translated">这有助于应对这种情况下恶意代码，尝试将字节的无限流传递到 GetEntity 方法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The URI returned from &lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.</source>
          <target state="translated">从&lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.&lt;/xref:System.Xml.XmlResolver.ResolveUri*&gt;返回的 URI</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
          <target state="translated">当前未使用。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
          <target state="translated">要返回的对象类型。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The current version only returns System.IO.Stream objects.</source>
          <target state="translated">当前版本只返回 System.IO.Stream 对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A stream object or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a type other than stream is specified.</source>
          <target state="translated">流对象或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定了流以外的类型。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph> is not a <bpt id="p1">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> type.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph>不是<bpt id="p1">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类型。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The specified URI is not an absolute URI.</source>
          <target state="translated">指定的 URI 不是一个绝对 URI。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;absoluteUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;absoluteUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There is a runtime error (for example, an interrupted server connection).</source>
          <target state="translated">没有运行时错误 （例如，中断的服务器连接）。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
          <target state="translated">将 URI 异步映射到包含实际资源的对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This is the asynchronous version of &lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;, with the same functionality.</source>
          <target state="translated">这是异步版本&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;，具有相同功能。&lt;/xref:System.Xml.XmlResolver.GetEntity%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To use this method, you must set the &lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt; flag to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">若要使用此方法，必须设置&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;标志切换为<ph id="ph1">`true`</ph>。&lt;/xref:System.Xml.XmlReaderSettings.Async%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The URI returned from &lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.</source>
          <target state="translated">从&lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.&lt;/xref:System.Xml.XmlResolver.ResolveUri*&gt;返回的 URI</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
          <target state="translated">当前未使用。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
          <target state="translated">要返回的对象类型。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The current version only returns &lt;xref:System.IO.Stream&gt; objects.</source>
          <target state="translated">当前版本只返回&lt;xref:System.IO.Stream&gt;对象。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A stream object or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a type other than stream is specified.</source>
          <target state="translated">流对象或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定了流以外的类型。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, resolves the absolute URI from the base and relative URIs.</source>
          <target state="translated">当在派生类中重写时解析 uri 基和相对 uri 的绝对 URI。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The absolute URI may be used as the base URI for any subsequent requests for entities that are relative to this URI.</source>
          <target state="translated">绝对 URI 可能用作相对于此 URI 的实体的任何后续请求的基 URI。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The base URI used to resolve the relative URI.</source>
          <target state="translated">基 URI 用于解析相对 URI。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The URI to resolve.</source>
          <target state="translated">要解析的 URI。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The URI can be absolute or relative.</source>
          <target state="translated">URI 可以是绝对或相对。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If absolute, this value effectively replaces the <ph id="ph1">`baseUri`</ph> value.</source>
          <target state="translated">如果绝对的此值有效地替换<ph id="ph1">`baseUri`</ph>值。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If relative, it combines with the <ph id="ph1">`baseUri`</ph> to make an absolute URI.</source>
          <target state="translated">如果相对的它结合了以及<ph id="ph1">`baseUri`</ph>以构成绝对 URI。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The absolute URI or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the relative URI cannot be resolved.</source>
          <target state="translated">绝对 URI 或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不能解析相对 URI。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;relativeUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;relativeUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Enables the resolver to return types other than <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">使之外的返回类型的解析程序<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The URI.</source>
          <target state="translated">URI。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The type to return.</source>
          <target state="translated">要返回的类型。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p2">&lt;/code&gt;</ept> is supported; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p2">&lt;/code&gt;</ept>受支持; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>