<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bd21199241fb837aade668869d870fb7a8f66e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Selectors.SecurityTokenAuthenticator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59459f68674664893d7d216bcef527b57d34143f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c307544e69f4e252df5fd6fceaf0c6e566a9d28</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Authenticates a security token.</source>
          <target state="translated">进行身份验证安全令牌。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The SecurityTokenAuthenticator class and the classes that derive from it authenticate security tokens.</source>
          <target state="translated">SecurityTokenAuthenticator 类和从它派生的类进行身份验证安全令牌。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Typically, you would only derive a class directly from SecurityTokenAuthenticator when you create a custom security token.</source>
          <target state="translated">通常情况下，你将仅从派生一个类直接 SecurityTokenAuthenticator 时创建自定义安全令牌。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from SecurityTokenAuthenticator, such as &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;.</source>
          <target state="translated">如果你想要重写内置安全令牌的默认身份验证或授权行为，从 SecurityTokenAuthenticator，如&lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;.&lt;/xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;派生的类之一派生</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you derive a class from SecurityTokenAuthenticator, override the following two methods: &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;.</source>
          <target state="translated">当从 SecurityTokenAuthenticator 派生一个类时，重写以下两种方法︰&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;和&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt; &lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt; method determines whether this security token authenticator can authenticate a specific security token.</source>
          <target state="translated">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;方法确定此安全令牌的身份验证器是否可以进行身份验证的特定安全令牌。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method authenticates the security token and establishes a set of authorization policies for authorization.</source>
          <target state="translated">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;方法进行身份验证安全令牌，并建立一组授权的授权策略。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The authorization policies map the claims found in the security token to claims required by the application.</source>
          <target state="translated">授权策略会将映射到应用程序所需的声明的安全令牌中找到的声明。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenAuthenticator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenAuthenticator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">获取一个值，该值指示是否可以通过此安全令牌的身份验证器验证指定的安全令牌。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The CanValidateToken method checks whether the token parameter is <ph id="ph1">`null`</ph> and then calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt; method to determine whether this security token authenticator can authenticate the security token type for <ph id="ph2">`token`</ph>.</source>
          <target state="translated">CanValidateToken 方法检查令牌参数是否为<ph id="ph1">`null`</ph>，然后调用&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;方法来确定此安全令牌的身份验证器是否可以进行身份验证的安全令牌类型<ph id="ph2">`token`</ph>。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行验证。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when token can be validated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>当可以验证令牌;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">当在派生类中重写，获取一个值，该值指示是否可以通过此安全令牌的身份验证器验证指定的安全令牌。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The CanValidateTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt; method to determine whether this security token authenticator can authenticate the security token type for <ph id="ph1">`token`</ph>.</source>
          <target state="translated">调用 CanValidateTokenCore 方法&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;方法来确定此安全令牌的身份验证器是否可以进行身份验证的安全令牌类型<ph id="ph1">`token`</ph>。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This does not authenticate the security token; that is performed by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt; method.</source>
          <target state="translated">这不验证身份的安全令牌;由执行&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;方法。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行验证。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">token</ph><ept id="p2">&lt;/code&gt;</ept> can be validated; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>当<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">token</ph> <ept id="p2">&lt;/code&gt;</ept>可验证; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">对指定的安全令牌进行身份验证并返回对安全令牌的授权策略集。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The ValidateToken method checks whether the <ph id="ph1">`token`</ph> parameter is <ph id="ph2">`null`</ph>, calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt; method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method.</source>
          <target state="translated">ValidateToken 方法检查是否<ph id="ph1">`token`</ph>参数是<ph id="ph2">`null`</ph>，调用&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;方法以确定此安全令牌身份验证可以对此安全令牌进行身份验证，以及如果它知道如何操作，然后调用&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;方法。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; &lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行验证。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph>类型的<bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，包含对此应用程序生效的授权策略集。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> cannot be authenticated by this security token authenticator       -or-       <ph id="ph2">&lt;code&gt;token&lt;/code&gt;</ph> is not authenticated.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph>无法通过此安全令牌身份验证身份验证-或-<ph id="ph2">&lt;code&gt;token&lt;/code&gt;</ph>未经过身份验证。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">当在派生类中重写，对指定的安全令牌进行身份验证，并返回的安全令牌的授权策略集。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Override the ValidateTokenCore method to authenticate a specific security token type.</source>
          <target state="translated">重写 ValidateTokenCore 方法进行身份验证的特定安全令牌类型。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When the ValidateTokenCore method is overridden, follow these guidelines:      -   When the security token passed into the <ph id="ph1">`token`</ph> parameter cannot be validated, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.</source>
          <target state="translated">ValidateTokenCore 方法重写时，请遵循以下准则:-当安全令牌传递到<ph id="ph1">`token`</ph>参数不能通过验证，引发&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;异常。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-   When there are no authorization policies in effect for this application, return an empty &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;.</source>
          <target state="translated">-当没有任何对此应用程序生效的授权策略，则返回空&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;的类型&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;.&lt;/xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt; &lt;/xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`null`</ph> is returned by this method, <ph id="ph2">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> throws the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.</source>
          <target state="translated">当<ph id="ph1">`null`</ph>通过此方法返回<ph id="ph2">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph>引发&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;异常。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The ValidateTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt; method.</source>
          <target state="translated">调用 ValidateTokenCore 方法&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;方法。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行验证。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph>类型的<bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，包含对此应用程序生效的授权策略集。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>