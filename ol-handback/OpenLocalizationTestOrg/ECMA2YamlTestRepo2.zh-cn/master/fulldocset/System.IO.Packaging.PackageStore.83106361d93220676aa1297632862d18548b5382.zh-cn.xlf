<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9ae2a41373d525c6f3658914f55aced08abc50a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Packaging.PackageStore.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ab1970ca66b5ffe5b04fe36eb7c96453eb0366b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2174cf495547397055709800573510084c573622</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of application-specific <bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances used in combination with <bpt id="p2">&lt;xref href="System.IO.Packaging.PackWebRequest"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">表示应用程序特定的集合<bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与结合使用的实例<bpt id="p2">&lt;xref href="System.IO.Packaging.PackWebRequest"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The PackageStore defines a reference collections of package that are open and active in the application.</source>
          <target state="translated">PackageStore 定义是开放的且应用程序中处于活动状态的引用集合的包。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Packages added to the PackageStore are accessed is by their key URI value.</source>
          <target state="translated">包添加到 PackageStore 是访问由其密钥的 URI 值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The PackageStore supports three common uses:      1.</source>
          <target state="translated">PackageStore 支持三种常见用途︰ 1。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Accessing &lt;xref:System.IO.Packaging.PackagePart&gt; data through &lt;xref:System.IO.Packaging.PackWebRequest&gt;.</source>
          <target state="translated">访问&lt;xref:System.IO.Packaging.PackagePart&gt;通过&lt;xref:System.IO.Packaging.PackWebRequest&gt;.&lt;/xref:System.IO.Packaging.PackWebRequest&gt;的数据&lt;/xref:System.IO.Packaging.PackagePart&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The application obtaining an instance of a &lt;xref:System.IO.Packaging.Package&gt; given the package's URI.</source>
          <target state="translated">应用程序获取的实例&lt;xref:System.IO.Packaging.Package&gt;给定包的 URI。&lt;/xref:System.IO.Packaging.Package&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Accessing packages that are created and stored in a &lt;xref:System.IO.MemoryStream&gt;.</source>
          <target state="translated">创建和存储在&lt;xref:System.IO.MemoryStream&gt;。&lt;/xref:System.IO.MemoryStream&gt;访问包</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To improve performance and minimize the overhead of repeated file open/close operations, the PackageStore is used to manage instances of packages accessed by &lt;xref:System.IO.Packaging.PackWebRequest&gt; and directly by the application.</source>
          <target state="translated">若要提高性能并重复的文件打开/关闭操作的开销降到最低，PackageStore 用来管理的包访问实例&lt;xref:System.IO.Packaging.PackWebRequest&gt;，直接按应用程序。&lt;/xref:System.IO.Packaging.PackWebRequest&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When accessing data in a package, the &lt;xref:System.IO.Packaging.Package&gt; address of a requested &lt;xref:System.IO.Packaging.PackagePart&gt; &lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt; is first checked to see if the package is already defined and open in the PackageStore.</source>
          <target state="translated">在访问在包中，数据时&lt;xref:System.IO.Packaging.Package&gt;地址的请求&lt;xref:System.IO.Packaging.PackagePart&gt;&lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt;首先会检查以确定包是否已定义，而在 PackageStore 中打开。&lt;/xref:System.IO.Packaging.PackagePart.Uri%2A&gt; &lt;/xref:System.IO.Packaging.PackagePart&gt; &lt;/xref:System.IO.Packaging.Package&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the package is defined as open in the PackageStore, requested parts can be accessed directly without repeatedly opening and closing the package for each  request.</source>
          <target state="translated">如果包定义为在 PackageStore 中打开，则可以直接而无需重复打开和关闭每个请求的包访问请求的部分。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If your application opens a package with &lt;xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName&gt;, &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; can be called to add the package to the PackageStore.</source>
          <target state="translated">如果你的应用程序打开的包&lt;xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName&gt;，&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;可以调用以将包添加到 PackageStore。&lt;/xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; &lt;/xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt; should later be called to remove the package from the PackageStore prior to calling &lt;xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt;应更高版本调用以从之前调用&lt;xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName&gt;.&lt;/xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName&gt; PackageStore 删除包&lt;/xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>XPS packages opened with an &lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt; constructor are automatically added and removed from the PackageStore when the document is created and disposed.</source>
          <target state="translated">使用 XPS 包打开&lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt;构造函数将自动添加和删除从 PackageStore，创建和释放文档时。&lt;/xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(You do not need to call &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; or &lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt; separately for XPS packages opened with &lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt; constructors.)       The file I/O permissions of a package accessed through the PackageStore remains the same as the I/O permissions set on the package when it is opened.</source>
          <target state="translated">(不需要调用&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;或&lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt;单独打开的 XPS 包与&lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt;构造函数。)&lt;/xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt; &lt;/xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt; &lt;/xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;     通过 PackageStore 访问包的文件 I/O 权限保持为打开状态时为包设置的 I/O 权限相同。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The PackageStore only provides references to the packages that have been added the store.</source>
          <target state="translated">PackageStore 仅提供对已添加存储的包的引用。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is up to the application to correctly open, update, and close each package.</source>
          <target state="translated">它是由应用程序正确打开、 更新和关闭每个包。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Packages added to the PackageStore can be accessed in multithreaded environments when they are used in combination with a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> parser such as &lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">结合使用时，可以在多线程环境中访问程序包添加到 PackageStore<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>如&lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName&gt;分析器</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When operating in a multithreaded environment, the application must lock the package before access.</source>
          <target state="translated">在多线程环境操作时，应用程序必须已锁定之前访问包。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the store.</source>
          <target state="translated">将添加<bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到存储区。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`packageUri`</ph> defines the package's key URI that is compared when you call &lt;xref:System.IO.Packaging.PackWebRequest&gt;.</source>
          <target state="translated"><ph id="ph1">`packageUri`</ph>定义包的密钥进行比较时调用&lt;xref:System.IO.Packaging.PackWebRequest&gt;.&lt;/xref:System.IO.Packaging.PackWebRequest&gt;的 URI</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`packageUri`</ph> matches the &lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt; for a &lt;xref:System.IO.Packaging.PackagePart&gt; in a &lt;xref:System.IO.Packaging.PackWebRequest&gt; call, the package defined in the &lt;xref:System.IO.Packaging.PackageStore&gt; is used to access the requested part.</source>
          <target state="translated">如果<ph id="ph1">`packageUri`</ph>匹配项&lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt;&lt;xref:System.IO.Packaging.PackagePart&gt;的&lt;xref:System.IO.Packaging.PackWebRequest&gt;调用，&lt;xref:System.IO.Packaging.PackageStore&gt;用于访问请求的部件&lt;/xref:System.IO.Packaging.PackageStore&gt;中定义的包&lt;/xref:System.IO.Packaging.PackWebRequest&gt;中&lt;/xref:System.IO.Packaging.PackagePart&gt;&lt;/xref:System.IO.Packaging.PackagePart.Uri%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`packageUri`</ph> does not match the &lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt; for a &lt;xref:System.IO.Packaging.PackagePart&gt; in a &lt;xref:System.IO.Packaging.PackWebRequest&gt; call, the package with the specified URI is opened to access the requested part.</source>
          <target state="translated">如果<ph id="ph1">`packageUri`</ph>&lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt;&lt;xref:System.IO.Packaging.PackagePart&gt;中&lt;xref:System.IO.Packaging.PackWebRequest&gt;调用，用指定的 URI 的包打开访问请求的部件&lt;/xref:System.IO.Packaging.PackWebRequest&gt;&lt;/xref:System.IO.Packaging.PackagePart&gt;&lt;/xref:System.IO.Packaging.PackagePart.Uri%2A&gt;不匹配</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> This method demands &lt;xref:System.Security.Permissions.EnvironmentPermission&gt; for all custom &lt;xref:System.IO.Packaging.Package&gt; (non-&lt;xref:System.IO.Packaging.ZipPackage&gt;) types.</source>
          <target state="translated"><bpt id="p1">**</bpt>安全说明<ept id="p1">**</ept>此方法要求&lt;xref:System.Security.Permissions.EnvironmentPermission&gt;为所有自定义&lt;xref:System.IO.Packaging.Package&gt;(非&lt;xref:System.IO.Packaging.ZipPackage&gt;) 类型。&lt;/xref:System.IO.Packaging.ZipPackage&gt; &lt;/xref:System.IO.Packaging.Package&gt; &lt;/xref:System.Security.Permissions.EnvironmentPermission&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The key <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> of the <ph id="ph2">`package`</ph> to compare in a <bpt id="p1">&lt;xref href="System.IO.Packaging.PackWebRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">密钥<ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>的<ph id="ph2">`package`</ph>中的比较<bpt id="p1">&lt;xref href="System.IO.Packaging.PackWebRequest"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The package to add to the store.</source>
          <target state="translated">要添加到存储的包。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;package&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;package&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph>是无效的包<ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A package with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">packageUri</ph><ept id="p1">&lt;/code&gt;</ept> is already in the store.</source>
          <target state="translated">具有指定的包<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">packageUri</ph> <ept id="p1">&lt;/code&gt;</ept>已在存储中。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with a specified <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> from the store.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与指定<ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>从存储区。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`packageUri`</ph> is matched to the URIs specified in the &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; method call.</source>
          <target state="translated"><ph id="ph1">`packageUri`</ph>匹配的 Uri 中指定&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;方法调用。&lt;/xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> This method demands &lt;xref:System.Security.Permissions.EnvironmentPermission&gt; for all custom &lt;xref:System.IO.Packaging.Package&gt; (non-&lt;xref:System.IO.Packaging.ZipPackage&gt;) types.</source>
          <target state="translated"><bpt id="p1">**</bpt>安全说明<ept id="p1">**</ept>此方法要求&lt;xref:System.Security.Permissions.EnvironmentPermission&gt;为所有自定义&lt;xref:System.IO.Packaging.Package&gt;(非&lt;xref:System.IO.Packaging.ZipPackage&gt;) 类型。&lt;/xref:System.IO.Packaging.ZipPackage&gt; &lt;/xref:System.IO.Packaging.Package&gt; &lt;/xref:System.Security.Permissions.EnvironmentPermission&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> of the package to return.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>要返回的包。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The package with a specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">packageUri</ph><ept id="p1">&lt;/code&gt;</ept>; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if a package with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">packageUri</ph><ept id="p3">&lt;/code&gt;</ept> is not in the store.</source>
          <target state="translated">与指定包<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">packageUri</ph> <ept id="p1">&lt;/code&gt;</ept>; 或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，如果指定的包<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">packageUri</ph> <ept id="p3">&lt;/code&gt;</ept>不是存储区。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph>是无效的包<ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Removes the <bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with a specified <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> from the store.</source>
          <target state="translated">删除<bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与指定<ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>从存储区。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`packageUri`</ph> is matched to the URIs specified in the &lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt; method call.</source>
          <target state="translated"><ph id="ph1">`packageUri`</ph>匹配的 Uri 中指定&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;方法调用。&lt;/xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> This method demands &lt;xref:System.Security.Permissions.EnvironmentPermission&gt; for all custom &lt;xref:System.IO.Packaging.Package&gt; (non-&lt;xref:System.IO.Packaging.ZipPackage&gt;) types.</source>
          <target state="translated"><bpt id="p1">**</bpt>安全说明<ept id="p1">**</ept>此方法要求&lt;xref:System.Security.Permissions.EnvironmentPermission&gt;为所有自定义&lt;xref:System.IO.Packaging.Package&gt;(非&lt;xref:System.IO.Packaging.ZipPackage&gt;) 类型。&lt;/xref:System.IO.Packaging.ZipPackage&gt; &lt;/xref:System.IO.Packaging.Package&gt; &lt;/xref:System.Security.Permissions.EnvironmentPermission&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> of the package to remove.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>的要删除的包。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph>是无效的包<ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>