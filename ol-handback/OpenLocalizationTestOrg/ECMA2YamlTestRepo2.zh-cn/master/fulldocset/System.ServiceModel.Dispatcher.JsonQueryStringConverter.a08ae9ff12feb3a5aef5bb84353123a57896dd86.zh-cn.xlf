<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db1c2a641ce2f80966b298990c234b858821ff02</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Dispatcher.JsonQueryStringConverter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32103788b4144cb49169a56251267d9e3c863cda</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cde8636d304d9e35de1dcba01968d77759253e4c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This class converts a parameter value to and from a JavaScript Object Notation (JSON).</source>
          <target state="translated">收件人和从 JavaScript 对象表示法 (JSON) 进行此类转换参数值。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Parameters can be specified in a JSON query string within a URL.</source>
          <target state="translated">可以在 URL 中的 JSON 查询字符串中指定参数。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the &lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt; is used to process HTTP requests from browser-based ASP.NET AJAX clients.</source>
          <target state="translated">此类控制 JSON 查询字符串参数如何映射到和从服务操作的参数时&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;用于处理来自基于浏览器的 ASP.NET AJAX 客户端的 HTTP 请求。&lt;/xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class is used internally by the <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt; class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string.</source>
          <target state="translated">内部使用此类<ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;终结点配置为接受 HTTP GET/POST 请求使用的 URI 查询字符串编码的参数的类。&lt;/xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string.</source>
          <target state="translated">此类使用 CLR 对象和 URI 查询字符串中的各个操作请求参数值之间进行转换。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Unlike its base type, this class supports values of both primitive and complex types.</source>
          <target state="translated">与其基类型不同，此类支持的基元和复杂类型的值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>JsonQueryStringConverter derives from &lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt; and supports the following types:      -   &lt;xref:System.Byte&gt;      -   &lt;xref:System.SByte&gt;      -   &lt;xref:System.Int16&gt;      -   &lt;xref:System.Int32&gt;      -   &lt;xref:System.Int64&gt;      -   &lt;xref:System.UInt16&gt;      -   &lt;xref:System.UInt32&gt;      -   &lt;xref:System.UInt64&gt;      -   &lt;xref:System.Single&gt;      -   &lt;xref:System.Double&gt;      -   &lt;xref:System.Char&gt;      -   &lt;xref:System.Decimal&gt;      -   &lt;xref:System.Boolean&gt;      -   &lt;xref:System.String&gt;      -   &lt;xref:System.DateTime&gt;      -   &lt;xref:System.TimeSpan&gt;      -   &lt;xref:System.Guid&gt;      -   An &lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt;      -   &lt;xref:System.Uri&gt;      -   &lt;xref:System.Object&gt;       Unlike its base type, this converter can handle any type adhering to the Data Contract model.</source>
          <target state="translated">JsonQueryStringConverter 派生自&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;，并支持以下类型:- &lt;xref:System.Byte&gt;- &lt;xref:System.SByte&gt;- &lt;xref:System.Int16&gt;- &lt;xref:System.Int32&gt;- &lt;xref:System.Int64&gt;- &lt;xref:System.UInt16&gt;- &lt;xref:System.UInt32&gt;- &lt;xref:System.UInt64&gt;- &lt;xref:System.Single&gt;- &lt;xref:System.Double&gt;- &lt;xref:System.Char&gt;- &lt;xref:System.Decimal&gt;- &lt;xref:System.Boolean&gt;- &lt;xref:System.String&gt;- &lt;xref:System.DateTime&gt;- &lt;xref:System.TimeSpan&gt;- &lt;xref:System.Guid&gt;-一个&lt;xref:System.Array&gt;类型的&lt;xref:System.Byte&gt;- &lt;xref:System.Uri&gt;-&lt;xref:System.Object&gt;不同其基类型，此转换器可以处理与数据协定模型相符的任何类型。&lt;/xref:System.Object&gt; &lt;/xref:System.Uri&gt; &lt;/xref:System.Byte&gt; &lt;/xref:System.Array&gt; &lt;/xref:System.Guid&gt; &lt;/xref:System.TimeSpan&gt; &lt;/xref:System.DateTime&gt; &lt;/xref:System.String&gt; &lt;/xref:System.Boolean&gt; &lt;/xref:System.Decimal&gt; &lt;/xref:System.Char&gt; &lt;/xref:System.Double&gt; &lt;/xref:System.Single&gt; &lt;/xref:System.UInt64&gt; &lt;/xref:System.UInt32&gt; &lt;/xref:System.UInt16&gt; &lt;/xref:System.Int64&gt; &lt;/xref:System.Int32&gt; &lt;/xref:System.Int16&gt; &lt;/xref:System.SByte&gt; &lt;/xref:System.Byte&gt; &lt;/xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The converter overrides &lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt; so that each parameter is serialized to JSON using the default &lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt; and a JSON XML Writer configured to use the UTF-8 encoding.</source>
          <target state="translated">转换器可重写&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;，以便每个参数序列化为 JSON 使用默认值&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;和将 JSON XML 编写器配置为使用 utf-8 编码。&lt;/xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt; &lt;/xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph> parameters are returned as <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>参数将作为返回<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Dispatcher.JsonQueryStringConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ServiceModel.Dispatcher.JsonQueryStringConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.</source>
          <target state="translated">获取一个值，该值指示指定的公共语言运行时 (CLR) 类型是否可以序列化和反序列化的已知的类型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This checks whether a CLR type can be used in a JSON query string.</source>
          <target state="translated">这将检查是否可以在 JSON 查询字符串中使用 CLR 类型。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The CLR types that can be used in such a string are just those that are supported by &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;.</source>
          <target state="translated">可以在此类字符串中使用的 CLR 类型是只是那些&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;.&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;支持</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to verify.</source>
          <target state="translated">&lt;xref:System.Type&gt;验证。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type can be serialized; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果类型可以序列化;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.</source>
          <target state="translated">反序列化 JavaScript 对象表示法 (JSON) 查询字符串参数为指定的公共语言运行时 (CLR) 类型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The JSON form of the parameter value.</source>
          <target state="translated">参数值的 JSON 形式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to deserialize the parameter to.</source>
          <target state="translated">&lt;xref:System.Type&gt;进行反序列化的参数。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An instance of the CLR type to which the parameter value was converted.</source>
          <target state="translated">参数值已转换为 CLR 类型的实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.</source>
          <target state="translated">序列化的 JavaScript 对象表示法 (JSON) 表示公共语言运行时 (CLR) 参数类型。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The converter overrides &lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt; so that each parameter is serialized to JSON using the default &lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt; and a JSON XML Writer configured to use the UTF-8 encoding.</source>
          <target state="translated">转换器可重写&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;，以便每个参数序列化为 JSON 使用默认值&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;和将 JSON XML 编写器配置为使用 utf-8 编码。&lt;/xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt; &lt;/xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Unlike its base type, this converter can handle any type adhering to the Data Contract model.</source>
          <target state="translated">与其基类型不同，此转换器可以处理与数据协定模型相符的任何类型。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The parameter value to convert.</source>
          <target state="translated">要转换的参数值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the parameter to serialize.</source>
          <target state="translated">&lt;xref:System.Type&gt;要序列化的参数。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The JSON query string parameter serialization of the CLR type.</source>
          <target state="translated">JSON 查询字符串参数的序列化的 CLR 类型。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is returned if the parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果参数返回<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>