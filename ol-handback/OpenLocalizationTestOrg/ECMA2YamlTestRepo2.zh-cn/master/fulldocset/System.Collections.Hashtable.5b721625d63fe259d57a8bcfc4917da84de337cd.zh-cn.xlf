<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29a99113f6f5e8c636cca37d5dd69f98b78d8b76</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Hashtable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7adab19de5e9eff7db361e4d8a403ac1e8bbc6c4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39d3f10f8859d27bfef8c293efca692035665ca7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of key/value pairs that are organized based on the hash code of the key.</source>
          <target state="translated">表示根据键的哈希代码的组织键/值对的集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd)</ept>.</source>
          <target state="translated">若要浏览此类型的.NET Framework 源代码，请参阅<bpt id="p1">[</bpt>引用源<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd)</ept>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd)</ept>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>1&gt; 要查看此类型的.NET Framework 源代码，请参阅<bpt id="p1">[</bpt>引用源<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
          <target state="translated">你可以浏览源代码联机，请下载离线查看的引用并在调试; 过程中逐步执行源 （包括修补程序和更新）请参阅<bpt id="p1">[</bpt>说明<ept id="p1">](http://referencesource.microsoft.com/)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair stored in a &lt;xref:System.Collections.DictionaryEntry&gt; object.</source>
          <target state="translated">每个元素是存储在一个键/值对&lt;xref:System.Collections.DictionaryEntry&gt;对象。&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">密钥不能为<ph id="ph1">`null`</ph>，但可以是一个值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The objects used as keys by a Hashtable are required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; method (or the &lt;xref:System.Collections.IHashCodeProvider&gt; interface) and the &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; method (or the &lt;xref:System.Collections.IComparer&gt; interface).</source>
          <target state="translated">用作键，即可通过哈希表需重写对象&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;方法 (或&lt;xref:System.Collections.IHashCodeProvider&gt;接口) 和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法 (或&lt;xref:System.Collections.IComparer&gt;接口)。&lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.IHashCodeProvider&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The implementation of both methods and interfaces must handle case sensitivity the same way; otherwise, the Hashtable might behave incorrectly.</source>
          <target state="translated">方法和接口的实现必须处理区分大小写相同的方式;否则，哈希表可能会出现错误的行为。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, when creating a Hashtable, you must use the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt; class (or any case-insensitive &lt;xref:System.Collections.IHashCodeProvider&gt; implementation) with the &lt;xref:System.Collections.CaseInsensitiveComparer&gt; class (or any case-insensitive &lt;xref:System.Collections.IComparer&gt; implementation).</source>
          <target state="translated">例如，在创建哈希表时，你必须使用&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;类 (或任何不区分大小写&lt;xref:System.Collections.IHashCodeProvider&gt;实现) 使用&lt;xref:System.Collections.CaseInsensitiveComparer&gt;类 (或任何不区分大小写&lt;xref:System.Collections.IComparer&gt;实现)。&lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.CaseInsensitiveComparer&gt; &lt;/xref:System.Collections.IHashCodeProvider&gt; &lt;/xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Furthermore, these methods must produce the same results when called with the same parameters while the key exists in the Hashtable.</source>
          <target state="translated">此外，这些方法必须生成相同的结果调用使用相同的参数，而哈希表中存在的键时。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An alternative is to use a Hashtable constructor with an &lt;xref:System.Collections.IEqualityComparer&gt; parameter.</source>
          <target state="translated">一种替代方法是使用的哈希表构造函数&lt;xref:System.Collections.IEqualityComparer&gt;参数。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If key equality were simply reference equality, the inherited implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; would suffice.</source>
          <target state="translated">如果键相等性只需引用相等性的继承的实现&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;便已足够。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Key objects must be immutable as long as they are used as keys in the Hashtable.</source>
          <target state="translated">密钥对象必须是不可变，只要它们使用的键的哈希表。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When an element is added to the Hashtable, the element is placed into a bucket based on the hash code of the key.</source>
          <target state="translated">如果将元素添加到哈希表，该元素放入存储桶基于键的哈希代码。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Subsequent lookups of the key use the hash code of the key to search in only one particular bucket, thus substantially reducing the number of key comparisons required to find an element.</source>
          <target state="translated">密钥的后续查找使用密钥的哈希代码要搜索中只有一个特定的存储桶，这将大大减少查找元素所需的键比较的次数。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The load factor of a Hashtable determines the maximum ratio of elements to buckets.</source>
          <target state="translated">哈希表已加载因子确定元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Smaller load factors cause faster average lookup times at the cost of increased memory consumption.</source>
          <target state="translated">较小负载因素会导致更快地平均查找时间，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The default load factor of 1.0 generally provides the best balance between speed and size.</source>
          <target state="translated">1.0 默认负载因子通常提供速度和大小之间的最佳平衡。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A different load factor can also be specified when the Hashtable is created.</source>
          <target state="translated">创建哈希表时，也可以指定不同的负载因素。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As elements are added to a Hashtable, the actual load factor of the Hashtable increases.</source>
          <target state="translated">当元素添加到哈希表时，会增加哈希表的实际加载因子。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets in the Hashtable is automatically increased to the smallest prime number that is larger than twice the current number of Hashtable buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，哈希表中的存储桶的数量自动增加到大于两次哈希表存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Each key object in the Hashtable must provide its own hash function, which can be accessed by calling &lt;xref:System.Collections.Hashtable.GetHash%2A&gt;.</source>
          <target state="translated">哈希表中的每个密钥对象必须提供其自己的哈希函数，可通过调用&lt;xref:System.Collections.Hashtable.GetHash%2A&gt;.&lt;/xref:System.Collections.Hashtable.GetHash%2A&gt;访问</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, any object implementing &lt;xref:System.Collections.IHashCodeProvider&gt; can be passed to a Hashtable constructor, and that hash function is used for all objects in the table.</source>
          <target state="translated">但是，任何对象实现&lt;xref:System.Collections.IHashCodeProvider&gt;可以传递哈希表构造函数，并且该哈希函数用于表中的所有对象。&lt;/xref:System.Collections.IHashCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The capacity of a Hashtable is the number of elements the Hashtable can hold.</source>
          <target state="translated">哈希表容量是哈希表可以容纳的元素数目。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>As elements are added to a Hashtable, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">当元素添加到哈希表时，自动增加容量通过重新分配所需的方式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For very large Hashtable objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph1">`enabled`</ph> attribute of the  configuration element to <ph id="ph2">`true`</ph> in the run-time environment.</source>
          <target state="translated">对于非常大的哈希表对象，你可以通过设置增加到 20 亿元素在 64 位系统上的最大容量<ph id="ph1">`enabled`</ph>到的配置元素的属性<ph id="ph2">`true`</ph>在运行时环境中。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`For Each`</ph>在 Visual Basic 中) 返回集合中的元素的类型的对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Since each element of the Hashtable is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">由于哈希表的每个元素是键/值对，元素类型不是键的类型或值的类型。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Instead, the element type is &lt;xref:System.Collections.DictionaryEntry&gt;.</source>
          <target state="translated">相反，元素类型是&lt;xref:System.Collections.DictionaryEntry&gt;.&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.has_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.has_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.has_1.vb)</ept><ept id="p5">]</ept>       The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated">例如︰ <bpt id="p1">[!code-cpp</bpt> <bpt id="p2">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.has_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.has_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.has_1.vb)</ept> <ept id="p5">]</ept> <ph id="ph1">`foreach`</ph>语句是枚举数，仅允许从，不写入集合读取周围的包装器。    </target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Because serializing and deserializing an enumerator for a Hashtable can cause the elements to become reordered, it is not possible to continue enumeration without calling the &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; method.</source>
          <target state="translated">由于序列化和反序列化枚举器，哈希表可以会变得重新排序的元素，不能继续而不调用枚举&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;方法。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the &lt;xref:System.Type.Equals%2A&gt; method.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 由于可以继承密钥并且不能更改其行为，使用比较可保证其绝对唯一性&lt;xref:System.Type.Equals%2A&gt;方法。&lt;/xref:System.Type.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the default initial capacity, load factor, hash code provider, and comparer.</source>
          <target state="translated">初始化一个新的空实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用默认的初始容量，加载因子、 哈希代码提供程序和比较器。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</source>
          <target state="translated">哈希表的容量用于计算哈希表存储桶基于负载系数的最佳数量。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required.</source>
          <target state="translated">自动增加容量所需的方式。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to the new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过将指定的字典中的元素复制到新的类<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the default load factor, hash code provider, and comparer.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象具有初始容量与复制的元素数相等，并使用默认负载因子，哈希代码提供程序和比较器。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量设置为源字典中的元素数。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新元素&lt;xref:System.Collections.Hashtable&gt;枚举数循环访问的相同顺序排序&lt;xref:System.Collections.IDictionary&gt;对象。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`d`</ph>参数。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要复制到新对象<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the default initial capacity and load factor, and the specified &lt;xref:System.Collections.IEqualityComparer&gt; object.</source>
          <target state="translated">初始化一个新的空实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用默认的初始容量并加载因子，以及指定&lt;xref:System.Collections.IEqualityComparer&gt;对象。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</source>
          <target state="translated">哈希表的容量用于计算哈希表存储桶基于负载系数的最佳数量。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required.</source>
          <target state="translated">自动增加容量所需的方式。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object includes both the hash code provider and the comparer.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;对象包括哈希代码提供程序和比较器。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; object are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;中使用&lt;xref:System.Collections.Hashtable&gt;构造函数、 中用作键的对象&lt;xref:System.Collections.Hashtable&gt;对象无需重写&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">哈希代码提供程序分配&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的键的哈希代码</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; enables scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;可实现进行查找使用不区分大小写的字符串等方案。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object that defines the hash code provider and the comparer to use with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;对象，用于定义的哈希代码提供程序和比较器用于<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider and the default comparer.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要使用的默认哈希代码提供程序和默认比较器。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default hash code provider is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and the default comparer is each key's implementation of <ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和默认比较器是每个键实现<ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity, and the default load factor, hash code provider, and comparer.</source>
          <target state="translated">初始化一个新的空实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的初始容量，以及默认负载因子，哈希代码提供程序和比较器。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">哈希代码提供程序分配&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的键的哈希代码</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">元素的近似数目的<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>最初可以包含对象。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to a new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过将指定的字典中的元素复制到新的类<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the default load factor and the specified &lt;xref:System.Collections.IEqualityComparer&gt; object.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象复制的元素数量相等的初始容量并使用默认负载因子和指定&lt;xref:System.Collections.IEqualityComparer&gt;对象。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量设置为源字典中的元素数。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object includes both the hash code provider and the comparer.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;对象包括哈希代码提供程序和比较器。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; object are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;中使用&lt;xref:System.Collections.Hashtable&gt;构造函数、 中用作键的对象&lt;xref:System.Collections.Hashtable&gt;对象无需重写&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">哈希代码提供程序分配&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的键的哈希代码</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; enables scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;可实现进行查找使用不区分大小写的字符串等方案。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新元素&lt;xref:System.Collections.Hashtable&gt;枚举数循环访问的相同顺序排序&lt;xref:System.Collections.IDictionary&gt;对象。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`d`</ph>参数。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要复制到新对象<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object that defines the hash code provider and the comparer to use with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;对象，用于定义的哈希代码提供程序和比较器用于<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider and the default comparer.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要使用的默认哈希代码提供程序和默认比较器。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The default hash code provider is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and the default comparer is each key's implementation of <ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和默认比较器是每个键实现<ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to the new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过将指定的字典中的元素复制到新的类<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, and the default hash code provider and comparer.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象具有初始容量与复制的元素数相等，并使用指定的加载因子，以及默认哈希代码提供程序和比较器。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量设置为源字典中的元素数。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">加载因子 1.0 是速度和大小之间的最佳平衡。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新元素&lt;xref:System.Collections.Hashtable&gt;枚举数循环访问的相同顺序排序&lt;xref:System.Collections.IDictionary&gt;对象。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`d`</ph>参数。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要复制到新对象<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">从 0.1 到 1.0，再乘以提供最佳性能的默认值范围内的数字。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">结果是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小于 0.1。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大于 1.0。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the default initial capacity and load factor, and the specified hash code provider and comparer.</source>
          <target state="translated">初始化一个新的空实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用默认的初始容量并加载因子，指定的哈希代码提供程序和比较器。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</source>
          <target state="translated">哈希表的容量用于计算哈希表存储桶基于负载系数的最佳数量。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required.</source>
          <target state="translated">自动增加容量所需的方式。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">自定义的哈希代码提供程序和自定义比较器启用方案，如执行查找使用不区分大小写的字符串。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that supplies the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>的所有键的对象，提供哈希代码<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>以使用默认哈希代码提供程序，即每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; object to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;对象可用于确定两个键是否相等。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示使用默认比较器，这是每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity and &lt;xref:System.Collections.IEqualityComparer&gt;, and the default load factor.</source>
          <target state="translated">初始化一个新的空实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的初始容量和&lt;xref:System.Collections.IEqualityComparer&gt;，和默认加载因子。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object includes both the hash code provider and the comparer.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;对象包括哈希代码提供程序和比较器。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;中使用&lt;xref:System.Collections.Hashtable&gt;构造函数、 中用作键的对象&lt;xref:System.Collections.Hashtable&gt;无需重写&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">哈希代码提供程序分配&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的键的哈希代码</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; enables scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;可实现进行查找使用不区分大小写的字符串等方案。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>参数。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">元素的近似数目的<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>最初可以包含对象。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object that defines the hash code provider and the comparer to use with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;对象，用于定义的哈希代码提供程序和比较器用于<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider and the default comparer.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要使用的默认哈希代码提供程序和默认比较器。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The default hash code provider is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and the default comparer is each key's implementation of <ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和默认比较器是每个键实现<ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity and load factor, and the default hash code provider and comparer.</source>
          <target state="translated">初始化一个新的空实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的初始容量并加载因子的默认哈希代码提供程序和比较器。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">加载因子 1.0 是速度和大小之间的最佳平衡。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">哈希代码提供程序分配&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的键的哈希代码</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>参数。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">元素的近似数目的<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>最初可以包含对象。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">从 0.1 到 1.0，再乘以提供最佳性能的默认值范围内的数字。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">结果是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小于 0.1。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大于 1.0。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is causing an overflow.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>导致溢出。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is serializable using the specified <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and &lt;xref:System.Runtime.Serialization.StreamingContext&gt; objects.</source>
          <target state="translated">初始化一个新的空实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是可序列化使用指定的类<bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>和&lt;xref:System.Runtime.Serialization.StreamingContext&gt;对象。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</source>
          <target state="translated">哈希表的容量用于计算哈希表存储桶基于负载系数的最佳数量。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required.</source>
          <target state="translated">自动增加容量所需的方式。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Because serializing and deserializing an enumerator for a &lt;xref:System.Collections.Hashtable&gt; can cause the elements to become reordered, it is not possible to continue enumeration without calling the &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; method.</source>
          <target state="translated">因为序列化和反序列化的枚举数&lt;xref:System.Collections.Hashtable&gt;可能会导致变得重新排序的元素，不能继续而不调用枚举&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;方法。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the information required to serialize the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象，其中包含序列化所需的信息<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object containing the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.Runtime.Serialization.StreamingContext&gt;对象，其中包含的源和目标与关联的序列化流<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to the new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过将指定的字典中的元素复制到新的类<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the default load factor, and the specified hash code provider and comparer.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象具有初始容量与复制的元素数相等，并使用默认的加载因子，以及指定的哈希代码提供程序和比较器。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>This API is obsolete.</source>
          <target state="translated">此 API 已废弃不用。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>For an alternative, see <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Hashtable.%23ctor%2A<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">一种替代方法，请参阅<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Hashtable.%23ctor%2A<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量设置为源字典中的元素数。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">自定义的哈希代码提供程序和自定义比较器启用方案，如执行查找使用不区分大小写的字符串。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新元素&lt;xref:System.Collections.Hashtable&gt;枚举数循环访问的相同顺序排序&lt;xref:System.Collections.IDictionary&gt;对象。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`d`</ph>参数。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要复制到新对象<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that supplies the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>的所有键的对象，提供哈希代码<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>以使用默认哈希代码提供程序，即每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; object to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;对象可用于确定两个键是否相等。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示使用默认比较器，这是每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to the new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过将指定的字典中的元素复制到新的类<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the specified load factor and &lt;xref:System.Collections.IEqualityComparer&gt; object.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象具有初始容量与复制的元素数相等，并使用指定的负载因子和&lt;xref:System.Collections.IEqualityComparer&gt;对象。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量设置为源字典中的元素数。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">加载因子 1.0 是速度和大小之间的最佳平衡。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object includes both the hash code provider and the comparer.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;对象包括哈希代码提供程序和比较器。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; object are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;中使用&lt;xref:System.Collections.Hashtable&gt;构造函数、 中用作键的对象&lt;xref:System.Collections.Hashtable&gt;对象无需重写&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">哈希代码提供程序分配&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的键的哈希代码</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; enables scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;可实现进行查找使用不区分大小写的字符串等方案。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新元素&lt;xref:System.Collections.Hashtable&gt;枚举数循环访问的相同顺序排序&lt;xref:System.Collections.IDictionary&gt;对象。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`d`</ph>参数。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要复制到新对象<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">从 0.1 到 1.0，再乘以提供最佳性能的默认值范围内的数字。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">结果是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object that defines the hash code provider and the comparer to use with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;对象，用于定义的哈希代码提供程序和比较器用于<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider and the default comparer.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要使用的默认哈希代码提供程序和默认比较器。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The default hash code provider is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and the default comparer is each key's implementation of <ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和默认比较器是每个键实现<ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小于 0.1。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大于 1.0。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity, hash code provider, comparer, and the default load factor.</source>
          <target state="translated">初始化一个新的空实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的初始容量、 哈希代码提供程序、 比较器，和默认加载因子。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">哈希代码提供程序分配&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的键的哈希代码</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">自定义的哈希代码提供程序和自定义比较器启用方案，如执行查找使用不区分大小写的字符串。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>参数。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">元素的近似数目的<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>最初可以包含对象。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that supplies the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>的所有键的对象，提供哈希代码<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>以使用默认哈希代码提供程序，即每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; object to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;对象可用于确定两个键是否相等。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示使用默认比较器，这是每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity, load factor, and &lt;xref:System.Collections.IEqualityComparer&gt; object.</source>
          <target state="translated">初始化一个新的空实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的初始容量，加载因子和&lt;xref:System.Collections.IEqualityComparer&gt;对象。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">加载因子 1.0 是速度和大小之间的最佳平衡。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object includes both the hash code provider and the comparer.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;对象包括哈希代码提供程序和比较器。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;中使用&lt;xref:System.Collections.Hashtable&gt;构造函数、 中用作键的对象&lt;xref:System.Collections.Hashtable&gt;无需重写&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">哈希代码提供程序分配&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的键的哈希代码</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; enables scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;可实现进行查找使用不区分大小写的字符串等方案。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>参数。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">元素的近似数目的<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>最初可以包含对象。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">从 0.1 到 1.0，再乘以提供最佳性能的默认值范围内的数字。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">结果是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object that defines the hash code provider and the comparer to use with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;对象，用于定义的哈希代码提供程序和比较器用于<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider and the default comparer.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要使用的默认哈希代码提供程序和默认比较器。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The default hash code provider is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and the default comparer is each key's implementation of <ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和默认比较器是每个键实现<ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小于 0.1。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大于 1.0。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to the new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>通过将指定的字典中的元素复制到新的类<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, hash code provider, and comparer.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象具有初始容量与复制的元素数相等，并使用指定的加载因子，哈希代码提供程序和比较器。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量设置为源字典中的元素数。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">加载因子 1.0 是速度和大小之间的最佳平衡。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">自定义的哈希代码提供程序和自定义比较器启用方案，如执行查找使用不区分大小写的字符串。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新元素&lt;xref:System.Collections.Hashtable&gt;枚举数循环访问的相同顺序排序&lt;xref:System.Collections.IDictionary&gt;对象。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`d`</ph>参数。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要复制到新对象<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">从 0.1 到 1.0，再乘以提供最佳性能的默认值范围内的数字。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">结果是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that supplies the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>的所有键的对象，提供哈希代码<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>以使用默认哈希代码提供程序，即每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; object to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;对象可用于确定两个键是否相等。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示使用默认比较器，这是每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小于 0.1。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大于 1.0。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity, load factor, hash code provider, and comparer.</source>
          <target state="translated">初始化一个新的空实例<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的初始容量，加载因子、 哈希代码提供程序和比较器。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，则无需执行大量的大小将元素添加到时调整操作&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量将自动根据需要增加根据负载因子。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">加载因子是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">较小的加载因子意味着更快的查找，但代价是增加的内存消耗。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">加载因子 1.0 是速度和大小之间的最佳平衡。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">当实际负载因子达到指定的加载因子时，存储桶的数量自动增加到大于两次存储桶的当前数量最小质数。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">哈希代码提供程序分配&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的键的哈希代码</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认哈希代码提供程序是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">中的所有键&lt;xref:System.Collections.Hashtable&gt;必须是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">默认比较器是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;密钥的实现</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">自定义的哈希代码提供程序和自定义比较器启用方案，如执行查找使用不区分大小写的字符串。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>参数。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">元素的近似数目的<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>最初可以包含对象。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">从 0.1 到 1.0，再乘以提供最佳性能的默认值范围内的数字。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">结果是元素与存储桶的最大比率。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that supplies the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>的所有键的对象，提供哈希代码<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>以使用默认哈希代码提供程序，即每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; object to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;对象可用于确定两个键是否相等。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示使用默认比较器，这是每个键实现<ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小于 0.1。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大于 1.0。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Adds an element with the specified key and value into the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">添加一个带有指定的键和值转换为元素<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">密钥不能为<ph id="ph1">`null`</ph>，但可以是一个值。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>An object that has no correlation between its state and its hash code value should typically not be used as the key.</source>
          <target state="translated">具有其状态和其哈希代码值之间没有关联的对象通常不应作为键。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>For example, String objects are better than StringBuilder objects for use as keys.</source>
          <target state="translated">例如，字符串对象作为键要优于使用 StringBuilder 对象。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;xref:System.Collections.Hashtable.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.Hashtable&gt;; for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">你还可以使用&lt;xref:System.Collections.Hashtable.Item%2A&gt;中不存在要添加新元素的键的值设置属性&lt;xref:System.Collections.Hashtable&gt;; 例如， <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>。&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.Hashtable&gt;, setting the &lt;xref:System.Collections.Hashtable.Item%2A&gt; property overwrites the old value.</source>
          <target state="translated">但是，如果指定的键已存在于&lt;xref:System.Collections.Hashtable&gt;，则设置&lt;xref:System.Collections.Hashtable.Item%2A&gt;属性将会覆盖旧值。&lt;/xref:System.Collections.Hashtable.Item%2A&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>In contrast, the Add method does not modify existing elements.</source>
          <target state="translated">与此相反，Add 方法不会修改现有元素。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.Hashtable.Count%2A&gt; is less than the capacity of the &lt;xref:System.Collections.Hashtable&gt;, this method is an O(1) operation.</source>
          <target state="translated">如果&lt;xref:System.Collections.Hashtable.Count%2A&gt;小于的容量&lt;xref:System.Collections.Hashtable&gt;，此方法为 o （1） 运算。&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">如果容量需要增加以容纳新元素，此方法会成为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The key of the element to add.</source>
          <target state="translated">要添加的元素的键。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The value of the element to add.</source>
          <target state="translated">要添加的元素的值。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>An element with the same key already exists in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">中已存在具有相同键的元素<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Removes all elements from the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">移除所有元素从<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.Hashtable.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.Hashtable.Count%2A&gt;是设置为零，并且集合的元素对其他对象的引用也被释放。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The capacity remains unchanged.</source>
          <target state="translated">容量保持不变。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">创建的浅表复制<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">集合的浅表副本复制仅的元素集合，不论它们是引用类型还是值类型，但它不会复制引用所引用的对象。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">新集合中的引用都指向原始集合中的引用指向同一对象。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">与此相反，集合的深层副本复制这些元素，以及由这些元素直接或间接引用的所有内容。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.Hashtable&gt; clone has the same count, the same capacity, the same &lt;xref:System.Collections.IHashCodeProvider&gt; implementation, and the same &lt;xref:System.Collections.IComparer&gt; implementation as the original &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.Hashtable&gt;克隆具有相同数量的、 相同的容量、 相同的&lt;xref:System.Collections.IHashCodeProvider&gt;实现，并将相同的&lt;xref:System.Collections.IComparer&gt;实现作为原始&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.IHashCodeProvider&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>A shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">浅表复制<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;xref:System.Collections.IComparer&gt; to use for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置&lt;xref:System.Collections.IComparer&gt;用于<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; to use for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;用于<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The property is set to a value, but the hash table was created using an &lt;xref:System.Collections.IEqualityComparer&gt;.</source>
          <target state="translated">属性设置为一个值，但哈希表使用&lt;xref:System.Collections.IEqualityComparer&gt;.&lt;/xref:System.Collections.IEqualityComparer&gt;创建</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains a specific key.</source>
          <target state="translated">确定是否<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含特定键。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Contains implements &lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">包含实现&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;.&lt;/xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>It behaves exactly as &lt;xref:System.Collections.Hashtable.ContainsKey%2A&gt;.</source>
          <target state="translated">它的行为完全相同&lt;xref:System.Collections.Hashtable.ContainsKey%2A&gt;.&lt;/xref:System.Collections.Hashtable.ContainsKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要查找中的键<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains an element with the specified key; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>包含具有指定的元素键; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains a specific key.</source>
          <target state="translated">确定是否<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含特定键。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>This method behaves exactly as &lt;xref:System.Collections.Hashtable.Contains%2A&gt;.</source>
          <target state="translated">此方法的行为完全相同&lt;xref:System.Collections.Hashtable.Contains%2A&gt;.&lt;/xref:System.Collections.Hashtable.Contains%2A&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要查找中的键<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains an element with the specified key; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>包含具有指定的元素键; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains a specific value.</source>
          <target state="translated">确定是否<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含特定值。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The values of the elements of the &lt;xref:System.Collections.Hashtable&gt; are compared to the specified value using the &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">元素的值&lt;xref:System.Collections.Hashtable&gt;相比于指定的值使用&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">此方法执行的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The value to locate in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要查找中的值<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains an element with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>包含具有指定的元素<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p3">&lt;/code&gt;</ept>; 否则为<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Copies the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> elements to a one-dimensional &lt;xref:System.Array&gt; instance at the specified index.</source>
          <target state="translated">副本<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>元素的一维&lt;xref:System.Array&gt;实例的指定索引处。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">元素被复制到&lt;xref:System.Array&gt;与在其中的枚举数循环访问&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;相同的顺序&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>To copy only the keys in the &lt;xref:System.Collections.Hashtable&gt;, use <ph id="ph1">`Hashtable.Keys.CopyTo`</ph>.</source>
          <target state="translated">若要复制仅在密钥&lt;xref:System.Collections.Hashtable&gt;，使用<ph id="ph1">`Hashtable.Keys.CopyTo`</ph>。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>To copy only the values in the &lt;xref:System.Collections.Hashtable&gt;, use <ph id="ph1">`Hashtable.Values.CopyTo`</ph>.</source>
          <target state="translated">若要仅中的值复制&lt;xref:System.Collections.Hashtable&gt;，使用<ph id="ph1">`Hashtable.Values.CopyTo`</ph>。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the &lt;xref:System.Collections.DictionaryEntry&gt; objects copied from <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一维&lt;xref:System.Array&gt;的目标&lt;xref:System.Collections.DictionaryEntry&gt;从复制的对象<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.DictionaryEntry&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;必须具有从零开始的索引。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">中的从零开始索引<ph id="ph1">`array`</ph>复制开始处。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>是多维的。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-源中的元素的数目<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>大于从的可用空间<ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>到目标的末尾<ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">源类型<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>无法自动转换为目标的类型<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Gets the number of key/value pairs contained in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取中包含的键/值对的数目<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The number of key/value pairs contained in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">中包含的键/值对的数目<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Collections.IEqualityComparer&gt; to use for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取&lt;xref:System.Collections.IEqualityComparer&gt;用于<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; includes both the comparer and the hash code provider.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;包括比较器和哈希代码提供程序。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;中使用&lt;xref:System.Collections.Hashtable&gt;构造函数、 中用作键的对象&lt;xref:System.Collections.Hashtable&gt;无需重写&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; to use for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;用于<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>The property is set to a value, but the hash table was created using an <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and an &lt;xref:System.Collections.IComparer&gt;.</source>
          <target state="translated">属性设置为一个值，但哈希表使用创建<bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和&lt;xref:System.Collections.IComparer&gt;。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; that iterates through the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回&lt;xref:System.Collections.IDictionaryEnumerator&gt;，它循环访问<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic、 C#]      <ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建议，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;此外会回此位置的枚举数。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">在此位置上，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是不确定的。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，你必须调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;的第一个元素的集合，然后再读取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;的值枚举器向前移动&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回相同的对象之前&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;到下一个元素。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;还返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">如果最后一次调用到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是不确定的。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;可以再次，集合的第一个元素调用&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;后, 跟&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果对集合进行更改，如添加、 修改或删除元素，则枚举数将失效且不可恢复，而且其行为是不确定。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">枚举数没有对集合; 独占访问权因此，枚举整个集合本质上不是线程安全的过程。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以锁定在整个枚举期间的集合。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要允许访问集合以进行读取和写入的多个线程，则必须实现自己的同步。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Because serializing and deserializing an enumerator for a &lt;xref:System.Collections.Hashtable&gt; can cause the elements to become reordered, it is not possible to continue enumeration without calling the &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; method.</source>
          <target state="translated">因为序列化和反序列化的枚举数&lt;xref:System.Collections.Hashtable&gt;可能会导致变得重新排序的元素，不能继续而不调用枚举&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;方法。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionaryEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IDictionaryEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Returns the hash code for the specified key.</source>
          <target state="translated">返回指定键的哈希代码。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>If the hash table was created with a specific &lt;xref:System.Collections.IHashCodeProvider&gt; implementation, this method uses that hash code provider; otherwise, it uses the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; implementation of <ph id="ph1">`key`</ph>.</source>
          <target state="translated">如果哈希表已创建具有特定&lt;xref:System.Collections.IHashCodeProvider&gt;实现，此方法使用该哈希代码提供程序; 否则，它使用&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;实现<ph id="ph1">`key`</ph>。&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.IHashCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which a hash code is to be returned.</source>
          <target state="translated">&lt;xref:System.Object&gt;要返回的哈希代码为。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>The hash code for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">哈希代码<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and returns the data needed to serialize the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">实现<bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接口，并返回序列化所需的数据<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the information required to serialize the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象，其中包含序列化所需的信息<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object containing the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.Runtime.Serialization.StreamingContext&gt;对象，其中包含的源和目标与关联的序列化流<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The collection was modified.</source>
          <target state="translated">集合已修改。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Gets or sets the object that can dispense hash codes.</source>
          <target state="translated">获取或设置可分配哈希代码的对象。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The object that can dispense hash codes.</source>
          <target state="translated">可分配哈希代码的对象。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The property is set to a value, but the hash table was created using an &lt;xref:System.Collections.IEqualityComparer&gt;.</source>
          <target state="translated">属性设置为一个值，但哈希表使用&lt;xref:System.Collections.IEqualityComparer&gt;.&lt;/xref:System.Collections.IEqualityComparer&gt;创建</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合不允许添加或移除元素后的集合在创建，但是允许修改现有元素。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是只是一个集合的包装器防止添加和移除元素;因此，如果对基础集合，包括添加或移除元素，进行更改的固定大小的集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>具有固定大小; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">集合是只读的不允许添加、 移除或修改元素的集合在创建后。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">集合是只读的是只是一个集合与防止集合; 进行修改的包装因此，如果对基础集合进行更改，只读集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>只读的; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is synchronized (thread safe).</source>
          <target state="translated">获取一个值，该值指示是否访问<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是同步的 （线程安全）。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Hashtable&gt; can support one writer and multiple readers concurrently.</source>
          <target state="translated">A&lt;xref:System.Collections.Hashtable&gt;可以同时支持一个编写器和多个读取器。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>To support multiple writers, all operations must be done through the wrapper returned by the &lt;xref:System.Collections.Hashtable.Synchronized%2A&gt; method.</source>
          <target state="translated">若要支持多个编写器，必须通过返回的包装器来完成所有操作&lt;xref:System.Collections.Hashtable.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.Hashtable.Synchronized%2A&gt;</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是线程安全的过程。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.Hashtable.SyncRoot%2A&gt; during the entire enumeration:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.has_1_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/visualbasic/p-system.collections.has_1_1.vb)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/csharp/p-system.collections.has_1_1.cs)</ept><ept id="p5">]</ept></source>
          <target state="translated">下面的代码示例演示如何锁定集合使用&lt;xref:System.Collections.Hashtable.SyncRoot%2A&gt;在整个枚举期间︰ <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>经典 Hashtable.IsSynchronized 第二个示例<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.has_1_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>经典 Hashtable.IsSynchronized 第二个示例<ept id="p4">](~/add/codesnippet/visualbasic/p-system.collections.has_1_1.vb)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>经典 Hashtable.IsSynchronized 第二个示例<ept id="p6">](~/add/codesnippet/csharp/p-system.collections.has_1_1.cs)</ept><ept id="p5">]</ept>     &lt;/xref:System.Collections.Hashtable.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果访问<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是同步的 （线程安全）; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">获取或设置与指定键关联的值。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">此属性提供能够通过使用以下语法访问集合中的特定元素︰ <ph id="ph1">`myCollection[key]`</ph>。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>You can also use the Item property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.Hashtable&gt;; for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">你还可以使用项目属性来添加新元素中不存在的键的值设置&lt;xref:System.Collections.Hashtable&gt;; 例如， <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.Hashtable&gt;, setting the Item property overwrites the old value.</source>
          <target state="translated">但是，如果指定的键已存在于&lt;xref:System.Collections.Hashtable&gt;，设置项目属性将覆盖旧值。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>In contrast, the &lt;xref:System.Collections.Hashtable.Add%2A&gt; method does not modify existing elements.</source>
          <target state="translated">与此相反，&lt;xref:System.Collections.Hashtable.Add%2A&gt;方法不会修改现有元素。&lt;/xref:System.Collections.Hashtable.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">密钥不能为<ph id="ph1">`null`</ph>，但可以是一个值。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the &lt;xref:System.Collections.Hashtable.Contains%2A&gt; method or the &lt;xref:System.Collections.Hashtable.ContainsKey%2A&gt; method to determine if the key exists in the list.</source>
          <target state="translated">来区分<ph id="ph1">`null`</ph>返回因为找不到指定的键和<ph id="ph2">`null`</ph>返回指定键的值是因为<ph id="ph3">`null`</ph>，使用&lt;xref:System.Collections.Hashtable.Contains%2A&gt;方法或&lt;xref:System.Collections.Hashtable.ContainsKey%2A&gt;方法来确定在列表中是否存在的项。&lt;/xref:System.Collections.Hashtable.ContainsKey%2A&gt; &lt;/xref:System.Collections.Hashtable.Contains%2A&gt;</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算 o （1）;设置属性也是 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the &lt;xref:System.Collections.IList.Item%2A&gt; property.</source>
          <target state="translated">C# 语言使用关键字进行定义而不是实现索引器&lt;xref:System.Collections.IList.Item%2A&gt;属性。&lt;/xref:System.Collections.IList.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Visual Basic implements Item as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 实现为默认属性，它提供相同的索引功能的项。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>The key whose value to get or set.</source>
          <target state="translated">密钥要获取或设置其值。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>The value associated with the specified key.</source>
          <target state="translated">与指定键关联的值。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>If the specified key is not found, attempting to get it returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and attempting to set it creates a new element using the specified key.</source>
          <target state="translated">如果未找到指定的键，尝试获取它将返回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，并尝试将其设置创建一个使用指定的键的新元素。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The property is set and the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">将属性设置和<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>-or-       The property is set, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the collection, and the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或-设置该属性， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>不存在于集合中，与<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Compares a specific &lt;xref:System.Object&gt; with a specific key in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">比较特定&lt;xref:System.Object&gt;与中的特定键<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>If the hash table was created with a specific &lt;xref:System.Collections.IComparer&gt; implementation, this method uses that comparer; that is, &lt;xref:System.Collections.IComparer.Compare%2A&gt; (<ph id="ph1">`item`</ph>, <ph id="ph2">`key`</ph>).</source>
          <target state="translated">如果哈希表已创建具有特定&lt;xref:System.Collections.IComparer&gt;实现中，此方法使用该比较器; 即， &lt;xref:System.Collections.IComparer.Compare%2A&gt;(<ph id="ph1">`item`</ph>， <ph id="ph2">`key`</ph>)。&lt;/xref:System.Collections.IComparer.Compare%2A&gt; &lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Otherwise, it uses <ph id="ph1">`item.Equals(key)`</ph>.</source>
          <target state="translated">否则，它使用<ph id="ph1">`item.Equals(key)`</ph>。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to compare with <ph id="ph1">`key`</ph>.</source>
          <target state="translated">&lt;xref:System.Object&gt;进行比较的<ph id="ph1">`key`</ph>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>The key in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare with <ph id="ph1">`item`</ph>.</source>
          <target state="translated">中的密钥<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>进行比较的<ph id="ph1">`item`</ph>。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p3">&lt;/code&gt;</ept> are equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p3">&lt;/code&gt;</ept> are equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;item&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;item&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.ICollection&gt; containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取&lt;xref:System.Collections.ICollection&gt;包含中的键<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>The order of the keys in the &lt;xref:System.Collections.ICollection&gt; is unspecified, but it is the same order as the associated values in the &lt;xref:System.Collections.ICollection&gt; returned by the &lt;xref:System.Collections.Hashtable.Values%2A&gt; method.</source>
          <target state="translated">中的键的顺序&lt;xref:System.Collections.ICollection&gt;未指定，但它是中的关联值顺序相同&lt;xref:System.Collections.ICollection&gt;返回&lt;xref:System.Collections.Hashtable.Values%2A&gt;方法。&lt;/xref:System.Collections.Hashtable.Values%2A&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the keys in the original &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">返回&lt;xref:System.Collections.ICollection&gt;不是静态的副本; 相反，&lt;xref:System.Collections.ICollection&gt;引用回原始&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的键&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Therefore, changes to the &lt;xref:System.Collections.Hashtable&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">因此，更改为&lt;xref:System.Collections.Hashtable&gt;继续才会反映在&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;包含中的键<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and raises the deserialization event when the deserialization is complete.</source>
          <target state="translated">实现<bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接口，并引发反序列化完成时，反序列化事件。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Because serializing and deserializing an enumerator for a &lt;xref:System.Collections.Hashtable&gt; can cause the elements to become reordered, it is not possible to continue enumeration without calling the &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; method.</source>
          <target state="translated">因为序列化和反序列化的枚举数&lt;xref:System.Collections.Hashtable&gt;可能会导致变得重新排序的元素，不能继续而不调用枚举&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;方法。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The source of the deserialization event.</source>
          <target state="translated">反序列化事件源。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the current <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>关联与当前对象<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>无效。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Removes the element with the specified key from the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">移除带有指定键的元素<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.Hashtable&gt; does not contain an element with the specified key, the &lt;xref:System.Collections.Hashtable&gt; remains unchanged.</source>
          <target state="translated">如果&lt;xref:System.Collections.Hashtable&gt;不具有指定键，包含的元素&lt;xref:System.Collections.Hashtable&gt;保持不变。&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>No exception is thrown.</source>
          <target state="translated">不引发异常。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除的元素的键。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Returns a synchronized (thread-safe) wrapper for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回同步的 （线程安全） 包装器<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>The Synchronized method is thread safe for multiple readers and writers.</source>
          <target state="translated">已同步方法是线程安全的多个读取器和编写器。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Furthermore, the synchronized wrapper ensures that there is only one writer writing at a time.</source>
          <target state="translated">此外，同步的包装器可确保只有一个编写器编写一次。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.Hashtable.SyncRoot%2A&gt; during the entire enumeration:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/m-system.collections.has_11_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/visualbasic/m-system.collections.has_11_1.vb)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/csharp/m-system.collections.has_11_1.cs)</ept><ept id="p5">]</ept>       This method is an O(1) operation.</source>
          <target state="translated">下面的代码示例演示如何锁定集合使用&lt;xref:System.Collections.Hashtable.SyncRoot%2A&gt;在整个枚举期间︰ <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>经典 Hashtable.IsSynchronized 第二个示例<ept id="p2">](~/add/codesnippet/cpp/m-system.collections.has_11_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>经典 Hashtable.IsSynchronized 第二个示例<ept id="p4">](~/add/codesnippet/visualbasic/m-system.collections.has_11_1.vb)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>经典 Hashtable.IsSynchronized 第二个示例<ept id="p6">](~/add/codesnippet/csharp/m-system.collections.has_11_1.cs)</ept><ept id="p5">]</ept>此方法为 o （1） 运算。    &lt;/xref:System.Collections.Hashtable.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to synchronize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行同步。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>A synchronized (thread-safe) wrapper for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个同步 （线程安全） 包装器<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取可以用于对访问进行同步的对象<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>To create a synchronized version of the &lt;xref:System.Collections.Hashtable&gt;, use the &lt;xref:System.Collections.Hashtable.Synchronized%2A&gt; method.</source>
          <target state="translated">若要创建的同步的版本&lt;xref:System.Collections.Hashtable&gt;，使用&lt;xref:System.Collections.Hashtable.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.Hashtable.Synchronized%2A&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>However, derived classes can provide their own synchronized version of the &lt;xref:System.Collections.Hashtable&gt; using the SyncRoot property.</source>
          <target state="translated">但是，派生的类可以提供自己的同步的版本&lt;xref:System.Collections.Hashtable&gt;使用 SyncRoot 属性。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.Hashtable&gt;, not directly on the &lt;xref:System.Collections.Hashtable&gt; .</source>
          <target state="translated">同步代码必须对执行操作的 SyncRoot &lt;xref:System.Collections.Hashtable&gt;，不是直接对&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">这可确保正确地执行操作的从其他对象派生的集合。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">具体地说，这样可保持正确的同步，与可能同时对修改其他线程&lt;xref:System.Collections.Hashtable&gt;对象。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是线程安全的过程。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>The following code example shows how to lock the collection using the SyncRoot during the entire enumeration:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.has_0_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/visualbasic/p-system.collections.has_0_1.vb)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/csharp/p-system.collections.has_0_1.cs)</ept><ept id="p5">]</ept></source>
          <target state="translated">下面的代码示例演示如何在整个枚举过程中使用 SyncRoot 的集合︰ <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>经典 Hashtable.IsSynchronized 第二个示例<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.has_0_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>经典 Hashtable.IsSynchronized 第二个示例<ept id="p4">](~/add/codesnippet/visualbasic/p-system.collections.has_0_1.vb)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>经典 Hashtable.IsSynchronized 示例&amp;#2;    <ept id="p6">](~/add/codesnippet/csharp/p-system.collections.has_0_1.cs)</ept><ept id="p5">]</ept></target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可以用于对访问进行同步的对象<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">返回循环访问集合的枚举。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic、 C#]      <ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建议，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;此外会回此位置的枚举数。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>At this position, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">在此位置，调用&lt;xref:System.Collections.IEnumerator.Current%2A&gt;引发异常。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，你必须调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;的第一个元素的集合，然后再读取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;的值枚举器向前移动&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回相同的对象之前&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;到下一个元素。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;还返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">如果最后一次调用到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>，则调用&lt;xref:System.Collections.IEnumerator.Current%2A&gt;引发异常。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;可以再次，集合的第一个元素调用&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;后, 跟&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator can be invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果对集合进行更改，可以如添加、 修改或删除元素，枚举数将失效，并且下一个调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;引发&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之间修改集合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;和&lt;xref:System.Collections.IEnumerator.Current%2A&gt;，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回到，设置的元素，即使枚举数已经无效。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">枚举数没有对集合; 独占访问权因此，枚举整个集合本质上不是线程安全的过程。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the collection.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;可用于循环访问集合。&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.ICollection&gt; containing the values in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取&lt;xref:System.Collections.ICollection&gt;包含中的值<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>The order of the values in the &lt;xref:System.Collections.ICollection&gt; is unspecified, but it is the same order as the associated keys in the &lt;xref:System.Collections.ICollection&gt; returned by the &lt;xref:System.Collections.Hashtable.Keys%2A&gt; method.</source>
          <target state="translated">中的值的顺序&lt;xref:System.Collections.ICollection&gt;未指定，但它是中的关联键顺序相同&lt;xref:System.Collections.ICollection&gt;返回&lt;xref:System.Collections.Hashtable.Keys%2A&gt;方法。&lt;/xref:System.Collections.Hashtable.Keys%2A&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the values in the original &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">返回&lt;xref:System.Collections.ICollection&gt;不是静态的副本; 相反，&lt;xref:System.Collections.ICollection&gt;引用回原始&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的值&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>Therefore, changes to the &lt;xref:System.Collections.Hashtable&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">因此，更改为&lt;xref:System.Collections.Hashtable&gt;继续才会反映在&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; containing the values in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;包含中的值<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>