<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">240cb01b67f3abf3da391c82f2d161450765f3a6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.FrameworkElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f34c5406c822ebc58926a76c691f68573b60879</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2049bca0cb4e08ccb7c2174b1d632ea6a401253f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a WPF framework-level set of properties, events, and methods for <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> elements.</source>
          <target state="translated">提供属性、 事件和方法的 WPF 框架级别组<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>元素。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class represents the provided WPF framework-level implementation that is built on the WPF core-level <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> that are defined by <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">此类表示基于 WPF 核心级别所提供的 WPF 框架级别实现<ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph>由定义<bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>FrameworkElement is the connecting point between WPF framework-level element classes and the WPF core-level set of &lt;xref:System.Windows.UIElement&gt; presentation services.</source>
          <target state="translated">FrameworkElement 是 WPF 框架级别元素类的 WPF 核心级集之间的连接点&lt;xref:System.Windows.UIElement&gt;表示服务。&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information about these concepts, see <bpt id="p1">[</bpt>WPF Architecture<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关这些概念的详细信息，请参阅<bpt id="p1">[</bpt>WPF 体系结构<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>FrameworkElement extends &lt;xref:System.Windows.UIElement&gt; and adds the following capabilities:      -   <bpt id="p1">**</bpt>Layout system definition<ept id="p1">**</ept>: FrameworkElement provides specific WPF framework-level implementations for certain methods that were defined as virtual members in  &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">FrameworkElement 扩展&lt;xref:System.Windows.UIElement&gt;和添加了以下功能:-<bpt id="p1">**</bpt>布局系统定义<ept id="p1">**</ept>: FrameworkElement 的提供特定的 WPF 框架级别实现对于某些已定义为&lt;xref:System.Windows.UIElement&gt;.&lt;/xref:System.Windows.UIElement&gt;中的虚拟成员的方法&lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Most notably, FrameworkElement seals certain WPF core-level layout overrides, and instead provides a WPF framework-level equivalent that derived classes should override instead.</source>
          <target state="translated">最值得注意的是，FrameworkElement 会对某些 WPF 核心级布局的重写，并改为提供应改为替代派生类的 WPF 框架级别等效项。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, FrameworkElement seals &lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt; but provides &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;.</source>
          <target state="translated">例如，FrameworkElement 密封&lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;但提供&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; &lt;/xref:System.Windows.UIElement.ArrangeCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These changes reflect the fact that at the WPF framework-level there is a full layout system in place that can render any FrameworkElement derived class.</source>
          <target state="translated">这些更改反映在 WPF 框架级别有一个完整的布局系统可能会使任何 FrameworkElement 的位置中的事实派生类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>At the WPF core level, certain members that will structure a general <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> based layout solution are in place, but the actual engine of the layout system is not defined.</source>
          <target state="translated">在 WPF 核心构建常规的级别，某些成员<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>基于的布局解决方案位于的位置，但未定义该布局系统的实际引擎。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>布局<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>The logical tree:<ept id="p1">**</ept> The general <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> programming model is often expressed in terms of being a tree of elements.</source>
          <target state="translated">-<bpt id="p1">**</bpt>逻辑树︰<ept id="p1">**</ept>常规<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>编程模型通常按正在元素树表示。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Support for expressing the tree of elements as a logical tree, and accompanying support for defining that tree in markup is implemented at the FrameworkElement level.</source>
          <target state="translated">支持用于表达元素逻辑树中，作为树，并同时还支持用于标记中定义该树实现的 FrameworkElement 级别。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Note however that FrameworkElement deliberately does not define a content model, and leaves that responsibility to derived classes.</source>
          <target state="translated">但是请注意 FrameworkElement 故意不会定义内容模型，并使这一责任派生的类。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>WPF 中的树<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Object lifetime events:<ept id="p1">**</ept> It is often useful to know when an element is initialized (the constructor is called) or when the element is first loaded into a logical tree.</source>
          <target state="translated">-<bpt id="p1">**</bpt>对象生存期事件︰<ept id="p1">**</ept>通常是有用知道初始化某个元素时 （调用的构造函数） 或元素时首次加载到逻辑树。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>FrameworkElement defines several events related to object lifetime that provide useful hooks for code-behind operations that involve elements, such as adding more child elements.</source>
          <target state="translated">FrameworkElement 定义与对象生存期相关的代码隐藏操作，涉及元素，例如添加更多的子元素提供有用的挂钩的多个事件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Object Lifetime Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>对象生存期事件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Support for data binding and dynamic resource references:<ept id="p1">**</ept> The property-level support for data binding and resources is implemented by the &lt;xref:System.Windows.DependencyProperty&gt; class and embodied in the property system, but the ability to resolve a member value that is stored as an &lt;xref:System.Windows.Expression&gt; (the programming construct that underlies both data binding and dynamic resources) is implemented by FrameworkElement.</source>
          <target state="translated">-<bpt id="p1">**</bpt>支持数据绑定和动态资源引用︰<ept id="p1">**</ept>由实现数据绑定和资源的属性级别支持&lt;xref:System.Windows.DependencyProperty&gt;类和属性系统，但能够解决存储为一个成员值中包含&lt;xref:System.Windows.Expression&gt;（提供支持数据绑定和动态资源的编程构造） 实现的 FrameworkElement。&lt;/xref:System.Windows.Expression&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>XAML Resources<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>数据绑定概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>XAML 资源<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Styles:<ept id="p1">**</ept> FrameworkElement defines the &lt;xref:System.Windows.FrameworkElement.Style%2A&gt; property.</source>
          <target state="translated">-<bpt id="p1">**</bpt>样式︰<ept id="p1">**</ept> FrameworkElement 定义&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;属性。&lt;/xref:System.Windows.FrameworkElement.Style%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, FrameworkElement does not yet define support for templates, or support decorators.</source>
          <target state="translated">但是，FrameworkElement 不尚未定义支持模板，或者支持修饰器。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These features are introduced by control classes such as &lt;xref:System.Windows.Controls.Control&gt; and &lt;xref:System.Windows.Controls.ContentControl&gt;.</source>
          <target state="translated">这些功能的控件类，例如&lt;xref:System.Windows.Controls.Control&gt;和&lt;xref:System.Windows.Controls.ContentControl&gt;.&lt;/xref:System.Windows.Controls.ContentControl&gt;&lt;/xref:System.Windows.Controls.Control&gt;所引入</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>More animation support:<ept id="p1">**</ept> Some animation support was already defined at the WPF core level, but FrameworkElement extends this by implementing &lt;xref:System.Windows.FrameworkElement.BeginStoryboard%2A&gt; and related members.</source>
          <target state="translated">-<bpt id="p1">**</bpt>更多的动画支持︰<ept id="p1">**</ept>一些动画支持已定义为在 WPF 核心级别，但 FrameworkElement 扩展这通过实现&lt;xref:System.Windows.FrameworkElement.BeginStoryboard%2A&gt;和相关成员。&lt;/xref:System.Windows.FrameworkElement.BeginStoryboard%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>As can be seen from the class hierarchy, many <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> classes derive from FrameworkElement, either directly or through intermediate base classes such as &lt;xref:System.Windows.Controls.Panel&gt; or &lt;xref:System.Windows.Controls.Control&gt;.</source>
          <target state="translated">如下所示的类层次结构中，从许多<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>类派生自 FrameworkElement，直接或通过如&lt;xref:System.Windows.Controls.Panel&gt;或&lt;xref:System.Windows.Controls.Control&gt;.&lt;/xref:System.Windows.Controls.Control&gt;&lt;/xref:System.Windows.Controls.Panel&gt;中间基类</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you intend to use FrameworkElement as a base class, you might want to first examine the existing derived classes.</source>
          <target state="translated">如果你想要 FrameworkElement 用作基类，你可能想要首先检查现有的派生的类。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>FrameworkElement provides support for a number of basic scenarios, but also lacks a number of features that are desirable for an "element" in the sense of a building block that you use to create <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">FrameworkElement 为大量的基本方案提供支持，但还没有大量的意义上的用于创建构建基块"element"为所需的功能<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>中<ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For instance, a FrameworkElement does not define any true content model; FrameworkElement as a base class does not define a property that can create <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> child elements.</source>
          <target state="translated">例如，FrameworkElement 未定义任何 true 的内容模型;用作基类的 FrameworkElement 不会定义一个属性，可以创建<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>子元素。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In particular, you might want to look at &lt;xref:System.Windows.Controls.Control&gt; and &lt;xref:System.Windows.Controls.ContentControl&gt;.</source>
          <target state="translated">具体而言，你可能想要查看&lt;xref:System.Windows.Controls.Control&gt;和&lt;xref:System.Windows.Controls.ContentControl&gt;。&lt;/xref:System.Windows.Controls.ContentControl&gt; &lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the rendered height of this element.</source>
          <target state="translated">获取此元素的呈现的高度。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This property is a calculated value based on other height inputs, and the layout system.</source>
          <target state="translated">此属性是基于其他高度输入和布局系统的计算的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; that are the basis of the input change.</source>
          <target state="translated">值由布局系统本身，基于实际呈现处理过程中，设置，并可能因此稍微属性的设置值如&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;所输入的更改的基础。&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Because ActualHeight is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system.</source>
          <target state="translated">由于 ActualHeight 是计算得出的值，你应注意可能有多个或增量更改与其各种操作后由布局系统报告。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.</source>
          <target state="translated">布局系统可能计算所需的度量值的空间子元素、 约束由父元素中，依次类推。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Although you cannot set this property from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, you can base a &lt;xref:System.Windows.Trigger&gt; upon its value in a style.</source>
          <target state="translated">虽然您无法设置此属性从<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>，您可以基于&lt;xref:System.Windows.Trigger&gt;在样式中其值时。&lt;/xref:System.Windows.Trigger&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ActualHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ActualHeightProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ActualHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.ActualHeightProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.ActualHeightProperty&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The element's height, as a value in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">元素的高度，这是中的值<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default value is 0 (zero).</source>
          <target state="translated">默认值为 0 （零）。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.ActualHeight*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.ActualHeight*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.ActualHeight*&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets the rendered width of this element.</source>
          <target state="translated">获取此元素的呈现的宽度。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This property is a calculated value based on other width inputs, and the layout system.</source>
          <target state="translated">此属性是基于其他宽度输入和布局系统的计算的值。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; that are the basis of the input change.</source>
          <target state="translated">值由布局系统本身，基于实际呈现处理过程中，设置，并可能因此稍微属性的设置值如&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;所输入的更改的基础。&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Because ActualWidth is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system.</source>
          <target state="translated">由于 ActualWidth 是计算得出的值，你应注意可能有多个或增量更改与其各种操作后由布局系统报告。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.</source>
          <target state="translated">布局系统可能计算所需的度量值的空间子元素、 约束由父元素中，依次类推。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Although you cannot set this property from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, you can base a &lt;xref:System.Windows.Trigger&gt; upon its value in a style.</source>
          <target state="translated">虽然您无法设置此属性从<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>，您可以基于&lt;xref:System.Windows.Trigger&gt;在样式中其值时。&lt;/xref:System.Windows.Trigger&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ActualWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ActualWidthProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ActualWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.ActualWidthProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.ActualWidthProperty&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The element's width, as a value in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">元素的宽度，这是中的值<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The default value is 0 (zero).</source>
          <target state="translated">默认值为 0 （零）。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.ActualWidth*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.ActualWidth*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.ActualWidth*&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Adds the provided object to the logical tree of this element.</source>
          <target state="translated">将所提供的对象添加到此元素的逻辑树。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Use this method for the implementation of collections on objects that represent logical child elements of an element.</source>
          <target state="translated">使用此方法用于实现的上表示的元素的逻辑子元素的对象的集合。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Collection maintenance for child element collections might be done in property getters or setters, class handling of Changed events, constructors, or within the collection types themselves.</source>
          <target state="translated">子元素集合的集合维护操作可能会在属性 getter 或 setter，类处理的更改事件、 构造函数，或在这些集合类型本身。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the content models for available base control classes are appropriate for your control scenario.</source>
          <target state="translated">对于控件作者操作在此级别的逻辑树不是建议的做法，除非所有可用的基控件类的内容模型都适用于你的控件方案。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Consider subclassing at the level of &lt;xref:System.Windows.Controls.ContentControl&gt;, &lt;xref:System.Windows.Controls.ItemsControl&gt;, and &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;.</source>
          <target state="translated">请考虑级别的子类化&lt;xref:System.Windows.Controls.ContentControl&gt;， &lt;xref:System.Windows.Controls.ItemsControl&gt;，和&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;。&lt;/xref:System.Windows.Controls.HeaderedItemsControl&gt; &lt;/xref:System.Windows.Controls.ItemsControl&gt; &lt;/xref:System.Windows.Controls.ContentControl&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>These classes provide a content model with particular enforcement of logical tree child elements through dedicated <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>, as well as support for other features typically desirable in a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> control such as styling through templates.</source>
          <target state="translated">这些类提供的内容模型通过专用的逻辑树子元素的特定强制<ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>，以及对其他功能中通常所需的支持<ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>控件如通过模板的样式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information on how to use &lt;xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt; and AddLogicalChild, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息如何使用&lt;xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt;和 AddLogicalChild，请参阅<bpt id="p1">[</bpt>WPF 中的树<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>AddLogicalChild may throw an exception if called at a time when the logical tree is being iterated by another process.</source>
          <target state="translated">如果在另一个进程循环访问的逻辑树时调用，AddLogicalChild 可能引发异常。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Child element to be added.</source>
          <target state="translated">要添加的子元素。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Builds the current template's visual tree if necessary, and returns a value that indicates whether the visual tree was rebuilt by this call.</source>
          <target state="translated">生成当前模板的可视化树如有必要，并返回一个值，该值指示是否的可视化树是否由此调用重新生成。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Applications can call this method to guarantee that the visual tree of an element is complete.</source>
          <target state="translated">应用程序可以调用此方法要保证元素的可视化树的完整性。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This guarantee step might be necessary if code will be checking the child elements in the tree.</source>
          <target state="translated">如果检查在代码中的树中的子元素，则可能需要采用此保证步骤。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For typical element logic within applications, calling ApplyTemplate is not necessary, because templates will be applied to elements at an appropriate point in their lifetimes automatically.</source>
          <target state="translated">对于典型的元素在应用程序内的逻辑，调用 ApplyTemplate 不是有必要，因为模板将应用到合适的点处的元素在其生存期自动。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>ApplyTemplate is called on every Measure pass by the WPF framework-level layout system.</source>
          <target state="translated">在每个度量值上调用 ApplyTemplate WPF 框架级别布局系统通过将传递。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkElement&gt; derived classes can use the &lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt; class handler to be notified of cases where this method was called explicitly, or by the layout system.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;派生的类可以使用&lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;类处理程序的情况下其中显式调用此方法或由布局系统接收通知。&lt;/xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt; is called after the template is completely generated and attached to the logical tree.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;模板是完全生成的附加到逻辑树中后调用。&lt;/xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if visuals were added to the tree; returns <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> otherwise.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果将视觉对象添加到树中。返回<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>否则为。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Implements &lt;xref:System.Windows.UIElement.ArrangeCore*&gt; (defined as virtual in <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) and seals the implementation.</source>
          <target state="translated">实现&lt;xref:System.Windows.UIElement.ArrangeCore*&gt;(定义为中的虚拟机<bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>) 并密封实现。&lt;/xref:System.Windows.UIElement.ArrangeCore*&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This method is sealed.</source>
          <target state="translated">此方法被密封。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In order to override the logic in your custom element specifically for the arrange pass of element layout, your &lt;xref:System.Windows.FrameworkElement&gt; derived class must override &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;.</source>
          <target state="translated">若要重写中专门为元素布局，你的&lt;xref:System.Windows.FrameworkElement&gt;派生的类必须重写&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;&lt;/xref:System.Windows.FrameworkElement&gt;的排列处理你自定义元素的逻辑</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The final area within the parent that this element should use to arrange itself and its children.</source>
          <target state="translated">父级中应使用此元素排列自身及其子元素的最终区域。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, positions child elements and determines a size for a <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class.</source>
          <target state="translated">当在派生类中重写，定位子元素，并确定的大小<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>派生类。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The final area within the parent that this element should use to arrange itself and its children.</source>
          <target state="translated">父级中应使用此元素排列自身及其子元素的最终区域。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The actual size used.</source>
          <target state="translated">使用的实际大小。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Starts the initialization process for this element.</source>
          <target state="translated">开始初始化过程的此元素。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can call this method on individual elements if you are adjusting them in ways that do not yet expose or connect the element to any element tree.</source>
          <target state="translated">如果你在执行尚未公开或将元素连接到任何元素树的方式调整它们，你可以对单独的元素调用此方法。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For instance, you might have created a new &lt;xref:System.Windows.FrameworkElement&gt;, but have not yet attached it to any logical tree.</source>
          <target state="translated">例如，你可能创建了一个新&lt;xref:System.Windows.FrameworkElement&gt;，但具有尚未将其附加到任何逻辑树。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Or, the logical tree where your element is a child element within it might not be connected to a window or page of the application.</source>
          <target state="translated">或者，其中你元素是一个子元素在它的逻辑树可能不会连接到的窗口或页的应用程序。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Begins the sequence of actions that are contained in the provided storyboard.</source>
          <target state="translated">开始提供的情节提要中包含的操作的序列。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Most typical animation scenarios do not use this method.</source>
          <target state="translated">大多数典型动画方案不使用此方法。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Typically, you create the &lt;xref:System.Windows.Media.Animation.Storyboard&gt; or &lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt; element in markup, and then you place these as the &lt;xref:System.Windows.EventTrigger&gt; content on an element.</source>
          <target state="translated">通常，你创建&lt;xref:System.Windows.Media.Animation.Storyboard&gt;或&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;元素标记，然后将其作为&lt;xref:System.Windows.EventTrigger&gt;上一个元素的内容。&lt;/xref:System.Windows.EventTrigger&gt; &lt;/xref:System.Windows.Media.Animation.BeginStoryboard&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When triggered by the event, the animation then runs.</source>
          <target state="translated">当触发事件，动画将运行。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Most of the control aspects of a &lt;xref:System.Windows.Media.Animation.Storyboard&gt; can be addressed by properties that are exposed in markup.</source>
          <target state="translated">控制的各个方面的大多数&lt;xref:System.Windows.Media.Animation.Storyboard&gt;可以通过在标记中公开的属性进行寻址。&lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For the signatures that do not use the <ph id="ph1">`isControllable`</ph>, parameter, or when that parameter is specified <ph id="ph2">`false`</ph>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</source>
          <target state="translated">不使用的签名<ph id="ph1">`isControllable`</ph>，参数，或指定该参数时， <ph id="ph2">`false`</ph>，动画达到"填充"期时，就会立即删除了与动画的时间线时钟。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Therefore the animation cannot be restarted after running once.</source>
          <target state="translated">因此，在动画运行一次后将不能是重启。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Controlling an animation also requires that the storyboard have an <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or be accessible by reference in code.</source>
          <target state="translated">动画的控制还要求情节提要具有<bpt id="p1">[</bpt>X:name 指令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或可由代码中的引用。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The storyboard to begin.</source>
          <target state="translated">若要开始情节提要。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Begins the sequence of actions contained in the provided storyboard, with options specified for what should happen if the property is already animated.</source>
          <target state="translated">开始使用该属性已进行动画处理应执行的操作为指定的选项中提供的情节提要，包含的操作序列。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Most typical animation scenarios do not use this method.</source>
          <target state="translated">大多数典型动画方案不使用此方法。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Typically, you create the &lt;xref:System.Windows.Media.Animation.Storyboard&gt; or &lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt; element in markup, and then you place these as the &lt;xref:System.Windows.EventTrigger&gt; content on an element.</source>
          <target state="translated">通常，你创建&lt;xref:System.Windows.Media.Animation.Storyboard&gt;或&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;元素标记，然后将其作为&lt;xref:System.Windows.EventTrigger&gt;上一个元素的内容。&lt;/xref:System.Windows.EventTrigger&gt; &lt;/xref:System.Windows.Media.Animation.BeginStoryboard&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When triggered by the event, the animation then runs.</source>
          <target state="translated">当触发事件，动画将运行。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Most of the control aspects of a &lt;xref:System.Windows.Media.Animation.Storyboard&gt; can be addressed by properties that are exposed in markup.</source>
          <target state="translated">控制的各个方面的大多数&lt;xref:System.Windows.Media.Animation.Storyboard&gt;可以通过在标记中公开的属性进行寻址。&lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For the signatures that do not use the <ph id="ph1">`isControllable`</ph>, parameter, or when that parameter is specified <ph id="ph2">`false`</ph>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</source>
          <target state="translated">不使用的签名<ph id="ph1">`isControllable`</ph>，参数，或指定该参数时， <ph id="ph2">`false`</ph>，动画达到"填充"期时，就会立即删除了与动画的时间线时钟。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Therefore the animation cannot be restarted after running once.</source>
          <target state="translated">因此，在动画运行一次后将不能是重启。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Controlling an animation also requires that the storyboard have an <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or be accessible by reference in code.</source>
          <target state="translated">动画的控制还要求情节提要具有<bpt id="p1">[</bpt>X:name 指令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或可由代码中的引用。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Handoff behavior can be specified as an attribute of &lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;.</source>
          <target state="translated">切换行为可以指定为&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;.&lt;/xref:System.Windows.Media.Animation.BeginStoryboard&gt;的属性</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property by using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</source>
          <target state="translated">使用撰写 HandoffBehavior 应用时&lt;xref:System.Windows.Media.Animation.Storyboard&gt;， &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;，或&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;到通过使用属性&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;、 任何&lt;xref:System.Windows.Media.Animation.Clock&gt;以前与该属性关联的对象可继续使用系统资源; 计时系统不会自动删除时钟。&lt;/xref:System.Windows.Media.Animation.Clock&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt; &lt;/xref:System.Windows.Media.Animation.AnimationTimeline&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>To avoid performance issues when you apply a large number of clocks by using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">若要避免性能问题时通过使用应用大量的时钟&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;，完成后，应从属性的基值移除组合时钟。&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>There are several ways to remove a clock:      -   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.</source>
          <target state="translated">有几种方法来移除时钟:-如果要从属性中移除所有时钟，使用&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;或&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;动画对象的方法。&lt;/xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; &lt;/xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">指定正进行动画处理的第一个参数的属性和<ph id="ph1">`null`</ph>为第二个。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This removes all animation clocks from the property.</source>
          <target state="translated">这从属性中移除所有动画时钟。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.</source>
          <target state="translated">-若要删除特定&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;的时钟，列表从使用&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;要检索的&lt;xref:System.Windows.Media.Animation.ClockController&gt;，然后调用该&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;方法的&lt;xref:System.Windows.Media.Animation.ClockController&gt;。&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;属性&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.</source>
          <target state="translated">这通常是&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;时钟的事件处理程序。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">请注意，仅根时钟可以受&lt;xref:System.Windows.Media.Animation.ClockController&gt;;&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;属性子时钟返回<ph id="ph1">`null`</ph>。&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; &lt;/xref:System.Windows.Media.Animation.ClockController&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event is not raised if the effective duration of the clock is forever.</source>
          <target state="translated">另请注意，&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;如果时钟的有效持续时间都是永久性的则不会引发事件。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In that case, the user must determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.</source>
          <target state="translated">在这种情况下，用户必须确定何时调用&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">这是主要用于动画上长生存期对象的问题。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When an object is garbage collected, its clocks are also disconnected and garbage collected.</source>
          <target state="translated">一个对象进行垃圾回收，其时钟还断开连接，并垃圾收集。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For more information about clock objects, see <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关时钟对象的详细信息，请参阅<bpt id="p1">[</bpt>动画和计时系统概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The storyboard to begin.</source>
          <target state="translated">若要开始情节提要。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</source>
          <target state="translated">枚举描述行为，以使用如果情节提要中所述的属性已进行动画处理的值。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Begins the sequence of actions contained in the provided storyboard, with specified state for control of the animation after it is started.</source>
          <target state="translated">开始提供的演示图板，具有指定状态的动画启动后对其控件中包含的操作序列。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Most typical animation scenarios do not use this method.</source>
          <target state="translated">大多数典型动画方案不使用此方法。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Typically, you create the &lt;xref:System.Windows.Media.Animation.Storyboard&gt; or &lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt; element in markup, and then you place these as the &lt;xref:System.Windows.EventTrigger&gt; content on an element.</source>
          <target state="translated">通常，你创建&lt;xref:System.Windows.Media.Animation.Storyboard&gt;或&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;元素标记，然后将其作为&lt;xref:System.Windows.EventTrigger&gt;上一个元素的内容。&lt;/xref:System.Windows.EventTrigger&gt; &lt;/xref:System.Windows.Media.Animation.BeginStoryboard&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When triggered by the event, the animation then runs.</source>
          <target state="translated">当触发事件，动画将运行。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Most of the control aspects of a &lt;xref:System.Windows.Media.Animation.Storyboard&gt; can be addressed by properties that are exposed in markup.</source>
          <target state="translated">控制的各个方面的大多数&lt;xref:System.Windows.Media.Animation.Storyboard&gt;可以通过在标记中公开的属性进行寻址。&lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For the signatures that do not use the <ph id="ph1">`isControllable`</ph>, parameter, or when that parameter is specified <ph id="ph2">`false`</ph>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</source>
          <target state="translated">不使用的签名<ph id="ph1">`isControllable`</ph>，参数，或指定该参数时， <ph id="ph2">`false`</ph>，动画达到"填充"期时，就会立即删除了与动画的时间线时钟。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Therefore the animation cannot be restarted after running once.</source>
          <target state="translated">因此，在动画运行一次后将不能是重启。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Controlling an animation also requires that the storyboard have an <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or be accessible by reference in code.</source>
          <target state="translated">动画的控制还要求情节提要具有<bpt id="p1">[</bpt>X:name 指令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或可由代码中的引用。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Handoff behavior can be specified as an attribute of &lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;.</source>
          <target state="translated">切换行为可以指定为&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;.&lt;/xref:System.Windows.Media.Animation.BeginStoryboard&gt;的属性</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property by using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</source>
          <target state="translated">使用撰写 HandoffBehavior 应用时&lt;xref:System.Windows.Media.Animation.Storyboard&gt;， &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;，或&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;到通过使用属性&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;、 任何&lt;xref:System.Windows.Media.Animation.Clock&gt;以前与该属性关联的对象可继续使用系统资源; 计时系统不会自动删除时钟。&lt;/xref:System.Windows.Media.Animation.Clock&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;/xref:System.Windows.Media.Animation.AnimationClock&gt; &lt;/xref:System.Windows.Media.Animation.AnimationTimeline&gt; &lt;/xref:System.Windows.Media.Animation.Storyboard&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To avoid performance issues when you apply a large number of clocks by using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">若要避免性能问题时通过使用应用大量的时钟&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;，完成后，应从属性的基值移除组合时钟。&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>There are several ways to remove a clock:      -   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.</source>
          <target state="translated">有几种方法来移除时钟:-如果要从属性中移除所有时钟，使用&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;或&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;动画对象的方法。&lt;/xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; &lt;/xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">指定正进行动画处理的第一个参数的属性和<ph id="ph1">`null`</ph>为第二个。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This removes all animation clocks from the property.</source>
          <target state="translated">这从属性中移除所有动画时钟。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.</source>
          <target state="translated">-若要删除特定&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;的时钟，列表从使用&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;要检索的&lt;xref:System.Windows.Media.Animation.ClockController&gt;，然后调用该&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;方法的&lt;xref:System.Windows.Media.Animation.ClockController&gt;。&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;&lt;/xref:System.Windows.Media.Animation.ClockController&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;属性&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.</source>
          <target state="translated">这通常是&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;时钟的事件处理程序。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">请注意，仅根时钟可以受&lt;xref:System.Windows.Media.Animation.ClockController&gt;;&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;属性子时钟返回<ph id="ph1">`null`</ph>。&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; &lt;/xref:System.Windows.Media.Animation.ClockController&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event is not raised if the effective duration of the clock is forever.</source>
          <target state="translated">另请注意，&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;如果时钟的有效持续时间都是永久性的则不会引发事件。&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>In that case, the user must determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.</source>
          <target state="translated">在这种情况下，用户必须确定何时调用&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">这是主要用于动画上长生存期对象的问题。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>When an object is garbage collected, its clocks are also disconnected and garbage collected.</source>
          <target state="translated">一个对象进行垃圾回收，其时钟还断开连接，并垃圾收集。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For more information about clock objects, see <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关时钟对象的详细信息，请参阅<bpt id="p1">[</bpt>动画和计时系统概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The storyboard to begin.</source>
          <target state="translated">若要开始情节提要。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</source>
          <target state="translated">枚举描述行为，以使用如果情节提要中所述的属性已进行动画处理的值。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Declares whether the animation is controllable (can be paused) after it is started.</source>
          <target state="translated">声明动画是否是控制的 （可以暂停） 启动后。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used for the element.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用于元素。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Data.BindingGroup&gt; can be used to validate the values of multiple properties of an object.</source>
          <target state="translated">A&lt;xref:System.Windows.Data.BindingGroup&gt;可以用于验证对象的多个属性的值。&lt;/xref:System.Windows.Data.BindingGroup&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For example, suppose that an application prompts the user to enter an address and then populates an object of type <ph id="ph1">`Address`</ph>, which has the properties <ph id="ph2">`Street`</ph>, <ph id="ph3">`City`</ph>, <ph id="ph4">`ZipCode`</ph>, and <ph id="ph5">`Country`</ph>, with the values that the user provided.</source>
          <target state="translated">例如，假设应用程序提示用户输入地址，然后填充类型的对象<ph id="ph1">`Address`</ph>，其中具有属性<ph id="ph2">`Street`</ph>， <ph id="ph3">`City`</ph>， <ph id="ph4">`ZipCode`</ph>，和<ph id="ph5">`Country`</ph>，与用户提供的值。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The application has a panel that contains four &lt;xref:System.Windows.Controls.TextBox&gt; controls, each of which is bound to one of the object’s properties.</source>
          <target state="translated">应用程序具有包含四个面板&lt;xref:System.Windows.Controls.TextBox&gt;控件，其中每个绑定到对象的属性之一。&lt;/xref:System.Windows.Controls.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can use a &lt;xref:System.Windows.Controls.ValidationRule&gt; in a &lt;xref:System.Windows.Data.BindingGroup&gt; to validate the <ph id="ph1">`Address`</ph> object.</source>
          <target state="translated">你可以使用&lt;xref:System.Windows.Controls.ValidationRule&gt;中&lt;xref:System.Windows.Data.BindingGroup&gt;验证<ph id="ph1">`Address`</ph>对象。&lt;/xref:System.Windows.Data.BindingGroup&gt; &lt;/xref:System.Windows.Controls.ValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Windows.Controls.ValidationRule&gt; can ensure that the zip code is valid for the country of the address.</source>
          <target state="translated">例如，&lt;xref:System.Windows.Controls.ValidationRule&gt;可确保邮政编码的有效地址的国家/地区。&lt;/xref:System.Windows.Controls.ValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Child elements inherit the &lt;xref:System.Windows.Data.BindingGroup&gt; from their parent elements, just as with any other inheritable property.</source>
          <target state="translated">子元素继承&lt;xref:System.Windows.Data.BindingGroup&gt;从其父元素，就像使用任何其他可继承的属性。&lt;/xref:System.Windows.Data.BindingGroup&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_BindingGroup"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.BindingGroupProperty&gt;|   |Metadata properties set to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_BindingGroup"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.BindingGroupProperty&gt;|  |元数据属性设置为<bpt id="p2">**</bpt>true<ept id="p2">**</ept>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement.BindingGroupProperty&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used for the element.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用于元素。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.BindingGroup*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.BindingGroup*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.BindingGroup*&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Attempts to bring this element into view, within any scrollable regions it is contained within.</source>
          <target state="translated">尝试将此元素放入视图，它包含在任何可滚动区域内。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>By calling this method, you raise a &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event that originates from the current element.</source>
          <target state="translated">通过调用此方法，你将提升&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;源自当前元素的事件。&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This event is raised so that it can be handled by a &lt;xref:System.Windows.Controls.ScrollViewer&gt;, or a derived or similar class.</source>
          <target state="translated">将引发此事件，以便其可以通过处理&lt;xref:System.Windows.Controls.ScrollViewer&gt;，或派生或类似的类。&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the &lt;xref:System.Windows.Controls.ScrollViewer&gt; control.</source>
          <target state="translated">预期的行为是由父元素，标记为已处理的事件数据，在处理此事件和事件的源放入通过中嵌入的逻辑视图&lt;xref:System.Windows.Controls.ScrollViewer&gt;控件。&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Neither the &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event nor the BringIntoView method transmit any information about success or failure, other than that the event is typically marked handled on success.</source>
          <target state="translated">既不&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;事件和 BringIntoView 方法传输有关的成功或失败，而非，通常会将事件标记上处理的成功的任何信息。&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Reasons for failure can include the element settings, such as &lt;xref:System.Windows.UIElement.Visibility%2A&gt; being some value other than &lt;xref:System.Windows.Visibility&gt;.</source>
          <target state="translated">失败的原因可以包括元素设置，例如&lt;xref:System.Windows.UIElement.Visibility%2A&gt;&lt;xref:System.Windows.Visibility&gt;.&lt;/xref:System.Windows.Visibility&gt;以外的某些值&lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If you use the signature that does not specify a <ph id="ph1">`targetRectangle`</ph>, then the entire element size (its &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;) will be made visible.</source>
          <target state="translated">如果使用未指定的签名<ph id="ph1">`targetRectangle`</ph>，然后的整个元素大小 (其&lt;xref:System.Windows.UIElement.RenderSize%2A&gt;) 将变为可见。&lt;/xref:System.Windows.UIElement.RenderSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>By calling this method, you potentially will call &lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt; on any parent scrollable area that contains the element.</source>
          <target state="translated">通过调用此方法，你可能将调用&lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;在任何父可滚动区域中包含的元素。&lt;/xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If this element is not contained in a scrollable area, the &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event is still raised, but there will be no effect because there are no event listeners.</source>
          <target state="translated">如果此元素不包含在可滚动区域中，&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;仍引发事件，但因为没有事件侦听器将是不起作用。&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Attempts to bring the provided region size of this element into view, within any scrollable regions it is contained within.</source>
          <target state="translated">尝试将此元素的提供的区域大小放入视图，它包含在任何可滚动区域内。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>By calling this method, you raise a &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event that originates from the current element.</source>
          <target state="translated">通过调用此方法，你将提升&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;源自当前元素的事件。&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>This event is raised so that it can be handled by a &lt;xref:System.Windows.Controls.ScrollViewer&gt;, or a derived or similar class.</source>
          <target state="translated">将引发此事件，以便其可以通过处理&lt;xref:System.Windows.Controls.ScrollViewer&gt;，或派生或类似的类。&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the &lt;xref:System.Windows.Controls.ScrollViewer&gt; control.</source>
          <target state="translated">预期的行为是由父元素，标记为已处理的事件数据，在处理此事件和事件的源放入通过中嵌入的逻辑视图&lt;xref:System.Windows.Controls.ScrollViewer&gt;控件。&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Neither the &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event nor the &lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt; method transmit any information about success or failure, other than that the event is typically marked handled on success.</source>
          <target state="translated">既不&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;事件也不&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;方法不会传输有关的成功或失败，而非，通常会将事件标记上处理的成功的任何信息。&lt;/xref:System.Windows.FrameworkElement.BringIntoView%2A&gt; &lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Reasons for failure can include the element settings, such as &lt;xref:System.Windows.UIElement.Visibility%2A&gt; being some value other than &lt;xref:System.Windows.Visibility&gt;.</source>
          <target state="translated">失败的原因可以包括元素设置，例如&lt;xref:System.Windows.UIElement.Visibility%2A&gt;&lt;xref:System.Windows.Visibility&gt;.&lt;/xref:System.Windows.Visibility&gt;以外的某些值&lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>If you use the signature that does not specify a <ph id="ph1">`targetRectangle`</ph>, then the entire element size (its &lt;xref:System.Windows.UIElement.RenderSize%2A&gt;) will be made visible.</source>
          <target state="translated">如果使用未指定的签名<ph id="ph1">`targetRectangle`</ph>，然后的整个元素大小 (其&lt;xref:System.Windows.UIElement.RenderSize%2A&gt;) 将变为可见。&lt;/xref:System.Windows.UIElement.RenderSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>By calling this method, you potentially will call &lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt; on any parent scrollable area that contains the element.</source>
          <target state="translated">通过调用此方法，你可能将调用&lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;在任何父可滚动区域中包含的元素。&lt;/xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If this element is not contained in a scrollable area, the &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt; event is still raised, but there will be no effect because there are no event listeners.</source>
          <target state="translated">如果此元素不包含在可滚动区域中，&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;仍引发事件，但因为没有事件侦听器将是不起作用。&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Specified size of the element that should also be brought into view.</source>
          <target state="translated">此外应放入视图的元素的指定的大小。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Gets or sets the context menu element that should appear whenever the context menu is requested through <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> from within this element.</source>
          <target state="translated">获取或设置通过请求的上下文菜单时应该显示的上下文菜单元素<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>从在此元素。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.ContextMenu&gt; itself is a &lt;xref:System.Windows.FrameworkElement&gt; derived class, and it is technically possible for &lt;xref:System.Windows.Controls.ContextMenu&gt; itself to have a ContextMenu property.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ContextMenu&gt;本身是&lt;xref:System.Windows.FrameworkElement&gt;派生类，并将从技术上讲可能&lt;xref:System.Windows.Controls.ContextMenu&gt;本身可以具有 ContextMenu 属性。&lt;/xref:System.Windows.Controls.ContextMenu&gt; &lt;/xref:System.Windows.FrameworkElement&gt;&lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>However, this creates a confusing context menu experience for the user and this practice is not recommended.</source>
          <target state="translated">但是，这将创建用户提供令人困惑的上下文菜单体验，并且不建议这样做。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ContextMenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ContextMenuProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ContextMenu"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.ContextMenuProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.ContextMenuProperty&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The context menu assigned to this element.</source>
          <target state="translated">分配给此元素的上下文菜单。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Occurs just before any context menu on the element is closed.</source>
          <target state="translated">即将关闭元素上的任何上下文菜单时发生。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>To suppress closing context menus, handlers of the event should mark it as handled.</source>
          <target state="translated">若要取消关闭上下文菜单，事件的处理程序应将其标记为已处理。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>To use this event as an &lt;xref:System.Windows.EventTrigger&gt; in a style, you must reference the underlying service's definition of the event:       <bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>CorePseudocode#FEContextMenuClosing<ept id="p2">](~/add/codesnippet/xaml/CorePseudocode/pseudocode.xaml#fecontextmenuclosing)</ept><ept id="p1">]</ept>       (This usage is required because the event implementation on &lt;xref:System.Windows.FrameworkElement&gt; that exposes the underlying service event does not map the ContextMenuClosing identifier such that you can use it as a trigger).</source>
          <target state="translated">若要将此事件用作&lt;xref:System.Windows.EventTrigger&gt;样式，则必须引用的事件的基础服务的定义︰ <bpt id="p1">[!code-xml</bpt> <bpt id="p2">[</bpt>CorePseudocode #FEContextMenuClosing<ept id="p2">](~/add/codesnippet/xaml/CorePseudocode/pseudocode.xaml#fecontextmenuclosing)</ept> <ept id="p1">]</ept> (此用法是必需的因为上的事件实现&lt;xref:System.Windows.FrameworkElement&gt;公开基础服务事件未映射的 ContextMenuClosing 标识符，以便你可以将它用作触发器)。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.ContextMenu&gt; itself is a &lt;xref:System.Windows.FrameworkElement&gt; derived class, but the ContextMenuClosing event will not be raised by a context menu directly.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ContextMenu&gt;本身是&lt;xref:System.Windows.FrameworkElement&gt;派生类，但 ContextMenuClosing 事件不会引发由上下文菜单直接。&lt;/xref:System.Windows.FrameworkElement&gt;&lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Instead, the event is raised from the element that "owns" the context menu as a property and is only raised when a user attempts to close a context menu in the UI.</source>
          <target state="translated">相反，从"拥有"作为属性的上下文菜单，并仅在用户尝试关闭用户界面中的上下文菜单时引发的元素，将引发事件。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>However it is possible for &lt;xref:System.Windows.Controls.ContextMenu&gt; itself to have a &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; property (a nested context menu).</source>
          <target state="translated">但是有可能&lt;xref:System.Windows.Controls.ContextMenu&gt;本身可以具有&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;属性 （嵌套的上下文菜单）。&lt;/xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; &lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>In this case the &lt;xref:System.Windows.Controls.ContextMenu&gt; really does own the nested &lt;xref:System.Windows.Controls.ContextMenu&gt; and might raise the event, with the source of the event being the nested context menu.</source>
          <target state="translated">在这种情况下&lt;xref:System.Windows.Controls.ContextMenu&gt;实际上确实拥有嵌套&lt;xref:System.Windows.Controls.ContextMenu&gt;，可能引发事件，与嵌套的上下文菜单上的事件源。&lt;/xref:System.Windows.Controls.ContextMenu&gt; &lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.ContextMenu&gt; class itself also has a similar event (&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;) but the &lt;xref:System.Windows.Controls.ContextMenu.Closed&gt; event does not provide you the opportunity to cancel the user action.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ContextMenu&gt;类本身也有类似的事件 (&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;) 但&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;事件不提供你取消用户执行任何操作的机会。&lt;/xref:System.Windows.Controls.ContextMenu.Closed&gt; &lt;/xref:System.Windows.Controls.ContextMenu.Closed&gt; &lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ContextMenuClosingEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Controls.ContextMenuEventHandler&gt;|      -   Override &lt;xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.ContextMenuClosingEvent&gt;|  |路由策略 |冒泡 |  |委托 |&lt;xref:System.Windows.Controls.ContextMenuEventHandler&gt;|     -重写&lt;xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A&gt;实现处理此事件在派生类中的类。&lt;/xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A&gt; &lt;/xref:System.Windows.Controls.ContextMenuEventHandler&gt; &lt;/xref:System.Windows.FrameworkElement.ContextMenuClosingEvent&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">标识<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">路由的事件标识符是在注册路由的事件时创建的。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用工具方法。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">可以使用这些标识符添加类处理程序。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">有关注册路由的事件的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">有关使用路由的事件标识符添加类处理程序的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Occurs when any context menu on the element is opened.</source>
          <target state="translated">当打开任何元素上的上下文菜单时发生。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>To manually open context menus, handlers of the events should mark the relevant event as handled.</source>
          <target state="translated">若要手动打开上下文菜单，事件的处理程序应将相关的事件标记为已处理。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Otherwise, the existing value of the &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; property will be used to automatically open a context menu.</source>
          <target state="translated">否则为的现有值&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;属性将用于自动打开上下文菜单。&lt;/xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; property and then open the new &lt;xref:System.Windows.Controls.ContextMenu&gt;.</source>
          <target state="translated">将标记处理的事件可有效地取消的默认操作，并且可有机会重置的&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;属性，然后打开新&lt;xref:System.Windows.Controls.ContextMenu&gt;。&lt;/xref:System.Windows.Controls.ContextMenu&gt;&lt;/xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;的值</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>However, there is a timing issue you should be aware of.</source>
          <target state="translated">但是，没有应该注意的计时问题。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>In order to completely replace the context menu through a ContextMenuOpening handler, the initial context menu must not be null / empty.</source>
          <target state="translated">若要完全替换通过 ContextMenuOpening 处理程序的上下文菜单，初始上下文菜单不能为 null / 空。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Alternatively, you might need to handle the event and then manually open a new context menu.</source>
          <target state="translated">或者，你可能需要处理该事件，然后手动打开新的上下文菜单。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>How to: Handle the ContextMenuOpening Event<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何︰ 处理 ContextMenuOpening 事件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>To use this event as an &lt;xref:System.Windows.EventTrigger&gt; in a style, you must reference the underlying attached event:       <bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>CorePseudocode#FEContextMenuOpening<ept id="p2">](~/add/codesnippet/xaml/CorePseudocode/pseudocode.xaml#fecontextmenuopening)</ept><ept id="p1">]</ept>       (This usage is required because the event implementation on &lt;xref:System.Windows.FrameworkElement&gt; that exposes the underlying service event does not map the ContextMenuOpening identifier such that you can use it in triggers).</source>
          <target state="translated">若要将此事件用作&lt;xref:System.Windows.EventTrigger&gt;样式，则必须引用基础的附加的事件︰ <bpt id="p1">[!code-xml</bpt> <bpt id="p2">[</bpt>CorePseudocode #FEContextMenuOpening<ept id="p2">](~/add/codesnippet/xaml/CorePseudocode/pseudocode.xaml#fecontextmenuopening)</ept> <ept id="p1">]</ept> (此用法是必需的因为上的事件实现&lt;xref:System.Windows.FrameworkElement&gt;公开基础服务事件未映射的 ContextMenuOpening 标识符，以便你可以在触发器中使用它)。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.ContextMenu&gt; itself is a &lt;xref:System.Windows.FrameworkElement&gt; derived class, but this event will not be raised from the context menu being opened as a source.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ContextMenu&gt;本身是&lt;xref:System.Windows.FrameworkElement&gt;派生类，但不是会从上下文菜单中打开作为源引发此事件。&lt;/xref:System.Windows.FrameworkElement&gt;&lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The event is raised from the element that "owns" the context menu as a property and is only raised when a user attempts to open a context menu in the UI.</source>
          <target state="translated">从"拥有"作为属性的上下文菜单，并仅在用户尝试在 UI 中打开上下文菜单时引发的元素，将引发事件。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>It is possible for &lt;xref:System.Windows.Controls.ContextMenu&gt; itself to have a &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; property, but you should avoid this scenario (for details, see &lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName&gt;).</source>
          <target state="translated">之所以&lt;xref:System.Windows.Controls.ContextMenu&gt;本身可以具有&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;属性，但你应避免这种情况下 (有关详细信息，请参阅&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName&gt;)。&lt;/xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.FrameworkElement.ContextMenu%2A&gt; &lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.ContextMenu&gt; class itself also has a similar event (&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;) but &lt;xref:System.Windows.Controls.ContextMenu.Opened&gt; does not provide you the opportunity to cancel the user action.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ContextMenu&gt;类本身也有类似的事件 (&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;) 但&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;不提供取消用户执行任何操作的机会。&lt;/xref:System.Windows.Controls.ContextMenu.Opened&gt; &lt;/xref:System.Windows.Controls.ContextMenu.Opened&gt; &lt;/xref:System.Windows.Controls.ContextMenu&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ContextMenuOpeningEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Controls.ContextMenuEventHandler&gt;|      -   Override &lt;xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.ContextMenuOpeningEvent&gt;|  |路由策略 |冒泡 |  |委托 |&lt;xref:System.Windows.Controls.ContextMenuEventHandler&gt;|     -重写&lt;xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A&gt;实现处理此事件在派生类中的类。&lt;/xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A&gt; &lt;/xref:System.Windows.Controls.ContextMenuEventHandler&gt; &lt;/xref:System.Windows.FrameworkElement.ContextMenuOpeningEvent&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">标识<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">路由的事件标识符是在注册路由的事件时创建的。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用工具方法。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">可以使用这些标识符添加类处理程序。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">有关注册路由的事件的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">有关使用路由的事件标识符添加类处理程序的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.ContextMenu*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.ContextMenu*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.ContextMenu*&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Gets or sets the cursor that displays when the mouse pointer is over this element.</source>
          <target state="translated">获取或设置当鼠标指针位于此元素时，显示的光标。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>When you set this property in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> processor relies on type conversion for the &lt;xref:System.Windows.Input.Cursor&gt; class to evaluate the string.</source>
          <target state="translated">在设置此属性时<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>、<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>处理器依赖于针对类型转换&lt;xref:System.Windows.Input.Cursor&gt;类来计算该字符串。&lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The provided string should evaluate to a &lt;xref:System.Windows.Input.CursorType&gt; value.</source>
          <target state="translated">所提供的字符串的计算结果应为&lt;xref:System.Windows.Input.CursorType&gt;值。&lt;/xref:System.Windows.Input.CursorType&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Input.Cursor&gt; for details.</source>
          <target state="translated">请参阅&lt;xref:System.Windows.Input.Cursor&gt;有关详细信息。&lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the &lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt; property.</source>
          <target state="translated">是否建立此属性的光标将或将不会显示在鼠标指针位于此元素时也是依赖于的值&lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;属性。&lt;/xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.</source>
          <target state="translated">此外，与事件相关的注意事项，如活动拖动、 鼠标捕获、 文本编辑控件，以此类推内, 模式还将影响光标，并且其优先级高于此属性中指定的值。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>To revert the behavior of setting this property to the eventual default, set it to <ph id="ph1">`null`</ph> again.</source>
          <target state="translated">若要恢复的此属性设置为最终的默认行为，请将其设置为<ph id="ph1">`null`</ph>试。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`null`</ph> default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere.</source>
          <target state="translated"><ph id="ph1">`null`</ph>默认的真正含义的实际光标值确定此处延迟，并且应从其他地方获取。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>If presented without programmatic values from any source, the default cursor that is visually over a <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> application will be an arrow.</source>
          <target state="translated">如果没有来自任何源的编程值显示的默认光标，则光标<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>应用程序将是一个箭头。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>However, the transient cursor changes are not set to the Cursor values of the elements when they are passed over.</source>
          <target state="translated">但是，暂时性光标发生变化，未设置为元素的光标值时通过传递。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The Cursor property will only report non null values in cases where it was actually set, for instance through code or a style.</source>
          <target state="translated">属性将仅报告中的非 null 值光标情况下，它是实际设置，例如通过代码或样式。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Each movement of the mouse over a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> application raises a &lt;xref:System.Windows.UIElement.QueryCursor&gt; event.</source>
          <target state="translated">每个移动的鼠标悬停<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>应用程序将引发&lt;xref:System.Windows.UIElement.QueryCursor&gt;事件。&lt;/xref:System.Windows.UIElement.QueryCursor&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor through the arguments of this event.</source>
          <target state="translated">该事件将冒泡，并且在路由任何元素都有机会对事件进行处理，并将光标通过此事件的自变量的值设置。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>This is the mechanism that produces the visually apparent cursor in most cases.</source>
          <target state="translated">这是产生显而易见的光标，在大多数情况下的机制。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.Windows.UIElement.QueryCursor&gt; handler returns a cursor result, then the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the Cursor property at any level, unless &lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt; is set.</source>
          <target state="translated">如果&lt;xref:System.Windows.UIElement.QueryCursor&gt;处理程序返回一个光标结果中，则事实事件进行处理，并且参数中有更改的值优先于任何级别的游标属性的值除非&lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;设置。&lt;/xref:System.Windows.FrameworkElement.ForceCursor%2A&gt; &lt;/xref:System.Windows.UIElement.QueryCursor&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>If not are not creating a custom cursor, you typically set this property to a static property value of the &lt;xref:System.Windows.Input.Cursors&gt; class.</source>
          <target state="translated">如果不创建自定义光标，已将此属性通常设置为静态属性值的&lt;xref:System.Windows.Input.Cursors&gt;类。&lt;/xref:System.Windows.Input.Cursors&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Setting Cursor in code requires one of the following:      -   Call the &lt;xref:System.Windows.Input.Cursor&gt; constructor to get a &lt;xref:System.Windows.Input.Cursor&gt; instance.</source>
          <target state="translated">设置光标在代码中需要以下项之一:-调用&lt;xref:System.Windows.Input.Cursor&gt;构造函数获取&lt;xref:System.Windows.Input.Cursor&gt;实例。&lt;/xref:System.Windows.Input.Cursor&gt; &lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Both signatures of the &lt;xref:System.Windows.Input.Cursor&gt; constructor use streams or files, in anticipation that you are creating the &lt;xref:System.Windows.Input.Cursor&gt; object for a custom cursor.</source>
          <target state="translated">这两个签名&lt;xref:System.Windows.Input.Cursor&gt;构造函数使用的流或文件，为你创建的预期&lt;xref:System.Windows.Input.Cursor&gt;自定义光标对象。&lt;/xref:System.Windows.Input.Cursor&gt; &lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>-   Use the &lt;xref:System.Windows.Input.CursorConverter&gt; class and its &lt;xref:System.Windows.Input.CursorConverter.ConvertFrom%2A&gt; method to specify a cursor by &lt;xref:System.Windows.Input.CursorType&gt;, or a string that can evaluate to a &lt;xref:System.Windows.Input.CursorType&gt;, and cast the return to &lt;xref:System.Windows.Input.Cursor&gt;.</source>
          <target state="translated">-使用&lt;xref:System.Windows.Input.CursorConverter&gt;类并将其&lt;xref:System.Windows.Input.CursorConverter.ConvertFrom%2A&gt;方法，以指定通过游标&lt;xref:System.Windows.Input.CursorType&gt;，或可以计算为字符串&lt;xref:System.Windows.Input.CursorType&gt;，并强制转换到&lt;xref:System.Windows.Input.Cursor&gt;。&lt;/xref:System.Windows.Input.Cursor&gt;返回&lt;/xref:System.Windows.Input.CursorType&gt;&lt;/xref:System.Windows.Input.CursorType&gt;&lt;/xref:System.Windows.Input.CursorConverter.ConvertFrom%2A&gt;&lt;/xref:System.Windows.Input.CursorConverter&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Setting the &lt;xref:System.Windows.Input.Cursor&gt; to a custom value is not enabled in partial trust.</source>
          <target state="translated">设置&lt;xref:System.Windows.Input.Cursor&gt;在部分信任环境中未启用为自定义值。&lt;/xref:System.Windows.Input.Cursor&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>For more information on custom cursors, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关自定义的游标的详细信息，请参阅<bpt id="p1">[</bpt>输入概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Cursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.CursorProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Cursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.CursorProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.CursorProperty&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The cursor to display.</source>
          <target state="translated">要显示的光标。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The default value is defined as <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> per this dependency property.</source>
          <target state="translated">默认值指<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>按此依赖属性。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>However, the practical default at run time will come from a variety of factors.</source>
          <target state="translated">但是，在运行时的实际默认值将来自多种因素。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Cursor*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.Cursor*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.Cursor*&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Gets or sets the data context for an element when it participates in data binding.</source>
          <target state="translated">获取或设置元素的数据上下文，参与数据绑定时。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Data context<ept id="p1">*</ept> is a concept that allows elements to inherit information from their parent elements about the data source that is used for binding, as well as other characteristics of the binding, such as the path.</source>
          <target state="translated"><bpt id="p1">*</bpt>数据上下文<ept id="p1">*</ept>是使元素可以信息从其父元素继承有关用于绑定，以及绑定，如路径的其他特征的数据源的概念。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Data context can be set directly to a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> object, with the bindings evaluating to properties of that object.</source>
          <target state="translated">可以直接设置数据上下文<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>对象，并且将绑定到该对象的属性计算。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Alternatively, you can set the data context to a &lt;xref:System.Windows.Data.DataSourceProvider&gt; object.</source>
          <target state="translated">或者，可以设置的数据上下文为&lt;xref:System.Windows.Data.DataSourceProvider&gt;对象。&lt;/xref:System.Windows.Data.DataSourceProvider&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This dependency property inherits property values.</source>
          <target state="translated">此依赖属性继承属性值。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>If there are child elements without other values for DataContext established through local values or styles, then the property system will set the value to be the DataContext value of the nearest parent element with this value assigned.</source>
          <target state="translated">如果没有无需通过本地值或样式建立的 DataContext 其他值的子元素，则属性系统将设置此值为最接近的父元素的 DataContext 值与分配此值。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use one of the following properties of the &lt;xref:System.Windows.Data.Binding&gt; class to specify the binding source explicitly: &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;, &lt;xref:System.Windows.Data.Binding.Source%2A&gt;, or &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;.</source>
          <target state="translated">或者，你可以使用的以下属性之一&lt;xref:System.Windows.Data.Binding&gt;类显式指定绑定源︰ &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;， &lt;xref:System.Windows.Data.Binding.Source%2A&gt;，或&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;。&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A&gt; &lt;/xref:System.Windows.Data.Binding.Source%2A&gt; &lt;/xref:System.Windows.Data.Binding.ElementName%2A&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何︰ 指定绑定源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, DataContext is most typically set to as a &lt;xref:System.Windows.Data.Binding&gt; declaration.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>，DataContext 通常设置为作为&lt;xref:System.Windows.Data.Binding&gt;声明。&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You can use either property element syntax or attribute syntax.</source>
          <target state="translated">你可以使用属性元素语法或特性语法。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Attribute syntax is shown in the example on this page.</source>
          <target state="translated">特性语法在此页上的示例所示。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>You can also use code to set DataContext.</source>
          <target state="translated">代码还可用于设置 DataContext。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>DataContext is a bindable property, to facilitate scenarios where one context might be bound to another.</source>
          <target state="translated">DataContext 是可绑定的属性，以便于可能会将一个上下文绑定到另一个方案。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>However, if you bind to DataContext, be careful to not create circular binding references (do not bind a DataContext to itself, which is possible to do because of the property value inheritance nature of the DataContext property).</source>
          <target state="translated">但是，如果你将绑定到 DataContext，请注意不创建循环绑定引用 （不绑定 DataContext 自身，这是由于 DataContext 属性的属性值继承特性执行）。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_DataContext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.DataContext&gt;       &lt;dataContextObject /&gt;     &lt;/object.DataContext&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlAttributeUsage_DataContext"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph2">```   &lt;object DataContext="bindingUsage"/&gt;   - or -   &lt;object DataContext="{resourceExtension contextResourceKey}"/&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_DataContext"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>dataContextObject<ept id="p4">*</ept>    A directly embedded object that serves as data context for any bindings within the parent element.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_DataContext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性元素用法<ph id="ph1">```   &lt;object&gt;     &lt;object.DataContext&gt;       &lt;dataContextObject /&gt;     &lt;/object.DataContext&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlAttributeUsage_DataContext"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 属性用法<ph id="ph2">```   &lt;object DataContext="bindingUsage"/&gt;   - or -   &lt;object DataContext="{resourceExtension contextResourceKey}"/&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_DataContext"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>dataContextObject<ept id="p4">*</ept>用作父元素内的任何绑定的数据上下文直接嵌入的对象。            </target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Typically, this object is a &lt;xref:System.Windows.Data.Binding&gt; or another &lt;xref:System.Windows.Data.BindingBase&gt; derived class.</source>
          <target state="translated">通常情况下，此对象是&lt;xref:System.Windows.Data.Binding&gt;或另一个&lt;xref:System.Windows.Data.BindingBase&gt;派生类。&lt;/xref:System.Windows.Data.BindingBase&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Alternatively, raw data of any <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> object type intended for binding may be placed here, with the actual bindings defined later.</source>
          <target state="translated">或者，原始数据的任何<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>对象适用于绑定可能会放置在这里，与更高版本定义的实际绑定的类型。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>bindingUsage<ept id="p1">*</ept>    A binding usage that evaluates to an appropriate data context.</source>
          <target state="translated"><bpt id="p1">*</bpt>bindingUsage<ept id="p1">*</ept>计算结果为适当的数据上下文的绑定用法。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>绑定标记扩展<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>resourceExtension<ept id="p1">*</ept>    One of the following:  or .</source>
          <target state="translated"><bpt id="p1">*</bpt>resourceExtension<ept id="p1">*</ept>以下项之一︰ 或。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>This usage is used when referring to raw data defined as an object in resources.</source>
          <target state="translated">在引用定义为资源中的对象的原始数据时，使用这种用法。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>XAML 资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>contextResourceKey<ept id="p1">*</ept>    The key identifier for the object being requested from within a &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated"><bpt id="p1">*</bpt>contextResourceKey<ept id="p1">*</ept>内一种&lt;xref:System.Windows.ResourceDictionary&gt;。&lt;/xref:System.Windows.ResourceDictionary&gt;从发出请求的对象的密钥标识符</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_DataContext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.DataContextProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_DataContext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.DataContextProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement.DataContextProperty&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The object to use as data context.</source>
          <target state="translated">要用作数据上下文的对象。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Occurs when the data context for this element changes.</source>
          <target state="translated">当此元素的数据上下文更改时发生。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>For an explanation of data contexts and data binding, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">数据上下文和数据绑定的说明，请参阅<bpt id="p1">[</bpt>数据绑定概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When the &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; for an element changes, all data-bound properties on this element are potentially affected.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 时&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;元素更改，此元素上的所有数据绑定属性可能会受到都影响。&lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>This applies to any elements that are child elements of the current element in the logical tree, which inherit the data context, and also the current element itself.</source>
          <target state="translated">这适用于任何子元素的逻辑树中中的当前元素继承的数据上下文，以及当前元素本身。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>All such existing bindings must re-interpret the new &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; and will reevaluate the binding results.</source>
          <target state="translated">此类的所有现有绑定必须重新解释新&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;并将重新计算绑定结果。&lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The data binding engine is not deterministic about the order of these reevaluations, relative to the raising of the DataContextChanged event.</source>
          <target state="translated">数据绑定引擎不是有关这些重新计算，相对于引发 DataContextChanged 事件的顺序确定的。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The reevaluations can occur before the event, after the event, or in any mixture.</source>
          <target state="translated">事件发生后, 或在任意组合，该事件前, 可以出现重新计算。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.DataContext*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.DataContext*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.DataContext*&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Gets or sets the key to use to reference the style for this control, when theme styles are used or defined.</source>
          <target state="translated">获取或设置要使用可在使用或定义主题样式时引用此控件的样式的键。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>This property is typically not set through any of its direct property accessors.</source>
          <target state="translated">此属性通常不通过其直接属性访问器的任何设置。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Instead, you override the type-specific metadata of this dependency property every time you create a new &lt;xref:System.Windows.FrameworkElement&gt; derived class.</source>
          <target state="translated">相反，替代此依赖项属性的特定类型的元数据，每次创建新的&lt;xref:System.Windows.FrameworkElement&gt;派生类。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>When you derive a control, call the &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; method against the &lt;xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt; identifier, within the static constructor of the control derived class (or equivalent class initialization).</source>
          <target state="translated">当派生的控件时，调用&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;方法依据&lt;xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt;在控件的静态构造函数内的标识符，派生类 （或等效的类初始化）。&lt;/xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>A control typically overrides the default value of this property to be its own type, but in some cases could also use a base type for which a style in the theme dictionaries exists.</source>
          <target state="translated">通常，控件重写其自己的类型，此属性的默认值，但在某些情况下无法也使用的基类型存在主题字典中的样式。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>This is only practical if the control templates of the base control entirely define the visual representation of that derived control, and if whatever additional members the derived types expose do not require additional elements as part of the control template.</source>
          <target state="translated">如果基控件的控件模板完全定义的可视表示形式该派生，并且派生的类型公开的任何其他成员不需要的其他元素的控件模板的一部分，这是控件的仅可行的。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>If you want your element or control to deliberately not use theme styles, set the &lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">如果你希望元素或控件，以防出现故意不使用主题样式，设置&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A&gt;属性<ph id="ph1">`true`</ph>。&lt;/xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_DefaultStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_DefaultStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The style key.</source>
          <target state="translated">样式键。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>To work correctly as part of theme style lookup, this value is expected to be the &lt;xref:System.Type&gt; of the control being styled.</source>
          <target state="translated">为了作为主题样式查找的一部分正常工作，此值应为&lt;xref:System.Type&gt;带样式的控件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.DefaultStyleKey*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.DefaultStyleKey*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.DefaultStyleKey*&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Indicates that the initialization process for the element is complete.</source>
          <target state="translated">指示元素的初始化过程已完成。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt; was previously called, the base implementation will raise the &lt;xref:System.Windows.FrameworkElement.Initialized&gt; event.</source>
          <target state="translated">如果&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;之前已调用，基实现将引发&lt;xref:System.Windows.FrameworkElement.Initialized&gt;事件。&lt;/xref:System.Windows.FrameworkElement.Initialized&gt; &lt;/xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt; was not called or it could not be determined whether &lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt; was called, &lt;xref:System.Windows.FrameworkElement.Initialized&gt; is not raised and an exception is thrown instead.</source>
          <target state="translated">否则为如果&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;未调用或它无法确定是否&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;调用，&lt;xref:System.Windows.FrameworkElement.Initialized&gt;则不会引发并且改为引发异常。&lt;/xref:System.Windows.FrameworkElement.Initialized&gt; &lt;/xref:System.Windows.FrameworkElement.BeginInit%2A&gt; &lt;/xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>EndInit was called without &lt;xref:System.Windows.FrameworkElement.BeginInit*&gt; having previously been called on the element.</source>
          <target state="translated">已调用 EndInit&lt;xref:System.Windows.FrameworkElement.BeginInit*&gt;以前未在元素上调用。&lt;/xref:System.Windows.FrameworkElement.BeginInit*&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Finds an element that has the provided identifier name.</source>
          <target state="translated">查找具有提供的标识符名称的元素。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>If the element has child elements, these child elements are all searched recursively for the requested named element.</source>
          <target state="translated">如果元素具有子元素，这些子元素将是所有以递归方式搜索请求的命名元素。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>FindName operates within the current element's namescope.</source>
          <target state="translated">FindName 运行在当前元素的名称范围内。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The name of the requested element.</source>
          <target state="translated">请求的元素的名称。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The requested element.</source>
          <target state="translated">请求的元素。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>This can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no matching element was found.</source>
          <target state="translated">这可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果不找到任何匹配元素。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Searches for a resource with the specified key, and throws an exception if the requested resource is not found.</source>
          <target state="translated">资源中搜索具有指定键，并在找不到请求的资源时引发异常。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  If you call this method for a key that cannot be found, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt; 如果找不到键调用此方法，将引发异常。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>If you do not want to handle exceptions that result from calling FindResource, call &lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt; instead.</source>
          <target state="translated">如果你不想要处理的异常，导致调用 FindResource，调用&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;相反。&lt;/xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt; returns <ph id="ph1">`null`</ph> when a requested resource cannot be found, and does not throw an exception.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;返回<ph id="ph1">`null`</ph>请求的资源时无法找到，且不会引发异常。&lt;/xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>If the resource is not found on the calling element, the parent element in the logical tree is searched next, then the application, then themes, and finally system resources.</source>
          <target state="translated">如果调用元素上未找到资源，逻辑树中的父元素是搜索的下一步，然后应用程序，然后主题和最后系统资源。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>This lookup methodology is identical to how the tree is searched if a resource were requested by a dynamic resource reference in markup.</source>
          <target state="translated">这种查找方法等同于请求资源时在标记中的动态资源引用如何搜索树。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>For more information about resource lookup, see <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关资源查找的详细信息，请参阅<bpt id="p1">[</bpt>XAML 资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Typically, you immediately cast a FindResource return value to the type of the property that you setting with the returned resource value.</source>
          <target state="translated">通常情况下，你立即强制转换为属性的类型的返回值所设置，并返回的资源值 FindResource。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Resource keys are not necessarily strings.</source>
          <target state="translated">资源键不一定是字符串。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>For instance, styles for controls at the theme level are deliberately keyed to the &lt;xref:System.Type&gt; of the control, and application or page styles for controls typically use this same key convention.</source>
          <target state="translated">例如，样式特意根据主题级别的控件&lt;xref:System.Type&gt;的控件，并应用程序或页面的样式的控件通常使用此相同的键约定。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>XAML Resources<ept id="p2">](../Topic/XAML%20Resources.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>样式和模板化<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或<bpt id="p2">[</bpt>XAML 资源<ept id="p2">](../Topic/XAML%20Resources.md)</ept>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The key identifier for the requested resource.</source>
          <target state="translated">请求的资源键标识符。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The requested resource.</source>
          <target state="translated">请求的资源。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>If no resource with the provided key was found, an exception is thrown.</source>
          <target state="translated">如果找不到与提供的键资源，则引发异常。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value might also be returned in the exception case.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中异常的情况下可能还会返回值。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph> was not found and an event handler does not exist for the <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher.UnhandledException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph>未找到和事件处理程序不存在<bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher.UnhandledException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph> was not found and the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled*&gt;</ph> property is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the <bpt id="p2">&lt;xref href="System.Windows.Threading.Dispatcher.UnhandledException"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph>找不到与<ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled*&gt;</ph>属性是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>中<bpt id="p2">&lt;xref href="System.Windows.Threading.Dispatcher.UnhandledException"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceKey&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Gets or sets the direction that text and other <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> elements flow within any parent element that controls their layout.</source>
          <target state="translated">获取或设置方向，文本和其他<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>元素在任何控制其布局的父元素中的流动。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The direction that text and other <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> elements flow within their parent element, as a value of the enumeration.</source>
          <target state="translated">方向，文本和其他<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>元素在它们的父元素中的流动作为枚举的值。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.FlowDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Windows.FlowDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.FlowDirection*&gt;</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.</source>
          <target state="translated">获取或设置一个属性，允许自定义的外观、 效果或将应用于此元素，它会捕获键盘焦点时其他样式特征。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>This property affects visual appearance but does not report &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt; in metadata.</source>
          <target state="translated">此属性会影响视觉外观，但不会报告&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;元数据中。&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>This is because the visual appearance change is event-driven and may not apply at all times, and therefore should not generally report any visual or layout information in metadata.</source>
          <target state="translated">这是因为可视外观更改是事件驱动的和可能不适用于在所有时间，并因此通常不应该报告元数据中的任何 visual 或布局信息。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Conceptually, the visual behavior of focus applied to a control should be coherent from control to control.</source>
          <target state="translated">从概念上讲，应用于控件的焦点的可视行为应为连贯控件间。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme.</source>
          <target state="translated">最合理的方法，来强制执行一致性是仅更改焦点视觉样式，如果你创建的整个主题。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Setting this property on individual control styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus.</source>
          <target state="translated">将此属性设置单个控件样式上，而不是主题的一部分不是预期的用法的此属性，因为它可能会导致混乱的用户体验与键盘焦点有关。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>If you are intending control-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as &lt;xref:System.Windows.UIElement.IsFocused%2A&gt; or &lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;, and to do so in a way that does not visually interfere with any existing focus visual style.</source>
          <target state="translated">如果你想为以防出现故意不连贯整个主题的特定于控件的行为，较好的做法是使用触发器样式中的单个输入的状态属性，如&lt;xref:System.Windows.UIElement.IsFocused%2A&gt;或&lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;，并不直观地干扰任何现有的焦点视觉样式的方法中执行此操作。&lt;/xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt; &lt;/xref:System.Windows.UIElement.IsFocused%2A&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>For more information on the design intention of FocusVisualStyle and alternative focus properties, see <bpt id="p1">[</bpt>Styling for Focus in Controls, and FocusVisualStyle<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关的设计意图的 FocusVisualStyle 和备用焦点属性的详细信息，请参阅<bpt id="p1">[</bpt>样式的焦点在控件和 FocusVisualStyle<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_FocusVisualStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object FocusVisualStyle="{resourceExtension styleResourceKey}"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlPropertyElementUsage_FocusVisualStyle"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <bpt id="p3">&lt;a name="xamlValues_FocusVisualStyle"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>resourceExtension<ept id="p4">*</ept>    One of the following: , or .</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_FocusVisualStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object FocusVisualStyle="{resourceExtension styleResourceKey}"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlPropertyElementUsage_FocusVisualStyle"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 属性元素用法<bpt id="p3">&lt;a name="xamlValues_FocusVisualStyle"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>resourceExtension<ept id="p4">*</ept>以下项之一:，或。      </target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>XAML 资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept>    The key that identifies the style being requested.</source>
          <target state="translated"><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept>标识所请求的样式的键。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The key refers to an existing resource in a &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">键指一种&lt;xref:System.Windows.ResourceDictionary&gt;。&lt;/xref:System.Windows.ResourceDictionary&gt;中的现有资源</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Property element syntax is technically possible, but not recommended.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 属性元素语法是从技术上讲是可行的但不是建议这样做。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Inline Styles and Templates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>内联样式和模板<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>A binding reference using  or &lt;xref:System.Windows.Data.Binding&gt; is also possible, but uncommon.</source>
          <target state="translated">绑定引用使用或&lt;xref:System.Windows.Data.Binding&gt;也是可行的但不常见。&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_FocusVisualStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.FocusVisualStyleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_FocusVisualStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.FocusVisualStyleProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.FocusVisualStyleProperty&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The desired style to apply on focus.</source>
          <target state="translated">要应用于焦点的所需的样式。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The default value as declared in the dependency property is an empty static <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">依赖项属性中声明的默认值是一个空的静态<bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.</source>
          <target state="translated">但是，在运行时的有效值是通常 （但并非总是） 所提供的控件的主题支持的样式。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.FocusVisualStyle*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.FocusVisualStyle*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.FocusVisualStyle*&gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should force the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> to render the cursor as declared by the &lt;xref:System.Windows.FrameworkElement.Cursor*&gt; property.</source>
          <target state="translated">获取或设置一个值，该值指示是否这<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>应强制<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>呈现所声明的游标&lt;xref:System.Windows.FrameworkElement.Cursor*&gt;属性。&lt;/xref:System.Windows.FrameworkElement.Cursor*&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>If you set this property to <ph id="ph1">`true`</ph> you will override the cursor preferences established by child elements.</source>
          <target state="translated">如果将此属性设置为<ph id="ph1">`true`</ph>将重写建立的子元素的光标首选项。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Doing so in general application <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> might be confusing for the user, particularly if child elements are attempting to specify cursors.</source>
          <target state="translated">这样做因此一般情况下应用程序<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>可能令人困惑的用户，尤其是当子元素尝试指定游标。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Setting ForceCursor is more appropriate in control subclassing or compositing scenarios.</source>
          <target state="translated">设置 ForceCursor 是控件子类化或组合方案中更合适。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ForceCursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ForceCursorProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ForceCursor"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.ForceCursorProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.ForceCursorProperty&gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if cursor presentation while over this element is forced to use current &lt;xref:System.Windows.FrameworkElement.Cursor*&gt; settings for the cursor (including on all child elements); otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果光标位于此元素的呈现会强制使用当前&lt;xref:System.Windows.FrameworkElement.Cursor*&gt;设置光标 （包括所有子元素）; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.Cursor*&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.ForceCursor*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.ForceCursor*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.ForceCursor*&gt;</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the binding on the specified property.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示按指定的属性的绑定。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Checking the return value for <ph id="ph1">`null`</ph> is a technique you can use to determine whether a property has an active binding.</source>
          <target state="translated">检查的返回值<ph id="ph1">`null`</ph>是一种技术，可用于确定属性是否具有活动的绑定。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>This method is really just a convenience wrapper around the &lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">此方法是实际上只是方便周围的包装器&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>GetBindingExpression passes the current instance and the <ph id="ph1">`dp`</ph> parameter to &lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">GetBindingExpression 将当前实例传递和<ph id="ph1">`dp`</ph>到&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt;。&lt;/xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=fullName&gt;参数</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The target <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to get the binding from.</source>
          <target state="translated">目标<bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>来获取从绑定。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the target property has an active binding; otherwise, returns <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>如果目标属性具有活动的绑定; 否则，返回<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt; attached property for the specified <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取的值&lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt;附加属性的指定<bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.FlowDirection*&gt;</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The main purpose of this method is to support attached property syntax for the &lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt; property, therefore allowing child elements of a provided &lt;xref:System.Windows.FrameworkElement&gt; to specify flow direction for the arrangement within their parent element.</source>
          <target state="translated">此方法的主要用途是支持的附加的属性语法&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;属性，从而使子元素提供的&lt;xref:System.Windows.FrameworkElement&gt;指定其父元素内的排列的数据流方向。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>To get the value on the current &lt;xref:System.Windows.FrameworkElement&gt;, use the direct <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> accessor &lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;.</source>
          <target state="translated">若要获取的值对当前&lt;xref:System.Windows.FrameworkElement&gt;，使用 direct<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>访问器&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.FlowDirection%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The element to return a &lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt; for.</source>
          <target state="translated">要返回&lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt;为&lt;/xref:System.Windows.FrameworkElement.FlowDirection*&gt;的元素</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The requested flow direction, as a value of the enumeration.</source>
          <target state="translated">请求的流方向，作为枚举的值。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Returns a geometry for a clipping mask.</source>
          <target state="translated">返回剪切蒙板的几何图形。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The mask applies if the layout system attempts to arrange an element that is larger than the available display space.</source>
          <target state="translated">掩码适用如果布局系统尝试排列大于可用的显示空间的元素。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Margins will be subtracted from the <ph id="ph1">`layoutSlotSize`</ph> as part of layout system behavior.</source>
          <target state="translated">将从减去边距<ph id="ph1">`layoutSlotSize`</ph>布局系统行为的一部分。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>A returned null reference indicates that no clipping will occur.</source>
          <target state="translated">如果返回 null 引用指示没有剪辑将发生。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`null`</ph> when &lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt; is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">默认实现始终返回<ph id="ph1">`null`</ph>时&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;是<ph id="ph2">`false`</ph>。&lt;/xref:System.Windows.UIElement.ClipToBounds%2A&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.FrameworkElement&gt; implementation uses &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; and &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; in its calculations.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;实现使用&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;和&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;其计算中。&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Several subclasses of &lt;xref:System.Windows.FrameworkElement&gt; override this method again.</source>
          <target state="translated">一些子类&lt;xref:System.Windows.FrameworkElement&gt;再次重写此方法。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=fullName&gt;, overrides to always return <ph id="ph1">`null`</ph> because adorners are often deliberately outside the ordinary bounds.</source>
          <target state="translated">&lt;xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=fullName&gt;将重写以便始终返回<ph id="ph1">`null`</ph>因为装饰器通常都特意普通的范围之外。&lt;/xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=fullName&gt; return <ph id="ph1">`null`</ph> if &lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt; is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=fullName&gt;and &lt;xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=fullName&gt; return <ph id="ph1">`null`</ph> if &lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt; is <ph id="ph2">`false`</ph>.&lt;/xref:System.Windows.UIElement.ClipToBounds%2A&gt;&lt;/xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The size of the part of the element that does visual presentation.</source>
          <target state="translated">执行可视化演示元素的部件的大小。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The clipping geometry.</source>
          <target state="translated">剪辑几何图形中。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Returns the named element in the visual tree of an instantiated <bpt id="p1">&lt;xref href="System.Windows.Controls.ControlTemplate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">在实例化的可视化树中返回的命名的元素<bpt id="p1">&lt;xref href="System.Windows.Controls.ControlTemplate"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Templates in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> have a self-contained namescope.</source>
          <target state="translated">中的模板<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>具有自包含的命名空间。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>This is because templates are re-used, and any name defined in a template cannot remain unique when multiple instances of a control each instantiate its template.</source>
          <target state="translated">这是因为模板可以重复使用，并且当多个实例的每个控件实例化其模板，模板中定义的任何名称不能保持唯一。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Call the GetTemplateChild method to return references to objects that come from the template after it is instantiated.</source>
          <target state="translated">调用 GetTemplateChild 方法返回对来自该模板后实例化的对象的引用。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>You cannot use the &lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt; method to find items from templates because &lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt; acts in a more general scope, and there is no connection between the &lt;xref:System.Windows.Controls.ControlTemplate&gt; class itself and the instantiated template once it is applied.</source>
          <target state="translated">不能使用&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt;方法以查找模板中的项，因为&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt;以更通用作用域，并且没有之间没有连接&lt;xref:System.Windows.Controls.ControlTemplate&gt;类本身和实例化的模板后应用。&lt;/xref:System.Windows.Controls.ControlTemplate&gt; &lt;/xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt; supplies the same function as this method.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;提供此方法与相同的功能。&lt;/xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt; is public instead of protected, and it uses correct name-scoping considerations that allow it to access the template within an element and find named items within it.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;而不是公共受保护，并使用正确允许其访问内部元素并查找名为其中的项的模板的名称范围的注意事项。&lt;/xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt; when you need to get an element outside of its parent control.</source>
          <target state="translated">使用&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;何时需要获取其父控件外部元素的位置。&lt;/xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Name of the child to find.</source>
          <target state="translated">要查找的子级的名称。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The requested element.</source>
          <target state="translated">请求的元素。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no element of the requested name exists.</source>
          <target state="translated">可能是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果请求的名称的元素不存在。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Returns an alternative logical parent for this element if there is no visual parent.</source>
          <target state="translated">如果没有视觉父级，则返回此元素的备用逻辑父级。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The default &lt;xref:System.Windows.FrameworkElement&gt; implementation returns the expected single visual parent, which is the same result as getting the &lt;xref:System.Windows.FrameworkElement.Parent%2A&gt; value.</source>
          <target state="translated">默认值&lt;xref:System.Windows.FrameworkElement&gt;实现返回预期的单个视觉父级，即与获取相同的结果&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;值。&lt;/xref:System.Windows.FrameworkElement.Parent%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Derived class implementations might return alternate parent relationships.</source>
          <target state="translated">派生的类的实现可能会返回备用父关系。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Returns something other than <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whenever a WPF framework-level implementation of this method has a non-visual parent connection.</source>
          <target state="translated">返回的内容不<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此方法的 WPF 框架级别实现具有非视觉父级连接时，即。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Overrides <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Visual.GetVisualChild%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, and returns a child at the specified index from a collection of child elements.</source>
          <target state="translated">重写<ph id="ph1">&amp;lt;</ph>xref:System.Windows.Media.Visual.GetVisualChild%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>，并从子元素的集合中返回指定索引处。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>In the &lt;xref:System.Windows.FrameworkElement&gt; implementation, the only valid index is zero.</source>
          <target state="translated">在&lt;xref:System.Windows.FrameworkElement&gt;实现中，唯一有效的索引为零。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The content model for GetVisualChild supports either zero or one child elements, not a collection.</source>
          <target state="translated">GetVisualChild 的内容模型支持零个或一个子元素，不是一个集合。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The zero-based index of the requested child element in the collection.</source>
          <target state="translated">集合中请求的子元素的从零开始索引。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The requested child element.</source>
          <target state="translated">请求的子元素。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>This should not return <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; if the provided index is out of range, an exception is thrown.</source>
          <target state="translated">这不应返回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; 提供的索引是否外的范围，则会引发异常。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Gets or sets the suggested height of the element.</source>
          <target state="translated">获取或设置元素的建议的高度。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Height is one of three writable properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify height information.</source>
          <target state="translated">高度是三个可写属性之一上&lt;xref:System.Windows.FrameworkElement&gt;用于指定高度信息。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt; and &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;.</source>
          <target state="translated">另外两个是&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;和&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual height determination is that first &lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt; must be honored, then &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;, and finally, if it is within bounds, Height.</source>
          <target state="translated">如果没有发生冲突这三个值，确定高度的实际的应用程序的顺序是︰ 首先&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;必须采用，然后&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;，最后，如果它是在限制之内，高度。&lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>If this element is a child element within some other element, then setting this property to a value is really only a suggested value.</source>
          <target state="translated">如果此元素是一个子元素在其他某个元素，然后将此属性设置为值实际上只有一个建议的值。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The layout system as well as the particular layout logic of the parent element will use the value as a nonbinding input during the layout process.</source>
          <target state="translated">布局系统，以及父元素的特定布局逻辑将使用值作为没有约束力的输入在布局过程。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>In practical terms, a &lt;xref:System.Windows.FrameworkElement&gt; is almost always the child element of something else; even when you set the Height on &lt;xref:System.Windows.Window&gt;.</source>
          <target state="translated">在实际情况下，&lt;xref:System.Windows.FrameworkElement&gt;是几乎总是的其他内容; 即使你设置的时间为&lt;xref:System.Windows.Window&gt;。&lt;/xref:System.Windows.Window&gt;高度的子元素&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>(For &lt;xref:System.Windows.Window&gt;, that value is used when the underlying application model establishes the basic rendering assumptions that create the Hwnd that hosts the application.)       In addition to acceptable &lt;xref:System.Double&gt; values, this property can also be &lt;xref:System.Double.NaN?displayProperty=fullName&gt;.</source>
          <target state="translated">(有关&lt;xref:System.Windows.Window&gt;，值时的基础的应用程序模型建立创建 Hwnd 的基本呈现假设使用托管的应用程序。)&lt;/xref:System.Windows.Window&gt;     除了可接受&lt;xref:System.Double&gt;值，此属性也可能是&lt;xref:System.Double.NaN?displayProperty=fullName&gt;.&lt;/xref:System.Double.NaN?displayProperty=fullName&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>This is how you specify auto sizing behavior in code.</source>
          <target state="translated">这是如何在代码中指定自动调整大小行为。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> you set the value to the string "Auto" (case insensitive) to enable the auto sizing behavior.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>你设置的值为字符串"自动"（不区分大小写） 若要启用自动调整大小行为。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Auto sizing behavior implies that the element will fill the height available to it.</source>
          <target state="translated">自动调整大小行为意味着元素将填满可用的高度。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Note however that specific controls frequently supply default values through their default theme styles that will disable the auto sizing behavior unless it is specifically re-enabled.</source>
          <target state="translated">但是请注意，特定的控件通常提供通过将禁用自动调整大小行为，除非专门重新启用了其默认主题样式的默认值。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The return value of this property is always the same as any value that was set to it.</source>
          <target state="translated">此属性的返回值始终是任何已设置为它的值相同。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>In contrast, the value of the &lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt; may vary.</source>
          <target state="translated">相反，值&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;可能会有所不同。&lt;/xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>This can happen either statically because the layout rejected the suggested size for some reason, or momentarily.</source>
          <target state="translated">这种情况可能是静态因为布局出于某种原因，被拒绝的建议的大小也可能是暂时。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The layout system itself works asynchronously relative to the property system's set of Height and may not have processed that particular sizing property change yet.</source>
          <target state="translated">布局系统本身相对于属性系统的组的高度以异步方式工作，可能不处理该特定的大小调整属性的更改。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The value restrictions on the &lt;xref:System.Double&gt; value are enforced by a &lt;xref:System.Windows.ValidateValueCallback&gt; mechanism.</source>
          <target state="translated">对的值限制&lt;xref:System.Double&gt;由强制执行值&lt;xref:System.Windows.ValidateValueCallback&gt;机制。&lt;/xref:System.Windows.ValidateValueCallback&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">如果你尝试设置一个无效值，则会引发一个运行时异常。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>In addition to the validation check, there is a nondeterministic upper value bound for Height that is enforced by the layout system (this is a very large number, larger than &lt;xref:System.Single.MaxValue?displayProperty=fullName&gt; but smaller than &lt;xref:System.Double.MaxValue?displayProperty=fullName&gt;).</source>
          <target state="translated">除了验证检查，还有由布局系统强制执行的高度发往非确定性上限值 (这是非常大的数，大于&lt;xref:System.Single.MaxValue?displayProperty=fullName&gt;但小于&lt;xref:System.Double.MaxValue?displayProperty=fullName&gt;)。&lt;/xref:System.Double.MaxValue?displayProperty=fullName&gt; &lt;/xref:System.Single.MaxValue?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>If you exceed this bound, the element will not render, and no exception is thrown.</source>
          <target state="translated">如果超过此限制，该元素将不会呈现，并不会引发异常。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Do not set Height to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.</source>
          <target state="translated">未设置为一个值，将显著大于任何可能的可视显示的最大大小的高度，或可能超出此非确定性的上限。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Height"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Height="double"/&gt;   - or -   &lt;object Height="qualifiedDouble"/&gt;   - or -   &lt;object Height="Auto"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Height"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Height"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object Height="double"/&gt;   - or -   &lt;object Height="qualifiedDouble"/&gt;   - or -   &lt;object Height="Auto"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Height"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字符串表示形式&lt;xref:System.Double&gt;值等于或大于 0.0。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>See Remarks for upper bound information.</source>
          <target state="translated">以了解上限信息，请参阅备注。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>This value is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">此值解释为<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字符串不需要显式包括位小数。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">例如，值的<ph id="ph1">`1`</ph>是可以接受的。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>该值，上文所述跟以下单位声明字符串之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px       <bpt id="p1">**</bpt>Auto<ept id="p1">**</ept>    Enables autosizing behavior.</source>
          <target state="translated"><ph id="ph1">`px`</ph>（默认值） 是<ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph><ph id="ph3">`in`</ph>为英寸; 1 英寸 = = 96px<ph id="ph4">`cm`</ph>是厘米; 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>是点; 1pt==(96/72) px<bpt id="p1">**</bpt>自动<ept id="p1">**</ept>启用自动调整大小行为。       </target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">请参阅备注。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Height"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.HeightProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Height"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.HeightProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.HeightProperty&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The height of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">元素的高度，在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">默认值是<ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>This value must be equal to or greater than 0.0.</source>
          <target state="translated">此值必须等于或大于 0.0。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>See Remarks for upper bound information.</source>
          <target state="translated">以了解上限信息，请参阅备注。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Height*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.Height*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.Height*&gt;</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Gets or sets the horizontal alignment characteristics applied to this element when it is composed within a parent element, such as a panel or items control.</source>
          <target state="translated">获取或设置应用到此元素时它由在父元素，如面板或项控件的水平对齐特征。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; and &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; properties are explicitly set on an element, these measurements take higher precedent during layout and will cancel the typical effects of setting HorizontalAlignment to &lt;xref:System.Windows.HorizontalAlignment&gt;.</source>
          <target state="translated">在&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;和&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;上一个元素显式设置属性，这些度量值较高的优先级，在布局过程，并且将取消设置到&lt;xref:System.Windows.HorizontalAlignment&gt;。&lt;/xref:System.Windows.HorizontalAlignment&gt; HorizontalAlignment 的典型的效果&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>HorizontalAlignment is the <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> property accessor for what is in reality a dependency property.</source>
          <target state="translated">HorizontalAlignment 是<ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph>它实际上是依赖项属性的属性访问器。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>This particular dependency property quite frequently has its apparent "default" value set differently in subclassed elements, particularly controls.</source>
          <target state="translated">此特定的依赖项属性非常普遍地具有子类化元素，尤其是控件中以不同方式设置其原本"默认"值。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>This generally occurs in one of two ways: the dependency property is re-registered to a particular subclass, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently.</source>
          <target state="translated">这通常发生在两种方式之一︰ 特定子类化，但具有不同的元数据，用于设置其默认值; 重新注册依赖项属性或者应用了默认样式以不同方式设置的依赖项属性值。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>For example, the apparent "default" of HorizontalAlignment for a &lt;xref:System.Windows.Controls.Label&gt; control will be &lt;xref:System.Windows.HorizontalAlignment&gt;, even though &lt;xref:System.Windows.Controls.Label&gt; inherits HorizontalAlignment direct from &lt;xref:System.Windows.FrameworkElement&gt;.</source>
          <target state="translated">例如，明显"默认值"为 HorizontalAlignment&lt;xref:System.Windows.Controls.Label&gt;控件将是&lt;xref:System.Windows.HorizontalAlignment&gt;，即使&lt;xref:System.Windows.Controls.Label&gt;继承 HorizontalAlignment 直接从&lt;xref:System.Windows.FrameworkElement&gt;.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Controls.Label&gt; &lt;/xref:System.Windows.HorizontalAlignment&gt; &lt;/xref:System.Windows.Controls.Label&gt;</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>This is because that value was reset within the default style of &lt;xref:System.Windows.Controls.Label&gt;, within the style's control template.</source>
          <target state="translated">这是因为该值已重置中的默认样式&lt;xref:System.Windows.Controls.Label&gt;中的样式的控件模板。&lt;/xref:System.Windows.Controls.Label&gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.Canvas&gt; does not use HorizontalAlignment when composing layout, because &lt;xref:System.Windows.Controls.Canvas&gt; is based on absolute positioning.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Canvas&gt;时不使用 HorizontalAlignment 构成布局，因为&lt;xref:System.Windows.Controls.Canvas&gt;根据绝对定位。&lt;/xref:System.Windows.Controls.Canvas&gt;&lt;/xref:System.Windows.Controls.Canvas&gt;</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>When inherited by &lt;xref:System.Windows.Controls.Label&gt; or derived classes, &lt;xref:System.Windows.Controls.Label&gt; redefines the default value of this dependency property to be &lt;xref:System.Windows.HorizontalAlignment&gt;.</source>
          <target state="translated">当由&lt;xref:System.Windows.Controls.Label&gt;或&lt;xref:System.Windows.Controls.Label&gt;重新定义为&lt;xref:System.Windows.HorizontalAlignment&gt;.&lt;/xref:System.Windows.HorizontalAlignment&gt;此依赖项属性的默认值&lt;/xref:System.Windows.Controls.Label&gt;的派生的类&lt;/xref:System.Windows.Controls.Label&gt;继承</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_HorizontalAlignment"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.HorizontalAlignmentProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_HorizontalAlignment"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.HorizontalAlignmentProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt; &lt;/xref:System.Windows.FrameworkElement.HorizontalAlignmentProperty&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>A horizontal alignment setting, as a value of the enumeration.</source>
          <target state="translated">水平对齐设置，作为枚举的值。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.HorizontalAlignment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Windows.HorizontalAlignment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.HorizontalAlignment*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.HorizontalAlignment*&gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Gets or sets the scope limits for property value inheritance, resource key lookup, and RelativeSource FindAncestor lookup.</source>
          <target state="translated">获取或设置属性值继承、 资源键查找和 RelativeSource FindAncestor 查找的作用域限制。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Certain boundaries in the element tree set InheritanceBehavior to deliberately limit the scope of inheritance behavior, to a force resource lookup to check the application resources, or to prevent a RelativeSource FindAncestor lookup from querying the current element or any further.</source>
          <target state="translated">元素树中的某些边界设置 InheritanceBehavior 有意限制继承行为，检查应用程序资源，或防止 RelativeSource FindAncestor 查找查询的当前元素或任何进一步的强制资源查找到的作用域。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>RelativeSource FindAncestor lookup occurs when a binding uses a &lt;xref:System.Windows.Data.RelativeSource&gt; that has its &lt;xref:System.Windows.Data.RelativeSource.Mode%2A&gt; property set to the &lt;xref:System.Windows.Data.RelativeSourceMode?displayProperty=fullName&gt; value.</source>
          <target state="translated">使用的绑定时发生 RelativeSource FindAncestor 查找&lt;xref:System.Windows.Data.RelativeSource&gt;具有其&lt;xref:System.Windows.Data.RelativeSource.Mode%2A&gt;属性设置为&lt;xref:System.Windows.Data.RelativeSourceMode?displayProperty=fullName&gt;值。&lt;/xref:System.Windows.Data.RelativeSourceMode?displayProperty=fullName&gt; &lt;/xref:System.Windows.Data.RelativeSource.Mode%2A&gt; &lt;/xref:System.Windows.Data.RelativeSource&gt;</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>If you want your derived class to set this property, you should do so within the static constructor or in other initialization routines.</source>
          <target state="translated">如果你想将此属性设置在派生的类，则应这样在静态构造函数或其他初始化例程。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>A value of the enumeration.</source>
          <target state="translated">枚举的值。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.InheritanceBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Windows.InheritanceBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Occurs when this <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized.</source>
          <target state="translated">发生时这<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>初始化。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>This event coincides with cases where the value of the &lt;xref:System.Windows.FrameworkElement.IsInitialized*&gt; property changes from <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (or undefined) to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">此事件与用例与位于同一位置的值&lt;xref:System.Windows.FrameworkElement.IsInitialized*&gt;属性更改从<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> （或未定义） 到<bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.IsInitialized*&gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>This event will be raised whenever the &lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt; or &lt;xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A&gt; methods are called.</source>
          <target state="translated">此事件将引发每当&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;或&lt;xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A&gt;调用方法。&lt;/xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A&gt; &lt;/xref:System.Windows.FrameworkElement.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Calls to either method could have come from application code, or through the <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> processor behavior when a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> page is processed.</source>
          <target state="translated">对任何一种方法的调用可能会从应用程序代码或通过具有出现<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>处理器行为时<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>页进行处理。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Whether you choose to handle &lt;xref:System.Windows.FrameworkElement.Loaded&gt; or Initialized depends on your requirements.</source>
          <target state="translated">您选择是否处理&lt;xref:System.Windows.FrameworkElement.Loaded&gt;或初始化取决于你的要求。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>If you do not need to read element properties, intend to reset properties, and do not need any layout information, Initialized might be the better event to act upon.</source>
          <target state="translated">如果你不需要读取元素属性，想要重置属性，并且不需要任何布局信息，初始化可能是更好的事件执行操作。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, &lt;xref:System.Windows.FrameworkElement.Loaded&gt; might be the better event to act upon.</source>
          <target state="translated">如果您需要所有属性的元素可用，并且你将设置重置布局中，有可能的属性&lt;xref:System.Windows.FrameworkElement.Loaded&gt;可能是更好的事件执行操作。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required.</source>
          <target state="translated">如果您的处理程序重置由布局系统，以表示新布局处理过程需要解释的任何属性，则请注意的重新进入。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>(You might need to check the &lt;xref:System.Windows.FrameworkPropertyMetadata&gt; values on the property if you are unsure of which properties can require a new layout pass if they are changed.)       For more information about the sequence of object events for a &lt;xref:System.Windows.FrameworkElement&gt;, and also for several related application and element classes, see <bpt id="p1">[</bpt>Object Lifetime Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">(你可能需要检查&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;上的属性，如果你不确定哪些属性可能需要新的布局的值传递更改时。)&lt;/xref:System.Windows.FrameworkPropertyMetadata&gt;     有关序列的对象事件的详细信息&lt;xref:System.Windows.FrameworkElement&gt;，另一些相关应用程序和元素类，请参阅和<bpt id="p1">[</bpt>对象生存期事件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Gets or sets the context for input used by this <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置由此的输入的上下文<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>This dependency property inherits property values.</source>
          <target state="translated">此依赖属性继承属性值。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>If there are child elements without other values for InputScope established through local values or styles, then the property system will set the value to be the InputScope value of the nearest ancestor element with this value assigned.</source>
          <target state="translated">如果没有无需通过本地值或样式建立 InputScope 其他值的子元素，则属性系统将设置此值为最接近的上级元素的 InputScope 值与分配此值。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Although a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> syntax usage is listed and is syntactically allowed, setting this property in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> is not common.</source>
          <target state="translated">尽管<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>语法使用情况列出和语法允许，则将此属性设置<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>并不常见。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_InputScope"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.InputScopeProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_InputScope"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.InputScopeProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement.InputScopeProperty&gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The input scope, which modifies how input from alternative input methods is interpreted.</source>
          <target state="translated">输入的范围，修改其他输入法输入的解释方式。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (which results in a default handling of commands).</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> （这将导致命令的默认处理）。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.InputScope*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.InputScope*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.InputScope*&gt;</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this element has been initialized, either during processing by a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> processor, or by explicitly having its &lt;xref:System.Windows.FrameworkElement.EndInit*&gt; method called.</source>
          <target state="translated">获取一个值，该值指示是否已初始化此元素，在处理通过<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>处理器，或者通过显式其&lt;xref:System.Windows.FrameworkElement.EndInit*&gt;调用方法。&lt;/xref:System.Windows.FrameworkElement.EndInit*&gt;</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>This property may also be <ph id="ph1">`true`</ph> if this element has been moved within the logical tree such that it has a new parent element, and therefore becomes reloaded again.</source>
          <target state="translated">此属性也可能是<ph id="ph1">`true`</ph>如果此元素已在逻辑树中以便它有一个新的父元素，并因此重新。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>This property is useful if you also are using &lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt; and &lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;.</source>
          <target state="translated">此属性很有用，如果你还使用&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;和&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.EndInit%2A&gt; &lt;/xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Elements in the logical tree that is loaded by a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> processor are assured to be initialized.</source>
          <target state="translated">加载的逻辑树中的元素<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>保证处理器初始化。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Elements not in the logical tree are initialized when &lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt; is called.</source>
          <target state="translated">不在逻辑树中的元素将初始化时&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;称为。&lt;/xref:System.Windows.FrameworkElement.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>In absence of any specific handling of &lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt; and &lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;, this will happen as soon as the constructor returns the initialized result.</source>
          <target state="translated">在没有任何特定的处理的情况下&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;和&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;，这将会构造函数将返回初始化的结果时，就会立即发生。&lt;/xref:System.Windows.FrameworkElement.EndInit%2A&gt; &lt;/xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is initialized per the aforementioned <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> processing or method calls; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果元素初始化按照前面提到<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>处理或者方法调用; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this element has been loaded for presentation.</source>
          <target state="translated">获取一个值，该值指示是否已加载此元素，以便演示文稿。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>From a newly constructed &lt;xref:System.Windows.FrameworkElement&gt;, this property starts off <ph id="ph1">`false`</ph>, and remains <ph id="ph2">`true`</ph> after it is set to <ph id="ph3">`true`</ph>, even if the element is subsequently removed from a connected logical tree by code.</source>
          <target state="translated">从新构造&lt;xref:System.Windows.FrameworkElement&gt;，此属性开始<ph id="ph1">`false`</ph>，并保留<ph id="ph2">`true`</ph>设置为之后<ph id="ph3">`true`</ph>，即使随后移除元素从连接的逻辑树的代码。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> state is set by the general presentation logic when elements are loaded into the presentation engine.</source>
          <target state="translated"><ph id="ph1">`true`</ph>元素加载到演示文稿引擎时，将按常规表示逻辑设置状态。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Typically, loaded elements are rendered, but not all &lt;xref:System.Windows.FrameworkElement&gt; derived classes have a presentation, and other properties such as &lt;xref:System.Windows.UIElement.Visibility%2A&gt; can influence presentation.</source>
          <target state="translated">通常，已加载的元素都是呈现出来，但并非所有&lt;xref:System.Windows.FrameworkElement&gt;派生的类具有一个演示文稿和其他属性，如&lt;xref:System.Windows.UIElement.Visibility%2A&gt;可能影响表示形式。&lt;/xref:System.Windows.UIElement.Visibility%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current element is attached to an element tree; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the element has never been attached to a loaded element tree.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果当前元素附加到元素树;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果该元素已永远不会附加到加载的元素树。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Gets or sets localization/globalization language information that applies to an element.</source>
          <target state="translated">获取或设置应用于某个元素的本地化/全球化语言信息。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>The string formats follow the RFC 3066 standard.</source>
          <target state="translated">字符串格式遵循 RFC 3066 标准。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>For example, U.S. English is "en-US".</source>
          <target state="translated">例如，美国英语是"EN-US"。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>For more information on the values and format, see &lt;xref:System.Windows.Markup.XmlLanguage&gt;.</source>
          <target state="translated">值和格式的详细信息，请参阅&lt;xref:System.Windows.Markup.XmlLanguage&gt;。&lt;/xref:System.Windows.Markup.XmlLanguage&gt;</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>This dependency property inherits property values.</source>
          <target state="translated">此依赖属性继承属性值。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>If there are child elements without other values for Language established through local values or styles, the property system will set the value to be the Language value of the nearest ancestor element with this value assigned.</source>
          <target state="translated">如果没有无需针对通过本地值或样式建立其他值的子元素，属性系统将设置此值为最接近的上级元素的语言值与分配此值。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> defines the general meaning of the <ph id="ph2">`xml:lang`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>定义的常规含义<ph id="ph2">`xml:lang`</ph>属性。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Language essentially exposes the meaning of this attribute as a dependency property.</source>
          <target state="translated">语言实质上是公开的此属性为依赖项属性的含义。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Language can be adjusted programmatically, and can participate in property system value inheritance in a way that parallels how the <ph id="ph1">`xml:lang`</ph> attribute can inherit to child element scope in <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated">语言可以以编程方式调整，并且可以参与的方式，等同于属性系统值继承了<ph id="ph1">`xml:lang`</ph>特性可以继承到子元素范围中<ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>If you set Language, that value becomes the <ph id="ph1">`xml:lang`</ph> and overwrites any previous value.</source>
          <target state="translated">如果你设置的语言，则该值将成为<ph id="ph1">`xml:lang`</ph>并覆盖任何以前的值。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>xml:lang Handling in XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>xml: lang 在 XAML 中处理<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_CultureInfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.LanguageProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_CultureInfo"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.LanguageProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt; &lt;/xref:System.Windows.FrameworkElement.LanguageProperty&gt;</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>The language information for this element.</source>
          <target state="translated">此元素的语言信息。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>The default value is an <bpt id="p1">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with its &lt;xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*&gt; value set to the string "en-US".</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Windows.Markup.XmlLanguage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>与其&lt;xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*&gt;值设置为字符串"EN-US"。&lt;/xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*&gt;</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Language*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.Language*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.Language*&gt;</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Gets or sets a graphics transformation that should apply to this element when  layout is performed.</source>
          <target state="translated">获取或设置一个图形转换，它执行布局时应应用于此元素。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;, LayoutTransform will affect results of layout.</source>
          <target state="translated">与此相反&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;，LayoutTransform 将影响布局的结果。&lt;/xref:System.Windows.UIElement.RenderTransform%2A&gt;</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Setting a transform provides powerful capabilities of scaling and rotating.</source>
          <target state="translated">设置一个转换，可提供强大的功能的缩放和旋转。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>However, LayoutTransform ignores &lt;xref:System.Windows.Media.TranslateTransform&gt; operations.</source>
          <target state="translated">但是，将忽略 LayoutTransform&lt;xref:System.Windows.Media.TranslateTransform&gt;操作。&lt;/xref:System.Windows.Media.TranslateTransform&gt;</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>This is because the layout system behavior for child elements of a &lt;xref:System.Windows.FrameworkElement&gt; auto-corrects any offsets to the position of a scaled or rotated element into the layout and coordinate system of the parent element.</source>
          <target state="translated">这是因为子元素的布局系统行为&lt;xref:System.Windows.FrameworkElement&gt;自动更正任何偏移量到布局的缩放或旋转元素的位置和父元素的坐标系统。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>LayoutTransform can lead to poor application performance if you invoke it in a scenario that does not require a full pass by the layout system.</source>
          <target state="translated">如果方案不需要该布局系统的全面处理过程中调用它，LayoutTransform 可能导致应用程序性能差。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>When you apply a LayoutTransform to the &lt;xref:System.Windows.Controls.Panel.Children%2A&gt; collection of the &lt;xref:System.Windows.Controls.Panel&gt;, it triggers a new pass by the layout system and forces all on-screen objects to be remeasured and rearranged.</source>
          <target state="translated">当您将应用到 LayoutTransform&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;集合&lt;xref:System.Windows.Controls.Panel&gt;，它将触发一个新的传递布局系统和强制屏幕上的所有对象重新度量和重新排列。&lt;/xref:System.Windows.Controls.Panel&gt; &lt;/xref:System.Windows.Controls.Panel.Children%2A&gt;</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>If you are updating the complete application <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>, this functionality might be exactly what you need.</source>
          <target state="translated">如果你要更新完整的应用程序<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>，此功能可能有且仅你的需要。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>However, if you do not need a full layout pass, use the &lt;xref:System.Windows.UIElement.RenderTransform%2A&gt; property, which does not invoke the layout system, and therefore, is typically a better choice for this scenario.</source>
          <target state="translated">但是，如果不需要完整的布局处理过程，使用&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;属性，而不会调用该布局系统，因此，通常是这种情况下为更好的选择。&lt;/xref:System.Windows.UIElement.RenderTransform%2A&gt;</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Example scenarios where LayoutTransform would be useful include: rotating elements such as menu components from horizontal to vertical or vice versa, scaling elements (zooming in) on focus, providing editing behavior, etc.      <bpt id="p1">&lt;a name="dependencyPropertyInfo_LayoutTransform"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.LayoutTransformProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated">LayoutTransform 会有用的示例方案包括︰ 旋转元素菜单组件从水平方向为垂直或者反之亦然，如缩放 （放大） 的元素上焦点时，提供编辑行为，等等。     <bpt id="p1">&lt;a name="dependencyPropertyInfo_LayoutTransform"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.LayoutTransformProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.LayoutTransformProperty&gt;</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The transform this element should use.</source>
          <target state="translated">应使用此元素的转换。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.Windows.Media.Transform.Identity*&gt;.</source>
          <target state="translated">默认值为&lt;xref:System.Windows.Media.Transform.Identity*&gt;。&lt;/xref:System.Windows.Media.Transform.Identity*&gt;</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.LayoutTransform*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.LayoutTransform*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.LayoutTransform*&gt;</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Occurs when the element is laid out, rendered, and ready for interaction.</source>
          <target state="translated">元素的布局，呈现，且可用于交互时发生。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Loaded is usually the last event raised in an element initialization sequence.</source>
          <target state="translated">加载通常的最后一个事件中引发元素初始化序列。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>It will always be raised after &lt;xref:System.Windows.FrameworkElement.Initialized&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;.&lt;/xref:System.Windows.FrameworkElement.Initialized&gt;后将始终引发</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Whether you choose to handle Loaded or &lt;xref:System.Windows.FrameworkElement.Initialized&gt; depends on your requirements.</source>
          <target state="translated">您选择是否处理 Loaded 或&lt;xref:System.Windows.FrameworkElement.Initialized&gt;取决于你的要求。&lt;/xref:System.Windows.FrameworkElement.Initialized&gt;</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>If you do not need to read element properties, intend to reset properties, and do not need any layout information, &lt;xref:System.Windows.FrameworkElement.Initialized&gt; might be the better event to act upon.</source>
          <target state="translated">如果不需要读取元素属性，想要重置属性，并且不需要任何布局的信息，&lt;xref:System.Windows.FrameworkElement.Initialized&gt;可能是更好的事件执行操作。&lt;/xref:System.Windows.FrameworkElement.Initialized&gt;</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, Loaded might be the better event to act upon.</source>
          <target state="translated">如果你需要的所有属性的元素可用，并且你要设置的属性重置布局有可能，加载可能是更好的事件执行操作。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required.</source>
          <target state="translated">如果您的处理程序重置由布局系统，以表示新布局处理过程需要解释的任何属性，则请注意的重新进入。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>(You might need to check the &lt;xref:System.Windows.FrameworkPropertyMetadata&gt; values on the property if you are unsure of which properties can require a new layout pass if they are changed.)       For more information about the sequence of object events for a &lt;xref:System.Windows.FrameworkElement&gt;, and also for several related application and element classes, see <bpt id="p1">[</bpt>Object Lifetime Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">(你可能需要检查&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;上的属性，如果你不确定哪些属性可能需要新的布局的值传递更改时。)&lt;/xref:System.Windows.FrameworkPropertyMetadata&gt;     有关序列的对象事件的详细信息&lt;xref:System.Windows.FrameworkElement&gt;，另一些相关应用程序和元素类，请参阅和<bpt id="p1">[</bpt>对象生存期事件<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</source>
          <target state="translated">直接路由的事件不遵循路由，而仅处理引发它们时对同一元素中。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an &lt;xref:System.Windows.EventTrigger&gt; in a style.</source>
          <target state="translated">直接路由的事件是否支持其他路由的事件行为︰ 它们支持的可访问的处理程序集合，并可用作&lt;xref:System.Windows.EventTrigger&gt;样式。&lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Loaded and &lt;xref:System.Windows.FrameworkElement.Unloaded&gt; might both be raised on controls as a result of user-initiated system theme changes.</source>
          <target state="translated">加载和&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;可能同时会引发在用户启动的系统主题更改控件上。&lt;/xref:System.Windows.FrameworkElement.Unloaded&gt;</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload.</source>
          <target state="translated">主题更改会导致控件模板和包含的可视化树，这反过来会导致整个控件，若要卸载并重新加载的失效。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Therefore Loaded cannot be assumed to occur only when a page is first loaded through navigation to the page.</source>
          <target state="translated">因此不能加载假定发生仅当页面首次加载通过导航到页。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_Loaded"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.LoadedEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_Loaded"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.LoadedEvent&gt;|  |路由策略 |直接 |  |委托 |&lt;xref:System.Windows.RoutedEventHandler&gt;|&lt;/xref:System.Windows.RoutedEventHandler&gt;&lt;/xref:System.Windows.FrameworkElement.LoadedEvent&gt;</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Loaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">标识<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Loaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">路由的事件标识符是在注册路由的事件时创建的。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用工具方法。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">可以使用这些标识符添加类处理程序。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">有关注册路由的事件的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">有关使用路由的事件标识符添加类处理程序的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Gets an enumerator for logical child elements of this element.</source>
          <target state="translated">获取此元素的逻辑子元素的枚举数。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>LogicalChildren allows you to iterate over child elements.</source>
          <target state="translated">LogicalChildren 可以循环访问子元素。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>This is useful for elements that may not have a defined, dedicated collection but still contain more than one child element, particularly &lt;xref:System.Windows.FrameworkContentElement&gt; child elements.</source>
          <target state="translated">这可用于元素可能不具有已定义的专用集合，但仍包含多个子元素，特别&lt;xref:System.Windows.FrameworkContentElement&gt;子元素。&lt;/xref:System.Windows.FrameworkContentElement&gt;</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>For more information on how to use LogicalChildren and &lt;xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关如何使用 LogicalChildren 的详细信息和&lt;xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;，请参阅<bpt id="p1">[</bpt>WPF 中的树<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>An enumerator for logical child elements of this element.</source>
          <target state="translated">此元素的逻辑子元素枚举器。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Gets or sets the outer margin of an element.</source>
          <target state="translated">获取或设置元素的外边距。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The margin is the space between this element and other elements that will be adjacent when layout creates the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">边距是此元素与布局创建时，将相邻其他元素之间的空间<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Shared elements might be peer elements (such as other elements in the collection of a common parent control), or might also be this element's parent.</source>
          <target state="translated">共享的元素可能是对等元素 （如公共的父控件的集合中的其他元素），或者也可能是此元素的父级。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Margin is set as a &lt;xref:System.Windows.Thickness&gt; structure rather than as a number so that the margin can be set asymmetrically.</source>
          <target state="translated">边距设置为&lt;xref:System.Windows.Thickness&gt;结构而不是数字的形式，以便非对称设置边距。&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Thickness&gt; structure itself supports string type conversion so that you can specify an asymmetric Margin in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> attribute syntax also.</source>
          <target state="translated">&lt;xref:System.Windows.Thickness&gt;结构本身支持字符串类型转换，以便你可以指定用非对称宽限期<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>还属性语法。&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>A non-zero margin applies space outside the element layout's &lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt; and &lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;.</source>
          <target state="translated">非零边距适用元素布局&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;和&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;&lt;/xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;以外的空间</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Margins are additive for sibling elements in a layout; for example, two adjacent elements both with a margin of 30 set on the adjoining edge would have 60 units of space between them.</source>
          <target state="translated">边距的同级元素在布局中; 累加性例如，它们都具有边距为 30 相连的边缘设置的两个相邻元素将具有 60 之间的距离单位。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Elements that have margins set will not typically constrain the size of the specified Margin if the allotted rectangle space is not large enough for the margin plus the element content area.</source>
          <target state="translated">如果没有足够大小以容纳边距加上元素的内容区域的矩形分配的空间，设置边距的元素将不通常约束指定边距的大小。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>The element content area will be constrained instead when layout is calculated.</source>
          <target state="translated">计算布局时，将改为约束元素内容区域。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>The only case where margins would be constrained also is if the content is already constrained all the way to zero.</source>
          <target state="translated">唯一的情形进行约束边距也是如果内容已被约束到零。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Margin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Margin="left,top,right,bottom"/&gt;   - or -   &lt;object Margin="left,top"/&gt;   - or -   &lt;object Margin="thicknessReference"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlPropertyElementUsage_Margin"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph2">```   &lt;object&gt;     &lt;object.Margin&gt;       &lt;Thickness Left="left" Top="top" Right="right" Bottom="bottom"/&gt;     &lt;/object.Margin&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_Margin"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>left, top, right, bottom<ept id="p4">*</ept>    Number values between 0 and &lt;xref:System.Double.PositiveInfinity&gt; that specify the four possible dimension properties of a &lt;xref:System.Windows.Thickness&gt; structure.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Margin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object Margin="left,top,right,bottom"/&gt;   - or -   &lt;object Margin="left,top"/&gt;   - or -   &lt;object Margin="thicknessReference"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlPropertyElementUsage_Margin"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 属性元素用法<ph id="ph2">```   &lt;object&gt;     &lt;object.Margin&gt;       &lt;Thickness Left="left" Top="top" Right="right" Bottom="bottom"/&gt;     &lt;/object.Margin&gt;   &lt;/object&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_Margin"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>保留，排名靠前的、 右、 下<ept id="p4">*</ept>0 之间的数字值和&lt;xref:System.Double.PositiveInfinity&gt;指定四个可能的维度属性&lt;xref:System.Windows.Thickness&gt;结构。&lt;/xref:System.Windows.Thickness&gt; &lt;/xref:System.Double.PositiveInfinity&gt;            </target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>The attribute usage will also accept abbreviated values that apply in the order provided, symmetrically and logically.</source>
          <target state="translated">属性用法还将接受缩写应用中提供，对称而符合逻辑的顺序的值。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>For instance, <ph id="ph1">`Margin="20"`</ph> will be interpreted to mean a &lt;xref:System.Windows.Thickness&gt; with all properties set to 20.</source>
          <target state="translated">例如，<ph id="ph1">`Margin="20"`</ph>将解释为表示&lt;xref:System.Windows.Thickness&gt;其所有属性都设置为 20。&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Margin="20,50"`</ph> will be interpreted to mean a &lt;xref:System.Windows.Thickness&gt; with &lt;xref:System.Windows.Thickness.Left%2A&gt; and &lt;xref:System.Windows.Thickness.Right%2A&gt; set to 20, and &lt;xref:System.Windows.Thickness.Top%2A&gt; and &lt;xref:System.Windows.Thickness.Bottom%2A&gt; set to 50.</source>
          <target state="translated"><ph id="ph1">`Margin="20,50"`</ph>将解释为表示&lt;xref:System.Windows.Thickness&gt;与&lt;xref:System.Windows.Thickness.Left%2A&gt;和&lt;xref:System.Windows.Thickness.Right%2A&gt;设置为 20，和&lt;xref:System.Windows.Thickness.Top%2A&gt;和&lt;xref:System.Windows.Thickness.Bottom%2A&gt;设置为 50。&lt;/xref:System.Windows.Thickness.Bottom%2A&gt; &lt;/xref:System.Windows.Thickness.Top%2A&gt; &lt;/xref:System.Windows.Thickness.Right%2A&gt; &lt;/xref:System.Windows.Thickness.Left%2A&gt; &lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The default unit for a &lt;xref:System.Windows.Thickness&gt; measure is <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>.</source>
          <target state="translated">默认单位&lt;xref:System.Windows.Thickness&gt;度量值是<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>。&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>You can also specify other units by appending the unit type strings <ph id="ph1">`cm`</ph>, <ph id="ph2">`in`</ph>, or <ph id="ph3">`pt`</ph> to any measure.</source>
          <target state="translated">此外可以指定其他单位，通过追加单位类型字符串<ph id="ph1">`cm`</ph>， <ph id="ph2">`in`</ph>，或<ph id="ph3">`pt`</ph>到任何度量值。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Number values provided as <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> attributes need not specify decimal points (0 is acceptable, does not have to be provided as 0.0).</source>
          <target state="translated">数字值作为提供<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>属性不需要指定位小数 （0 是可以接受的不需要提供作为 0.0)。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> usage, see &lt;xref:System.Windows.Thickness&gt;.</source>
          <target state="translated">有关详细信息<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>使用情况，请参阅&lt;xref:System.Windows.Thickness&gt;。&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>thicknessReference<ept id="p1">*</ept>    An object reference to an existing &lt;xref:System.Windows.Thickness&gt;.</source>
          <target state="translated"><bpt id="p1">*</bpt>thicknessReference<ept id="p1">*</ept>对现有&lt;xref:System.Windows.Thickness&gt;.&lt;/xref:System.Windows.Thickness&gt;的对象引用</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>This might be a <ph id="ph1">`}`</ph>, a , or <ph id="ph2">`}`</ph> reference.</source>
          <target state="translated">这可能是<ph id="ph1">`}`</ph>、 a，或<ph id="ph2">`}`</ph>引用。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>For more information on <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> usage, see &lt;xref:System.Windows.Thickness&gt;.</source>
          <target state="translated">有关详细信息<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>使用情况，请参阅&lt;xref:System.Windows.Thickness&gt;。&lt;/xref:System.Windows.Thickness&gt;</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Margin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.MarginProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Margin"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.MarginProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MarginProperty&gt;</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Provides margin values for the element.</source>
          <target state="translated">提供的元素的边距值。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The default value is a <bpt id="p1">&lt;xref href="System.Windows.Thickness"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with all properties equal to 0 (zero).</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Windows.Thickness"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>其所有属性都等于 0 （零）。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Margin*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.Margin*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.Margin*&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum height constraint of the element.</source>
          <target state="translated">获取或设置元素的最大高度约束。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>This is one of three properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify height information.</source>
          <target state="translated">这是一个三个属性上&lt;xref:System.Windows.FrameworkElement&gt;用于指定高度信息。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt; and &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;.</source>
          <target state="translated">另外两个是&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;和&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual height determination is first &lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt; must be honored, then MaxHeight, and finally if each of these are within bounds, &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;.</source>
          <target state="translated">如果这些值之间没有冲突，确定高度的实际的应用程序的顺序是第一个&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;必须采用，然后 MaxHeight，最后如果每个都在限制之内， &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>The value restrictions on the &lt;xref:System.Double&gt; value are enforced by a &lt;xref:System.Windows.ValidateValueCallback&gt; mechanism.</source>
          <target state="translated">对的值限制&lt;xref:System.Double&gt;由强制执行值&lt;xref:System.Windows.ValidateValueCallback&gt;机制。&lt;/xref:System.Windows.ValidateValueCallback&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>If you attempt to set an invalid value a run-time exception is thrown.</source>
          <target state="translated">如果你尝试设置一个无效值会引发一个运行时异常。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MaxHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object MaxHeight="double"/&gt;   - or –   &lt;object MaxHeight ="qualifiedDouble"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_MaxHeight"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MaxHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object MaxHeight="double"/&gt;   - or –   &lt;object MaxHeight ="qualifiedDouble"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_MaxHeight"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字符串表示形式&lt;xref:System.Double&gt;值等于或大于 0.0。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">它被解释为<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字符串不需要显式包括位小数。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">例如，值的<ph id="ph1">`1`</ph>是可以接受的。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>The same &lt;xref:System.Double&gt; range restrictions as mentioned in the Property Value section apply, except that you must use <bpt id="p1">[</bpt>x:Static Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> if you need to explicitly set the value to be &lt;xref:System.Double.PositiveInfinity&gt;.</source>
          <target state="translated">相同&lt;xref:System.Double&gt;应用范围限制在属性值部分所述，只不过你必须使用<bpt id="p1">[</bpt>X:static 标记扩展<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>你是否需要显式设置此值为&lt;xref:System.Double.PositiveInfinity&gt;.&lt;/xref:System.Double.PositiveInfinity&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>该值，上文所述跟以下单位声明字符串之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px      <bpt id="p1">&lt;a name="dependencyPropertyInfo_MaxHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.MaxHeightProperty&gt;|   |Metadata properties set to <ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><ph id="ph1">`px`</ph>（默认值） 是<ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph><ph id="ph3">`in`</ph>为英寸; 1 英寸 = = 96px<ph id="ph4">`cm`</ph>是厘米; 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>是点; 1pt==(96/72) px <bpt id="p1">&lt;a name="dependencyPropertyInfo_MaxHeight"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.MaxHeightProperty&gt;|  |元数据属性设置为<ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MaxHeightProperty&gt;       </target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>The maximum height of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">元素的最大高度，在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The default value is &lt;xref:System.Double&gt;.</source>
          <target state="translated">默认值为&lt;xref:System.Double&gt;。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">此值可以是等于或大于 0.0 的任何值。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Double&gt; is also valid.</source>
          <target state="translated">&lt;xref:System.Double&gt;也是有效的。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.MaxHeight*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.MaxHeight*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.MaxHeight*&gt;</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum width constraint of the element.</source>
          <target state="translated">获取或设置元素的最大宽度约束。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>This is one of three properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify width information.</source>
          <target state="translated">这是一个三个属性上&lt;xref:System.Windows.FrameworkElement&gt;指定宽度的信息。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt; and &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;.</source>
          <target state="translated">另外两个是&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;和&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual width determination is first &lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt; must be honored, then MaxWidth, and finally if each of these are within bounds, &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;.</source>
          <target state="translated">如果这些值之间没有冲突，应用程序实际宽度确定的顺序是︰ 首先&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;必须采用，然后 MaxWidth，最后如果每个都在限制之内， &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>The value restrictions on the &lt;xref:System.Double&gt; value are enforced by a &lt;xref:System.Windows.ValidateValueCallback&gt; mechanism.</source>
          <target state="translated">对的值限制&lt;xref:System.Double&gt;由强制执行值&lt;xref:System.Windows.ValidateValueCallback&gt;机制。&lt;/xref:System.Windows.ValidateValueCallback&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">如果你尝试设置一个无效值，则会引发一个运行时异常。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MaxWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object MaxWidth="double"/&gt;   - or -   &lt;object MaxWidth="qualifiedDouble"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_MaxWidth"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MaxWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object MaxWidth="double"/&gt;   - or -   &lt;object MaxWidth="qualifiedDouble"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_MaxWidth"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字符串表示形式&lt;xref:System.Double&gt;值等于或大于 0.0。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">它被解释为<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字符串不需要显式包括位小数。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">例如，值的<ph id="ph1">`1`</ph>是可以接受的。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>The same &lt;xref:System.Double&gt; range restrictions as mentioned in the Property Value section apply, except that you must use <bpt id="p1">[</bpt>x:Static Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> to set the value to be &lt;xref:System.Double.PositiveInfinity&gt;.</source>
          <target state="translated">相同&lt;xref:System.Double&gt;应用范围限制在属性值部分所述，只不过你必须使用<bpt id="p1">[</bpt>X:static 标记扩展<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>设置此值为&lt;xref:System.Double.PositiveInfinity&gt;.&lt;/xref:System.Double.PositiveInfinity&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>该值，上文所述跟以下单位声明字符串之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px      <bpt id="p1">&lt;a name="dependencyPropertyInfo_MaxWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.MaxWidthProperty&gt;|   |Metadata properties set to <ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><ph id="ph1">`px`</ph>（默认值） 是<ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph><ph id="ph3">`in`</ph>为英寸; 1 英寸 = = 96px<ph id="ph4">`cm`</ph>是厘米; 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>是点; 1pt==(96/72) px <bpt id="p1">&lt;a name="dependencyPropertyInfo_MaxWidth"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.MaxWidthProperty&gt;|  |元数据属性设置为<ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MaxWidthProperty&gt;       </target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>The maximum width of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">元素的最大宽度，请在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>The default value is &lt;xref:System.Double&gt;.</source>
          <target state="translated">默认值为&lt;xref:System.Double&gt;。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">此值可以是等于或大于 0.0 的任何值。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Double&gt; is also valid.</source>
          <target state="translated">&lt;xref:System.Double&gt;也是有效的。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.MaxWidth*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.MaxWidth*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.MaxWidth*&gt;</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>Implements basic measure-pass layout system behavior for <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">实现基本度量传递布局系统行为<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt; to connect the  WPF core-level and WPF framework-level layout measure implementations.</source>
          <target state="translated">此方法将替代&lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt;连接的 WPF 核心级别和 WPF 框架级别布局度量值实现。&lt;/xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.FrameworkElement&gt; implementation seals the method.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;实现会对该方法。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>To adjust the measure pass layout behavior of any element that builds on the WPF framework-level, override &lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt; instead.</source>
          <target state="translated">若要调整的 WPF 框架级别生成任何元素的度量传递布局行为，重写&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;相反。&lt;/xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>To adjust the measure pass layout behavior of an element that deliberately does not build on the WPF framework-level or use &lt;xref:System.Windows.FrameworkElement&gt;, override &lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">若要调整度量值，将传递布局行为，以防出现故意不会在 WPF 框架级别上生成或使用&lt;xref:System.Windows.FrameworkElement&gt;，请重写&lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.FrameworkElement&gt;的元素</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>The available size that the parent element can give to the child elements.</source>
          <target state="translated">父元素可以赋予子元素可用大小。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>The desired size of this element in layout.</source>
          <target state="translated">此元素在布局所需的大小。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>-derived class.</source>
          <target state="translated">当在派生类中重写，测量的大小以所需的子元素的布局，并确定的大小<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>-派生类。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Override MeasureOverride to implement custom layout sizing behavior for your element as it participates in the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> layout system.</source>
          <target state="translated">重写 MeasureOverride 实现您的元素的自定义布局大小调整行为参与<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>布局系统。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Your implementation should do the following:      1.</source>
          <target state="translated">您的实现应执行以下操作︰ 1。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Iterate your element's particular collection of children that are part of layout, call &lt;xref:System.Windows.UIElement.Measure%2A&gt; on each child element.</source>
          <target state="translated">循环的布局，调用的一部分的子级的元素的特定集合&lt;xref:System.Windows.UIElement.Measure%2A&gt;每个子元素上。&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>Immediately get &lt;xref:System.Windows.UIElement.DesiredSize%2A&gt; on the child (this is set as a property after &lt;xref:System.Windows.UIElement.Measure%2A&gt; is called).</source>
          <target state="translated">立即获取&lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;对子 (这将设置为一个属性后&lt;xref:System.Windows.UIElement.Measure%2A&gt;称为)。&lt;/xref:System.Windows.UIElement.Measure%2A&gt; &lt;/xref:System.Windows.UIElement.DesiredSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>Compute the net desired size of the parent based upon the measurement of the child elements.</source>
          <target state="translated">计算所需的基于测量到的子元素的父净大小。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>The return value of MeasureOverride should be the element's own desired size, which then becomes the measure input for the parent element of the current element.</source>
          <target state="translated">MeasureOverride 的返回值应为元素自身的所需大小，随后将成为当前元素的父元素的度量值输入。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>This same process continues through the layout system until the root element of the page is reached.</source>
          <target state="translated">这一过程继续通过该布局系统，直到达到页的根元素。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>During this process, child elements might return a larger &lt;xref:System.Windows.UIElement.DesiredSize%2A&gt; size than the initial <ph id="ph1">`availableSize`</ph> to indicate that the child element wants more space.</source>
          <target state="translated">在此过程中，子元素可能会返回较大&lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;大小大于初始<ph id="ph1">`availableSize`</ph>指示子元素想更多空间。&lt;/xref:System.Windows.UIElement.DesiredSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>This might be handled in your own implementation by introducing a scrollable region, by resizing the parent control, by establishing some manner of stacked order, or any number of solutions for measuring or arranging content.</source>
          <target state="translated">引入了可滚动区域，在调整父控件中，通过某种方式堆叠顺序或任意数量的解决方案来测量或排列内容，可能会在您自己的实现中处理此。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Elements should call &lt;xref:System.Windows.UIElement.Measure%2A&gt; on each child during this process, otherwise the child elements will not be correctly sized or arranged.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 元素应调用&lt;xref:System.Windows.UIElement.Measure%2A&gt;在每个在此过程中的子活动，否则为子元素不会正确调整大小或排列。&lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>The available size that this element can give to child elements.</source>
          <target state="translated">此元素可提供给子元素可用大小。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Infinity can be specified as a value to indicate that the element will size to whatever content is available.</source>
          <target state="translated">无穷大可以指定为一个值，指示元素将为内容的可用大小。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>The size that this element determines it needs during layout, based on its calculations of child element sizes.</source>
          <target state="translated">在布局，根据其的子元素大小的计算期间需要此元素确定它的大小。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>Gets or sets the minimum height constraint of the element.</source>
          <target state="translated">获取或设置元素的最小高度约束。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>This is one of three properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify height information.</source>
          <target state="translated">这是一个三个属性上&lt;xref:System.Windows.FrameworkElement&gt;用于指定高度信息。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; and &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;.</source>
          <target state="translated">另外两个是&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;和&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual height determination is first MinHeight must be honored, then &lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;, and finally if each of these are within bounds, &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;.</source>
          <target state="translated">如果冲突之间没有这些值，应用程序的顺序确定实际高度为第一个 MinHeight 必须进行确认，然后&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;，最后如果每个都在限制之内， &lt;xref:System.Windows.FrameworkElement.Height%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>The value restrictions on the &lt;xref:System.Double&gt; value are enforced by a &lt;xref:System.Windows.ValidateValueCallback&gt; mechanism.</source>
          <target state="translated">对的值限制&lt;xref:System.Double&gt;由强制执行值&lt;xref:System.Windows.ValidateValueCallback&gt;机制。&lt;/xref:System.Windows.ValidateValueCallback&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">如果你尝试设置一个无效值，则会引发一个运行时异常。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MinHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object MinHeight="double"/&gt;   - or -   &lt;object MinHeight="qualifiedDouble"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_MinHeight"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MinHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object MinHeight="double"/&gt;   - or -   &lt;object MinHeight="qualifiedDouble"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_MinHeight"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字符串表示形式&lt;xref:System.Double&gt;值等于或大于 0.0。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">它被解释为<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字符串不需要显式包括位小数。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">例如，值的<ph id="ph1">`1`</ph>是可以接受的。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>The same &lt;xref:System.Double&gt; range restrictions as mentioned in the Property Value section apply.</source>
          <target state="translated">相同&lt;xref:System.Double&gt;属性值部分中所述的范围限制也适用。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>该值，上文所述跟以下单位声明字符串之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px      <bpt id="p1">&lt;a name="dependencyPropertyInfo_MinHeight"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.MinHeightProperty&gt;|   |Metadata properties set to <ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><ph id="ph1">`px`</ph>（默认值） 是<ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph><ph id="ph3">`in`</ph>为英寸; 1 英寸 = = 96px<ph id="ph4">`cm`</ph>是厘米; 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>是点; 1pt==(96/72) px <bpt id="p1">&lt;a name="dependencyPropertyInfo_MinHeight"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.MinHeightProperty&gt;|  |元数据属性设置为<ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinHeightProperty&gt;       </target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>The minimum height of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">元素的最小高度，在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The default value is 0.0.</source>
          <target state="translated">默认值为 0.0。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">此值可以是等于或大于 0.0 的任何值。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>However, &lt;xref:System.Double&gt; is NOT valid, nor is <ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">但是，&lt;xref:System.Double&gt;不是有效的也不是<ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.MinHeight*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.MinHeight*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.MinHeight*&gt;</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>Gets or sets the minimum width constraint of the element.</source>
          <target state="translated">获取或设置元素的最小宽度约束。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>This is one of three properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify width information.</source>
          <target state="translated">这是一个三个属性上&lt;xref:System.Windows.FrameworkElement&gt;指定宽度的信息。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; and &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;.</source>
          <target state="translated">另外两个是&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;和&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; &lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual width determination is first MinWidth must be honored, then &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;, and finally if each of these are within bounds, &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;.</source>
          <target state="translated">如果冲突之间没有这些值，应用程序的顺序确定实际宽度为第一个 MinWidth 必须进行确认，然后&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;，最后如果每个都在限制之内， &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>The value restrictions on the &lt;xref:System.Double&gt; value are enforced by a &lt;xref:System.Windows.ValidateValueCallback&gt; mechanism.</source>
          <target state="translated">对的值限制&lt;xref:System.Double&gt;由强制执行值&lt;xref:System.Windows.ValidateValueCallback&gt;机制。&lt;/xref:System.Windows.ValidateValueCallback&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">如果你尝试设置一个无效值，则会引发一个运行时异常。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_MinWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object MinWidth="double"/&gt;   - or -   &lt;object MinWidth="qualifiedDouble"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_MinWidth"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_MinWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object MinWidth="double"/&gt;   - or -   &lt;object MinWidth="qualifiedDouble"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_MinWidth"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字符串表示形式&lt;xref:System.Double&gt;值等于或大于 0.0。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">它被解释为<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字符串不需要显式包括位小数。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">例如，值的<ph id="ph1">`1`</ph>是可以接受的。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>The same &lt;xref:System.Double&gt; range restrictions as mentioned in the Property Value section apply.</source>
          <target state="translated">相同&lt;xref:System.Double&gt;属性值部分中所述的范围限制也适用。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>该值，上文所述跟以下单位声明字符串之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px      <bpt id="p1">&lt;a name="dependencyPropertyInfo_MinWidth"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.MinWidthProperty&gt;|   |Metadata properties set to <ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><ph id="ph1">`px`</ph>（默认值） 是<ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph><ph id="ph3">`in`</ph>为英寸; 1 英寸 = = 96px<ph id="ph4">`cm`</ph>是厘米; 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>是点; 1pt==(96/72) px <bpt id="p1">&lt;a name="dependencyPropertyInfo_MinWidth"&gt;</bpt> <ept id="p1">&lt;/a&gt;</ept> # # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.MinWidthProperty&gt;|  |元数据属性设置为<ph id="ph6">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinWidthProperty&gt;       </target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>The minimum width of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">元素的最小宽度，请在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>The default value is 0.0.</source>
          <target state="translated">默认值为 0.0。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">此值可以是等于或大于 0.0 的任何值。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>However, &lt;xref:System.Double&gt; is not valid, nor is <ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">但是，&lt;xref:System.Double&gt;无效，也不是<ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。&lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.MinWidth*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.MinWidth*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.MinWidth*&gt;</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>Moves the keyboard focus away from this element and to another element in a provided traversal direction.</source>
          <target state="translated">提供的遍历方向移动键盘焦点离开此元素和到另一个元素。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>This implementation overrides &lt;xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName&gt; and seals the method.</source>
          <target state="translated">此实现将重写&lt;xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName&gt;并密封方法。&lt;/xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>The direction that focus is to be moved, as a value of the enumeration.</source>
          <target state="translated">焦点为枚举的值作为要移动的方向。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if focus is moved successfully; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the target element in direction as specified does not exist or could not be keyboard focused.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果成功，则移动焦点<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果方向为中的目标元素指定不存在或无法不聚焦于键盘。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>Gets or sets the identifying name of the element.</source>
          <target state="translated">获取或设置元素的标识名称。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>The name provides a reference so that code-behind, such as event handler code, can refer to a markup element after it is constructed during processing by a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> processor.</source>
          <target state="translated">该名称提供引用，以便代码隐藏，如事件处理程序代码中，可以引用标记元素的处理过程中构造之后<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>处理器。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>The most common usage of this property is to specify a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> element name as an attribute in markup.</source>
          <target state="translated">此属性的最常见用法是指定<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>作为标记中的属性的元素名称。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>This property essentially provides a WPF framework-level convenience property to set the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">此属性实质上是提供一个 WPF 框架级别便捷属性，以设置<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>X:name 指令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>Names must be unique within a namescope.</source>
          <target state="translated">名称必须是唯一名称范围内。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>Getting a Name if you are creating elements in code is not common.</source>
          <target state="translated">如果你在代码中创建元素获取名称并不常见。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>If you have the appropriate reference in code already, you can just call methods and properties on the element reference and will not generally need the Name.</source>
          <target state="translated">如果你已在代码中具有适当的引用，你可以直接调用方法和属性元素上的引用，通常不需要名称。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>An exception to this is if the Name string has some overloaded meaning, for instance if it is useful to display that name in <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">一种例外情况是名称字符串具有某些重载的含义，实例有用中显示该名称是否<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>Setting a Name from code-behind if the original Name was set from markup is also not recommended, and changing the property after loading the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> will not change the original object reference.</source>
          <target state="translated">设置从代码隐藏如果从标记中设置的原始名称的名称也不建议，并在加载后更改的属性<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>将不会更改原始对象引用。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>The object references are created only when the underlying namescopes are explicitly created during parsing.</source>
          <target state="translated">仅当在分析过程中显式创建了基础名称范围创建的对象引用。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>You must specifically call &lt;xref:System.Windows.FrameworkElement.RegisterName%2A&gt; to make an effective change to the Name property of an already loaded element.</source>
          <target state="translated">你必须明确调用&lt;xref:System.Windows.FrameworkElement.RegisterName%2A&gt;对已加载的元素的 Name 属性进行有效的更改。&lt;/xref:System.Windows.FrameworkElement.RegisterName%2A&gt;</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>One notable case where setting Name from code is important is when registering names for elements that storyboards will run against, so that they can be referenced at run time.</source>
          <target state="translated">在代码中设置名称是重要的一个值得注意的情况下是注册情节提要将针对，运行的元素的名称，以便可以在运行时引用它们时。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>Before you can register a name, might also need to instantiate and assign a &lt;xref:System.Windows.NameScope&gt; instance.</source>
          <target state="translated">你可以注册名称之前，可能还需要实例化并分配&lt;xref:System.Windows.NameScope&gt;实例。&lt;/xref:System.Windows.NameScope&gt;</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>See the Example section, or <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">请参阅示例部分中，或<bpt id="p1">[</bpt>情节提要概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Setting Name from code has limited applications, but getting an element by Name is more common.</source>
          <target state="translated">从代码中设置名称具有有限的应用程序，但更常见的获取按名称的元素是。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>One particular scenario is if your application supports a navigation model where pages reload into the application, and the run time code is not necessarily code-behind defined for that page.</source>
          <target state="translated">特定的一种情况是如果你的应用程序支持到应用程序，重新加载页面，其中的运行的时代码不一定隐藏代码定义该页面的导航模型。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>The utility method &lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;, which is available from any &lt;xref:System.Windows.FrameworkElement&gt;, can find any element by Name in the logical tree for that element, searching the tree recursively as necessary.</source>
          <target state="translated">实用工具方法&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;，这是可从任何&lt;xref:System.Windows.FrameworkElement&gt;，可以查找任何元素按名称的逻辑树中该元素，根据需要树递归搜索。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement.FindName%2A&gt;</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>Or you can use the &lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt; static method of &lt;xref:System.Windows.LogicalTreeHelper&gt;, which also takes a Name string as an argument.</source>
          <target state="translated">也可以使用&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;静态方法&lt;xref:System.Windows.LogicalTreeHelper&gt;，其还会作为自变量的名称字符串。&lt;/xref:System.Windows.LogicalTreeHelper&gt; &lt;/xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Typically used root elements (&lt;xref:System.Windows.Window&gt;, &lt;xref:System.Windows.Controls.Page&gt; for example) implement the interface &lt;xref:System.Windows.Markup.INameScope&gt;.</source>
          <target state="translated">通常使用的根元素 (&lt;xref:System.Windows.Window&gt;，&lt;xref:System.Windows.Controls.Page&gt;例如) 实现的接口&lt;xref:System.Windows.Markup.INameScope&gt;.&lt;/xref:System.Windows.Markup.INameScope&gt; &lt;/xref:System.Windows.Controls.Page&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>Implementations of this interface are expected to enforce that names be unambiguous within their scope.</source>
          <target state="translated">此接口的实现需要强制该名称是明确在其范围内。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>The root elements that define this interface also define the namescope behavior boundaries for all the related <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>.</source>
          <target state="translated">定义此接口的根元素还为所有定义的名称范围行为边界相关<ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>The Name property also serves as an identifier for other processes.</source>
          <target state="translated">Name 属性还充当其他进程的标识符。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>For instance, the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> automation model will use Name as the AutomationId for clients and providers.</source>
          <target state="translated">例如，<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>自动化模型将使用名称作为 AutomationId 客户端和提供程序。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>The string values used for Name have some restrictions, as imposed by the underlying <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](../Topic/x:Name%20Directive.md)</ept> defined by the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> specification.</source>
          <target state="translated">用于名称的字符串值具有一些限制，如强加在基础<bpt id="p1">[</bpt>X:name 指令<ept id="p1">](../Topic/x:Name%20Directive.md)</ept>由定义<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>规范。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Most notably, a Name must start with a letter or the underscore character (_), and must contain only letters, digits, or underscores.</source>
          <target state="translated">最值得注意的是，名称必须以字母或下划线字符 (_) 开头，并且必须包含字母、 数字或下划线。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](../Topic/WPF%20XAML%20Namescopes.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](../Topic/WPF%20XAML%20Namescopes.md)</ept>。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>Name is one of the very few dependency properties that cannot be animated (&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt; is <ph id="ph1">`true`</ph> in metadata), because the name itself is vital for targeting an animation.</source>
          <target state="translated">名称是一个无法进行动画处理的极少数依赖项属性 (&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;是<ph id="ph1">`true`</ph>元数据中)，因为名称本身是所必需的定位动画。&lt;/xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Data binding a Name is technically possible, but is an extremely uncommon scenario because a data-bound Name cannot serve the main intended purpose of the property: to provide an identifier connection point for code-behind.</source>
          <target state="translated">数据绑定的名称是从技术上讲是可行的但是极少见的方案，因为数据绑定名称不能提供的属性的主要预期的用途︰ 若要隐藏代码提供的标识符连接点。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Name"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.NameProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Name"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.NameProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;|&lt;/xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt; &lt;/xref:System.Windows.FrameworkElement.NameProperty&gt;</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>The name of the element.</source>
          <target state="translated">元素的名称。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
          <target state="translated">默认值为一个空字符串。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Name*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.Name*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.Name*&gt;</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is invoked whenever application code or internal processes call &lt;xref:System.Windows.FrameworkElement.ApplyTemplate*&gt;.</source>
          <target state="translated">在派生类中重写，无论应用程序代码或内部进程调用&lt;xref:System.Windows.FrameworkElement.ApplyTemplate*&gt;.&lt;/xref:System.Windows.FrameworkElement.ApplyTemplate*&gt;都会调用</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>This method has no default implementation.</source>
          <target state="translated">此方法不具有默认实现。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>Templates are the section of an element's completed visual tree that comes from the Template property of a &lt;xref:System.Windows.Style&gt; that is applied for the element.</source>
          <target state="translated">模板是来自模板属性的元素的已完成可视化树部分&lt;xref:System.Windows.Style&gt;元素被应用。&lt;/xref:System.Windows.Style&gt;</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>样式和模板化<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Invoked whenever an unhandled <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches this class in its route.</source>
          <target state="translated">每当某个未处理调用<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件到达其路由中的此类。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">实现此方法可为此事件添加类处理。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>Provides data about the event.</source>
          <target state="translated">提供有关事件的数据。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>Invoked whenever an unhandled <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches this class in its route.</source>
          <target state="translated">每当某个未处理调用<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ContextMenuOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件到达其路由中的此类。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">实现此方法可为此事件添加类处理。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>Invoked whenever an unhandled <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event reaches this element in its route.</source>
          <target state="translated">每当某个未处理调用<bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件到达其路由中的此元素。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Unlike some other On* methods exposed by the base elements, OnGotFocus does have a default implementation.</source>
          <target state="translated">与一些其他不同 * 公开由基元素 OnGotFocus 方法具有的默认实现。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Specifically, it has an implementation that overrides the null implementation in the next level of base element down, &lt;xref:System.Windows.UIElement.OnGotFocus%2A&gt;.</source>
          <target state="translated">具体而言，它具有重写下， &lt;xref:System.Windows.UIElement.OnGotFocus%2A&gt;.&lt;/xref:System.Windows.UIElement.OnGotFocus%2A&gt;的基元素的下一步级别中的 null 实现实现</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>When invoked, OnGotFocus sets appropriate focus behavior on this element in cases where the event originated from the current element due to keyboard focus.</source>
          <target state="translated">调用时，OnGotFocus 在事件生成由于键盘焦点的当前元素的位置的情况下此元素上设置相应的焦点行为。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>The OnGotFocus handler does not mark the event arguments as handled, even when focus is set to the current element.</source>
          <target state="translated">为已处理，即使焦点设置到当前元素，OnGotFocus 处理程序不会不会标记的事件自变量。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>If the event's source was another element in the tree (not the current element), the handler does nothing.</source>
          <target state="translated">如果事件的源树 （不是当前元素） 中的另一个元素，该处理程序将没有任何影响。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>You can override this method in order to change the default focus behavior on your element, but be aware that changing focus behavior in this way might be better accomplished by not allowing the element to be focusable at all (see &lt;xref:System.Windows.UIElement.Focusable%2A&gt;).</source>
          <target state="translated">你可以重写此方法，以更改您的元素上的默认焦点行为，但请注意，更改焦点行为以这种方式可能更好地完成通过不允许要在所有可获得焦点的元素 (请参阅&lt;xref:System.Windows.UIElement.Focusable%2A&gt;)。&lt;/xref:System.Windows.UIElement.Focusable%2A&gt;</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Initialized"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Initialized"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>This method is invoked whenever &lt;xref:System.Windows.FrameworkElement.IsInitialized*&gt; is set to <bpt id="p1">&lt;xref uid="langword_csharp_true " name="true " href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>internally.</source>
          <target state="translated">调用此方法时&lt;xref:System.Windows.FrameworkElement.IsInitialized*&gt;设置为<bpt id="p1">&lt;xref uid="langword_csharp_true " name="true " href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>内部。&lt;/xref:System.Windows.FrameworkElement.IsInitialized*&gt;</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件数据。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>Invoked whenever the effective value of any dependency property on this <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been updated.</source>
          <target state="translated">每当调用这任何依赖属性的有效值<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>已更新。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>The specific dependency property that changed is reported in the arguments parameter.</source>
          <target state="translated">自变量参数中报告更改的特定依赖属性。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>Overrides &lt;xref:System.Windows.DependencyObject.OnPropertyChanged*&gt;.</source>
          <target state="translated">重写&lt;xref:System.Windows.DependencyObject.OnPropertyChanged*&gt;.&lt;/xref:System.Windows.DependencyObject.OnPropertyChanged*&gt;</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>This method is not intended to generally detect property changes or invalidations.</source>
          <target state="translated">此方法不应通常检测属性更改或失效。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.</source>
          <target state="translated">它而被旨在用于修改常规失效模式如果查阅宽分类的属性已知的某些信息。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>This method is potentially invoked many times during the life of an object.</source>
          <target state="translated">调用此方法可能很多时候一个对象的生命周期内。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>Therefore, you can achieve better performance if you override the metadata of specific properties and then attach &lt;xref:System.Windows.CoerceValueCallback&gt; or &lt;xref:System.Windows.PropertyChangedCallback&gt; functions for individual properties.</source>
          <target state="translated">因此，你可以实现更好的性能，如果重写特定属性的元数据，然后将附加&lt;xref:System.Windows.CoerceValueCallback&gt;或&lt;xref:System.Windows.PropertyChangedCallback&gt;为各个属性的函数。&lt;/xref:System.Windows.PropertyChangedCallback&gt; &lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>However, you would use this method if a &lt;xref:System.Windows.FrameworkElement&gt; includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</source>
          <target state="translated">但是，如果你将使用此方法&lt;xref:System.Windows.FrameworkElement&gt;包括大量的值相关的依赖项属性，或如果它包括逻辑，如呈现行为，必须重新运行多个相关属性失效的情况。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>Note that there is an identically named <ph id="ph1">`OnPropertyChanged`</ph> method with a different signature (the parameter type is &lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;) that can appear on a number of classes.</source>
          <target state="translated">请注意，没有具有相同名称<ph id="ph1">`OnPropertyChanged`</ph>用不同的签名的方法 (该参数类型是&lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;)，可能出现在多个类。&lt;/xref:System.ComponentModel.PropertyChangedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>That <ph id="ph1">`OnPropertyChanged`</ph> is used for data object notifications, and is part of the contract for &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.</source>
          <target state="translated"><ph id="ph1">`OnPropertyChanged`</ph>用于数据对象通知，并且是&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;。&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt;协定的一部分</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>The event data that describes the property that changed, as well as old and new values.</source>
          <target state="translated">描述已更改，属性的事件数据以及旧值和新值。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.SizeChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event, using the specified information as part of the eventual event data.</source>
          <target state="translated">引发<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.SizeChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件，使用指定的信息作为最终事件数据的一部分。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt;.&lt;/xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt;</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>If you call this method you will reset the &lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt; property, the &lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt; property, or both, depending on what is specified as changed in the supplied arguments, and will you always raise the event.</source>
          <target state="translated">如果调用此方法将重置&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;属性，&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;属性，或两者都，具体取决于为指定的内容中更改提供的自变量，并且将始终引发此事件。&lt;/xref:System.Windows.FrameworkElement.ActualHeight%2A&gt; &lt;/xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Details of the old and new size involved in the change.</source>
          <target state="translated">此更改中涉及的旧和新大小的详细信息。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>Invoked when the style in use on this element changes, which will invalidate the layout.</source>
          <target state="translated">在此元素上使用的样式更改时调用，这将使失效布局。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>This method has a default implementation that sets an internal flag that notes the style changed condition.</source>
          <target state="translated">此方法已设置说明样式更改条件的内部标志的默认实现。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>The old style.</source>
          <target state="translated">旧的样式。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>The new style.</source>
          <target state="translated">将新样式。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>Invoked whenever an unhandled <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches this class in its route.</source>
          <target state="translated">每当某个未处理调用<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件到达其路由中的此类。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">实现此方法可为此事件添加类处理。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>Provides data about the event.</source>
          <target state="translated">提供有关事件的数据。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>Invoked whenever the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event reaches this class in its route.</source>
          <target state="translated">每当调用<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件到达其路由中的此类。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">实现此方法可为此事件添加类处理。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Provides data about the event.</source>
          <target state="translated">提供有关事件的数据。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Invoked when the parent of this element in the visual tree is changed.</source>
          <target state="translated">可视化树中此元素的父级发生更改时调用。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>Overrides &lt;xref:System.Windows.UIElement.OnVisualParentChanged*&gt;.</source>
          <target state="translated">重写&lt;xref:System.Windows.UIElement.OnVisualParentChanged*&gt;.&lt;/xref:System.Windows.UIElement.OnVisualParentChanged*&gt;</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>The visual tree is potentially different from the logical tree because it omits elements that do not render visually, such as collections, and expands some elements on the basis of their theme and style compositing.</source>
          <target state="translated">可视化树是不同于逻辑树，因为它无法不例如集合、 直观地呈现的元素，并且展开某些元素根据其主题和样式的组合。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>WPF 中的树<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>The old parent element.</source>
          <target state="translated">旧的父元素。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the element did not have a visual parent previously.</source>
          <target state="translated">可能是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>以指示元素是否有过 visual 父级。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether this element incorporates style properties from theme styles.</source>
          <target state="translated">获取或设置一个值，该值指示此元素是否包含从主题样式的样式属性。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.</source>
          <target state="translated">此属性的最常见用法是一种间接使用正提供主题样式的样式的 setter 中。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If you set OverridesDefaultStyle to <ph id="ph2">`true`</ph> on a control, you will be suppressing the default control template supplied by the theme styles.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 如果 OverridesDefaultStyle 设置为<ph id="ph2">`true`</ph>控件，则会禁用主题样式所提供的默认控件模板。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>That control template typically includes the content presenter and other composited elements that provide basic <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> functionality and visualization for the control.</source>
          <target state="translated">该控件模板通常包含内容的显示器和提供基本其他复合元素<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>功能和控件的可视化效果。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>If you want the control to continue to support the same features as the default theme styles, you must supply an alternate style with a control template that replicates the same structure.</source>
          <target state="translated">如果你想要继续支持与默认主题样式相同的功能的控件，你必须提供替代样式与复制相同的结构的控件模板。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Control Authoring Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>控件创作概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_OverridesDefaultStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_OverridesDefaultStyle"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyleProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.OverridesDefaultStyleProperty&gt;</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此元素不使用主题样式属性;所有源于样式的属性来自本地应用程序样式和主题样式属性不适用。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应用程序样式首先，应用，然后主题样式应用于的专门不在应用程序样式中设置的属性。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.OverridesDefaultStyle*&gt;</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>Gets the logical parent  element of this element.</source>
          <target state="translated">获取此元素的逻辑父元素。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>Parent may be <ph id="ph1">`null`</ph> in cases where an element was instantiated, but is not attached to any logical tree that eventually connects to the page level root element, or the application object.</source>
          <target state="translated">父节点可能是<ph id="ph1">`null`</ph>情况下，元素已实例化，但未附加到任何最终将连接到的页级别的根元素或应用程序对象的逻辑树中。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>Note that the logical parent of an element can potentially change depending on your application's functionality, and keeping the value of this property will not reflect that change.</source>
          <target state="translated">请注意，根据你的应用程序的功能，可能发生更改的元素的逻辑父级，并且此属性的值保持将不会反映所做的更改。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>You typically should get the value immediately before you need it.</source>
          <target state="translated">你需要它之前，你通常应获取的值。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> for more information about logical tree  traversal, and the scenarios where using  Parent as a technique of parent element discovery is appropriate.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>WPF 中的树<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>有关逻辑树遍历和其中父用作父元素发现一种技术是适当的方案的详细信息。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>The property engine will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree.</source>
          <target state="translated">属性引擎将可能重新计算此元素的所有属性值时父级，因为某些属性继承值通过逻辑树。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; that applies for bindings can also change when elements are reparented.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;适用于元素是父级，还可以更改绑定。&lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt;</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Changing an element's parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.</source>
          <target state="translated">更改元素的父通常只是对集合的操作，通过使用专用添加或删除方法，或通过设置的元素的内容属性。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>The most typical scenario for using the Parent property is to obtain a reference and then get various &lt;xref:System.Windows.FrameworkElement&gt; property values from the parent.</source>
          <target state="translated">使用父属性的大多数典型方案是获得的引用，然后获取各种&lt;xref:System.Windows.FrameworkElement&gt;从父属性值。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>For templates, the Parent of the template eventually will be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">对于模板，模板最终的父级将<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>To get past this point and extend into the logical tree where the template is actually applied, use &lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;.</source>
          <target state="translated">若要忽略这一点并扩展到实际将应用的模板的逻辑树，请使用&lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>Note that this property does not report visual tree parents in cases where these vary from the logical tree parents.</source>
          <target state="translated">请注意，此属性不会报告在其中而这些变化从逻辑树父的情况下的可视化树父级。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>Visual tree parents are not typically important for general application cases but may be the desired parent elements for certain visual level cases.</source>
          <target state="translated">可视化树的父项不是为常规应用程序的情况下通常很重要，但可能会某些可视化级别情况所需的父元素。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Media.VisualTreeHelper&gt;.</source>
          <target state="translated">请参阅&lt;xref:System.Windows.Media.VisualTreeHelper&gt;。&lt;/xref:System.Windows.Media.VisualTreeHelper&gt;</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>This element's logical parent.</source>
          <target state="translated">此元素的逻辑父级。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Supports incremental layout implementations in specialized subclasses of <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">支持的专用子类中的增量布局实现<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>ParentLayoutInvalidated is invoked when a child element has invalidated a property that is marked in metadata as affecting the parent's measure or arrange passes during layout.</source>
          <target state="translated">ParentLayoutInvalidated 子元素包含无效标记为影响父级的度量值的元数据中的属性时调用，或排列过程布局。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>If this element has a child element on which some property was invalidated and the property was marked as &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt; or &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt; in property metadata during registration, this method is invoked.</source>
          <target state="translated">如果此元素具有子元素在其某些属性已失效，并且该属性被标记为&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;或&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;在注册期间的属性元数据，会调用此方法。&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt; &lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>The method invocation notifies the parent element which particular child element must be re-measured if this element supports partial (incremental) update of layout.</source>
          <target state="translated">方法调用将通知的特定子元素必须是重新测量，如果此元素支持部分 （增量） 更新的布局的父元素。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>By default, &lt;xref:System.Windows.FrameworkElement&gt; does not support incremental layout, and in the &lt;xref:System.Windows.FrameworkElement&gt; class this method has no default implementation.</source>
          <target state="translated">默认情况下，&lt;xref:System.Windows.FrameworkElement&gt;不支持增量布局，然后在&lt;xref:System.Windows.FrameworkElement&gt;这类方法具有没有默认实现。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>The scenario where overriding this method would be necessary is not common, because it requires you to modify the default layout system behavior.</source>
          <target state="translated">将需要重写此方法的方案并不常用，因为它需要修改默认布局系统行为。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>An example implementation scenario might be if a class had type limitations for possible child elements that are significantly more restrictive than the WPF framework-level layout system.</source>
          <target state="translated">一个实现方案示例可能是一个类包含可能存在的子元素的显著比 WPF 框架级别布局系统限制性更强的类型限制。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>Because of the nature of these custom elements, property changes could be deliberately deferred when you implement some custom layout behavior.</source>
          <target state="translated">由于这些自定义元素的特性，可能有意推迟属性更改时实现一些自定义布局的行为。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>For instance, measure/arrange method overrides, which try to optimize the child element render pass, could be deferred for certain types of changes that would ordinarily result in another layout pass.</source>
          <target state="translated">例如，/排列度量值的方法重写，则尝试优化子元素呈现处理过程，可能对某些类型的更改通常会生成另一个布局处理过程中被推迟。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>The child element reporting the change.</source>
          <target state="translated">报告更改子元素。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus.</source>
          <target state="translated">确定将接收相对于对提供的焦点移动方向，此元素的焦点，但不会实际移动焦点的下一个元素。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkElement.MoveFocus%2A&gt; is the related method that actually does move focus.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.MoveFocus%2A&gt;是实际移动焦点的相关的方法。&lt;/xref:System.Windows.FrameworkElement.MoveFocus%2A&gt;</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>The direction for which a prospective focus change should be determined.</source>
          <target state="translated">应为其确定潜在的焦点更改方向。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>The next element that focus would move to if focus were actually traversed.</source>
          <target state="translated">如果实际遍历了焦点，将要移到集中的下一个元素。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>May return <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if focus cannot be moved relative to this element for the provided direction.</source>
          <target state="translated">可能会返回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果焦点不能提供的方向移动相对于此元素。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>Specified one of the following directions in the <bpt id="p1">&lt;xref href="System.Windows.Input.TraversalRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <bpt id="p2">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Specified one of the following directions in the <bpt id="p1">&lt;xref href="System.Windows.Input.TraversalRequest"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>: <bpt id="p2">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, <bpt id="p5">&lt;xref href="System.Windows.Input.FocusNavigationDirection"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>These directions are not legal for PredictFocus (but they are legal for &lt;xref:System.Windows.FrameworkElement.MoveFocus*&gt;).</source>
          <target state="translated">这些说明不是合法的 PredictFocus (但它们都是合法的&lt;xref:System.Windows.FrameworkElement.MoveFocus*&gt;)。&lt;/xref:System.Windows.FrameworkElement.MoveFocus*&gt;</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>Provides an accessor that simplifies access to the &lt;xref:System.Windows.NameScope&gt; registration method.</source>
          <target state="translated">提供简化了对访问的访问器&lt;xref:System.Windows.NameScope&gt;注册方法。&lt;/xref:System.Windows.NameScope&gt;</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>This method is a convenience method for calling &lt;xref:System.Windows.NameScope.RegisterName%2A&gt;.</source>
          <target state="translated">此方法是调用&lt;xref:System.Windows.NameScope.RegisterName%2A&gt;.&lt;/xref:System.Windows.NameScope.RegisterName%2A&gt;的便捷方法</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>The implementation will check successive parent elements until it finds the applicable &lt;xref:System.Windows.NameScope&gt; implementation, which is found by finding an element that implements &lt;xref:System.Windows.Markup.INameScope&gt;.</source>
          <target state="translated">该实现将检查连续的父元素，直到它找到适用的&lt;xref:System.Windows.NameScope&gt;实现中，位于通过查找实现&lt;xref:System.Windows.Markup.INameScope&gt;.&lt;/xref:System.Windows.Markup.INameScope&gt;元素&lt;/xref:System.Windows.NameScope&gt;</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>For more information about namescopes, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关名称范围的详细信息，请参阅<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>Calling RegisterName is necessary in order to correctly hook up animation storyboards for applications when created in code.</source>
          <target state="translated">调用寄存器名所需的是正确挂钩的应用程序时在代码中创建的动画情节提要。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>This is because one of the key storyboard properties, &lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;, uses a run-time name lookup instead of being able to take a reference to a target element.</source>
          <target state="translated">这是因为其中一个主要情节提要属性， &lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;，而不是能够充分目标元素的引用中使用运行时名称查找。&lt;/xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>This is true even if that element is accessible by reference from the code.</source>
          <target state="translated">即使该元素是可访问的代码中的引用，也是如此。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>For more information on why you need to register names for storyboard targets, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">为何需要注册名称的情节提要目标的详细信息，请参阅<bpt id="p1">[</bpt>情节提要概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>Name to use for the specified name-object mapping.</source>
          <target state="translated">要使用指定的名称-对象映射的名称。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>Object for the mapping.</source>
          <target state="translated">映射的的对象。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>Removes the provided object from this element's logical tree.</source>
          <target state="translated">从此元素的逻辑树中移除所提供的对象。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> updates the affected logical tree parent pointers to keep in sync with this deletion.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>更新受影响的逻辑树父指针，以便与此删除操作保持同步。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>Use this method for the implementation of collections on objects that represent logical children of an element.</source>
          <target state="translated">使用此方法用于实现的上表示逻辑子级的元素的对象的集合。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>This might be done in property getters or setters, class handlers of <ph id="ph1">`Changed`</ph> events, constructors, or within the collection types themselves.</source>
          <target state="translated">属性 getter 或 setter 中的类处理程序可以采取这<ph id="ph1">`Changed`</ph>事件、 构造函数，或在集合类型本身。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the provided base control class' content models are appropriate.</source>
          <target state="translated">对于控件作者操作在此级别的逻辑树不是建议的做法，除非没有合适的提供基控件类的内容模型。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>Consider subclassing at the level of &lt;xref:System.Windows.Controls.ContentControl&gt;, &lt;xref:System.Windows.Controls.ItemsControl&gt;, and &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;.</source>
          <target state="translated">请考虑级别的子类化&lt;xref:System.Windows.Controls.ContentControl&gt;， &lt;xref:System.Windows.Controls.ItemsControl&gt;，和&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;。&lt;/xref:System.Windows.Controls.HeaderedItemsControl&gt; &lt;/xref:System.Windows.Controls.ItemsControl&gt; &lt;/xref:System.Windows.Controls.ContentControl&gt;</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>These classes provide a content model with particular enforcement of logical children through dedicated <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>, as well as support for other features typically desirable in a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> control such as styling through templates.</source>
          <target state="translated">这些类提供的内容模型通过专用的逻辑子级的特定强制<ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph>，以及对其他功能中通常所需的支持<ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>控件如通过模板的样式。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>The element to remove.</source>
          <target state="translated">要移除的元素。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>Occurs when &lt;xref:System.Windows.FrameworkElement.BringIntoView*&gt; is called on this element.</source>
          <target state="translated">发生时&lt;xref:System.Windows.FrameworkElement.BringIntoView*&gt;在此元素上调用。&lt;/xref:System.Windows.FrameworkElement.BringIntoView*&gt;</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>This event indicates to a parent &lt;xref:System.Windows.Controls.ScrollViewer&gt; (or derived class) that the element that raises the RequestBringIntoView event should be made visible within the scrollable region.</source>
          <target state="translated">此事件指示︰ 对于父级&lt;xref:System.Windows.Controls.ScrollViewer&gt;（或派生类） 的可滚动区域内应进行可见引发 RequestBringIntoView 事件的元素。&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.ScrollViewer&gt; will then mark the RequestBringIntoView event as handled, by using class handling of the event.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ScrollViewer&gt;将然后标记为已处理，通过使用的事件的类处理 RequestBringIntoView 事件。&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>In general RequestBringIntoView event data should not be marked handled by any class that does control a scrolling region, or by any instance handler, because doing so would interfere with the intended goal of the element that called &lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;.</source>
          <target state="translated">一般情况下 RequestBringIntoView 事件数据不应将标记通过控制滚动区域，任何类或任何处理实例处理程序，因为这样会妨碍其预期目标是称为&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;的元素</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_RequestBringIntoView"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.RequestBringIntoViewEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RequestBringIntoViewEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_RequestBringIntoView"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.RequestBringIntoViewEvent&gt;|  |路由策略 |冒泡 |  |委托 |&lt;xref:System.Windows.RequestBringIntoViewEventHandler&gt;|&lt;/xref:System.Windows.RequestBringIntoViewEventHandler&gt;&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoViewEvent&gt;</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.RequestBringIntoView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">标识<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.RequestBringIntoView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>Gets or sets the locally-defined resource dictionary.</source>
          <target state="translated">获取或设置本地定义的资源字典。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>Resource dictionaries that can be defined completely or partially in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> are typically created as a property element, and are typically on the root element for any individual page or for the application.</source>
          <target state="translated">可以完全或部分中定义的资源字典<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>通常创建为一个属性元素，并且通常是根元素为任何单个页面或应用程序上。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case).</source>
          <target state="translated">将在此级别的资源字典便于查找从页面中的各个子元素 （或任何页上，在应用程序的情况下）。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).</source>
          <target state="translated">在大多数应用程序方案中，我们建议作为对象元素使用的资源字典中定义样式或作为外部资源定义整个样式资源可以是自包含 （这种方法可帮助分隔设计人员的责任从开发人员的责任分离需要编辑的物理文件）。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>Note that this property returns only the resource dictionary declared directly within that element.</source>
          <target state="translated">请注意，此属性返回直接在该元素内声明仅的资源字典。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.</source>
          <target state="translated">此函数不同于实际资源查找过程中，子元素可以访问任何向上递归搜索每个父元素中定义的资源。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>Resources can also be referenced by code from within the collection, but be aware that resources created in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> will definitely not be accessible until after &lt;xref:System.Windows.FrameworkElement.Loaded&gt; is raised by the element that declares the dictionary.</source>
          <target state="translated">资源在集合中，从代码也可以引用，但请注意资源创建在<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>肯定不可访问，直到&lt;xref:System.Windows.FrameworkElement.Loaded&gt;引发的声明该字典的元素。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>In fact, resources are parsed asynchronously and not even the &lt;xref:System.Windows.FrameworkElement.Loaded&gt; event is an assurance that you can reference a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> defined resource.</source>
          <target state="translated">以异步方式而不分析资源的实际上，即使&lt;xref:System.Windows.FrameworkElement.Loaded&gt;事件是保证可引用<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>定义资源。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>For this reason you should generally only access <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> defined resources as part of run-time code, or through other <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> techniques such as styles or resource extension references for attribute values.</source>
          <target state="translated">因此你通常只应访问<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>定义资源作为的一部分运行时代码，或通过其他<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>技术，如样式或特性值的资源扩展引用。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>When you access resources through code, it is essentially equivalent to a  reference made from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">通过代码访问资源时，它是实质上等同于从进行的引用<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>The underlying &lt;xref:System.Windows.ResourceDictionary&gt; supports the methods required to add, remove or query resources from within the collection by using code.</source>
          <target state="translated">基础&lt;xref:System.Windows.ResourceDictionary&gt;支持添加、 删除或通过使用代码查询从集合中的资源所需的方法。&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>The Resources property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">资源属性是可以设置以支持以下场景︰ 完全替换的元素为一个新的资源集合或不同&lt;xref:System.Windows.ResourceDictionary&gt;。&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>Notice that the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> syntax shown does not include an element for the &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">请注意，<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>所示的语法不包含&lt;xref:System.Windows.ResourceDictionary&gt;。&lt;/xref:System.Windows.ResourceDictionary&gt;元素</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>This is an example of implicit collection syntax; a tag representing the collection element can be omitted.</source>
          <target state="translated">这是隐式集合语法; 一个示例可以省略表示集合元素的标记。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>The elements that are added as items to the collection are specified instead.</source>
          <target state="translated">改为指定为项添加到集合的元素。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>For more information about implicit collections and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, see <bpt id="p1">[</bpt>XAML Syntax In Detail<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关隐式集合的详细信息和<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>，请参阅<bpt id="p1">[</bpt>在详细信息的 XAML 语法<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>One case where a &lt;xref:System.Windows.ResourceDictionary&gt; is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">一种情况下&lt;xref:System.Windows.ResourceDictionary&gt;仍指定显式如元素是引入合并的字典，这种情况下是否存在通常该&lt;xref:System.Windows.ResourceDictionary&gt;.&lt;/xref:System.Windows.ResourceDictionary&gt;没有子元素&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Merged Resource Dictionaries<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>合并资源字典<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_Resources"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.Resources&gt;       oneOrMoreResourceElements     &lt;/object.Resources&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Resources"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreResourceElements<ept id="p3">*</ept>    One or more object elements, each of which defines a resource.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_Resources"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性元素用法<ph id="ph1">```   &lt;object&gt;     &lt;object.Resources&gt;       oneOrMoreResourceElements     &lt;/object.Resources&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Resources"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>oneOrMoreResourceElements<ept id="p3">*</ept>一个或多个对象元素，其中每个定义的资源。      </target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>Each resource property element within each &lt;xref:System.Windows.ResourceDictionary&gt; must have a unique value for the <bpt id="p1">[</bpt>x:Key Directive<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>, which serves as the unique key when values are retrieved from the &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">在每个每个资源属性元素&lt;xref:System.Windows.ResourceDictionary&gt;必须具有唯一值<bpt id="p1">[</bpt>X:key 指令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>，它用作唯一键时将从&lt;xref:System.Windows.ResourceDictionary&gt;.&lt;/xref:System.Windows.ResourceDictionary&gt;检索值&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>The current locally-defined dictionary of resources, where each resource can be accessed by key.</source>
          <target state="translated">当前本地定义的字典的资源，其中每个资源可以通过键进行访问。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.</source>
          <target state="translated">将一个绑定附加到此元素，作为数据源的路径限定基于提供的源属性名称。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>This method is a convenience method for calling &lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;, which passes the current instance as the &lt;xref:System.Windows.DependencyObject&gt;, and creates a new &lt;xref:System.Windows.Data.Binding&gt; based on the provided <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">此方法是调用的便捷方法&lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;，后者将当前实例作为传递&lt;xref:System.Windows.DependencyObject&gt;，并创建一个新&lt;xref:System.Windows.Data.Binding&gt;根据所提供<ph id="ph1">`path`</ph>参数。&lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>This signature is more convenient if you are establishing a simple default binding.</source>
          <target state="translated">此签名会更方便，当您要建立简单的默认绑定。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>If you need to specify any binding properties to non-default conditions, or want to use a &lt;xref:System.Windows.Data.MultiBinding&gt; or &lt;xref:System.Windows.Data.PriorityBinding&gt;,you should use the &lt;xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29&gt; signature.</source>
          <target state="translated">如果你需要指定任何绑定属性为非默认条件，或想要使用&lt;xref:System.Windows.Data.MultiBinding&gt;或&lt;xref:System.Windows.Data.PriorityBinding&gt;，应使用&lt;xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29&gt;签名。&lt;/xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29&gt; &lt;/xref:System.Windows.Data.PriorityBinding&gt; &lt;/xref:System.Windows.Data.MultiBinding&gt;</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>Identifies the destination property where the binding should be established.</source>
          <target state="translated">标识应在其中建立绑定的目标属性。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>The source property name or the path to the property used for the binding.</source>
          <target state="translated">源属性名称或用于绑定的属性的路径。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>Records the conditions of the binding.</source>
          <target state="translated">记录绑定的条件。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>This return value can be useful for error checking.</source>
          <target state="translated">此返回值可用于错误检查。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>Attaches a binding to this element, based on the provided binding object.</source>
          <target state="translated">将一个绑定附加到此元素，提供的绑定对象的基础。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>This method is a convenience method for calling &lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;, which passes the current instance as the &lt;xref:System.Windows.DependencyObject&gt;.</source>
          <target state="translated">此方法是调用&lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;，后者将当前实例作为&lt;xref:System.Windows.DependencyObject&gt;.&lt;/xref:System.Windows.DependencyObject&gt;传递&lt;/xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;的便捷方法</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>Identifies the property where the binding should be established.</source>
          <target state="translated">标识应在其中建立绑定的属性。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>Represents the specifics of the data binding.</source>
          <target state="translated">表示数据绑定的详细信息。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>Records the conditions of the binding.</source>
          <target state="translated">记录绑定的条件。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>This return value can be useful for error checking.</source>
          <target state="translated">此返回值可用于错误检查。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt; attached property for the provided element.</source>
          <target state="translated">设置的值&lt;xref:System.Windows.FrameworkElement.FlowDirection*&gt;附加属性提供的元素。&lt;/xref:System.Windows.FrameworkElement.FlowDirection*&gt;</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>This method supports attached property syntax for the &lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt; property, therefore allowing child elements of a provided &lt;xref:System.Windows.FrameworkElement&gt; to specify flow direction for the arrangement within their parent element.</source>
          <target state="translated">此方法支持的附加的属性语法&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;属性，从而使子元素提供的&lt;xref:System.Windows.FrameworkElement&gt;指定其父元素内的排列的数据流方向。&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>To set the value on the current &lt;xref:System.Windows.FrameworkElement&gt;, use the direct <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> accessor &lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;.</source>
          <target state="translated">对当前设置的值&lt;xref:System.Windows.FrameworkElement&gt;，使用 direct<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>访问器&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.FlowDirection%2A&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>The element that specifies a flow direction.</source>
          <target state="translated">指定数据流方向的元素。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>A value of the enumeration, specifying the direction.</source>
          <target state="translated">枚举，指定方向的值。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>Searches for a resource with the specified name and sets up a resource reference to it for the specified property.</source>
          <target state="translated">搜索具有指定名称的资源，并将设置对它的指定属性的资源引用。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>A resource reference is similar to the use of a <bpt id="p1">[</bpt>DynamicResource Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> in markup.</source>
          <target state="translated">资源引用相当于使用<bpt id="p1">[</bpt>DynamicResource 标记扩展<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>标记中。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis.</source>
          <target state="translated">资源引用创建提供根据延迟特定的运行时间的指定属性的值的内部表达式。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source>The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).</source>
          <target state="translated">该表达式将重新计算每当资源字典指示通过内部事件，更改的值或父级的当前元素 （父级更改会更改的字典查找路径）。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>The property to which the resource is bound.</source>
          <target state="translated">资源绑定到属性。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">资源的名称。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.FrameworkElement.Resources*&gt; property.</source>
          <target state="translated">返回序列化进程是否应序列化的内容&lt;xref:System.Windows.FrameworkElement.Resources*&gt;属性。&lt;/xref:System.Windows.FrameworkElement.Resources*&gt;</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>This will return <ph id="ph1">`true`</ph> as long as there is at least one keyed resource in the local &lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;.</source>
          <target state="translated">这将返回<ph id="ph1">`true`</ph>，只要本地&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.Resources%2A&gt;没有至少一个键控的资源</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.FrameworkElement.Resources*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Windows.FrameworkElement.Resources*&gt;属性值应序列化; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.Resources*&gt;</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.FrameworkElement.Style*&gt; property.</source>
          <target state="translated">返回序列化进程是否应序列化的内容&lt;xref:System.Windows.FrameworkElement.Style*&gt;属性。&lt;/xref:System.Windows.FrameworkElement.Style*&gt;</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source>This will return <ph id="ph1">`true`</ph> if the &lt;xref:System.Windows.Style&gt; is locally set.</source>
          <target state="translated">这将返回<ph id="ph1">`true`</ph>如果&lt;xref:System.Windows.Style&gt;本地设置。&lt;/xref:System.Windows.Style&gt;</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.FrameworkElement.Style*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Windows.FrameworkElement.Style*&gt;属性值应序列化; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.Style*&gt;</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.FrameworkElement.Triggers*&gt; property.</source>
          <target state="translated">返回序列化进程是否应序列化的内容&lt;xref:System.Windows.FrameworkElement.Triggers*&gt;属性。&lt;/xref:System.Windows.FrameworkElement.Triggers*&gt;</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`true`</ph> if the &lt;xref:System.Windows.FrameworkElement.Triggers%2A&gt; property is locally set.</source>
          <target state="translated">此方法返回<ph id="ph1">`true`</ph>如果&lt;xref:System.Windows.FrameworkElement.Triggers%2A&gt;属性本地设置。&lt;/xref:System.Windows.FrameworkElement.Triggers%2A&gt;</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.FrameworkElement.Triggers*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Windows.FrameworkElement.Triggers*&gt;属性值应序列化; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.FrameworkElement.Triggers*&gt;</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>Occurs when either the &lt;xref:System.Windows.FrameworkElement.ActualHeight<bpt id="p1">*</bpt>&gt; or the &lt;xref:System.Windows.FrameworkElement.ActualWidth<ept id="p1">*</ept>&gt; properties change value on this element.</source>
          <target state="translated">发生时任一&lt;&gt; <bpt id="p1">*</bpt>1&gt; 或&lt;&gt; <ept id="p1">*</ept>1&gt; 属性更改针对此元素的值。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</source>
          <target state="translated">直接路由的事件不遵循路由，而仅处理引发它们时对同一元素中。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an &lt;xref:System.Windows.EventTrigger&gt; in a style.</source>
          <target state="translated">直接路由的事件是否支持其他路由的事件行为︰ 它们支持的可访问的处理程序集合，并可用作&lt;xref:System.Windows.EventTrigger&gt;样式。&lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source>The layout system reads properties within the &lt;xref:System.Windows.SizeChangedEventArgs&gt; argument class of this event, to  determine whether the reported size changes should be considered significant.</source>
          <target state="translated">布局系统读取属性内的&lt;xref:System.Windows.SizeChangedEventArgs&gt;自变量类的此事件，以确定是否应将报告的大小更改视为重要。&lt;/xref:System.Windows.SizeChangedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>This allows the layout system or your control-specific layout implementations to avoid forcing a layout change due to visually imperceptible differences between old and new height or width values.</source>
          <target state="translated">这允许该布局系统或自己的特定于控件的布局实现不会强制执行布局更改由于直观地无法觉察旧和新的高度或宽度值之间的差异。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source>The imperceptible differences might be due to rounding or same-result calculations of a floating-point data types.</source>
          <target state="translated">无法觉察的差异可能是由于舍入或相同的结果计算的浮点数据类型。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_SizeChanged"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.SizeChangedEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.SizeChangedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_SizeChanged"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.SizeChangedEvent&gt;|  |路由策略 |直接 |  |委托 |&lt;xref:System.Windows.SizeChangedEventHandler&gt;|&lt;/xref:System.Windows.SizeChangedEventHandler&gt;&lt;/xref:System.Windows.FrameworkElement.SizeChangedEvent&gt;</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.SizeChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">标识<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.SizeChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">路由的事件标识符是在注册路由的事件时创建的。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用工具方法。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">可以使用这些标识符添加类处理程序。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">有关注册路由的事件的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">有关使用路由的事件标识符添加类处理程序的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>Occurs when the source value changes for any existing property binding on this element.</source>
          <target state="translated">对于任何现有的属性，在此元素上绑定源值更改时发生。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>This event creates an alias for the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; event that is raised by any &lt;xref:System.Windows.Data.Binding&gt; associated with this element.</source>
          <target state="translated">此事件创建一个别名&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;引发任何事件&lt;xref:System.Windows.Data.Binding&gt;与此元素关联。&lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SourceUpdated"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object SourceUpdated="eventHandler"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SourceUpdated"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object SourceUpdated="eventHandler"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>Gets or sets the style used by this element when it is rendered.</source>
          <target state="translated">获取或设置此元素呈现时所使用的样式。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>For controls, the current style is often provided by a default style from control theming, or from styles generally applied to controls of that type by resources at page or application level (an implicit style).</source>
          <target state="translated">对于控件，当前的样式是通常由控件主题中的默认样式或从样式通常应用于该类型的控件在页面或应用程序级别 （隐式样式） 的资源。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>This property does not set or return default (theme) styles, but it does return either an implicit style or an explicit style that is acting on the element.</source>
          <target state="translated">此属性不未设置或返回默认值 （主题） 样式，但它返回隐式样式或对元素执行显式样式。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>In the case of implicit or explicit styles, it does not matter whether the style is specified as a resource or defined locally.</source>
          <target state="translated">如果存在隐式或显式样式，它并不重要的样式是指定为资源还是本地定义。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>Setting the styles has some restrictions.</source>
          <target state="translated">设置样式有一些限制。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>You can reset the entire Style property to a new &lt;xref:System.Windows.Style&gt; at any time, which will force a layout recomposition.</source>
          <target state="translated">可以将整个的样式属性重置到新&lt;xref:System.Windows.Style&gt;任何时候，这将强制布局重新组合。&lt;/xref:System.Windows.Style&gt;</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>However, as soon as that style is placed in use by a loaded element, the &lt;xref:System.Windows.Style&gt; should be considered sealed.</source>
          <target state="translated">但是，只要该样式加载的元素，置于使用&lt;xref:System.Windows.Style&gt;应视为密封。&lt;/xref:System.Windows.Style&gt;</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>Attempting to make a change to any individual property of an in-use style (such as anything within the collection of &lt;xref:System.Windows.Style.Setters%2A&gt;) causes an exception to be thrown.</source>
          <target state="translated">尝试对正在使用样式任何单个属性进行更改 (如在集合内的任何内容&lt;xref:System.Windows.Style.Setters%2A&gt;) 将导致异常引发。&lt;/xref:System.Windows.Style.Setters%2A&gt;</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).</source>
          <target state="translated">在标记中定义样式被视为一旦加载从资源字典 （对于资源），或包含在页面加载 （对于内联样式），可使用。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>Style is a dependency property with special precedence.</source>
          <target state="translated">样式是具有特殊优先级依赖项属性。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source>The locally set style generally operates at the highest precedence in the property system.</source>
          <target state="translated">本地设置样式通常最高优先级会在运行属性系统。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>If the Style is null at this point, during loading the property system checks for implicit styles in local or application resources that specify that type.</source>
          <target state="translated">如果此时样式为 null，期间加载属性系统检查本地或应用程序指定该类型的资源中的隐式样式。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>If the style is still null after this step, then the acting style for presentation purposes generally comes from the default (theme) style, but the default style is not returned in the Style property value.</source>
          <target state="translated">在此步骤后，在样式为仍然为 null，然后演示文稿目的的有效样式通常来自于默认 （主题） 样式，但默认样式中的样式属性值将不返回。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>Styling and Templating<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>依赖项属性值优先级<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>或<bpt id="p2">[</bpt>样式和模板化<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Style"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Style="{resourceExtension styleResourceKey}"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlPropertyElementUsage_Style"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <bpt id="p3">&lt;a name="xamlValues_Style"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>resourceExtension<ept id="p4">*</ept>    One of the following: , or .</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Style"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object Style="{resourceExtension styleResourceKey}"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlPropertyElementUsage_Style"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 属性元素用法<bpt id="p3">&lt;a name="xamlValues_Style"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>resourceExtension<ept id="p4">*</ept>以下项之一:，或。      </target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>XAML 资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept>    The key that identifies the style being requested.</source>
          <target state="translated"><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept>标识所请求的样式的键。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>The key refers to an existing resource in a &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">键指一种&lt;xref:System.Windows.ResourceDictionary&gt;。&lt;/xref:System.Windows.ResourceDictionary&gt;中的现有资源</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Property element syntax is technically possible, but not recommended for most style scenarios.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 属性元素语法是从技术上讲是可行的但对于大多数样式方案不建议这样做。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Inline Styles and Templates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>内联样式和模板<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>A binding reference using  or &lt;xref:System.Windows.Data.Binding&gt; is also possible, but uncommon.</source>
          <target state="translated">绑定引用使用或&lt;xref:System.Windows.Data.Binding&gt;也是可行的但不常见。&lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Style"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.StyleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Style"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.StyleProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.StyleProperty&gt;</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve">
          <source>The applied, nondefault style for the element, if present.</source>
          <target state="translated">对于元素，如果存在适用的非默认样式。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">否则为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve">
          <source>The default for a default-constructed <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值为默认构造<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Style*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.Style*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.Style*&gt;</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*&gt; method.</source>
          <target state="translated">有关此成员的说明，请参阅&lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*&gt;方法。&lt;/xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*&gt;</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Windows.FrameworkElement&gt; instance is cast to an &lt;xref:System.Windows.Markup.IQueryAmbient&gt; interface.</source>
          <target state="translated">可以使用它时，才&lt;xref:System.Windows.FrameworkElement&gt;实例被强制转换为&lt;xref:System.Windows.Markup.IQueryAmbient&gt;接口。&lt;/xref:System.Windows.Markup.IQueryAmbient&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve">
          <source>The name of the requested ambient property.</source>
          <target state="translated">请求的环境属性的名称。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">propertyName</ph><ept id="p2">&lt;/code&gt;</ept> is available; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">propertyName</ph> <ept id="p2">&lt;/code&gt;</ept>可用; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve">
          <source>Gets or sets an arbitrary object value that can be used to store custom information about this element.</source>
          <target state="translated">获取或设置一个任意对象值，用于存储有关此元素的自定义信息。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve">
          <source>This property is analogous to Tag properties in other <ph id="ph1">[!INCLUDE[TLA#tla_ms](~/add/includes/tlasharptla-ms-md.md)]</ph> programming models, such as <ph id="ph2">[!INCLUDE[TLA#tla_vba](~/add/includes/ajax-current-ext-md.md)]</ph> or <ph id="ph3">[!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">此属性是类似于在其他标记属性<ph id="ph1">[!INCLUDE[TLA#tla_ms](~/add/includes/tlasharptla-ms-md.md)]</ph>编程模型，如<ph id="ph2">[!INCLUDE[TLA#tla_vba](~/add/includes/ajax-current-ext-md.md)]</ph>或<ph id="ph3">[!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve">
          <source>Tag is intended to provide a pre-existing property location where you can store some basic custom information about any &lt;xref:System.Windows.FrameworkElement&gt; without requiring you to subclass an element.</source>
          <target state="translated">标记旨在提供可以在其中存储有关任何一些基本自定义信息的预先存在的属性位置&lt;xref:System.Windows.FrameworkElement&gt;而无需你子类化元素。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source>Because this property takes an object, you would need to use the property element usage in order to set the Tag property in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> to anything other than an object with a known and built-in type converter, such as a string.</source>
          <target state="translated">因为此属性采用对象，你将需要使用属性元素用法，以便在设置标记属性<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>带已知和内置类型转换器，如字符串对象之外的任何内容。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source>Objects used in this manner are typically not within the standard <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> elements.</source>
          <target state="translated">在这种方式中使用的对象通常并不位于标准<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>命名空间，因此可能需要将命名空间映射到外部命名空间，以便作为引入<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>元素。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>XAML and Custom Classes for WPF<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>XAML 命名空间和 Namespace 映射为 WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>XAML 和 wpf 自定义类<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Tag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.TagProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Tag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.TagProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.TagProperty&gt;</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>The intended value.</source>
          <target state="translated">预期的值。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>This property has no default value.</source>
          <target state="translated">此属性没有任何默认值。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Tag*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.Tag*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.Tag*&gt;</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>Occurs when the target value changes for any property binding on this element.</source>
          <target state="translated">此元素上的任何属性绑定目标值发生更改时发生。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>This event creates an alias for the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; event that is raised by any &lt;xref:System.Windows.Data.Binding&gt; associated with this element.</source>
          <target state="translated">此事件创建一个别名&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;引发任何事件&lt;xref:System.Windows.Data.Binding&gt;与此元素关联。&lt;/xref:System.Windows.Data.Binding&gt; &lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms that the previous property value is now invalid according to any validation or caching scheme that the property or the data source support.</source>
          <target state="translated">这通常意味着，所讨论的绑定是一个双向绑定，且它的绑定的依赖项属性断言是现在根据任何验证或属性或数据源所支持的缓存方案无效以前的属性值。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>Use the event data of the TargetUpdated event to determine the specific property that is reporting the target value update.</source>
          <target state="translated">使用 TargetUpdated 事件的事件数据来确定报告目标值更新的特定属性。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_TargetUpdated"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object TargetUpdated="eventHandler"/&gt;   ```</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_TargetUpdated"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object TargetUpdated="eventHandler"/&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source>Gets a reference to the template parent of this element.</source>
          <target state="translated">获取对此元素的模板父级的引用。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source>This property is not relevant if the element was not created through a template.</source>
          <target state="translated">如果未通过模板创建元素，则此属性无关。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source>TemplatedParent is frequently <ph id="ph1">`null`</ph> for objects that are created in your application markup or code.</source>
          <target state="translated">TemplatedParent 通常是<ph id="ph1">`null`</ph>在你的应用程序标记或代码中创建的对象。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve">
          <source>This is because you create those objects directly, not via a template.</source>
          <target state="translated">这是因为你的那些对象直接创建，不是通过模板。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>Object references obtained by walking the logical tree from the root, or by typical name references, do not come from a template.</source>
          <target state="translated">对象获取通过从根，遍历逻辑树，或者典型名称引用的引用，不是来自模板。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>Cases where TemplatedParent might not be <ph id="ph1">`null`</ph> include operations such as hit-testing, event handling for certain low-level input events, walking the visual tree with &lt;xref:System.Windows.Media.VisualTreeHelper&gt;, or working with enumerators, which might return elements that came from templates.</source>
          <target state="translated">情况下可能不是 TemplatedParent<ph id="ph1">`null`</ph>包括操作，例如命中测试，某些低级别的输入事件，遍历与的可视化树的事件处理&lt;xref:System.Windows.Media.VisualTreeHelper&gt;，或使用枚举器，这可能会返回来自模板的元素。&lt;/xref:System.Windows.Media.VisualTreeHelper&gt;</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>Another case is if you specifically call &lt;xref:System.Windows.FrameworkTemplate.FindName%2A&gt; against an existing &lt;xref:System.Windows.FrameworkTemplate&gt; and are work with the returned object.</source>
          <target state="translated">另一种是如果你明确调用&lt;xref:System.Windows.FrameworkTemplate.FindName%2A&gt;针对现有&lt;xref:System.Windows.FrameworkTemplate&gt;并且使用返回的对象。&lt;/xref:System.Windows.FrameworkTemplate&gt; &lt;/xref:System.Windows.FrameworkTemplate.FindName%2A&gt;</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>Templates are actually shared objects, where the contents of the template are created only once.</source>
          <target state="translated">模板是实际共享的对象，其中仅一次创建模板的内容。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve">
          <source>Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root.</source>
          <target state="translated">因此，如果你获取对来自模板的元素的对象引用，你可能会发现明显的逻辑树无法到达页面根。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve">
          <source>In order to connect such a template reference to the page's logical tree, you should get the TemplatedParent value and continue to navigate that element tree as desired.</source>
          <target state="translated">若要连接到该页面的逻辑树这样的模板引用，你应获取 TemplatedParent 值，然后继续根据需要该元素树中导航。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve">
          <source>The element whose <bpt id="p1">&lt;xref href="System.Windows.FrameworkTemplate"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Windows.FrameworkTemplate.VisualTree*&gt; caused this element to be created.</source>
          <target state="translated">元素其<bpt id="p1">&lt;xref href="System.Windows.FrameworkTemplate"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Windows.FrameworkTemplate.VisualTree*&gt;导致要创建此元素。&lt;/xref:System.Windows.FrameworkTemplate.VisualTree*&gt;</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve">
          <source>This value is frequently <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see Remarks.</source>
          <target state="translated">此值通常为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; 请参阅备注。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve">
          <source>Gets or sets the tool-tip object that is displayed for this element in the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">获取或设置此元素中显示的工具提示对象<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve">
          <source>If the value of this property is of type &lt;xref:System.Windows.Controls.ToolTip&gt;, then that value is the tool-tip that will be used in the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">如果此属性的值属于类型&lt;xref:System.Windows.Controls.ToolTip&gt;，则该值将用于工具提示<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>。&lt;/xref:System.Windows.Controls.ToolTip&gt;</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve">
          <source>If the value is of any other type, then that value will be used as the <bpt id="p1">*</bpt>content<ept id="p1">*</ept> for a &lt;xref:System.Windows.Controls.ToolTip&gt; provided (constructed) by the system.</source>
          <target state="translated">如果值为的任何其他类型，则该值将用作<bpt id="p1">*</bpt>内容<ept id="p1">*</ept>为&lt;xref:System.Windows.Controls.ToolTip&gt;提供 （构造） 系统。&lt;/xref:System.Windows.Controls.ToolTip&gt;</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Windows.Controls.ToolTipService&gt;.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Windows.Controls.ToolTipService&gt;。&lt;/xref:System.Windows.Controls.ToolTipService&gt;</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>The service class provides attached properties that can be used to further customize a &lt;xref:System.Windows.Controls.ToolTip&gt;.</source>
          <target state="translated">服务类提供了可用来进一步自定义一种&lt;xref:System.Windows.Controls.ToolTip&gt;。&lt;/xref:System.Windows.Controls.ToolTip&gt;的附加的属性</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_ToolTip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object ToolTip="toolTipContent"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlPropertyElementUsage_ToolTip"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph2">```   &lt;object&gt;     &lt;object.ToolTip&gt;       &lt;ToolTip .../&gt;     &lt;/object.ToolTip&gt;   &lt;/object&gt;   - or -   &lt;object&gt;     &lt;object.ToolTip&gt;       toolTipObjectContent     &lt;/object.ToolTip&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_ToolTip"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>toolTipContent<ept id="p4">*</ept>    A string that becomes the display text for the ToolTip.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_ToolTip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object ToolTip="toolTipContent"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlPropertyElementUsage_ToolTip"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 属性元素用法<ph id="ph2">```   &lt;object&gt;     &lt;object.ToolTip&gt;       &lt;ToolTip .../&gt;     &lt;/object.ToolTip&gt;   &lt;/object&gt;   - or -   &lt;object&gt;     &lt;object.ToolTip&gt;       toolTipObjectContent     &lt;/object.ToolTip&gt;   &lt;/object&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_ToolTip"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> # # XAML 值<bpt id="p4">*</bpt>toolTipContent<ept id="p4">*</ept>成为的工具提示的显示文本的字符串。            </target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>toolTipObjectContent<ept id="p1">*</ept>    Some object, provided in object element form, that should be used as the content for the &lt;xref:System.Windows.FrameworkElement&gt; .</source>
          <target state="translated"><bpt id="p1">*</bpt>经过<ept id="p1">*</ept>对象元素窗体，应该用作&lt;xref:System.Windows.FrameworkElement&gt;.&lt;/xref:System.Windows.FrameworkElement&gt;内容中提供的某些对象</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve">
          <source>Typically this would be a &lt;xref:System.Windows.FrameworkElement&gt; or some other element that creates layout compositing for the ToolTip, eventually containing text content within the compositing.</source>
          <target state="translated">通常这是&lt;xref:System.Windows.FrameworkElement&gt;或创建工具提示，最终包含文本内容在该组合中布局组合的一些其他元素。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve">
          <source>In this usage, the &lt;xref:System.Windows.Controls.ToolTip&gt; element is created implicitly from the parsed <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, and the <bpt id="p1">*</bpt>toolTipObjectContent<ept id="p1">*</ept> content is set as its &lt;xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">在这种用法，&lt;xref:System.Windows.Controls.ToolTip&gt;元素创建的隐式地从已分析<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>，和<bpt id="p1">*</bpt>经过<ept id="p1">*</ept>内容设置为其&lt;xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.ToolTip&gt;</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve">
          <source>&lt;<ph id="ph1">`ToolTip`</ph> .../&gt;    See &lt;xref:System.Windows.Controls.ToolTip&gt;.</source>
          <target state="translated"><ph id="ph1">`ToolTip`</ph>.../&gt;    See &lt;xref:System.Windows.Controls.ToolTip&gt;.&lt;/xref:System.Windows.Controls.ToolTip&gt;</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ToolTip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ToolTipProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ToolTip"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.ToolTipProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.FrameworkElement.ToolTipProperty&gt;</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve">
          <source>The tooltip object.</source>
          <target state="translated">工具提示的对象。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve">
          <source>See Remarks below for details on why this parameter is not strongly typed.</source>
          <target state="translated">有关为什么此参数不强类型的详细信息，请参阅下面的备注。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve">
          <source>Occurs just before any tooltip on the element is closed.</source>
          <target state="translated">关闭任何元素上的工具提示之前发生。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve">
          <source>Marking the ToolTipClosing event as handled does not cancel closing the tooltip.</source>
          <target state="translated">为已处理标记 ToolTipClosing 事件不会取消关闭工具提示。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve">
          <source>Once the tooltip is displayed, closing the tooltip is done only in response to user interaction with the UI.</source>
          <target state="translated">工具提示显示后，关闭工具提示是仅在响应用户交互，与 UI 中完成的。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve">
          <source>This event cannot be an &lt;xref:System.Windows.EventTrigger&gt; in a style.</source>
          <target state="translated">此事件不能为&lt;xref:System.Windows.EventTrigger&gt;样式。&lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve">
          <source>This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.</source>
          <target state="translated">这是因为此事件的标识符字段重新使用从服务不会公开为服务级别事件的添加/删除事件方法的实现。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ToolTipClosingEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Controls.ToolTipEventHandler&gt;|      -   Override &lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.ToolTipClosingEvent&gt;|  |路由策略 |直接 |  |委托 |&lt;xref:System.Windows.Controls.ToolTipEventHandler&gt;|     -重写&lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt;实现处理此事件在派生类中的类。&lt;/xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt; &lt;/xref:System.Windows.Controls.ToolTipEventHandler&gt; &lt;/xref:System.Windows.FrameworkElement.ToolTipClosingEvent&gt;</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">标识<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipClosing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">路由的事件标识符是在注册路由的事件时创建的。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用工具方法。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">可以使用这些标识符添加类处理程序。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">有关注册路由的事件的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">有关使用路由的事件标识符添加类处理程序的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve">
          <source>Occurs when any tooltip on the element is opened.</source>
          <target state="translated">打开任何工具提示在元素上的时发生。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve">
          <source>To prevent a tooltip from appearing in the UI, your handler for ToolTipOpening can mark the &lt;xref:System.Windows.Controls.ToolTipEventArgs&gt; event data handled.</source>
          <target state="translated">若要防止工具提示显示在 UI 中，你处理 ToolTipOpening 程序可以将标记&lt;xref:System.Windows.Controls.ToolTipEventArgs&gt;所处理的事件数据。&lt;/xref:System.Windows.Controls.ToolTipEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve">
          <source>Otherwise, the tooltip is displayed, using the value of the &lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt; property as the tooltip content.</source>
          <target state="translated">否则，显示工具提示，使用的值&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;属性作为工具提示的内容。&lt;/xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve">
          <source>Another possible scenario is that you could write a handler that resets the value of the &lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt; property for the element that is the event source, just before the tooltip is displayed.</source>
          <target state="translated">另一种情形是，你可以编写的处理程序的值重置&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;是事件源中，工具提示显示之前的元素的属性。&lt;/xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve">
          <source>ToolTipOpening will not be raised if the value of &lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt; is <ph id="ph1">`null`</ph> or otherwise unset.</source>
          <target state="translated">如果不会引发 ToolTipOpening 的值&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;是<ph id="ph1">`null`</ph>或其他取消设置。&lt;/xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve">
          <source>Do not deliberately set &lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt; to <ph id="ph1">`null`</ph> while a tooltip is open or opening; this will not have the effect of closing the tooltip, and will instead create an undesirable visual artifact in the UI.</source>
          <target state="translated">不要特意将&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;到<ph id="ph1">`null`</ph>时工具提示是打开的或者打开; 这不会关闭工具提示的效果，并改为将在 UI 中创建不需要的视觉假象。&lt;/xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve">
          <source>The ToolTipOpening event cannot be an &lt;xref:System.Windows.EventTrigger&gt; in a style.</source>
          <target state="translated">注册不能为&lt;xref:System.Windows.EventTrigger&gt;样式。&lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve">
          <source>This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.</source>
          <target state="translated">这是因为此事件的标识符字段重新使用从服务不会公开为服务级别事件的添加/删除事件方法的实现。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.ToolTipOpeningEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Controls.ToolTipEventHandler&gt;|      -   Override &lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt; to implement class handling for this event in derived classes.</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.ToolTipOpeningEvent&gt;|  |路由策略 |直接 |  |委托 |&lt;xref:System.Windows.Controls.ToolTipEventHandler&gt;|     -重写&lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt;实现处理此事件在派生类中的类。&lt;/xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt; &lt;/xref:System.Windows.Controls.ToolTipEventHandler&gt; &lt;/xref:System.Windows.FrameworkElement.ToolTipOpeningEvent&gt;</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">标识<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.ToolTipOpening"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">路由的事件标识符是在注册路由的事件时创建的。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用工具方法。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">可以使用这些标识符添加类处理程序。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">有关注册路由的事件的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">有关使用路由的事件标识符添加类处理程序的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.ToolTip*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.ToolTip*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.ToolTip*&gt;</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve">
          <source>Gets the collection of triggers established directly on this element, or in child elements.</source>
          <target state="translated">获取直接在此元素上或在子元素中建立的触发器的集合。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  This property can only be set in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> through the collection syntax shown, or by accessing the collection object and using its various methods such as Add.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>1&gt; 此属性仅在中设置<ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>通过集合语法所示，或通过访问的集合对象并使用它的各种方法，例如 Add。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source>The property to access the collection object itself is read-only, the collection itself is read-write.</source>
          <target state="translated">要访问集合对象本身的属性是只读的该集合本身是读写。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>The property only exists on root elements; attempting to find it or set it elsewhere will cause an exception to be thrown.</source>
          <target state="translated">仅存在于根元素; 上的属性尝试查找它或将其设置在其他位置将会导致引发异常。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve">
          <source>This property does not enable you to examine triggers that exist as part of styles in use on this element.</source>
          <target state="translated">此属性不允许你检查作为中此元素上使用的样式的一部分存在的触发器。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve">
          <source>It only reports the collection of triggers that are literally added to the collection, either in markup or code.</source>
          <target state="translated">它只报告的按其原义添加到集合，在标记或代码中的触发器的集合。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve">
          <source>Elements do not typically have such elements existing by default (through a template for instance); it is more common for triggers that come from control compositing to be established in styles instead.</source>
          <target state="translated">元素通常没有现有默认情况下此类元素 (通过模板的实例);很多常见的来自控件组合建立样式中的触发器。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve">
          <source>In terms of behavior (and trying to establish which effect came from which element's declared Triggers collection), both the triggering condition and the trigger effect might be on this element, or might be on its child elements in the logical tree.</source>
          <target state="translated">在行为 （以及尝试建立哪个效果来自哪个元素声明触发器集合），触发条件以及触发器产生什么影响可能会针对此元素，也可能对其逻辑树中的子元素。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve">
          <source>Note that if you use lifetime events such as &lt;xref:System.Windows.FrameworkElement.Loaded&gt; to get this collection, the child element's triggers might not yet be fully loaded, and the collection will be smaller than it would truly be at run time.</source>
          <target state="translated">请注意，如果您使用生存期事件如&lt;xref:System.Windows.FrameworkElement.Loaded&gt;若要获取此集合，子元素的触发器可能尚未进行完全加载，而且则集合将为小于在运行时将真正。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve">
          <source>Note that the collection of triggers established on an element only supports &lt;xref:System.Windows.EventTrigger&gt;, not property triggers (&lt;xref:System.Windows.Trigger&gt;).</source>
          <target state="translated">请注意，在元素上建立的触发器集合仅支持&lt;xref:System.Windows.EventTrigger&gt;，不属性触发器 (&lt;xref:System.Windows.Trigger&gt;)。&lt;/xref:System.Windows.Trigger&gt; &lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve">
          <source>If you require property triggers, you must place these within a style or template and then assign that style or template to the element either directly through the &lt;xref:System.Windows.FrameworkElement.Style%2A&gt; property, or indirectly through an implicit style reference.</source>
          <target state="translated">如果需要属性触发器，你必须将这些样式或模板中并将该样式或模板的元素或者直接通过&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;属性，或通过隐式样式引用间接。&lt;/xref:System.Windows.FrameworkElement.Style%2A&gt;</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_Triggers"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.Triggers&gt;       oneOrMoreTriggers     &lt;/object.Triggers&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Triggers"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreTriggers<ept id="p3">*</ept>    One or more defined &lt;xref:System.Windows.EventTrigger&gt; elements.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_Triggers"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性元素用法<ph id="ph1">```   &lt;object&gt;     &lt;object.Triggers&gt;       oneOrMoreTriggers     &lt;/object.Triggers&gt;   &lt;/object&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Triggers"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>oneOrMoreTriggers<ept id="p3">*</ept>一个或多个已定义&lt;xref:System.Windows.EventTrigger&gt;元素。&lt;/xref:System.Windows.EventTrigger&gt;      </target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve">
          <source>Each such trigger is expected to contain valid storyboard actions and references.</source>
          <target state="translated">每个此类触发器应包含有效的情节提要操作和引用。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve">
          <source>Note that this collection can only be established on the root element of a page.</source>
          <target state="translated">请注意此集合仅可以建立一个页的根元素上。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>情节提要概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve">
          <source>A strongly typed collection of <bpt id="p1">&lt;xref href="System.Windows.Trigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">强类型的集合<bpt id="p1">&lt;xref href="System.Windows.Trigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve">
          <source>Searches for a resource with the specified key, and returns that resource if found.</source>
          <target state="translated">资源中搜索具有指定键，并返回该资源，如果找到。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve">
          <source>If the resource is not found on the calling element, the parent resource tree is searched upward through the logical tree, in the same way that the tree would be searched if a resource were requested by key at run time.</source>
          <target state="translated">如果调用元素上未找到资源，在逻辑树向上搜索父资源树，在树的方法相同的资源请求时搜索由参数在运行时。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`null`</ph> only if no resource of that key existed anywhere in the resource tree, per the existing conditions of the tree at the time that TryFindResource is called.</source>
          <target state="translated">该方法返回<ph id="ph1">`null`</ph>仅该密钥的任何资源资源林中的任何位置都不存在，如果每次树的现有条件调用该 TryFindResource。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve">
          <source>Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.</source>
          <target state="translated">通常将立即强制转换为已尝试用返回的资源值进行设置的属性的类型的返回值。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt; method has similar behavior, except that it throws an exception if no resource with the provided key was returned.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt;方法具有类似的行为，只是返回具有提供的键的资源时，它会引发异常。&lt;/xref:System.Windows.FrameworkElement.FindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve">
          <source>The key identifier of the resource to be found.</source>
          <target state="translated">要找的资源键标识符。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve">
          <source>The found resource, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no resource with the provided <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p2">&lt;/code&gt;</ept> is found.</source>
          <target state="translated">找到的资源，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果利用所提供的任何资源<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p2">&lt;/code&gt;</ept>找到。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve">
          <source>Occurs when the element is removed from within an element tree of loaded elements.</source>
          <target state="translated">元素将从已加载的元素的元素树中删除时发生。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve">
          <source>Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</source>
          <target state="translated">直接路由的事件不遵循路由，而仅处理引发它们时对同一元素中。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve">
          <source>Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an &lt;xref:System.Windows.EventTrigger&gt; in a style.</source>
          <target state="translated">直接路由的事件是否支持其他路由的事件行为︰ 它们支持的可访问的处理程序集合，并可用作&lt;xref:System.Windows.EventTrigger&gt;样式。&lt;/xref:System.Windows.EventTrigger&gt;</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.FrameworkElement.Loaded&gt; and Unloaded might both be raised on controls as a result of user-initiated system theme changes.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;并卸载可能同时引发在用户启动的系统主题更改控件上。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve">
          <source>A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload.</source>
          <target state="translated">主题更改会导致控件模板和包含的可视化树，这反过来会导致整个控件，若要卸载并重新加载的失效。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve">
          <source>Therefore Unloaded cannot be assumed to occur only on navigation away from the page.</source>
          <target state="translated">因此不能假定卸载只会在导航离开页面。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve">
          <source>Note that the Unloaded event is not raised after an application begins shutting down.</source>
          <target state="translated">请注意在应用程序开始关闭后不会引发卸载事件。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve">
          <source>Application shutdown occurs when the condition defined by the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; property occurs.</source>
          <target state="translated">应用程序时，发生所定义的条件&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;属性出现。&lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve">
          <source>If you place cleanup code within a handler for the Unloaded event, such as for a &lt;xref:System.Windows.Window&gt; or a &lt;xref:System.Windows.Controls.UserControl&gt;, it may not be called as expected.</source>
          <target state="translated">如果你将为卸载事件处理程序内的清理代码的放置如&lt;xref:System.Windows.Window&gt;或&lt;xref:System.Windows.Controls.UserControl&gt;，它可能不会调用按预期方式。&lt;/xref:System.Windows.Controls.UserControl&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_Unloaded"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.UnloadedEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_Unloaded"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 路由事件信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.UnloadedEvent&gt;|  |路由策略 |直接 |  |委托 |&lt;xref:System.Windows.RoutedEventHandler&gt;|&lt;/xref:System.Windows.RoutedEventHandler&gt;&lt;/xref:System.Windows.FrameworkElement.UnloadedEvent&gt;</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Unloaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">标识<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Unloaded"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>路由的事件。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">路由的事件标识符是在注册路由的事件时创建的。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">这些标识符包含标识名称、 所有者类型、 处理程序类型、 路由策略和添加事件所有者的实用工具方法。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">可以使用这些标识符添加类处理程序。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve">
          <source>For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.</source>
          <target state="translated">有关注册路由的事件的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve">
          <source>For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.</source>
          <target state="translated">有关使用路由的事件标识符添加类处理程序的详细信息，请参阅&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;。&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve">
          <source>Simplifies access to the &lt;xref:System.Windows.NameScope&gt; de-registration method.</source>
          <target state="translated">简化了对访问&lt;xref:System.Windows.NameScope&gt;取消注册方法。&lt;/xref:System.Windows.NameScope&gt;</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve">
          <source>You only need to un-register names if you intend to re-register another element with that same name.</source>
          <target state="translated">您只需要取消注册名称到如果你想要重新注册该同名的另一个元素。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve">
          <source>Name of the name-object pair to remove from the current scope.</source>
          <target state="translated">从当前作用域中删除名称对象对中的名称。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve">
          <source>Reapplies the default style to the current <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">重新默认样式应用到当前<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether layout rounding should be applied to this element's size and position during layout.</source>
          <target state="translated">获取或设置一个值，该值指示是否布局舍入应应用到此元素的大小和位置布局。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve">
          <source>When the UseLayoutRounding property for an element is <ph id="ph1">`true`</ph>, all non-integral pixel values that are calculated during the &lt;xref:System.Windows.UIElement.Measure%2A&gt; and &lt;xref:System.Windows.UIElement.Arrange%2A&gt; passes are rounded to whole pixel values.</source>
          <target state="translated">当元素 UseLayoutRounding 属性是<ph id="ph1">`true`</ph>，过程中所计算的所有非整型像素值&lt;xref:System.Windows.UIElement.Measure%2A&gt;和&lt;xref:System.Windows.UIElement.Arrange%2A&gt;传递舍入为整数像素值。&lt;/xref:System.Windows.UIElement.Arrange%2A&gt; &lt;/xref:System.Windows.UIElement.Measure%2A&gt;</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve">
          <source>This property is inherited by child elements.</source>
          <target state="translated">此属性被继承的子元素。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You should set UseLayoutRounding to <ph id="ph2">`true`</ph> on the root element.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 应将设为 UseLayoutRounding<ph id="ph2">`true`</ph>根元素上。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve">
          <source>The layout system adds child coordinates to the parent coordinates; therefore, if the parent coordinates are not on a pixel boundary, the child coordinates are also not on a pixel boundary.</source>
          <target state="translated">布局系统将子坐标添加到父坐标中;因此，如果父坐标不像素边界上，子坐标也是像素边界上。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve">
          <source>If UseLayoutRounding cannot be set at the root, set &lt;xref:System.Windows.UIElement.SnapsToDevicePixels%2A&gt; on the child to obtain the effect that you want.</source>
          <target state="translated">如果不能在根目录设置 UseLayoutRounding，设置&lt;xref:System.Windows.UIElement.SnapsToDevicePixels%2A&gt;在的子活动以获取所需的效果。&lt;/xref:System.Windows.UIElement.SnapsToDevicePixels%2A&gt;</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve">
          <source>Drawing objects on pixel boundaries eliminates the semi-transparent edges that are produced by anti-aliasing, when an edge falls in the middle of a device pixel.</source>
          <target state="translated">对象绘制像素边界上消除了一条边不再处于中间设备像素时，生成的抗锯齿的半透明边缘。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve">
          <source>The following illustration shows the output of a single pixel-width line that falls in the middle of a device pixel.</source>
          <target state="translated">下图显示的单个像素宽度行的位置在设备像素的中间输出。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve">
          <source>The line on the left does not use layout rounding and is anti-aliased.</source>
          <target state="translated">在左侧的行不使用布局舍入，并且是消除锯齿。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve">
          <source>The line on the right uses layout rounding.</source>
          <target state="translated">在右侧的行使用布局舍入。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Anti&amp;#45;aliased line compared to single pixel line.<ept id="p1">]</ept><bpt id="p2">(~/add/media/pixelsnaplinecompare.PNG "</bpt>Anti-aliased line compared to single pixel line.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>消除锯齿的线与单像素线的比较。<ept id="p1">]</ept><bpt id="p2">(~/add/media/pixelsnaplinecompare.PNG "</bpt>消除锯齿的线与单像素线的比较。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve">
          <source>When you use layout rounding and &lt;xref:System.Windows.GridUnitType&gt; sizing, the layout system creates small variations in the column or row measurements to avoid subpixel rendering.</source>
          <target state="translated">当你使用布局舍入和&lt;xref:System.Windows.GridUnitType&gt;调整大小，该布局系统中的列或行的度量值以避免子像素呈现中创建小型变体。&lt;/xref:System.Windows.GridUnitType&gt;</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve">
          <source>For example, if a grid has a total width of 100 with 3 columns each of size &lt;xref:System.Windows.GridUnitType&gt;, instead of creating three columns that have an equal width of 33.3, the layout system creates 2 columns that have a width of 33 and one that has a width of 34.</source>
          <target state="translated">例如，如果一个网格，具有 100 具有 3 列每个大小的总宽度&lt;xref:System.Windows.GridUnitType&gt;，而不是创建三个列都具有 33.3 的相等宽度，该布局系统创建具有 33 到其中一个的宽度为 34 的宽度的 2 列。&lt;/xref:System.Windows.GridUnitType&gt;</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In .NET 4.6 changes were made to layout rounding to reduce instances of clipping in controls with borders.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph> 1&gt;.NET 4.6 中的更改布局舍入以减少带边框的控件中的剪切实例。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve">
          <source>By default, this feature is enabled if your Target Framework is .NET Framework 4.6 or higher.</source>
          <target state="translated">默认情况下，如果目标框架是.NET Framework 4.6 或更高版本启用此功能。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve">
          <source>Applications that target earlier versions of the framework can opt in into the new behavior by adding the following setting to an app.config file: <ph id="ph1">`&lt;runtime&gt;``&lt;AppContextSwitchOverrides      value="Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness=false"/&gt;``&lt;/runtime&gt;`</ph> The setting only takes effect when the application is running on the .NET Framework 4.6.</source>
          <target state="translated">面向的 framework 的早期版本的应用程序可以选择加入到新的行为通过将以下设置添加到 app.config 文件︰<ph id="ph1">`&lt;runtime&gt;``&lt;AppContextSwitchOverrides      value="Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness=false"/&gt;``&lt;/runtime&gt;`</ph>时在.NET Framework 4.6 上运行该应用程序后，该设置将仅将生效。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if layout rounding is applied; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应用了布局舍入;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.UseLayoutRounding*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.UseLayoutRounding*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.UseLayoutRounding*&gt;</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve">
          <source>Gets or sets the vertical alignment characteristics applied to this element when it is composed within a parent element such as a panel or items control.</source>
          <target state="translated">获取或设置应用到此元素时它由在父元素，如面板或项控件的垂直对齐特征。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; and &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; properties are explicitly set on an element, these measurements take layout precedent and cancel the regular effects of setting this property to &lt;xref:System.Windows.VerticalAlignment&gt;.</source>
          <target state="translated">在&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;和&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;上一个元素显式设置属性，这些度量值需要布局引用单元格，并且取消设置此属性设置为&lt;xref:System.Windows.VerticalAlignment&gt;.&lt;/xref:System.Windows.VerticalAlignment&gt;的正则效果&lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;&lt;/xref:System.Windows.FrameworkElement.Height%2A&gt;</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve">
          <source>VerticalAlignment is the <ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> property accessor for what is in reality a dependency property.</source>
          <target state="translated">VerticalAlignment 是<ph id="ph1">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph>它实际上是依赖项属性的属性访问器。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve">
          <source>This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly controls.</source>
          <target state="translated">此特定的依赖项属性非常普遍地具有派生的元素类，尤其是控件中以不同方式设置其原本"默认"值。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve">
          <source>This generally occurs in one of two ways: the dependency property is re-registered to a particular  derived class, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently.</source>
          <target state="translated">这通常发生在两种方式之一︰ 为特定的派生类中，但具有不同的元数据，用于设置其默认值; 重新注册依赖项属性或者应用了默认样式以不同方式设置的依赖项属性值。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve">
          <source>For example, the apparent "default" of VerticalAlignment for a &lt;xref:System.Windows.Controls.ComboBoxItem&gt; control will be &lt;xref:System.Windows.VerticalAlignment&gt;, even though &lt;xref:System.Windows.Controls.ComboBoxItem&gt; inherits VerticalAlignment direct from &lt;xref:System.Windows.FrameworkElement&gt;.</source>
          <target state="translated">例如，原本"默认"VerticalAlignment 为&lt;xref:System.Windows.Controls.ComboBoxItem&gt;控件将是&lt;xref:System.Windows.VerticalAlignment&gt;，即使&lt;xref:System.Windows.Controls.ComboBoxItem&gt;继承 VerticalAlignment 直接从&lt;xref:System.Windows.FrameworkElement&gt;.&lt;/xref:System.Windows.FrameworkElement&gt; &lt;/xref:System.Windows.Controls.ComboBoxItem&gt; &lt;/xref:System.Windows.VerticalAlignment&gt; &lt;/xref:System.Windows.Controls.ComboBoxItem&gt;</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve">
          <source>This is because that value was reset within the default style of &lt;xref:System.Windows.Controls.ComboBoxItem&gt;, within the style's control template.</source>
          <target state="translated">这是因为该值已重置中的默认样式&lt;xref:System.Windows.Controls.ComboBoxItem&gt;中的样式的控件模板。&lt;/xref:System.Windows.Controls.ComboBoxItem&gt;</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Controls.Canvas&gt; does not use VerticalAlignment when composing layout, because &lt;xref:System.Windows.Controls.Canvas&gt; is based on absolute positioning.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Canvas&gt;时不使用 VerticalAlignment 构成布局，因为&lt;xref:System.Windows.Controls.Canvas&gt;根据绝对定位。&lt;/xref:System.Windows.Controls.Canvas&gt;&lt;/xref:System.Windows.Controls.Canvas&gt;</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve">
          <source>When inherited by &lt;xref:System.Windows.Controls.ComboBoxItem&gt; or any derived classes, &lt;xref:System.Windows.Controls.ComboBoxItem&gt; redefines the default value of this property to be &lt;xref:System.Windows.VerticalAlignment&gt;.</source>
          <target state="translated">当由&lt;xref:System.Windows.Controls.ComboBoxItem&gt;或任何派生的类中，&lt;xref:System.Windows.Controls.ComboBoxItem&gt;将此属性才&lt;xref:System.Windows.VerticalAlignment&gt;.&lt;/xref:System.Windows.VerticalAlignment&gt;默认值重新定义&lt;/xref:System.Windows.Controls.ComboBoxItem&gt;&lt;/xref:System.Windows.Controls.ComboBoxItem&gt;继承</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_VerticalAlignment"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.VerticalAlignmentProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_VerticalAlignment"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.VerticalAlignmentProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt; &lt;/xref:System.Windows.FrameworkElement.VerticalAlignmentProperty&gt;</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve">
          <source>A vertical alignment setting.</source>
          <target state="translated">垂直对齐设置。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.VerticalAlignment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Windows.VerticalAlignment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.VerticalAlignment*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.VerticalAlignment*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.VerticalAlignment*&gt;</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve">
          <source>Gets the number of visual child elements within this element.</source>
          <target state="translated">获取此元素内可视子元素的数目。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.FrameworkElement&gt; implementation of VisualChildrenCount always returns either zero or one.</source>
          <target state="translated">&lt;xref:System.Windows.FrameworkElement&gt;的 VisualChildrenCount 实现始终返回零个或一个。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve">
          <source>Classes that maintain a visual child collection that might exceed one must override both this property and &lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;.</source>
          <target state="translated">维护可能超过&amp;1; 的可视子集合的类必须重写此属性和&lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve">
          <source>This property is generally used to determine the upper bounds of the current child collection for purposes of implementing the layout overrides (&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;, &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;).</source>
          <target state="translated">此属性通常用于确定当前的子集合，以便实现布局重写的上限 (&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;， &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;)。&lt;/xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve">
          <source>The number of visual child elements for this element.</source>
          <target state="translated">此元素的可视子元素的数目。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve">
          <source>Gets or sets the width of the element.</source>
          <target state="translated">获取或设置元素的宽度。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve">
          <source>This is one of three properties on &lt;xref:System.Windows.FrameworkElement&gt; that specify width information.</source>
          <target state="translated">这是一个三个属性上&lt;xref:System.Windows.FrameworkElement&gt;指定宽度的信息。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve">
          <source>The other two are &lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt; and &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;.</source>
          <target state="translated">另外两个是&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;和&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;。&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve">
          <source>If there is a conflict between these values, the order of application for actual width determination is first &lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt; must be honored, then &lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;, and finally if each of these are within bounds, Width.</source>
          <target state="translated">如果这些值之间没有冲突，应用程序实际宽度确定的顺序是︰ 首先&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;必须采用，然后&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;，最后如果每个都在限制之内，宽度。&lt;/xref:System.Windows.FrameworkElement.MaxWidth%2A&gt; &lt;/xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve">
          <source>The return value of this property is always the same as any value that was set to it.</source>
          <target state="translated">此属性的返回值始终是任何已设置为它的值相同。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve">
          <source>In contrast, the value of the &lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt; may vary.</source>
          <target state="translated">相反，值&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;可能会有所不同。&lt;/xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve">
          <source>The layout may have rejected the suggested size for some reason.</source>
          <target state="translated">布局可能已被拒绝的建议的大小出于某种原因。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve">
          <source>Also, the layout system itself works asynchronously relative to the property system set of Width and may not have processed that particular sizing property change yet.</source>
          <target state="translated">此外，布局系统本身相对于属性系统的集中的宽度以异步方式工作，可能不处理该特定的大小调整属性的更改。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve">
          <source>In addition to acceptable &lt;xref:System.Double&gt; values, this property can also be &lt;xref:System.Double.NaN?displayProperty=fullName&gt;.</source>
          <target state="translated">除了可接受&lt;xref:System.Double&gt;值，此属性也可能是&lt;xref:System.Double.NaN?displayProperty=fullName&gt;.&lt;/xref:System.Double.NaN?displayProperty=fullName&gt; &lt;/xref:System.Double&gt;</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve">
          <source>This is how you specify auto sizing behavior.</source>
          <target state="translated">这是如何指定自动调整大小行为。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> you set the value to the string "Auto" (case insensitive) to enable the auto sizing behavior.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>你设置的值为字符串"自动"（不区分大小写） 若要启用自动调整大小行为。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve">
          <source>Auto sizing behavior implies that the element will fill the width available to it.</source>
          <target state="translated">自动调整大小行为意味着元素将填满可用的宽度。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve">
          <source>Note however that specific controls frequently supply default values in their default styles that will disable the auto sizing behavior unless it is specifically re-enabled.</source>
          <target state="translated">但是请注意，特定的控件通常提供将禁用自动调整大小行为，除非专门重新启用了其默认样式中的默认值。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve">
          <source>In addition to the validation check, there is a nondeterministic upper value bound for Width that is enforced by the layout system (this is a very large number, larger than &lt;xref:System.Single.MaxValue?displayProperty=fullName&gt; but smaller than &lt;xref:System.Double.MaxValue?displayProperty=fullName&gt;).</source>
          <target state="translated">除了验证检查，还有由布局系统强制执行的宽度发往非确定性上限值 (这是非常大的数，大于&lt;xref:System.Single.MaxValue?displayProperty=fullName&gt;但小于&lt;xref:System.Double.MaxValue?displayProperty=fullName&gt;)。&lt;/xref:System.Double.MaxValue?displayProperty=fullName&gt; &lt;/xref:System.Single.MaxValue?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve">
          <source>If you exceed this bound, the element will not render, and no exception is thrown.</source>
          <target state="translated">如果超过此限制，该元素将不会呈现，并不会引发异常。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve">
          <source>Do not set Width to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.</source>
          <target state="translated">未设置为一个值，将显著大于任何可能的可视显示的最大大小的宽度或可能超出此非确定性的上限。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Width"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Width="double"/&gt;   - or –   &lt;object Width ="qualifiedDouble"/&gt;   - or -   &lt;object Width ="Auto"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Width"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>double<ept id="p3">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Width"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object Width="double"/&gt;   - or –   &lt;object Width ="qualifiedDouble"/&gt;   - or -   &lt;object Width ="Auto"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Width"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>double<ept id="p3">*</ept> &lt;xref:System.Double&gt;的字符串表示形式&lt;xref:System.Double&gt;值等于或大于 0.0。&lt;/xref:System.Double&gt; &lt;/xref:System.Double&gt;          </target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve">
          <source>See Remarks for upper bound information.</source>
          <target state="translated">以了解上限信息，请参阅备注。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve">
          <source>This value is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">此值解释为<ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]</ph>度量。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">字符串不需要显式包括位小数。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">例如，值的<ph id="ph1">`1`</ph>是可以接受的。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept>    A <bpt id="p2">*</bpt>double<ept id="p2">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept> A <bpt id="p2">*</bpt>double<ept id="p2">*</ept>该值，上文所述跟以下单位声明字符串之一︰ <ph id="ph1">`px`</ph>， <ph id="ph2">`in`</ph>， <ph id="ph3">`cm`</ph>， <ph id="ph4">`pt`</ph>。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id="ph3">`in`</ph> is inches; 1in==96px       <ph id="ph4">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id="ph5">`pt`</ph> is points; 1pt==(96/72) px       <ph id="ph6">`Auto`</ph>    Enables autosizing behavior.</source>
          <target state="translated"><ph id="ph1">`px`</ph>（默认值） 是<ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph><ph id="ph3">`in`</ph>为英寸; 1 英寸 = = 96px<ph id="ph4">`cm`</ph>是厘米; 1cm==(96/2.54) px<ph id="ph5">`pt`</ph>是点; 1pt==(96/72) px<ph id="ph6">`Auto`</ph>启用自动调整大小行为。       </target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">请参阅备注。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Width"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.FrameworkElement.WidthProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Width"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 依赖项属性信息 | | |  |-|-|  |标识符字段 |&lt;xref:System.Windows.FrameworkElement.WidthProperty&gt;|  |元数据属性设置为<ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt; &lt;/xref:System.Windows.FrameworkElement.WidthProperty&gt;</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve">
          <source>The width of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">元素的宽度，请在<ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">默认值是<ph id="ph1">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve">
          <source>This value must be equal to or greater than 0.0.</source>
          <target state="translated">此值必须等于或大于 0.0。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve">
          <source>See Remarks for upper bound information.</source>
          <target state="translated">以了解上限信息，请参阅备注。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.FrameworkElement.Width*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.FrameworkElement.Width*&gt;依赖项属性。&lt;/xref:System.Windows.FrameworkElement.Width*&gt;</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>