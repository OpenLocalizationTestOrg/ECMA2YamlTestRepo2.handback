<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d491a4cb6036a4c7716df25279936d32ae71dc42</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.IDesignerLoaderService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d693bc6abb190988b9af7be5f237e014f810cf9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a007a8e18afcaaefa9697dba57d731f153c4398</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an interface that can extend a designer loader to support asynchronous loading of external components.</source>
          <target state="translated">提供可以扩展设计器的加载程序，以支持异步加载的外部组件的接口。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt; can implement this interface to manage designer loading that involves external components.</source>
          <target state="translated">A&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;可以实现此接口可管理涉及外部组件的设计器加载。&lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This interface also allows external components to initiate a reload of the design surface by calling &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A&gt;.</source>
          <target state="translated">此接口还允许通过调用&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A&gt;启动重新加载设计图面的外部组件</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A designer loader does not have to implement this interface if it does not require support for asynchronous loading.</source>
          <target state="translated">设计器加载程序不需要实现此接口，如果不需要异步加载支持。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Designer loading using a custom implementation of the IDesignerLoaderService can occur in a variety of ways.</source>
          <target state="translated">设计器加载使用 IDesignerLoaderService 的自定义实现可以在各种不同的方式发生。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Sometimes external components are involved in the loading process.</source>
          <target state="translated">在加载过程中涉及有时外部组件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed.</source>
          <target state="translated">为了便于加载具有外部依赖项，设计器加载程序服务接口提供了一种机制，确定何时加载已完成，并允许负载，以指示它已完成的每个部分。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The IDesignerLoaderService typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining.</source>
          <target state="translated">IDesignerLoaderService 通常确定加载时通过测试的计数器，用于跟踪剩余的负载依赖关系的数量已完成。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When each portion of the load completes, &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt; is called, and the service decrements the counter.</source>
          <target state="translated">完成的负载每个部分后，&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;调用时，同时服务递减计数器。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To set the number of dependent load processes, call &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt; once for each load process that calls &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt; when its loading is complete.</source>
          <target state="translated">若要设置依赖加载进程的数量，请调用&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;一次针对调用每个负载进程&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;其加载过程何时完成。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt; &lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When the final loading is complete, the service calls &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt; on the loader host.</source>
          <target state="translated">最终加载完成时，服务调用&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt;加载程序主机上。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Registers an external component as part of the load process managed by this interface.</source>
          <target state="translated">将外部组件注册为此接口由管理在加载过程的一部分。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Call AddLoadDependency once for each external object participating in the load process.</source>
          <target state="translated">调用 AddLoadDependency 一次为每个参与加载过程的外部对象。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt; is called when the work of the load process is done.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;加载过程的工作都完成时调用。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Signals that a dependent load has finished.</source>
          <target state="translated">依赖加载已完成的信号。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This method is called to signal that a dependent loading operation has completed.</source>
          <target state="translated">调用此方法以发出信号依赖加载操作已完成。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Call DependentLoadComplete once for every process that was registered by calling &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;, which has already completed.</source>
          <target state="translated">为每个进程都已由调用注册一次调用 DependentLoadComplete &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;，已完成的。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the dependent load succeeds, the caller sets the <ph id="ph1">`successful`</ph> parameter to <ph id="ph2">`true`</ph> and passes either an empty collection or <ph id="ph3">`null`</ph> to the <ph id="ph4">`errorCollection`</ph> parameter.</source>
          <target state="translated">如果依赖加载成功，调用方集<ph id="ph1">`successful`</ph>参数<ph id="ph2">`true`</ph>并传递空集合或<ph id="ph3">`null`</ph>到<ph id="ph4">`errorCollection`</ph>参数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the dependent load encounters errors, the caller sets the <ph id="ph1">`successful`</ph> parameter to <ph id="ph2">`false`</ph> and passes a collection of exceptions that indicate the reason or reasons for failure to the <ph id="ph3">`errorCollection`</ph> parameter.</source>
          <target state="translated">如果依赖加载遇到错误，调用方将设置<ph id="ph1">`successful`</ph>参数<ph id="ph2">`false`</ph>并将传递的指示或多个与失败的原因的异常集合<ph id="ph3">`errorCollection`</ph>参数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the load of the designer is successful; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if errors prevented the load from finishing.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果成功，则设计器的负载<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果错误阻止从负载完成。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A collection of errors that occurred during the load, if any.</source>
          <target state="translated">如果有在加载期间，发生的错误的集合。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If no errors occurred, pass either an empty collection or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果没有发生任何错误，传递空集合或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Reloads the design document.</source>
          <target state="translated">将重新加载设计文档。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Any object can call this method to request that the loader reload the design document.</source>
          <target state="translated">任何对象都可以调用此方法来请求，加载程序重新加载设计文档。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the loader supports reloading and complies with the reload, the designer loader can return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">如果加载程序支持重新加载并执行重新加载，则设计器加载程序可以返回<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns <ph id="ph1">`false`</ph>, indicating that the reload will not occur.</source>
          <target state="translated">否则，它将返回<ph id="ph1">`false`</ph>，指示将不会发生重新加载。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.</source>
          <target state="translated">调用方不能依赖立即; 发生重新加载设计器加载程序可以计划这段时间，或它可以尝试重新加载一次。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The caller can display a message to the user if the designer cannot be reloaded.</source>
          <target state="translated">如果无法重新加载设计器，调用方可以向用户显示一条消息。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the reload request is accepted, or <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the loader does not allow the reload.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果重新加载请求被接受，或<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果加载程序不允许重新加载。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>