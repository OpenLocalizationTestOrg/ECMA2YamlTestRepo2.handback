<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">416ba610a36e8f44e4ef5a44cd4320b4376638ea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.DependencyPropertyChangedEventHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55df1bab884cb41b7ebfb53b908916ad3bdcf1f8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">84f6c1756c90319c8b61534b6d9eb32a601eed9a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the method that will handle events raised when a <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is changed on a particular <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">表示将处理事件的方法时引发<bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>更改对特定<bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实现。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This delegate is the handler signature for particular events that report dependency property changes.</source>
          <target state="translated">此委托是报告依赖项属性更改的特定事件的处理程序签名。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An event that uses this handler is exposed as a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event, not as a routed event.</source>
          <target state="translated">使用此处理程序的事件公开为<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>事件，不是路由事件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Typically these events follow the naming pattern <ph id="ph1">`Is(`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`)Changed`</ph>, where <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> is the &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt; of the property that changed.</source>
          <target state="translated">通常这些事件遵循命名模式<ph id="ph1">`Is(`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`)Changed`</ph>，其中<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept>是&lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;的已更改的属性。&lt;/xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The arguments of the event are used to query the old and new value of the property, as reported by the particular event.</source>
          <target state="translated">事件的自变量用来查询的属性的旧和新值由特定的事件报告。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Typically there is a 1:1 correspondence between properties that change and a particular event that reports the change.</source>
          <target state="translated">通常存在 1:1 的对应关系之间没有属性所做的更改和报告的更改的特定事件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It is also possible, though uncommon, to have the same event report changes to more than one property.</source>
          <target state="translated">也很有可能，但通常情况下具有相同的事件报告更改到多个属性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt; should be checked to determine the property that changed.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt;应检查以确定已更改的属性。&lt;/xref:System.Windows.DependencyPropertyChangedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The event data class &lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt; has a wider usage than just this delegate.</source>
          <target state="translated">事件数据类&lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt;比此委托只需使用更为广泛。&lt;/xref:System.Windows.DependencyPropertyChangedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt; is also used to communicate data for &lt;xref:System.Windows.PropertyChangedCallback&gt; implementations, which are part of the customization features and internals of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system, and by the &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt; virtual method, which can be overridden to provide class-specific notifications whenever any dependency property on the object changes.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt;此外用于通信的数据&lt;xref:System.Windows.PropertyChangedCallback&gt;实现，后者是自定义功能和内部结构的一部分的<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>属性系统，并通过&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;虚拟方法，可以重写以任何依赖项属性的对象上发生更改时提供特定于类的通知。&lt;/xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt; &lt;/xref:System.Windows.PropertyChangedCallback&gt;&lt;/xref:System.Windows.DependencyPropertyChangedEventArgs&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>