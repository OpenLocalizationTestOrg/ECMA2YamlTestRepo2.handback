<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">189542aedb51f4d3adb04936be56db8504c793f5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4edc4f3ad26f6e0a39e818e68ab7fe45fabf6d4b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d43d22ac2c9688487600bcb56ce48e6f6f6030b5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a way to expose a custom <bpt id="p1">&lt;xref href="System.Runtime.Caching.FileChangeMonitor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to a cache implementation.</source>
          <target state="translated">定义了如何公开自定义<bpt id="p1">&lt;xref href="System.Runtime.Caching.FileChangeMonitor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>向缓存实现的对象。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In ASP.NET, the IFileChangeNotificationSystem interface provides access to internal file-change notification management.</source>
          <target state="translated">在 ASP.NET 中，IFileChangeNotificationSystem 接口提供对内部的文件更改通知管理的访问。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The IFileChangeNotificationSystem interface is used internally by the &lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt; class.</source>
          <target state="translated">IFileChangeNotificationSystem 接口用于在内部的&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;类。&lt;/xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When a cache implementation runs in an ASP.NET application domain, ASP.NET implements an IFileChangeNotificationSystem interface through the &lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt; property.</source>
          <target state="translated">ASP.NET 缓存实现运行时在 ASP.NET 应用程序域中，实现通过 IFileChangeNotificationSystem 接口&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;属性。&lt;/xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt; class detects this property and uses the ASP.NET file-change notification system to evict cache entries based on file-change notification.</source>
          <target state="translated">&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;类检测此属性，并使用 ASP.NET 文件更改通知系统来收回基于文件更改通知的缓存条目。&lt;/xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In non-ASP.NET applications, there is no host environment that implements a custom IFileChangeNotificationSystem interface.</source>
          <target state="translated">在非 ASP.NET 应用程序，没有实现自定义的 IFileChangeNotificationSystem 接口任何主机环境。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>As a result, the &lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt; class uses the &lt;xref:System.IO.FileSystemWatcher&gt; class of the CLR.</source>
          <target state="translated">因此，&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;类使用&lt;xref:System.IO.FileSystemWatcher&gt;的 CLR 类。&lt;/xref:System.IO.FileSystemWatcher&gt; &lt;/xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Registers a file path to monitor with the host environment.</source>
          <target state="translated">注册一个文件路径以监视与主机环境。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This method is used by custom cache objects and custom change monitors that implement the host environment's &lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt; interface in order to register file paths for monitoring with the host environment.</source>
          <target state="translated">此方法使用由自定义缓存对象和自定义更改实现主机环境的监视器&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;接口，以便注册以使用主机环境进行监视的文件路径。&lt;/xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The StartMonitoring method is called by implementers of the &lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt; interface in order to register a file or directory for change monitoring.</source>
          <target state="translated">StartMonitoring 方法调用的实施者&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;接口，以便注册的文件或用于更改监视的目录。&lt;/xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The fully qualified physical path of a directory or file to monitor for changes.</source>
          <target state="translated">目录或文件用于监视更改的完全限定的物理路径。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A reference to a method that implements the <bpt id="p1">&lt;xref href="System.Runtime.Caching.OnChangedCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate.</source>
          <target state="translated">实现方法的引用<bpt id="p1">&lt;xref href="System.Runtime.Caching.OnChangedCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>委托。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When the monitored file or directory changes, the host environment's implementation of the <bpt id="p1">&lt;xref href="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface raises an event by calling the <bpt id="p2">&lt;xref href="System.Runtime.Caching.OnChangedCallback"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">监视的文件或目录发生更改时，宿主环境的实现<bpt id="p1">&lt;xref href="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接口通过调用来引发事件<bpt id="p2">&lt;xref href="System.Runtime.Caching.OnChangedCallback"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The state that is supplied by the host environment.</source>
          <target state="translated">由主机环境提供的状态。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Cache implementations and custom change monitors should treat the state value as opaque.</source>
          <target state="translated">缓存实现和自定义更改监视器应将状态的值视为不透明。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, the state must be stored so that it can be sent to the host environment when the cache implementation calls the &lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*&gt; method.</source>
          <target state="translated">但是，状态必须存储，以便可以将它发送给主机环境时的缓存实现调用&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*&gt;方法。&lt;/xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the last date and time that a write operation occurred on <ph id="ph1">`filePath`</ph>.</source>
          <target state="translated">此方法返回时，包含上次的日期和发生写入操作的时间<ph id="ph1">`filePath`</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数传递时未经初始化。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This parameter is returned from the host environment.</source>
          <target state="translated">从主机环境时返回此参数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the total size of the monitored <ph id="ph1">`filePath`</ph>.</source>
          <target state="translated">此方法返回时，包含所监视的总大小<ph id="ph1">`filePath`</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数传递时未经初始化。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This parameter is returned from the host environment.</source>
          <target state="translated">从主机环境时返回此参数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Ends change monitoring.</source>
          <target state="translated">结束更改监视。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The StopMonitoring method must be called by custom caches and custom change monitors that are being disposed by the host environment in order to stop monitoring file paths and directories.</source>
          <target state="translated">必须由自定义缓存和正在停止监视文件路径和目录以释放由宿主环境的自定义更改监视器调用 StopMonitoring 方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The path of the file or folder to stop monitoring.</source>
          <target state="translated">文件或要停止监视文件夹的路径。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This should match a file path value that was passed in an earlier call to the &lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*&gt; method.</source>
          <target state="translated">这应匹配到的早期调用中传递一个文件路径值&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*&gt;方法。&lt;/xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The state information that was originally supplied by the host environment during an earlier call to the &lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*&gt; method.</source>
          <target state="translated">在以前调用期间最初由主机环境提供的状态信息&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*&gt;方法。&lt;/xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>