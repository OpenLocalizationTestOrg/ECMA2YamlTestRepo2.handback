<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3879dff58eef3d0d6efdd86a9ed8f904e6ea75d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Configuration.ConfigurationSection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2e07e7d827e46b2df7e8283485db50a6ce7bd21</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c52b8de475b54e47b623b22e18b540087d1d546</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a section within a configuration file.</source>
          <target state="translated">表示一个配置文件中的节。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You use the ConfigurationSection class to implement a custom section type.</source>
          <target state="translated">ConfigurationSection 类用于实现自定义部分类型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Extend the ConfigurationSection class to provide custom handling and programmatic access to custom configuration sections.</source>
          <target state="translated">扩展 ConfigurationSection 类，以提供自定义处理和以编程方式访问自定义配置节。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For information about how use custom configuration sections, see <bpt id="p1">[</bpt>How to: Create Custom Configuration Sections Using ConfigurationSection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">了解如何使用自定义配置节，请参阅<bpt id="p1">[</bpt>如何︰ 创建自定义配置节使用 ConfigurationSection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A section registers its handling type with an entry in the <ph id="ph1">`configSections`</ph> element.</source>
          <target state="translated">部分将其处理类型注册中的条目<ph id="ph1">`configSections`</ph>元素。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For an example, see the configuration file excerpt shown in the Example section.</source>
          <target state="translated">有关示例，请参阅示例部分中所示配置文件摘要。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In previous versions of the .NET Framework, configuration section handlers were used to make changes to configuration settings programmatically.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 在以前版本的.NET Framework 中，配置节处理程序用于配置设置进行更改以编程方式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Now, all the default configuration sections are represented by classes that extend the ConfigurationSection class.</source>
          <target state="translated">现在，由扩展 ConfigurationSection 类的类表示所有默认配置节。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To use the ConfigurationSection constructor, you need to define a custom section type first.</source>
          <target state="translated">若要使用 ConfigurationSection 构造函数，你必须首先定义自定义部分类型。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For an example see the &lt;xref:System.Configuration.ConfigurationSection&gt; class overview.</source>
          <target state="translated">有关示例请参阅&lt;xref:System.Configuration.ConfigurationSection&gt;类概述。&lt;/xref:System.Configuration.ConfigurationSection&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Reads XML from the configuration file.</source>
          <target state="translated">从配置文件读取 XML。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Deserialization refers to the reading of XML data from a configuration file, its transformation into real-time data, and its storage in an object.</source>
          <target state="translated">从配置文件、 数据转换为实时数据和对象中的其存储情况下，反序列化向正在读取的 XML 数据的引用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; object, which reads from the configuration file.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;对象，从配置文件中读取。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> found no elements in the configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>在配置文件中找到任何元素。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns a custom object when overridden in a derived class.</source>
          <target state="translated">返回在派生类中重写时的自定义对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Configuration.Configuration.GetSection%2A&gt; method is called at run time, the configuration system first creates an appropriate instance of the &lt;xref:System.Configuration.ConfigurationSection&gt; class, and then returns the object it obtains from the GetRuntimeObject method.</source>
          <target state="translated">当&lt;xref:System.Configuration.Configuration.GetSection%2A&gt;方法调用在运行时，配置系统首先创建的相应实例&lt;xref:System.Configuration.ConfigurationSection&gt;类，然后返回它从 GetRuntimeObject 方法获取的对象。&lt;/xref:System.Configuration.ConfigurationSection&gt; &lt;/xref:System.Configuration.Configuration.GetSection%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By default, GetRuntimeObject simply returns the object that represents the &lt;xref:System.Configuration.ConfigurationSection&gt; from which it is called.</source>
          <target state="translated">默认情况下，GetRuntimeObject 只返回该对象表示&lt;xref:System.Configuration.ConfigurationSection&gt;从中调用该。&lt;/xref:System.Configuration.ConfigurationSection&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The object representing the section.</source>
          <target state="translated">表示部分中的对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.</source>
          <target state="translated">指示是否由于上次保存或加载在派生类中实现时，已被修改此配置元素。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element has been modified; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果已修改的元素;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Resets the value of the &lt;xref:System.Configuration.ConfigurationElement.IsModified*&gt; method to <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when implemented in a derived class.</source>
          <target state="translated">值重置&lt;xref:System.Configuration.ConfigurationElement.IsModified*&gt;方法<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>在派生类中实现时&lt;/xref:System.Configuration.ConfigurationElement.IsModified*&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Configuration.SectionInformation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the non-customizable information and functionality of the <bpt id="p2">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.Configuration.SectionInformation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，其中包含的非自定义的信息和功能<bpt id="p2">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Configuration.SectionInformation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the non-customizable information and functionality of the <bpt id="p2">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Configuration.SectionInformation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含的非自定义的信息和功能<bpt id="p2">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Creates an XML string containing an unmerged view of the <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object as a single section to write to a file.</source>
          <target state="translated">创建包含的未合并的视图的 XML 字符串<bpt id="p1">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象作为一个单个的部分，以便向文件写入。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Serialization refers to the transformation of real-time data, contained in an object, to XML format and its storage to a configuration file.</source>
          <target state="translated">序列化是指为 XML 格式并将其存储到配置文件对象中包含的实时数据的转换。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance to use as the parent when performing the un-merge.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Configuration.ConfigurationElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>实例执行取消合并时，使用与父项。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The name of the section to create.</source>
          <target state="translated">要创建的部分名称。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationSaveMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance to use when writing to a string.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Configuration.ConfigurationSaveMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>写入到字符串时要使用的实例。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An XML string containing an unmerged view of the <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">包含的未合并的视图的 XML 字符串<bpt id="p1">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified element should be serialized when the configuration object hierarchy is serialized for the specified target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">指示指定的目标版本的序列化配置对象层次结构时，是否应序列化指定的元素<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Each configuration section that is created for the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> and later versions must explicitly override this method and return <ph id="ph2">`true`</ph>, but only if the specified element is valid for the specified version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">为创建每个配置节<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>和更高版本必须显式重写此方法并返回<ph id="ph2">`true`</ph>，但仅当指定的元素是有效的指定版本<ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Existing configuration sections that were created for earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> do not have to be changed.</source>
          <target state="translated">对于的早期版本创建的现有配置节<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>无需更改。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The base type contains a default implementation of this method that always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">基类型包含始终返回此方法的默认实现<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you implement a configuration section and you do not override this method, by default all configuration elements that are contained in the configuration section will be serialized for all framework versions.</source>
          <target state="translated">如果您实施一个配置节，且不重写此方法，则默认情况下配置节组中包含的所有配置元素将为所有的 framework 版本进行序列都化。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is a candidate for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Configuration.ConfigurationElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>适合于序列化的对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object as it occurs in XML.</source>
          <target state="translated">名称<bpt id="p1">&lt;xref href="System.Configuration.ConfigurationElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，如其出现在 XML 中。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">目标版本<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">element</ph><ept id="p2">&lt;/code&gt;</ept> should be serialized; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">element</ph> <ept id="p2">&lt;/code&gt;</ept>序列化; 否则为应为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified property should be serialized when the configuration object hierarchy is serialized for the specified target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">指示指定的目标版本的序列化配置对象层次结构时，是否应序列化指定的属性<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Each configuration section that is created for the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> and later versions must explicitly override this method and return <ph id="ph2">`true`</ph>, but only if the specified property is valid for the specified version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">为创建每个配置节<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>和更高版本必须显式重写此方法并返回<ph id="ph2">`true`</ph>，但仅当指定的属性是有效的指定版本<ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Existing configuration sections that were created for earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> do not have to be changed.</source>
          <target state="translated">对于的早期版本创建的现有配置节<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>无需更改。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The base type contains a default implementation of this method that always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">基类型包含始终返回此方法的默认实现<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you implement a configuration section and you do not override this method, by default all configuration properties that are contained in the configuration section will be serialized for all framework versions.</source>
          <target state="translated">如果您实施一个配置节，且不重写此方法，则默认情况下配置节组中包含的所有配置属性将为所有的 framework 版本进行序列都化。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is a candidate for serialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Configuration.ConfigurationProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>适合于序列化的对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object as it occurs in XML.</source>
          <target state="translated">名称<bpt id="p1">&lt;xref href="System.Configuration.ConfigurationProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象，如其出现在 XML 中。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">目标版本<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The parent element of the property.</source>
          <target state="translated">父元素的属性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">property</ph><ept id="p2">&lt;/code&gt;</ept> should be serialized; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">property</ph> <ept id="p2">&lt;/code&gt;</ept>序列化; 否则为应为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Indicates whether the current <bpt id="p1">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">指示是否当前<bpt id="p1">&lt;xref href="System.Configuration.ConfigurationSection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>配置对象层次结构进行序列化指定的目标版本时，实例应进行序列化<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Each configuration section that is created for the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> and later versions must explicitly override this method and return <ph id="ph2">`true`</ph>, but only if the configuration section is valid for the specified version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">为创建每个配置节<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>和更高版本必须显式重写此方法并返回<ph id="ph2">`true`</ph>，但仅当配置部分是否为指定的版本的有效<ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Existing configuration sections that were created for earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> do not have to be changed.</source>
          <target state="translated">对于的早期版本创建的现有配置节<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>无需更改。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The base type contains a default implementation of this method that always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">基类型包含始终返回此方法的默认实现<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you implement a configuration section and you do not override this method, by default the configuration section will be serialized for all framework versions.</source>
          <target state="translated">如果您实施一个配置节，且不重写此方法，则默认情况下的配置节将针对所有版本的框架进行序列化。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">目标版本<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current section should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应序列化当前的部分;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>