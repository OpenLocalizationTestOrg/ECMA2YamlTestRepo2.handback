<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd8c022c18cf075b36deeb6c13cece8367e7e594</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.Design.EventHandlerService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">313ffb37298fe001a5f2235bfc26208eda1fd971</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">750d8ff63b3031ae03009f7eeb74a8527f04dc48</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a systematic way to manage event handlers for the current document.</source>
          <target state="translated">提供的系统化方法来管理当前文档的事件处理程序。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Developers may want to be able to write code in one place that handles events of a certain type.</source>
          <target state="translated">开发人员可能想要能够在处理事件的特定类型的一个位置中编写代码。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Also, developers may need to globally change the behavior of the handlers for specific events or types of events, which may be distributed among designer components.</source>
          <target state="translated">此外，开发人员可能需要全局更改特定事件或类型的可能分布在设计器组件的事件处理程序的行为。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The designers for a typical project are many different objects so it can be useful to list and store reference to these events from a common place.</source>
          <target state="translated">典型的项目的设计器是许多不同的对象，因此它可用于列出并存储对这些事件中的一个常见位置引用。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This service implements an "event stack" that contains the current set of event handlers.</source>
          <target state="translated">此服务实现"事件堆栈"包含的事件处理程序当前集。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The stack may have a variety of different types of handlers on the stack.</source>
          <target state="translated">堆栈可能会带来各种不同类型的处理程序堆栈。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, a designer might push, or add, a keyboard handler and a mouse handler onto the stack.</source>
          <target state="translated">例如，设计器可能推送，或添加、 键盘处理程序和到堆栈上的鼠标处理。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When a designer requests an event handler, the service will find the topmost handler on the stack that matches the class you requested.</source>
          <target state="translated">当设计器请求事件处理程序时，则服务将您请求的类匹配的堆栈上找到的最顶层的处理程序。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This way the service can be extended to any eventing scheme, and it also allows specific types of event handlers to be replaced.</source>
          <target state="translated">服务可以扩展到任何事件处理方案，这种方式，它还允许特定类型的事件处理程序要替换。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, you can replace mouse event handlers without affecting menu event handlers or keyboard event handlers.</source>
          <target state="translated">例如，你可以替换鼠标事件处理程序，而不会影响菜单事件处理程序或键盘事件处理程序。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.Design.EventHandlerService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Windows.Forms.Design.EventHandlerService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> which is being designed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>正在设计的。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Fires an OnEventHandlerChanged event.</source>
          <target state="translated">触发 OnEventHandlerChanged 事件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets the control to which event handlers are attached.</source>
          <target state="translated">获取处理程序附加到的事件的控件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> which was attached through the constructor.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>附加通过构造函数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the currently active event handler of the specified type.</source>
          <target state="translated">获取指定类型的当前处于活动状态的事件处理程序。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You should never cache this value because other components are free to change it.</source>
          <target state="translated">因为其他组件可以自由地对其进行更改，你应该永远不会缓存此值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This call is fairly quick, however, especially for cases when you are always asking for the same type of handler.</source>
          <target state="translated">此调用速度相当快，但是，尤其是对于情况下当则始终要求为相同类型的处理程序。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The type of the handler to get.</source>
          <target state="translated">要获取的处理程序的类型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An instance of the handler, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no handler of the requested type.</source>
          <target state="translated">处理程序中，实例或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果请求的类型没有处理程序。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Pops the given handler off of the stack.</source>
          <target state="translated">弹出从堆栈中移出给定的处理程序。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the handler is not the topmost component on the stack, this will pop all handlers up to and including handler.</source>
          <target state="translated">如果处理程序不是堆栈上的最顶层组件，这将会弹出所有达的处理程序和包括的处理程序。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The handler to remove from the stack.</source>
          <target state="translated">要从堆栈中移除的处理程序。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Pushes a new event handler on the stack.</source>
          <target state="translated">在堆栈上推送新的事件处理程序。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This handler will be used by all components that request a compatible handler type.</source>
          <target state="translated">此处理程序将可供请求兼容的处理程序类型的所有组件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If this handler does not support the requested type, the next handler on the stack will be used.</source>
          <target state="translated">如果此处理程序不支持所请求的类型，将使用在堆栈上的下一步处理程序。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The handler to add to the stack.</source>
          <target state="translated">要添加到堆栈的处理程序。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>