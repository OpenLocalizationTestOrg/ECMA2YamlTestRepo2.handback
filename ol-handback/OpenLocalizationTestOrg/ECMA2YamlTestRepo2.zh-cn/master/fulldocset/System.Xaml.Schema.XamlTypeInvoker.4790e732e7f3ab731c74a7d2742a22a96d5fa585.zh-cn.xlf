<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f46f26f817ff4ccf6cdac6af6745ea987544feb4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.Schema.XamlTypeInvoker.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af7cdd99383e14ee3f309c55e97ecc42788155b6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ed2f65b53c0363f360d41a10ec4c1b54e4ec8cb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</source>
          <target state="translated">提供一个扩展点，它可以构造通过反射和构造函数以外的技术将 XAML 类型的实例。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The purpose of XamlTypeInvoker is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through &lt;xref:System.Type&gt; and &lt;xref:System.Reflection.MemberInfo&gt;, and so on.</source>
          <target state="translated">XamlTypeInvoker 的目的是启用可扩展的 XAML 类型系统、 架构和一个有效的运行时不依赖于完全 CLR 功能，例如 CLR 特性，通过反射信息&lt;xref:System.Type&gt;和&lt;xref:System.Reflection.MemberInfo&gt;，依次类推。&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Subclasses of XamlTypeInvoker are used as input parameters for the alternate constructors of XAML schema classes such as &lt;xref:System.Xaml.XamlType&gt;.</source>
          <target state="translated">XAML 的架构类，例如&lt;xref:System.Xaml.XamlType&gt;.&lt;/xref:System.Xaml.XamlType&gt;的备用构造函数的 XamlTypeInvoker 子类使用作为输入参数</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You subclass &lt;xref:System.Xaml.XamlType&gt; and pass the XamlTypeInvoker through to the base constructor.</source>
          <target state="translated">你可以子类&lt;xref:System.Xaml.XamlType&gt;并将通过 XamlTypeInvoker 传递到基构造函数。&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Along with defining a XamlTypeInvoker for the constructor, you must also provide overrides for at least some of the <ph id="ph1">`Lookup`</ph> methods of &lt;xref:System.Xaml.XamlType&gt;.</source>
          <target state="translated">以及定义构造函数 XamlTypeInvoker，你还必须提供替代至少的一些<ph id="ph1">`Lookup`</ph> &lt;xref:System.Xaml.XamlType&gt;.&lt;/xref:System.Xaml.XamlType&gt;方法</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>XamlTypeInvoker has a default implementation.</source>
          <target state="translated">XamlTypeInvoker 具有默认的实现。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The default implementation follows a similar model to the default implementation of XAML schema types &lt;xref:System.Xaml.XamlType&gt; and &lt;xref:System.Xaml.XamlMember&gt;: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, &lt;xref:System.Type&gt; and &lt;xref:System.Reflection.MemberInfo&gt;, and so on.</source>
          <target state="translated">默认实现到 XAML 架构类型的默认实现中遵循类似的模型&lt;xref:System.Xaml.XamlType&gt;和&lt;xref:System.Xaml.XamlMember&gt;: CLR 类型系统用于实例化、 值和查找操作，包括使用 CLR 特性&lt;xref:System.Type&gt;和&lt;xref:System.Reflection.MemberInfo&gt;，依次类推。&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Type&gt; &lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>XamlTypeInvoker provides methods for basic instantiation (&lt;xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A&gt;) and methods that are relevant for types where the &lt;xref:System.Xaml.XamlType&gt; represents a collection, dictionary or array (&lt;xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A&gt;; &lt;xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A&gt;; &lt;xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A&gt;; &lt;xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A&gt;; &lt;xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A&gt;).</source>
          <target state="translated">XamlTypeInvoker 提供基本实例化 (&lt;xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A&gt;) 的方法和方法的相关类型&lt;xref:System.Xaml.XamlType&gt;其中表示集合、 字典或数组 (&lt;xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A&gt;;&lt;xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A&gt;;&lt;xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A&gt;;&lt;xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A&gt;;&lt;xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A&gt;).&lt;/xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A&gt;&lt;/xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A&gt;&lt;/xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A&gt;&lt;/xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A&gt;&lt;/xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A&gt;&lt;/xref:System.Xaml.XamlType&gt;&lt;/xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The default implementation is empty.</source>
          <target state="translated">默认实现为空。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This constructor is invoked internally to provide a value for &lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A&gt;.</source>
          <target state="translated">内部调用此构造函数来为&lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A&gt;.&lt;/xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A&gt;提供值</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For a &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; subclass, it is expected that you either use the &lt;xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29&gt; signature for construction or provide an override that calls &lt;xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29&gt; as base.</source>
          <target state="translated">有关&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;子类化，请应或者使用&lt;xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29&gt;构造的签名或提供重写调用&lt;xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29&gt;作为基础。&lt;/xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29&gt; &lt;/xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29&gt; &lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Providing the &lt;xref:System.Xaml.XamlType&gt; implements a default pattern where &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; is immutable.</source>
          <target state="translated">提供&lt;xref:System.Xaml.XamlType&gt;实现的默认模式 where&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;不可变。&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, based on a provided <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，基于所提供<bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This constructor is called internally based on the &lt;xref:System.Xaml.XamlType&gt; where the &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; is used for construction.</source>
          <target state="translated">此构造函数调用，内部根据&lt;xref:System.Xaml.XamlType&gt;其中&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;用于构造。&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`type`</ph> provided here is relevant to all other method calls for &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;.</source>
          <target state="translated"><ph id="ph1">`type`</ph>提供下面是与所有其他方法调用以&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;.&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for the specific XAML type relevant to this <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>值与此相关的特定 XAML 类型<bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Adds the provided item to an instance of the type that is relevant to this <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将所提供的项添加到与此相关的类型的实例<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You should only call this method on a &lt;xref:System.Xaml.XamlType&gt; that represents a collection.</source>
          <target state="translated">仅应在调用此方法&lt;xref:System.Xaml.XamlType&gt;表示的集合。&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An instance of the type specified by the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used for constructing this <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">由指定的类型的实例<bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用于构造此<bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The item to add.</source>
          <target state="translated">要添加的项。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Invoked this method on a <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on an unknown <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">在调用此方法<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>基于为未知<bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept>       Invoked this method on a <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> where the relevant type is not a collection.</source>
          <target state="translated"><bpt id="p1">**</bpt>-<ept id="p1">**</ept>上调用此方法<bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>相关的类型不是一个集合。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> for this <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> returns <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>此<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>返回<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Adds the provided key and item value to an instance of the type that is relevant to this <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将提供的密钥和项值添加到与此相关的类型的实例<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You should only call this method on a &lt;xref:System.Xaml.XamlType&gt; that represents a dictionary.</source>
          <target state="translated">仅应在调用此方法&lt;xref:System.Xaml.XamlType&gt;表示的字典。&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An instance of the type specified by the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used for constructing this <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">由指定的类型的实例<bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用于构造此<bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Dictionary key for the item to add.</source>
          <target state="translated">要添加的项的字典键。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The item value to add.</source>
          <target state="translated">要添加的项值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Invoked this method on a <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on an unknown <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">在调用此方法<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>基于为未知<bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept>       Invoked this method on a <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> where the relevant type is not a dictionary.</source>
          <target state="translated"><bpt id="p1">**</bpt>-<ept id="p1">**</ept>上调用此方法<bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>相关的类型不是一个字典。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> for this <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> returns <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>此<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>返回<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Creates an object instance based on the construction-initiated <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">创建对象实例基于构造启动<bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此<bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An array of objects that supply the <bpt id="p1">&lt;xref uid="langword_csharp_x:ConstructorArgs" name="x:ConstructorArgs" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the instance.</source>
          <target state="translated">提供的对象的数组<bpt id="p1">&lt;xref uid="langword_csharp_x:ConstructorArgs" name="x:ConstructorArgs" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for types that do not require or use <bpt id="p2">&lt;xref uid="langword_csharp_x:ConstructorArgs" name="x:ConstructorArgs" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可能是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的类型的不需要或不使用<bpt id="p2">&lt;xref uid="langword_csharp_x:ConstructorArgs" name="x:ConstructorArgs" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The created instance based on the construction-initiated <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">创建的实例基于构造启动<bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此<bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Could not resolve a constructor.</source>
          <target state="translated">无法解析一个构造函数。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Returns the relevant <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method for a <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that is relevant to a collection or dictionary.</source>
          <target state="translated">返回相关<bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>方法<bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>这是与集合或字典。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This method should return <ph id="ph1">`null`</ph> for cases where the &lt;xref:System.Xaml.XamlType&gt; for this &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; is not a writeable collection or dictionary.</source>
          <target state="translated">此方法应返回<ph id="ph1">`null`</ph>用例其中&lt;xref:System.Xaml.XamlType&gt;此&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;不是可写的集合或字典。&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifically, should return <ph id="ph1">`null`</ph> for cases where &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName&gt; returns <ph id="ph2">`None`</ph>.</source>
          <target state="translated">具体而言，应返回<ph id="ph1">`null`</ph>用例其中&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName&gt;返回<ph id="ph2">`None`</ph>。&lt;/xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If you are not accessing a fully trusted XAML type system, this method has the potential to report false &lt;xref:System.Reflection.MethodInfo&gt; information to callers.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 此方法如果你没有访问完全受信任的 XAML 类型系统，有可能对报表 false&lt;xref:System.Reflection.MethodInfo&gt;向调用方的信息。&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the item type that is used by the <bpt id="p2">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> method.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用的项类型<bpt id="p2">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>方法。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CLR &lt;xref:System.Reflection.MethodInfo&gt; information for the <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method, or null.</source>
          <target state="translated">CLR&lt;xref:System.Reflection.MethodInfo&gt;信息<bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>方法，则为 null。&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;contentType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;contentType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Returns an object representing a method that can enumerate over items.</source>
          <target state="translated">返回表示可以枚举项方法的对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Should return <ph id="ph1">`null`</ph> for cases where &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName&gt; returns <ph id="ph2">`None`</ph>.</source>
          <target state="translated">应返回<ph id="ph1">`null`</ph>用例其中&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName&gt;返回<ph id="ph2">`None`</ph>。&lt;/xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If you are not accessing a fully trusted XAML type system, this method has the potential to report false &lt;xref:System.Reflection.MethodInfo&gt; information to callers.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 此方法如果你没有访问完全受信任的 XAML 类型系统，有可能对报表 false&lt;xref:System.Reflection.MethodInfo&gt;向调用方的信息。&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Reflection.MethodInfo&gt; for an enumerator method, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodInfo&gt;枚举器方法，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; object representing the set of items.</source>
          <target state="translated">返回&lt;xref:System.Collections.IEnumerator&gt;表示项集的对象。&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An instance of the type specified by the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used for constructing this <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">由指定的类型的实例<bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用于构造此<bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; object, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IEnumerator&gt; object, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Invoked this method on a <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on an unknown <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">在调用此方法<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>基于为未知<bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept>       Invoked this method on a <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> where the relevant type is not a collection or dictionary.</source>
          <target state="translated"><bpt id="p1">**</bpt>-<ept id="p1">**</ept>上调用此方法<bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>相关的类型不是集合或字典的位置。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets the handler to use when a <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> calls into an implemented &lt;xref:System.Windows.Markup.MarkupExtension&gt;.</source>
          <target state="translated">获取处理程序时要使用<bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>调入实现&lt;xref:System.Windows.Markup.MarkupExtension&gt;.&lt;/xref:System.Windows.Markup.MarkupExtension&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The event handler is based on &lt;xref:System.EventHandler%601&gt; constrained with &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; event data.</source>
          <target state="translated">事件处理程序基于&lt;xref:System.EventHandler%601&gt;限制而&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;事件数据。&lt;/xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; &lt;/xref:System.EventHandler%601&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The value returned invokes the &lt;xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A&gt; behavior of the &lt;xref:System.Xaml.XamlType&gt; that the &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; is based on.</source>
          <target state="translated">返回的值时，将调用&lt;xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A&gt;行为&lt;xref:System.Xaml.XamlType&gt;，&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;基于。&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt; &lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The return value is <ph id="ph1">`null`</ph> for a &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; that is based on an unknown &lt;xref:System.Xaml.XamlType&gt;.</source>
          <target state="translated">返回值是<ph id="ph1">`null`</ph>作为&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;基于&lt;xref:System.Xaml.XamlType&gt;.&lt;/xref:System.Xaml.XamlType&gt;为未知&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A handler implementation that handles this case.</source>
          <target state="translated">处理这种情况下处理程序实现。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets the handler to use when a <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> calls into a CLR-implemented <bpt id="p2">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取处理程序时要使用<bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>调入 CLR 实现<bpt id="p2">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The event handler is based on &lt;xref:System.EventHandler%601&gt; constrained with &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; event data.</source>
          <target state="translated">事件处理程序基于&lt;xref:System.EventHandler%601&gt;限制而&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;事件数据。&lt;/xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; &lt;/xref:System.EventHandler%601&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value returned invokes the &lt;xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A&gt; behavior of the &lt;xref:System.Xaml.XamlType&gt; that the &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; is based on.</source>
          <target state="translated">返回的值时，将调用&lt;xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A&gt;行为&lt;xref:System.Xaml.XamlType&gt;，&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;基于。&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt; &lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The return value is <ph id="ph1">`null`</ph> for a &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; that is based on an unknown &lt;xref:System.Xaml.XamlType&gt;.</source>
          <target state="translated">返回值是<ph id="ph1">`null`</ph>作为&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;基于&lt;xref:System.Xaml.XamlType&gt;.&lt;/xref:System.Xaml.XamlType&gt;为未知&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A handler implementation that handles this case.</source>
          <target state="translated">处理这种情况下处理程序实现。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Provides a static value that represents an unknown, not fully implemented <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">提供一个静态值，表示未完全实现的未知<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Supplying this value for a &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</source>
          <target state="translated">提供此值&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;System.Xaml 参数定义 API 将通常会导致调用的代码引发异常。&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A static value that represents an unknown, not fully implemented <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一个静态值，表示未完全实现的未知<bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>