<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">566306b9947c2fdb94adf168c5d7cb0eeb0dd30f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Claims.ClaimsPrincipal.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ecbdc52f0e00e60920c63280eae085cff76f1b1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b19ef9d11b98dfdcdc385718d9695db3a394699</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Security.Principal.IPrincipal&gt; implementation that supports multiple claims-based identities.</source>
          <target state="translated">&lt;xref:System.Security.Principal.IPrincipal&gt;实现支持多个基于声明的标识。&lt;/xref:System.Security.Principal.IPrincipal&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Beginning with .NET Framework 4.5, Windows Identity Foundation (WIF) and claims-based identity have been fully integrated into the .NET Framework.</source>
          <target state="translated">从.NET Framework 4.5 开始，Windows Identity Foundation (WIF) 和基于声明的标识已完全集成到.NET Framework。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This means that many classes that represent a principal in the .NET Framework now derive from ClaimsPrincipal rather than simply implementing the &lt;xref:System.Security.Principal.IPrincipal&gt; interface.</source>
          <target state="translated">这意味着现在表示.NET Framework 中的主体的许多类派生自 ClaimsPrincipal，而不是只需实现&lt;xref:System.Security.Principal.IPrincipal&gt;接口。&lt;/xref:System.Security.Principal.IPrincipal&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In addition to implementing the &lt;xref:System.Security.Principal.IPrincipal&gt; interface, ClaimsPrincipal exposes properties and methods that are useful for working with claims.</source>
          <target state="translated">除了实现&lt;xref:System.Security.Principal.IPrincipal&gt;接口，ClaimsPrincipal 公开属性和方法，可用于使用声明。&lt;/xref:System.Security.Principal.IPrincipal&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>ClaimsPrincipal exposes a collection of identities, each of which is a &lt;xref:System.Security.Claims.ClaimsIdentity&gt;.</source>
          <target state="translated">ClaimsPrincipal 公开的标识，其中每个是一种&lt;xref:System.Security.Claims.ClaimsIdentity&gt;。&lt;/xref:System.Security.Claims.ClaimsIdentity&gt;的集合</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In the common case, this collection, which is accessed through the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; property, will only have a single element.</source>
          <target state="translated">通常情况下，此集合中，可通过&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;属性，仅将具有单个元素。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The introduction of ClaimsPrincipal in .NET 4.5 as the principal from which most principal classes derive does not force you to change anything in the way in which you deal with identity.</source>
          <target state="translated">作为最主体类从中派生的主体的.NET 4.5 中的 ClaimsPrincipal 简介不会强制你更改在其中你应对标识的方法的任何内容。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It does, however open up more possibilities and offer more chances to exercise finer access control.</source>
          <target state="translated">但是它未打开更多的可能性并提供更多机会进行更精细的访问控制。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example:      -   The application code itself can work directly with the claims contained in the current principal to drive extra authentication, authorization, and personalization tasks.</source>
          <target state="translated">例如:-应用程序代码本身可直接与当前的主体中包含的声明，来驱动额外的身份验证、 授权和个性化任务合作。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-   You can front your resources with a claims processing pipeline, which can deal with authentication requests and authorization policy even before execution reaches your code.</source>
          <target state="translated">-你可以处理管道，甚至在执行到达你的代码之前可以处理与身份验证请求和授权策略声明与前端你的资源。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, you can configure a web-based application or service with a custom claims authentication manager, an instance of a class that derives from the &lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt; class.</source>
          <target state="translated">例如，可以使用自定义声明身份验证管理器，从&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;类&lt;/xref:System.Security.Claims.ClaimsAuthenticationManager&gt;派生的类的实例配置的基于 web 的应用程序或服务</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When so configured, the request processing pipeline invokes the &lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt; method on your claims authentication manager passing it a ClaimsPrincipal that represents the context of the incoming request.</source>
          <target state="translated">当这样配置后，请求处理管道时，将调用&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;方法将其传递表示传入的请求的上下文 ClaimsPrincipal 你声明身份验证管理器。&lt;/xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Your claims authentication manager can then perform authentication based on the values of the incoming claims.</source>
          <target state="translated">声明身份验证管理器，可以执行身份验证根据传入声明的值。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It can also filter, transform, or add claims to the incoming claim set.</source>
          <target state="translated">它还可以筛选、 转换或向传入声明集添加声明。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, it could be used to enrich the incoming claim set with new claims created from a local data source such as a local user profile      -   You can configure a web-based application with a custom claims authorization manager, an instance of a class that derives from the &lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt; class.</source>
          <target state="translated">例如，可以使用它来丰富的传入声明使用从本地用户配置文件等本地数据源创建的新声明集-你可以使用自定义声明授权管理器，从&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;类&lt;/xref:System.Security.Claims.ClaimsAuthorizationManager&gt;派生的类的实例配置的基于 web 的应用程序</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When so configured, the request processing pipeline packages the incoming ClaimsPrincipal in an &lt;xref:System.Security.Claims.AuthorizationContext&gt; and invokes the &lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt; method on your claims authorization manager.</source>
          <target state="translated">请求处理管道时这样配置，包中的传入 ClaimsPrincipal&lt;xref:System.Security.Claims.AuthorizationContext&gt;并调用&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;声明授权管理器上的方法。&lt;/xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt; &lt;/xref:System.Security.Claims.AuthorizationContext&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Your claims authorization manager can then enforce authorization based on the incoming claims.</source>
          <target state="translated">声明授权管理器随后可以强制执行基于传入声明的授权。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-   Inline claims-based code access checks can be performed by configuring your application with a custom claims authorization manager and using either the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt; class to perform imperative access checks or the &lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt; to perform declarative access checks.</source>
          <target state="translated">的可以使用自定义配置你的应用程序执行基于声明的代码访问检查内联声明授权管理器和使用&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;类来执行命令性的访问检查或&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;执行声明式访问检查。&lt;/xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt; &lt;/xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Claims-based code access checks are performed inline, outside of the processing pipeline, and so are available to all applications as long as a claims authorization manager is configured.</source>
          <target state="translated">基于声明的代码访问检查将执行以内联方式，在处理管道中，外部，并因此可供所有应用程序，只要声明授权管理器的配置。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can obtain a ClaimsPrincipal instance for the principal associated with a request in an RP application (or the principal under which a thread is executing) by casting the &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt; property to ClaimsPrincipal.</source>
          <target state="translated">你可以通过强制转换为与 RP 应用程序 （或正在执行某线程的主体） 中的请求关联的主体获取 ClaimsPrincipal 实例&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;属性 ClaimsPrincipal。&lt;/xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The claims associated with an ClaimsPrincipal object are available through its &lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt; property.</source>
          <target state="translated">与 ClaimsPrincipal 对象关联的声明均可通过其&lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;属性。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt; property returns all of the claims contained by the identities associated with the principal.</source>
          <target state="translated">&lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;属性返回的所有包含的与主体关联的标识声明。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the uncommon case in which the ClaimsPrincipal contains multiple &lt;xref:System.Security.Claims.ClaimsIdentity&gt; instances, you can use the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; property or you can access the primary identity by using the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt; property.</source>
          <target state="translated">在最常见的情况下，在其中 ClaimsPrincipal 包含多个&lt;xref:System.Security.Claims.ClaimsIdentity&gt;实例，可以使用&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;属性也可以通过使用访问主标识&lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt;属性。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt; &lt;/xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; &lt;/xref:System.Security.Claims.ClaimsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>ClaimsPrincipal provides several methods through which these claims may be searched and fully supports Language Integrated Query (LINQ).</source>
          <target state="translated">ClaimsPrincipal 提供几种方法可能会通过该搜索这些声明，并完全支持语言集成查询 (LINQ)。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Identities can be added to the principal by using the &lt;xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A&gt; or &lt;xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A&gt; methods.</source>
          <target state="translated">标识可通过使用添加到主体&lt;xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A&gt;或&lt;xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A&gt;方法。&lt;/xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A&gt; &lt;/xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  To add identities to the ClaimsPrincipal, a caller must have full trust.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 将标识添加到 ClaimsPrincipal，调用方必须具有完全信任。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>By default, WIF prioritizes &lt;xref:System.Security.Principal.WindowsIdentity&gt; objects when selecting the primary identity to return through the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt; property.</source>
          <target state="translated">默认情况下，WIF 可以优先处理&lt;xref:System.Security.Principal.WindowsIdentity&gt;对象时选择要通过返回的主标识&lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt;属性。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt; &lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can modify this behavior by supplying a delegate through the &lt;xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A&gt; property to perform the selection.</source>
          <target state="translated">你可以通过提供委托通过修改此行为&lt;xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A&gt;属性以执行所选内容。&lt;/xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A&gt; property provides similar functionality for the &lt;xref:System.Security.Claims.ClaimsPrincipal.Current%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A&gt;属性提供类似功能&lt;xref:System.Security.Claims.ClaimsPrincipal.Current%2A&gt;属性。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Current%2A&gt; &lt;/xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the claim-based model, whether a principal is in a specified role is determined by the claims presented by its underlying identities.</source>
          <target state="translated">在基于声明的模型中，通过提供其基础的标识的声明确定主体是否属于指定角色。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A&gt; method essentially examines each identity associated with the principal to determine whether it possesses a claim with the specified role value.</source>
          <target state="translated">&lt;xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A&gt;方法实质上是检查每个与确定它是否拥有指定的角色值的声明主体关联的标识。&lt;/xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The type of the claim (represented by its &lt;xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName&gt; property) used to determine which claims should be examined during role checks is specified on an identity through its &lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">声明的类型 (由其&lt;xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName&gt;属性) 用于确定应检查哪些声明在角色检查指定已通过的身份其&lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=fullName&gt; &lt;/xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Thus, the claims examined during role checks can be of a different type for different identities associated with the principal.</source>
          <target state="translated">因此，在角色检查期间检查的声明可以是不同的标识与主体关联的不同类型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>No identities are associated with the new instance.</source>
          <target state="translated">没有标识与程序关联的新实例。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>(The &lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; collection is empty).</source>
          <target state="translated">(&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;集合为空)。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified claims identities.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的声明标识。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; collection is initialized with the specified identities.</source>
          <target state="translated">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;集合初始化具有指定的标识。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The identities from which to initialize the new claims principal.</source>
          <target state="translated">从其初始化新的声明主体标识。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identities&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identities&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified identity.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从指定的标识的类。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the specified identity is assignable from &lt;xref:System.Security.Claims.ClaimsIdentity&gt;, it is used to initialize the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; collection.</source>
          <target state="translated">如果指定的标识是否可从&lt;xref:System.Security.Claims.ClaimsIdentity&gt;，它用于初始化&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;集合。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; &lt;/xref:System.Security.Claims.ClaimsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Otherwise, a &lt;xref:System.Security.Claims.ClaimsIdentity&gt; is created using the specified identity and is used to initialize the collection.</source>
          <target state="translated">否则为&lt;xref:System.Security.Claims.ClaimsIdentity&gt;创建使用指定的标识，用于初始化集合。&lt;/xref:System.Security.Claims.ClaimsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The identity from which to initialize the new claims principal.</source>
          <target state="translated">从其初始化新的声明主体标识。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified principal.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类从指定的主体。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the specified principal is assignable from &lt;xref:System.Security.Claims.ClaimsPrincipal&gt;, all of its identities are added to the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; collection.</source>
          <target state="translated">如果指定的主体是可从&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;，所有其标识都添加到&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;集合。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; &lt;/xref:System.Security.Claims.ClaimsPrincipal&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If the specified principal is not assignable from &lt;xref:System.Security.Claims.ClaimsPrincipal&gt;, a new &lt;xref:System.Security.Claims.ClaimsIdentity&gt; is created from the &lt;xref:System.Security.Principal.IIdentity&gt; in its &lt;xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName&gt; property and added to the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; collection.</source>
          <target state="translated">如果指定的主体不是可从&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;，新&lt;xref:System.Security.Claims.ClaimsIdentity&gt;从创建&lt;xref:System.Security.Principal.IIdentity&gt;中其&lt;xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName&gt;属性并添加到&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;集合。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; &lt;/xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName&gt; &lt;/xref:System.Security.Principal.IIdentity&gt; &lt;/xref:System.Security.Claims.ClaimsIdentity&gt; &lt;/xref:System.Security.Claims.ClaimsPrincipal&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The principal from which to initialize the new claims principal.</source>
          <target state="translated">从其初始化新的声明主体主体。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;principal&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;principal&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from a serialized stream created by using <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从序列化流使用创建的类<bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The serialized data.</source>
          <target state="translated">序列化的数据。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The context for serialization.</source>
          <target state="translated">序列化的上下文。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Adds the specified claims identities to this claims principal.</source>
          <target state="translated">将指定的声明标识添加到此声明主体。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The identities are added to the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; collection.</source>
          <target state="translated">标识添加到&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;集合。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The claims identities to add.</source>
          <target state="translated">若要添加的声明标识。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identities&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identities&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Adds the specified claims identity to this claims principal.</source>
          <target state="translated">将指定的声明标识添加到此声明主体。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The identity is added to the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; collection.</source>
          <target state="translated">将标识添加到&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;集合。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The claims identity to add.</source>
          <target state="translated">要添加的声明标识。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets a collection that contains all of the claims from all of the claims identities associated with this claims principal.</source>
          <target state="translated">获取与此声明主体关联的包含的所有声明标识的所有声明的集合。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A claims principal has a collection of &lt;xref:System.Security.Claims.ClaimsIdentity&gt; objects that is accessible through the Identities property.</source>
          <target state="translated">声明主体所拥有的集合&lt;xref:System.Security.Claims.ClaimsIdentity&gt;可以通过标识属性访问的对象。&lt;/xref:System.Security.Claims.ClaimsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Each &lt;xref:System.Security.Claims.ClaimsIdentity&gt; in the collection contains one or more claims.</source>
          <target state="translated">每个&lt;xref:System.Security.Claims.ClaimsIdentity&gt;集合中包含一个或多个声明。&lt;/xref:System.Security.Claims.ClaimsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The Claims property returns all of the claims from all of the claims identities in this collection.</source>
          <target state="translated">声明属性返回的所有声明从所有在此集合中的声明标识。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The Claims property can be examined by custom implementations of the &lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt; class to make authentication decisions or to filter, transform, or enrich an incoming claim set; by custom implementations of the &lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt; class to enforce authorization policy; or by application code to make authorization decisions or to customize user experience based on the claims present in the collection.</source>
          <target state="translated">可以通过的自定义实现检查声明属性&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;类决定身份验证或将筛选、 转换或扩充传入的声明集; 的自定义实现通过&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;类，以强制实施授权策略; 或由应用程序代码来做出授权决策或自定义用户体验根据集合中存在的声明。&lt;/xref:System.Security.Claims.ClaimsAuthorizationManager&gt; &lt;/xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The claims associated with this principal.</source>
          <target state="translated">与此主体关联的声明。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets and sets the delegate used to select the claims principal returned by the &lt;xref:System.Security.Claims.ClaimsPrincipal.Current*&gt; property.</source>
          <target state="translated">获取和设置用于选择返回的声明主体的委托&lt;xref:System.Security.Claims.ClaimsPrincipal.Current*&gt;属性。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Current*&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You can set this property to override the default behavior of the &lt;xref:System.Security.Claims.ClaimsPrincipal.Current%2A&gt; property.</source>
          <target state="translated">你可以设置此属性来重写的默认行为&lt;xref:System.Security.Claims.ClaimsPrincipal.Current%2A&gt;属性。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The delegate.</source>
          <target state="translated">委托。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Returns a copy of this instance.</source>
          <target state="translated">返回此实例的副本。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A new copy of the <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">新副本<bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Creates a new claims identity.</source>
          <target state="translated">创建新的声明标识。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The binary reader.</source>
          <target state="translated">二进制读取器。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The created claims identity.</source>
          <target state="translated">创建的声明标识。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Gets the current claims principal.</source>
          <target state="translated">获取当前声明主体。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By default, &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt; is returned.</source>
          <target state="translated">默认情况下，&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;返回。&lt;/xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can change this behavior by setting the &lt;xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A&gt; property to specify a delegate to be called to determine the current principal.</source>
          <target state="translated">你可以通过设置来更改此行为&lt;xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A&gt;属性来指定要调用来确定当前主体的委托。&lt;/xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The current claims principal.</source>
          <target state="translated">当前声明主体。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Retrieves all of the claims that are matched by the specified predicate.</source>
          <target state="translated">检索所有指定的谓词匹配的声明。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Returns claims from all identities associated with the claims principal.</source>
          <target state="translated">返回与声明主体关联的所有标识声明。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The function that performs the matching logic.</source>
          <target state="translated">执行匹配逻辑的函数。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The matching claims.</source>
          <target state="translated">匹配的声明。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;match&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;match&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Retrieves all or the claims that have the specified claim type.</source>
          <target state="translated">检索所有或具有指定的声明类型的声明。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Returns claims from all identities associated with the claims principal.</source>
          <target state="translated">返回与声明主体关联的所有标识声明。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The comparison is made using Ordinal case in-sensitive on <ph id="ph1">`type`</ph>.</source>
          <target state="translated">使用序号大小写区分上进行比较<ph id="ph1">`type`</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The claim type against which to match claims.</source>
          <target state="translated">根据其匹配声明声明类型。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The matching claims.</source>
          <target state="translated">匹配的声明。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Retrieves the first claim that is matched by the specified predicate.</source>
          <target state="translated">检索由指定谓词匹配的第一个声明。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The function that performs the matching logic.</source>
          <target state="translated">执行匹配逻辑的函数。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The first matching claim or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no match is found.</source>
          <target state="translated">第一个匹配声明或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果未找到匹配。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;match&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;match&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Retrieves the first claim with the specified claim type.</source>
          <target state="translated">检索与指定的声明类型的第一个声明。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The claim type to match.</source>
          <target state="translated">要匹配的声明类型。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The first matching claim or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no match is found.</source>
          <target state="translated">第一个匹配声明或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果未找到匹配。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Populates the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with data needed to serialize the current <bpt id="p2">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">填充<bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>所需数据来序列化当前<bpt id="p2">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The object to populate with data.</source>
          <target state="translated">要填充数据的对象。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The destination for this serialization.</source>
          <target state="translated">此序列化的目标。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Determines whether any of the claims identities associated with this claims principal contains a claim that is matched by the specified predicate.</source>
          <target state="translated">确定此声明主体与相关联的任何声明标识是否包含由指定谓词匹配的声明。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The function that performs the matching logic.</source>
          <target state="translated">执行匹配逻辑的函数。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a matching claim exists; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果存在匹配的声明;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;match&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;match&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Determines whether any of the claims identities associated with this claims principal contains a claim with the specified claim type and value.</source>
          <target state="translated">确定此声明主体与相关联的任何声明标识是否与指定的声明类型和值包含声明。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Does not check the &lt;xref:System.Security.Claims.Claim.Issuer%2A&gt; or &lt;xref:System.Security.Claims.Claim.OriginalIssuer%2A&gt; properties.</source>
          <target state="translated">不会检查&lt;xref:System.Security.Claims.Claim.Issuer%2A&gt;或&lt;xref:System.Security.Claims.Claim.OriginalIssuer%2A&gt;属性。&lt;/xref:System.Security.Claims.Claim.OriginalIssuer%2A&gt; &lt;/xref:System.Security.Claims.Claim.Issuer%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The comparison is made using Ordinal, case sensitive on value; case in-sensitive on type.</source>
          <target state="translated">使用序号，区分大小写值; 在进行比较大小写区分类型。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The type of the claim to match.</source>
          <target state="translated">要匹配的声明的类型。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The value of the claim to match.</source>
          <target state="translated">要匹配的声明的值。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a matching claim exists; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果存在匹配的声明;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets a collection that contains all of the claims identities associated with this claims principal.</source>
          <target state="translated">获取与此声明主体关联的包含的所有声明标识的集合。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In the common case, the collection contains only a single element.</source>
          <target state="translated">通常情况下，集合包含单个元素。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>It is possible for the collection to contain some elements which are <ph id="ph1">`null`</ph>.</source>
          <target state="translated">找不到包含的某些元素可以<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The collection of claims identities.</source>
          <target state="translated">声明标识的集合。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Gets the primary claims identity associated with this claims principal.</source>
          <target state="translated">获取主声明标识与此声明主体相关联。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>By default, the framework prioritizes identities of type &lt;xref:System.Security.Principal.WindowsIdentity&gt; when returning the identity.</source>
          <target state="translated">默认情况下，框架可以优先处理的类型标识&lt;xref:System.Security.Principal.WindowsIdentity&gt;时返回标识。&lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The first &lt;xref:System.Security.Principal.WindowsIdentity&gt; found in the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; collection is returned.</source>
          <target state="translated">第一个&lt;xref:System.Security.Principal.WindowsIdentity&gt;中找到&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;返回集合。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; &lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If there is no &lt;xref:System.Security.Principal.WindowsIdentity&gt; in the collection, the first identity assignable from &lt;xref:System.Security.Claims.ClaimsIdentity&gt; is returned.</source>
          <target state="translated">如果没有任何&lt;xref:System.Security.Principal.WindowsIdentity&gt;在集合中，可从第一个标识&lt;xref:System.Security.Claims.ClaimsIdentity&gt;返回。&lt;/xref:System.Security.Claims.ClaimsIdentity&gt; &lt;/xref:System.Security.Principal.WindowsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If there is no &lt;xref:System.Security.Claims.ClaimsIdentity&gt;, <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">如果没有任何&lt;xref:System.Security.Claims.ClaimsIdentity&gt;，<ph id="ph1">`null`</ph>返回。&lt;/xref:System.Security.Claims.ClaimsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt; collection is empty, an &lt;xref:System.ArgumentNullException&gt; is thrown.</source>
          <target state="translated">如果&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;集合为空，&lt;xref:System.ArgumentNullException&gt;引发。&lt;/xref:System.ArgumentNullException&gt; &lt;/xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>You can change the default behavior by setting the &lt;xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A&gt; property to specify a delegate to be called to determine the identity.</source>
          <target state="translated">你可以通过设置更改默认行为&lt;xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A&gt;属性来指定要调用来确定标识的委托。&lt;/xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The primary claims identity associated with this claims principal.</source>
          <target state="translated">与此声明主体关联的主声明标识。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the entity (user) represented by this claims principal is in the specified role.</source>
          <target state="translated">返回一个值，该值指示此声明主体所表示的实体 （用户） 是否属于指定角色。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The IsInRole method checks whether an identity that this claims principal possesses contains a claim of type &lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=fullName&gt; where the value of the claim is equal to the value specified by the <ph id="ph1">`role`</ph> parameter.</source>
          <target state="translated">IsInRole 方法检查此声明主体拥有的标识是否包含一个声明的类型&lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=fullName&gt;声明的值等于指定的值<ph id="ph1">`role`</ph>参数。&lt;/xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Each &lt;xref:System.Security.Claims.ClaimsIdentity&gt; has its own definition of the claim type that represents a role.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 每个&lt;xref:System.Security.Claims.ClaimsIdentity&gt;具有其自己定义表示的角色声明类型。&lt;/xref:System.Security.Claims.ClaimsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This claim type can be accessed and set through the &lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">此声明类型可以访问，并通过设置&lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=fullName&gt;属性。&lt;/xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The role for which to check.</source>
          <target state="translated">要检查的角色。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if claims principal is in the specified role; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果声明主体属于指定角色;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets and sets the delegate used to select the claims identity returned by the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identity*&gt; property.</source>
          <target state="translated">获取和设置用于选择返回的声明标识的委托&lt;xref:System.Security.Claims.ClaimsPrincipal.Identity*&gt;属性。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identity*&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>You can set this property to override the default behavior of the &lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt; property.</source>
          <target state="translated">你可以设置此属性来重写的默认行为&lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt;属性。&lt;/xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The delegate.</source>
          <target state="translated">委托。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>