<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cce859d379736a2dd4c94e4dfa12253c6e67b0ab</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Diagnostics.SymbolStore.SymBinder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e90b9da6c5c10ab209dc2bb2d338489983e222e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ecdb2eee92322ca974682cfa22324efd32271d2e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a symbol binder for managed code.</source>
          <target state="translated">表示托管代码的符号联编程序。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.SymbolStore.SymBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.SymbolStore.SymBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.SymbolStore.SymBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">释放当前实例所使用的资源<bpt id="p1">&lt;xref href="System.Diagnostics.SymbolStore.SymBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Called by the &lt;xref:System.Diagnostics.SymbolStore.SymBinder.Dispose<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Diagnostics.SymbolStore.SymBinder.Finalize<ept id="p1">*</ept>&gt; methods to release the managed and unmanaged resources used by the current instance of the <bpt id="p2">&lt;xref href="System.Diagnostics.SymbolStore.SymBinder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">由调用&lt;&gt; <bpt id="p1">*</bpt>1&gt; 和&lt;&gt; <ept id="p1">*</ept>1&gt; 方法来释放使用的当前实例的托管和非托管资源<bpt id="p2">&lt;xref href="System.Diagnostics.SymbolStore.SymBinder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This method is called only by the public &lt;xref:System.Diagnostics.SymbolStore.SymBinder.Dispose%2A&gt; and &lt;xref:System.Diagnostics.SymbolStore.SymBinder.Finalize%2A&gt; methods; do not call this method directly.</source>
          <target state="translated">此方法称为仅由公共&lt;xref:System.Diagnostics.SymbolStore.SymBinder.Dispose%2A&gt;和&lt;xref:System.Diagnostics.SymbolStore.SymBinder.Finalize%2A&gt;方法; 这些方法不直接调用此方法。&lt;/xref:System.Diagnostics.SymbolStore.SymBinder.Finalize%2A&gt; &lt;/xref:System.Diagnostics.SymbolStore.SymBinder.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Releases the resources held by the current instance.</source>
          <target state="translated">释放由当前实例所持有的资源。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Object.Finalize%2A&gt;.</source>
          <target state="translated">此方法将替代&lt;xref:System.Object.Finalize%2A&gt;.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A&gt; method.</source>
          <target state="translated">应用程序代码不应调用此方法。对象的<ph id="ph1">`Finalize`</ph>方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止&lt;xref:System.GC.SuppressFinalize%2A&gt;方法。&lt;/xref:System.GC.SuppressFinalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the interface of the symbol reader for the current file, using the specified 32-bit integer pointer to a metadata interface, the specified file name, and the specified search path.</source>
          <target state="translated">获取当前文件，使用指向元数据接口、 指定的文件名和指定的搜索路径的指定的 32 位整数指针的符号读取器的接口。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When given a pointer to a metadata interface, a file name, and a search path, the GetReader method returns the &lt;xref:System.Diagnostics.SymbolStore.ISymbolReader&gt; interface that reads the debugging symbols associated with the module.</source>
          <target state="translated">当提供给元数据接口、 文件名称和的搜索路径的指针，该 GetReader 方法返回&lt;xref:System.Diagnostics.SymbolStore.ISymbolReader&gt;接口，它读取调试符号与模块关联。&lt;/xref:System.Diagnostics.SymbolStore.ISymbolReader&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Using a 32-bit integer as a pointer is not recommended.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph> 1&gt; 根据一个指针，不建议使用 32 位整数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A&gt; overload instead.</source>
          <target state="translated">使用&lt;xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A&gt;重载。&lt;/xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A 32-bit integer that points to the metadata import interface.</source>
          <target state="translated">一个 32 位整数，它指向元数据导入接口。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of the file for which the reader interface is required.</source>
          <target state="translated">需要读取器接口的文件的名称。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The search path used to locate the symbol file.</source>
          <target state="translated">用于查找符号文件的搜索路径。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The interface that reads the debugging symbols.</source>
          <target state="translated">接口，它读取调试符号。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets the interface of the symbol reader for the current file, using the specified pointer to a metadata interface, the specified file name, and the specified search path.</source>
          <target state="translated">获取当前文件，使用指向元数据接口、 指定的文件名和指定的搜索路径的指定的指针的符号读取器的接口。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When given a pointer to a metadata interface, a file name, and a search path, the GetReader method returns the &lt;xref:System.Diagnostics.SymbolStore.ISymbolReader&gt; interface that reads the debugging symbols associated with the module.</source>
          <target state="translated">当提供给元数据接口、 文件名称和的搜索路径的指针，该 GetReader 方法返回&lt;xref:System.Diagnostics.SymbolStore.ISymbolReader&gt;接口，它读取调试符号与模块关联。&lt;/xref:System.Diagnostics.SymbolStore.ISymbolReader&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A structure that points to the metadata import interface.</source>
          <target state="translated">一个指向元数据导入接口的结构。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The name of the file for which the reader interface is required.</source>
          <target state="translated">需要读取器接口的文件的名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The search path used to locate the symbol file.</source>
          <target state="translated">用于查找符号文件的搜索路径。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The interface that reads the debugging symbols.</source>
          <target state="translated">接口，它读取调试符号。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>