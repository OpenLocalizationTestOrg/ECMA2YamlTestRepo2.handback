<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad434fb317836af2a2219fa028a354de2456f3c6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.SymmetricSecurityKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bb510d10fbf56da369cc07caedacc9249ddf364</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f58af0ea9e3a1e42810333083d39802683686dd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the abstract base class for all keys that are generated using symmetric algorithms.</source>
          <target state="translated">表示使用对称算法生成的所有键的抽象基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Typically, this class is used by the infrastructure to transform XML using a symmetric key.</source>
          <target state="translated">通常情况下，此类用于基础结构使用对称密钥转换 XML。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SymmetricSecurityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SymmetricSecurityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, generates a derived key using the specified cryptographic algorithm and parameters for the current key.</source>
          <target state="translated">当在派生类中重写，生成派生的密钥使用为当前密钥的指定的加密算法和参数。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To specify P-SHA1 as the cryptographic algorithm, use the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt; field.</source>
          <target state="translated">若要将 p-sha1 指定为加密算法，使用&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;字段。&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A URI that represents the cryptographic algorithm to use to generate the derived key.</source>
          <target state="translated">一个 URI，表示要用于生成派生的密钥的加密算法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the label parameter for the cryptographic algorithm.</source>
          <target state="translated">数组&lt;xref:System.Byte&gt;，其中包含的加密算法的标签参数。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the nonce that is used to create a derived key.</source>
          <target state="translated">数组&lt;xref:System.Byte&gt;，包含用于创建派生的密钥的 nonce。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The size of the derived key.</source>
          <target state="translated">派生密钥的大小。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The position at which the derived key is located in the byte array that is returned from this method.</source>
          <target state="translated">从该处派生的密钥位于从此方法返回的字节数组中的位置。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the derived key.</source>
          <target state="translated">数组&lt;xref:System.Byte&gt;包含派生的密钥。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a transform that decrypts cipher text using the specified cryptographic algorithm.</source>
          <target state="translated">当在派生类中重写，获取一个转换解密密码文本使用指定的加密算法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use the fields that represent decryption algorithms in the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">使用中表示解密算法的字段&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;类指定算法。&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</source>
          <target state="translated">加密算法对密码文本，例如加密的 XML 进行解密。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) for the specified algorithm.</source>
          <target state="translated">数组&lt;xref:System.Byte&gt;，其中包含的初始化向量 (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 指定的算法。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the decryption transform.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示解密转换。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a transform that encrypts XML using the specified cryptographic algorithm.</source>
          <target state="translated">当在派生类中重写，获取一个使用指定的加密算法加密 XML 的转换。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Use the fields that represent decryption algorithms in the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">使用中表示解密算法的字段&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;类指定算法。&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A cryptographic algorithm that encrypts XML.</source>
          <target state="translated">用于对 XML 进行加密的加密算法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) for the specified algorithm.</source>
          <target state="translated">数组&lt;xref:System.Byte&gt;，其中包含的初始化向量 (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 指定的算法。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the encryption transform.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示加密转换。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the size, in bits, of the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) that is required for the specified cryptographic algorithm.</source>
          <target state="translated">当在派生类中重写，获取的大小，以位为单位的初始化向量 (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 所需的指定加密算法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The cryptographic algorithm to get the size of the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">用于获取初始化向量的大小的加密算法 (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The size, in bits, of the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) that is required for the cryptographic algorithm specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">algorithm</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">大小，以位为单位的初始化向量 (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 中指定的加密算法对所需<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">algorithm</ph> <ept id="p2">&lt;/code&gt;</ept>参数。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets an instance of the specified keyed hash algorithm.</source>
          <target state="translated">当在派生类中重写，获取指定的加密哈希算法的实例。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Use the fields that represent keyed hash algorithms in the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">使用表示中的加密哈希算法的字段&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;类指定算法。&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The keyed hash algorithm to get an instance of.</source>
          <target state="translated">要获取其实例的加密哈希算法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Cryptography.KeyedHashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the keyed hash algorithm.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Cryptography.KeyedHashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示加密哈希算法。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets an instance of the specified symmetric algorithm.</source>
          <target state="translated">当在派生类中重写，获取指定对称算法的实例。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use the fields that represent symmetric algorithms in the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">使用中表示对称算法的字段&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;类指定算法。&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The symmetric algorithm to get an instance of.</source>
          <target state="translated">要获取其实例的对称算法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the symmetric algorithm.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示对称算法。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the bytes that represent the symmetric key.</source>
          <target state="translated">当在派生类中重写，获取表示对称密钥的字节。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the symmetric key.</source>
          <target state="translated">数组&lt;xref:System.Byte&gt;包含对称密钥。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>