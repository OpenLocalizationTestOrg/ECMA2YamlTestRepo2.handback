<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94c728563c3b791418936bc2c17f1fbb0a19e77e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Compilation.BuildProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35f049f7a11275f63b9113ffe7d0b8f1410f4eff</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66c7df0e60cd5d48bb48d36b0a44ce6013276c7e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a set of properties and methods for generating source code within the ASP.NET build environment.</source>
          <target state="translated">定义一组用于在 ASP.NET 生成环境中生成源代码的属性和方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is abstract.</source>
          <target state="translated">此类为抽象类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment uses BuildProvider objects to generate source code for different file types within an application.</source>
          <target state="translated">ASP.NET 生成环境使用 BuildProvider 对象为应用程序中的不同文件类型生成源代码。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Classes derived from BuildProvider predominantly provide source code for files, Web pages, resources, and other custom items.</source>
          <target state="translated">主要是为了符合从 BuildProvider 派生的类提供用于文件、 网页、 资源和其他自定义项的源代码。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Typically, you do not create an instance of the BuildProvider class directly.</source>
          <target state="translated">通常情况下，你不要直接创建 BuildProvider 类的实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Instead, you implement a class that derives from BuildProvider, and configure the BuildProvider implementation for use within the ASP.NET build environment.</source>
          <target state="translated">相反，你实现从 BuildProvider，派生的类，并配置在 ASP.NET 生成环境中使用的 BuildProvider 实现。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Instances of the BuildProvider class are used with &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; objects to build one or more files into a compiled assembly.</source>
          <target state="translated">BuildProvider 类的实例用于&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;对象生成一个或多个文件复制到已编译的程序集。&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A BuildProvider instance generates source code in the appropriate language for individual files, and the &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; object combines the source contributed by each BuildProvider instance into a single assembly.</source>
          <target state="translated">BuildProvider 实例在单个文件的相应语言生成源代码和&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;对象将合并到单个程序集中每个 BuildProvider 实例提供的源代码。&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment uses instances of the BuildProvider class to build files within an application.</source>
          <target state="translated">ASP.NET 生成环境使用 BuildProvider 类的实例来生成应用程序中的文件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt; property of the BuildProvider class indicates the path of the file to be built.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt;BuildProvider 类的属性指示要生成的文件的路径。&lt;/xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The file extension of each file within an application is mapped to a corresponding build provider.</source>
          <target state="translated">应用程序中的每个文件的文件扩展名映射到相应的生成提供程序。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment initializes a BuildProvider instance for each file based on the file extension, and uses the BuildProvider methods to generate source code for the file.</source>
          <target state="translated">ASP.NET 生成环境初始化根据文件扩展名，每个文件的 BuildProvider 实例，并使用 BuildProvider 方法来生成的文件的源代码。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment passes an &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; object based on the preferred compiler language and the context of the file to the BuildProvider methods when building an assembly from one or more files, so that the BuildProvider instance can contribute source code for its file to the overall assembly.</source>
          <target state="translated">ASP.NET 生成环境传递&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;对象基于首选的编译器语言和 BuildProvider 方法的文件的上下文生成来自一个或多个文件的程序集时，以便 BuildProvider 实例可以参与到总体程序集及其文件的源代码。&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To define custom build actions for a file type within an ASP.NET application, you must derive a class from BuildProvider, implement members within the derived class for building the file type, and configure the build provider for the corresponding file extension within the application configuration file.</source>
          <target state="translated">定义自定义生成操作的文件类型在 ASP.NET 应用程序，你必须从 BuildProvider 派生一个类，实现用于生成文件类型的派生类中的成员并配置的生成提供程序应用程序配置文件中的相应文件扩展名。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The  specifies the file extension for supported files, and whether the build provider supports code files, Web files, resource files or all files.</source>
          <target state="translated">指定的文件扩展名为受支持的文件，并在生成提供程序支持文件、 Web 文件、 资源文件或所有文件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`type`</ph> attribute to specify the fully qualified type name of the build provider implementation.</source>
          <target state="translated">使用<ph id="ph1">`type`</ph>特性以指定的生成提供程序实现的完全限定的类型名称。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Web.Compilation.BuildProviderAppliesToAttribute&gt; class to specify whether the build provider applies to files in the App_Code directory, to files in a Web content directory, to global or local resources, or to all files.</source>
          <target state="translated">使用&lt;xref:System.Web.Compilation.BuildProviderAppliesToAttribute&gt;类指定在生成提供程序应用到 App_Code 目录中的文件、 Web 内容目录，为全局或本地资源中的文件或所有文件。&lt;/xref:System.Web.Compilation.BuildProviderAppliesToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`extension`</ph> attribute to specify the file extension used to identify files that the BuildProvider class supports.</source>
          <target state="translated">使用<ph id="ph1">`extension`</ph>特性来指定用于标识 BuildProvider 类支持的文件的文件扩展名。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Web.Configuration.BuildProviderCollection&gt; class to examine build providers in a configuration file.</source>
          <target state="translated">使用&lt;xref:System.Web.Configuration.BuildProviderCollection&gt;类来检查生成提供程序配置文件中的。&lt;/xref:System.Web.Configuration.BuildProviderCollection&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information about configuring a build provider, see <bpt id="p1">[</bpt>buildProviders Element for compilation (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>.</source>
          <target state="translated">有关配置的生成提供程序的详细信息，请参阅<bpt id="p1">[</bpt>buildProviders 元素进行编译 （ASP.NET 设置架构）<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To implement a build provider that generates source code for a custom file type, derive a class from BuildProvider, and override the &lt;xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt; method to generate source code for the supported file type.</source>
          <target state="translated">若要实现为自定义文件类型生成源代码的生成提供程序，从 BuildProvider，派生类并重写&lt;xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt;方法来为支持的文件类型生成源代码。&lt;/xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The generated source is added to the &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; object in the form of a CodeDOM graph, or as content that represents a physical source code file.</source>
          <target state="translated">生成的源代码添加到&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;形式在 CodeDOM 图中，或者作为表示物理源代码文件的内容的对象。&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the build provider requires a specific programming language, override the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; property to return a &lt;xref:System.Web.Compilation.CompilerType&gt; object for the supported programming language.</source>
          <target state="translated">如果在生成提供程序需要特定的编程语言，重写&lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;属性以返回&lt;xref:System.Web.Compilation.CompilerType&gt;的受支持的编程语言的对象。&lt;/xref:System.Web.Compilation.CompilerType&gt; &lt;/xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the build provider does not require a specific programming language, do not override the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; property; use the base class implementation, which indicates that the build provider can use any .NET Framework language, such as Visual Basic or C#.</source>
          <target state="translated">如果在生成提供程序不需要特定的编程语言，不会覆盖&lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;属性; 请改用基类实现，它指示在生成提供程序可以使用任何.NET Framework 语言，如 Visual Basic 或 C#。&lt;/xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To implement a build provider that generates source code for Web content, derive a class from BuildProvider and override the &lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt; method to return the &lt;xref:System.Type&gt; for the class generated by BuildProvider.</source>
          <target state="translated">若要实现 Web 内容为生成源代码的生成提供程序，从 BuildProvider 并重写派生类&lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt;方法以返回&lt;xref:System.Type&gt;BuildProvider 所生成的类。&lt;/xref:System.Type&gt; &lt;/xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Override the &lt;xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt; method to generate source code for the type provided by the supported file.</source>
          <target state="translated">重写&lt;xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt;方法为提供的受支持的文件类型生成源代码。&lt;/xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Adding a customized BuildProvider class to the Web.config file works in an ASP.NET Web site but does not work in an ASP.NET Web application project.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 将自定义的 BuildProvider 类添加到 Web.config 文件可用于在 ASP.NET Web 站点，但不起作用的 ASP.NET Web 应用程序项目中。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In a Web application project, the code that is generated by the BuildProvider class cannot be included in the application.</source>
          <target state="translated">在 Web 应用程序项目中，不能由 BuildProvider 类生成的代码包含在应用程序。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Web Application Project Precompilation Overview<ept id="p1">](http://msdn.microsoft.com/en-us/b940abbd-178d-4570-b441-52914fa7b887)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>ASP.NET Web 应用程序项目预编译概述<ept id="p1">](http://msdn.microsoft.com/en-us/b940abbd-178d-4570-b441-52914fa7b887)</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Because the &lt;xref:System.Web.Compilation.BuildProvider&gt; class is abstract, you cannot create an instance of &lt;xref:System.Web.Compilation.BuildProvider&gt; directly using the constructor.</source>
          <target state="translated">因为&lt;xref:System.Web.Compilation.BuildProvider&gt;类为抽象类，你无法创建的实例&lt;xref:System.Web.Compilation.BuildProvider&gt;直接使用构造函数。&lt;/xref:System.Web.Compilation.BuildProvider&gt; &lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When deriving from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class, override the constructor to implement custom initialization actions for your build provider implementation.</source>
          <target state="translated">从派生时&lt;xref:System.Web.Compilation.BuildProvider&gt;类中，重写构造函数来实现你的生成提供程序实现的自定义初始化操作。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Represents the compiler type used by a build provider to generate source code for a custom file type.</source>
          <target state="translated">表示生成提供程序用于为自定义文件类型生成源代码的编译器类型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Use the CodeCompilerType property to provide the settings for compiling source code for an implementation of &lt;xref:System.Web.Compilation.BuildProvider&gt;.</source>
          <target state="translated">CodeCompilerType 属性用于提供设置编译的实现的&lt;xref:System.Web.Compilation.BuildProvider&gt;.&lt;/xref:System.Web.Compilation.BuildProvider&gt;的源代码</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The CodeCompilerType property is <ph id="ph1">`null`</ph> if the build provider does not require a specific code language for generating and compiling source code.</source>
          <target state="translated">CodeCompilerType 属性是<ph id="ph1">`null`</ph>如果生成提供程序不需要特定的代码语言生成和编译源代码。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To set the value for a &lt;xref:System.Web.Compilation.CompilerType&gt; object within a build provider implementation, use the &lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt; or &lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt; method.</source>
          <target state="translated">若要设置的值&lt;xref:System.Web.Compilation.CompilerType&gt;中生成提供程序实现中，使用对象&lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt;或&lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt;方法。&lt;/xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt; &lt;/xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt; &lt;/xref:System.Web.Compilation.CompilerType&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A&gt; property specifies the &lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt; implementation that is used to generate and compile source code for a build provider.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A&gt;属性指定&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;用于生成和编译为生成提供程序的源代码的实现。&lt;/xref:System.CodeDom.Compiler.CodeDomProvider&gt; &lt;/xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.CompilerType.CompilerParameters%2A&gt; property defines the settings that are used to compile the source code into an assembly.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.CompilerType.CompilerParameters%2A&gt;属性定义的设置，用于将源代码编译为程序集。&lt;/xref:System.Web.Compilation.CompilerType.CompilerParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A read-only <bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the code generator, code compiler, and compiler settings used to build source code for the virtual path.</source>
          <target state="translated">只读<bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示代码生成器、 代码编译器和用于为虚拟路径生成源代码的编译器设置。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The base class returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">基类返回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Generates source code for the virtual path of the build provider, and adds the source code to a specified assembly builder.</source>
          <target state="translated">为生成提供程序的虚拟路径生成源代码，并将源代码添加到指定的程序集生成器。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To implement a build provider that generates source code for a custom file type, derive a class from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class, and override the GenerateCode method to generate source code for the supported file type.</source>
          <target state="translated">若要实现为自定义文件类型生成源代码的生成提供程序，从派生类&lt;xref:System.Web.Compilation.BuildProvider&gt;类，并重写要为受支持的文件类型生成源代码的 GenerateCode 方法。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Typically, a build provider's GenerateCode implementation reads the &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt; property, parses the contents, and adds the generated source code to the specified &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; object.</source>
          <target state="translated">通常情况下，生成提供程序的 GenerateCode 实现读取&lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt;属性，分析内容，并将所生成的源代码添加到指定&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;对象。&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt; &lt;/xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can contribute source code to the assembly in the form of a &lt;xref:System.IO.TextWriter&gt; object or a CodeDOM graph.</source>
          <target state="translated">你可参与源代码中的窗体的程序集&lt;xref:System.IO.TextWriter&gt;对象或在 CodeDOM 图。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To add source code to the assembly through a &lt;xref:System.IO.TextWriter&gt; object, use the &lt;xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A&gt; method.</source>
          <target state="translated">若要将源代码添加到的程序集通过&lt;xref:System.IO.TextWriter&gt;对象，请使用&lt;xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A&gt;方法。&lt;/xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A&gt; &lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To add source code in a CodeDOM graph to the assembly, use the &lt;xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A&gt; method.</source>
          <target state="translated">若要将源代码在 CodeDOM 图中添加对程序集，使用&lt;xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A&gt;方法。&lt;/xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If the build provider generates source code in a specific programming language, you must override the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; property to return a &lt;xref:System.Web.Compilation.CompilerType&gt; object for the supported programming language.</source>
          <target state="translated">如果在生成提供程序采用特定编程语言生成源代码，则必须重写&lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;属性以返回&lt;xref:System.Web.Compilation.CompilerType&gt;的受支持的编程语言的对象。&lt;/xref:System.Web.Compilation.CompilerType&gt; &lt;/xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The assembly builder that references the source code generated by the build provider.</source>
          <target state="translated">引用生成提供程序生成的源代码的程序集生成器。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Represents the container for the generated CodeDOM graph.</source>
          <target state="translated">表示生成的 CodeDOM 图的容器。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This method can be used through the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; class for syntax highlighting and designer support in Visual Studio.</source>
          <target state="translated">可以通过使用此方法&lt;xref:System.Web.Compilation.ClientBuildManager&gt;类的 Visual Studio 中支持的语法突出显示和设计器。&lt;/xref:System.Web.Compilation.ClientBuildManager&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a dictionary that contains all associated line numbers and line pragmas of the source code.</source>
          <target state="translated">此方法返回时，包含一个字典，其中包含所有关联的行号，并对源代码的行杂注。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数传递时未经初始化。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The container for the CodeDOM graph that is generated by the <bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">生成的 CodeDOM 图的容器<bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Generates a string to be persisted in the compiled assembly.</source>
          <target state="translated">生成要保留在编译的程序集的字符串。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A&gt; method of a &lt;xref:System.Web.Compilation.BuildManager&gt; object creates an instance of a build provider for an input virtual path, and calls the GetCustomString method on the &lt;xref:System.Web.Compilation.BuildProvider&gt; object.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A&gt;方法&lt;xref:System.Web.Compilation.BuildManager&gt;对象创建一个输入的虚拟路径的生成提供程序的实例并调用 GetCustomString 方法&lt;xref:System.Web.Compilation.BuildProvider&gt;对象。&lt;/xref:System.Web.Compilation.BuildProvider&gt; &lt;/xref:System.Web.Compilation.BuildManager&gt; &lt;/xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The base &lt;xref:System.Web.Compilation.BuildProvider&gt; class returns <ph id="ph1">`null`</ph> for the GetCustomString method, indicating that GetCustomString is not implemented.</source>
          <target state="translated">基&lt;xref:System.Web.Compilation.BuildProvider&gt;类返回<ph id="ph1">`null`</ph>对于 GetCustomString 方法，指示未实现 GetCustomString。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Certain build provider implementations can implement GetCustomString in place of the &lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt; method.</source>
          <target state="translated">某些生成提供程序实现可以实现代替了 GetCustomString&lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt;方法。&lt;/xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Web.Compilation.BuildProvider&gt; object typically uses &lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt; to return a &lt;xref:System.Type&gt; object for a virtual path.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.BuildProvider&gt;对象通常使用&lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt;可返回一个&lt;xref:System.Type&gt;对象是虚拟路径。&lt;/xref:System.Type&gt; &lt;/xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt; &lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>However, the GetCustomString method can be used to indicate that a &lt;xref:System.Web.Compilation.BuildProvider&gt; object can generate multiple types from a virtual path.</source>
          <target state="translated">但是，使用 GetCustomString 方法，则指示&lt;xref:System.Web.Compilation.BuildProvider&gt;对象可以生成多个类型从一个虚拟路径。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The compilation results for the build provider's virtual path.</source>
          <target state="translated">生成提供程序的虚拟路径的编译结果。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A string to be persisted in the build environment, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance does not implement GetCustomString.</source>
          <target state="translated">要在生成环境中，保留的字符串或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实例不实现 GetCustomString。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns the compiler settings for the default language in the application.</source>
          <target state="translated">应用程序中返回的默认语言的编译器设置。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Use the GetDefaultCompilerType method to examine the default compiler type for a build provider.</source>
          <target state="translated">使用 GetDefaultCompilerType 方法检查有生成提供程序的默认编译器类型。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt; method to examine the compiler type configured in a build provider for a specific language name.</source>
          <target state="translated">使用&lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt;方法可检查配置中的生成提供程序特定语言名称的编译器类型。&lt;/xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The base &lt;xref:System.Web.Compilation.BuildProvider&gt; class determines the default compiler type using the <ph id="ph1">`defaultLanguage`</ph> attribute value in the  section of the application configuration file.</source>
          <target state="translated">基&lt;xref:System.Web.Compilation.BuildProvider&gt;类可确定默认的编译器类型使用<ph id="ph1">`defaultLanguage`</ph>属性值的部分中的应用程序配置文件。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If there is no default language setting in the compilation section, the default compiler type is set using the &lt;xref:Microsoft.VisualBasic.VBCodeProvider&gt; language provider.</source>
          <target state="translated">如果没有编译部分中的默认语言设置，使用设置的默认编译器类型&lt;xref:Microsoft.VisualBasic.VBCodeProvider&gt;语言提供程序。&lt;/xref:Microsoft.VisualBasic.VBCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When deriving from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class, you can use GetDefaultCompilerType to set the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; property within your implementation.</source>
          <target state="translated">从派生时&lt;xref:System.Web.Compilation.BuildProvider&gt;类，你可以使用 GetDefaultCompilerType 设置&lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;中实现的属性。&lt;/xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; &lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the compiler settings for the default language in the application.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示应用程序中的默认语言的编译器设置。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The base class returns the default compiler based on the application configuration file.</source>
          <target state="translated">基类返回默认编译器根据应用程序配置文件。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns the compiler settings for the build provider based on the specified language.</source>
          <target state="translated">返回生成提供程序基于指定的语言的编译器设置。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use the GetDefaultCompilerTypeForLanguage method to examine the compiler type configured in the build provider for a specific language name.</source>
          <target state="translated">GetDefaultCompilerTypeForLanguage 方法用于检查配置中的生成提供程序特定语言名称的编译器类型。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt; method to examine the default compiler type for a build provider.</source>
          <target state="translated">使用&lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt;方法可为生成提供程序检查默认的编译器类型。&lt;/xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The base &lt;xref:System.Web.Compilation.BuildProvider&gt; class determines the default compiler type using the &lt;xref:System.Web.Configuration.Compiler&gt; elements in the &lt;xref:System.Web.Configuration.CompilationSection.Compilers%2A&gt; property of the &lt;xref:System.Web.Configuration.CompilationSection&gt; object for the configuration file.</source>
          <target state="translated">基&lt;xref:System.Web.Compilation.BuildProvider&gt;类可确定默认的编译器类型使用&lt;xref:System.Web.Configuration.Compiler&gt;中的元素&lt;xref:System.Web.Configuration.CompilationSection.Compilers%2A&gt;属性&lt;xref:System.Web.Configuration.CompilationSection&gt;配置文件的对象。&lt;/xref:System.Web.Configuration.CompilationSection&gt; &lt;/xref:System.Web.Configuration.CompilationSection.Compilers%2A&gt; &lt;/xref:System.Web.Configuration.Compiler&gt; &lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This is equivalent to examining the  elements in the  and the  elements in the  sections of the configuration file.</source>
          <target state="translated">这相当于检查和元素的配置文件的部分中的元素。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, for the <ph id="ph1">`language`</ph> value VB, the base class method returns a &lt;xref:System.Web.Compilation.CompilerType&gt; object that corresponds to the configured settings for an instance of &lt;xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName&gt;.</source>
          <target state="translated">例如，对于<ph id="ph1">`language`</ph>值 VB，基类方法返回的&lt;xref:System.Web.Compilation.CompilerType&gt;对象相对应的实例&lt;xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName&gt;。&lt;/xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName&gt;为配置的设置&lt;/xref:System.Web.Compilation.CompilerType&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When you derive from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class, you can use GetDefaultCompilerTypeForLanguage to set the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; property value for the language supported by your implementation.</source>
          <target state="translated">派生自&lt;xref:System.Web.Compilation.BuildProvider&gt;类，你可以使用 GetDefaultCompilerTypeForLanguage 设置&lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;由您的实现所支持的语言的属性值。&lt;/xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; &lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A code language name.</source>
          <target state="translated">代码的语言名。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the compiler settings for the build provider based on the specified language.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示生成提供程序基于指定的语言的编译器设置。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The base class returns the default compiler settings for the language based on the application configuration file.</source>
          <target state="translated">基类返回默认值基于应用程序配置文件的语言的编译器设置。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;language&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;language&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;language&lt;/code&gt;</ph> does not match a configured compiler for the build provider.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;language&lt;/code&gt;</ph>生成提供程序不匹配的已配置的编译器。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns a type generated by the build provider from the virtual path.</source>
          <target state="translated">返回生成提供程序从虚拟路径生成的类型。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To implement a build provider that generates source code for Web content such as .aspx files, derive a class from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class and override the GetGeneratedType method to return the type generated by the build provider.</source>
          <target state="translated">若要实现为 Web 内容如.aspx 文件生成源代码的生成提供程序，从派生类&lt;xref:System.Web.Compilation.BuildProvider&gt;类并重写 GetGeneratedType 方法返回生成提供程序生成的类型。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The ASP.NET build system compiles files for each build provider, and generates a &lt;xref:System.CodeDom.Compiler.CompilerResults&gt; object, which is passed to the GetGeneratedType method.</source>
          <target state="translated">ASP.NET 生成系统会将文件编译为每个生成提供程序，并生成&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;对象，将传递给 GetGeneratedType 方法。&lt;/xref:System.CodeDom.Compiler.CompilerResults&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Typically, a build provider's GetGeneratedType implementation uses the &lt;xref:System.Reflection.Assembly.GetType%2A&gt; method on the &lt;xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt; property of the input <ph id="ph1">`results`</ph> object to return the provided type.</source>
          <target state="translated">通常情况下，生成提供程序的 GetGeneratedType 实现使用&lt;xref:System.Reflection.Assembly.GetType%2A&gt;方法&lt;xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt;属性输入<ph id="ph1">`results`</ph>对象以返回所提供的类型。&lt;/xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt; &lt;/xref:System.Reflection.Assembly.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The compilation results for the build provider's virtual path.</source>
          <target state="translated">生成提供程序的虚拟路径的编译结果。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The type that is generated by the build provider for the virtual path.</source>
          <target state="translated">生成提供程序的虚拟路径生成的类型。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The base class returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">基类返回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Returns a value indicating actions required when a virtual path is built.</source>
          <target state="translated">返回一个值，该值指示生成虚拟路径时所需的操作。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The GetResultFlags method is used by the ASP.NET build environment when using instances of the &lt;xref:System.Web.Compilation.BuildProvider&gt; class to build files and load the compiled assemblies.</source>
          <target state="translated">GetResultFlags 方法由 ASP.NET 生成环境使用的实例时&lt;xref:System.Web.Compilation.BuildProvider&gt;类生成文件和加载已编译的程序集。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The base &lt;xref:System.Web.Compilation.BuildProvider&gt; class method returns the &lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt; field value, indicating that no special action is required when the virtual path is built.</source>
          <target state="translated">基&lt;xref:System.Web.Compilation.BuildProvider&gt;类方法返回&lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt;字段值，指示生成虚拟路径时，不需要任何特殊操作。&lt;/xref:System.Web.Compilation.BuildProviderResultFlags&gt; &lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When deriving from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class, you can implement the GetResultFlags method to return a different &lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt; value for your custom file type or virtual path.</source>
          <target state="translated">当派生自的&lt;xref:System.Web.Compilation.BuildProvider&gt;类，你可以实现 GetResultFlags 方法返回不同&lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt;值，则为你的自定义文件类型或虚拟路径。&lt;/xref:System.Web.Compilation.BuildProviderResultFlags&gt; &lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For example, if a rebuild of your virtual path requires the containing &lt;xref:System.AppDomain&gt; object to be reloaded, you can return the &lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt; enumeration value from your GetResultFlags method.</source>
          <target state="translated">例如，如果重新生成你的虚拟路径将需要包含&lt;xref:System.AppDomain&gt;要重新加载，你可以返回对象&lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt;从 GetResultFlags 方法的枚举值。&lt;/xref:System.Web.Compilation.BuildProviderResultFlags&gt; &lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The compilation results for the build provider's virtual path.</source>
          <target state="translated">生成提供程序的虚拟路径的编译结果。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProviderResultFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating actions required after the virtual path is built within the ASP.NET build environment.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProviderResultFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>值，该值指示生成环境中 ASP.NET 生成的虚拟路径后所需的操作。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Opens a text reader for reading from the virtual path of the current build provider object.</source>
          <target state="translated">从当前生成提供程序对象的虚拟路径打开以进行读取文本读取器。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.TextReader.Read%2A&gt; method on the returned &lt;xref:System.IO.TextReader&gt; object to read the contents of the &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt; property for a &lt;xref:System.Web.Compilation.BuildProvider&gt; object.</source>
          <target state="translated">使用&lt;xref:System.IO.TextReader.Read%2A&gt;方法返回&lt;xref:System.IO.TextReader&gt;要读取的内容对象&lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt;属性&lt;xref:System.Web.Compilation.BuildProvider&gt;对象。&lt;/xref:System.Web.Compilation.BuildProvider&gt; &lt;/xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt; &lt;/xref:System.IO.TextReader&gt; &lt;/xref:System.IO.TextReader.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>After calling the OpenReader method, you must use the &lt;xref:System.IO.TextReader.Close%2A&gt; method to close the &lt;xref:System.IO.TextReader&gt; object and free associated system resources.</source>
          <target state="translated">调用 OpenReader 方法后，你必须使用&lt;xref:System.IO.TextReader.Close%2A&gt;方法来关闭&lt;xref:System.IO.TextReader&gt;对象并释放关联的系统资源。&lt;/xref:System.IO.TextReader&gt; &lt;/xref:System.IO.TextReader.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An open &lt;xref:System.IO.TextReader&gt; that can be used to read the contents of the &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;可以用于读取的内容的&lt;xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;。&lt;/xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;&lt;/xref:System.IO.TextReader&gt;打开</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Opens a text reader for reading from a specified virtual path.</source>
          <target state="translated">从指定的虚拟路径打开以进行读取文本读取器。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.TextReader.Read%2A&gt; method on the returned &lt;xref:System.IO.TextReader&gt; object to read the contents of the virtual path.</source>
          <target state="translated">使用&lt;xref:System.IO.TextReader.Read%2A&gt;方法对返回的&lt;xref:System.IO.TextReader&gt;对象来读取的内容的虚拟路径。&lt;/xref:System.IO.TextReader&gt; &lt;/xref:System.IO.TextReader.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>After calling the &lt;xref:System.Web.Compilation.BuildProvider.OpenReader%2A&gt; method, you must use the &lt;xref:System.IO.TextReader.Close%2A&gt; method to close the &lt;xref:System.IO.TextReader&gt; object and free associated system resources.</source>
          <target state="translated">在调用&lt;xref:System.Web.Compilation.BuildProvider.OpenReader%2A&gt;方法，则必须使用&lt;xref:System.IO.TextReader.Close%2A&gt;方法来关闭&lt;xref:System.IO.TextReader&gt;对象并释放关联的系统资源。&lt;/xref:System.IO.TextReader&gt; &lt;/xref:System.IO.TextReader.Close%2A&gt; &lt;/xref:System.Web.Compilation.BuildProvider.OpenReader%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The virtual path to read.</source>
          <target state="translated">要读取的虚拟路径。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An open &lt;xref:System.IO.TextReader&gt; that can be used to read the contents of the specified virtual path.</source>
          <target state="translated">打开&lt;xref:System.IO.TextReader&gt;，可用于读取的内容指定的虚拟路径。&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Opens a stream for reading the virtual path of the current build provider object.</source>
          <target state="translated">打开一个流以便读取当前生成提供程序对象的虚拟路径。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Stream.Read%2A&gt; method on the returned &lt;xref:System.IO.Stream&gt; object to read the contents of the virtual path for the &lt;xref:System.Web.Compilation.BuildProvider&gt; object.</source>
          <target state="translated">使用&lt;xref:System.IO.Stream.Read%2A&gt;方法返回&lt;xref:System.IO.Stream&gt;要读取的虚拟路径的内容对象&lt;xref:System.Web.Compilation.BuildProvider&gt;对象。&lt;/xref:System.Web.Compilation.BuildProvider&gt; &lt;/xref:System.IO.Stream&gt; &lt;/xref:System.IO.Stream.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>After calling the OpenStream method, you must use the &lt;xref:System.IO.Stream.Close%2A&gt; method to close the &lt;xref:System.IO.Stream&gt; object and free associated system resources.</source>
          <target state="translated">调用 OpenStream 方法后，你必须使用&lt;xref:System.IO.Stream.Close%2A&gt;方法来关闭&lt;xref:System.IO.Stream&gt;对象并释放关联的系统资源。&lt;/xref:System.IO.Stream&gt; &lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An open &lt;xref:System.IO.Stream&gt; that can be used to read the contents of the &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;可以用于读取的内容的&lt;xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;。&lt;/xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;&lt;/xref:System.IO.Stream&gt;打开</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Opens a stream for reading from a specified virtual path.</source>
          <target state="translated">从指定的虚拟路径中打开一个流以便读取。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Stream.Read%2A&gt; method on the returned &lt;xref:System.IO.Stream&gt; object to read the contents of the virtual path.</source>
          <target state="translated">使用&lt;xref:System.IO.Stream.Read%2A&gt;方法对返回的&lt;xref:System.IO.Stream&gt;对象来读取的内容的虚拟路径。&lt;/xref:System.IO.Stream&gt; &lt;/xref:System.IO.Stream.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>After calling the &lt;xref:System.Web.Compilation.BuildProvider.OpenStream%2A&gt; method, you must use the &lt;xref:System.IO.Stream.Close%2A&gt; method to close the &lt;xref:System.IO.Stream&gt; object and free associated system resources.</source>
          <target state="translated">在调用&lt;xref:System.Web.Compilation.BuildProvider.OpenStream%2A&gt;方法，则必须使用&lt;xref:System.IO.Stream.Close%2A&gt;方法来关闭&lt;xref:System.IO.Stream&gt;对象并释放关联的系统资源。&lt;/xref:System.IO.Stream&gt; &lt;/xref:System.IO.Stream.Close%2A&gt; &lt;/xref:System.Web.Compilation.BuildProvider.OpenStream%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The virtual path to read.</source>
          <target state="translated">要读取的虚拟路径。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An open &lt;xref:System.IO.Stream&gt; that can be used to read the contents of the specified virtual path.</source>
          <target state="translated">打开&lt;xref:System.IO.Stream&gt;，可用于读取的内容指定的虚拟路径。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, enables you to review compiler error messages so that you can modify them to provide more information.</source>
          <target state="translated">当在派生类中重写，允许你查看编译器错误消息，以便可以修改它们以提供详细信息。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You typically override this method so that you can modify compiler errors before they are displayed in order to make the error text more helpful to the user.</source>
          <target state="translated">你通常重写此方法，以便它们为了使对用户更有帮助的错误文本显示之前，你可以修改编译器错误。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This is useful in scenarios where you know the context of certain errors and can provide information to the user about how to fix them.</source>
          <target state="translated">这是非常有用的认识某些错误的上下文并可向有关如何解决它们的用户提供信息的位置。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The original compiler error message is usually specific to a particular language construct and might not make the real cause or solution obvious to the user.</source>
          <target state="translated">原始的编译器错误消息通常特定于特定语言构造，并可能无法实现的真正原因或解决方案明显给用户。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>You can access the errors by using the &lt;xref:System.CodeDom.Compiler.CompilerResults&gt; object that is passed to the method.</source>
          <target state="translated">你可以通过使用访问错误&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;传递给方法的对象。&lt;/xref:System.CodeDom.Compiler.CompilerResults&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Compiler results.</source>
          <target state="translated">编译器结果。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Represents the assemblies to compile with the source generated by the build provider.</source>
          <target state="translated">表示要使用生成提供程序生成的源代码进行编译的程序集。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment initializes the collection of assemblies that are available for reference by the build provider.</source>
          <target state="translated">ASP.NET 生成环境初始化可为生成提供程序的引用的程序集的集合。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The source code generated by a build provider can use public types in the referenced assemblies.</source>
          <target state="translated">生成提供程序生成的源代码可以使用公共类型中引用的程序集。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The referenced assembly collection consists of other assemblies built in the ASP.NET application, and assemblies listed in the  element in the configuration file.</source>
          <target state="translated">引用的程序集集合包含的其他 ASP.NET 应用程序，在生成的程序集和配置文件中的元素中列出的程序集。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the &lt;xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt; method.</source>
          <target state="translated">如果生成提供程序生成引用其他程序集的源代码，生成提供程序将使用的其他程序集添加&lt;xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt;方法。&lt;/xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</source>
          <target state="translated">ASP.NET 生成环境解析外部类型在使用添加的两个引用的程序集的程序集编译过程生成提供程序和可用于引用的程序集的默认集合。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The ReferencedAssemblies collection does not include assemblies that are added for reference by other build providers through the &lt;xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt; method.</source>
          <target state="translated">ReferencedAssemblies 集合不包括程序集是通过其他生成提供程序通过添加为引用&lt;xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt;方法。&lt;/xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A read-only collection of assemblies that can be referenced by the source code generated by the build provider.</source>
          <target state="translated">可以通过生成提供程序生成的源代码中引用的程序集的只读集合。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Registers a build provider.</source>
          <target state="translated">注册生成提供程序。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>You can use this method to register build providers instead of defining them in the Web.config file.</source>
          <target state="translated">你可以使用此方法注册生成提供程序而不是在 Web.config 文件中定义它们。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For more information about build providers, see the &lt;xref:System.Web.Compilation.BuildProvider&gt; class and <bpt id="p1">[</bpt>buildProviders Element for compilation (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>.</source>
          <target state="translated">有关生成提供程序的详细信息，请参阅&lt;xref:System.Web.Compilation.BuildProvider&gt;类和<bpt id="p1">[</bpt>buildProviders 元素进行编译 （ASP.NET 设置架构）<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The file-name extension that the build provider is for.</source>
          <target state="translated">生成提供程序文件名称扩展。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The build provider class.</source>
          <target state="translated">生成提供程序类。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Represents the file to be built by this build provider implementation.</source>
          <target state="translated">表示要生成的此生成提供程序实现的文件。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The virtual path of a &lt;xref:System.Web.Compilation.BuildProvider&gt; object is the path to the file that is being compiled by the build provider.</source>
          <target state="translated">虚拟路径&lt;xref:System.Web.Compilation.BuildProvider&gt;对象是正在编译生成提供程序的文件的路径。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For example, if you have configured a custom &lt;xref:System.Web.Compilation.BuildProvider&gt; class to build all files in the Web site with the custom extension of .abc, if your Web site is named WebSite1, and the Web site contains a file named Example.abc, the VirtualPath property contains the value <ph id="ph1">`/WebSite1/Example.abc`</ph>.</source>
          <target state="translated">例如，如果你已配置自定义&lt;xref:System.Web.Compilation.BuildProvider&gt;类以生成具有.abc 自定义扩展的 Web 站点中的所有文件中，如果您的网站名称为 WebSite1，并且该网站包含一个名为 Example.abc 文件，VirtualPath 属性都包含值<ph id="ph1">`/WebSite1/Example.abc`</ph>。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The file extension of each file within the application determines the file type, and the corresponding build provider for the file type.</source>
          <target state="translated">应用程序中的每个文件的文件扩展名确定文件类型，以及相应的生成提供程序为文件类型。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment initializes a &lt;xref:System.Web.Compilation.BuildProvider&gt; object for each file based on the file type, and uses the &lt;xref:System.Web.Compilation.BuildProvider&gt; methods to generate source for each file.</source>
          <target state="translated">ASP.NET 生成环境初始化&lt;xref:System.Web.Compilation.BuildProvider&gt;对象每个文件基于的文件类型，并使用&lt;xref:System.Web.Compilation.BuildProvider&gt;要生成的每个文件的源的方法。&lt;/xref:System.Web.Compilation.BuildProvider&gt; &lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For more information about configuring a build provider, see <bpt id="p1">[</bpt>buildProviders Element for compilation (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>.</source>
          <target state="translated">有关配置的生成提供程序的详细信息，请参阅<bpt id="p1">[</bpt>buildProviders 元素进行编译 （ASP.NET 设置架构）<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A read-only string that specifies the virtual path of a file to be compiled by this build provider.</source>
          <target state="translated">一个只读的字符串，指定要编译此生成提供程序的文件的虚拟路径。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Represents a collection of virtual paths that must be built before the build provider generates code.</source>
          <target state="translated">表示的生成提供程序生成代码之前必须生成的虚拟路径的集合。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The VirtualPathDependencies property is a collection of virtual paths that must be compiled before the &lt;xref:System.Web.Compilation.BuildProvider&gt; instance generates source code.</source>
          <target state="translated">VirtualPathDependencies 属性是必须在之前编译的虚拟路径的集合&lt;xref:System.Web.Compilation.BuildProvider&gt;实例生成源代码。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The assemblies from the virtual paths in VirtualPathDependencies are added as references to the compilation for the &lt;xref:System.Web.Compilation.BuildProvider&gt; instance.</source>
          <target state="translated">从 VirtualPathDependencies 中的虚拟路径的程序集作为引用添加到针对编译&lt;xref:System.Web.Compilation.BuildProvider&gt;实例。&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A read-only collection of strings, representing the virtual paths that this instance of the build provider is dependent on.</source>
          <target state="translated">一个字符串，表示生成提供程序的此实例所依赖的虚拟路径的只读集合中。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>