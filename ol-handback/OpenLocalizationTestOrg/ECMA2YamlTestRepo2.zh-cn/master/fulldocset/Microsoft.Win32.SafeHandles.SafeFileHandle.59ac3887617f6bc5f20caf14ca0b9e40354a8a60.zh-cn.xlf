<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d41f1a2015241835a211375f36e24705b77ddb2b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.Win32.SafeHandles.SafeFileHandle.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dff35eb5a2a131fbe03e865fb478d49022a08ce4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45d681155eba4c40fab82e8595948c66068c5df6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a wrapper class for a file handle.</source>
          <target state="translated">表示 file 句柄的包装类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is derived from &lt;xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid&gt;.</source>
          <target state="translated">此类派生自&lt;xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid&gt;.&lt;/xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A value of 0 or -1 is an invalid file handle.</source>
          <target state="translated">值为 0 或-1 是一个无效文件句柄。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 此类型实现&lt;xref:System.IDisposable&gt;接口。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">完成后使用类型的操作后，你应释放类型直接或间接。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">若要直接释放类型，调用其&lt;xref:System.IDisposable.Dispose%2A&gt;中的方法<ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph>块。&lt;/xref:System.IDisposable.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要间接释放类型，使用一种语言构造如<ph id="ph1">`using`</ph>（在 C# 中) 或<ph id="ph2">`Using`</ph>（在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分&lt;xref:System.IDisposable&gt;接口主题。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeFileHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeFileHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IntPtr&gt; object that represents the pre-existing handle to use.</source>
          <target state="translated">&lt;xref:System.IntPtr&gt;对象，表示要使用的预先存在的句柄。&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to reliably release the handle during the finalization phase; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to prevent reliable release (not recommended).</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要在终止阶段; 可靠地释放句柄<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要阻止可靠释放 （不推荐）。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>