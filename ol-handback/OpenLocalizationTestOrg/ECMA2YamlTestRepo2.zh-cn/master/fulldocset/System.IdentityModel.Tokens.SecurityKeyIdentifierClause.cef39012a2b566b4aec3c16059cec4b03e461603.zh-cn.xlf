<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2960845538da2e5dca5aa0c4ab4d69e970dc29c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.SecurityKeyIdentifierClause.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ea5d3840d16133a47d3cac0db258ff44dbcc4a5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4e74976da6657d1d435c0dfe10182d89a89e844</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an abstract base class for a key identifier clause.</source>
          <target state="translated">表示密钥标识符子句的抽象基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Typically, the SecurityKeyIdentifierClause does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">通常情况下，SecurityKeyIdentifierClause 不需要时要使用，而不创建自定义安全令牌服务。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">当安全令牌服务返回安全令牌时，已颁发的安全令牌将包含对附加的和未附加安全令牌的引用。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</source>
          <target state="translated">附加的引用指包含在 SOAP 消息的安全标头的安全令牌，而未附加的引用则引用未包含在 SOAP 消息的安全标头的安全令牌。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">这些引用通常确认已颁发的安全令牌的真实性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified key identifier clause type.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的密钥标识符子句类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When this security key identifier is serialized into XML, the <ph id="ph1">`clauseType`</ph> parameter is serialized as the <ph id="ph2">`ValueType`</ph> attribute of the <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> element.</source>
          <target state="translated">当此安全密钥标识符序列化为 XML，<ph id="ph1">`clauseType`</ph>参数序列化为<ph id="ph2">`ValueType`</ph>属性<ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph>元素。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The key identifier clause type.</source>
          <target state="translated">密钥标识符子句类型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt; property.</source>
          <target state="translated">设置的值&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;属性。&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified key identifier clause type, nonce, and the derived key length.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的密钥标识符子句类型、 nonce 和派生密钥长度。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> does not support the creation of implied derived key identifiers.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph>不支持创建隐含的派生密钥标识符。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> processes incoming SOAP messages that contain implied key identifier.</source>
          <target state="translated">但是，<ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph>处理包含隐含密钥标识符的传入 SOAP 消息。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The key identifier clause type.</source>
          <target state="translated">密钥标识符子句类型。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt; property.</source>
          <target state="translated">设置的值&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;属性。&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the nonce that was used to create a derived key.</source>
          <target state="translated">数组&lt;xref:System.Byte&gt;，包含用于创建派生的密钥的 nonce。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Sets the value that is returned by the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*&gt; method.</source>
          <target state="translated">设置返回的值&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The size of the derived key.</source>
          <target state="translated">派生密钥的大小。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*&gt; property.</source>
          <target state="translated">设置的值&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*&gt;属性。&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a key can be created.</source>
          <target state="translated">获取一个值，该值指示是否可以创建密钥。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When a key can be created using the parameters passed into a constructor, override the CanCreateKey method to return <ph id="ph1">`true`</ph> and implement the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt; method.</source>
          <target state="translated">当可以使用传入构造函数的参数创建密钥时，重写 CanCreateKey 方法以返回<ph id="ph1">`true`</ph>和实现&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a key can be created; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果可以创建密钥;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the key identifier clause type.</source>
          <target state="translated">获取密钥标识符子句类型。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The key identifier clause type.</source>
          <target state="translated">密钥标识符子句类型。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Creates a key based on the parameters passed into the constructor.</source>
          <target state="translated">创建基于传入构造函数的参数的键。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When a key can be created using the parameters passed into a constructor, override the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A&gt; method to return <ph id="ph1">`true`</ph> and implement the CreateKey method.</source>
          <target state="translated">当可以使用创建密钥传入构造函数的参数，请重写&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A&gt;方法以返回<ph id="ph1">`true`</ph>和实现 CreateKey 方法。&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the created key.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含创建的密钥。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the size of the derived key.</source>
          <target state="translated">获取派生密钥的大小。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> does not support the creation of implied derived key identifiers.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph>不支持创建隐含的派生密钥标识符。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> processes incoming SOAP messages that contain implied key identifier.</source>
          <target state="translated">但是，<ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph>处理包含隐含密钥标识符的传入 SOAP 消息。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The size of the derived key.</source>
          <target state="translated">派生密钥的大小。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the nonce that was used to generate the derived key.</source>
          <target state="translated">获取用于生成派生的密钥的 nonce。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> does not support the creation of implied derived key identifiers.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph>不支持创建隐含的派生密钥标识符。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> processes incoming SOAP messages that contain implied key identifier.</source>
          <target state="translated">但是，<ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph>处理包含隐含密钥标识符的传入 SOAP 消息。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the nonce that was used to generate the derived key.</source>
          <target state="translated">数组&lt;xref:System.Byte&gt;，包含用于生成派生的密钥的 nonce。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the key identifier clause ID.</source>
          <target state="translated">获取或设置密钥标识符子句 id。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When this security key identifier is serialized into XML, the Id property is serialized as the <ph id="ph1">`Id`</ph> attribute of the <ph id="ph2">`&lt;SecurityTokenReference&gt;`</ph> element.</source>
          <target state="translated">当此安全密钥标识符序列化为 XML 时，Id 属性序列化为<ph id="ph1">`Id`</ph>属性<ph id="ph2">`&lt;SecurityTokenReference&gt;`</ph>元素。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the property is <ph id="ph1">`null`</ph>, an <ph id="ph2">`Id`</ph> attribute is not included in the <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> element.</source>
          <target state="translated">如果属性是<ph id="ph1">`null`</ph>、<ph id="ph2">`Id`</ph>属性不包含在<ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph>元素。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The key identifier clause ID.</source>
          <target state="translated">密钥标识符子句 id。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</source>
          <target state="translated">返回一个值，该值指示此实例的密钥标识符是否等效于指定的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare to.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要进行比较。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">keyIdentifierClause</ph><ept id="p2">&lt;/code&gt;</ept> is the same instance as the current instance; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">keyIdentifierClause</ph> <ept id="p2">&lt;/code&gt;</ept>是相同的实例与当前实例; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>