<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96453fc4c74ee03eb1c648ee68c6643891826e01</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Caching.ObjectCache.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8370bd6576e7d5d3dd3d2105146e6c9587f53c21</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f43733ad7602d935c8c143c859b42e78f3dabf5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an object cache and provides the base methods and properties for accessing the object cache.</source>
          <target state="translated">表示对象缓存并提供用于访问对象缓存基方法和属性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ObjectCache type is the primary type for the in-memory object cache.</source>
          <target state="translated">ObjectCache 类型是内存中对象缓存的主类型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To develop a custom cache implementation, you derive from the ObjectCache class.</source>
          <target state="translated">若要开发的自定义缓存实现，可以从 ObjectCache 类派生。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The ObjectCache class is new as of the <ph id="ph2">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; ObjectCache 类是在新<ph id="ph2">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The built-in &lt;xref:System.Runtime.Caching.MemoryCache&gt; class derives from the ObjectCache class.</source>
          <target state="translated">内置&lt;xref:System.Runtime.Caching.MemoryCache&gt;类派生自 ObjectCache 类。&lt;/xref:System.Runtime.Caching.MemoryCache&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Caching.MemoryCache&gt; class is the only concrete object cache implementation in the <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> that derives from the ObjectCache class.</source>
          <target state="translated">&lt;xref:System.Runtime.Caching.MemoryCache&gt;类是在仅具体对象缓存实现<ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>派生自 ObjectCache 类&lt;/xref:System.Runtime.Caching.MemoryCache&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Called from constructors in derived classes in order to initialize the <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">从派生类中的构造函数调用以初始化<bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, tries to insert a cache entry into the cache as a <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, and adds details about how the entry should be evicted.</source>
          <target state="translated">当在派生类中重写，尝试插入某个缓存项插入缓存作为<bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例，并添加有关如何逐出该项的详细信息。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method overloads are virtual (not abstract) on the &lt;xref:System.Runtime.Caching.ObjectCache&gt; class, because the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method internally calls &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;方法重载都是虚拟的 （不是抽象的） 上&lt;xref:System.Runtime.Caching.ObjectCache&gt;类，因为&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;方法内部调用&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">这样可以减少缓存实施者必须提供的方法重载。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If a cache implementation does not require any special behavior for the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method, it can just implement the &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; method overloads.</source>
          <target state="translated">如果缓存实现不需要任何特殊行为&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;方法，则可以只实现&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;方法重载。&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The object to add.</source>
          <target state="translated">要添加的对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">包含的缓存项的逐出详细信息的对象。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">此对象提供比简单绝对过期的逐出的更多选项。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if insertion succeeded, or <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is an already an entry in the cache that has the same key as <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果插入成功，或<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果没有已缓存中具有与相同的密钥中的条目<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">item</ph> <ept id="p3">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</source>
          <target state="translated">当在派生类中重写，而不会覆盖任何现有的缓存项插入缓存项插入缓存。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method overloads are virtual (not abstract) on the &lt;xref:System.Runtime.Caching.ObjectCache&gt; class, because the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method internally calls &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;方法重载都是虚拟的 （不是抽象的） 上&lt;xref:System.Runtime.Caching.ObjectCache&gt;类，因为&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;方法内部调用&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">这样可以减少缓存实施者必须提供的方法重载。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If a cache implementation does not require any special behavior for the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method, it can just implement the &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; method overloads.</source>
          <target state="translated">如果缓存实现不需要任何特殊行为&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;方法，则可以只实现&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;方法重载。&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">缓存项的唯一标识符。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">要插入的对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">固定的日期和时间将过期的缓存项。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This parameter is required when the &lt;xref:System.Runtime.Caching.ObjectCache.Add*&gt; method is called.</source>
          <target state="translated">时，此参数是必需&lt;xref:System.Runtime.Caching.ObjectCache.Add*&gt;调用方法。&lt;/xref:System.Runtime.Caching.ObjectCache.Add*&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">缓存的缓存可以添加条目，如果实现了区域中的命名的区域。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, the default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">因为未实现区域<ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>，默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if insertion succeeded, or <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is an already an entry in the cache that has the same key as <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果插入成功，或<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果没有已缓存中具有与相同的密钥中的条目<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p3">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</source>
          <target state="translated">当在派生类中重写，将插入到缓存中，某个缓存项，指定有关如何逐出项的信息。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method overloads are virtual (not abstract) on the &lt;xref:System.Runtime.Caching.ObjectCache&gt; class, because the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method internally calls &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;方法重载都是虚拟的 （不是抽象的） 上&lt;xref:System.Runtime.Caching.ObjectCache&gt;类，因为&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;方法内部调用&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">这样可以减少缓存实施者必须提供的方法重载。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If a cache implementation does not require any special behavior for the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method, it can just implement the &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; method overloads.</source>
          <target state="translated">如果缓存实现不需要任何特殊行为&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;方法，则可以只实现&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;方法重载。&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">缓存项的唯一标识符。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">要插入的对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">包含的缓存项的逐出详细信息的对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">此对象提供比简单绝对过期的逐出的更多选项。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">缓存的缓存可以添加条目，如果实现了区域中的命名的区域。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可选参数的默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the insertion try succeeds, or <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is an already an entry in the cache with the same key as <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果尝试插入成功，或<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果没有已缓存的与相同的密钥中的条目<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p3">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts the specified <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object into the cache, specifying information about how the entry will be evicted.</source>
          <target state="translated">当在派生类中重写，将指定<bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到缓存中，指定有关如何逐出项信息的对象。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">要插入的对象。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">包含的缓存项的逐出详细信息的对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">此对象提供比简单绝对过期的逐出的更多选项。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If a cache entry with the same key exists, the specified cache entry; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果已存在具有相同键的缓存项，则为指定的缓存项;否则为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</source>
          <target state="translated">当在派生类中重写，缓存将某个项插入到缓存中，使用密钥、 缓存条目、 绝对过期值和一个可选的区域的对象添加到缓存。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This AddOrGetExisting method overload returns an object value, not a &lt;xref:System.Runtime.Caching.CacheItem&gt; object.</source>
          <target state="translated">此 AddOrGetExisting 方法重载返回一个对象值，而不&lt;xref:System.Runtime.Caching.CacheItem&gt;对象。&lt;/xref:System.Runtime.Caching.CacheItem&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">缓存项的唯一标识符。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">要插入的对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">固定的日期和时间将过期的缓存项。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">缓存的缓存可以添加条目，如果实现了区域中的命名的区域。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可选参数的默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If a cache entry with the same key exists, the specified cache entry's value; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果已存在具有相同键的缓存项，指定的缓存条目的值;否则为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</source>
          <target state="translated">当在派生类中重写，将插入缓存项，同时指定一个键和值的缓存项，以及有关如何逐出项信息。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The AddOrGetExisting method returns an object value, not a &lt;xref:System.Runtime.Caching.CacheItem&gt; object.</source>
          <target state="translated">AddOrGetExisting 方法返回一个对象值，而不&lt;xref:System.Runtime.Caching.CacheItem&gt;对象。&lt;/xref:System.Runtime.Caching.CacheItem&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">缓存项的唯一标识符。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">要插入的对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">包含的缓存项的逐出详细信息的对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">此对象提供比简单绝对过期的逐出的更多选项。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">缓存的缓存可以添加条目，如果实现了区域中的命名的区域。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可选参数的默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If a cache entry with the same key exists, the specified cache entry's value; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果已存在具有相同键的缓存项，指定的缓存条目的值;否则为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, checks whether the cache entry already exists in the cache.</source>
          <target state="translated">当在派生类中重写，检查是否已缓存项将在缓存中存在。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">缓存项的唯一标识符。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A named region in the cache where the cache can be found, if regions are implemented.</source>
          <target state="translated">缓存可找到的位置，如果实现了区域缓存中的命名的区域。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可选参数的默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the cache contains a cache entry with the same key value as <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果缓存中包含具有相同的密钥值的缓存项<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p2">&lt;/code&gt;</ept>; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheEntryChangeMonitor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that can trigger events in response to changes to specified cache entries.</source>
          <target state="translated">当在派生类中重写，将创建<bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheEntryChangeMonitor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定可触发事件以响应更改的对象的缓存条目。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When a derived &lt;xref:System.Runtime.Caching.ObjectCache&gt; class overrides the base CreateCacheEntryChangeMonitor method, the cache implementation must create a &lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt; object.</source>
          <target state="translated">当派生&lt;xref:System.Runtime.Caching.ObjectCache&gt;类重写基 CreateCacheEntryChangeMonitor 方法，必须创建的缓存实现&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;对象。&lt;/xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the <ph id="ph1">`keys`</ph> parameter.</source>
          <target state="translated">此专用的更改监视器中指定的缓存项更改时通知调用方<ph id="ph1">`keys`</ph>参数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For example, if a monitored item in the <ph id="ph1">`keys`</ph> parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</source>
          <target state="translated">例如，如果在受监视项目<ph id="ph1">`keys`</ph>更新或从缓存中删除参数时，通过此方法创建的更改监视器触发的事件。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If a cache implementation supports named cache regions, a string value can be specified as the <ph id="ph1">`regionName`</ph> parameter.</source>
          <target state="translated">一个字符串值，如果缓存实现支持命名的缓存区域，可以指定为<ph id="ph1">`regionName`</ph>参数。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Otherwise, the parameter defaults to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">否则，该参数默认为<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Not all cache implementations support cache-entry change monitors.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 并非所有的缓存实现支持缓存条目更改监视器。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To determine whether your cache implementation supports &lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt; objects, see the documentation for the specific cache implementation.</source>
          <target state="translated">若要确定是否支持你的缓存实现&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;对象，请参阅特定的缓存实现的文档。&lt;/xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The unique identifiers for cache entries to monitor.</source>
          <target state="translated">要监视缓存项的唯一标识符。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A named region in the cache where the cache keys in the <ph id="ph1">`keys`</ph> parameter exist, if regions are implemented.</source>
          <target state="translated">在其中缓存密钥存储在缓存中的命名的区域<ph id="ph1">`keys`</ph>参数存在，如果实现了区域。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可选参数的默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A change monitor that monitors cache entries in the cache.</source>
          <target state="translated">用于监视缓存中的缓存条目的更改监视器。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a description of the features that a cache implementation provides.</source>
          <target state="translated">当在派生类中重写，获取的缓存实现所提供的功能的说明。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A bitwise combination of flags that indicate the default capabilities of a cache implementation.</source>
          <target state="translated">按位组合，这些标志指示缓存实现的默认功能。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the specified cache entry from the cache as an object.</source>
          <target state="translated">当在派生类中重写，可指定的缓存条目获取从缓存，作为对象。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry to get.</source>
          <target state="translated">要获取的缓存项唯一标识符。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry was added, if regions are implemented.</source>
          <target state="translated">缓存的缓存项添加，如果实现了区域中的命名的区域。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可选参数的默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The cache entry that is identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">由标识的缓存项<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the specified cache entry from the cache as a <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">当在派生类中重写，获取指定的缓存条目从作为缓存<bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This method overload exists because some cache implementations might extend the &lt;xref:System.Runtime.Caching.CacheItem&gt; class.</source>
          <target state="translated">此方法重载存在由于某些缓存实现可能会延长&lt;xref:System.Runtime.Caching.CacheItem&gt;类。&lt;/xref:System.Runtime.Caching.CacheItem&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In that case, the &lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt; method overload will not necessarily return all the information about cached data.</source>
          <target state="translated">在这种情况下，&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;方法重载将不一定返回缓存的数据有关的所有信息。&lt;/xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>However, the GetCacheItem method overload enables custom caches to return more than just the cache value.</source>
          <target state="translated">但是，GetCacheItem 方法重载，可以返回多个仅缓存值的自定义缓存。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The GetCacheItem method is like the &lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt; method, except that the GetCacheItem method returns return the cache entry as a &lt;xref:System.Runtime.Caching.CacheItem&gt; instance.</source>
          <target state="translated">GetCacheItem 方法就像是&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;方法，只不过 GetCacheItem 方法返回缓存项作为返回&lt;xref:System.Runtime.Caching.CacheItem&gt;实例。&lt;/xref:System.Runtime.Caching.CacheItem&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry to get.</source>
          <target state="translated">要获取的缓存项唯一标识符。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache was added, if regions are implemented.</source>
          <target state="translated">缓存到已添加的缓存，如果实现了区域中的命名的区域。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, the default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">因为未实现区域<ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>，默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The cache entry that is identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">由标识的缓存项<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the total number of cache entries in the cache.</source>
          <target state="translated">当在派生类中重写，则在缓存中获取的缓存条目的总数。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A named region in the cache for which the cache entry count should be computed, if regions are implemented.</source>
          <target state="translated">缓存应计算缓存条目计数数值的数据类型，如果实现了区域中的命名的区域。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可选参数的默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The number of cache entries in the cache.</source>
          <target state="translated">在缓存中的缓存条目数。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">regionName</ph><ept id="p1">&lt;/code&gt;</ept> is not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, the count indicates the number of entries that are in the specified cache region.</source>
          <target state="translated">如果<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">regionName</ph> <ept id="p1">&lt;/code&gt;</ept>不<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，计数指示不在指定的缓存区域中的条目数。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</source>
          <target state="translated">当在派生类中重写，创建可用于循环访问集合的缓存条目的枚举。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</source>
          <target state="translated">缓存实施者可以重写，并扩展此方法以提供自定义方法来循环访问缓存项的集合。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 返回一个枚举器通常是比返回整个缓存条目的开销更大的操作。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This method is called by the explicit interface implementations that the &lt;xref:System.Runtime.Caching.ObjectCache&gt; class has for the &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt; and &lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt; methods.</source>
          <target state="translated">调用此方法是显式接口实现，&lt;xref:System.Runtime.Caching.ObjectCache&gt;类具有的&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;和&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;方法。&lt;/xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt; &lt;/xref:System.Collections.IEnumerable.GetEnumerator%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The enumerator object that provides access to the cache entries in the cache.</source>
          <target state="translated">提供对缓存中的缓存项的访问的枚举器对象。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</source>
          <target state="translated">当在派生类中重写，获取与指定的键相对应的缓存项的一组。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The GetValues method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</source>
          <target state="translated">GetValues 方法重载是一种性能优化的分布式缓存，支持的单个网络调用期间从缓存提取多个缓存项。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</source>
          <target state="translated">尽管调用方可以将一个或多个密钥传递给方法，但是没有所有键都表示缓存中的条目能保证。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</source>
          <target state="translated">因此，返回的字典可能包含比传递给方法的密钥数较少的项目。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A collection of unique identifiers for the cache entries to get.</source>
          <target state="translated">若要获取的缓存项的唯一标识符的集合。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry or entries were added, if regions are implemented.</source>
          <target state="translated">一个或多个缓存条目已添加到，如果实现了区域缓存中的命名的区域。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可选参数的默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A dictionary of key/value pairs that represent cache entries.</source>
          <target state="translated">表示缓存条目的键/值对的字典。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets a set of cache entries that correspond to the specified keys.</source>
          <target state="translated">获取与指定的键相对应的缓存项的一组。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The GetValues method overload is like the &lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt; method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</source>
          <target state="translated">GetValues 方法重载就像&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;方法重载中，但允许使用 C# 等的托管语言支持的可选参数语法传递的命名的区域。&lt;/xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This method is a virtual method because the &lt;xref:System.Runtime.Caching.ObjectCache&gt; class provides a default implementation that passes the <ph id="ph1">`params`</ph> array to the &lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt; method overload.</source>
          <target state="translated">此方法是一个虚拟方法，因为&lt;xref:System.Runtime.Caching.ObjectCache&gt;类提供一个默认实现，将传递<ph id="ph1">`params`</ph>数组到&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;方法重载。&lt;/xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry or entries were added, if regions are implemented.</source>
          <target state="translated">一个或多个缓存条目已添加到，如果实现了区域缓存中的命名的区域。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, the default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">因为未实现区域<ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>，默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A collection of unique identifiers for the cache entries to get.</source>
          <target state="translated">若要获取的缓存项的唯一标识符的集合。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A dictionary of key/value pairs that represent cache entries.</source>
          <target state="translated">表示缓存条目的键/值对的字典。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets or set a reference to a managed hosting environment that is available to <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementations and that can provide host-specific services to <bpt id="p2">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implementations.</source>
          <target state="translated">获取或设置对可供的托管宿主环境的引用<bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实现，可以提供特定于宿主的服务添加到<bpt id="p2">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实现。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The Host property is intended for use by <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</source>
          <target state="translated">主机属性旨在供<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>托管环境并由实现依赖于.NET Framework 的行为的缓存实现托管环境。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to &lt;xref:System.Runtime.Caching.ObjectCache&gt; implementations through the Host property:      |Service|Description|   |-------------|-----------------|   |&lt;xref:System.Runtime.Caching.Hosting.IApplicationIdentifier&gt;|Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.|   |&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;|Lets host environments provide a custom file-change notification system, instead of using the one provided in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.|   |&lt;xref:System.Runtime.Caching.Hosting.IMemoryCacheManager&gt;|Lets cache implementations report cache memory consumption to the host environment.</source>
          <target state="translated">下表列出的主机环境服务，可能还会从的托管宿主环境可用且可供&lt;xref:System.Runtime.Caching.ObjectCache&gt;实现通过主机属性集: |服务 |说明 |  |-------------|-----------------|  |&lt;xref:System.Runtime.Caching.Hosting.IApplicationIdentifier&gt;|允许宿主环境提供程序可能需要的功能，例如标识性能计数器的缓存实现应用程序域标识符。 |  |&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;|允许宿主环境提供自定义的文件更改通知系统，而不是使用中提供<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。 |  |&lt;xref:System.Runtime.Caching.Hosting.IMemoryCacheManager&gt;|允许向主机环境的缓存实现报表缓存内存消耗。&lt;/xref:System.Runtime.Caching.Hosting.IMemoryCacheManager&gt; &lt;/xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt; &lt;/xref:System.Runtime.Caching.Hosting.IApplicationIdentifier&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This enables host environments to centrally manage memory consumption across multiple cache implementations.|      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  Callers of this property value require unrestricted code access security permissions.</source>
          <target state="translated">这使宿主环境可以跨多个缓存实现集中管理内存消耗。 |    &amp;1;&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 的此属性的值调用方需要不受限制的代码访问安全性权限。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A reference to a cache-aware managed hosting environment.</source>
          <target state="translated">对缓存感知的托管宿主环境的引用。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The value being assigned to the property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">分配给属性的值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An attempt was made to set the property value more than one time.</source>
          <target state="translated">尝试设置属性值不止一次。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates that a cache entry has no absolute expiration.</source>
          <target state="translated">获取一个值，该值指示某个缓存项具有绝对不会过期。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A cache entry that is inserted into the cache with the InfiniteAbsoluteExpiration field value set as the expiration value should never expire based on an absolute point in time.</source>
          <target state="translated">会随着应永不过期的到期值插入到缓存的设置的 InfiniteAbsoluteExpiration 字段值的缓存项的时间基于绝对点。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</source>
          <target state="translated">但是，具有此设置的缓存项可以是从缓存中逐出的其他原因，由一个特定的缓存实现，如引起的内存压力更改监视器事件逐出。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets or sets the default indexer for the <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">获取或设置的默认索引器<bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The behavior of the set accessor of this property is like the &lt;xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt; method.</source>
          <target state="translated">此属性的 set 访问器的行为就像是&lt;xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;方法。&lt;/xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Internally, a cache implementation could set the absolute expiration of the specified value to the &lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt; method.</source>
          <target state="translated">缓存实现内部，无法设置指定的值与绝对过期&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;方法。&lt;/xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>However this behavior is ultimately up to the cache implementation.</source>
          <target state="translated">但是此行为是最终取决于缓存实现。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The behavior of get accessor is like calling the &lt;xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt; method and using <ph id="ph1">`null`</ph> for the region name.</source>
          <target state="translated">Get 访问器的行为就像调用&lt;xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt;方法和使用<ph id="ph1">`null`</ph>区域名称。&lt;/xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A unique identifier for a cache entry in the cache.</source>
          <target state="translated">在缓存中缓存项的唯一标识符。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A key that serves as an indexer into the cache instance.</source>
          <target state="translated">一个用于充当一个索引器，缓存实例键。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Gets the name of a specific <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">获取特定的名称<bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Some cache implementations might support multiple instances of the cache that is running in a single application.</source>
          <target state="translated">某些缓存实现可能支持在单个应用程序中运行的缓存的多个实例。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This property lets cache implementers return a name that identifies a specific cache instance.</source>
          <target state="translated">此属性，允许缓存实施者返回用于标识特定的缓存实例的名称。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The name of a specific cache instance.</source>
          <target state="translated">特定的缓存实例的名称。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Indicates that a cache entry has no sliding expiration time.</source>
          <target state="translated">指示某个缓存项具有任何滑动过期时间。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</source>
          <target state="translated">基于持续时间或一定义的时间窗口过期也被称为相对过期机制。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</source>
          <target state="translated">通常情况下，逐出基于滑动过期的项的缓存实现将删除在指定的时间段未被访问的项。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>A cache entry that is inserted into the cache with the NoSlidingExpiration field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</source>
          <target state="translated">使用设置为过期值的 NoSlidingExpiration 字段值插入到缓存的缓存项应永远不会收回由于滑动时间窗口中的非活动中。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</source>
          <target state="translated">但是，如果它具有绝对过期时间，或某些其他逐出事件发生时，此类更改监视器或内存压力，可以逐出缓存项。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, removes the cache entry from the cache.</source>
          <target state="translated">当在派生类中重写，从缓存中删除缓存项。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to <ph id="ph1">`key`</ph>, the value of the removed item should be returned.</source>
          <target state="translated">如果你重写此方法在自定义缓存实现中，如果对应于缓存中没有某个缓存项<ph id="ph1">`key`</ph>，应返回已移除的项的值。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If nothing was removed from the cache, the method should return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果执行任何操作已从缓存中删除，则该方法应返回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 某些分布式的缓存实现可能不支持返回已从缓存中删除的值的功能。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This might be because the cache implementation does not support returning the value of a removed cache item.</source>
          <target state="translated">这可能是因为缓存实现不支持返回已移除的缓存项的值。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>It might also be because marshaling the object as a return value is too expensive.</source>
          <target state="translated">这也可能是因为封送的对象，因为返回值是过于昂贵。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>In such cases, cache implementations can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">在这种情况下，缓存实现可返回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">缓存项的唯一标识符。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry was added, if regions are implemented.</source>
          <target state="translated">缓存的缓存项添加，如果实现了区域中的命名的区域。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可选参数的默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>An object that represents the value of the removed cache entry that was specified by the key, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified entry was not found.</source>
          <target state="translated">一个对象，表示指定的键，已移除的缓存条目的值或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到指定的项。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts the cache entry into the cache as a <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, specifying information about how the entry will be evicted.</source>
          <target state="translated">当在派生类中重写时，将缓存作为缓存项插入<bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例，它指定有关如何逐出项的信息。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>If the key for <ph id="ph1">`item`</ph> does not exist, <ph id="ph2">`item`</ph> is inserted as a new cache entry.</source>
          <target state="translated">如果密钥<ph id="ph1">`item`</ph>不存在，<ph id="ph2">`item`</ph>为新的缓存项插入。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the value from <ph id="ph2">`item`</ph> is used to update or overwrite the value of the existing cache entry.</source>
          <target state="translated">如果具有匹配键的项<ph id="ph1">`item`</ph>存在，从值<ph id="ph2">`item`</ph>用于更新或覆盖现有缓存条目的值。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The cache item to add.</source>
          <target state="translated">要添加的缓存项。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">包含的缓存项的逐出详细信息的对象。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">此对象提供比简单绝对过期的逐出的更多选项。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</source>
          <target state="translated">当在派生类中重写，将插入缓存项，同时指定基于时间的过期详细信息。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>If an item that matches <ph id="ph1">`key`</ph> does not exist in the cache, <ph id="ph2">`value`</ph> and <ph id="ph3">`key`</ph> are used to insert as a new cache entry.</source>
          <target state="translated">如果与匹配的项<ph id="ph1">`key`</ph>不在缓存中，存在<ph id="ph2">`value`</ph>和<ph id="ph3">`key`</ph>用于为新的缓存项插入。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id="ph2">`value`</ph>.</source>
          <target state="translated">如果具有匹配键的项<ph id="ph1">`item`</ph>存在，更新或通过使用覆盖缓存条目<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">缓存项的唯一标识符。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">要插入的对象。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">固定的日期和时间将过期的缓存项。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">缓存的缓存可以添加条目，如果实现了区域中的命名的区域。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可选参数的默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache.</source>
          <target state="translated">当在派生类中重写，将插入某个缓存项插入缓存。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</source>
          <target state="translated">此方法重载，可以提供比位于基于时间的绝对过期更多的逐出或过期详细。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>If an item that matches <ph id="ph1">`key`</ph> does not exist in the cache, <ph id="ph2">`value`</ph> and <ph id="ph3">`key`</ph> are used to insert as a new cache entry.</source>
          <target state="translated">如果与匹配的项<ph id="ph1">`key`</ph>不在缓存中，存在<ph id="ph2">`value`</ph>和<ph id="ph3">`key`</ph>用于为新的缓存项插入。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id="ph2">`value`</ph>.</source>
          <target state="translated">如果具有匹配键的项<ph id="ph1">`item`</ph>存在，更新或通过使用覆盖缓存条目<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">缓存项的唯一标识符。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">要插入的对象。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">包含的缓存项的逐出详细信息的对象。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">此对象提供比简单绝对过期的逐出的更多选项。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">缓存的缓存可以添加条目，如果实现了区域中的命名的区域。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可选参数的默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Supports iteration over a generic collection.</source>
          <target state="translated">支持对泛型集合迭代。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式接口成员的实现。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>It can be used only when a derived &lt;xref:System.Runtime.Caching.ObjectCache&gt; instance is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.</source>
          <target state="translated">仅当派生时，可以使用它&lt;xref:System.Runtime.Caching.ObjectCache&gt;实例被强制转换为&lt;xref:System.Collections.IEnumerable&gt;接口。&lt;/xref:System.Collections.IEnumerable&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Developers can use this method to iterate through a generic collection of cache entries.</source>
          <target state="translated">开发人员可以使用此方法循环访问泛型集合的缓存条目。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>This is the default &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt; implementation that internally calls the &lt;xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt; method.</source>
          <target state="translated">这是默认&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;内部调用的实现&lt;xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt;方法。&lt;/xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt; &lt;/xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The enumerator object that provides access to the items in the cache.</source>
          <target state="translated">提供对缓存中项的访问的枚举器对象。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>