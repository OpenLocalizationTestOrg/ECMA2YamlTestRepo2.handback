<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45232154f61ad8ba0c56cb05b9b374744680b1dd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Schema.XmlSchemaSet.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9db510a41bf2a3992fcfd0a9dabf1347328cdc3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c46ad296fa9f60490a347dc1aa7c7f8f5cf2a16</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains a cache of XML Schema definition language (XSD) schemas.</source>
          <target state="translated">包含 XML 架构定义语言 (XSD) 架构的缓存。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  -   Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt;-不要使用来自未知或不受信任的源或位置的架构。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">这样会危及你的代码的安全性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&gt; -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">1&gt;-（包括内联架构） 的 XML 架构的本质上就容易受到拒绝服务攻击;不要在不受信任的情况下接受它们。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">1&gt;-架构验证错误消息和异常可能会公开有关内容模型或架构文件的 URI 路径的敏感信息。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">请注意不要公开此信息来不受信任的调用方。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&gt; -   Additional security considerations are covered in the "Security Considerations" section.</source>
          <target state="translated">1&gt;-在"安全注意事项"部分中介绍的其他安全注意事项。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>XmlSchemaSet is a cache or library where you can store XML Schema definition language (XSD) schemas.</source>
          <target state="translated">XmlSchemaSet 是一个缓存或库可以在其中存储 XML 架构定义语言 (XSD) 架构。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>XmlSchemaSet improves performance by caching schemas in memory instead of accessing them from a file or a URL.</source>
          <target state="translated">XmlSchemaSet 缓存中内存而不是从文件或 URL 访问架构，从而提高了性能。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Each schema is identified by the namespace URI and location that was specified when the schema was added to the set.</source>
          <target state="translated">由命名空间 URI 标识每个架构和架构添加到集时的位置指定。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You use the &lt;xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName&gt; property to assign the XmlSchemaSet object an XML reader should use for data validation.</source>
          <target state="translated">你使用&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName&gt;要分配的 XML 读取器的 XmlSchemaSet 对象属性应该用于数据验证。&lt;/xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Security Considerations      -   Do not use schemas from unknown or untrusted sources.</source>
          <target state="translated">安全注意事项-不要使用来自未知或不可信源的架构。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">这样会危及你的代码的安全性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</source>
          <target state="translated">外部命名空间或中引用的位置包括，导入和架构的重新定义元素均已解决方面包括或导入这些架构的基 URI。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, if the base URI of the including or importing schema is empty or <ph id="ph1">`null`</ph>, the external locations are resolved with respect to the current directory.</source>
          <target state="translated">例如，如果包括或导入架构的基 URI 为空或<ph id="ph1">`null`</ph>，则外部位置来解析相对于当前目录。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlUrlResolver&gt; class is used to resolve external schemas by default.</source>
          <target state="translated">&lt;xref:System.Xml.XmlUrlResolver&gt;类用于解析外部架构默认情况下。&lt;/xref:System.Xml.XmlUrlResolver&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To disable resolution of include, import, and redefine elements of a schema, set the &lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName&gt; property to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">若要禁用解析包含、 导入，而重新定义架构的元素，&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName&gt;属性<ph id="ph1">`null`</ph>。&lt;/xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-   The XmlSchemaSet class uses the &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt; class to parse and match regular expressions in an XML schema.</source>
          <target state="translated">-XmlSchemaSet 类使用&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;类来分析和匹配 XML 架构中的正则表达式。&lt;/xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.</source>
          <target state="translated">使用 XML 架构中的正则表达式模式方面的验证可能涉及到增加的 CPU 使用率，应当避免在高可用性方案。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   Exceptions raised as a result of using the XmlSchemaSet class, such as the &lt;xref:System.Xml.Schema.XmlSchemaException&gt; class may contain sensitive information that should not be exposed in untrusted scenarios.</source>
          <target state="translated">-由于使用 XmlSchemaSet 类，如而引发的异常&lt;xref:System.Xml.Schema.XmlSchemaException&gt;类可能包含不应在不受信任的方案中公开的敏感信息。&lt;/xref:System.Xml.Schema.XmlSchemaException&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt; property of an &lt;xref:System.Xml.Schema.XmlSchemaException&gt; returns the URI path to the schema file that caused the exception.</source>
          <target state="translated">例如，&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;属性&lt;xref:System.Xml.Schema.XmlSchemaException&gt;返回导致异常的架构文件的 URI 路径。&lt;/xref:System.Xml.Schema.XmlSchemaException&gt; &lt;/xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt; property should not be exposed in untrusted scenarios.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;属性不能在不受信任的方案中公开。&lt;/xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</source>
          <target state="translated">应正确处理异常，以便在不受信任的情况下不公开此敏感信息。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified &lt;xref:System.Xml.XmlNameTable&gt;.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定&lt;xref:System.Xml.XmlNameTable&gt;.&lt;/xref:System.Xml.XmlNameTable&gt;类</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlNameTable&gt; object to use.</source>
          <target state="translated">&lt;xref:System.Xml.XmlNameTable&gt;要使用对象。&lt;/xref:System.Xml.XmlNameTable&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlNameTable&gt; object passed as a parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.XmlNameTable&gt;对象作为参数传递<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.XmlNameTable&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Adds the given &lt;xref:System.Xml.Schema.XmlSchema&gt; to the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将添加给定&lt;xref:System.Xml.Schema.XmlSchema&gt;到<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Xml.Schema.XmlSchema&gt; object already exists in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, the Add method does nothing.</source>
          <target state="translated">如果&lt;xref:System.Xml.Schema.XmlSchema&gt;对象已存在于&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;，Add 方法不执行任何操作。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The functionality of this method is identical to that of the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; method.</source>
          <target state="translated">此方法的功能等同于的&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;方法。&lt;/xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; object to add to the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;要添加到对象<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Schema.XmlSchema&gt; object if the schema is valid.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;对象架构是否有效。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the schema is not valid and a <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified, then <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is returned and the appropriate validation event is raised.</source>
          <target state="translated">如果架构不是有效和<bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未指定，则<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>返回并引发相应的验证事件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Otherwise, an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown.</source>
          <target state="translated">否则为<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>引发。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The schema is not valid.</source>
          <target state="translated">架构不是有效的。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; object passed as a parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;对象作为参数传递<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Adds all the XML Schema definition language (XSD) schemas in the given <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将中的所有 XML 架构定义语言 (XSD) 架构都添加给定<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Before a schema can be added to an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, it has to be successfully preprocessed.</source>
          <target state="translated">可以将架构添加到之前&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;，它必须成功预处理。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">预处理执行以下基本任务。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">根据 W3C XML 架构的规则的结构化有效性检查该架构，但没有完全验证架构。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">对内部和外部架构组件的引用进行解析。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Any imported or included schemas that are successfully retrieved are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">已成功检索到任何导入或包含架构也将添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Imported schemas are added as separate &lt;xref:System.Xml.Schema.XmlSchema&gt; objects, and included schemas are made a part of the including &lt;xref:System.Xml.Schema.XmlSchema&gt;.</source>
          <target state="translated">导入的架构添加为单独&lt;xref:System.Xml.Schema.XmlSchema&gt;对象，包括的架构进行和包括&lt;xref:System.Xml.Schema.XmlSchema&gt;。&lt;/xref:System.Xml.Schema.XmlSchema&gt;的一部分&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; to add is <ph id="ph1">`true`</ph>, all schemas in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; to add are added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">如果&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;属性&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;若要将添加<ph id="ph1">`true`</ph>中的所有架构&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;将添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; to add is <ph id="ph1">`false`</ph>, each schema added is preprocessed before being added.</source>
          <target state="translated">如果&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;属性&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;若要将添加<ph id="ph1">`false`</ph>，添加每个架构在添加之前进行预处理。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If any of the schemas in the newly added &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; fails to be preprocessed, no schemas are added; instead, an &lt;xref:System.Xml.Schema.XmlSchemaException&gt; is thrown.</source>
          <target state="translated">如果任何中新添加的架构&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;无法进行预处理，不添加任何架构; 相反，&lt;xref:System.Xml.Schema.XmlSchemaException&gt;引发。&lt;/xref:System.Xml.Schema.XmlSchemaException&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>As a result, the following two code example are not equivalent.</source>
          <target state="translated">因此，下面的两个代码示例不是等效的。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```vb#   ' First example   schemaSet.Add(schemaSet1)      ' Second example   Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          schemaSet.Add(schema)      Next   ```</ph>      <ph id="ph2">```c#   // First example   schemaSet.Add(schemaSet1);      // Second example   foreach(XmlSchema schema in schemaSet.Schemas())   {       schemaSet.Add(schema);   }   ```</ph>       The previous two code examples are not equivalent.</source>
          <target state="translated"><ph id="ph1">```vb#   ' First example   schemaSet.Add(schemaSet1)      ' Second example   Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          schemaSet.Add(schema)      Next   ```</ph>      <ph id="ph2">```c#   // First example   schemaSet.Add(schemaSet1);      // Second example   foreach(XmlSchema schema in schemaSet.Schemas())   {       schemaSet.Add(schema);   }   ```</ph>前面的两个代码示例不是等效的。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In the first example, if an invalid schema exists in <ph id="ph1">`schemaSet1`</ph> and its &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property is set to <ph id="ph2">`false`</ph>, no schemas are added to <ph id="ph3">`schemaSet`</ph>.</source>
          <target state="translated">在第一个示例中，如果了无效的架构中存在<ph id="ph1">`schemaSet1`</ph>及其&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;属性设置为<ph id="ph2">`false`</ph>，任何架构将添加到<ph id="ph3">`schemaSet`</ph>。&lt;/xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the second example, a number of schemas can be added to <ph id="ph1">`schemaSet`</ph> before an invalid schema is encountered and an exception is thrown.</source>
          <target state="translated">在第二个示例中，可以将大量的架构添加到<ph id="ph1">`schemaSet`</ph>遇到了无效的架构和引发异常之前。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A schema in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not valid.</source>
          <target state="translated">中的架构<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>无效。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object passed as a parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象作为参数传递<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Adds the XML Schema definition language (XSD) schema at the URL specified to the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将 XML 架构定义语言 (XSD) 架构添加到指定的 URL 处<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Before a schema can be added to an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, it has to be successfully preprocessed.</source>
          <target state="translated">可以将架构添加到之前&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;，它必须成功预处理。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">预处理执行以下基本任务。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">根据 W3C XML 架构的规则的结构化有效性检查该架构，但没有完全验证架构。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">对内部和外部架构组件的引用进行解析。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Any imported or included schemas that are successfully retrieved are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">已成功检索到任何导入或包含架构也将添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Imported schemas are added as separate &lt;xref:System.Xml.Schema.XmlSchema&gt; objects, and included schemas are made a part of the including &lt;xref:System.Xml.Schema.XmlSchema&gt;.</source>
          <target state="translated">导入的架构添加为单独&lt;xref:System.Xml.Schema.XmlSchema&gt;对象，包括的架构进行和包括&lt;xref:System.Xml.Schema.XmlSchema&gt;。&lt;/xref:System.Xml.Schema.XmlSchema&gt;的一部分&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the Add method.</source>
          <target state="translated">以下是使用的 Add 方法时要考虑的重要说明。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-   Adding a schema to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; with the same target namespace and schema location URL as a schema already contained within the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; will return the original schema object.</source>
          <target state="translated">-添加到架构&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;具有相同目标命名空间和架构位置 URL 内已包含架构作为&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;将返回原始的架构对象。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-   When a new schema is successfully added to an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">-当新的架构已成功添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;、&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;属性&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;设置为<ph id="ph1">`false`</ph>。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-   Any include or import elements encountered in an XML schema are resolved when the Add method is called.</source>
          <target state="translated">的在将调用添加方法时，在 XML 架构中遇到任何包括或导入元素进行解析。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Failure to resolve include and import elements results in a schema validation warning and if no &lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt; has been specified for the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; object, these warning will not be reported.</source>
          <target state="translated">无法解析包含和导入架构验证警告的元素导致而且如果没有&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;为指定了&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;对象，这些警告将不会报告。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-   If a schema with the same target namespace as a schema that already exists in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, both schemas are added.</source>
          <target state="translated">-如果中已经存在具有相同架构的目标命名空间的架构&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;，添加两个架构。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  This behavior differs from the obsolete &lt;xref:System.Xml.Schema.XmlSchemaCollection&gt; object.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 此行为不同于过时&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;对象。&lt;/xref:System.Xml.Schema.XmlSchemaCollection&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-   The Add method of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the Add method is called.</source>
          <target state="translated">-的 Add 方法&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;已使用的目标命名空间定义在架构中，而无需时将调用添加方法作为参数指定的目标命名空间的能力。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Specifying <ph id="ph1">`null`</ph> in the <ph id="ph2">`targetNamespace`</ph> parameter of the Add method instructs the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; to use the target namespace defined in the schema, as illustrated in the following code example.</source>
          <target state="translated">指定<ph id="ph1">`null`</ph>中<ph id="ph2">`targetNamespace`</ph>的 Add 方法的参数指示&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;若要使用的架构中定义的目标命名空间，如下面的代码示例中所示。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(Nothing, "books.xsd")      Dim schema As XmlSchema   For Each schema In schemaSet.Schemas("http://www.contoso.com/books")       schema.Write(Console.Out)   Next   ```</ph>      <ph id="ph2">```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, "books.xsd");      foreach(XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))   {       schema.Write(Console.Out);   }   ```</ph>       In the code example above, <ph id="ph3">`null`</ph> is specified as the <ph id="ph4">`targetNamespace`</ph> parameter to the Add method.</source>
          <target state="translated"><ph id="ph1">```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(Nothing, "books.xsd")      Dim schema As XmlSchema   For Each schema In schemaSet.Schemas("http://www.contoso.com/books")       schema.Write(Console.Out)   Next   ```</ph>      <ph id="ph2">```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, "books.xsd");      foreach(XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))   {       schema.Write(Console.Out);   }   ```</ph>在上面的代码示例<ph id="ph3">`null`</ph>指定为<ph id="ph4">`targetNamespace`</ph>Add 方法的参数。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>As a result, the <ph id="ph1">`targetNamespace`</ph> defined in the books.xml file is used.</source>
          <target state="translated">因此，<ph id="ph1">`targetNamespace`</ph>定义 books.xml 中使用文件。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In this case, the result of calling the Add method would be identical if http://www.contoso.com/books had been specified as the <ph id="ph1">`targetNamespace`</ph> parameter.</source>
          <target state="translated">在这种情况下，调用的 Add 方法的结果将是完全相同，如果已指定作为 http://www.contoso.com/books<ph id="ph1">`targetNamespace`</ph>参数。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-   W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined.</source>
          <target state="translated">-W3C XML 架构允许没有目标命名空间包括在架构中，与定义的目标命名空间的架构。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema.</source>
          <target state="translated">在这种情况下，没有定义的目标命名空间的架构是强制转换为包括架构的目标命名空间。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The included schema is treated as if it had that target namespace defined.</source>
          <target state="translated">包含的架构被视为已定义该目标命名空间。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Similarly, schemas without a target namespace can be added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; and coerced into the target namespace specified by the Add method, as illustrated in the following example.</source>
          <target state="translated">同样，可以将没有目标命名空间的架构添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;并被强迫 Add 方法，如下面的示例中所示指定的目标命名空间。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;       &lt;xs:element name="A" type="xs:string" /&gt;   &lt;/xs:schema&gt;   ```</ph>       If the schema above is added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; with the target namespace http://www.contoso.com/new/targetnamespace (as shown in the code below), it is treated as if the target namespace declared in the schema was <ph id="ph2">`http://www.contoso.com/new/targetnamespace`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;       &lt;xs:element name="A" type="xs:string" /&gt;   &lt;/xs:schema&gt;   ```</ph>如果上面的架构添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;与目标命名空间 http://www.contoso.com/new/targetnamespace （如下面的代码中所示），它将被视为架构中声明的目标命名空间已<ph id="ph2">`http://www.contoso.com/new/targetnamespace`</ph>。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd")      Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          Console.WriteLine(schema.TargetNamespace)         Next   ```</ph>      <ph id="ph2">```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd");   foreach(XmlSchema schema in schemaSet.Schemas())   {       Console.WriteLine(schema.TargetNamespace);   }   ```</ph></source>
          <target state="translated"><ph id="ph1">```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd")      Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          Console.WriteLine(schema.TargetNamespace)         Next   ```</ph>      <ph id="ph2">```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd");   foreach(XmlSchema schema in schemaSet.Schemas())   {       Console.WriteLine(schema.TargetNamespace);   }   ```</ph></target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The schema <ph id="ph1">`targetNamespace`</ph> property, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the <ph id="ph2">`targetNamespace`</ph> specified in the schema.</source>
          <target state="translated">架构<ph id="ph1">`targetNamespace`</ph>属性，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用<ph id="ph2">`targetNamespace`</ph>架构中指定。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The URL that specifies the schema to load.</source>
          <target state="translated">指定要加载的架构的 URL。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Schema.XmlSchema&gt; object if the schema is valid.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;对象架构是否有效。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If the schema is not valid and a <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified, then <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is returned and the appropriate validation event is raised.</source>
          <target state="translated">如果架构不是有效和<bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未指定，则<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>返回并引发相应的验证事件。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Otherwise, an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown.</source>
          <target state="translated">否则为<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>引发。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The schema is not valid.</source>
          <target state="translated">架构不是有效的。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The URL passed as a parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or &lt;xref:System.String.Empty&gt;.</source>
          <target state="translated">作为参数传递的 URL 是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或&lt;xref:System.String.Empty&gt;。&lt;/xref:System.String.Empty&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Adds the XML Schema definition language (XSD) schema contained in the &lt;xref:System.Xml.XmlReader&gt; to the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将 XML 架构定义语言 (XSD) 架构中包含添加&lt;xref:System.Xml.XmlReader&gt;到<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Before a schema can be added to an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, it has to be successfully preprocessed.</source>
          <target state="translated">可以将架构添加到之前&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;，它必须成功预处理。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">预处理执行以下基本任务。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">根据 W3C XML 架构的规则的结构化有效性检查该架构，但没有完全验证架构。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">对内部和外部架构组件的引用进行解析。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Any imported or included schemas that are successfully retrieved are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">已成功检索到任何导入或包含架构也将添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Imported schemas are added as separate &lt;xref:System.Xml.Schema.XmlSchema&gt; objects, and included schemas are made a part of the including &lt;xref:System.Xml.Schema.XmlSchema&gt;.</source>
          <target state="translated">导入的架构添加为单独&lt;xref:System.Xml.Schema.XmlSchema&gt;对象，包括的架构进行和包括&lt;xref:System.Xml.Schema.XmlSchema&gt;。&lt;/xref:System.Xml.Schema.XmlSchema&gt;的一部分&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the Add method.</source>
          <target state="translated">以下是使用的 Add 方法时要考虑的重要说明。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>-   Successfully retrieved schemas imported or included by the schemas contained in the &lt;xref:System.Xml.XmlReader&gt; are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">-已成功检索的架构导入或包含的&lt;xref:System.Xml.XmlReader&gt;也将添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;&lt;/xref:System.Xml.XmlReader&gt;中包含的架构</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.XmlReader&gt; is not positioned on the root element, an &lt;xref:System.Xml.Schema.XmlSchemaException&gt; is thrown unless the current item is an element.</source>
          <target state="translated">-如果&lt;xref:System.Xml.XmlReader&gt;未定位在的根元素，&lt;xref:System.Xml.Schema.XmlSchemaException&gt;引发除非当前项是一个元素。&lt;/xref:System.Xml.Schema.XmlSchemaException&gt; &lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If the current item is an <ph id="ph1">`xs:schema`</ph> element, the schema document is read into the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;; otherwise, an &lt;xref:System.Xml.Schema.XmlSchemaException&gt; is thrown because the schema is not valid.</source>
          <target state="translated">如果当前项<ph id="ph1">`xs:schema`</ph>元素，架构文档读取到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;; 否则为&lt;xref:System.Xml.Schema.XmlSchemaException&gt;因为架构不是有效引发。&lt;/xref:System.Xml.Schema.XmlSchemaException&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.XmlReader&gt; is positioned over a sequence of XML nodes, only the first node in the sequence is added.</source>
          <target state="translated">-如果&lt;xref:System.Xml.XmlReader&gt;位于通过 XML 节点的序列，添加仅在序列中的第一个节点。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-   If the schema was created from a &lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName&gt; method call, the value of the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; property is ignored, because inline schema processing is not applied for W3C XML Schema documents.</source>
          <target state="translated">-如果从已创建的架构&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName&gt;方法调用、 的值&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;属性被忽略，因为内联架构处理不应用于 W3C XML 架构文档。&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; &lt;/xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Xml.XmlResolver&gt; property of the &lt;xref:System.Xml.XmlReader&gt; is not used to resolve references to namespaces or schema locations in include and import elements.</source>
          <target state="translated">-&lt;xref:System.Xml.XmlResolver&gt;属性&lt;xref:System.Xml.XmlReader&gt;不用于解析命名空间或架构中的位置的引用包含和导入元素。&lt;/xref:System.Xml.XmlReader&gt; &lt;/xref:System.Xml.XmlResolver&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Instead, the &lt;xref:System.Xml.XmlResolver&gt; property of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is used.</source>
          <target state="translated">相反，&lt;xref:System.Xml.XmlResolver&gt;属性&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;使用。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.XmlResolver&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>-   The Add method of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the Add method is called.</source>
          <target state="translated">-的 Add 方法&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;已使用的目标命名空间定义在架构中，而无需时将调用添加方法作为参数指定的目标命名空间的能力。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Specifying <ph id="ph1">`null`</ph> or &lt;xref:System.String.Empty?displayProperty=fullName&gt; to the Add method instructs the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; to use the target namespace defined in the schema.</source>
          <target state="translated">指定<ph id="ph1">`null`</ph>或&lt;xref:System.String.Empty?displayProperty=fullName&gt;的 add 方法指示&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;若要使用的架构中定义的目标命名空间。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.String.Empty?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For an example of this behavior, see the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; method.</source>
          <target state="translated">此行为的一个示例，请参阅&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;方法。&lt;/xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The remaining functionality of this method is identical to that of the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; method.</source>
          <target state="translated">此方法的其他功能等同于的&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;方法。&lt;/xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The schema <ph id="ph1">`targetNamespace`</ph> property, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the <ph id="ph2">`targetNamespace`</ph> specified in the schema.</source>
          <target state="translated">架构<ph id="ph1">`targetNamespace`</ph>属性，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用<ph id="ph2">`targetNamespace`</ph>架构中指定。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; object.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;对象。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Schema.XmlSchema&gt; object if the schema is valid.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;对象架构是否有效。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If the schema is not valid and a <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified, then <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is returned and the appropriate validation event is raised.</source>
          <target state="translated">如果架构不是有效和<bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未指定，则<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>返回并引发相应的验证事件。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Otherwise, an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown.</source>
          <target state="translated">否则为<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>引发。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The schema is not valid.</source>
          <target state="translated">架构不是有效的。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; object passed as a parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;对象作为参数传递<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaCompilationSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaCompilationSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings&gt; class specifies Unique Particle Attribution (UPA) validation options for the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings&gt;类指定&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;唯一粒子归属 (UPA) 验证选项&lt;/xref:System.Xml.Schema.XmlSchemaCompilationSettings&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For more information about enabling UPA validation checks, see the &lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A&gt; property.</source>
          <target state="translated">有关启用 UPA 验证检查的详细信息，请参阅&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A&gt;属性。&lt;/xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaCompilationSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaCompilationSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default is an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaCompilationSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance with the &lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*&gt; property set to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaCompilationSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>实例与&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*&gt;属性设置为<bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Compiles the XML Schema definition language (XSD) schemas added to the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into one logical schema.</source>
          <target state="translated">编译添加到 XML 架构定义语言 (XSD) 架构<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>成一个逻辑架构。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This method is called automatically when validation is needed and the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has not been previously compiled—for example, when an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is used as an input to create an &lt;xref:System.Xml.XmlReader&gt; object in the &lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt; property of an &lt;xref:System.Xml.XmlReaderSettings&gt; object.</source>
          <target state="translated">需要验证时自动调用此方法与&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;以前尚未编译-例如，当&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;作为输入用于创建&lt;xref:System.Xml.XmlReader&gt;对象在&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;属性&lt;xref:System.Xml.XmlReaderSettings&gt;对象。&lt;/xref:System.Xml.XmlReaderSettings&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt; &lt;/xref:System.Xml.XmlReader&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is already in the compiled state, this method will not recompile the schemas.</source>
          <target state="translated">如果&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;是已在编译的状态，此方法不会重新编译架构。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If this method executes successfully, the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property is set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">如果此方法成功执行，&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;属性设置为<ph id="ph1">`true`</ph>。&lt;/xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Schemas that have been previously compiled by an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; are not recompiled.</source>
          <target state="translated">以前编译的架构&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;不重新编译。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>However, schemas that were compiled using the Compile method of the &lt;xref:System.Xml.Schema.XmlSchema&gt; will be recompiled.</source>
          <target state="translated">但是，使用的编译方法编译的架构&lt;xref:System.Xml.Schema.XmlSchema&gt;将重新编译。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You need to call the &lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt; method if you have changed a schema (or one of its includes/imports) after adding it to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 你需要调用&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;方法，如果你已将其添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;后更改架构 （或其的包括/导入文件夹）&lt;/xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt; method will check the schema for structural validity according to the rules of W3C XML Schema.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;方法将检查根据 W3C XML 架构的规则的结构化有效性的架构。&lt;/xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>However, it will not perform a full validation check.</source>
          <target state="translated">但是，它不会执行完整的验证检查。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>It will also resolve references to internal and external schema components.</source>
          <target state="translated">它还会解析到内部和外部架构组件的引用。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Any imported or included schemas that are successfully retrieved are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">已成功检索到任何导入或包含架构也将添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Imported schemas are added as separate &lt;xref:System.Xml.Schema.XmlSchema&gt; objects while included schemas are made part of the including &lt;xref:System.Xml.Schema.XmlSchema&gt;.</source>
          <target state="translated">导入的架构将添加为独立的&lt;xref:System.Xml.Schema.XmlSchema&gt;对象包括的架构进行的一部分包括&lt;xref:System.Xml.Schema.XmlSchema&gt;。&lt;/xref:System.Xml.Schema.XmlSchema&gt;时&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If the call to reprocess is successful, the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property is set to false.</source>
          <target state="translated">若要重新处理的调用是否成功，&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;属性设置为 false。&lt;/xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>An error occurred when validating and compiling the schemas in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">验证和编译中的架构时出错，发生<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指示是否为指定的目标命名空间 URI 与 XML 架构定义语言 (XSD) 架构<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Schemas that are indirectly added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; are detected by the Contains method; for example, imported schemas.</source>
          <target state="translated">间接添加到的架构&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;检测到的 Contains 方法; 例如，导入架构。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>As a result, if a schema for the http://www.contoso.com/retail namespace which imports a schema for the http://www.contoso.com/books namespace is added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, calling Contains with <ph id="ph1">`http://www.contoso.com/books`</ph> as a parameter, it returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">因此，如果用于 http://www.contoso.com/retail 命名空间的架构的导入 http://www.contoso.com/books 命名空间架构添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;，调用与 Contains<ph id="ph1">`http://www.contoso.com/books`</ph>作为参数，它将返回<ph id="ph2">`true`</ph>。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The schema <ph id="ph1">`targetNamespace`</ph> property.</source>
          <target state="translated">架构<ph id="ph1">`targetNamespace`</ph>属性。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a schema with the specified target namespace URI is in the <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果与指定的目标命名空间 URI 的架构是否在<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified XML Schema definition language (XSD) &lt;xref:System.Xml.Schema.XmlSchema&gt; object is in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指示是否指定的 XML 架构定义语言 (XSD)&lt;xref:System.Xml.Schema.XmlSchema&gt;对象处于<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; object.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;对象。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Xml.Schema.XmlSchema&gt; object is in the <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Xml.Schema.XmlSchema&gt;对象处于<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> passed as a parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>参数原样传递<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Copies all the &lt;xref:System.Xml.Schema.XmlSchema&gt; objects from the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the given array, starting at the given index.</source>
          <target state="translated">将所有复制&lt;xref:System.Xml.Schema.XmlSchema&gt;对象从<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到给定数组中，从给定索引处开始。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The array to copy the objects to.</source>
          <target state="translated">要向其复制对象的数组。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The index in the array where copying will begin.</source>
          <target state="translated">中开始复制的数组的索引。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets the number of logical XML Schema definition language (XSD) schemas in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取数逻辑 XML 架构定义语言 (XSD) 架构中<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If there are two schemas for the namespace <ph id="ph1">`http://www.contoso.com`</ph> in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, the Count property would return 1 because the schemas are treated as a single logical schema for validation purposes.</source>
          <target state="translated">如果没有命名空间的两个架构<ph id="ph1">`http://www.contoso.com`</ph>中&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;，Count 属性将返回 1，因为架构被视为单个逻辑架构来进行验证。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>However, if a schema for the namespace <ph id="ph1">`http://www.contoso.com/retail`</ph> imported a schema for the <ph id="ph2">`http://www.contoso.com/books`</ph> namespace, the value of the Count property would be 2.</source>
          <target state="translated">但是，如果用于命名空间的架构<ph id="ph1">`http://www.contoso.com/retail`</ph>导入的架构<ph id="ph2">`http://www.contoso.com/books`</ph>命名空间，计数属性的值将为 2。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The number of logical schemas in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">中的逻辑架构数<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取所有 XML 架构定义中的所有全局特性语言 (XSD) 架构中<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The collection of global attributes.</source>
          <target state="translated">属性特性的集合。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取所有 XML 架构定义中的所有全局元素语言 (XSD) 架构中<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The collection of global elements.</source>
          <target state="translated">全局元素的集合。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取所有全局简单和复杂类型中的所有 XML 架构定义语言 (XSD) 架构中的<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The GlobalTypes property always returns a type that represents the <ph id="ph1">`xs:anyType`</ph> complex type.</source>
          <target state="translated">GlobalTypes 属性始终返回一个表示类型<ph id="ph1">`xs:anyType`</ph>复杂类型。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The collection of global simple and complex types.</source>
          <target state="translated">全局简单和复杂类型的集合。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> have been compiled.</source>
          <target state="translated">获取一个值，该值指示是否中的 XML 架构定义语言 (XSD) 架构<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>已编译。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The IsCompiled property is not affected if schemas are edited while in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">如果在&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;编辑了架构不受影响的 IsCompiled 属性</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Updates of the individual schemas in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; are not tracked.</source>
          <target state="translated">中的单个架构更新&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;不会跟踪。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>As a result, the IsCompiled property can be <ph id="ph1">`true`</ph> even though one of the schemas contained in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has been altered, as long as no schemas were added or removed from the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">因此，IsCompiled 属性可<ph id="ph1">`true`</ph>即使&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;已被更改，只要没有添加或删除从&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;任何架构&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;中包含一个架构</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the schemas in the <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> have been compiled since the last time a schema was added or removed from the <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果中的架构<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>以来上次架构已添加或删除从已被编译<bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>; 否则为<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets the default &lt;xref:System.Xml.XmlNameTable&gt; used by the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when loading new XML Schema definition language (XSD) schemas.</source>
          <target state="translated">获取默认&lt;xref:System.Xml.XmlNameTable&gt;由<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>时加载新的 XML 架构定义语言 (XSD) 架构。&lt;/xref:System.Xml.XmlNameTable&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A table of atomized string objects.</source>
          <target state="translated">原子化的字符串对象表。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Removes the specified XML Schema definition language (XSD) schema from the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">删除指定的 XML 架构定义语言 (XSD) 的架构从<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Removing a schema from the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; sets the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">删除从架构&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;设置&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;属性<ph id="ph1">`false`</ph>。&lt;/xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; object to remove from the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;要从移除对象<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; object removed from the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the schema was not found in the <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;从删除的对象<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果中找不到架构<bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The schema is not a valid schema.</source>
          <target state="translated">架构不是有效的架构。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; passed as a parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;参数原样传递<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">删除指定的 XML 架构定义语言 (XSD) 架构和它从中导入的所有架构<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The RemoveRecursive method removes the specified schema and all the schemas it imports from the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, as long as there are no dependencies on the schema or its imported schemas.</source>
          <target state="translated">RemoveRecursive 方法中删除指定的架构和它从中导入的所有架构&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;，只要有不依赖于架构或其导入的架构。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If there are dependencies on the schema or its imported schemas in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;, nothing is removed and RemoveRecursive returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果不存在架构或在其导入的架构上的依赖关系&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;，执行任何操作将删除并且 RemoveRecursive 返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`false`</ph> is returned and a &lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt; is defined, a warning is sent to the event handler describing the dependencies.</source>
          <target state="translated">如果<ph id="ph1">`false`</ph>返回和&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;是定义，警告被发送到事件处理程序描述的相关性。&lt;/xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>If the specified schema imports other schemas and the specified schema was previously removed with the &lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt; method, the RemoveRecursive method will not remove the imported schemas and will return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果指定的架构导入其他架构和以前移除了指定的架构&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;方法，RemoveRecursive 方法不会删除导入的架构并将返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For example, if <ph id="ph1">`parentSchema`</ph> imports <ph id="ph2">`childSchema1`</ph> and <ph id="ph3">`childSchema2`</ph> the following code will only remove <ph id="ph4">`parentSchema`</ph>, but not the imported <ph id="ph5">`childSchema1`</ph> and <ph id="ph6">`childSchema2`</ph> schemas:      <ph id="ph7">```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);   ss.Add(xs);   ss.Compile();   ss.Remove(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ```</ph>       The following code will remove the <ph id="ph8">`parentSchema`</ph> and the imported schemas:      <ph id="ph9">```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);   ss.Add(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ```</ph>       The RemoveRecursive method has no effect on the state of the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property.</source>
          <target state="translated">例如，如果<ph id="ph1">`parentSchema`</ph>导入<ph id="ph2">`childSchema1`</ph>和<ph id="ph3">`childSchema2`</ph>下面的代码只会删除<ph id="ph4">`parentSchema`</ph>，但不是导入<ph id="ph5">`childSchema1`</ph>和<ph id="ph6">`childSchema2`</ph>架构︰<ph id="ph7">```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);   ss.Add(xs);   ss.Compile();   ss.Remove(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ```</ph>下面的代码将删除<ph id="ph8">`parentSchema`</ph>和导入的架构︰ <ph id="ph9">```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);   ss.Add(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ```</ph> RemoveRecursive 方法不起作用的状态&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;属性。&lt;/xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; object to remove from the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;要从移除对象<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Xml.Schema.XmlSchema&gt; object and all its imports were successfully removed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.Xml.Schema.XmlSchema&gt;对象和所有导入已成功删除; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; passed as a parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;参数原样传递<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Reprocesses an XML Schema definition language (XSD) schema that already exists in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">重新处理中已存在一个 XML 架构定义语言 (XSD) 架构<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Reprocessing a schema performs all the preprocessing steps performed on a schema when the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; method is called.</source>
          <target state="translated">重新处理架构执行针对架构执行的所有预处理步骤时&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;调用方法。&lt;/xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>If the call to Reprocess is successful, the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property is set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果重新处理调用成功，&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;属性设置为<ph id="ph1">`false`</ph>。&lt;/xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The Reprocess method should be used after a schema in the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has been modified, after the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; has performed compilation.</source>
          <target state="translated">重新处理方法应使用后架构&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;已被修改，之后&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;执行编译。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You need to call the Reprocess method if you have changed a schema (or one of its includes/imports) after adding it to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 你需要将其添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;后如果您已更改架构 （或其的包括/导入之一） 调用重新处理方法</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The Reprocess method will check the schema for structural validity according to the rules of W3C XML Schema.</source>
          <target state="translated">重新处理方法将检查根据 W3C XML 架构的规则的结构化有效性的架构。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>However, it will not perform a full validation check.</source>
          <target state="translated">但是，它不会执行完整的验证检查。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>It will also resolve references to internal and external schema components.</source>
          <target state="translated">它还会解析到内部和外部架构组件的引用。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Any imported or included schemas that are successfully retrieved are also added to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</source>
          <target state="translated">已成功检索到任何导入或包含架构也将添加到&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Imported schemas are added as separate &lt;xref:System.Xml.Schema.XmlSchema&gt; objects while included schemas are made part of the including &lt;xref:System.Xml.Schema.XmlSchema&gt;.</source>
          <target state="translated">导入的架构将添加为独立的&lt;xref:System.Xml.Schema.XmlSchema&gt;对象包括的架构进行的一部分包括&lt;xref:System.Xml.Schema.XmlSchema&gt;。&lt;/xref:System.Xml.Schema.XmlSchema&gt;时&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>If the call to reprocess is successful, the &lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt; property is set to false.</source>
          <target state="translated">若要重新处理的调用是否成功，&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;属性设置为 false。&lt;/xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The schema to reprocess.</source>
          <target state="translated">要重新处理的架构。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Schema.XmlSchema&gt; object if the schema is a valid schema.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;对象架构是否是有效的架构。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>If the schema is not valid and a <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is returned and the appropriate validation event is raised.</source>
          <target state="translated">如果架构不是有效和<bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定，则<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>返回并引发相应的验证事件。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Otherwise, an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown.</source>
          <target state="translated">否则为<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>引发。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The schema is not valid.</source>
          <target state="translated">架构不是有效的。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; object passed as a parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;对象作为参数传递<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; object passed as a parameter does not already exist in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;对象传递参数中已不存在，因此<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Returns a collection of all the XML Schema definition language (XSD) schemas in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回集合的所有 XML 架构定义语言 (XSD) 架构中的<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>This method returns schemas that were added indirectly to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; because they were imported.</source>
          <target state="translated">此方法返回间接添加到的架构&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;因为它们已导入。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The Schemas method is the equivalent of the &lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A&gt; method of the obsolete &lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 架构方法等效于&lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A&gt;过时&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;。&lt;/xref:System.Xml.Schema.XmlSchemaCollection&gt;方法&lt;/xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing all the schemas that have been added to the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;对象，其中包含已添加到的所有架构<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>If no schemas have been added to the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, an empty &lt;xref:System.Collections.ICollection&gt; object is returned.</source>
          <target state="translated">如果没有架构已添加到<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，空&lt;xref:System.Collections.ICollection&gt;返回对象。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Returns a collection of all the XML Schema definition language (XSD) schemas in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that belong to the given namespace.</source>
          <target state="translated">返回集合的所有 XML 架构定义语言 (XSD) 架构中的<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属于给定的命名空间。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`targetNamespace`</ph> parameter is <ph id="ph2">`null`</ph> or &lt;xref:System.String.Empty&gt;, then all schemas without a namespace are returned.</source>
          <target state="translated">如果<ph id="ph1">`targetNamespace`</ph>参数是<ph id="ph2">`null`</ph>或&lt;xref:System.String.Empty&gt;，则返回所有没有命名空间的架构。&lt;/xref:System.String.Empty&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This method returns schemas that were added indirectly to the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; because they were imported.</source>
          <target state="translated">此方法返回间接添加到的架构&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;因为它们已导入。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The Schemas method is the equivalent of the &lt;xref:System.Xml.Schema.XmlSchemaCollection.Item%2A&gt; method of the obsolete &lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 架构方法等效于&lt;xref:System.Xml.Schema.XmlSchemaCollection.Item%2A&gt;过时&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;。&lt;/xref:System.Xml.Schema.XmlSchemaCollection&gt;方法&lt;/xref:System.Xml.Schema.XmlSchemaCollection.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The schema <ph id="ph1">`targetNamespace`</ph> property.</source>
          <target state="translated">架构<ph id="ph1">`targetNamespace`</ph>属性。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing all the schemas that have been added to the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that belong to the given namespace.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;对象，其中包含已添加到的所有架构<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属于给定的命名空间。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>If no schemas have been added to the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, an empty &lt;xref:System.Collections.ICollection&gt; object is returned.</source>
          <target state="translated">如果没有架构已添加到<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，空&lt;xref:System.Collections.ICollection&gt;返回对象。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.</source>
          <target state="translated">指定的事件处理程序接收有关 XML 架构定义语言 (XSD) 架构验证错误的信息。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Sets an event handler for receiving information about schema validation errors when the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; or &lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt; methods of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; are called.</source>
          <target state="translated">设置事件处理程序，用于接收有关架构验证错误的信息时&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;或&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;方法&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;称为。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>If an event handler is not defined, an &lt;xref:System.Xml.Schema.XmlSchemaException&gt; is thrown on any validation errors where the &lt;xref:System.Xml.Schema.XmlSeverityType&gt; is &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.</source>
          <target state="translated">如果未定义事件处理程序，&lt;xref:System.Xml.Schema.XmlSchemaException&gt;引发任何验证错误在其中&lt;xref:System.Xml.Schema.XmlSeverityType&gt;为&lt;xref:System.Xml.Schema.XmlSeverityType&gt;。&lt;/xref:System.Xml.Schema.XmlSeverityType&gt; &lt;/xref:System.Xml.Schema.XmlSeverityType&gt; &lt;/xref:System.Xml.Schema.XmlSchemaException&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Exceptions are not thrown for validation errors with an &lt;xref:System.Xml.Schema.XmlSeverityType&gt; of &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSeverityType&gt; &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.&lt;/xref:System.Xml.Schema.XmlSeverityType&gt;的&lt;/xref:System.Xml.Schema.XmlSeverityType&gt;验证错误不会引发异常</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve namespaces or locations referenced in include and import elements of a schema.</source>
          <target state="translated">集<bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用于解析包含和导入架构的元素命名空间或中引用的位置。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlResolver&gt; of an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the &lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; or &lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt; methods.</source>
          <target state="translated">&lt;xref:System.Xml.XmlResolver&gt;的&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;用于解析包含和导入的架构，元素的随时使用添加架构命名空间或中引用的位置&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;或&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;方法。&lt;/xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.XmlResolver&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 包括外部命名空间或中引用的位置，导入和架构的重新定义元素解析方面包括或导入这些架构的基 URI。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>For example, if the base URI of the including or importing schema is empty or <ph id="ph1">`null`</ph>, the external locations are resolved with respect to the current directory.</source>
          <target state="translated">例如，如果包括或导入架构的基 URI 为空或<ph id="ph1">`null`</ph>，则外部位置来解析相对于当前目录。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlUrlResolver&gt; class is used to resolve external schemas by default.</source>
          <target state="translated">&lt;xref:System.Xml.XmlUrlResolver&gt;类用于解析外部架构默认情况下。&lt;/xref:System.Xml.XmlUrlResolver&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>To disable resolution of include, import, and redefine elements of a schema, set the XmlResolver property to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">若要禁用的包含的解决方法，导入和重新定义架构，元素将 XmlResolver 属性设置为<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to resolve namespaces or locations referenced in include and import elements of a schema.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用于解析包含和导入架构的元素命名空间或中引用的位置。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>