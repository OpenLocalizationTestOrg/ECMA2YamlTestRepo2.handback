<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31cd92e3a66dd65e8f574a5810d836d283ded34c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Diagnostics.TraceListener.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">579e7cdd50b66d1b1182deb739be96410926cc60</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5fbd710325c648913712da4748970a5dae2d430</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> base class for the listeners who monitor trace and debug output.</source>
          <target state="translated">提供<bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为监视跟踪和调试输出的侦听器的基本类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Diagnostics.TraceListener&gt;.</source>
          <target state="translated">下表显示&lt;xref:System.Diagnostics.TraceListener&gt;.&lt;/xref:System.Diagnostics.TraceListener&gt;实例的初始属性的值</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>|Property|Default Value|   |--------------|-------------------|   |Name|The empty string ("").|   |Indent|Zero.|   |IndentSize|Four spaces.|</source>
          <target state="translated">|属性 |默认值 |  |--------------|-------------------|  |名称 |空字符串 ("")。 | |缩进 |零。 |  |IndentSize |四个空格。 |</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified name as the listener.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类作为侦听器使用指定的名称。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">名称<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets the custom trace listener attributes defined in the application configuration file.</source>
          <target state="translated">获取应用程序配置文件中定义的自定义跟踪侦听器特性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Classes that inherit from the &lt;xref:System.Diagnostics.TraceListener&gt; class can add custom attributes by overriding the &lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt; method and returning a string array of custom attribute names.</source>
          <target state="translated">继承自的类&lt;xref:System.Diagnostics.TraceListener&gt;类可以通过重写中添加自定义特性&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;方法并返回的自定义属性名称的字符串数组。&lt;/xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt; &lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Attributes property identifies the custom attributes that are referenced in the application's configuration file.</source>
          <target state="translated">Attributes 属性标识应用程序的配置文件中引用的自定义属性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, in the following configuration file excerpt the &lt;xref:System.Diagnostics.DelimitedListTraceListener&gt; custom attribute "delimiter" is referenced.</source>
          <target state="translated">例如，在下面的配置文件摘录&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;引用自定义特性"分隔符"。&lt;/xref:System.Diagnostics.DelimitedListTraceListener&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this case, the Attributes property returns a &lt;xref:System.Collections.Specialized.StringDictionary&gt; containing the string "delimiter".</source>
          <target state="translated">在这种情况下，Attributes 属性返回&lt;xref:System.Collections.Specialized.StringDictionary&gt;包含字符串"分隔符"。&lt;/xref:System.Collections.Specialized.StringDictionary&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;listeners&gt;     &lt;add name="delimitedListener"        type="System.Diagnostics.DelimitedListTraceListener"        delimiter=":"        initializeData="delimitedOutput.txt"        traceOutputOptions="ProcessId, DateTime" /&gt;     &lt;remove name="Default" /&gt;   &lt;/listeners&gt;   ```</ph>       Unreferenced custom attributes are not enumerated.</source>
          <target state="translated"><ph id="ph1">```   &lt;listeners&gt;     &lt;add name="delimitedListener"        type="System.Diagnostics.DelimitedListTraceListener"        delimiter=":"        initializeData="delimitedOutput.txt"        traceOutputOptions="ProcessId, DateTime" /&gt;     &lt;remove name="Default" /&gt;   &lt;/listeners&gt;   ```</ph>未引用的自定义属性不会枚举。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt; method.</source>
          <target state="translated">有关详细信息，请参阅&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;方法。&lt;/xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the custom attributes for the trace listener.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含跟踪侦听器的自定义属性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.</source>
          <target state="translated">当在派生类中重写，关闭输出流，使它不再接收跟踪或调试输出。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use this method when the output is going to a file, such as to the &lt;xref:System.Diagnostics.TextWriterTraceListener&gt;.</source>
          <target state="translated">当输出会转到文件，如到&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;.&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt;使用此方法</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After a call to this method, you must reinitialize the object.</source>
          <target state="translated">在对此方法的调用后, 必须重新初始化该对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Calling Dispose allows the resources used by the &lt;xref:System.Diagnostics.TraceListener&gt; to be reallocated for other purposes.</source>
          <target state="translated">调用 Dispose 允许使用的资源&lt;xref:System.Diagnostics.TraceListener&gt;可以重新分配用于其他目的。&lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关释放的详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected &lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt; method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>调用受保护&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;方法替换<ph id="ph2">`disposing`</ph>参数设置为<ph id="ph3">`true`</ph>。&lt;/xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用<ph id="ph1">`Dispose`</ph>与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Diagnostics.TraceListener&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.Diagnostics.TraceListener&gt;引用。&lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Emits an error message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">发出一条错误消息向所创建侦听器实现时<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The default behavior is to display the specified message in a message box when the application is running in a user-interface mode, and to the &lt;xref:System.Diagnostics.TraceListener&gt; instances in a &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection.</source>
          <target state="translated">默认行为是在用户界面模式下，并对其运行该应用程序时，将指定的消息显示在一个消息框&lt;xref:System.Diagnostics.TraceListener&gt;实例&lt;xref:System.Diagnostics.TraceListenerCollection&gt;集合。&lt;/xref:System.Diagnostics.TraceListenerCollection&gt; &lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>By default, the &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection has an instance of a &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">默认情况下，&lt;xref:System.Diagnostics.TraceListenerCollection&gt;集合包含的一种&lt;xref:System.Diagnostics.DefaultTraceListener&gt;。&lt;/xref:System.Diagnostics.DefaultTraceListener&gt;一个实例&lt;/xref:System.Diagnostics.TraceListenerCollection&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can customize this behavior by adding a &lt;xref:System.Diagnostics.TraceListener&gt; to or removing one from the collection.</source>
          <target state="translated">可以通过添加自定义此行为&lt;xref:System.Diagnostics.TraceListener&gt;到或从集合中移除。&lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A message to emit.</source>
          <target state="translated">要发出的消息。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Emits an error message and a detailed error message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">将发出错误消息和详细的错误消息写入侦听器创建实现时<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default behavior is to display the message and detailed message in a message box when the application is running in a user-interface mode, and to the &lt;xref:System.Diagnostics.TraceListener&gt; instances in a &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection.</source>
          <target state="translated">默认行为是在用户界面模式下，并对其运行该应用程序时显示消息框中的消息和详细的消息&lt;xref:System.Diagnostics.TraceListener&gt;实例&lt;xref:System.Diagnostics.TraceListenerCollection&gt;集合。&lt;/xref:System.Diagnostics.TraceListenerCollection&gt; &lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>By default, the &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection has an instance of a &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">默认情况下，&lt;xref:System.Diagnostics.TraceListenerCollection&gt;集合包含的一种&lt;xref:System.Diagnostics.DefaultTraceListener&gt;。&lt;/xref:System.Diagnostics.DefaultTraceListener&gt;一个实例&lt;/xref:System.Diagnostics.TraceListenerCollection&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can customize this behavior by adding a &lt;xref:System.Diagnostics.TraceListener&gt; to or removing one from the collection.</source>
          <target state="translated">可以通过添加自定义此行为&lt;xref:System.Diagnostics.TraceListener&gt;到或从集合中移除。&lt;/xref:System.Diagnostics.TraceListener&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A message to emit.</source>
          <target state="translated">要发出的消息。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A detailed message to emit.</source>
          <target state="translated">要发出的详细的消息。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets and sets the trace filter for the trace listener.</source>
          <target state="translated">获取和设置跟踪侦听器的跟踪筛选器。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A trace filter can be added to a trace listener to provide a layer of screening beyond that provided to the trace source by switches.</source>
          <target state="translated">跟踪筛选器可以添加到跟踪侦听器，以提供额外筛选到跟踪源提供的交换机的层。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Diagnostics.EventTypeFilter&gt; can be added to a trace listener to control the event types that are output by the listener.</source>
          <target state="translated">例如，&lt;xref:System.Diagnostics.EventTypeFilter&gt;可以添加到跟踪侦听器来控制输出的事件类型侦听器。&lt;/xref:System.Diagnostics.EventTypeFilter&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Listeners that are called because the switch criteria are met can query their filter, if present, to determine if a trace is to be sent to output.</source>
          <target state="translated">交换机条件都满足，因此被称为的侦听器可以查询其筛选器，如果存在，以确定是否要发送输出。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An object derived from the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceFilter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> base class.</source>
          <target state="translated">一个对象派生自<bpt id="p1">&lt;xref href="System.Diagnostics.TraceFilter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>基类。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, flushes the output buffer.</source>
          <target state="translated">当在派生类中重写，刷新输出缓冲区。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets the custom attributes supported by the trace listener.</source>
          <target state="translated">获取跟踪侦听器支持的自定义属性。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The default implementation for GetSupportedAttributes returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">GetSupportedAttributes 的默认实现返回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A string array naming the custom attributes supported by the trace listener, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are no custom attributes.</source>
          <target state="translated">支持的跟踪侦听器中，自定义特性命名的字符串数组或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果没有自定义属性。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets the indent level.</source>
          <target state="translated">获取或设置缩进级别。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The IndentLevel property represents the number of times that the indent specified by the &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt; property is applied.</source>
          <target state="translated">IndentLevel 属性表示的缩进指定的次数&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;应用属性。&lt;/xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This property is stored on per-thread/per-request basis.</source>
          <target state="translated">此属性存储在每个线程/每个请求。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The indent level.</source>
          <target state="translated">缩进级别。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default is zero.</source>
          <target state="translated">默认值为零。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">获取或设置缩进的空格数。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The property is stored on per-thread/per-request basis.</source>
          <target state="translated">属性存储基于每个线程/每个请求。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The number of spaces in an indent.</source>
          <target state="translated">缩进的空格数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default is four spaces.</source>
          <target state="translated">默认值为&amp;4; 个空格。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Set operation failed because the value is less than zero.</source>
          <target state="translated">设置操作失败，因为值小于零。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the trace listener is thread safe.</source>
          <target state="translated">获取一个值，该值指示跟踪侦听器是否线程安全。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value of IsThreadSafe is used to determine whether to use a global lock when writing to the listener.</source>
          <target state="translated">IsThreadSafe 的值用于确定是否在写入到侦听器时使用全局锁。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the value of IsThreadSafe is <ph id="ph1">`false`</ph>, the global lock is used regardless of the value of &lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;.</source>
          <target state="translated">如果 IsThreadSafe 的值是<ph id="ph1">`false`</ph>，无论&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;.&lt;/xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;的值如何使用全局锁</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The global lock is not used only if the value of IsThreadSafe is <ph id="ph1">`true`</ph> and the value of &lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt; is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">仅当 IsThreadSafe 的值是不使用全局锁<ph id="ph1">`true`</ph>和的值&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;是<ph id="ph2">`false`</ph>。&lt;/xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default behavior is to use the global lock whenever writing to the listener.</source>
          <target state="translated">默认行为是使用全局锁定时写入侦听器。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the trace listener is thread safe; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果跟踪侦听器是线程安全的;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets a name for this <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置此名称<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The name can be used to organize and access listeners in a &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection.</source>
          <target state="translated">名称可以用于组织和访问侦听器中的&lt;xref:System.Diagnostics.TraceListenerCollection&gt;集合。&lt;/xref:System.Diagnostics.TraceListenerCollection&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A name for this <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">此名称<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
          <target state="translated">默认值为空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to indent the output.</source>
          <target state="translated">获取或设置一个值，该值指示是否缩进输出。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The &lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt; method, called by the &lt;xref:System.Diagnostics.DefaultTraceListener&gt; and &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; classes, sets the NeedIndent property value to <ph id="ph1">`false`</ph> to prevent later, unnecessary indents.</source>
          <target state="translated"><bpt id="p1">**</bpt>请注意<ept id="p1">**</ept>&lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;调用的方法&lt;xref:System.Diagnostics.DefaultTraceListener&gt;和&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;类，将 NeedIndent 属性值设置为<ph id="ph1">`false`</ph>以更高版本，防止不必要的缩进。&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt; &lt;/xref:System.Diagnostics.DefaultTraceListener&gt; &lt;/xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You must set the NeedIndent property to <ph id="ph1">`true`</ph> each time you wish to indent trace output.</source>
          <target state="translated">你必须将 NeedIndent 属性设置为<ph id="ph1">`true`</ph>每当你想要缩进跟踪输出。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the output should be indented; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果输出应缩进;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Writes trace information, a data object and event information to the listener specific output.</source>
          <target state="translated">写入跟踪信息、 数据对象和事件信息到侦听器特定的输出。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt; 此方法不应直接由应用程序代码，但由的成员调用&lt;xref:System.Diagnostics.Debug&gt;， &lt;xref:System.Diagnostics.Trace&gt;，和&lt;xref:System.Diagnostics.TraceSource&gt;类用于写入输出的跟踪数据。&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default implementation writes the <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph> and <ph id="ph4">`id`</ph> parameters in the header and footer of the trace.</source>
          <target state="translated">默认实现写入<ph id="ph1">`eventCache`</ph>， <ph id="ph2">`source`</ph>，<ph id="ph3">`eventType`</ph>和<ph id="ph4">`id`</ph>页眉和页脚的跟踪中的参数。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`data`</ph> parameter is written as the body of the trace message.</source>
          <target state="translated"><ph id="ph1">`data`</ph>参数被编写为跟踪消息的正文。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ToString`</ph> method of the data object is used to convert the object to a &lt;xref:System.String&gt;.</source>
          <target state="translated"><ph id="ph1">`ToString`</ph>数据对象方法用于将对象转换为一种&lt;xref:System.String&gt;。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象，其中包含当前进程 ID、 线程 ID 以及堆栈跟踪信息。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">用于标识输出时，通常为生成跟踪事件的应用程序的名称的名称。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定引发跟踪的事件的类型的值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The trace data to emit.</source>
          <target state="translated">要发出的跟踪数据。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Writes trace information, an array of data objects and event information to the listener specific output.</source>
          <target state="translated">写入跟踪信息、 数据对象和事件信息写入侦听器特定的输出的数组。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt; 此方法不应直接由应用程序代码，但由的成员调用&lt;xref:System.Diagnostics.Debug&gt;， &lt;xref:System.Diagnostics.Trace&gt;，和&lt;xref:System.Diagnostics.TraceSource&gt;类用于写入输出的跟踪数据。&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">默认实现将的值写入<ph id="ph1">`source`</ph>，<ph id="ph2">`eventType`</ph>和<ph id="ph3">`id`</ph>作为标头的参数。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The data objects are converted to strings using the <ph id="ph1">`ToString`</ph> method of each object.</source>
          <target state="translated">数据对象将转换为字符串使用<ph id="ph1">`ToString`</ph>每个对象的方法。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>数据写入页脚，正在依赖于的值的输出数据的性质&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;属性。&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象，其中包含当前进程 ID、 线程 ID 以及堆栈跟踪信息。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">用于标识输出时，通常为生成跟踪事件的应用程序的名称的名称。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定引发跟踪的事件的类型的值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An array of objects to emit as data.</source>
          <target state="translated">要作为数据发出的对象数组。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Writes trace and event information to the listener specific output.</source>
          <target state="translated">向侦听器特定的输出写入跟踪和事件信息。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt; 此方法不应直接由应用程序代码，但由的成员调用&lt;xref:System.Diagnostics.Debug&gt;， &lt;xref:System.Diagnostics.Trace&gt;，和&lt;xref:System.Diagnostics.TraceSource&gt;类用于写入输出的跟踪数据。&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">默认实现将的值写入<ph id="ph1">`source`</ph>，<ph id="ph2">`eventType`</ph>和<ph id="ph3">`id`</ph>作为标头的参数。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>数据写入页脚，正在依赖于的值的输出数据的性质&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;属性。&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象，其中包含当前进程 ID、 线程 ID 以及堆栈跟踪信息。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">用于标识输出时，通常为生成跟踪事件的应用程序的名称的名称。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定引发跟踪的事件的类型的值。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Writes trace information, a message, and event information to the listener specific output.</source>
          <target state="translated">写入跟踪信息、 消息和事件信息写入侦听器特定的输出。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt; 此方法不应直接由应用程序代码，但由的成员调用&lt;xref:System.Diagnostics.Debug&gt;， &lt;xref:System.Diagnostics.Trace&gt;，和&lt;xref:System.Diagnostics.TraceSource&gt;类用于写入输出的跟踪数据。&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header, followed by the <ph id="ph4">`message`</ph> data.</source>
          <target state="translated">默认实现将的值写入<ph id="ph1">`source`</ph>，<ph id="ph2">`eventType`</ph>和<ph id="ph3">`id`</ph>参数作为标头后, 跟<ph id="ph4">`message`</ph>数据。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>数据写入页脚，正在依赖于的值的输出数据的性质&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;属性。&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象，其中包含当前进程 ID、 线程 ID 以及堆栈跟踪信息。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">用于标识输出时，通常为生成跟踪事件的应用程序的名称的名称。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定引发跟踪的事件的类型的值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Writes trace information, a formatted array of objects and event information to the listener specific output.</source>
          <target state="translated">写入跟踪信息、 格式化的对象和事件信息写入侦听器特定的输出的数组。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt; 此方法不应直接由应用程序代码，但由的成员调用&lt;xref:System.Diagnostics.Debug&gt;， &lt;xref:System.Diagnostics.Trace&gt;，和&lt;xref:System.Diagnostics.TraceSource&gt;类用于写入输出的跟踪数据。&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">默认实现将的值写入<ph id="ph1">`source`</ph>，<ph id="ph2">`eventType`</ph>和<ph id="ph3">`id`</ph>作为标头的参数。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> object array is converted to a string using the &lt;xref:System.String.Format%2A&gt; method, passing the <ph id="ph2">`format`</ph> string and <ph id="ph3">`args`</ph> array to format the string as the message portion of the trace.</source>
          <target state="translated"><ph id="ph1">`args`</ph>对象数组转换为字符串使用&lt;xref:System.String.Format%2A&gt;方法，并传递<ph id="ph2">`format`</ph>字符串和<ph id="ph3">`args`</ph>要跟踪的消息部分作为格式字符串数组。&lt;/xref:System.String.Format%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>数据写入页脚，正在依赖于的值的输出数据的性质&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;属性。&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象，其中包含当前进程 ID、 线程 ID 以及堆栈跟踪信息。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">用于标识输出时，通常为生成跟踪事件的应用程序的名称的名称。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定引发跟踪的事件的类型的值。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items, which correspond to objects in the <ph id="ph1">`args`</ph> array.</source>
          <target state="translated">包含零个或多个格式项，对应于中的对象的格式字符串<ph id="ph1">`args`</ph>数组。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array containing zero or more objects to format.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>数组，其中包含零个或多个要格式化的对象。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets or sets the trace output options.</source>
          <target state="translated">获取或设置跟踪输出选项。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The TraceOutputOptions property determines the optional content of trace output.</source>
          <target state="translated">TraceOutputOptions 属性确定跟踪输出的可选内容。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The property can be set in the configuration file or programmatically during execution to include additional data specifically for a section of code.</source>
          <target state="translated">该属性可以设置配置文件中或以编程方式在执行期间以包括专门用于某段代码的其他数据。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For example, you can set the TraceOutputOptions property for the console trace listener to &lt;xref:System.Diagnostics.TraceOptions?displayProperty=fullName&gt; to add call stack information to the trace output.</source>
          <target state="translated">例如，你可以为控制台跟踪侦听器，以便设置 TraceOutputOptions 属性&lt;xref:System.Diagnostics.TraceOptions?displayProperty=fullName&gt;将调用堆栈信息添加到跟踪输出。&lt;/xref:System.Diagnostics.TraceOptions?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Diagnostics.TraceOptions&gt; enumeration is not used by the following classes and methods:      -   The &lt;xref:System.Diagnostics.EventLogTraceListener&gt; class, because it can cause a large volume of data to be written to the log.</source>
          <target state="translated">&lt;xref:System.Diagnostics.TraceOptions&gt;枚举不由以下类和方法:-&lt;xref:System.Diagnostics.EventLogTraceListener&gt;类，因为它可能会导致大量的数据写入到日志&lt;/xref:System.Diagnostics.EventLogTraceListener&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the &lt;xref:System.Diagnostics.ConsoleTraceListener&gt;, &lt;xref:System.Diagnostics.DefaultTraceListener&gt;, and &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; classes.</source>
          <target state="translated">-<ph id="ph1">`Write`</ph>和<ph id="ph2">`WriteLine`</ph>方法&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;， &lt;xref:System.Diagnostics.DefaultTraceListener&gt;，和&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;类。&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt; &lt;/xref:System.Diagnostics.DefaultTraceListener&gt; &lt;/xref:System.Diagnostics.ConsoleTraceListener&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; and &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; methods of the &lt;xref:System.Diagnostics.TraceListener&gt; class when they are not overridden in a derived class.</source>
          <target state="translated">-&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;&lt;xref:System.Diagnostics.TraceListener&gt;在它们不在派生类中重写时的类&lt;/xref:System.Diagnostics.TraceListener&gt;和&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;方法&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;&lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">枚举值的按位组合。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Diagnostics.TraceOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Diagnostics.TraceOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Set operation failed because the value is invalid.</source>
          <target state="translated">设置操作失败，因为的值无效。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Writes trace information, a message, a related activity identity and event information to the listener specific output.</source>
          <target state="translated">写入跟踪信息、 消息、 相关的活动标识和事件信息写入侦听器特定的输出。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt; 此方法不应直接由应用程序代码，但由的成员调用&lt;xref:System.Diagnostics.Debug&gt;， &lt;xref:System.Diagnostics.Trace&gt;，和&lt;xref:System.Diagnostics.TraceSource&gt;类用于写入输出的跟踪数据。&lt;/xref:System.Diagnostics.TraceSource&gt; &lt;/xref:System.Diagnostics.Trace&gt; &lt;/xref:System.Diagnostics.Debug&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt; method is used for the correlation of related traces.</source>
          <target state="translated">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;方法适用于的相关的跟踪相关性。&lt;/xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The TraceTransfer method calls the &lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt; method to process the call, with the eventType level set to &lt;xref:System.Diagnostics.TraceEventType&gt; and the <ph id="ph1">`relatedActivityId`</ph>&lt;xref:System.Guid&gt; as a string appended to the message.</source>
          <target state="translated">TraceTransfer 方法调用&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;方法，以处理调用，eventType 级别设置为与&lt;xref:System.Diagnostics.TraceEventType&gt;和<ph id="ph1">`relatedActivityId`</ph>&lt;xref:System.Guid&gt;作为字符串追加到消息。&lt;/xref:System.Guid&gt; &lt;/xref:System.Diagnostics.TraceEventType&gt; &lt;/xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象，其中包含当前进程 ID、 线程 ID 以及堆栈跟踪信息。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">用于标识输出时，通常为生成跟踪事件的应用程序的名称的名称。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Guid&gt; object identifying a related activity.</source>
          <target state="translated">A&lt;xref:System.Guid&gt;标识相关的活动的对象。&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">对象的值写入&lt;xref:System.Object.ToString*&gt;到侦听器的方法创建实现时<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;你想要编写其完全限定的类名。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes the specified message to the listener you create in the derived class.</source>
          <target state="translated">当在派生类中重写时写入指定的消息到侦听器您创建派生类中。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">将类别名称和对象的值写入&lt;xref:System.Object.ToString*&gt;到侦听器的方法创建实现时<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;你想要编写其完全限定的类名。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">用于组织输出的类别名称。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Writes a category name and a message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">实现时创建的侦听器写入类别名称和消息<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">用于组织输出的类别名称。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Writes the indent to the listener you create when you implement this class, and resets the &lt;xref:System.Diagnostics.TraceListener.NeedIndent*&gt; property to <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">当您实现此类创建到侦听器写入缩进，并将重置&lt;xref:System.Diagnostics.TraceListener.NeedIndent*&gt;属性<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Diagnostics.TraceListener.NeedIndent*&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This method writes the indent and resets the &lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">此方法写入缩进，并将重置&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;属性<ph id="ph1">`false`</ph>。&lt;/xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Call this method if &lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt; is <ph id="ph1">`true`</ph> when you are overriding the &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; and &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; methods.</source>
          <target state="translated">调用此方法，如果&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;是<ph id="ph1">`true`</ph>当您要重写&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;和&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;方法。&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; &lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt; &lt;/xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>By default, this method uses blank spaces for indentation.</source>
          <target state="translated">默认情况下，此方法使用空格来缩进。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The size of the indent is determined by the values of the &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt; and &lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt; properties.</source>
          <target state="translated">缩进的大小确定的值&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;和&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;属性。&lt;/xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt; &lt;/xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt; property represents the number of times the indent of the size specified by the &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt; property is applied.</source>
          <target state="translated">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;属性表示的次数的指定的大小的缩进量&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;应用属性。&lt;/xref:System.Diagnostics.TraceListener.IndentSize%2A&gt; &lt;/xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;xref:System.Diagnostics.DefaultTraceListener&gt; and &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; classes.</source>
          <target state="translated">调用此方法&lt;xref:System.Diagnostics.DefaultTraceListener&gt;和&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;类。&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt; &lt;/xref:System.Diagnostics.DefaultTraceListener&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, followed by a line terminator.</source>
          <target state="translated">对象的值写入&lt;xref:System.Object.ToString*&gt;到侦听器的方法创建实现时<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类后, 跟行结束符。&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">您可能会实现的典型的行终止符是回车符后跟换行符 (\r)。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;你想要编写其完全限定的类名。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</source>
          <target state="translated">在派生类中重写，将消息写入到该侦听器将创建在派生类中后, 跟行结束符。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">您可能会实现的典型的行终止符是回车符后跟换行符 (\r)。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, followed by a line terminator.</source>
          <target state="translated">将类别名称和对象的值写入&lt;xref:System.Object.ToString*&gt;到侦听器的方法创建实现时<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类后, 跟行结束符。&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">您可能会实现的典型的行终止符是回车符后跟换行符 (\r)。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;你想要编写其完全限定的类名。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">用于组织输出的类别名称。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Writes a category name and a message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, followed by a line terminator.</source>
          <target state="translated">实现时创建的侦听器写入类别名称和消息<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类后, 跟行终止符。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">您可能会实现的典型的行终止符是回车符后跟换行符 (\r)。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">用于组织输出的类别名称。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>