<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">046eb379d90f299cdbdea0ef622a435d6fb90b71</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Packaging.EncryptedPackageEnvelope.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34ffd6f5bd0d38baef97ecc01ff0a9ec98d23a39</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88f6b14549c388a387379a50f0d05f01b76dcc37</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an OLE compound file that contains an encrypted package.</source>
          <target state="translated">表示一个 OLE 复合文件包含加密的包。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>EncryptedPackageEnvelope has no public constructors.</source>
          <target state="translated">EncryptedPackageEnvelope 具有没有公共构造函数。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An EncryptedPackageEnvelope is created by use of the static &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;, &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;, or &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt; methods.</source>
          <target state="translated">通过使用静态创建 EncryptedPackageEnvelope &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;， &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;，或&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;方法。&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt; &lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt; &lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Closes the encrypted package and the OLE compound file that holds it.</source>
          <target state="translated">关闭已加密的包并将其保留的 OLE 复合文件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates and returns an <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on the specified stream.</source>
          <target state="translated">创建并返回<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>上指定的流。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">当前的用户对新的文件具有读/写访问。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The stream on which to create the file.</source>
          <target state="translated">要在其中创建该文件流。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">复合文件中嵌入发布许可证。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">一个对象，确定哪些操作允许当前用户执行加密的内容。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新创建<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph>不提供读/写访问。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates and returns an <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and gives it the specified file name.</source>
          <target state="translated">创建并返回<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>并为其提供指定的文件名。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">如果已存在具有指定名称的文件，则覆盖。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">当前的用户对该文件具有读/写访问。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The name of the OLE compound file.</source>
          <target state="translated">OLE 复合文件的名称。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">复合文件中嵌入发布许可证。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">一个对象，确定哪些操作允许当前用户执行加密的内容。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新创建<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeFileName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeFileName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Creates and returns an <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (on the specified stream) that uses the specified unencrypted package as its content.</source>
          <target state="translated">创建并返回<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> （在指定的流），使用指定未加密的包作为其内容。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">当前的用户对新的文件具有读/写访问。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The stream on which to create the file.</source>
          <target state="translated">要在其中创建该文件流。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">表示现有的未加密的包流。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">复合文件中嵌入发布许可证。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">一个对象，确定哪些操作允许当前用户执行加密的内容。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新创建<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;packageStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;packageStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeStream&lt;/code&gt;</ph>不提供读/写访问。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Creates and returns an <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that uses the specified unencrypted package as its content, and gives it the specified file name.</source>
          <target state="translated">创建并返回<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>作为其内容，使用指定未加密的包并为其提供指定的文件名。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">如果已存在具有指定名称的文件，则覆盖。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">当前的用户对该文件具有读/写访问。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The name of the OLE compound file.</source>
          <target state="translated">OLE 复合文件的名称。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">表示现有的未加密的包流。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">复合文件中嵌入发布许可证。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">一个对象，确定哪些操作允许当前用户执行加密的内容。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新创建<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeFileName&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;packageStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;envelopeFileName&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;packageStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Call Dispose when finished with a &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;.</source>
          <target state="translated">调用以&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;.&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;所完成的 Dispose</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; in an unusable state.</source>
          <target state="translated">Dispose 方法离开&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;中不可用状态。&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; was occupying.</source>
          <target state="translated">调用 Dispose 后，必须释放对所有引用&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;以便垃圾回收器才能回收的内存，&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;占用。&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; &lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 始终调用释放在发布到&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;。&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;最后一个引用之前</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; object's &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">否则，它所使用的资源之前，不会释放垃圾回收器调用&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;对象的&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用<ph id="ph1">`Dispose`</ph>与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数为 true 时，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;引用。&lt;/xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose()`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies whether the file was opened with access to read, write, or both.</source>
          <target state="translated">获取一个值，指定是否有权读取、 写入、 或两打开该文件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that was used to open the file.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用于打开文件的值。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Flush the stream for both the <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its package content.</source>
          <target state="translated">同时刷新流<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>及其包内容。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets the encrypted package inside the <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取内部的加密的包<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the envelope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.Package"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>信封中。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">获取一个值，该值指示指定的流是否为具有加密的包流的 OLE 复合文件。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The stream that is tested.</source>
          <target state="translated">测试流。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定的流是具有加密的包流; OLE 复合文件否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">获取一个值，该值指示指定的文件是否为具有加密的包流的 OLE 复合文件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The file that is tested.</source>
          <target state="translated">测试文件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定的文件是具有加密的包流; OLE 复合文件否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Open the encrypted package in the specified stream.</source>
          <target state="translated">在指定的流中打开的加密的包。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The stream must have an encrypted package.</source>
          <target state="translated">流必须具有加密的包。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The stream containing the encrypted package.</source>
          <target state="translated">包含已加密的包的流。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is opened.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>打开的。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Open the encrypted package in the specified file as read only and unshared.</source>
          <target state="translated">打开指定文件中的已加密的包，以只读和取消共享。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The file must have an encrypted package.</source>
          <target state="translated">文件必须具有加密的包。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The opened file is read only and unshared.</source>
          <target state="translated">打开的文件是只读和取消共享。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The file containing the encrypted package.</source>
          <target state="translated">包含已加密的包的文件。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is opened.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>打开的。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Open the encrypted package in the specified file as unshared and with the specified access.</source>
          <target state="translated">在指定文件中作为非共享行并使用指定的访问权限打开的加密的包。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The file must have an encrypted package.</source>
          <target state="translated">文件必须具有加密的包。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The opened file is unshared.</source>
          <target state="translated">非共享行打开的文件。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The file containing the encrypted package.</source>
          <target state="translated">包含已加密的包的文件。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The type of access.</source>
          <target state="translated">访问类型。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is opened.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>打开的。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Open the encrypted package in the specified file and gives it the specified access and sharing.</source>
          <target state="translated">打开指定文件中的已加密的包和为其提供指定的访问权限和共享。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The file must have an encrypted package.</source>
          <target state="translated">文件必须具有加密的包。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The file containing the encrypted package.</source>
          <target state="translated">包含已加密的包的文件。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The type of access.</source>
          <target state="translated">访问类型。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The type of sharing.</source>
          <target state="translated">共享的类型。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is opened.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>打开的。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets the core package properties (such as Title and Subject) of the rights managed document.</source>
          <target state="translated">获取核心包的属性 （如标题和主题） 的权限管理文档。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</source>
          <target state="translated">这些核心属性存储在标准 OLE 属性流 （\005SummaryInformation 和 \005DocumentSummaryInformation）。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The core properties are also stored in the package itself.</source>
          <target state="translated">核心属性也存储在包本身。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>It is the responsibility of the application to keep the two sets of properties synchronized.</source>
          <target state="translated">它负责要保持同步的属性的两个集的应用程序。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.PackageProperties"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the package.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.PackageProperties"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets the rights management information stored in the <bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; specifically, the <bpt id="p2">&lt;xref href="System.Security.RightsManagement.PublishLicense"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the <bpt id="p3">&lt;xref href="System.Security.RightsManagement.UseLicense"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>s stored in the OLE compound file that embodies the rights-management protected package</source>
          <target state="translated">获取存储在中的管理信息的权限<bpt id="p1">&lt;xref href="System.IO.Packaging.EncryptedPackageEnvelope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; 具体而言， <bpt id="p2">&lt;xref href="System.Security.RightsManagement.PublishLicense"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>和<bpt id="p3">&lt;xref href="System.Security.RightsManagement.UseLicense"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>s 存储在 OLE 复合文件，它包含 rights management 保护包</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Packaging.RightsManagementInformation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the package.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Packaging.RightsManagementInformation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets an object that provides access to the compound file streams outside the encrypted package.</source>
          <target state="translated">获取一个对象，提供对加密的包外部的复合文件流访问。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Packaging.StorageInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing streams in the OLE compound file that are outside the encrypted package.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Packaging.StorageInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示 OLE 复合文件之外的加密包的流。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>