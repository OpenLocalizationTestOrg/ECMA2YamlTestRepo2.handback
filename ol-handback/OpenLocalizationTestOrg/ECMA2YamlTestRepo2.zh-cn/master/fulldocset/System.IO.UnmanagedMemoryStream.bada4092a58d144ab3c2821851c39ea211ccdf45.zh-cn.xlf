<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c539823de736ff3586b35f92d9977c856169d2b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.UnmanagedMemoryStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16ee29dbf30a27fdbcc4001ce4564cbe3ae4a560</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfa56e92c483bf62f1602b1ab01e9a775cfcb34e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides access to unmanaged blocks of memory from managed code.</source>
          <target state="translated">提供从托管代码访问非托管内存块的能力。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class supports access to unmanaged memory using the existing stream-based model and does not require that the contents in the unmanaged memory be copied to the heap.</source>
          <target state="translated">此类支持对非托管内存使用现有的基于流的模型的访问，并且不需要的非托管内存中的内容复制到堆。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">1&gt; <ph id="ph1">[!IMPORTANT]</ph>&amp;1;&gt; 此类型实现&lt;xref:System.IDisposable&gt;接口。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">完成后使用类型的操作后，你应释放类型直接或间接。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">若要直接释放类型，调用其&lt;xref:System.IDisposable.Dispose%2A&gt;中的方法<ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph>块。&lt;/xref:System.IDisposable.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要间接释放类型，使用一种语言构造如<ph id="ph1">`using`</ph>（在 C# 中) 或<ph id="ph2">`Using`</ph>（在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分&lt;xref:System.IDisposable&gt;接口主题。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The user does not have the required permission.</source>
          <target state="translated">用户没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified location and memory length.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的位置和内存长度。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This constructor creates a new instance of the &lt;xref:System.IO.UnmanagedMemoryStream&gt; class, and by default sets the &lt;xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt; property to <ph id="ph1">`false`</ph> and the &lt;xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt; property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">此构造函数创建的新实例&lt;xref:System.IO.UnmanagedMemoryStream&gt;类，并且默认情况下设置&lt;xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt;属性<ph id="ph1">`false`</ph>和&lt;xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt;属性<ph id="ph2">`true`</ph>。&lt;/xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt; &lt;/xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt; &lt;/xref:System.IO.UnmanagedMemoryStream&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.UnmanagedMemoryStream.Length%2A&gt; property is set to the value of the <ph id="ph1">`length`</ph> parameter and cannot be changed.</source>
          <target state="translated">&lt;xref:System.IO.UnmanagedMemoryStream.Length%2A&gt;属性设置为的值<ph id="ph1">`length`</ph>参数并且不能更改。&lt;/xref:System.IO.UnmanagedMemoryStream.Length%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A pointer to an unmanaged memory location.</source>
          <target state="translated">指向非托管的内存位置的指针。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The length of the memory to use.</source>
          <target state="translated">若要使用的内存的长度。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The user does not have the required permission.</source>
          <target state="translated">用户没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class in a safe buffer with a specified offset and length.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有指定的偏移量和长度的安全缓冲区中的类。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The buffer to contain the unmanaged memory stream.</source>
          <target state="translated">要包含非托管的内存流的缓冲区。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The byte position in the buffer at which to start the unmanaged memory stream.</source>
          <target state="translated">中用于启动非托管的内存流缓冲区的字节位置。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The length of the unmanaged memory stream.</source>
          <target state="translated">非托管的内存流的长度。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified location, memory length, total amount of memory, and file access values.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定的位置、 内存长度、 内存的总量和文件访问值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`length`</ph> parameter defines the current amount of memory in use.</source>
          <target state="translated"><ph id="ph1">`length`</ph>参数定义中使用的当前内存量。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If reading or appending data to the stream, the <ph id="ph1">`length`</ph> value should be equal to the amount of valid data in the stream to be read from or preserved.</source>
          <target state="translated">如果读取或追加到流中，数据<ph id="ph1">`length`</ph>值应该等于从读取的流中的有效数据量或保留。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If writing to the stream, this value should be zero.</source>
          <target state="translated">写入流，则此值应为零。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`capacity`</ph> parameter indicates the amount of total memory available.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph>参数指示可用的总内存量。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This value can describe a region that is longer than the length specified, or indicate a region that can be appended to.</source>
          <target state="translated">此值可以描述的长度超过指定的长度的区域，或指示可以追加到的区域。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Any attempt to write beyond this value will fail.</source>
          <target state="translated">任何尝试写入超出此值将失败。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`access`</ph> parameter sets the &lt;xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt;, and &lt;xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt; properties.</source>
          <target state="translated"><ph id="ph1">`access`</ph>参数集&lt;xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt;，和&lt;xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt;属性。&lt;/xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt; &lt;/xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Note that specifying &lt;xref:System.IO.FileAccess&gt; does not guarantee that the stream will be writable.</source>
          <target state="translated">请注意该指定&lt;xref:System.IO.FileAccess&gt;不保证的流将是可写。&lt;/xref:System.IO.FileAccess&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The access parameters allow the implementer to create an object whose implementation can match the actual stream that is exposed.</source>
          <target state="translated">访问参数允许实施者创建其实现可以匹配实际流公开的对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A pointer to an unmanaged memory location.</source>
          <target state="translated">指向非托管的内存位置的指针。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The length of the memory to use.</source>
          <target state="translated">若要使用的内存的长度。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The total amount of memory assigned to the stream.</source>
          <target state="translated">分配给流的内存总量。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The user does not have the required permission.</source>
          <target state="translated">用户没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class in a safe buffer with a specified offset, length, and file access.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>在指定的偏移量、 长度，具有的安全缓冲区中类和文件访问。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The buffer to contain the unmanaged memory stream.</source>
          <target state="translated">要包含非托管的内存流的缓冲区。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The byte position in the buffer at which to start the unmanaged memory stream.</source>
          <target state="translated">中用于启动非托管的内存流缓冲区的字节位置。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The length of the unmanaged memory stream.</source>
          <target state="translated">非托管的内存流的长度。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The mode of file access to the unmanaged memory stream.</source>
          <target state="translated">文件访问权限的非托管的内存流的模式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a stream supports reading.</source>
          <target state="translated">获取一个值，该值指示流是否支持读取。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This property indicates whether the current stream object supports reading.</source>
          <target state="translated">此属性指示当前的流对象是否支持读取。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object was created by a constructor with an <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p2">&lt;/code&gt;</ept> parameter that did not include reading the stream and if the stream is closed; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果对象由构造函数创建<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p2">&lt;/code&gt;</ept>不包括读取流的参数和器关闭流; 否则为如果<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a stream supports seeking.</source>
          <target state="translated">获取一个值，该值指示流是否支持查找。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This property indicates whether the current stream object supports seeking.</source>
          <target state="translated">此属性指示当前的流对象是否支持查找。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream is closed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果流已关闭;否则为<bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a stream supports writing.</source>
          <target state="translated">获取一个值，该值指示流是否支持写入。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This property indicates whether the current stream object supports writing.</source>
          <target state="translated">此属性指示当前的流对象是否支持写入。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object was created by a constructor with an <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p2">&lt;/code&gt;</ept> parameter value that supports writing or was created by a constructor that had no parameters, or if the stream is closed; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果对象由构造函数创建<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p2">&lt;/code&gt;</ept>支持写入，或者由不带参数，构造函数的参数值或如果器关闭流; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the stream length (size) or the total amount of memory assigned to a stream (capacity).</source>
          <target state="translated">获取流长度 （大小） 或分配给流 （容量） 的内存总量。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This property returns the <ph id="ph1">`capacity`</ph> value provided to the constructor.</source>
          <target state="translated">此属性返回<ph id="ph1">`capacity`</ph>为构造函数提供的值。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If no <ph id="ph1">`capacity`</ph> value was specified when the stream was initialized, this property returns the stream length.</source>
          <target state="translated">如果没有<ph id="ph1">`capacity`</ph>初始化流时指定的值，则此属性返回的流长度。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The size or capacity of the stream.</source>
          <target state="translated">大小或容量的流。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.Component.Dispose%2A&gt; invokes the protected Dispose method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;调用与受保护的 Dispose 方法<ph id="ph1">`disposing`</ph>参数设置为<ph id="ph2">`true`</ph>。&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes Dispose with <ph id="ph1">`disposing`</ph> set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用与 Dispose<ph id="ph1">`disposing`</ph>设置为<ph id="ph2">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.IO.UnmanagedMemoryStream&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.IO.UnmanagedMemoryStream&gt;引用。&lt;/xref:System.IO.UnmanagedMemoryStream&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method of each referenced object.</source>
          <target state="translated">此方法调用&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;每个引用对象的方法。&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.IO.Stream.Flush*&gt; method so that no action is performed.</source>
          <target state="translated">重写&lt;xref:System.IO.Stream.Flush*&gt;方法，以便不执行任何操作。&lt;/xref:System.IO.Stream.Flush*&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This method performs no action for this class but is included as part of the &lt;xref:System.IO.Stream&gt; base class.</source>
          <target state="translated">此方法的此类不执行任何操作，但包含&lt;xref:System.IO.Stream&gt;基本类。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Since any data is written to RAM, this method is redundant.</source>
          <target state="translated">由于任何数据写入 RAM，此方法是冗余的。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.FlushAsync%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method so that the operation is cancelled if specified, but no other action is performed.</source>
          <target state="translated">重写<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.FlushAsync%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>方法，以便该操作已取消，如果指定，但不执行任何其他操作。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Available starting in <ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></source>
          <target state="translated">可以开始于<ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If the operation isn’t cancelled, the &lt;xref:System.IO.UnmanagedMemoryStream&gt; calls the &lt;xref:System.IO.UnmanagedMemoryStream.Flush%2A&gt; method, which means that no action performed.</source>
          <target state="translated">如果未取消该操作，&lt;xref:System.IO.UnmanagedMemoryStream&gt;调用&lt;xref:System.IO.UnmanagedMemoryStream.Flush%2A&gt;方法，这意味着不执行任何操作。&lt;/xref:System.IO.UnmanagedMemoryStream.Flush%2A&gt; &lt;/xref:System.IO.UnmanagedMemoryStream&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要监视取消请求的标记。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default value is &lt;xref:System.Threading.CancellationToken.None*&gt;.</source>
          <target state="translated">默认值为&lt;xref:System.Threading.CancellationToken.None*&gt;。&lt;/xref:System.Threading.CancellationToken.None*&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">表示异步刷新操作的任务。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using a pointer to an unmanaged memory location.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指向非托管的内存位置的类。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the &lt;xref:System.IO.UnmanagedMemoryStream.%23ctor%2A&gt; constructor.</source>
          <target state="translated">此方法相当于&lt;xref:System.IO.UnmanagedMemoryStream.%23ctor%2A&gt;构造函数。&lt;/xref:System.IO.UnmanagedMemoryStream.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It supports methods that need to initialize the pointer before setting stream variables and, therefore, cannot call the parameterized constructor.</source>
          <target state="translated">它支持需要初始化之前设置流变量的指针，因此，不能调用参数化构造函数的方法。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Such methods should use the default constructor, &lt;xref:System.IO.UnmanagedMemoryStream.%23ctor&gt;, initialize the pointer, and then invoke the Initialize method.</source>
          <target state="translated">此类方法应使用默认构造函数，&lt;xref:System.IO.UnmanagedMemoryStream.%23ctor&gt;初始化指针，，然后调用初始化方法。&lt;/xref:System.IO.UnmanagedMemoryStream.%23ctor&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A pointer to an unmanaged memory location.</source>
          <target state="translated">指向非托管的内存位置的指针。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The length of the memory to use.</source>
          <target state="translated">若要使用的内存的长度。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The total amount of memory assigned to the stream.</source>
          <target state="translated">分配给流的内存总量。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The user does not have the required permission.</source>
          <target state="translated">用户没有所要求的权限。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class in a safe buffer with a specified offset, length, and file access.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>在指定的偏移量、 长度，具有的安全缓冲区中类和文件访问。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The buffer to contain the unmanaged memory stream.</source>
          <target state="translated">要包含非托管的内存流的缓冲区。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The byte position in the buffer at which to start the unmanaged memory stream.</source>
          <target state="translated">中用于启动非托管的内存流缓冲区的字节位置。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The length of the unmanaged memory stream.</source>
          <target state="translated">非托管的内存流的长度。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The mode of file access to the unmanaged memory stream.</source>
          <target state="translated">文件访问权限的非托管的内存流的模式。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets the length of the data in a stream.</source>
          <target state="translated">在流中获取数据的长度。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If unchanged since the stream was initialized, this property returns the length value provided to the constructor.</source>
          <target state="translated">如果流已初始化，因为保持不变，此属性将返回提供给构造函数的长度值。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If changes to the stream have occurred, this property reflects any changes to the length of the data.</source>
          <target state="translated">如果发生了更改写入流，此属性将反映对数据的长度的任何更改。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The length of the data in the stream.</source>
          <target state="translated">流中的数据的长度。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets the current position in a stream.</source>
          <target state="translated">获取或设置流中的当前位置。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When a stream is initialized, this property is set to zero.</source>
          <target state="translated">初始化流时，此属性设置为零。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Although you can set the position of the stream beyond the stream's capacity, you will not be able to access that area using the &lt;xref:System.IO.UnmanagedMemoryStream.Read%2A&gt; and &lt;xref:System.IO.UnmanagedMemoryStream.Write%2A&gt; methods.</source>
          <target state="translated">虽然你可以设置流的容量超出流的当前位置，你将无法访问该区域使用&lt;xref:System.IO.UnmanagedMemoryStream.Read%2A&gt;和&lt;xref:System.IO.UnmanagedMemoryStream.Write%2A&gt;方法。&lt;/xref:System.IO.UnmanagedMemoryStream.Write%2A&gt; &lt;/xref:System.IO.UnmanagedMemoryStream.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.UnmanagedMemoryStream.Read%2A&gt; will return 0 and &lt;xref:System.IO.UnmanagedMemoryStream.Write%2A&gt; will throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.IO.UnmanagedMemoryStream.Read%2A&gt;将返回 0，&lt;xref:System.IO.UnmanagedMemoryStream.Write%2A&gt;将引发一种&lt;xref:System.NotSupportedException&gt;。&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.UnmanagedMemoryStream.Write%2A&gt;&lt;/xref:System.IO.UnmanagedMemoryStream.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This support is primarily for design and code compatibility with basic stream operations.</source>
          <target state="translated">此支持是主要用于与基本的流操作的设计和代码兼容性。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The current position in the stream.</source>
          <target state="translated">流中当前位置。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The position is set to a value that is less than zero, or the position is larger than &lt;xref:System.Int32.MaxValue&gt; or results in overflow when added to the current pointer.</source>
          <target state="translated">该位置设置为一个值，小于零，或位置大于&lt;xref:System.Int32.MaxValue&gt;或导致溢出时添加到当前的指针。&lt;/xref:System.Int32.MaxValue&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets or sets a byte pointer to a stream based on the current position in the stream.</source>
          <target state="translated">获取或设置一个字节的指针的指向流基于流中的当前位置。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To return a pointer to the entire stream, set the &lt;xref:System.IO.UnmanagedMemoryStream.Position%2A&gt; property to zero, and then call this property.</source>
          <target state="translated">若要将指针返回到整个流，将设置&lt;xref:System.IO.UnmanagedMemoryStream.Position%2A&gt;属性为零，并调用此属性，然后。&lt;/xref:System.IO.UnmanagedMemoryStream.Position%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A byte pointer.</source>
          <target state="translated">一个字节的指针。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The current position is larger than the capacity of the stream.</source>
          <target state="translated">当前的位置大于流的容量。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The position is being set is not a valid position in the current stream.</source>
          <target state="translated">位置正在设置不是当前流中的有效位置。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The pointer is being set to a lower value than the starting position of the stream.</source>
          <target state="translated">将指针设置为低于值的流的起始位置。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The stream was initialized for use with a &lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;.</source>
          <target state="translated">流已初始化，以用于一种&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;。&lt;/xref:System.Runtime.InteropServices.SafeBuffer&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The PositionPointer property is valid only for streams that are initialized with a &lt;xref:System.Byte&gt; pointer.</source>
          <target state="translated">PositionPointer 属性是仅对使用初始化的流有效&lt;xref:System.Byte&gt;指针。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Reads the specified number of bytes into the specified array.</source>
          <target state="translated">指定的数目的字节读入指定的数组。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the byte in the <ph id="ph2">`array`</ph> parameter (the buffer index) at which to begin reading, and the <ph id="ph3">`count`</ph> parameter gives the maximum number of bytes to be read from this stream.</source>
          <target state="translated"><ph id="ph1">`offset`</ph>参数指定了中的字节的偏移量<ph id="ph2">`array`</ph>从此处开始读取，参数 （缓冲区索引） 和<ph id="ph3">`count`</ph>参数指定了最大要从此流中读取的字节数。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The returned value is the actual number of bytes read, or zero if the end of the stream is reached.</source>
          <target state="translated">如果已到达流结尾，则返回的值是实际数字节，则为零。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the read operation is successful, the current position of the stream is advanced by the number of bytes read.</source>
          <target state="translated">如果读取的操作成功，是通过读取的字节数高级流的当前位置。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If an exception occurs, the current position of the stream is unchanged.</source>
          <target state="translated">如果发生异常，则流的当前位置不变。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The Read method returns zero only after reaching the end of the stream.</source>
          <target state="translated">Read 方法将返回仅在到达流的末尾后的零。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Otherwise, Read always reads at least one byte from the stream before returning.</source>
          <target state="translated">否则，读取始终至少&amp;1; 个字节从流中读取在返回之前。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If no data is available from the stream upon a call to Read, the method will block until at least one byte of data can be returned.</source>
          <target state="translated">如果没有数据时调用读取流中可用，该方法将可以返回至少一个字节的数据一直阻止。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">实现可以自由地返回少于所请求的字节，即使尚未达到流结尾。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the specified byte array with the values between <ph id="ph1">`offset`</ph> and (<ph id="ph2">`offset`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph> - 1) replaced by the bytes read from the current source.</source>
          <target state="translated">此方法返回时，包含之间的值的指定的字节数组<ph id="ph1">`offset`</ph>和 (<ph id="ph2">`offset`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`count`</ph> -1) 由从当前源中读取的字节替换。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数传递时未经初始化。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin storing the data read from the current stream.</source>
          <target state="translated">中的从零开始的字节偏移量<ph id="ph1">`buffer`</ph>从此处开始存储读取的数据从当前流。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read from the current stream.</source>
          <target state="translated">最大要从当前流中读取的字节数。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">读取到缓冲区的字节总数。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</source>
          <target state="translated">这可能小于请求的字节数如果很多字节当前不可用，或为零 (0) 如果已到达流结尾。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is set to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is set to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The length of the buffer array minus the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">减缓冲区数组的长度<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>参数是小于<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>参数。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Asynchronously reads the specified number of bytes into the specified array.</source>
          <target state="translated">以异步方式将指定的数目的字节读入指定的数组。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Available starting in <ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></source>
          <target state="translated">可以开始于<ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If an exception occurs during the read operation, it will be set as the &lt;xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt; of the property of the returned task.</source>
          <target state="translated">如果读取操作过程中发生异常，它将设置为&lt;xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt;返回的任务的属性。&lt;/xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The buffer to write the data into.</source>
          <target state="translated">要写入到数据的缓冲区。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin writing data from the stream.</source>
          <target state="translated">中的字节偏移量<ph id="ph1">`buffer`</ph>从此处开始写入从流读取的数据。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">最大读取的字节数。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要监视取消请求的标记。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The default value is &lt;xref:System.Threading.CancellationToken.None*&gt;.</source>
          <target state="translated">默认值为&lt;xref:System.Threading.CancellationToken.None*&gt;。&lt;/xref:System.Threading.CancellationToken.None*&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">一个任务，它表示异步读取操作。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">TResult</ph> <ept id="p1">&lt;/code&gt;</ept>参数包含读入缓冲区的字节总数。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">结果值可能小于请求的字节数的如果当前可用字节数小于所请求的数目，或如果已到达流结尾，它可以是 0 （零）。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Reads a byte from a stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</source>
          <target state="translated">从流中读取一个字节和流中的位置提升一个字节，或如果已到达流结尾返回-1。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Use this method to return integer values from the stream.</source>
          <target state="translated">使用此方法从流中返回整数值。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The unsigned byte cast to an &lt;xref:System.Int32&gt; object, or -1 if at the end of the stream.</source>
          <target state="translated">无符号的字节的强制转换为&lt;xref:System.Int32&gt;对象或如果到达流结尾-1。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Sets the current position of the current stream to the given value.</source>
          <target state="translated">将当前流的当前位置设置为给定的值。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For more information about seeking, see &lt;xref:System.IO.FileStream.Seek%2A&gt;.</source>
          <target state="translated">有关查找的详细信息，请参阅&lt;xref:System.IO.FileStream.Seek%2A&gt;。&lt;/xref:System.IO.FileStream.Seek%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The point relative to <ph id="ph1">`origin`</ph> to begin seeking from.</source>
          <target state="translated">相对于点<ph id="ph1">`origin`</ph>从此处开始查找。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Specifies the beginning, the end, or the current position as a reference point for <ph id="ph1">`origin`</ph>, using a value of type &lt;xref:System.IO.SeekOrigin&gt;.</source>
          <target state="translated">将开始、 结束时或当前位置指定为的参考点<ph id="ph1">`origin`</ph>，使用类型&lt;xref:System.IO.SeekOrigin&gt;.&lt;/xref:System.IO.SeekOrigin&gt;的值</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The new position in the stream.</source>
          <target state="translated">流中的新位置。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>An attempt was made to seek before the beginning of the stream.</source>
          <target state="translated">尝试在流开头之前寻找。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> value is larger than the maximum size of the stream.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>值大于流的最大大小。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;loc&lt;/code&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;loc&lt;/code&gt;</ph>是无效的。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Sets the length of a stream to a specified value.</source>
          <target state="translated">将流的长度设置为指定的值。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>If the given value is less than the current length of the stream, the stream is truncated.</source>
          <target state="translated">如果给定的值小于当前流的长度，则流将被截断。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If the given value is larger than the current length of the stream, the stream is expanded.</source>
          <target state="translated">如果给定的值大于当前流的长度，则流被扩展。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If the stream is expanded, the contents of the stream between the old and the new lengths are undefined.</source>
          <target state="translated">如果流已展开，旧和新的长度之间流的内容是不确定的。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A stream must support both writing and seeking for SetLength to work.</source>
          <target state="translated">写入和查找有关 SetLength 工作，必须支持流。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The length of the stream.</source>
          <target state="translated">流的长度。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>An I/O error has occurred.</source>
          <target state="translated">发生了 I/O 错误。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Writes a block of bytes to the current stream using data from a buffer.</source>
          <target state="translated">将字节块写入当前流使用缓冲区中的数据。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Writing occurs at the current position in the stream.</source>
          <target state="translated">在流中当前位置发生写操作。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The byte array from which to copy bytes to the current stream.</source>
          <target state="translated">中要将字节复制到当前流的字节数组。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The offset in the buffer at which to begin copying bytes to the current stream.</source>
          <target state="translated">从此处开始将字节复制到当前流的缓冲区中的偏移量。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The number of bytes to write to the current stream.</source>
          <target state="translated">要写入当前流的字节数。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>An I/O error occurs.</source>
          <target state="translated">发生 I/O 错误。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>One of the specified parameters is less than zero.</source>
          <target state="translated">一个指定的参数小于零。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter minus the length of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">buffer</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>参数的长度减<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">buffer</ph> <ept id="p2">&lt;/code&gt;</ept>参数是小于<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">count</ph> <ept id="p3">&lt;/code&gt;</ept>参数。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">以异步方式将一个字节序列写入当前流，使此流中的当前位置提升写入字节数，并监视取消请求。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Available starting in <ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></source>
          <target state="translated">可以开始于<ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If an exception occurs during the write operation, it will be set as the &lt;xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt; of the property of the returned task.</source>
          <target state="translated">如果在写入操作期间发生异常，它将设置为&lt;xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt;返回的任务的属性。&lt;/xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The buffer to write data from.</source>
          <target state="translated">要写入数据的缓冲区。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> from which to begin copying bytes to the stream.</source>
          <target state="translated">中的从零开始的字节偏移量<ph id="ph1">`buffer`</ph>从此处开始将字节复制到流。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">最大写入的字节数。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要监视取消请求的标记。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The default value is &lt;xref:System.Threading.CancellationToken.None*&gt;.</source>
          <target state="translated">默认值为&lt;xref:System.Threading.CancellationToken.None*&gt;。&lt;/xref:System.Threading.CancellationToken.None*&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示异步写入操作的任务。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Writes a byte to the current position in the file stream.</source>
          <target state="translated">将一个字节写入文件流中的当前位置。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A byte value written to the stream.</source>
          <target state="translated">一个字节值写入到流。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The supplied <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> causes the stream exceed its maximum capacity.</source>
          <target state="translated">提供<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>导致流超过其最大容量。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>