<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b835a40b50c06db9b8c19c00f203ad3f06c203d7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0bd6ac1f59a4654f28e847cfdd353308967ea7f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ebdf73d1da3aae6c33327f47fbff41785502137</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the enumerator for <bpt id="p1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in a <bpt id="p2">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">表示的枚举数<bpt id="p1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>中的对象<bpt id="p2">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Enumerators allow only reading the data in the collection.</source>
          <target state="translated">枚举器只允许读取集合中的数据。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; method also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;方法还会枚举器放回此位置。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>At this position, calling the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; property throws an exception.</source>
          <target state="translated">在此位置，调用&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;属性引发异常。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Therefore, you must call the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; method to advance the enumerator to the first element of the collection before reading the value of the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; property.</source>
          <target state="translated">因此，必须调用&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;方法将枚举数前移到集合，然后再读取的值的第一个元素&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;属性。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; or &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;返回相同的对象之前&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;或&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;设置&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;到下一个元素。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">该枚举数传递到集合的末尾之后，将放在集合中，最后一个元素后面且调用&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">如果最后一次调用到&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>，则调用&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;引发异常。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To reset &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; to the first element of the collection, call &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; followed by a call to &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要重置&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;到集合中，第一个元素调用&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;跟&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;调用&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; or &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果对集合进行更改，如添加、 修改或删除元素，枚举数将失效下, 一个调用&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;或&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;引发&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;到</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the collection is modified between calling &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; and &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; returns the element to which it is currently set, even if the enumerator is already invalidated.</source>
          <target state="translated">如果调用之间修改集合&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;和&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;，&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;返回到该属性当前设置的元素即使枚举数已经无效。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合; 独占访问权因此，枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the current entry in the collection.</source>
          <target state="translated">获取集合中的当前条目。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the enumerator is created, it does not point to an object, so the Current property is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">创建枚举器时，它不指向对象，以便当前的属性无效，将引发异常，如果访问它。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You must first call the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; method to position the cursor at the first object in the collection.</source>
          <target state="translated">必须先调用&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;方法，将光标定位在集合中的第一个对象。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Getting the Current property multiple times with no intervening calls to &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; will return the same &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt; object each time.</source>
          <target state="translated">获取多次通过没有干预调用的当前属性&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;将返回相同&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;对象每次。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt; &lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object in the collection.</source>
          <target state="translated">当前<bpt id="p1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>集合中的对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The Current property is accessed before first calling the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext<bpt id="p1">*</bpt>&gt; method. The cursor is located before the first object in the collection.       -or-       The Current property is accessed after a call to the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext<ept id="p1">*</ept>&gt; method returns <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, which indicates that the cursor is located after the last object in the collection.</source>
          <target state="translated">在第一个调用之前访问当前属性&lt;&gt; <bpt id="p1">*</bpt>1&gt; 方法。光标位于集合中的第一个对象之前。      -或-在调用后访问当前的属性&lt;&gt; <ept id="p1">*</ept>1&gt; 方法返回<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，指示在集合中的最后一个对象后光标是否位于。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Moves to the next element in the collection.</source>
          <target state="translated">移动到集合中的下一个元素。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The MoveNext method returns <ph id="ph1">`false`</ph> immediately if there are no objects in the collection.</source>
          <target state="translated">MoveNext 方法返回<ph id="ph1">`false`</ph>立即如果集合中没有对象。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>MoveNext returns <ph id="ph1">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated">MoveNext 返回<ph id="ph1">`true`</ph>直到它已达到集合的末尾。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It then returns <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">然后它返回<ph id="ph1">`false`</ph>每个连续调用。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>However, once MoveNext has returned <ph id="ph1">`false`</ph>, accessing the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; property throws an exception.</source>
          <target state="translated">但是，一次 MoveNext 返回<ph id="ph1">`false`</ph>，则访问&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;属性引发异常。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Upon creation, an enumerator is positioned before the first &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt; object in the collection, and the first call to MoveNext positions the enumerator to the first object in the collection.</source>
          <target state="translated">创建后，枚举数定位在第一个之前&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;集合和 MoveNext 首次调用中的对象集合中定位的第一个对象的枚举。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果枚举数已成功地推进到下一个元素;，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果枚举数传递到集合的末尾。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Resets the enumerator to the beginning of the collection.</source>
          <target state="translated">将枚举数重置到集合的开头。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">一个枚举器会只进方向移动。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Use this method to return to the beginning of the collection.</source>
          <target state="translated">使用此方法以返回到集合的开头。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The Reset method positions the cursor at the first object in the collection.</source>
          <target state="translated">重置方法将光标定位在集合中的第一个对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>After calling Reset, you do not need to call &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt; to move the cursor forward to the first object.</source>
          <target state="translated">在调用之后重置，你不需要调用&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;将光标向前移动到的第一个对象。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the current object in the collection.</source>
          <target state="translated">获取集合中的当前对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Do not call this method; use the &lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt; property instead.</source>
          <target state="translated">不调用此方法。使用&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;属性改为。&lt;/xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The current object in the collection.</source>
          <target state="translated">集合中的当前对象。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>