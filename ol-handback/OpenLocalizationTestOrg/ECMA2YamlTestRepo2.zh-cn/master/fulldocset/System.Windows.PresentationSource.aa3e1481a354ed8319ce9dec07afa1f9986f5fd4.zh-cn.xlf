<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74cb8ecc9e88b99a6f6547ece54a482a0fc03456</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.PresentationSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9d6f75ae768e40f2d3034a6cdd1675bd98d3237</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cd9caf8a80d2810b16dbb747d9443ef39c11c1e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</source>
          <target state="translated">提供的另一种技术内容呈现作为互操作方案的一部分的类的抽象基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</source>
          <target state="translated">此外，此类提供用于处理与这些源，以及的基本可视层表示体系结构的静态方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides initialization for base class values when called by the constructor of a derived class.</source>
          <target state="translated">提供对基类值在被派生类的构造函数调用时初始化。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class instance to the list of known presentation sources.</source>
          <target state="translated">将添加<bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>派生类的实例到列表的已知的演示文稿源。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This method should be called by derived classes to indicate that they need to be tracked.</source>
          <target state="translated">由派生类，以指示它们需要进行跟踪，应调用此方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event to the provided element.</source>
          <target state="translated">添加的处理程序<bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到提供的元素的事件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Despite what the syntax block for this event states, there is no legitimate <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> attached property usage.</source>
          <target state="translated">尽管此事件的语法块的状态，都不存在合法<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>附加属性的用法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You should not attempt to add handlers in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, and handlers in code should only be placed on objects that serve as hosts for presentation (&lt;xref:System.Windows.PresentationSource&gt; ) content.</source>
          <target state="translated">不应尝试添加处理程序中的<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>，并在代码中的处理程序应仅将其置于用作演示文稿的主机的对象 (&lt;xref:System.Windows.PresentationSource&gt; ) 内容。&lt;/xref:System.Windows.PresentationSource&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</source>
          <target state="translated">此类处理程序仅应在对象初始化期间附加，应显式删除中的 Dispose 方法或等效对象清理。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">即使这是路由的事件，没有在此事件上放置了不同于常规的路由的事件的行为，由于自己考虑处理此事件的一个典型应用场景中的元素的相对较小数目的特殊限制。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   You cannot use the &lt;xref:System.Windows.UIElement&gt; or &lt;xref:System.Windows.ContentElement&gt; &lt;xref:System.Windows.UIElement.AddHandler%2A&gt; methods to add handlers.</source>
          <target state="translated">-你无法使用&lt;xref:System.Windows.UIElement&gt;或&lt;xref:System.Windows.ContentElement&gt;&lt;xref:System.Windows.UIElement.AddHandler%2A&gt;添加处理程序的方法。&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt; &lt;/xref:System.Windows.ContentElement&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You must use AddSourceChangedHandler.</source>
          <target state="translated">你必须使用 AddSourceChangedHandler。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> and <ph id="ph3">`-=`</ph> event handler syntaxes, and related language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated">- <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph>和<ph id="ph3">`-=`</ph>事件处理程序语法以及相关的语言特定的处理程序语法，不支持，因为事件本身未公开为公共。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Only the &lt;xref:System.Windows.PresentationSource&gt; utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">仅&lt;xref:System.Windows.PresentationSource&gt;实用工具方法，用于添加和移除处理，直接支持。&lt;/xref:System.Windows.PresentationSource&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   Class handlers are not allowed.</source>
          <target state="translated">的不允许类处理程序。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Specifically, you cannot call &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt; against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</source>
          <target state="translated">具体而言，不能调用&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;类构造函数中的此事件针对因为虽然为 SourceChanged 存在标识符字段，但该标识符不是公共。&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-   All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</source>
          <target state="translated">的即使一个处理程序尝试将参数标记为已处理所有已注册处理程序将收到 SourceChanged 事件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The element to add the handler to.</source>
          <target state="translated">要添加的处理程序的元素。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The hander implementation to add.</source>
          <target state="translated">要添加的处理程序实现。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Sets the list of listeners for the <bpt id="p1">&lt;xref href="System.Windows.PresentationSource.ContentRendered"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">设置的侦听器的列表<bpt id="p1">&lt;xref href="System.Windows.PresentationSource.ContentRendered"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the visual target for the visuals being presented in the source.</source>
          <target state="translated">获取要在源中显示的视觉对象的可视化目标。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The return of this property relies on an implementation of &lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;.</source>
          <target state="translated">此属性返回依赖于&lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;.&lt;/xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;实现</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A visual target (instance of a <bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class).</source>
          <target state="translated">Visual 目标 (实例<bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>派生类)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Occurs when content is rendered and ready for user interaction.</source>
          <target state="translated">内容已呈现并可供用户交互时发生。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a list of sources.</source>
          <target state="translated">返回的源的列表。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with &lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;.</source>
          <target state="translated">返回的列表支持枚举器的只读的线程安全副本的源的列表添加&lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;。&lt;/xref:System.Windows.PresentationSource.AddSource%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The enumerator skips any dead weak references in the list.</source>
          <target state="translated">枚举数将跳过列表中的任何死弱引用。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A list of weak references.</source>
          <target state="translated">弱引用列表。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns the source in which a provided <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is presented.</source>
          <target state="translated">返回在其中的源提供<bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>显示。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to find the source for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要查找的源。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in which the dependency object is being presented.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在其中提供的依赖对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns the source in which a provided <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is presented.</source>
          <target state="translated">返回在其中的源提供<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>显示。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to find the source for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要查找的源。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in which the visual is being presented, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">visual</ph><ept id="p3">&lt;/code&gt;</ept> is disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中视觉对象已正在提供，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">visual</ph> <ept id="p3">&lt;/code&gt;</ept>已释放。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;visual&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;visual&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns a visual target for the given source.</source>
          <target state="translated">当在派生类中重写，则返回给定的源的可视目标。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is target for rendering the visual.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，它是用于呈现视觉对象的目标。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value that declares whether the object is disposed.</source>
          <target state="translated">当在派生类中重写，获取一个值，声明是否释放此对象。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object is disposed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果释放该对象;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes a <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class instance from the list of known presentation sources.</source>
          <target state="translated">删除<bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>从已知的演示文稿源的列表派生类实例。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event from the provided element.</source>
          <target state="translated">删除的处理程序<bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件从提供的元素。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">即使这是路由的事件，没有在此事件上放置了不同于常规的路由的事件的行为，由于自己考虑处理此事件的一个典型应用场景中的元素的相对较小数目的特殊限制。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-   You cannot use the &lt;xref:System.Windows.UIElement&gt; or &lt;xref:System.Windows.ContentElement&gt; &lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt; methods to remove handlers.</source>
          <target state="translated">-你无法使用&lt;xref:System.Windows.UIElement&gt;或&lt;xref:System.Windows.ContentElement&gt;&lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt;方法来移除处理程序。&lt;/xref:System.Windows.UIElement.RemoveHandler%2A&gt; &lt;/xref:System.Windows.ContentElement&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You must use RemoveSourceChangedHandler.</source>
          <target state="translated">你必须使用 RemoveSourceChangedHandler。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> and <ph id="ph3">`-=`</ph> event handler syntaxes, and other language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated">- <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph>和<ph id="ph3">`-=`</ph>事件处理程序语法和其他语言特定的处理程序语法，不支持，因为事件本身未公开为公共。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Only the &lt;xref:System.Windows.PresentationSource&gt; utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">仅&lt;xref:System.Windows.PresentationSource&gt;实用工具方法，用于添加和移除处理，直接支持。&lt;/xref:System.Windows.PresentationSource&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The element to remove the handler from.</source>
          <target state="translated">要移除处理程序的元素。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The handler implementation to remove.</source>
          <target state="translated">要删除的处理程序实现。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Provides notification that the root <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has changed.</source>
          <target state="translated">提供通知，根<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>已更改。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Derived classes should call this method to indicate that their root &lt;xref:System.Windows.Media.Visual&gt; has changed.</source>
          <target state="translated">派生的类应调用此方法，则指示其根&lt;xref:System.Windows.Media.Visual&gt;已更改。&lt;/xref:System.Windows.Media.Visual&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are &lt;xref:System.Windows.FrameworkElement&gt; derived classes.</source>
          <target state="translated">调用此方法会导致两个要对指定的根视觉对象，引发的对象生存期事件，当且仅当这些根视觉对象是&lt;xref:System.Windows.FrameworkElement&gt;派生类。&lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-   The old root visual will raise the &lt;xref:System.Windows.FrameworkElement.Unloaded&gt; event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">-旧根视觉效果将引发&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;事件，并将处理其元素树的下跌，广播到每个子元素的此事件。&lt;/xref:System.Windows.FrameworkElement.Unloaded&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-   The new root visual will raise the &lt;xref:System.Windows.FrameworkElement.Loaded&gt; event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">-新的根视觉效果将引发&lt;xref:System.Windows.FrameworkElement.Loaded&gt;事件，并将处理其元素树的下跌，广播到每个子元素的此事件。&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The old root <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">旧的根<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The new root <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新根<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the root visual being presented in the source.</source>
          <target state="translated">当在派生类中重写，获取或设置的根 visual 要呈现在源中。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The root visual.</source>
          <target state="translated">根视觉效果。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>