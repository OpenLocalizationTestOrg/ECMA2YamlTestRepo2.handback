<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e12b67e3363bc166f85cfceac6136b54a050a732</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Input.KeyBinding.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d61bb74c8a7d053f9a80cd158e2a2f047323f56b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">274aa9ef36f74383e012c9a0e35d9a2d33eae109</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Binds a <bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a <bpt id="p2">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> (or another  &lt;xref:System.Windows.Input.ICommand&gt; implementation).</source>
          <target state="translated">将绑定<bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到<bpt id="p2">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> (或其他&lt;xref:System.Windows.Input.ICommand&gt;实现)。&lt;/xref:System.Windows.Input.ICommand&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A KeyBinding associates a &lt;xref:System.Windows.Input.KeyGesture&gt; with a &lt;xref:System.Windows.Input.ICommand&gt;, such as a &lt;xref:System.Windows.Input.RoutedCommand&gt;.</source>
          <target state="translated">键绑定将相关联&lt;xref:System.Windows.Input.KeyGesture&gt;与&lt;xref:System.Windows.Input.ICommand&gt;，如一种&lt;xref:System.Windows.Input.RoutedCommand&gt;。&lt;/xref:System.Windows.Input.RoutedCommand&gt; &lt;/xref:System.Windows.Input.ICommand&gt; &lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Input.RoutedCommand&gt; is the primary implementation of the &lt;xref:System.Windows.Input.ICommand&gt; interface for the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> commanding system .</source>
          <target state="translated">&lt;xref:System.Windows.Input.RoutedCommand&gt;是的主实现&lt;xref:System.Windows.Input.ICommand&gt;接口<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>命令系统中。&lt;/xref:System.Windows.Input.ICommand&gt;&lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In general, when the &lt;xref:System.Windows.Input.KeyGesture&gt; is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the &lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt; value.</source>
          <target state="translated">通常，当&lt;xref:System.Windows.Input.KeyGesture&gt;执行调用此命令，尽管此命令的行为会进一步影响命令特定的因素如&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;值。&lt;/xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt; &lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information on commanding, see the <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关命令的详细信息，请参阅<bpt id="p1">[</bpt>命令概述<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>With the exception of the function keys and the numeric keypad keys, a valid &lt;xref:System.Windows.Input.KeyGesture&gt; must contain exactly one &lt;xref:System.Windows.Input.Key&gt; and one or more &lt;xref:System.Windows.Input.ModifierKeys&gt;.</source>
          <target state="translated">除了功能键和一个有效的数字键盘键&lt;xref:System.Windows.Input.KeyGesture&gt;必须只包含一个&lt;xref:System.Windows.Input.Key&gt;且一个或多个&lt;xref:System.Windows.Input.ModifierKeys&gt;。&lt;/xref:System.Windows.Input.ModifierKeys&gt; &lt;/xref:System.Windows.Input.Key&gt; &lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Function keys and numeric keypad keys do not require a modifier key in order to be a valid &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">功能键和数字键盘键不需要修改键才能有效&lt;xref:System.Windows.Input.KeyGesture&gt;.&lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It is possible to specify an invalid &lt;xref:System.Windows.Input.KeyGesture&gt; and a KeyBinding with an invalid associated gesture, either through <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> or code.</source>
          <target state="translated">可以指定无效&lt;xref:System.Windows.Input.KeyGesture&gt;和无效的关联笔势，不论是通过使用键绑定<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>或代码。&lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For instance, there is no validation that prevents creating and binding a &lt;xref:System.Windows.Input.KeyGesture&gt; that contains only a nonfunction key, or only modifiers but no key.</source>
          <target state="translated">例如，没有任何可阻止创建和绑定的验证&lt;xref:System.Windows.Input.KeyGesture&gt;包含仅非功能键，或仅修饰符但没有密钥。&lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Such a KeyBinding will never attempt to invoke its associated command.</source>
          <target state="translated">此类键绑定将永远不会尝试调用其关联的命令。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When defining a KeyBinding in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">定义在键绑定时<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>有两种方法来指定&lt;xref:System.Windows.Input.KeyGesture&gt;.&lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The first way to establish a KeyBinding in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> is to define the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute of the KeyBinding element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">第一种建立在键绑定<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>是定义&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;启用一种语法以作为单个字符串，例如"CTRL + P"指定密钥和修饰符的键绑定元素的属性。&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The second way is to define the &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt; attribute and the &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt; attributes of the KeyBinding element.</source>
          <target state="translated">第二种方法是定义&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;属性和&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;键绑定元素的特性。&lt;/xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt; &lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Both ways of setting the &lt;xref:System.Windows.Input.KeyGesture&gt; are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">设置这两种&lt;xref:System.Windows.Input.KeyGesture&gt;是等效的和修改相同的基础对象，但不会进行使用如果这两个冲突。&lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the case when the &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;, &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;, and the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attributes are all set, the attribute which is defined last will be used for the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">在这种情况时&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;， &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;，并且&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;所有设置属性，其定义的属性上一次将使用&lt;xref:System.Windows.Input.KeyGesture&gt;。&lt;/xref:System.Windows.Input.KeyGesture&gt; &lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; &lt;/xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt; &lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can potentially have situations where for example a &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt; set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">您可以拥有的情况下，例如&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;集上次将覆盖只是前一个笔势的键部分，但保持该笔势的修饰符不变。&lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In general, it is recommended that you use only the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">一般情况下，建议你仅使用&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性从<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>; 这将避免多义性，提供的最简单的语法，并提供序列化的最直接表示形式。&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A KeyBinding can be defined on a specific object or at the class level by registering a &lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt; on the &lt;xref:System.Windows.Input.CommandManager&gt; class.</source>
          <target state="translated">键绑定可对特定对象或在类级别由定义注册&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;&lt;xref:System.Windows.Input.CommandManager&gt;类。&lt;/xref:System.Windows.Input.CommandManager&gt; &lt;/xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The most typical way to define a KeyBinding is within the control template, setting the &lt;xref:System.Windows.UIElement.InputBindings%2A&gt; property in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> by declaring one or more &lt;xref:System.Windows.Input.MouseBinding&gt; or KeyBinding elements.</source>
          <target state="translated">若要定义键绑定的最常见方式是在控件模板中，设置&lt;xref:System.Windows.UIElement.InputBindings%2A&gt;中的属性<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>通过声明一个或多个&lt;xref:System.Windows.Input.MouseBinding&gt;或键绑定元素。&lt;/xref:System.Windows.Input.MouseBinding&gt; &lt;/xref:System.Windows.UIElement.InputBindings%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified &lt;xref:System.Windows.Input.ICommand&gt; and <bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定&lt;xref:System.Windows.Input.ICommand&gt;和<bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.Input.ICommand&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The command to associate with <ph id="ph1">`gesture`</ph>.</source>
          <target state="translated">要将与相关联的命令<ph id="ph1">`gesture`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The key combination to associate with <ph id="ph1">`command`</ph>.</source>
          <target state="translated">若要将与相关联的组合键<ph id="ph1">`command`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;command&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;gesture&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;command&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;gesture&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified &lt;xref:System.Windows.Input.ICommand&gt; and the specified <bpt id="p2">&lt;xref href="System.Windows.Input.Key"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> which will be converted into a <bpt id="p4">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类使用指定&lt;xref:System.Windows.Input.ICommand&gt;和指定<bpt id="p2">&lt;xref href="System.Windows.Input.Key"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>和<bpt id="p3">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>将被转换为<bpt id="p4">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。&lt;/xref:System.Windows.Input.ICommand&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The command to invoke.</source>
          <target state="translated">要调用的命令。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The key to be associated with <ph id="ph1">`command`</ph>.</source>
          <target state="translated">要与之关联的键<ph id="ph1">`command`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The modifiers to be associated with <ph id="ph1">`command`</ph>.</source>
          <target state="translated">若要与之关联的修饰符<ph id="ph1">`command`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Creates an instance of a <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">创建的实例<bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The new object.</source>
          <target state="translated">新对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the gesture associated with this <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置与此关联的笔势<bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>With the exception of the function keys and the numeric keypad keys, a &lt;xref:System.Windows.Input.KeyGesture&gt; must contain a &lt;xref:System.Windows.Input.Key&gt; and one or more &lt;xref:System.Windows.Input.ModifierKeys&gt;.</source>
          <target state="translated">功能键和数字键盘键，除了&lt;xref:System.Windows.Input.KeyGesture&gt;必须包含&lt;xref:System.Windows.Input.Key&gt;且一个或多个&lt;xref:System.Windows.Input.ModifierKeys&gt;。&lt;/xref:System.Windows.Input.ModifierKeys&gt; &lt;/xref:System.Windows.Input.Key&gt; &lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The key sequence.</source>
          <target state="translated">键序列。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>the value <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">gesture</ph><ept id="p1">&lt;/code&gt;</ept> is being set to is not a <bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">gesture</ph> <ept id="p1">&lt;/code&gt;</ept>是设置为不是<bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Input.Key"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the <bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> associated with this <bpt id="p3">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.Windows.Input.Key"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的<bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>与此关联<bpt id="p3">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>With the exception of the function keys and the numeric keypad keys, a &lt;xref:System.Windows.Input.KeyGesture&gt; must contain a &lt;xref:System.Windows.Input.Key&gt; and one or more &lt;xref:System.Windows.Input.ModifierKeys&gt;.</source>
          <target state="translated">功能键和数字键盘键，除了&lt;xref:System.Windows.Input.KeyGesture&gt;必须包含&lt;xref:System.Windows.Input.Key&gt;且一个或多个&lt;xref:System.Windows.Input.ModifierKeys&gt;。&lt;/xref:System.Windows.Input.ModifierKeys&gt; &lt;/xref:System.Windows.Input.Key&gt; &lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When defining a &lt;xref:System.Windows.Input.KeyBinding&gt; in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">在定义时&lt;xref:System.Windows.Input.KeyBinding&gt;中<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>有两种方法来指定&lt;xref:System.Windows.Input.KeyGesture&gt;.&lt;/xref:System.Windows.Input.KeyGesture&gt; &lt;/xref:System.Windows.Input.KeyBinding&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first way to establish a &lt;xref:System.Windows.Input.KeyBinding&gt; in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> is to define the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute of the &lt;xref:System.Windows.Input.KeyBinding&gt; element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">第一种建立&lt;xref:System.Windows.Input.KeyBinding&gt;中<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>是定义&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性&lt;xref:System.Windows.Input.KeyBinding&gt;元素，它启用一种语法以作为单个字符串，例如"CTRL + P"指定密钥和修饰符。&lt;/xref:System.Windows.Input.KeyBinding&gt; &lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; &lt;/xref:System.Windows.Input.KeyBinding&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The second way is to define the Key attribute and the &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt; attributes of the &lt;xref:System.Windows.Input.KeyBinding&gt; element.</source>
          <target state="translated">第二种方法是定义键属性和&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;属性&lt;xref:System.Windows.Input.KeyBinding&gt;元素。&lt;/xref:System.Windows.Input.KeyBinding&gt; &lt;/xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Both ways of setting the &lt;xref:System.Windows.Input.KeyGesture&gt; are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">设置这两种&lt;xref:System.Windows.Input.KeyGesture&gt;是等效的和修改相同的基础对象，但不会进行使用如果这两个冲突。&lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the case when the Key, &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;, and the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attributes are all set, the attribute which is defined last will be used for the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">在这种情况时密钥， &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;，并且&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;所有设置属性，其定义的属性上一次将使用&lt;xref:System.Windows.Input.KeyGesture&gt;。&lt;/xref:System.Windows.Input.KeyGesture&gt; &lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; &lt;/xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can potentially have situations where for example a Key set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">您可以拥有但的情况，例如密钥集上次将覆盖只是前一个笔势的键部分保持该笔势的修饰符不变。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In general, it is recommended that you use only the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">一般情况下，建议你仅使用&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性从<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>; 这将避免多义性，提供的最简单的语法，并提供序列化的最直接表示形式。&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The key part of the <bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">关键部分<bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Input.Key"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Windows.Input.Key"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Input.KeyBinding.Key*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.Input.KeyBinding.Key*&gt;依赖项属性。&lt;/xref:System.Windows.Input.KeyBinding.Key*&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the <bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> associated with this <bpt id="p3">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的<bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>与此关联<bpt id="p3">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>With the exception of the function keys and the numeric keypad keys, a &lt;xref:System.Windows.Input.KeyGesture&gt; must contain a &lt;xref:System.Windows.Input.Key&gt; and one or more &lt;xref:System.Windows.Input.ModifierKeys&gt;.</source>
          <target state="translated">功能键和数字键盘键，除了&lt;xref:System.Windows.Input.KeyGesture&gt;必须包含&lt;xref:System.Windows.Input.Key&gt;且一个或多个&lt;xref:System.Windows.Input.ModifierKeys&gt;。&lt;/xref:System.Windows.Input.ModifierKeys&gt; &lt;/xref:System.Windows.Input.Key&gt; &lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When defining a &lt;xref:System.Windows.Input.KeyBinding&gt; in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">在定义时&lt;xref:System.Windows.Input.KeyBinding&gt;中<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>有两种方法来指定&lt;xref:System.Windows.Input.KeyGesture&gt;.&lt;/xref:System.Windows.Input.KeyGesture&gt; &lt;/xref:System.Windows.Input.KeyBinding&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first way to establish a &lt;xref:System.Windows.Input.KeyBinding&gt; in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> is to define the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute of the &lt;xref:System.Windows.Input.KeyBinding&gt; element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">第一种建立&lt;xref:System.Windows.Input.KeyBinding&gt;中<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>是定义&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性&lt;xref:System.Windows.Input.KeyBinding&gt;元素，它启用一种语法以作为单个字符串，例如"CTRL + P"指定密钥和修饰符。&lt;/xref:System.Windows.Input.KeyBinding&gt; &lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; &lt;/xref:System.Windows.Input.KeyBinding&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second way is to define the &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt; attribute and the Modifiers attributes of the &lt;xref:System.Windows.Input.KeyBinding&gt; element.</source>
          <target state="translated">第二种方法是定义&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;属性和修饰符属性&lt;xref:System.Windows.Input.KeyBinding&gt;元素。&lt;/xref:System.Windows.Input.KeyBinding&gt; &lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Both ways of setting the &lt;xref:System.Windows.Input.KeyGesture&gt; are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">设置这两种&lt;xref:System.Windows.Input.KeyGesture&gt;是等效的和修改相同的基础对象，但不会进行使用如果这两个冲突。&lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the case when the &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;, Modifiers, and the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attributes are all set, the attribute which is defined last will be used for the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">在这种情况时&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;、 修饰符和&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性都设置为，其中上一次定义的特性将用于&lt;xref:System.Windows.Input.KeyGesture&gt;.&lt;/xref:System.Windows.Input.KeyGesture&gt; &lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; &lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can potentially have situations where for example a &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt; set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">您可以拥有的情况下，例如&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;集上次将覆盖只是前一个笔势的键部分，但保持该笔势的修饰符不变。&lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In general, it is recommended that you use only the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">一般情况下，建议你仅使用&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性从<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>; 这将避免多义性，提供的最简单的语法，并提供序列化的最直接表示形式。&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Modifiers"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Modifiers="oneOrMoreModifierKeys"/&gt;      ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Modifiers"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreModifierKeys<ept id="p3">*</ept>    One or more modifier keys, defined by the &lt;xref:System.Windows.Input.ModifierKeys&gt; enumeration, delimited with a "+" character.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Modifiers"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 属性用法<ph id="ph1">```   &lt;object Modifiers="oneOrMoreModifierKeys"/&gt;      ```</ph> <bpt id="p2">&lt;a name="xamlValues_Modifiers"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML 值<bpt id="p3">*</bpt>oneOrMoreModifierKeys<ept id="p3">*</ept>一个或多个定义的修改键&lt;xref:System.Windows.Input.ModifierKeys&gt;枚举，用"+"字符分隔。&lt;/xref:System.Windows.Input.ModifierKeys&gt;      </target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The modifier keys of the <bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">修改键的<bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Input.KeyBinding.Modifiers*&gt; dependency property.</source>
          <target state="translated">标识&lt;xref:System.Windows.Input.KeyBinding.Modifiers*&gt;依赖项属性。&lt;/xref:System.Windows.Input.KeyBinding.Modifiers*&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>