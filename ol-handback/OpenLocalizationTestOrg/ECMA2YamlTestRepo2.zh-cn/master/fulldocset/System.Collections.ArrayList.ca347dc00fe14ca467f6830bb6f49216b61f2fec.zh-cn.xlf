<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2de9fc820be99c670d7619152777dcdaaee6876a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.ArrayList.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e177a63edad1cfd511e6b27b15cbd4fbef94eeed</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">764825ee98e69f44c09e869abcec65ccab26e908</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface using an array whose size is dynamically increased as required.</source>
          <target state="translated">实现&lt;xref:System.Collections.IList&gt;接口使用动态增加其大小的数组所需的方式。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>.</source>
          <target state="translated">若要浏览此类型的.NET Framework 源代码，请参阅<bpt id="p1">[</bpt>引用源<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>1&gt; 要查看此类型的.NET Framework 源代码，请参阅<bpt id="p1">[</bpt>引用源<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
          <target state="translated">你可以浏览源代码联机，请下载离线查看的引用并在调试; 过程中逐步执行源 （包括修补程序和更新）请参阅<bpt id="p1">[</bpt>说明<ept id="p1">](http://referencesource.microsoft.com/)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The ArrayList class is designed to hold heterogeneous collections of objects.</source>
          <target state="translated">ArrayList 类旨在保存异类对象的集合。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, it does not always offer the best performance.</source>
          <target state="translated">但是，它不始终提供最佳性能。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Instead, we recommend the following:      -   For a heterogeneous collection of objects, use the <ph id="ph1">`List&lt;Object&gt;`</ph> (in C#) or <ph id="ph2">`List(Of Object)`</ph> (in Visual Basic) type.</source>
          <target state="translated">相反，我们建议采用以下做法:-对于一组不同的对象，使用<ph id="ph1">`List&lt;Object&gt;`</ph>（在 C# 中) 或<ph id="ph2">`List(Of Object)`</ph>（在 Visual Basic 中) 中，键入。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>-   For a homogeneous collection of objects, use the &lt;xref:System.Collections.Generic.List%601&gt; class.</source>
          <target state="translated">-对于同类对象的集合，使用&lt;xref:System.Collections.Generic.List%601&gt;类。&lt;/xref:System.Collections.Generic.List%601&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>See the "Performance Considerations" section in the &lt;xref:System.Collections.Generic.List%601&gt; reference topic for a discussion of the relative performance of these classes.</source>
          <target state="translated">请参阅中的"性能注意事项"部分&lt;xref:System.Collections.Generic.List%601&gt;这些类的相对性能的讨论的参考主题。&lt;/xref:System.Collections.Generic.List%601&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ArrayList is not guaranteed to be sorted.</source>
          <target state="translated">ArrayList 不是一定进行排序。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You must sort the ArrayList by calling its &lt;xref:System.Collections.ArrayList.Sort%2A&gt; method prior to performing operations (such as &lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;) that require the ArrayList to be sorted.</source>
          <target state="translated">您必须通过调用理 ArrayList 其&lt;xref:System.Collections.ArrayList.Sort%2A&gt;在执行操作之前的方法 (如&lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;) 需要阵列列表以进行排序。&lt;/xref:System.Collections.ArrayList.BinarySearch%2A&gt; &lt;/xref:System.Collections.ArrayList.Sort%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To maintain a collection that is automatically sorted as new elements are added, you can use the &lt;xref:System.Collections.Generic.SortedSet%601&gt; class.</source>
          <target state="translated">若要维护添加新元素时会自动进行排序的集合，你可以使用&lt;xref:System.Collections.Generic.SortedSet%601&gt;类。&lt;/xref:System.Collections.Generic.SortedSet%601&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The capacity of an ArrayList is the number of elements the ArrayList can hold.</source>
          <target state="translated">ArrayList 容量是 ArrayList 可以容纳的元素数目。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As elements are added to an ArrayList, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">向数组添加元素时，自动增加容量通过重新分配所需的方式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt; or by setting the &lt;xref:System.Collections.ArrayList.Capacity%2A&gt; property explicitly.</source>
          <target state="translated">可以通过调用减少容量&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;或通过设置&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;属性显式。&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.TrimToSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For very large ArrayList objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph1">`enabled`</ph> attribute of the  configuration element to <ph id="ph2">`true`</ph> in the run-time environment.</source>
          <target state="translated">对于非常大的 ArrayList 对象，你可以通过设置增加到 20 亿元素在 64 位系统上的最大容量<ph id="ph1">`enabled`</ph>到的配置元素的属性<ph id="ph2">`true`</ph>在运行时环境中。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">可以使用整数索引访问此集合中的元素。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">在此集合中的索引是从零开始。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The ArrayList collection accepts <ph id="ph1">`null`</ph> as a valid value.</source>
          <target state="translated">ArrayList 集合接受<ph id="ph1">`null`</ph>作为有效的值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It also allows duplicate elements.</source>
          <target state="translated">它还允许重名的元素。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Using multidimensional arrays as elements in an ArrayList collection is not supported.</source>
          <target state="translated">不支持多维数组用作 ArrayList 集合中的元素。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty and has the default initial capacity.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为空并且具有默认初始容量的类。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The capacity of an &lt;xref:System.Collections.ArrayList&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.ArrayList&gt;是元素的数目，&lt;xref:System.Collections.ArrayList&gt;可以容纳。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>As elements are added to an &lt;xref:System.Collections.ArrayList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.ArrayList&gt;，自动增加容量通过重新分配在内部数组所需的方式。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;时调整操作</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类，其中包含从指定集合中复制的元素，并具有相同的初始容量与复制的元素数。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The capacity of an &lt;xref:System.Collections.ArrayList&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.ArrayList&gt;是元素的数目，&lt;xref:System.Collections.ArrayList&gt;可以容纳。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As elements are added to an &lt;xref:System.Collections.ArrayList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.ArrayList&gt;，自动增加容量通过重新分配在内部数组所需的方式。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;时调整操作</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The elements are copied onto the &lt;xref:System.Collections.ArrayList&gt; in the same order they are read by the &lt;xref:System.Collections.IEnumerator&gt; of the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">将元素复制到&lt;xref:System.Collections.ArrayList&gt;它们由&lt;xref:System.Collections.IEnumerator&gt;的&lt;xref:System.Collections.ICollection&gt;。&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.IEnumerator&gt;读取的相同顺序&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`c`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`c`</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements are copied to the new list.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;其元素被复制到新列表。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty and has the specified initial capacity.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为空并且具有指定的初始容量的类。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The capacity of an &lt;xref:System.Collections.ArrayList&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.ArrayList&gt;是元素的数目，&lt;xref:System.Collections.ArrayList&gt;可以容纳。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As elements are added to an &lt;xref:System.Collections.ArrayList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到&lt;xref:System.Collections.ArrayList&gt;，自动增加容量通过重新分配在内部数组所需的方式。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;时调整操作</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The number of elements that the new list can initially store.</source>
          <target state="translated">新列表最初可以存储的元素数。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper for a specific &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">创建<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包装器特定&lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Adapter does not copy the contents of &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">适配器不会复制&lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;的内容</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Instead, it only creates an &lt;xref:System.Collections.ArrayList&gt; wrapper around &lt;xref:System.Collections.IList&gt;; therefore, changes to the &lt;xref:System.Collections.IList&gt; also affect the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">相反，它仅创建&lt;xref:System.Collections.ArrayList&gt;&lt;xref:System.Collections.IList&gt;; 因此，更改&lt;xref:System.Collections.IList&gt;也会影响&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.IList&gt;&lt;/xref:System.Collections.IList&gt;周围包装&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; class provides generic &lt;xref:System.Collections.ArrayList.Reverse%2A&gt;, &lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt; and &lt;xref:System.Collections.ArrayList.Sort%2A&gt; methods.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;类提供了泛型&lt;xref:System.Collections.ArrayList.Reverse%2A&gt;，&lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;和&lt;xref:System.Collections.ArrayList.Sort%2A&gt;方法。&lt;/xref:System.Collections.ArrayList.Sort%2A&gt; &lt;/xref:System.Collections.ArrayList.BinarySearch%2A&gt; &lt;/xref:System.Collections.ArrayList.Reverse%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This wrapper can be a means to use those methods on &lt;xref:System.Collections.IList&gt;; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">此包装可以是一种方式来使用上&lt;xref:System.Collections.IList&gt;; 但是，执行通过包装这些泛型操作可能会比直接在&lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;上应用的操作的效率较低&lt;/xref:System.Collections.IList&gt;的那些方法</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Version Compatibility    In the .NET Framework version 1.0 and 1.1, calling the &lt;xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29&gt; method overload on the &lt;xref:System.Collections.ArrayList&gt; wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</source>
          <target state="translated">版本兼容性在.NET Framework 版本 1.0 和 1.1 中，调用&lt;xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29&gt;上的方法重载&lt;xref:System.Collections.ArrayList&gt;包装返回的枚举数上限，而不是计数处理第二个参数。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph> the second argument is correctly treated as a count.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>第二个参数正确视为计数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to wrap.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;包装。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper around the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;周围包装</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Adds an object to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将对象添加到的末尾<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;接受<ph id="ph1">`null`</ph>作为有效的值，并允许重复的元素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; already equals &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList.Count%2A&gt;已经等于&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;、 容量的&lt;xref:System.Collections.ArrayList&gt;增加通过自动重新分配在内部数组和现有元素被复制到新数组中，在添加新的元素之前。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; is less than &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, this method is an O(1) operation.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList.Count%2A&gt;是小于&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;，此方法为 o （1） 运算。&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">如果容量需要增加以容纳新元素，此方法会成为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to be added to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;要添加到末尾<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> index at which the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> has been added.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>开始的索引， <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept>已添加。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Adds the elements of an &lt;xref:System.Collections.ICollection&gt; to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">添加的元素&lt;xref:System.Collections.ICollection&gt;到末尾<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;接受<ph id="ph1">`null`</ph>作为有效的值，并允许重复的元素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The order of the elements in the &lt;xref:System.Collections.ICollection&gt; is preserved in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">中&lt;xref:System.Collections.ICollection&gt;保留在&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ICollection&gt;元素的顺序</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If the new &lt;xref:System.Collections.ArrayList.Count%2A&gt; (the current &lt;xref:System.Collections.ArrayList.Count%2A&gt; plus the size of the collection) will be greater than &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</source>
          <target state="translated">如果新&lt;xref:System.Collections.ArrayList.Count%2A&gt;(当前&lt;xref:System.Collections.ArrayList.Count%2A&gt;plus 集合的大小) 将大于&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;、 容量的&lt;xref:System.Collections.ArrayList&gt;增加通过自动重新分配以容纳新元素，在内部数组和现有元素被复制到新数组中，在添加新的元素之前。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; can accommodate the new elements without increasing the &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements to be added.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList&gt;可以容纳新元素，而无需增加&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是要添加的元素数。&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If the capacity needs to be increased to accommodate the new elements, this method becomes an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements to be added and <ph id="ph5">`m`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">如果增加以容纳新元素所需的容量，此方法会成为 O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) 操作，其中<ph id="ph4">`n`</ph>是要添加的元素的数目和<ph id="ph5">`m`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements should be added to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;其元素应添加到末尾<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The collection itself cannot be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but it can contain elements that are <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">集合自身不能为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，但它可以包含的元素<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Searches the entire sorted <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an element using the default comparer and returns the zero-based index of the element.</source>
          <target state="translated">搜索在整个已排序<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>元素使用默认比较器，并返回的元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`value`</ph> parameter and each element of the &lt;xref:System.Collections.ArrayList&gt; must implement the &lt;xref:System.IComparable&gt; interface, which is used for comparisons.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数和的每个元素&lt;xref:System.Collections.ArrayList&gt;必须实现&lt;xref:System.IComparable&gt;接口，用于比较。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by the &lt;xref:System.IComparable&gt; implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">元素&lt;xref:System.Collections.ArrayList&gt;必须已在增加根据定义的排序顺序的值进行排序&lt;xref:System.IComparable&gt;实现; 否则，结果可能不正确。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using &lt;xref:System.IComparable&gt;.</source>
          <target state="translated">比较<ph id="ph1">`null`</ph>允许与任何类型和使用&lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt;时不会生成异常</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">在排序时，<ph id="ph1">`null`</ph>被视为小于任何其他对象。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList&gt;多个元素具有相同的值，该方法返回仅包含一个匹配项，并且可能会返回任何一个匹配项，不一定是第一个。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList&gt;不包含指定的值，该方法返回负整数。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">你可以应用于此负的整数，以获取大于搜索值的第一个元素的索引的按位求补运算 （~）。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When inserting the value into the &lt;xref:System.Collections.ArrayList&gt;, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">插入到的值时&lt;xref:System.Collections.ArrayList&gt;，此索引应使用的插入点，若要维护的排序顺序。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (日志<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate.</source>
          <target state="translated">&lt;xref:System.Object&gt;查找。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The zero-based index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> in the sorted <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept> or, if there is no larger element, the bitwise complement of &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">从零开始的索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>则为已排序<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，如果<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p3">&lt;/code&gt;</ept>找到; 否则为一个负数数字，即大于的下一个元素索引的按位求补<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept>或如果没有更大的元素， &lt;xref:System.Collections.ArrayList.Count*&gt;.&lt;/xref:System.Collections.ArrayList.Count*&gt;的按位求补</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Neither <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> nor the elements of <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implement the &lt;xref:System.IComparable&gt; interface.</source>
          <target state="translated">既不<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>也的元素不<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实现&lt;xref:System.IComparable&gt;接口。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is not of the same type as the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>不属于同一类型的元素<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Searches the entire sorted <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">搜索在整个已排序<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>元素使用指定的比较器，并返回的元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The comparer customizes how the elements are compared.</source>
          <target state="translated">比较器自定义如何比较元素。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For example, you can use a &lt;xref:System.Collections.CaseInsensitiveComparer&gt; instance as the comparer to perform case-insensitive string searches.</source>
          <target state="translated">例如，你可以使用&lt;xref:System.Collections.CaseInsensitiveComparer&gt;实例作为要执行不区分大小写的字符串搜索的比较器。&lt;/xref:System.Collections.CaseInsensitiveComparer&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the &lt;xref:System.Collections.ArrayList&gt; are compared to the specified value using the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>提供的元素&lt;xref:System.Collections.ArrayList&gt;与使用指定的指定值进行比较&lt;xref:System.Collections.IComparer&gt;实现。&lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by <ph id="ph1">`comparer`</ph>; otherwise, the result might be incorrect.</source>
          <target state="translated">元素&lt;xref:System.Collections.ArrayList&gt;必须已在增加根据定义的排序顺序的值进行排序<ph id="ph1">`comparer`</ph>; 否则为结果可能不正确。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the comparison is done using the &lt;xref:System.IComparable&gt; implementation provided by the element itself or by the specified value.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>是<ph id="ph2">`null`</ph>，完成比较使用&lt;xref:System.IComparable&gt;通过自身的元素或指定的值提供的实现。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by the &lt;xref:System.IComparable&gt; implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">元素&lt;xref:System.Collections.ArrayList&gt;必须已在增加根据定义的排序顺序的值进行排序&lt;xref:System.IComparable&gt;实现; 否则，结果可能不正确。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using &lt;xref:System.IComparable&gt;.</source>
          <target state="translated">比较<ph id="ph1">`null`</ph>允许与任何类型和使用&lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt;时不会生成异常</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">在排序时，<ph id="ph1">`null`</ph>被视为小于任何其他对象。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList&gt;多个元素具有相同的值，该方法返回仅包含一个匹配项，并且可能会返回任何一个匹配项，不一定是第一个。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList&gt;不包含指定的值，该方法返回负整数。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">你可以应用于此负的整数，以获取大于搜索值的第一个元素的索引的按位求补运算 （~）。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>When inserting the value into the &lt;xref:System.Collections.ArrayList&gt;, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">插入到的值时&lt;xref:System.Collections.ArrayList&gt;，此索引应使用的插入点，若要维护的排序顺序。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (日志<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate.</source>
          <target state="translated">&lt;xref:System.Object&gt;查找。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;比较元素时要使用的实现。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer that is the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要使用的默认比较器是&lt;xref:System.IComparable&gt;每个元素的实现。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The zero-based index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> in the sorted <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept> or, if there is no larger element, the bitwise complement of &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">从零开始的索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>则为已排序<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，如果<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p3">&lt;/code&gt;</ept>找到; 否则为一个负数数字，即大于的下一个元素索引的按位求补<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept>或如果没有更大的元素， &lt;xref:System.Collections.ArrayList.Count*&gt;.&lt;/xref:System.Collections.ArrayList.Count*&gt;的按位求补</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and neither <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> nor the elements of <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implement the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>并且不<ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>也的元素不<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实现<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is not of the same type as the elements of the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>不属于同一类型的元素<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Searches a range of elements in the sorted <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">在已排序的元素范围搜索<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>元素使用指定的比较器，并返回的元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The comparer customizes how the elements are compared.</source>
          <target state="translated">比较器自定义如何比较元素。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For example, you can use a &lt;xref:System.Collections.CaseInsensitiveComparer&gt; instance as the comparer to perform case-insensitive string searches.</source>
          <target state="translated">例如，你可以使用&lt;xref:System.Collections.CaseInsensitiveComparer&gt;实例作为要执行不区分大小写的字符串搜索的比较器。&lt;/xref:System.Collections.CaseInsensitiveComparer&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the &lt;xref:System.Collections.ArrayList&gt; are compared to the specified value using the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>提供的元素&lt;xref:System.Collections.ArrayList&gt;与使用指定的指定值进行比较&lt;xref:System.Collections.IComparer&gt;实现。&lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by <ph id="ph1">`comparer`</ph>; otherwise, the result might be incorrect.</source>
          <target state="translated">元素&lt;xref:System.Collections.ArrayList&gt;必须已在增加根据定义的排序顺序的值进行排序<ph id="ph1">`comparer`</ph>; 否则为结果可能不正确。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the comparison is done using the &lt;xref:System.IComparable&gt; implementation provided by the element itself or by the specified value.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>是<ph id="ph2">`null`</ph>，完成比较使用&lt;xref:System.IComparable&gt;通过自身的元素或指定的值提供的实现。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by the &lt;xref:System.IComparable&gt; implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">元素&lt;xref:System.Collections.ArrayList&gt;必须已在增加根据定义的排序顺序的值进行排序&lt;xref:System.IComparable&gt;实现; 否则，结果可能不正确。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using &lt;xref:System.IComparable&gt;.</source>
          <target state="translated">比较<ph id="ph1">`null`</ph>允许与任何类型和使用&lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt;时不会生成异常</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">在排序时，<ph id="ph1">`null`</ph>被视为小于任何其他对象。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList&gt;多个元素具有相同的值，该方法返回仅包含一个匹配项，并且可能会返回任何一个匹配项，不一定是第一个。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList&gt;不包含指定的值，该方法返回负整数。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">你可以应用于此负的整数，以获取大于搜索值的第一个元素的索引的按位求补运算 （~）。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>When inserting the value into the &lt;xref:System.Collections.ArrayList&gt;, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">插入到的值时&lt;xref:System.Collections.ArrayList&gt;，此索引应使用的插入点，若要维护的排序顺序。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">此方法为 O (日志<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`count`</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range to search.</source>
          <target state="translated">要搜索的范围的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The length of the range to search.</source>
          <target state="translated">要搜索的范围的长度。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate.</source>
          <target state="translated">&lt;xref:System.Object&gt;查找。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;比较元素时要使用的实现。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer that is the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要使用的默认比较器是&lt;xref:System.IComparable&gt;每个元素的实现。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The zero-based index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> in the sorted <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept> or, if there is no larger element, the bitwise complement of &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">从零开始的索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>则为已排序<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，如果<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p3">&lt;/code&gt;</ept>找到; 否则为一个负数数字，即大于的下一个元素索引的按位求补<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept>或如果没有更大的元素， &lt;xref:System.Collections.ArrayList.Count*&gt;.&lt;/xref:System.Collections.ArrayList.Count*&gt;的按位求补</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>不表示中的有效范围<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and neither <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> nor the elements of <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implement the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>并且不<ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>也的元素不<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>实现<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is not of the same type as the elements of the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>不属于同一类型的元素<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of elements that the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">获取或设置元素的数目<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>可以包含。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Capacity is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can store.</source>
          <target state="translated">容量是元素的数目，&lt;xref:System.Collections.ArrayList&gt;可以存储。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Count%2A&gt; is the number of elements that are actually in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Count%2A&gt;是其实是&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;的元素的数目&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Capacity is always greater than or equal to &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">容量始终是大于或等于&lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; exceeds Capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList.Count%2A&gt;添加元素时超过容量，通过在复制旧元素和添加新的元素之前重新分配在内部数组自动增加容量。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt; or by setting the Capacity property explicitly.</source>
          <target state="translated">可以通过调用减少容量&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;或通过显式设置的容量属性。&lt;/xref:System.Collections.ArrayList.TrimToSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>When the value of Capacity is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">当显式设置的容量的值时，在内部数组也会重新分配以适应指定的容量。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">检索此属性的值的运算 o （1）;将属性设置为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>新容量。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The number of elements that the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">元素的数目， <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>可以包含。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Capacity is set to a value that is less than &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">容量设置为小于&lt;xref:System.Collections.ArrayList.Count*&gt;.&lt;/xref:System.Collections.ArrayList.Count*&gt;值</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">没有足够的内存可用系统上。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Removes all elements from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">移除所有元素从<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Count%2A&gt;是设置为零，并且集合的元素对其他对象的引用也被释放。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Capacity%2A&gt; remains unchanged.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;保持不变。&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>To reset the capacity of the &lt;xref:System.Collections.ArrayList&gt;, call &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt; or set the &lt;xref:System.Collections.ArrayList.Capacity%2A&gt; property directly.</source>
          <target state="translated">若要重置的容量&lt;xref:System.Collections.ArrayList&gt;，调用&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;或设置&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;属性直接。&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.TrimToSize%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.ArrayList&gt; sets the capacity of the &lt;xref:System.Collections.ArrayList&gt; to the default capacity.</source>
          <target state="translated">截去空&lt;xref:System.Collections.ArrayList&gt;的容量设置&lt;xref:System.Collections.ArrayList&gt;到默认的容量。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">创建的浅表复制<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">集合的浅表副本复制仅的元素集合，不论它们是引用类型还是值类型，但它不会复制引用所引用的对象。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">新集合中的引用都指向原始集合中的引用指向同一对象。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">与此相反，集合的深层副本复制这些元素，以及由这些元素直接或间接引用的所有内容。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">浅表复制<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Determines whether an element is in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">确定某元素是否在<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法执行的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法通过调用&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;确定相等性</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;要在中查找<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Copies the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the beginning of the target array.</source>
          <target state="translated">将复制整个<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到兼容的一维&lt;xref:System.Array&gt;，从目标数组的开头处开始。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">指定的数组必须具有兼容类型。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.</source>
          <target state="translated">此方法使用&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;要复制的元素。&lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">元素被复制到&lt;xref:System.Array&gt;与在其中的枚举数循环访问&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;相同的顺序&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一维&lt;xref:System.Array&gt;，它是从复制的元素的目标<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;必须具有从零开始的索引。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>是多维的。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the number of elements that the destination <ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> can contain.</source>
          <target state="translated">-源中的元素的数目<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>大于元素的数目，目标<ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>可以包含。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">源类型<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>无法自动转换为目标的类型<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Copies the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the specified index of the target array.</source>
          <target state="translated">将复制整个<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到兼容的一维&lt;xref:System.Array&gt;，从目标数组的指定索引处开始。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">指定的数组必须具有兼容类型。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.</source>
          <target state="translated">此方法使用&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;要复制的元素。&lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">元素被复制到&lt;xref:System.Array&gt;与在其中的枚举数循环访问&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;相同的顺序&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一维&lt;xref:System.Array&gt;，它是从复制的元素的目标<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;必须具有从零开始的索引。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">中的从零开始索引<ph id="ph1">`array`</ph>复制开始处。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>是多维的。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-源中的元素的数目<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>大于从的可用空间<ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>到目标的末尾<ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">源类型<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>无法自动转换为目标的类型<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Copies a range of elements from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the specified index of the target array.</source>
          <target state="translated">将复制的一系列元素从<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到兼容的一维&lt;xref:System.Array&gt;，从目标数组的指定索引处开始。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">指定的数组必须具有兼容类型。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.</source>
          <target state="translated">此方法使用&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;要复制的元素。&lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">元素被复制到&lt;xref:System.Array&gt;与在其中的枚举数循环访问&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;相同的顺序&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`count`</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The zero-based index in the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at which copying begins.</source>
          <target state="translated">源中的从零开始索引<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>复制开始处。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一维&lt;xref:System.Array&gt;，它是从复制的元素的目标<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;必须具有从零开始的索引。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">中的从零开始索引<ph id="ph1">`array`</ph>复制开始处。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The number of elements to copy.</source>
          <target state="translated">要复制的元素数。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>是多维的。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph> of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>等于或大于<ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>的源<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements from <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph2">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-从元素的数目<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>到源末尾<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>大于从的可用空间<ph id="ph2">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>到目标的末尾<ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">源类型<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>无法自动转换为目标的类型<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Gets the number of elements actually contained in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取中实际包含的元素数目<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Capacity%2A&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can store.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;是的元素数的&lt;xref:System.Collections.ArrayList&gt;可以存储。&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Count is the number of elements that are actually in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">计数是其实是&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;的元素的数目</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Capacity%2A&gt; is always greater than or equal to Count.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;始终是大于或等于计数。&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>If Count exceeds &lt;xref:System.Collections.ArrayList.Capacity%2A&gt; while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果计数超过&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;时添加元素，则自动增大容量通过重新在内部数组分配在复制旧元素和添加新的元素之前。&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The number of elements actually contained in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">中实际包含的元素的数目<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper with a fixed size.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有固定大小的包装。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>This wrapper can be used to prevent additions to and deletions from the original &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">可以使用此包装来防止原始&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The elements can still be modified or replaced.</source>
          <target state="translated">元素仍可以修改或替换。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是只是一个集合的包装器防止添加和移除元素;因此，如果对基础集合，包括添加或移除元素，进行更改的固定大小的集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to wrap.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包装。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper with a fixed size.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定大小的包装。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IList&gt; wrapper with a fixed size.</source>
          <target state="translated">返回&lt;xref:System.Collections.IList&gt;具有固定大小的包装。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>This wrapper can be used to prevent additions to and deletions from the original &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">可以使用此包装来防止原始&lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The elements can still be modified or replaced.</source>
          <target state="translated">元素仍可以修改或替换。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是只是一个集合的包装器防止添加和移除元素;因此，如果对基础集合，包括添加或移除元素，进行更改的固定大小的集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to wrap.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;包装。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; wrapper with a fixed size.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;具有固定大小的包装。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回整个的枚举数<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建议，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;此外会回此位置的枚举数。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">在此位置上，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是不确定的。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，你必须调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;的第一个元素的集合，然后再读取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;的值枚举器向前移动&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回相同的对象之前&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;到下一个元素。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;还返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">如果最后一次调用到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是不确定的。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;可以再次，集合的第一个元素调用&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;后, 跟&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果对集合进行更改，如添加、 修改或删除元素，则枚举数将失效且不可恢复，而且其行为是不确定。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合; 独占访问权因此，枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以锁定在整个枚举期间的集合。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要允许访问集合以进行读取和写入的多个线程，则必须实现自己的同步。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;整个<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for a range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回的元素范围的枚举数<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual C++, <ph id="ph3">`For Each`</ph> Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph> Visual c + + 中<ph id="ph3">`For Each`</ph>Visual Basic) 隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建议，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中中的数据，但它们不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中的第一个元素之前。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;此外会回此位置的枚举数。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">在此位置上，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是不确定的。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，你必须调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;的第一个元素的集合，然后再读取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;的值枚举器向前移动&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;返回相同的对象之前&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;称为。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;到下一个元素。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;还返回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">如果最后一次调用到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返回<ph id="ph1">`false`</ph>，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是不确定的。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要设置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;可以再次，集合的第一个元素调用&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;后, 跟&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果对集合进行更改，如添加、 修改或删除元素，则枚举数将失效且不可恢复，而且其行为是不确定。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合; 独占访问权因此，枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以锁定在整个枚举期间的集合。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要允许访问集合以进行读取和写入的多个线程，则必须实现自己的同步。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Version Compatibility    In the .NET Framework versions 1.0 and 1.1, the enumerator for an &lt;xref:System.Collections.ArrayList&gt; wrapper returned by the &lt;xref:System.Collections.ArrayList.Adapter%2A&gt; method treated the second argument as an upper bound rather than as a count.</source>
          <target state="translated">版本兼容性在.NET Framework 1.0 和 1.1 版，枚举数的&lt;xref:System.Collections.ArrayList&gt;包装返回&lt;xref:System.Collections.ArrayList.Adapter%2A&gt;方法被视为第二个参数，上限为而不是做一个计数。&lt;/xref:System.Collections.ArrayList.Adapter%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph> the second argument is correctly treated as a count.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>第二个参数正确视为计数。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section that the enumerator should refer to.</source>
          <target state="translated">从零开始的起始索引<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>枚举器应引用的部分。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The number of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section that the enumerator should refer to.</source>
          <target state="translated">中的元素数<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>枚举器应引用的部分。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the specified range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;指定范围中元素的<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid range in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>未指定中的有效范围<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> which represents a subset of the elements in the source <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示源中的元素子集<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>This method does not create copies of the elements.</source>
          <target state="translated">此方法不创建的元素的副本。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Collections.ArrayList&gt; is only a view window into the source &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">新&lt;xref:System.Collections.ArrayList&gt;仅源&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;中的视图窗口&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>However, all subsequent changes to the source &lt;xref:System.Collections.ArrayList&gt; must be done through this view window &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">但是，所有后续更改&lt;xref:System.Collections.ArrayList&gt;必须通过此视图窗口&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;执行&lt;/xref:System.Collections.ArrayList&gt;源</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>If changes are made directly to the source &lt;xref:System.Collections.ArrayList&gt;, the view window &lt;xref:System.Collections.ArrayList&gt; is invalidated and any operations on it will return an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果直接对源进行更改&lt;xref:System.Collections.ArrayList&gt;，视图窗口&lt;xref:System.Collections.ArrayList&gt;失效并对它的任何操作将返回&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The zero-based <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> index at which the range starts.</source>
          <target state="translated">从零开始<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>范围开始处的索引。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The number of elements in the range.</source>
          <target state="translated">范围中元素数。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> which represents a subset of the elements in the source <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示源中的元素子集<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>不表示有效的一系列元素中<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the first occurrence within the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">搜索指定&lt;xref:System.Object&gt;并返回在整个的第一个匹配项的从零开始索引<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched forward starting at the first element and ending at the last element.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;向前从第一个元素开始和结束时间的最后一个元素搜索。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法执行的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法通过调用&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;确定相等性</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;要在中查找<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the entire <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">第一个匹配项的从零开始索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>在整个<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，如果找到; 否则为-1。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the first occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that extends from the specified index to the last element.</source>
          <target state="translated">搜索指定&lt;xref:System.Object&gt;并返回中的元素范围内的第一个匹配项的从零开始索引<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>扩展从指定索引到最后一个元素。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at the last element.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;处开始向前搜索<ph id="ph1">`startIndex`</ph>和结束时间的最后一个元素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements from <ph id="ph3">`startIndex`</ph> to the end of the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">此方法执行的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`startIndex`</ph>到&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;末尾</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法通过调用&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;确定相等性</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;要在中查找<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">搜索的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 （零） 为有效值空列表中。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that extends from <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> to the last element, if found; otherwise, -1.</source>
          <target state="translated">第一个匹配项的从零开始索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>中的元素范围内<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>扩展从<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">startIndex</ph> <ept id="p3">&lt;/code&gt;</ept>到最后一个元素，如果找到; 否则为-1。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>超出的有效索引范围<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the first occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">搜索指定&lt;xref:System.Object&gt;并返回中的元素范围内的第一个匹配项的从零开始索引<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>中指定索引处开始并包含指定的元素数。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph> plus <ph id="ph3">`count`</ph> minus 1, if <ph id="ph4">`count`</ph> is greater than 0.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;处开始向前搜索<ph id="ph1">`startIndex`</ph>结束<ph id="ph2">`startIndex`</ph>加上<ph id="ph3">`count`</ph>减 1，如果<ph id="ph4">`count`</ph>大于 0。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">此方法执行的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`count`</ph>。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法通过调用&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;确定相等性</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;要在中查找<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">搜索的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 （零） 为有效值空列表中。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
          <target state="translated">要搜索的部分中的元素数。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that starts at <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> and contains <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p4">&lt;/code&gt;</ept> number of elements, if found; otherwise, -1.</source>
          <target state="translated">第一个匹配项的从零开始索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>中的元素范围内<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>开始<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">startIndex</ph> <ept id="p3">&lt;/code&gt;</ept>和包含<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">count</ph> <ept id="p4">&lt;/code&gt;</ept>个元素，如果找到; 否则为-1。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>超出的有效索引范围<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>未指定有效部分中的<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Inserts an element into the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified index.</source>
          <target state="translated">将元素插入<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的指定索引处。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;接受<ph id="ph1">`null`</ph>作为有效的值，并允许重复的元素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; already equals &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList.Count%2A&gt;已经等于&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;、 容量的&lt;xref:System.Collections.ArrayList&gt;增加通过自动重新分配在内部数组和现有元素被复制到新数组中，在添加新的元素之前。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`index`</ph> is equal to &lt;xref:System.Collections.ArrayList.Count%2A&gt;, <ph id="ph2">`value`</ph> is added to the end of &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">如果<ph id="ph1">`index`</ph>等同于&lt;xref:System.Collections.ArrayList.Count%2A&gt;，<ph id="ph2">`value`</ph>添加到&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;末尾&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">在集合中的连续元素，如列表，在插入点之后的元素将下移以容纳新元素。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶，如哈希表的集合。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <ph id="ph1">`value`</ph> should be inserted.</source>
          <target state="translated">从零开始的索引位置<ph id="ph1">`value`</ph>应插入。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to insert.</source>
          <target state="translated">&lt;xref:System.Object&gt;插入。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>大于<ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Inserts the elements of a collection into the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified index.</source>
          <target state="translated">将集合中的元素插入<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的指定索引处。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;接受<ph id="ph1">`null`</ph>作为有效的值，并允许重复的元素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>If the new &lt;xref:System.Collections.ArrayList.Count%2A&gt; (the current &lt;xref:System.Collections.ArrayList.Count%2A&gt; plus the size of the collection) will be greater than &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</source>
          <target state="translated">如果新&lt;xref:System.Collections.ArrayList.Count%2A&gt;(当前&lt;xref:System.Collections.ArrayList.Count%2A&gt;plus 集合的大小) 将大于&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;、 容量的&lt;xref:System.Collections.ArrayList&gt;增加通过自动重新分配以容纳新元素，在内部数组和现有元素被复制到新数组中，在添加新的元素之前。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`index`</ph> is equal to &lt;xref:System.Collections.ArrayList.Count%2A&gt;, the elements are added to the end of &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">如果<ph id="ph1">`index`</ph>等于&lt;xref:System.Collections.ArrayList.Count%2A&gt;，元素添加到&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;末尾&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The order of the elements in the &lt;xref:System.Collections.ICollection&gt; is preserved in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">中&lt;xref:System.Collections.ICollection&gt;保留在&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ICollection&gt;元素的顺序</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">在集合中的连续元素，如列表，在插入点之后的元素将下移以容纳新元素。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶，如哈希表的集合。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements to be added and <ph id="ph5">`m`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) 操作，其中<ph id="ph4">`n`</ph>是要添加的元素的数目和<ph id="ph5">`m`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">从零开始的索引，应在此处插入新元素。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements should be inserted into the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;应将其元素插入到<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The collection itself cannot be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but it can contain elements that are <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">集合自身不能为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，但它可以包含的元素<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>大于<ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合不允许添加或移除元素后的集合在创建，但是允许修改现有元素。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是只是一个集合的包装器防止添加和移除元素;因此，如果对基础集合，包括添加或移除元素，进行更改的固定大小的集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>具有固定大小; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">集合是只读的不允许添加、 移除或修改元素的集合在创建后。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">集合是只读的是只是一个集合与防止集合; 进行修改的包装因此，如果对基础集合进行更改，只读集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值是一个 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>只读的; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is synchronized (thread safe).</source>
          <target state="translated">获取一个值，该值指示是否访问<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是同步的 （线程安全）。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.ArrayList&gt;, all operations must be done through the wrapper returned by the &lt;xref:System.Collections.ArrayList.Synchronized%2A&gt; method.</source>
          <target state="translated">若要确保的线程安全性&lt;xref:System.Collections.ArrayList&gt;，所有操作必须通过返回的包装器来都完成&lt;xref:System.Collections.ArrayList.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.ArrayList.Synchronized%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果访问<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是同步的 （线程安全）; 否则为<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">获取或设置指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The Item returns an &lt;xref:System.Object&gt;, so you may need to cast the returned value to the original type in order to manipulate it.</source>
          <target state="translated">项目返回的&lt;xref:System.Object&gt;，因此你可能需要强制转换为原始类型以便操作它。 返回的值&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>It is important to note that &lt;xref:System.Collections.ArrayList&gt; is not a strongly-typed collection.</source>
          <target state="translated">务必请注意，&lt;xref:System.Collections.ArrayList&gt;不是强类型集合。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>For a strongly-typed alternative, see &lt;xref:System.Collections.Generic.List%601&gt;.</source>
          <target state="translated">强类型的替代项，请参阅&lt;xref:System.Collections.Generic.List%601&gt;。&lt;/xref:System.Collections.Generic.List%601&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;接受<ph id="ph1">`null`</ph>作为有效的值，并允许重复的元素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">此属性提供能够通过使用以下语法访问集合中的特定元素︰ <ph id="ph1">`myCollection[index]`</ph>。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the Item property.</source>
          <target state="translated">C# 语言使用关键字来定义而不是实现项属性的索引器。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Visual Basic implements Item as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 实现为默认属性，它提供相同的索引功能的项。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算 o （1）;设置属性也是 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">要获取或设置元素的从零开始索引。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The element at the specified index.</source>
          <target state="translated">指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>等于或大于<ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the last occurrence within the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">搜索指定&lt;xref:System.Object&gt;并返回在整个的最后一个匹配项的从零开始索引<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched backward starting at the last element and ending at the first element.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;向后搜索的最后一个元素开始，在第一个元素结束。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法执行的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;要在中查找<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the entire the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">最后一个匹配项的从零开始索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>在整个<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，如果找到; 否则为-1。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the last occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that extends from the first element to the specified index.</source>
          <target state="translated">搜索指定&lt;xref:System.Object&gt;并返回中的元素范围内最后一个匹配项的从零开始索引<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，扩展的第一个元素到指定的索引。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at the first element.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;是搜索向后开始<ph id="ph1">`startIndex`</ph>和结束的第一个元素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements from the beginning of the &lt;xref:System.Collections.ArrayList&gt; to <ph id="ph3">`startIndex`</ph>.</source>
          <target state="translated">此方法执行的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是从开始处的元素数目&lt;xref:System.Collections.ArrayList&gt;到<ph id="ph3">`startIndex`</ph>。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法通过调用&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;确定相等性</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;要在中查找<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">向后搜索的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that extends from the first element to <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">startIndex</ph><ept id="p3">&lt;/code&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">最后一个匹配项的从零开始索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>中的元素范围内<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>扩展从第一个元素到<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">startIndex</ph> <ept id="p3">&lt;/code&gt;</ept>，如果找到; 否则为-1。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>超出的有效索引范围<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the last occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">搜索指定&lt;xref:System.Object&gt;并返回中的元素范围内最后一个匹配项的从零开始索引<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含指定的数量的元素以指定的索引位置结尾。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph> minus <ph id="ph3">`count`</ph> plus 1, if <ph id="ph4">`count`</ph> is greater than 0.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;是搜索向后开始<ph id="ph1">`startIndex`</ph>结束<ph id="ph2">`startIndex`</ph>减<ph id="ph3">`count`</ph>加上 1，如果<ph id="ph4">`count`</ph>大于 0。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">此方法执行的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`count`</ph>。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法通过调用&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;确定相等性</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>以确定是否存在项。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>参数的集合中的对象。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;要在中查找<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">向后搜索的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
          <target state="translated">要搜索的部分中的元素数。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that contains <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p3">&lt;/code&gt;</ept> number of elements and ends at <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">startIndex</ph><ept id="p4">&lt;/code&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">最后一个匹配项的从零开始索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>中的元素范围内<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>包含<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p3">&lt;/code&gt;</ept>元素在为止的<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">startIndex</ph> <ept id="p4">&lt;/code&gt;</ept>，如果找到; 否则为-1。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>超出的有效索引范围<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>未指定有效部分中的<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Returns a read-only <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper.</source>
          <target state="translated">返回只读的<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包装器。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>To prevent any modifications to <ph id="ph1">`list`</ph>, expose <ph id="ph2">`list`</ph> only through this wrapper.</source>
          <target state="translated">若要防止对<ph id="ph1">`list`</ph>，公开<ph id="ph2">`list`</ph>只通过此包装器。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</source>
          <target state="translated">是只读的集合是只需使用的包装器可防止修改集合的集合。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>If changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">如果对基础集合进行更改，只读集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to wrap.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包装。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>A read-only <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper around <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">list</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">只读<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>周围包装<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">list</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Returns a read-only &lt;xref:System.Collections.IList&gt; wrapper.</source>
          <target state="translated">返回只读的&lt;xref:System.Collections.IList&gt;包装。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>To prevent any modifications to <ph id="ph1">`list`</ph>, expose <ph id="ph2">`list`</ph> only through this wrapper.</source>
          <target state="translated">若要防止对<ph id="ph1">`list`</ph>，公开<ph id="ph2">`list`</ph>只通过此包装器。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</source>
          <target state="translated">是只读的集合是只需使用的包装器可防止修改集合的集合。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>If changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">如果对基础集合进行更改，只读集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to wrap.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;包装。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>A read-only &lt;xref:System.Collections.IList&gt; wrapper around <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">list</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">只读&lt;xref:System.Collections.IList&gt;周围包装<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">list</ph> <ept id="p1">&lt;/code&gt;</ept>。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of a specific object from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">移除中的特定对象的第一个匹配项<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified object, the &lt;xref:System.Collections.ArrayList&gt; remains unchanged.</source>
          <target state="translated">如果&lt;xref:System.Collections.ArrayList&gt;不包含指定的对象，&lt;xref:System.Collections.ArrayList&gt;保持不变。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>No exception is thrown.</source>
          <target state="translated">不引发异常。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法执行的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">此方法通过调用&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;确定相等性</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素，如列表，集合中移除的元素下面的元素的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶，如哈希表的集合。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to remove from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;要从此<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">移除的指定索引处的元素<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>After the element is removed, the size of the collection is adjusted and the value of the &lt;xref:System.Collections.ArrayList.Count%2A&gt; property is decreased by one.</source>
          <target state="translated">移除元素后，调整集合的大小和的值&lt;xref:System.Collections.ArrayList.Count%2A&gt;属性减少&amp;1;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素，如列表，集合中移除的元素下面的元素的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶，如哈希表的集合。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">要移除的元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">-<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>等于或大于<ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Removes a range of elements from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">中移除的元素从一系列<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素，如列表，集合中移除的元素下面的元素的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶，如哈希表的集合。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range of elements to remove.</source>
          <target state="translated">要移除的元素范围的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The number of elements to remove.</source>
          <target state="translated">要移除的元素数。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>不表示有效的一系列元素中<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose elements are copies of the specified value.</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>其元素是指定的值的副本。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;接受<ph id="ph1">`null`</ph>作为有效的值，并允许重复的元素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`count`</ph>。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to copy multiple times in the new <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;，多次将中复制新<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">该值可以为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The number of times <ph id="ph1">`value`</ph> should be copied.</source>
          <target state="translated">次数<ph id="ph1">`value`</ph>应复制。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">count</ph><ept id="p2">&lt;/code&gt;</ept> number of elements, all of which are copies of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">count</ph> <ept id="p2">&lt;/code&gt;</ept>个元素，这些全部都是份<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p3">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements in the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">整个中的元素的顺序反转<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt; to reverse the order of the elements, such that the element at &lt;xref:System.Collections.ArrayList&gt; [i], where i is any index within the range, moves to &lt;xref:System.Collections.ArrayList&gt; [j], where j equals <ph id="ph1">`index`</ph><ph id="ph2"> + </ph><ph id="ph3">`index`</ph><ph id="ph4"> + </ph><ph id="ph5">`count`</ph> - i - 1.</source>
          <target state="translated">此方法使用&lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt;若要反转的元素的顺序以便处的元素&lt;xref:System.Collections.ArrayList&gt;[i] 其中 i 表示的范围内的任何索引移动到&lt;xref:System.Collections.ArrayList&gt;[j] 其中 j 等于<ph id="ph1">`index`</ph> <ph id="ph2"> + </ph> <ph id="ph3">`index`</ph> <ph id="ph4"> + </ph> <ph id="ph5">`count`</ph> -i-1。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Array.Reverse%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements in the specified range.</source>
          <target state="translated">指定范围中的元素的顺序反转。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt; to reverse the order of the elements, such that the element at &lt;xref:System.Collections.ArrayList&gt; [i], where i is any index within the range, moves to &lt;xref:System.Collections.ArrayList&gt; [j], where j equals <ph id="ph1">`index`</ph><ph id="ph2"> + </ph><ph id="ph3">`index`</ph><ph id="ph4"> + </ph><ph id="ph5">`count`</ph> - i - 1.</source>
          <target state="translated">此方法使用&lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt;若要反转的元素的顺序以便处的元素&lt;xref:System.Collections.ArrayList&gt;[i] 其中 i 表示的范围内的任何索引移动到&lt;xref:System.Collections.ArrayList&gt;[j] 其中 j 等于<ph id="ph1">`index`</ph> <ph id="ph2"> + </ph> <ph id="ph3">`index`</ph> <ph id="ph4"> + </ph> <ph id="ph5">`count`</ph> -i-1。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Array.Reverse%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`count`</ph>。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range to reverse.</source>
          <target state="translated">要反转的范围的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>The number of elements in the range to reverse.</source>
          <target state="translated">要反转的范围中的元素数。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>不表示有效的一系列元素中<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Copies the elements of a collection over a range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">集合的元素复制中的元素范围内<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;接受<ph id="ph1">`null`</ph>作为有效的值，并允许重复的元素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>The order of the elements in the &lt;xref:System.Collections.ICollection&gt; is preserved in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">中&lt;xref:System.Collections.ICollection&gt;保留在&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ICollection&gt;元素的顺序</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph> + 1) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph> + 1) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The zero-based <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> index at which to start copying the elements of <ph id="ph1">`c`</ph>.</source>
          <target state="translated">从零开始<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的索引，将开始复制的元素<ph id="ph1">`c`</ph>。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements to copy to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;其元素将复制到<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The collection itself cannot be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but it can contain elements that are <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">集合自身不能为<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，但它可以包含的元素<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> plus the number of elements in <ph id="ph2">&lt;code&gt;c&lt;/code&gt;</ph> is greater than <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">- <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> plus 中的元素数<ph id="ph2">&lt;code&gt;c&lt;/code&gt;</ph>大于<ph id="ph3">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>Sorts the elements in the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">在整个中的元素进行排序<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Sort%2A?displayProperty=fullName&gt;, which uses the QuickSort algorithm.</source>
          <target state="translated">此方法使用&lt;xref:System.Array.Sort%2A?displayProperty=fullName&gt;，它使用快速排序算法。&lt;/xref:System.Array.Sort%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</source>
          <target state="translated">快速排序算法是比较 （也称为不稳定排序），这意味着"小于或等于"的排序比较操作将确定这两个元素应首先出现在最后一个已排序的列表。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>However, if two elements are equal, their original order might not be preserved.</source>
          <target state="translated">但是，如果两个元素相等，则可能不会保留其原始顺序。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">与此相反，一个稳定排序保留相等的元素的顺序。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>To perform a stable sort, you must implement a custom &lt;xref:System.Collections.IComparer&gt; interface to use with the other overloads of this method.</source>
          <target state="translated">若要执行一个稳定排序，则必须实现一个自定义&lt;xref:System.Collections.IComparer&gt;接口若要使用此方法的其他重载。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;; in the worst case it is an O(<ph id="ph4">`n`</ph>^2) operation.</source>
          <target state="translated">一般情况下，此方法为 O (<ph id="ph1">`n`</ph>日志<ph id="ph2">`n`</ph>) 操作，其中<ph id="ph3">`n`</ph>是&lt;xref:System.Collections.ArrayList.Count%2A&gt;; 在最坏情况下它复杂度为 O (<ph id="ph4">`n`</ph>^2) 操作。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Sorts the elements in the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified comparer.</source>
          <target state="translated">在整个中的元素进行排序<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的比较器。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Use the Sort method to  sort a list of objects with a custom comparer that implements the &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">使用排序方法的对象的列表进行排序的自定义比较器实现与&lt;xref:System.Collections.IComparer&gt;接口。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`comparer`</ph>, this method uses the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">如果你通过<ph id="ph1">`null`</ph>为<ph id="ph2">`comparer`</ph>，此方法使用&lt;xref:System.IComparable&gt;每个元素的实现。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>In this case, you must make sure that the objects contained in the list implement the &lt;xref:System.Collections.IComparer&gt; interface or an exception will occur.</source>
          <target state="translated">在这种情况下，你必须确保列表中包含的对象实现&lt;xref:System.Collections.IComparer&gt;接口或异常会发生。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>In addition, using the &lt;xref:System.IComparable&gt; implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">此外，使用&lt;xref:System.IComparable&gt;实现意味着此列表将执行比较排序 （也称为不稳定排序）; 即，如果两个元素相等，其顺序可能不会保留。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">与此相反，一个稳定排序保留相等的元素的顺序。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>To perform a stable sort, you must implement a custom &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">若要执行一个稳定排序，则必须实现一个自定义&lt;xref:System.Collections.IComparer&gt;接口。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;; in the worst case it is an O(<ph id="ph4">`n`</ph>^2) operation.</source>
          <target state="translated">一般情况下，此方法为 O (<ph id="ph1">`n`</ph>日志<ph id="ph2">`n`</ph>) 操作，其中<ph id="ph3">`n`</ph>是&lt;xref:System.Collections.ArrayList.Count%2A&gt;; 在最坏情况下它复杂度为 O (<ph id="ph4">`n`</ph>^2) 操作。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;比较元素时要使用的实现。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>-or-       A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) to use the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">-空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在 Visual Basic 中) 使用&lt;xref:System.IComparable&gt;每个元素的实现。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>An error occurred while comparing two elements.</source>
          <target state="translated">比较两个元素时出错。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is passed for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">comparer</ph><ept id="p2">&lt;/code&gt;</ept>, and the elements in the list do not implement &lt;xref:System.IComparable&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为传递<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">comparer</ph> <ept id="p2">&lt;/code&gt;</ept>，并且列表中的元素不实现&lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Sorts the elements in a range of elements in <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified comparer.</source>
          <target state="translated">中的元素范围中的元素进行排序<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的比较器。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`comparer`</ph> is set to <ph id="ph2">`null`</ph>, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>设置为<ph id="ph2">`null`</ph>，此方法将执行比较排序 （也称为不稳定排序）; 即，如果两个元素相等，其顺序可能不会保留。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">与此相反，一个稳定排序保留相等的元素的顺序。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>To perform a stable sort, you must implement a custom &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">若要执行一个稳定排序，则必须实现一个自定义&lt;xref:System.Collections.IComparer&gt;接口。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">`count`</ph>; in the worst case it is an O(n^2) operation.</source>
          <target state="translated">一般情况下，此方法为 O (<ph id="ph1">`n`</ph>日志<ph id="ph2">`n`</ph>) 操作，其中<ph id="ph3">`n`</ph>是<ph id="ph4">`count`</ph>; 在最坏情况下此操作是 O(n^2) 操作。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range to sort.</source>
          <target state="translated">要排序的范围的从零开始的起始索引。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>The length of the range to sort.</source>
          <target state="translated">要排序的范围的长度。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;比较元素时要使用的实现。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>-or-       A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) to use the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">-空引用 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>在 Visual Basic 中) 使用&lt;xref:System.IComparable&gt;每个元素的实现。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>小于零。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid range in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>未指定中的有效范围<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>An error occurred while comparing two elements.</source>
          <target state="translated">比较两个元素时出错。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper that is synchronized (thread safe).</source>
          <target state="translated">返回<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>同步 （线程安全） 的包装。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.ArrayList&gt;, all operations must be done through this wrapper.</source>
          <target state="translated">若要确保的线程安全性&lt;xref:System.Collections.ArrayList&gt;，必须通过此包装器完成所有操作。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to synchronize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>进行同步。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper that is synchronized (thread safe).</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>同步 （线程安全） 的包装。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IList&gt; wrapper that is synchronized (thread safe).</source>
          <target state="translated">返回&lt;xref:System.Collections.IList&gt;同步 （线程安全） 的包装。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.ArrayList&gt;, all operations must be done through this wrapper.</source>
          <target state="translated">若要确保的线程安全性&lt;xref:System.Collections.ArrayList&gt;，必须通过此包装器完成所有操作。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to synchronize.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;进行同步。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; wrapper that is synchronized (thread safe).</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;同步 （线程安全） 的包装。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取可以用于对访问进行同步的对象<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>To create a synchronized version of the &lt;xref:System.Collections.ArrayList&gt;, use the &lt;xref:System.Collections.ArrayList.Synchronized%2A&gt; method.</source>
          <target state="translated">若要创建的同步的版本&lt;xref:System.Collections.ArrayList&gt;，使用&lt;xref:System.Collections.ArrayList.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.ArrayList.Synchronized%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>However, derived classes can provide their own synchronized version of the &lt;xref:System.Collections.ArrayList&gt; using the SyncRoot property.</source>
          <target state="translated">但是，派生的类可以提供自己的同步的版本&lt;xref:System.Collections.ArrayList&gt;使用 SyncRoot 属性。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.ArrayList&gt;, not directly on the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">同步代码必须对执行操作的 SyncRoot &lt;xref:System.Collections.ArrayList&gt;，不是直接对&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">这可确保正确地执行操作的从其他对象派生的集合。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.ArrayList&gt; object.</source>
          <target state="translated">具体地说，这样可保持正确的同步，与可能同时对修改其他线程&lt;xref:System.Collections.ArrayList&gt;对象。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改导致的异常。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">可以用于对访问进行同步的对象<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Copies the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a new &lt;xref:System.Object&gt; array.</source>
          <target state="translated">元素复制<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到新&lt;xref:System.Object&gt;数组。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The elements are copied using &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;, which is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">使用复制元素&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;，这是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt; &lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; array containing copies of the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;数组，其中包含的元素副本<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Copies the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a new array of the specified element type.</source>
          <target state="translated">元素复制<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到新数组的指定的元素类型。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>All of the objects in the &lt;xref:System.Collections.ArrayList&gt; object will be cast to the &lt;xref:System.Type&gt; specified in the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">中的对象的所有&lt;xref:System.Collections.ArrayList&gt;对象强制转换为&lt;xref:System.Type&gt;中指定<ph id="ph1">`type`</ph>参数。&lt;/xref:System.Type&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>The elements are copied using &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;, which is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">使用复制元素&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;，这是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt; &lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>The element &lt;xref:System.Type&gt; of the destination array to create and copy elements to.</source>
          <target state="translated">元素&lt;xref:System.Type&gt;要创建并向其复制元素的目标数组。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>An array of the specified element type containing copies of the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">包含的元素副本的指定的元素类型的数组<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the specified type.</source>
          <target state="translated">源类型<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>无法自动转换为指定的类型。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>Sets the capacity to the actual number of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将容量设置中的元素的实际数目<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">此方法可以用于降低集合的内存开销，如果没有新的元素将添加到集合。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>To reset a &lt;xref:System.Collections.ArrayList&gt; to its initial state, call the &lt;xref:System.Collections.ArrayList.Clear%2A&gt; method before calling TrimToSize.</source>
          <target state="translated">若要重置&lt;xref:System.Collections.ArrayList&gt;为其初始状态，请在调用&lt;xref:System.Collections.ArrayList.Clear%2A&gt;方法之前调用 TrimToSize。&lt;/xref:System.Collections.ArrayList.Clear%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.ArrayList&gt; sets the capacity of the &lt;xref:System.Collections.ArrayList&gt; to the default capacity.</source>
          <target state="translated">截去空&lt;xref:System.Collections.ArrayList&gt;的容量设置&lt;xref:System.Collections.ArrayList&gt;到默认的容量。&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>为&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>是只读的。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有固定的大小。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>