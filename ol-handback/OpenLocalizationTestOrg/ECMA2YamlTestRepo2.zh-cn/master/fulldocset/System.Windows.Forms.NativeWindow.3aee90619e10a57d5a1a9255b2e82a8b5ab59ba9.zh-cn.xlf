<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da3f5e768d7b79b86950d81fdcfab1f93b1ef198</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.NativeWindow.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d918613cbc30ebe4b658446b504a86cb511684c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7e18895f06f339bfde3bd4084de4643a9542e8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a low-level encapsulation of a window handle and a window procedure.</source>
          <target state="translated">提供窗口句柄和窗口过程的低级别的封装。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class automatically manages window class creation and registration.</source>
          <target state="translated">此类自动管理窗口类创建和注册。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A window is not eligible for garbage collection when it is associated with a window handle.</source>
          <target state="translated">窗口句柄与相关联时，窗口未进行垃圾回收。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To ensure proper garbage collection, handles must either be destroyed manually using &lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt; or released using &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;.</source>
          <target state="translated">若要确保正确执行垃圾回收，句柄必须要么销毁使用手动&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;或释放使用&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;.&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt; method is called when the WM_NCDESTROY message is processed.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;处理 WM_NCDESTROY 消息时调用方法。&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This means there are cases in which when you do not need to manually call &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;, but it is good practice to do so.</source>
          <target state="translated">这意味着某些情况下，当在不需要手动调用&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;，但很好的做法执行操作。&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The NativeWindow class provides the following properties and methods to manage handles: &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;, &lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;, &lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;, &lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;, and &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;.</source>
          <target state="translated">NativeWindow 类提供下列属性和方法来管理句柄︰ &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;， &lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;， &lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;， &lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;，和&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;。&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes an instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的实例<bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is the default NativeWindow constructor provided by the compiler.</source>
          <target state="translated">这是由编译器提供的默认 NativeWindow 构造函数。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.NativeWindow&gt; class also has a static constructor that initializes application domain-wide message handlers and hash tables.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.NativeWindow&gt;类还具有静态构造函数初始化应用程序的全域性消息处理程序和哈希表。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Assigns a handle to this window.</source>
          <target state="translated">将句柄分配给此窗口。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt; intercepts window messages sent to the <ph id="ph1">`handle`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;截获发送到的窗口消息<ph id="ph1">`handle`</ph>参数。&lt;/xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt; to reset the handle's window procedure to the default window procedure.</source>
          <target state="translated">使用&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;重置为默认窗口过程的句柄的窗口过程。&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The AssignHandle method calls the &lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; method to indicate that the value of the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property has changed.</source>
          <target state="translated">AssignHandle 方法调用&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;方法，则指示的值&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;属性已更改。&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The handle to assign cannot be in a different application process.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 分配的句柄不能为在不同的应用程序的进程中。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The handle to assign to this window.</source>
          <target state="translated">要分配给此窗口的句柄。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This window already has a handle.</source>
          <target state="translated">此窗口已有的句柄。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The windows procedure for the associated native window could not be retrieved.</source>
          <target state="translated">无法检索关联的本机窗口的窗口过程。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creates a window and its handle with the specified creation parameters.</source>
          <target state="translated">使用指定的创建参数创建一个窗口，其句柄。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`cp`</ph> parameter specifies the values that are passed to the native Win32 <ph id="ph2">`CreateWindowEx`</ph> method to create a window and its handle.</source>
          <target state="translated"><ph id="ph1">`cp`</ph>参数指定的值传递给本机 Win32<ph id="ph2">`CreateWindowEx`</ph>方法来创建一个窗口，其句柄。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt; field is not <ph id="ph1">`null`</ph>, the newly created window handle inherits from the specified class.</source>
          <target state="translated">当&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;字段不是<ph id="ph1">`null`</ph>，继承自指定类的新创建的窗口句柄&lt;/xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, if &lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt; is set to <ph id="ph1">`BUTTON`</ph>, the newly created window is based on the Win32 <ph id="ph2">`BUTTON`</ph> window class.</source>
          <target state="translated">例如，如果&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;设置为<ph id="ph1">`BUTTON`</ph>，新创建的窗口基于 Win32<ph id="ph2">`BUTTON`</ph>窗口类。&lt;/xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.CreateParams.Param%2A&gt; property of the &lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt; object must either be <ph id="ph1">`null`</ph> or reference an instance of a class that was declared as a structure.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.CreateParams.Param%2A&gt;属性&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;对象必须是<ph id="ph1">`null`</ph>或引用已声明为结构类的实例。&lt;/xref:System.Windows.Forms.CreateParams.ClassName%2A&gt; &lt;/xref:System.Windows.Forms.CreateParams.Param%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This code is an excerpt from the example shown in the &lt;xref:System.Windows.Forms.NativeWindow&gt; class overview.</source>
          <target state="translated">此代码摘自中所示的示例&lt;xref:System.Windows.Forms.NativeWindow&gt;类概述。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">为了简洁起见，不显示某些代码。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Forms.NativeWindow&gt; for the whole code listing.</source>
          <target state="translated">请参阅&lt;xref:System.Windows.Forms.NativeWindow&gt;为完整的代码清单。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The class name provided is registered with the operating system.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 向操作系统注册提供的类名称。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.CreateParams"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the creation parameters for this window.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.CreateParams"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，它指定此窗口的创建参数。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The operating system ran out of resources when trying to create the native window.</source>
          <target state="translated">尝试创建本机窗口时，操作系统将用尽了资源。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The native Win32 API could not create the specified window.</source>
          <target state="translated">本机 Win32 API 无法创建指定的窗口。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The handle of the current native window is already assigned; in explanation, the &lt;xref:System.Windows.Forms.NativeWindow.Handle*&gt; property is not equal to &lt;xref:System.IntPtr.Zero&gt;.</source>
          <target state="translated">当前本机窗口的句柄已分配;具体地说，&lt;xref:System.Windows.Forms.NativeWindow.Handle*&gt;属性是否不等于&lt;xref:System.IntPtr.Zero&gt;.&lt;/xref:System.IntPtr.Zero&gt; &lt;/xref:System.Windows.Forms.NativeWindow.Handle*&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Invokes the default window procedure associated with this window.</source>
          <target state="translated">调用与此窗口相关联的默认窗口过程。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Typically, you only call the DefWndProc method when you are intercepting window messages and would like the default window procedure to handle the message.</source>
          <target state="translated">通常，你仅可以调用 DefWndProc 方法时您截获窗口消息，并且想要处理消息的默认窗口过程。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>DefWndProc should not be called to send a window message to the window; call the Win32 <ph id="ph1">`SendMessage`</ph> function instead.</source>
          <target state="translated">不应调用 DefWndProc 以将窗口消息发送到窗口中;调用 Win32<ph id="ph1">`SendMessage`</ph>函数。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It is an error to call DefWndProc when the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property is 0.</source>
          <target state="translated">它是调用 DefWndProc 错误时&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;属性为 0。&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The message that is currently being processed.</source>
          <target state="translated">当前正在处理的消息。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Destroys the window and its handle.</source>
          <target state="translated">销毁窗口和其句柄。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This method destroys the window associated with the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;, sets the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property to 0, and calls the &lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; method to reflect the change.</source>
          <target state="translated">此方法销毁与关联的窗口&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;，设置&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;属性为 0，并调用&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;方法，以反映更改。&lt;/xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Typically, you only call DestroyHandle when you are done with the native window.</source>
          <target state="translated">通常，你仅可以调用 DestroyHandle 完成后使用本机窗口。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.NativeWindow&gt; class automatically will destroy the associated window and release its resources in response to a WM_DESTROY message.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt;&lt;xref:System.Windows.Forms.NativeWindow&gt;类自动将销毁关联的窗口并释放其资源以响应 WM_DESTROY 消息。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Releases the resources associated with this window.</source>
          <target state="translated">释放与此窗口相关联的资源。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The Finalize method removes the Win32 derived class associated with the current &lt;xref:System.Windows.Forms.NativeWindow&gt; instance, releases the handle, and posts a WM_CLOSE message to the associated window.</source>
          <target state="translated">Finalize 方法移除当前与关联的 Win32 派生类&lt;xref:System.Windows.Forms.NativeWindow&gt;实例，释放该句柄，并将 WM_CLOSE 消息发送到关联的窗口。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Retrieves the window associated with the specified handle.</source>
          <target state="translated">检索与指定句柄关联的窗口。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you receive a handle from another method, use this method to retrieve the window associated with the handle.</source>
          <target state="translated">如果您收到来自另一种方法的句柄，则使用此方法来检索与句柄关联的窗口。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The handle must already be owned by another &lt;xref:System.Windows.Forms.NativeWindow&gt; in the current process; otherwise, <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">句柄必须已拥有的另一个&lt;xref:System.Windows.Forms.NativeWindow&gt;在当前进程; 否则为<ph id="ph1">`null`</ph>返回。&lt;/xref:System.Windows.Forms.NativeWindow&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A handle to a window.</source>
          <target state="translated">窗口的句柄。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the specified handle.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>与指定句柄关联。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This method returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the handle does not have an associated window.</source>
          <target state="translated">此方法返回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>句柄没有关联的窗口。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the handle for this window.</source>
          <target state="translated">获取用于此窗口的句柄。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Use this method when calling Windows API methods that require a handle for a window or control.</source>
          <target state="translated">在调用需要窗口或控件的句柄的 Windows API 方法时，请使用此方法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If successful, an &lt;xref:System.IntPtr&gt; representing the handle to the associated native Win32 window; otherwise, 0 if no handle is associated with the window.</source>
          <target state="translated">如果成功，&lt;xref:System.IntPtr&gt;表示句柄到关联的本机 Win32 窗口; 否则为 0，如果没有句柄是与窗口关联。&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Specifies a notification method that is called when the handle for a window is changed.</source>
          <target state="translated">指定更改窗口的句柄时调用的通知方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This method is invoked when the value of the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property has changed.</source>
          <target state="translated">调用此方法时的值&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;属性已更改。&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, manages an unhandled thread exception.</source>
          <target state="translated">当在派生类中重写，管理未经处理的线程异常。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Typically, &lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt; handles thread exceptions.</source>
          <target state="translated">通常情况下，&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;处理线程异常。&lt;/xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Exception&gt; that specifies the unhandled thread exception.</source>
          <target state="translated">&lt;xref:System.Exception&gt;，它指定未经处理的线程异常。&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Releases the handle associated with this window.</source>
          <target state="translated">释放与此窗口关联的句柄。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This method does not destroy the window handle.</source>
          <target state="translated">此方法不会销毁的窗口句柄。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Instead, it sets the handle's window procedure to the default window procedure.</source>
          <target state="translated">相反，它将句柄的窗口过程设置为默认窗口过程。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It sets the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property to 0 and calls &lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; to reflect the change.</source>
          <target state="translated">它将设置&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;属性为 0，并调用&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;以反映更改。&lt;/xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A window automatically calls this method if it receives a native Win32 WM_NCDESTROY message, indicating that Windows has destroyed the handle.</source>
          <target state="translated">如果它收到指示 Windows 已销毁句柄的本机 Win32 WM_NCDESTROY 消息，窗口将自动调用此方法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Invokes the default window procedure associated with this window.</source>
          <target state="translated">调用与此窗口相关联的默认窗口过程。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This method is called when a window message is sent to the handle of the window.</source>
          <target state="translated">窗口消息发送到窗口的句柄时，调用此方法。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is associated with the current Windows message.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>当前的 Windows 消息与该键相关联。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>