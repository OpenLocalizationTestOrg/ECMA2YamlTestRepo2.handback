<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4eea9ca7e256bdd61e34750d92d12a051dcbb496</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.SecurityTokenHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d06a0b9ec0c9abb5ed0dc904b92734bc110ed4c1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">661aa9254f1a9b6259e85a32c3b0fb97514defd4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The abstract base class for security token handlers.</source>
          <target state="translated">安全令牌处理程序的抽象基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Called from constructors in derived classes to initialize the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">从初始化派生类中的构造函数调用<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</source>
          <target state="translated">返回一个值，该值指示引用的 XML 元素指定的 XML 读取器是否可以反序列化此实例的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`false`</ph> to indicate that the key identifier clause cannot be read.</source>
          <target state="translated">默认实现返回<ph id="ph1">`false`</ph>以指示无法读取密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</source>
          <target state="translated">派生的类将检查以确定实例是否可以反序列化密钥标识符子句引用读取器的元素。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This is typically accomplished through a call to the &lt;xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=fullName&gt; method with the appropriate element and namespace strings specified.</source>
          <target state="translated">这通常通过调用&lt;xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=fullName&gt;与指定的相应元素和命名空间字符串的方法。&lt;/xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you override CanReadKeyIdentifierClause, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt; method to provide the logic to deserialize the key identifier clause.</source>
          <target state="translated">如果你替代 CanReadKeyIdentifierClause，还必须重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt;方法以提供逻辑来反序列化密钥标识符子句。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element.</source>
          <target state="translated">XML 读取器定位的开始元素处。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The reader should not be advanced by this method.</source>
          <target state="translated">此方法不应前进读取器。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause*&gt; method can read the element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause*&gt;方法可以读取元素; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause*&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</source>
          <target state="translated">返回一个值，该值指示指定的字符串是否可以反序列化为处理的此实例的类型的令牌。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">默认实现始终返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you override this method, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method to provide the logic to deserialize the token.</source>
          <target state="translated">如果你重写此方法，还必须重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;方法以提供进行反序列化令牌的逻辑。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The token string to read.</source>
          <target state="translated">要读取的令牌字符串。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method can read the element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>方法可以读取元素; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</source>
          <target state="translated">返回一个值，该值指示是否可以处理此实例的类型的令牌作为读取由指定的 XML 读取器引用的 XML 元素。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">默认实现始终返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</source>
          <target state="translated">派生的类将检查以确定实例是否可以反序列化安全令牌引用读取器的元素。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is typically accomplished through a call to the &lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt; method with the appropriate element and namespace strings specified.</source>
          <target state="translated">这通常通过调用&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;与指定的相应元素和命名空间字符串的方法。&lt;/xref:System.Xml.XmlReader.IsStartElement%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you override &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method or the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method to provide the logic to deserialize the key identifier clause.</source>
          <target state="translated">如果你重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;，还必须重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;方法或&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;方法以提供逻辑来反序列化密钥标识符子句。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at a start element.</source>
          <target state="translated">XML 读取器定位开始元素处。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The reader should not be advanced by this method.</source>
          <target state="translated">此方法不应前进读取器。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method can read the element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>方法可以读取元素; 否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the handler supports validation of security tokens.</source>
          <target state="translated">获取一个值，该值指示处理程序是否支持验证安全令牌。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To implement validation in a derived class, override this property to return <ph id="ph1">`true`</ph> and override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt; method to implement the validation logic.</source>
          <target state="translated">若要在派生类中实现验证，重写此属性以返回<ph id="ph1">`true`</ph>，并重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;方法以实现验证逻辑。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the class is capable of validating security tokens; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此类是能够验证安全令牌;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</source>
          <target state="translated">返回一个值，该值指示指定的密钥标识符子句是否可以序列化此实例。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">默认实现始终返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you override CanWriteKeyIdentifierClause, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt; method to provide the logic to serialize the key identifier clause.</source>
          <target state="translated">如果你替代 CanWriteKeyIdentifierClause，还必须重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt;方法以提供要序列化密钥标识符子句的逻辑。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The key identifier clause to be checked.</source>
          <target state="translated">要检查的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the key identifier clause can be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果可以序列化密钥标识符子句;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the handler can serialize security tokens.</source>
          <target state="translated">获取一个值，该值指示处理程序是否可以序列化安全令牌。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To implement serialization in a derived class, override this property to return <ph id="ph1">`true`</ph> and override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt; methods to implement the serialization logic.</source>
          <target state="translated">若要在派生类中实现序列化，重写此属性以返回<ph id="ph1">`true`</ph>，并重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;方法来实现的序列化逻辑。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the class is capable of serializing tokens; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此类是可以序列化令牌;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that provides configuration for the current instance.</source>
          <target state="translated">获取或设置<bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>提供当前实例的配置的对象。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The configuration object for the current instance.</source>
          <target state="translated">当前实例的的配置对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the token handler collection that contains the current instance.</source>
          <target state="translated">获取包含当前实例的标记处理程序集合。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When the token handler is added to a &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt; instance, this property is automatically set.</source>
          <target state="translated">当令牌处理程序添加到&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;实例，自动设置此属性。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The token handler collection that contains the current instance.</source>
          <target state="translated">包含当前实例的标记处理程序集合。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates the security token reference for tokens processed by that class.</source>
          <target state="translated">当在派生类中重写，创建由该类处理的令牌的安全令牌引用。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This method is typically called by a security token service (STS).</source>
          <target state="translated">通常由安全令牌服务 (STS) 调用此方法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">默认情况下此方法将引发&lt;xref:System.NotImplementedException&gt;异常。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Derived classes override this method to return a key identifier clause (&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;) that can be used to create a <ph id="ph1">`&lt;wsse:SecurityTokenReference&gt;`</ph> element for the specified token.</source>
          <target state="translated">派生的类重写此方法以返回密钥标识符子句 (&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;) 可以用于创建<ph id="ph1">`&lt;wsse:SecurityTokenReference&gt;`</ph>元素指定的标记。&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Called from implementations of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class.</source>
          <target state="translated">从&lt;xref:System.IdentityModel.SecurityTokenService&gt;类&lt;/xref:System.IdentityModel.SecurityTokenService&gt;的实现调用</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt; does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">通常情况下，&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;不需要时要使用，而不创建自定义安全令牌服务。&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">当安全令牌服务返回安全令牌时，已颁发的安全令牌将包含对附加的和未附加安全令牌的引用。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</source>
          <target state="translated">附加的引用指包含在 SOAP 消息的安全标头的安全令牌，而未附加的引用则引用未包含在 SOAP 消息的安全标头的安全令牌。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">这些引用通常确认已颁发的安全令牌的真实性。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The token for which the reference is to be created.</source>
          <target state="translated">引用要为其创建标记。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if an attached reference should be created; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if an unattached reference should be created.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应创建附加的引用;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果应创建一个未附加的引用。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A key identifier clause that references the specified token.</source>
          <target state="translated">引用指定的标记的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a security token using the specified token descriptor.</source>
          <target state="translated">当在派生类中重写，创建使用指定的令牌描述符的安全令牌。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This method is called by a security token service (STS).</source>
          <target state="translated">由安全令牌服务 (STS) 调用此方法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">默认情况下此方法将引发&lt;xref:System.NotImplementedException&gt;异常。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Called from implementations of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class.</source>
          <target state="translated">从&lt;xref:System.IdentityModel.SecurityTokenService&gt;类&lt;/xref:System.IdentityModel.SecurityTokenService&gt;的实现调用</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The security token descriptor from which the token is to be created.</source>
          <target state="translated">是要创建令牌的安全令牌描述符。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Properties of the token descriptor are set before this method is called.</source>
          <target state="translated">调用此方法之前设置的令牌描述符的属性。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A security token that matches the properties of the token descriptor.</source>
          <target state="translated">相匹配的令牌描述符的属性的安全令牌。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</source>
          <target state="translated">当在派生类中重写，则引发异常，如果作为在重播检测到指定的标记。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The token to check for replay.</source>
          <target state="translated">要检查重播的标记。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</source>
          <target state="translated">当在派生类中重写，以标识处理由派生类的类型的令牌的请求中返回使用的 Uri 的集。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the token processed by the current instance is accessed through the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Type&gt;访问处理的当前实例的令牌的通过&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt;属性。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The GetTokenTypeIdentifiers method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</source>
          <target state="translated">GetTokenTypeIdentifiers 方法来指代的令牌类型的消息中返回的一套可接受可以使用的标识符。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, the URI value used in the <ph id="ph1">`&lt;wst:TokenType&gt;`</ph> element under the <ph id="ph2">`&lt;wst:RequestSecurityToken&gt;`</ph> element to request a specific kind of token (represented by the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=fullName&gt; property in the object model).</source>
          <target state="translated">例如，URI 值用在<ph id="ph1">`&lt;wst:TokenType&gt;`</ph>元素下的<ph id="ph2">`&lt;wst:RequestSecurityToken&gt;`</ph>元素来请求特定类型的令牌 (由表示&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=fullName&gt;对象模型中的属性)。&lt;/xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The set of URIs that identify the token type that this handler supports.</source>
          <target state="translated">用于标识此处理程序支持的令牌类型 Uri 集。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, loads custom configuration from XML.</source>
          <target state="translated">当在派生类中重写，则从 XML 加载自定义配置。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The configuration XML elements.</source>
          <target state="translated">配置 XML 元素。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Each node in the list is of type <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">在列表中的每个节点属于类型<bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</source>
          <target state="translated">当在派生类中重写，反序列化到引用的派生类中处理的令牌的密钥标识符子句指定的 XML 读取器引用的 XML。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">默认情况下此方法将引发&lt;xref:System.NotImplementedException&gt;异常。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to deserialize a key identifier clause from XML.</source>
          <target state="translated">重写此方法以提供逻辑，以反序列化 XML 中的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">如果你重写此方法，则还应重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</source>
          <target state="translated">XML 读取器定位 XML 进行反序列化到的密钥标识符子句的开始元素处。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The key identifier clause that was deserialized from the XML.</source>
          <target state="translated">从 XML 的反序列化密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</source>
          <target state="translated">当在派生类中重写，反序列化的派生类中处理的类型的令牌的指定的字符串。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt; 调用此方法不受信任的数据会带来安全风险。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Call this method only with trusted data.</source>
          <target state="translated">调用此方法仅受信任的数据。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>不受信任的数据安全风险<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">默认情况下此方法将引发&lt;xref:System.NotImplementedException&gt;异常。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Override this method to provide functionality that can deserialize a security token from a string.</source>
          <target state="translated">重写此方法以提供可以反序列化从字符串的安全令牌的功能。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If you override, this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">如果你重写，此方法，则还应重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The string to be deserialized.</source>
          <target state="translated">要反序列化的字符串。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The security token that was deserialized from the specified string.</source>
          <target state="translated">从指定的字符串的反序列化安全令牌。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</source>
          <target state="translated">当在派生类中重写，反序列化指定的 XML 读取器为处理的派生类的类型的令牌引用的 XML。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt; 调用此方法不受信任的数据会带来安全风险。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Call this method only with trusted data.</source>
          <target state="translated">调用此方法仅受信任的数据。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>不受信任的数据安全风险<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">默认情况下此方法将引发&lt;xref:System.NotImplementedException&gt;异常。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to deserialize a security token from XML.</source>
          <target state="translated">重写此方法以提供逻辑，以反序列化 XML 中的安全令牌。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">如果你重写此方法，则还应重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an &lt;xref:System.Xml.XmlException&gt;.</source>
          <target state="translated">通常情况下，在派生类中，如果该方法无法反序列化的令牌引用的 XML，它将引发&lt;xref:System.Xml.XmlException&gt;.&lt;/xref:System.Xml.XmlException&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the token.</source>
          <target state="translated">令牌的开始元素处 XML 读取器。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The security token that was deserialized from the XML.</source>
          <target state="translated">从 XML 的反序列化安全令牌。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</source>
          <target state="translated">当在派生类中重写，反序列化到由派生类通过使用指定的标记解析程序处理的类型的令牌指定的 XML 读取器引用的 XML。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>1&gt; 调用此方法不受信任的数据会带来安全风险。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Call this method only with trusted data.</source>
          <target state="translated">调用此方法仅受信任的数据。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>不受信任的数据安全风险<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The default implementation ignores the <ph id="ph1">`tokenResolver`</ph> parameter and delegates the call to the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">默认实现会忽略<ph id="ph1">`tokenResolver`</ph>参数并将调用委托给&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to deserialize a security token from XML.</source>
          <target state="translated">重写此方法以提供逻辑，以反序列化 XML 中的安全令牌。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">如果你重写此方法，则还应重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an &lt;xref:System.Xml.XmlException&gt;.</source>
          <target state="translated">通常情况下，在派生类中，如果该方法无法反序列化的令牌引用的 XML，它将引发&lt;xref:System.Xml.XmlException&gt;.&lt;/xref:System.Xml.XmlException&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the token.</source>
          <target state="translated">令牌的开始元素处 XML 读取器。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A token resolver that contains out-of-band and cached tokens.</source>
          <target state="translated">令牌解析程序包含带外和缓存令牌的说明。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The security token that was deserialized from the XML.</source>
          <target state="translated">从 XML 的反序列化安全令牌。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the type of the security token that is processed by this instance.</source>
          <target state="translated">当在派生类中重写，获取此实例处理的安全令牌的类型。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You must override this property in derived classes and return the &lt;xref:System.Type&gt; of the security token (&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;) that is processed by the derived class.</source>
          <target state="translated">你必须重写此属性在派生类中的，并返回&lt;xref:System.Type&gt;的安全令牌 (&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;) 派生的类进行处理的&lt;/xref:System.IdentityModel.Tokens.SecurityToken&gt;&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The type of the security token that is processed by this instance.</source>
          <target state="translated">处理此实例的安全令牌的类型。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Traces the failure event during the validation of security tokens when tracing is enabled.</source>
          <target state="translated">启用跟踪时的安全令牌验证期间跟踪故障事件。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This method should be called from the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt; method when validation of the token fails.</source>
          <target state="translated">此方法应从调用&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;令牌验证失败时的方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The security token that is being validated.</source>
          <target state="translated">正在验证安全令牌。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The message to write to the trace.</source>
          <target state="translated">要写入跟踪的消息。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Traces the successful validation of security tokens event when tracing is enabled.</source>
          <target state="translated">跟踪安全令牌事件启用跟踪时成功验证。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This method should be called from the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt; method after the token has been successfully validated.</source>
          <target state="translated">此方法应从调用&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;方法后成功验证令牌。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The token that was validated.</source>
          <target state="translated">验证令牌。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, validates the specified security token.</source>
          <target state="translated">当在派生类中重写，验证指定的安全令牌。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">令牌必须由派生的类处理的类型。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The token to validate.</source>
          <target state="translated">要验证的标记。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The identities contained in the token.</source>
          <target state="translated">在令牌中包含的标识。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the specified key identifier clause to XML.</source>
          <target state="translated">当在派生类中重写，序列化到 XML 的指定的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The key identifier clause must be of the type supported by the derived class.</source>
          <target state="translated">通过派生的类支持必须是类型的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">默认情况下此方法将引发&lt;xref:System.NotImplementedException&gt;异常。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to serialize a key identifier clause to XML.</source>
          <target state="translated">重写此方法以提供逻辑，以序列化到 XML 的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt; method.</source>
          <target state="translated">如果你重写此方法，则还应重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;方法。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The XML writer.</source>
          <target state="translated">XML 编写器。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The key identifier clause to serialize.</source>
          <target state="translated">要序列化的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the specified security token to a string.</source>
          <target state="translated">当在派生类中重写，序列化指定的安全令牌的字符串。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">令牌必须由派生的类处理的类型。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">默认情况下此方法将引发&lt;xref:System.NotImplementedException&gt;异常。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to serialize a security token to XML.</source>
          <target state="translated">重写此方法以提供逻辑，以序列化到 XML 的安全令牌。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt; property.</source>
          <target state="translated">如果你重写此方法，则还应重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;属性。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The token to serialize.</source>
          <target state="translated">要序列化的令牌。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The serialized token.</source>
          <target state="translated">序列化的令牌。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the specified security token to XML.</source>
          <target state="translated">当在派生类中重写，序列化到 XML 的指定的安全令牌。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">令牌必须由派生的类处理的类型。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">默认情况下此方法将引发&lt;xref:System.NotImplementedException&gt;异常。&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to serialize a security token to XML.</source>
          <target state="translated">重写此方法以提供逻辑，以序列化到 XML 的安全令牌。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt; property.</source>
          <target state="translated">如果你重写此方法，则还应重写&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;属性。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The XML writer.</source>
          <target state="translated">XML 编写器。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The token to serialize.</source>
          <target state="translated">要序列化的令牌。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>