<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bd7caa82ae55a2966b763cc4755cdcf6036f053</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.OracleClient.OracleLob.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbaa84398094a00be97cc2a4c412a7649d6192d1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3edd14644522bf37966b2bf30006e36d5df4e8ea</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a large object binary (<bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) data type stored on an Oracle server.</source>
          <target state="translated">表示二进制大型对象 (<bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 存储在 Oracle 服务器上的数据类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An OracleLob differs from an &lt;xref:System.Data.OracleClient.OracleBFile&gt; in that the data is stored on the server instead of in a physical file in the operating system.</source>
          <target state="translated">从 oraclelob&lt;xref:System.Data.OracleClient.OracleBFile&gt;在于数据存储的服务器，而不是在操作系统中的物理文件上。&lt;/xref:System.Data.OracleClient.OracleBFile&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It can also be a read-write object, unlike an &lt;xref:System.Data.OracleClient.OracleBFile&gt;, which is always read-only.</source>
          <target state="translated">它还可读写对象，与不同&lt;xref:System.Data.OracleClient.OracleBFile&gt;，这始终是只读的。&lt;/xref:System.Data.OracleClient.OracleBFile&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An OracleLob may be one of these &lt;xref:System.Data.OracleClient.OracleType&gt; data types.</source>
          <target state="translated">OracleLob 可能是下列其中一&lt;xref:System.Data.OracleClient.OracleType&gt;数据类型。&lt;/xref:System.Data.OracleClient.OracleType&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>|OracleType data type|Description|   |--------------------------|-----------------|   |<ph id="ph1">`Blob`</ph>|An Oracle <ph id="ph2">`BLOB`</ph> data type that contains binary data with a maximum size of 4 gigabytes (GB).</source>
          <target state="translated">|OracleType 数据类型 |说明 |  |--------------------------|-----------------|  |<ph id="ph1">`Blob`</ph>|Oracle<ph id="ph2">`BLOB`</ph>包含最大大小为 4 千兆字节 (GB) 的二进制数据的数据类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This maps to an &lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt;.|   |<ph id="ph1">`Clob`</ph>|An Oracle <ph id="ph2">`CLOB`</ph> data type that contains character data, based on the default character set on the server, with a maximum size of 4 GB.</source>
          <target state="translated">此方法映射到类型&lt;xref:System.Byte&gt;&lt;xref:System.Array&gt;。 |  |<ph id="ph1">`Clob`</ph>|Oracle<ph id="ph2">`CLOB`</ph>包含字符数据，基于默认字符的数据类型设置在服务器上，最大大小为 4 GB。 &lt;/xref:System.Array&gt;&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This maps to &lt;xref:System.String&gt;.|   |<ph id="ph1">`NClob`</ph>|An Oracle <ph id="ph2">`NCLOB`</ph> data type that contains character data, based on the national character set on the server with a maximum size of 4 GB.</source>
          <target state="translated">此方法映射到&lt;xref:System.String&gt;。 |  |<ph id="ph1">`NClob`</ph>|Oracle<ph id="ph2">`NCLOB`</ph>基于在具有最大大小为 4 GB 的服务器上的区域字符集包含字符数据的数据类型。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This maps to &lt;xref:System.String&gt;.|       A .NET application developer can retrieve the Oracle <ph id="ph1">`LOB`</ph> values into basic .NET data types, such as &lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt; and &lt;xref:System.String&gt;, or the specialized OracleLob data type.</source>
          <target state="translated">此方法映射到&lt;xref:System.String&gt;。 |      .NET 应用程序开发人员可以检索 Oracle<ph id="ph1">`LOB`</ph>值到基本.NET 数据类型，例如&lt;xref:System.Array&gt;类型的&lt;xref:System.Byte&gt;和&lt;xref:System.String&gt;，或专用的 OracleLob 数据类型。&lt;/xref:System.String&gt; &lt;/xref:System.Byte&gt; &lt;/xref:System.Array&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The OracleLob class supports reading data from and writing to the Oracle <ph id="ph1">`LOB`</ph> in the Oracle database.</source>
          <target state="translated">OracleLob 类支持从读取数据并写入 Oracle <ph id="ph1">`LOB`</ph> Oracle 数据库中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following are the main characteristics of an OracleLob data type that distinguish it from basic .NET data types:      -   After you retrieve the Oracle <ph id="ph1">`LOB`</ph> value from the Oracle database into the OracleLob class, you can change the <ph id="ph2">`LOB`</ph> data in an open transaction and your changes are directly reflected to the database.</source>
          <target state="translated">以下是将它与基本.NET 数据类型区分开来的主要特征 OracleLob 数据类型:-后检索 Oracle<ph id="ph1">`LOB`</ph>值从 Oracle 数据库到 OracleLob 类时，你可以更改<ph id="ph2">`LOB`</ph>打开的事务和所做的更改中的数据直接反映到数据库。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you retrieve the Oracle <ph id="ph1">`LOB`</ph> value into an &lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt; or &lt;xref:System.String&gt; and update these arrays, your changes are not reflected to the database.</source>
          <target state="translated">如果检索 Oracle<ph id="ph1">`LOB`</ph>值到&lt;xref:System.Array&gt;类型的&lt;xref:System.Byte&gt;或&lt;xref:System.String&gt;和更新这些阵列，所做的更改不会反映到数据库。&lt;/xref:System.String&gt; &lt;/xref:System.Byte&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-   When you use the OracleLob class to access a chunk of a <ph id="ph1">`LOB`</ph> value, only that chunk is passed from the Oracle database to the client.</source>
          <target state="translated">-如果你使用 OracleLob 类访问的区块<ph id="ph1">`LOB`</ph>值，只将该块区传递从 Oracle 数据库到客户端。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When you use the &lt;xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt; method to access a chunk of a <ph id="ph1">`LOB`</ph> value, the entire contents of the value are passed from the Oracle database to the client.</source>
          <target state="translated">当你使用&lt;xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt;方法来访问的区块<ph id="ph1">`LOB`</ph>值，该值的整个内容传递从 Oracle 数据库到客户端。&lt;/xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To obtain an OracleLob object, call the &lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt; method.</source>
          <target state="translated">若要获取 OracleLob 对象，请调用&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt;方法。&lt;/xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can construct an OracleLob that is NULL using this format:      <ph id="ph1">```   OracleLob myLob = OracleLob.Null;   ```</ph>       This technique is used primarily to test whether a <ph id="ph2">`LOB`</ph> returned from the server is NULL, as this example illustrates:      <ph id="ph3">```   If(myLob == OracleLob.Null)   ```</ph>       A NULL <ph id="ph4">`LOB`</ph> behaves similarly to a zero-byte <ph id="ph5">`LOB`</ph> in that &lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt; succeeds and always returns zero bytes.</source>
          <target state="translated">您可以构造为使用此格式的 NULL OracleLob:<ph id="ph1">```   OracleLob myLob = OracleLob.Null;   ```</ph>此方法主要用于测试是否<ph id="ph2">`LOB`</ph>从服务器返回为 NULL，如本示例所示︰<ph id="ph3">```   If(myLob == OracleLob.Null)   ```</ph>一个 NULL<ph id="ph4">`LOB`</ph>的行为类似于零字节<ph id="ph5">`LOB`</ph>在于&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;成功并始终返回零字节。&lt;/xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Selecting a <ph id="ph1">`LOB`</ph> column that contains a null value returns &lt;xref:System.Data.OracleClient.OracleLob.Null&gt;.</source>
          <target state="translated">选择<ph id="ph1">`LOB`</ph>包含一个 null 值的列返回&lt;xref:System.Data.OracleClient.OracleLob.Null&gt;.&lt;/xref:System.Data.OracleClient.OracleLob.Null&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You must begin a transaction before obtaining a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">你必须开始事务，然后才能获取临时<ph id="ph1">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;xref:System.Data.OracleClient.OracleDataReader&gt; may fail to obtain data later.</source>
          <target state="translated">否则为&lt;xref:System.Data.OracleClient.OracleDataReader&gt;以获取更高版本的数据可能会失败。&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also open a temporary <ph id="ph1">`LOB`</ph> in Oracle by calling the DBMS_LOB.CREATETEMPORARY system stored procedure and binding a <ph id="ph2">`LOB`</ph> output parameter.</source>
          <target state="translated">你也可以打开一个临时<ph id="ph1">`LOB`</ph>通过调用 DBMS_LOB Oracle 中。CREATETEMPORARY 系统存储过程和绑定<ph id="ph2">`LOB`</ph>输出参数。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>On the client side, a temporary <ph id="ph1">`LOB`</ph> behaves like a table-based <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">在客户端，临时<ph id="ph1">`LOB`</ph>行为类似基于表的<ph id="ph2">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, to update the temporary <ph id="ph1">`LOB`</ph>, it must be enclosed in a transaction.</source>
          <target state="translated">例如，若要更新临时<ph id="ph1">`LOB`</ph>，它必须括在事务中。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following C# example demonstrates how to open a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">下面的 C# 示例演示如何打开一个临时<ph id="ph1">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   OracleConnection connection = new OracleConnection("server=MyServer; integrated security=yes;");   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";   command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   byte[] tempbuff = new byte[10000];   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = "MyTable.MyProc";   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  The inherited &lt;xref:System.IO.Stream.WriteByte%2A&gt; method fails if used with character data, and an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated"><ph id="ph1">```   OracleConnection connection = new OracleConnection("server=MyServer; integrated security=yes;");   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";   command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   byte[] tempbuff = new byte[10000];   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = "MyTable.MyProc";   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>1&gt; 继承&lt;xref:System.IO.Stream.WriteByte%2A&gt;时用于字符数据，方法会失败和&lt;xref:System.InvalidOperationException&gt;引发。&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.IO.Stream.WriteByte%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt; method instead.</source>
          <target state="translated">使用&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;方法相反。&lt;/xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  Temporary <ph id="ph1">`LOB`</ph>s are only closed when the connection is closed, but with pooling and under load, temporary <ph id="ph2">`LOB`</ph>s do not close.</source>
          <target state="translated">&gt;&gt; 临时<ph id="ph1">`LOB`</ph>仅关闭时关闭连接，但进行池和负载情况下，临时<ph id="ph2">`LOB`</ph>不会关闭。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This can be resolved by disposing the temporary <ph id="ph1">`LOB`</ph>, by invoking <ph id="ph2">`tempLob.Dispose()`</ph>.</source>
          <target state="translated">这可以通过释放临时解决<ph id="ph1">`LOB`</ph>，通过调用<ph id="ph2">`tempLob.Dispose()`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Appends data from the specified <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the current <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">将从指定的数据追加<bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到当前<bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>All data from the source <ph id="ph1">`LOB`</ph> is appended to the end of the current <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">来自源的所有数据<ph id="ph1">`LOB`</ph>追加到当前末尾<ph id="ph2">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The position of neither <ph id="ph1">`LOB`</ph> is evaluated or changed during this process.</source>
          <target state="translated">位置都不<ph id="ph1">`LOB`</ph>计算也没有在此过程中更改。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基础数据类型必须始终相同。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, if you are appending from an &lt;xref:System.Data.OracleClient.OracleType&gt;, the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; must also be an &lt;xref:System.Data.OracleClient.OracleType&gt;.</source>
          <target state="translated">例如，如果要将追加来自&lt;xref:System.Data.OracleClient.OracleType&gt;，&lt;xref:System.Data.OracleClient.OracleLob&gt;还必须是&lt;xref:System.Data.OracleClient.OracleType&gt;.&lt;/xref:System.Data.OracleClient.OracleType&gt;&lt;/xref:System.Data.OracleClient.OracleLob&gt;目标&lt;/xref:System.Data.OracleClient.OracleType&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 在此版本中，对只读的写入操作<ph id="ph2">`LOB`</ph>可能会成功，但不会更新<ph id="ph3">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作&lt;xref:System.Data.OracleClient.OracleLob&gt;对象可能会返回写入操作的结果。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to append data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>从中追加数据。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The source <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null.</source>
          <target state="translated">源<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为 null。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The source <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, or the connection is closed.</source>
          <target state="translated">源<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>为 null，或连接已关闭。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The source <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object was closed or disposed.</source>
          <target state="translated">源<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象已关闭或释放。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Prevents server-side triggers from firing while performing multiple read operations.</source>
          <target state="translated">避免服务器端触发器执行多个读取的操作时激发。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Opens the <ph id="ph1">`LOB`</ph> in &lt;xref:System.Data.OracleClient.OracleLobOpenMode&gt; mode; therefore, the <ph id="ph2">`LOB`</ph> can only be read from, not written to, until the corresponding call to &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;.</source>
          <target state="translated">打开<ph id="ph1">`LOB`</ph>中&lt;xref:System.Data.OracleClient.OracleLobOpenMode&gt;模式; 因此，<ph id="ph2">`LOB`</ph>可以只从其中读取，不会写入，直到&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;.&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;相应地调用&lt;/xref:System.Data.OracleClient.OracleLobOpenMode&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To perform batch writes to the <ph id="ph1">`LOB`</ph>, call &lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt; with &lt;xref:System.Data.OracleClient.OracleLobOpenMode&gt;.</source>
          <target state="translated">若要执行批处理写入<ph id="ph1">`LOB`</ph>， &lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt; &lt;xref:System.Data.OracleClient.OracleLobOpenMode&gt;。&lt;/xref:System.Data.OracleClient.OracleLobOpenMode&gt;&lt;/xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;调用</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Calling BeginBatch more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</source>
          <target state="translated">调用不止一次在同一事务中当前的 BeginBatch 引发 Oracle"ORA&amp;22293;: LOB 同一个事务中已经打开了"错误。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In addition, if you obtain the <ph id="ph1">`LOB`</ph> using another &lt;xref:System.Data.OracleClient.OracleDataReader&gt;, and the original caller has not called the &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; method, the same error is generated.</source>
          <target state="translated">此外，如果你获取<ph id="ph1">`LOB`</ph>使用另一个&lt;xref:System.Data.OracleClient.OracleDataReader&gt;，且具有不会调用原始调用方&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;生成方法，相同的错误。&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; &lt;/xref:System.Data.OracleClient.OracleDataReader&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Therefore, you must call the &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; method when you are finished using the &lt;xref:System.Data.OracleClient.OracleLob&gt;.</source>
          <target state="translated">因此，必须调用该&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;方法在完成使用&lt;xref:System.Data.OracleClient.OracleLob&gt;.&lt;/xref:System.Data.OracleClient.OracleLob&gt;时&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Prevents server-side triggers from firing while performing multiple read and write operations in the specified access mode.</source>
          <target state="translated">触发时执行多个读和写操作的指定的访问模式以避免服务器端触发器。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Calling &lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt; more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</source>
          <target state="translated">调用&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;不止一次在同一事务中的当前引发 Oracle"ORA&amp;22293;: LOB 同一个事务中已经打开了"错误。&lt;/xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In addition, if you obtain the <ph id="ph1">`LOB`</ph> using another &lt;xref:System.Data.OracleClient.OracleDataReader&gt;, and the original caller has not called the &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; method, the same error is generated.</source>
          <target state="translated">此外，如果你获取<ph id="ph1">`LOB`</ph>使用另一个&lt;xref:System.Data.OracleClient.OracleDataReader&gt;，且具有不会调用原始调用方&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;生成方法，相同的错误。&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; &lt;/xref:System.Data.OracleClient.OracleDataReader&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Therefore, you must call the &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; method when you are finished using the &lt;xref:System.Data.OracleClient.OracleLob&gt;.</source>
          <target state="translated">因此，必须调用该&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;方法在完成使用&lt;xref:System.Data.OracleClient.OracleLob&gt;.&lt;/xref:System.Data.OracleClient.OracleLob&gt;时&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Mode (one of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLobOpenMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values) in which the <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can be accessed between this BeginBatch call and the corresponding &lt;xref:System.Data.OracleClient.OracleLob.EndBatch*&gt; call.</source>
          <target state="translated">模式 (之一<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLobOpenMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值) 在其中<bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>可以访问此 BeginBatch 调用和相应之间&lt;xref:System.Data.OracleClient.OracleLob.EndBatch*&gt;调用。&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch*&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream can be read.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>可以读取流。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> stream supports reading, otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if a <bpt id="p4">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> is closed or disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>流支持读取，否则<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>如果<bpt id="p4">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>关闭或释放为止。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether forward and backward seek operations can be performed.</source>
          <target state="translated">获取一个值，该值指示是否向前和向后查找操作可以执行。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is closed or disposed, otherwise <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>关闭或断开，否则<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob.Null"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob.Null"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Always returns true, regardless of whether the <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> supports writing or not.</source>
          <target state="translated">始终返回 true，而不管是否<bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是否支持写入。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have started a local transaction.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，你必须已启动对本地事务。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, regardless of whether an opened or undisposed <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> supports writing or not, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if a <bpt id="p4">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> is closed or disposed.</source>
          <target state="translated">始终返回<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，无论的打开或未释放<bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是否，支持写入<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>如果<bpt id="p4">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>关闭或释放为止。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets a value indicating the minimum number of bytes to retrieve from or send to the server during a read/write operation.</source>
          <target state="translated">获取一个值，该值最小从检索或读/写操作期间向服务器发送的字节数。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The value returned by the ChunkSize property is not a setting of the .NET Framework Data Provider for Oracle.</source>
          <target state="translated">ChunkSize 属性返回的值不是适用于 Oracle 的.NET Framework 数据提供程序的设置。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Instead, it is the value that the Oracle Call Interface (OCI) uses when communicating with the server.</source>
          <target state="translated">相反，它是与服务器通信时使用的 Oracle 调用接口 (OCI) 的值。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use ChunkSize to ensure that client-side chunks are the same size.</source>
          <target state="translated">使用 ChunkSize 来确保客户端区块是相同的大小。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Reading or writing in smaller chunks does not cache data, and causes a less-optimized round trip to the server, because a full packet is not received or sent.</source>
          <target state="translated">读取或写入在较小区块中不会缓存数据，并导致到服务器，无优化往返行程，因为未收到或发送完整的数据包。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The minimum number of bytes to retrieve or send.</source>
          <target state="translated">最小要检索或发送的字节数。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that references the same Oracle <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as the original <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">创建一个新<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象引用相同的 Oracle <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>与原始<bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The properties of the new &lt;xref:System.Data.OracleClient.OracleLob&gt; object initially have the same values as those of the original object.</source>
          <target state="translated">新属性&lt;xref:System.Data.OracleClient.OracleLob&gt;对象最初具有与原始对象相同的值。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>However, after the Clone is complete, each &lt;xref:System.Data.OracleClient.OracleLob&gt; object is independent from the other.</source>
          <target state="translated">但是，克隆完成后，每个在&lt;xref:System.Data.OracleClient.OracleLob&gt;对象是相互独立。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, changing the value of the &lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt; property on the original &lt;xref:System.Data.OracleClient.OracleLob&gt; does not change the value of &lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt; on the copy.</source>
          <target state="translated">例如，更改的值&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;原始属性&lt;xref:System.Data.OracleClient.OracleLob&gt;不会更改的值&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;的副本。&lt;/xref:System.Data.OracleClient.OracleLob.Position%2A&gt; &lt;/xref:System.Data.OracleClient.OracleLob&gt; &lt;/xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that references the same Oracle <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as the original <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">一个新<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象引用相同的 Oracle <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>与原始<bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used by this instance of the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的此实例所使用的<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The connection to a data source.</source>
          <target state="translated">到数据源的连接。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Copies from this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a destination <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">从该副本<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到目标<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基础数据类型必须始终相同。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For example, if you are copying from an &lt;xref:System.Data.OracleClient.OracleType&gt;, the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; must also be an &lt;xref:System.Data.OracleClient.OracleType&gt;.</source>
          <target state="translated">例如，如果您从中复制&lt;xref:System.Data.OracleClient.OracleType&gt;，&lt;xref:System.Data.OracleClient.OracleLob&gt;还必须是&lt;xref:System.Data.OracleClient.OracleType&gt;.&lt;/xref:System.Data.OracleClient.OracleType&gt;&lt;/xref:System.Data.OracleClient.OracleLob&gt;目标&lt;/xref:System.Data.OracleClient.OracleType&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">目标偏移量是否超出目标末尾<ph id="ph1">`LOB`</ph>、<ph id="ph2">`LOB`</ph>扩展到其中复制数据。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The space between the end of the <ph id="ph1">`LOB`</ph> and the destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">末尾之间的空间<ph id="ph1">`LOB`</ph>和超出末尾位置的目标偏移量则用零填充<ph id="ph2">`BLOB`</ph>数据类型，以空格<ph id="ph3">`CLOB`</ph>和<ph id="ph4">`NCLOB`</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 在此版本中，对只读的写入操作<ph id="ph2">`LOB`</ph>可能成功，但不是更新<ph id="ph3">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> will be updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>将更新。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作&lt;xref:System.Data.OracleClient.OracleLob&gt;对象可能会返回写入操作的结果。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated">&gt;&gt;<ph id="ph1">`CopyTo`</ph>方法并不会清除目标的内容<ph id="ph2">`OracleLob`</ph>之前执行复制操作。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The destination <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">目标<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The number of bytes copied.</source>
          <target state="translated">复制的字节数。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This excludes any padded bytes.</source>
          <target state="translated">这不包括任何填充的字节。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">destination</ph><ept id="p2">&lt;/code&gt;</ept> parameter is null.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中指定<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">destination</ph> <ept id="p2">&lt;/code&gt;</ept>参数为 null。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">该操作不在事务内<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象为 null，或连接已关闭。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Copies from this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a destination <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> with the specified amount of data.</source>
          <target state="translated">从该副本<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到目标<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>与指定的数据量。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基础数据类型必须始终相同。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For example, if you are copying from an &lt;xref:System.Data.OracleClient.OracleType&gt;, the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; must also be an &lt;xref:System.Data.OracleClient.OracleType&gt;.</source>
          <target state="translated">例如，如果您从中复制&lt;xref:System.Data.OracleClient.OracleType&gt;，&lt;xref:System.Data.OracleClient.OracleLob&gt;还必须是&lt;xref:System.Data.OracleClient.OracleType&gt;.&lt;/xref:System.Data.OracleClient.OracleType&gt;&lt;/xref:System.Data.OracleClient.OracleLob&gt;目标&lt;/xref:System.Data.OracleClient.OracleType&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">目标偏移量是否超出目标末尾<ph id="ph1">`LOB`</ph>、<ph id="ph2">`LOB`</ph>扩展到其中复制数据。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The space between the end of <ph id="ph1">`LOB`</ph> and destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">末尾之间的空间<ph id="ph1">`LOB`</ph>和目标超出末尾位置的偏移量则用零填充<ph id="ph2">`BLOB`</ph>数据类型，以空格<ph id="ph3">`CLOB`</ph>和<ph id="ph4">`NCLOB`</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 在此版本中，对只读的写入操作<ph id="ph2">`LOB`</ph>可能会成功，但不会更新<ph id="ph3">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作&lt;xref:System.Data.OracleClient.OracleLob&gt;对象可能会返回写入操作的结果。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated">&gt;&gt;<ph id="ph1">`CopyTo`</ph>方法并不会清除目标的内容<ph id="ph2">`OracleLob`</ph>之前执行复制操作。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The destination <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated">目标<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The offset to which to copy.</source>
          <target state="translated">要将复制到偏移量。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number of bytes.</source>
          <target state="translated">有关<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数据类型，这必须是偶数个字节。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The number of bytes copied.</source>
          <target state="translated">复制的字节数。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This excludes any padded bytes.</source>
          <target state="translated">这不包括任何填充的字节。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">destination</ph><ept id="p2">&lt;/code&gt;</ept> parameter is full.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中指定<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">destination</ph> <ept id="p2">&lt;/code&gt;</ept>参数已满。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destinationOffset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">中指定的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">destinationOffset</ph> <ept id="p1">&lt;/code&gt;</ept>参数小于零或大于 4 千兆字节。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destinationOffset</ph><ept id="p1">&lt;/code&gt;</ept> parameter for a <bpt id="p2">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> data type is not even.</source>
          <target state="translated">-中指定的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">destinationOffset</ph> <ept id="p1">&lt;/code&gt;</ept>参数<bpt id="p2">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>数据类型不是偶数。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-or-       You must specify <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types as an even number of bytes.</source>
          <target state="translated">-或-你必须指定<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>为偶数的字节的数据类型。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">该操作不在事务内<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象为 null，或连接已关闭。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Copies from this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a destination <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> with the specified amount of data, and the source offset.</source>
          <target state="translated">从该副本<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到目标<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>具有指定量的数据，以及源偏移量。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基础数据类型必须始终相同。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For example, if you are copying from an &lt;xref:System.Data.OracleClient.OracleType&gt;, the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; must also be an &lt;xref:System.Data.OracleClient.OracleType&gt;.</source>
          <target state="translated">例如，如果您从中复制&lt;xref:System.Data.OracleClient.OracleType&gt;，&lt;xref:System.Data.OracleClient.OracleLob&gt;还必须是&lt;xref:System.Data.OracleClient.OracleType&gt;.&lt;/xref:System.Data.OracleClient.OracleType&gt;&lt;/xref:System.Data.OracleClient.OracleLob&gt;目标&lt;/xref:System.Data.OracleClient.OracleType&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">目标偏移量是否超出目标末尾<ph id="ph1">`LOB`</ph>、<ph id="ph2">`LOB`</ph>扩展到其中复制数据。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The space between the end of <ph id="ph1">`LOB`</ph> and destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">末尾之间的空间<ph id="ph1">`LOB`</ph>和目标超出末尾位置的偏移量则用零填充<ph id="ph2">`BLOB`</ph>数据类型，以空格<ph id="ph3">`CLOB`</ph>和<ph id="ph4">`NCLOB`</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 在此版本中，对只读的写入操作<ph id="ph2">`LOB`</ph>可能会成功，但不会更新<ph id="ph3">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作&lt;xref:System.Data.OracleClient.OracleLob&gt;对象可能会返回写入操作的结果。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated">&gt;&gt;<ph id="ph1">`CopyTo`</ph>方法并不会清除目标的内容<ph id="ph2">`OracleLob`</ph>之前执行复制操作。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The offset from which to copy.</source>
          <target state="translated">要从其中复制偏移量。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated">有关<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数据类型，这必须是偶数。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The destination <bpt id="p1">&lt;xref uid="langword_csharp_OracleLob" name="OracleLob" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref href="System.Data.OracleClient"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The destination <bpt id="p1">&lt;xref uid="langword_csharp_OracleLob" name="OracleLob" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref href="System.Data.OracleClient"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The destination offset to which to copy.</source>
          <target state="translated">要将复制到目标偏移量。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated">有关<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数据类型，这必须是偶数。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The quantity of data, in bytes, to copy.</source>
          <target state="translated">数据，以字节为单位，以将复制的数量。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated">有关<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数据类型，这必须是偶数。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The number of bytes copied.</source>
          <target state="translated">复制的字节数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This excludes any padded bytes.</source>
          <target state="translated">这不包括任何填充的字节。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">destination</ph><ept id="p2">&lt;/code&gt;</ept> parameter is full.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中指定<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">destination</ph> <ept id="p2">&lt;/code&gt;</ept>参数已满。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">amount</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">sourceOffset</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">destinationOffset</ph><ept id="p3">&lt;/code&gt;</ept> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">中指定的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">amount</ph> <ept id="p1">&lt;/code&gt;</ept>， <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">sourceOffset</ph> <ept id="p2">&lt;/code&gt;</ept>，或<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">destinationOffset</ph> <ept id="p3">&lt;/code&gt;</ept>参数小于零或大于 4 千兆字节。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">amount</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">sourceOffset</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">destinationOffset</ph><ept id="p3">&lt;/code&gt;</ept> parameter for a <bpt id="p4">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> data type is not even.</source>
          <target state="translated">-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">amount</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">sourceOffset</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">destinationOffset</ph><ept id="p3">&lt;/code&gt;</ept> parameter for a <bpt id="p4">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> data type is not even.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">该操作不在事务内<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象为 null，或连接已关闭。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Allows server-side triggers to resume firing after performing multiple write operations.</source>
          <target state="translated">允许服务器端触发器继续执行多个写入操作后的激发。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt; method before you begin performing write operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt;.</source>
          <target state="translated">调用该&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;方法在开始执行写入操作的时间为&lt;xref:System.Data.OracleClient.OracleLob&gt;。&lt;/xref:System.Data.OracleClient.OracleLob&gt;之前&lt;/xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Erases all data from this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">会清除所有数据从此<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Erase does not truncate data.</source>
          <target state="translated">擦除不截断数据。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`LOB`</ph> length remains the same for a <ph id="ph2">`BLOB`</ph> data type, and the erased data is replaced by 0x00.</source>
          <target state="translated"><ph id="ph1">`LOB`</ph>长度保持不变的<ph id="ph2">`BLOB`</ph>数据类型和清除的数据替换为 0x00。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types are replaced by spaces.</source>
          <target state="translated"><ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>数据类型替换为空格。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 在此版本中，对只读的写入操作<ph id="ph2">`LOB`</ph>可能会成功，但不会更新<ph id="ph3">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作&lt;xref:System.Data.OracleClient.OracleLob&gt;对象可能会返回写入操作的结果。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The number of bytes erased.</source>
          <target state="translated">清除的字节数。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">该操作不在事务内<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象为 null，或连接已关闭。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Erases the specified amount of data from this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">清除指定的数量的数据，这<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The sum of the values in the <ph id="ph1">`offset`</ph> and <ph id="ph2">`amount`</ph> parameters can be greater than that of the size of the &lt;xref:System.Data.OracleClient.OracleLob&gt;.</source>
          <target state="translated">中的值的总和<ph id="ph1">`offset`</ph>和<ph id="ph2">`amount`</ph>参数可以是大于&lt;xref:System.Data.OracleClient.OracleLob&gt;.&lt;/xref:System.Data.OracleClient.OracleLob&gt;的大小</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Therefore, specifying a value greater than that returned by the &lt;xref:System.Data.OracleClient.OracleLob.Length%2A&gt; property succeeds; however &lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt; only erases to the end of the &lt;xref:System.Data.OracleClient.OracleLob&gt;.</source>
          <target state="translated">因此，指定的值比返回大&lt;xref:System.Data.OracleClient.OracleLob.Length%2A&gt;属性成功; 但是&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;仅清除到&lt;xref:System.Data.OracleClient.OracleLob&gt;.&lt;/xref:System.Data.OracleClient.OracleLob&gt;末尾&lt;/xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;&lt;/xref:System.Data.OracleClient.OracleLob.Length%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>(Similarly, if a negative value is passed to <ph id="ph1">`offset`</ph>, &lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt; will succeed, but only erase starting from the beginning of the &lt;xref:System.Data.OracleClient.OracleLob&gt;.) This behavior is different from that of the &lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt; and &lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt; methods, and offers the advantage of being able to erase all data from the value specified by <ph id="ph2">`offset`</ph> without making an additional roundtrip to the server to verify the actual size.</source>
          <target state="translated">(同样，如果传递给负值<ph id="ph1">`offset`</ph>，&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;将成功，但从的开头开始，才清除&lt;xref:System.Data.OracleClient.OracleLob&gt;。)&lt;/xref:System.Data.OracleClient.OracleLob&gt; &lt;/xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;此行为是不同的&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;和&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;方法和产品/服务的优势在于能够擦除所有数据值指定<ph id="ph2">`offset`</ph>而不对其他往返进行服务器验证的实际大小。&lt;/xref:System.Data.OracleClient.OracleLob.Write%2A&gt; &lt;/xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt; does not truncate data.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;不会不会截断数据。&lt;/xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`LOB`</ph> length remains the same for a <ph id="ph2">`BLOB`</ph> data type, and the erased data is replaced by 0x00.</source>
          <target state="translated"><ph id="ph1">`LOB`</ph>长度保持不变的<ph id="ph2">`BLOB`</ph>数据类型和清除的数据替换为 0x00。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types are replaced by spaces.</source>
          <target state="translated"><ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>数据类型替换为空格。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 在此版本中，对只读的写入操作<ph id="ph2">`LOB`</ph>可能会成功，但不会更新<ph id="ph3">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作&lt;xref:System.Data.OracleClient.OracleLob&gt;对象可能会返回写入操作的结果。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The offset from which to erase.</source>
          <target state="translated">从要擦除的偏移量。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated">有关<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数据类型，这必须是偶数。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The quantity of data, in bytes, to erase.</source>
          <target state="translated">数据，以字节为单位，擦除数量。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated">有关<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数据类型，这必须是偶数。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The number of bytes erased.</source>
          <target state="translated">清除的字节数。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">该操作不在事务内<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象为 null，或连接已关闭。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Not currently supported.</source>
          <target state="translated">当前不受支持。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>In this release, this method is not functional.</source>
          <target state="translated">在此版本中，此方法不起作用。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether an application called the &lt;xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt; method.</source>
          <target state="translated">获取一个值，该值指示应用程序调用&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt;方法。&lt;/xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>When using an Oracle 8.0.5 server, an Oracle "ORA-00600: internal error code" exception is thrown.</source>
          <target state="translated">当使用 Oracle 8.0.5 服务器，Oracle"ORA 00600︰ 内部错误代码"会引发异常。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if application called the &lt;xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt; method, otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果应用程序调用&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt;方法，否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBFile.Null"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> stream.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBFile.Null"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>流。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBFile.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> stream, otherwise <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBFile.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> stream, otherwise <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a temporary <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取一个值，该值指示是否<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是临时<bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to create a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">下面的示例演示如何创建一个临时<ph id="ph1">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a temporary <bpt id="p3">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, otherwise <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是临时<bpt id="p3">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，否则为<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Gets a value that returns the size of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">获取一个值，返回的大小<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The size of the &lt;xref:System.Data.OracleClient.OracleLob&gt; is always returned in bytes for all data types.</source>
          <target state="translated">大小&lt;xref:System.Data.OracleClient.OracleLob&gt;始终返回以字节为单位的所有数据。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The size of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in bytes.</source>
          <target state="translated">大小<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>以字节为单位。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Gets a value that returns the <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> data type.</source>
          <target state="translated">获取一个值，返回<bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>数据类型。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Data.OracleClient.OracleLob&gt; may be one of the following &lt;xref:System.Data.OracleClient.OracleType&gt; data types.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleLob&gt;可能是下列项之一&lt;xref:System.Data.OracleClient.OracleType&gt;数据类型。&lt;/xref:System.Data.OracleClient.OracleType&gt; &lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>|OracleType data type|Description|   |--------------------------|-----------------|   |<ph id="ph1">`Blob`</ph>|An Oracle <ph id="ph2">`BLOB`</ph> data type that contains binary data with a maximum size of 4 gigabytes.</source>
          <target state="translated">|OracleType 数据类型 |说明 |  |--------------------------|-----------------|  |<ph id="ph1">`Blob`</ph>|Oracle<ph id="ph2">`BLOB`</ph>包含最大大小为 4 千兆字节的二进制数据的数据类型。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>This maps to an &lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt;.|   |<ph id="ph1">`Clob`</ph>|An Oracle <ph id="ph2">`CLOB`</ph> data type that contains character data, based on the default character set on the server, with a maximum size of 4 gigabytes.</source>
          <target state="translated">此方法映射到类型&lt;xref:System.Byte&gt;&lt;xref:System.Array&gt;。 |  |<ph id="ph1">`Clob`</ph>|Oracle<ph id="ph2">`CLOB`</ph>包含字符数据，基于默认字符的数据类型设置在服务器上，最大大小为 4 千兆字节。 &lt;/xref:System.Array&gt;&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This maps to &lt;xref:System.String&gt;.|   |<ph id="ph1">`NClob`</ph>|An Oracle <ph id="ph2">`NCLOB`</ph> data type that contains character data, based on the national character set on the server with a maximum size of 4 gigabytes.</source>
          <target state="translated">此方法映射到&lt;xref:System.String&gt;。 |  |<ph id="ph1">`NClob`</ph>|Oracle<ph id="ph2">`NCLOB`</ph>基于最大大小为 4 千兆字节在服务器上的区域字符集包含字符数据的数据类型。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>This maps to &lt;xref:System.String&gt;.|</source>
          <target state="translated">此方法映射到&lt;xref:System.String&gt;。 |&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types.</source>
          <target state="translated">之一<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>数据类型。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Represents a null <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">表示 null <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>You can construct an &lt;xref:System.Data.OracleClient.OracleLob&gt; that is NULL using this format:      <ph id="ph1">```   OracleLob myLob = OracleLOB.Null;   ```</ph>       This technique is used primarily to test whether a <ph id="ph2">`LOB`</ph> returned from the server is NULL, as this example illustrates:      <ph id="ph3">```   If(myLob == OracleLob.Null)   ```</ph>       A NULL <ph id="ph4">`LOB`</ph> behaves similarly to a zero byte <ph id="ph5">`LOB`</ph> in that &lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt; succeeds and always returns zero bytes.</source>
          <target state="translated">可以构造&lt;xref:System.Data.OracleClient.OracleLob&gt;值为 NULL，使用此格式︰<ph id="ph1">```   OracleLob myLob = OracleLOB.Null;   ```</ph>此方法主要用于测试是否<ph id="ph2">`LOB`</ph>从服务器返回为 NULL，如本示例所示︰<ph id="ph3">```   If(myLob == OracleLob.Null)   ```</ph>一个 NULL<ph id="ph4">`LOB`</ph>的行为类似于零字节<ph id="ph5">`LOB`</ph>在于&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;成功并始终返回零字节。&lt;/xref:System.Data.OracleClient.OracleLob.Read%2A&gt; &lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Gets the current read position in the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream.</source>
          <target state="translated">获取当前读取位置中的<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>流。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The stream must support seeking to get or set the position.</source>
          <target state="translated">流必须支持查找要获取或设置位置。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt; property to determine whether the stream supports seeking.</source>
          <target state="translated">使用&lt;xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt;属性以确定流是否支持查找。&lt;/xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">支持查找到流的长度超出任何位置。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Seeking to an odd position for <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types is also supported.</source>
          <target state="translated">查找到的奇数位置<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>还支持数据类型。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section of the &lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt; property.</source>
          <target state="translated">有关详细信息，请参阅备注部分的&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;属性。&lt;/xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The Position property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</source>
          <target state="translated">位置属性不会不跟踪的从和 / 或已用完，跳过，流的字节数。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The current position within the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream.</source>
          <target state="translated">中的当前位置<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>流。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">连接已关闭。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Reads a sequence of bytes from the current <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream and advances the position within the stream by the number of bytes read.</source>
          <target state="translated">从当前读取的字节序列<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>流以及技术进步读取的字节数的流中的位置。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The Read method reads a maximum of <ph id="ph1">`count`</ph> bytes from the current stream and stores them in <ph id="ph2">`buffer`</ph> beginning at <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">Read 方法读取的最多<ph id="ph1">`count`</ph>字节从当前流，并且将它们存储在<ph id="ph2">`buffer`</ph>开始<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</source>
          <target state="translated">流中的当前位置高级通过读取; 的字节数但是，如果发生异常，将流中的当前位置保持不变。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Read returns the number of bytes read.</source>
          <target state="translated">读取返回读取的字节数。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The return value is zero only if the position is currently at the end of the stream.</source>
          <target state="translated">仅当位置当前在流末尾，则返回值为零。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Read will block until at least one byte of data can be read, in the event that no data is available.Read returns 0 if you attempt to read from a <ph id="ph1">`LOB`</ph> when the current position is at the end of <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">读取将一直阻止到至少一个字节的数据可供读取的事件中不会提供数据。如果你尝试从读取读取，则返回 0<ph id="ph1">`LOB`</ph>当前位置时末尾<ph id="ph2">`LOB`</ph>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Read can return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">读取可以返回少于所请求的字节，即使尚未达到流结尾。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">适用于 Oracle 的.NET Framework 数据提供程序将处理所有<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>为 Unicode 数据。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">因此，在访问时<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>数据类型，你始终处理的字节，其中每个字符是 2 个字节数。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`Read`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">例如，如果包含三个字符的文本字符串保存为<ph id="ph1">`NCLOB`</ph>Oracle 服务器的字符集为每个字符，4 个字节，其中你执行上<ph id="ph2">`Read`</ph>操作，则指定的字符串的长度为 6 个字节，尽管已存储为在服务器上的 12 个字节。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The following C# example demonstrates how to read &lt;xref:System.Data.OracleClient.OracleLob&gt; objects.</source>
          <target state="translated">下面的 C# 示例演示如何读取&lt;xref:System.Data.OracleClient.OracleLob&gt;对象。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   public static void ReadLobExample(OracleCommand command)   {      int actual = 0;         //Select some data.      // Table Schema:      //  "CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)";      //  "INSERT INTO TableWithLobs values (1, 'AA', 'AAA', N'AAAA')";      command.CommandText = "SELECT * FROM TableWithLobs";      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain the LOBs (all 3 varieties).         OracleLob BLOB = reader.GetOracleLob(1);         OracleLob CLOB  = reader.GetOracleLob(2);         OracleLob NCLOB = reader.GetOracleLob(3);            //Example - Reading binary data (in chunks).         byte[] buffer = new byte[100];         while((actual = BLOB.Read(buffer, 0, buffer.Length)) &gt;0)            Console.WriteLine(BLOB.LobType + ".Read(" + buffer + ", " + buffer.Length + ") =&gt; " + actual);            //Example - Reading CLOB/NCLOB data (in chunks).         //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).         //However, because the OracleLob object inherits directly from the.NET stream object,          //all the existing classes that manipluate streams can also be used. For example, the          //.NET StreamReader makes converting the raw bytes into actual characters easier.         StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);         char[] cbuffer = new char[100];         while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) &gt;0)            Console.WriteLine(CLOB.LobType + ".Read(" + new string(cbuffer, 0, actual) + ", " + cbuffer.Length + ") =&gt; " + actual);            //Example - Reading data (all at once).         //You could use StreamReader.ReadToEnd to obtain all the string data,or simply         //call OracleLob.Value to obtain a contiguous allocation of all the data.         Console.WriteLine(NCLOB.LobType + ".Value =&gt; " + NCLOB.Value);      }   }   ```</ph>       You can construct an &lt;xref:System.Data.OracleClient.OracleLob&gt; that is NULL using this format:      <ph id="ph2">```   OracleLob myLob = OracleLob.Null;   ```</ph>       This technique is used primarily to test whether a <ph id="ph3">`LOB`</ph> returned from the server is NULL, as the following example illustrates.</source>
          <target state="translated"><ph id="ph1">```   public static void ReadLobExample(OracleCommand command)   {      int actual = 0;         //Select some data.      // Table Schema:      //  "CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)";      //  "INSERT INTO TableWithLobs values (1, 'AA', 'AAA', N'AAAA')";      command.CommandText = "SELECT * FROM TableWithLobs";      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain the LOBs (all 3 varieties).         OracleLob BLOB = reader.GetOracleLob(1);         OracleLob CLOB  = reader.GetOracleLob(2);         OracleLob NCLOB = reader.GetOracleLob(3);            //Example - Reading binary data (in chunks).         byte[] buffer = new byte[100];         while((actual = BLOB.Read(buffer, 0, buffer.Length)) &gt;0)            Console.WriteLine(BLOB.LobType + ".Read(" + buffer + ", " + buffer.Length + ") =&gt; " + actual);            //Example - Reading CLOB/NCLOB data (in chunks).         //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).         //However, because the OracleLob object inherits directly from the.NET stream object,          //all the existing classes that manipluate streams can also be used. For example, the          //.NET StreamReader makes converting the raw bytes into actual characters easier.         StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);         char[] cbuffer = new char[100];         while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) &gt;0)            Console.WriteLine(CLOB.LobType + ".Read(" + new string(cbuffer, 0, actual) + ", " + cbuffer.Length + ") =&gt; " + actual);            //Example - Reading data (all at once).         //You could use StreamReader.ReadToEnd to obtain all the string data,or simply         //call OracleLob.Value to obtain a contiguous allocation of all the data.         Console.WriteLine(NCLOB.LobType + ".Value =&gt; " + NCLOB.Value);      }   }   ```</ph>您可以构造&lt;xref:System.Data.OracleClient.OracleLob&gt;值为 NULL，使用此格式︰<ph id="ph2">```   OracleLob myLob = OracleLob.Null;   ```</ph>此方法主要用于测试是否<ph id="ph3">`LOB`</ph>从服务器返回为 NULL，如下面的示例所示。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   If(myLob == OracleLob.Null)   ```</ph>       A NULL <ph id="ph2">`LOB`</ph> behaves similarly to a zero byte <ph id="ph3">`LOB`</ph> in that Read succeeds and always returns zero bytes.</source>
          <target state="translated"><ph id="ph1">```   If(myLob == OracleLob.Null)   ```</ph>NULL<ph id="ph2">`LOB`</ph>的行为类似于零字节<ph id="ph3">`LOB`</ph>，读取成功，并始终返回零字节。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>An array of bytes.</source>
          <target state="translated">字节数组。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>When this method returns, the buffer contains the specified byte array with the values between <ph id="ph1">`offset`</ph> and (<ph id="ph2">`offset`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph>) replaced by the bytes read from the current source.</source>
          <target state="translated">此方法返回时，该缓冲区包含指定的字节数组之间的值<ph id="ph1">`offset`</ph>和 (<ph id="ph2">`offset`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph>) 由从当前源中读取的字节替换。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin storing the data read from the current stream.</source>
          <target state="translated">中的从零开始的字节偏移量<ph id="ph1">`buffer`</ph>从此处开始存储读取的数据从当前流。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated">有关<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数据类型，这必须是偶数。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to be read from the current stream.</source>
          <target state="translated">最大要从当前流中读取的字节数。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated">有关<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数据类型，这必须是偶数。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">读取到缓冲区的字节总数。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This may be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</source>
          <target state="translated">这可能小于请求的字节数如果很多字节当前不可用，或为零 (0) 如果已到达流结尾。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> is a null reference (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">buffer</ph> <ept id="p1">&lt;/code&gt;</ept>为空引用 (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>A value in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not positive.</source>
          <target state="translated">中的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>或<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>参数不是正数。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>-or-       The sum of the offset and count parameters is larger than the buffer length.</source>
          <target state="translated">-或者-偏移量和计数参数的总和大于缓冲区长度。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">amount</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">-中指定的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">amount</ph> <ept id="p1">&lt;/code&gt;</ept>或<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">offset</ph> <ept id="p2">&lt;/code&gt;</ept>参数小于零或大于 4 千兆字节。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">该操作不在事务内<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象为 null，或连接已关闭。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Sets the position on the current <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream.</source>
          <target state="translated">对当前设置的位置<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>流。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position must precede the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为负，新位置必须位于之前指定的位置<ph id="ph2">`origin`</ph>按指定的字节数<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is zero, the new position must be the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为零，新位置必须是指定的位置<ph id="ph2">`origin`</ph>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position must follow the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为正，新位置必须遵循指定的位置<ph id="ph2">`origin`</ph>按指定的字节数<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">支持查找到流的长度超出任何位置。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Seeking to an odd position for <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types is also supported.</source>
          <target state="translated">查找到的奇数位置<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>还支持数据类型。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section of the &lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt; property.</source>
          <target state="translated">有关详细信息，请参阅备注部分的&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;属性。&lt;/xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>A byte offset relative to origin.</source>
          <target state="translated">相对于原点的字节偏移量。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position precedes the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为负，新位置之前指定的位置<ph id="ph2">`origin`</ph>按指定的字节数<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is zero, the new position is the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为零，新的位置是由指定的位置<ph id="ph2">`origin`</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position follows the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>为正，通过指定的位置的新位置之后<ph id="ph2">`origin`</ph>按指定的字节数<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>A value of type &lt;xref:System.IO.SeekOrigin&gt; indicating the reference point used to obtain the new position.</source>
          <target state="translated">类型的值&lt;xref:System.IO.SeekOrigin&gt;，该值指示用于获取新位置的参考点。&lt;/xref:System.IO.SeekOrigin&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The new position within the current stream.</source>
          <target state="translated">当前流中的新位置。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">origin</ph><ept id="p1">&lt;/code&gt;</ept> parameter does not contain a valid value.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">origin</ph> <ept id="p1">&lt;/code&gt;</ept>参数不包含有效的值。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The resulting position is beyond the length of the value.</source>
          <target state="translated">生成的位置不在值的长度。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object was closed or disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>对象已关闭或释放。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Sets the length of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream to a value less than the current length.</source>
          <target state="translated">设置的长度<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>流到小于的当前长度的值。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>An attempt to increase the length of the &lt;xref:System.Data.OracleClient.OracleLob&gt; stream fails, and returns "Message: ORA-22926: specified trim length is greater than current LOB value's length" from the Oracle server.</source>
          <target state="translated">尝试增加的长度&lt;xref:System.Data.OracleClient.OracleLob&gt;流失败，并返回"消息︰ ORA&amp;22926;︰ 指定剪裁长度大于当前 LOB 值的长度"从 Oracle 服务器。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>A stream must support both writing and seeking for SetLength to function.</source>
          <target state="translated">流必须支持写入和查找有关 SetLength 到函数。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">适用于 Oracle 的.NET Framework 数据提供程序将处理所有<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>为 Unicode 数据。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">因此，在访问时<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>数据类型，你始终处理的字节，其中每个字符是 2 个字节数。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`SetLength`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">例如，如果包含三个字符的文本字符串保存为<ph id="ph1">`NCLOB`</ph>Oracle 服务器的字符集为每个字符，4 个字节，其中你执行上<ph id="ph2">`SetLength`</ph>操作，则指定的字符串的长度为 6 个字节，尽管已存储为在服务器上的 12 个字节。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  A write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; A 会写入操作的只读<ph id="ph2">`LOB`</ph>可能会成功，但不会更新<ph id="ph3">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作&lt;xref:System.Data.OracleClient.OracleLob&gt;对象可能会返回写入操作的结果。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The desired length of the current <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream in bytes.</source>
          <target state="translated">所需的当前长度<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>以字节为单位的流。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated">有关<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数据类型，这必须是偶数。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter for a <bpt id="p2">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> data type is not even.</source>
          <target state="translated">中指定的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>参数<bpt id="p2">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>数据类型不是偶数。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">-中指定的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>参数小于零或大于 4 千兆字节。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">该操作不在事务内<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象为 null，或连接已关闭。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Gets the common language runtime stream value equivalent of the underlying value.</source>
          <target state="translated">获取公共语言运行时流值等效的基础值。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>For &lt;xref:System.Data.OracleClient.OracleType&gt; data types, Value returns the entire underlying data as a contiguous array of type <ph id="ph1">`Byte[]`</ph>.</source>
          <target state="translated">有关&lt;xref:System.Data.OracleClient.OracleType&gt;数据类型值返回整个基础数据类型的连续数组作为<ph id="ph1">`Byte[]`</ph>。&lt;/xref:System.Data.OracleClient.OracleType&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>For &lt;xref:System.Data.OracleClient.OracleType&gt; and &lt;xref:System.Data.OracleClient.OracleType&gt; data types, Value returns all the data as a <ph id="ph1">`String`</ph> data type.</source>
          <target state="translated">有关&lt;xref:System.Data.OracleClient.OracleType&gt;和&lt;xref:System.Data.OracleClient.OracleType&gt;数据类型值将返回所有数据作为<ph id="ph1">`String`</ph>数据类型。&lt;/xref:System.Data.OracleClient.OracleType&gt; &lt;/xref:System.Data.OracleClient.OracleType&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>For null data, Value returns &lt;xref:System.DBNull&gt;.</source>
          <target state="translated">对于 null 数据值返回&lt;xref:System.DBNull&gt;.&lt;/xref:System.DBNull&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>By comparing the returned values, you can distinguish among empty data, null data, and data.</source>
          <target state="translated">通过比较返回的值，可以区分空数据、 null 数据和数据。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  A benefit of using <ph id="ph2">`LOB`</ph> data types is the capability to retrieve large amounts of data in chunks at the client.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 使用的优点<ph id="ph2">`LOB`</ph>数据类型是可检索大量数据在客户端的小区块中的功能。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>However, when you use Value, you obtain all the data for the <ph id="ph1">`LOB`</ph> column as one contiguous chunk, which can significantly increase application overhead.</source>
          <target state="translated">但是，当使用值时，你获得的所有数据<ph id="ph1">`LOB`</ph>列作为一个连续的区块，这可以显著提高应用程序开销。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, an array of type <bpt id="p2">&lt;xref uid="langword_csharp_Byte[]" name="Byte[]" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">For <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, an array of type <bpt id="p2">&lt;xref uid="langword_csharp_Byte[]" name="Byte[]" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, a <bpt id="p3">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">For <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, a <bpt id="p3">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>For null data, <bpt id="p1">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">为 null 数据一样， <bpt id="p1">&lt;xref href="System.DBNull"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the current <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream, and advances the current position within this stream by the number of bytes written.</source>
          <target state="translated">将一个字节序列写入当前<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>流处理时，并使此流中的当前位置提升写入的字节数。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>If the write operation is successful, the position within the stream advances by the number of bytes written.</source>
          <target state="translated">如果写入操作成功，将流内的位置向前移动写入的字节数。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>If an exception occurs, the position within the stream remains unchanged.</source>
          <target state="translated">如果发生异常，流中的位置将保持不变。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Writing beyond the end of <ph id="ph1">`LOB`</ph> is allowed and enlarges the <ph id="ph2">`LOB`</ph> by the number of bytes written.</source>
          <target state="translated">结尾之外写入<ph id="ph1">`LOB`</ph>允许和放大<ph id="ph2">`LOB`</ph>通过写入的字节数。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">适用于 Oracle 的.NET Framework 数据提供程序将处理所有<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>为 Unicode 数据。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">因此，在访问时<ph id="ph1">`CLOB`</ph>和<ph id="ph2">`NCLOB`</ph>数据类型，你始终处理的字节，其中每个字符是 2 个字节数。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`Write`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">例如，如果包含三个字符的文本字符串保存为<ph id="ph1">`NCLOB`</ph>Oracle 服务器的字符集为每个字符，4 个字节，其中你执行上<ph id="ph2">`Write`</ph>操作，则指定的字符串的长度为 6 个字节，尽管已存储为在服务器上的 12 个字节。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The following C# example demonstrates how to write to &lt;xref:System.Data.OracleClient.OracleLob&gt; objects.</source>
          <target state="translated">下面的 C# 示例演示如何将写入到&lt;xref:System.Data.OracleClient.OracleLob&gt;对象。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   public static void WriteLobExample(OracleCommand command)   {      //Note: Updating LOB data requires a transaction.      command.Transaction = command.Connection.BeginTransaction();      //Select some data.      //    Table Schema:      //        "CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)";      //        "INSERT INTO tablewithlobs values (1, 'AA', 'AAA')";      command.CommandText = "SELECT * FROM TableWithLobs FOR UPDATE";      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain both LOBs.         OracleLob BLOB1    = reader.GetOracleLob(1);         OracleLob BLOB2    = reader.GetOracleLob(2);         //Perform any desired operations on the LOB, (read, position, and so on).         //...         //Example - Writing binary data (directly to the backend).         //To write, you can use any of the stream classes, or write raw binary data using          //the OracleLob write method. Writing character vs. binary is the same;         //however note that character is always in terms of Unicode byte counts         //(for example: even number of bytes - 2 bytes for every Unicode character).         byte[] buffer = new byte[100];         buffer[0] = 0xCC;         buffer[1] = 0xDD;         BLOB1.Write(buffer, 0, 2);         BLOB1.Position = 0;         Console.WriteLine(BLOB1.LobType + ".Write(" + buffer + ", 0, 2) =&gt; " + BLOB1.Value);            //Example - Copying data into another LOB.         long actual = BLOB1.CopyTo(BLOB2);         Console.WriteLine(BLOB1.LobType + ".CopyTo(" + BLOB2.Value + ") =&gt; " + actual);            //Commit the transaction now that everything succeeded.         //Note: On error, Transaction.Dispose is called (from the using statement)         //and will automatically roll-back the pending transaction.         command.Transaction.Commit();      }   }   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  A write operation to a read-only <ph id="ph4">`LOB`</ph> might succeed, but does not update the <ph id="ph5">`LOB`</ph> on the server.</source>
          <target state="translated"><ph id="ph1">```   public static void WriteLobExample(OracleCommand command)   {      //Note: Updating LOB data requires a transaction.      command.Transaction = command.Connection.BeginTransaction();      //Select some data.      //    Table Schema:      //        "CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)";      //        "INSERT INTO tablewithlobs values (1, 'AA', 'AAA')";      command.CommandText = "SELECT * FROM TableWithLobs FOR UPDATE";      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain both LOBs.         OracleLob BLOB1    = reader.GetOracleLob(1);         OracleLob BLOB2    = reader.GetOracleLob(2);         //Perform any desired operations on the LOB, (read, position, and so on).         //...         //Example - Writing binary data (directly to the backend).         //To write, you can use any of the stream classes, or write raw binary data using          //the OracleLob write method. Writing character vs. binary is the same;         //however note that character is always in terms of Unicode byte counts         //(for example: even number of bytes - 2 bytes for every Unicode character).         byte[] buffer = new byte[100];         buffer[0] = 0xCC;         buffer[1] = 0xDD;         BLOB1.Write(buffer, 0, 2);         BLOB1.Position = 0;         Console.WriteLine(BLOB1.LobType + ".Write(" + buffer + ", 0, 2) =&gt; " + BLOB1.Value);            //Example - Copying data into another LOB.         long actual = BLOB1.CopyTo(BLOB2);         Console.WriteLine(BLOB1.LobType + ".CopyTo(" + BLOB2.Value + ") =&gt; " + actual);            //Commit the transaction now that everything succeeded.         //Note: On error, Transaction.Dispose is called (from the using statement)         //and will automatically roll-back the pending transaction.         command.Transaction.Commit();      }   }   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>1&gt; A 会写入操作的只读<ph id="ph4">`LOB`</ph>可能会成功，但不会更新<ph id="ph5">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作&lt;xref:System.Data.OracleClient.OracleLob&gt;对象可能会返回写入操作的结果。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>An array of bytes.</source>
          <target state="translated">字节数组。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>This method copies the number of bytes specified in <ph id="ph1">`count`</ph> from <ph id="ph2">`buffer`</ph> to the current stream.</source>
          <target state="translated">此方法会复制中指定的字节数<ph id="ph1">`count`</ph>从<ph id="ph2">`buffer`</ph>写入当前流。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin copying bytes to the current stream.</source>
          <target state="translated">中的从零开始的字节偏移量<ph id="ph1">`buffer`</ph>从此处开始将字节复制到当前流。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated">有关<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数据类型，这必须是偶数。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The number of bytes to be written to the current stream.</source>
          <target state="translated">要写入当前流的字节数。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated">有关<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数据类型，这必须是偶数。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a null reference (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">buffer</ph> <ept id="p1">&lt;/code&gt;</ept>参数为空引用 (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>A value in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not positive.</source>
          <target state="translated">中的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>或<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>参数不是正数。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>-or-       The sum of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> parameters is larger than the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">buffer</ph><ept id="p3">&lt;/code&gt;</ept> length.</source>
          <target state="translated">-的总和<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>参数大于<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">buffer</ph> <ept id="p3">&lt;/code&gt;</ept>长度。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">count</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">-中指定的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">count</ph> <ept id="p1">&lt;/code&gt;</ept>或<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">offset</ph> <ept id="p2">&lt;/code&gt;</ept>参数小于零或大于 4 千兆字节。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>-or-       You must specify <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types as an even number of bytes.</source>
          <target state="translated">-或-你必须指定<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>为偶数的字节的数据类型。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">该操作不在事务内<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>对象为 null，或连接已关闭。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">关闭或释放该对象。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 出错。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Writes a byte to the current position in the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream, and advances the position within the stream by one byte.</source>
          <target state="translated">将一个字节写入中的当前位置<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>流处理时，并将流中的位置提升一个字节。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>If the write operation is successful, the position within the stream advances by one byte.</source>
          <target state="translated">如果写入操作是否成功，将流中的位置向前推进&amp;1; 个字节。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>If an exception occurs, the position within the stream remains unchanged.</source>
          <target state="translated">如果发生异常，流中的位置将保持不变。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Writing beyond the end of the <ph id="ph1">`LOB`</ph> is allowed and enlarges the <ph id="ph2">`LOB`</ph> by one byte.</source>
          <target state="translated">结尾之外写入<ph id="ph1">`LOB`</ph>允许和放大<ph id="ph2">`LOB`</ph>1 个字节。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">要写入到<ph id="ph1">`LOB`</ph>，您必须检索<ph id="ph2">`LOB`</ph>使用 FOR UPDATE 子句中的 SQL SELECT 语句，还必须具有开始的本地事务。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  A write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; A 会写入操作的只读<ph id="ph2">`LOB`</ph>可能会成功，但不会更新<ph id="ph3">`LOB`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">在这种情况下，但是的本地副本<ph id="ph1">`LOB`</ph>更新。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">因此，更高版本上读取操作&lt;xref:System.Data.OracleClient.OracleLob&gt;对象可能会返回写入操作的结果。&lt;/xref:System.Data.OracleClient.OracleLob&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The byte to write to the stream.</source>
          <target state="translated">要写入到流的字节。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>