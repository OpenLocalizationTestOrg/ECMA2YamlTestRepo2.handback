<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b963e413235703a0285151334ad096126f40475b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.MarshalByValueComponent.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d38def1e1270fe0c87a8550dc044f44330433483</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f0fe29b5464b388272ab474d6427c236458d22e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and provides the base implementation for remotable components that are marshaled by value (a copy of the serialized object is passed).</source>
          <target state="translated">实现<bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>并提供进行封送的值 （传递序列化的对象的副本） 的可远程处理组件的基实现。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A component can be contained in a container.</source>
          <target state="translated">组件可以包含在容器中。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For each component in a container, the container creates a site that it uses to manage the component.</source>
          <target state="translated">对于容器中每个组件，容器将创建它使用来管理该组件的站点。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The component interacts with its container primarily through a container-provided &lt;xref:System.ComponentModel.ISite&gt;, which is a repository of container-specific, per-component information.</source>
          <target state="translated">主要通过提供容器与其容器之间交互组件&lt;xref:System.ComponentModel.ISite&gt;，这是特定于容器的、 每个组件的信息的存储库。&lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新实例<bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A component can be contained in a container.</source>
          <target state="translated">组件可以包含在容器中。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For each component in a container, the container creates a site that it uses to manage the component.</source>
          <target state="translated">对于容器中每个组件，容器将创建它使用来管理该组件的站点。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The component interacts with its container primarily through a container-provided &lt;xref:System.ComponentModel.ISite&gt;, which is a repository of container-specific, per-component information.</source>
          <target state="translated">主要通过提供容器与其容器之间交互组件&lt;xref:System.ComponentModel.ISite&gt;，这是特定于容器的、 每个组件的信息的存储库。&lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets the container for the component.</source>
          <target state="translated">获取组件的容器。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface that represents the component's container, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the component does not have a site.</source>
          <target state="translated">一个对象，实现<bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示组件的容器的接口或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果组件不具备站点。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the component is currently in design mode.</source>
          <target state="translated">获取一个值，该值指示该组件当前是否处于设计模式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the component does not have a site, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果该组件没有站点，此方法始终返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the component is in design mode; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果组件是在设计模式下;否则为<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">释放使用的所有资源<bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;.</source>
          <target state="translated">在完成使用&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;.&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;时调用的 Dispose</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; in an unusable state.</source>
          <target state="translated">Dispose 方法离开&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;中不可用状态。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; was occupying.</source>
          <target state="translated">调用 Dispose 后，必须释放对所有引用&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;以便垃圾回收器才能回收的内存，&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;占用。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt; &lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;.</source>
          <target state="translated">1&gt; <ph id="ph1">[!NOTE]</ph>&amp;1;&gt; 始终调用释放在发布到&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;最后一个引用之前</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否则，它所使用的资源之前，不会释放垃圾回收器调用&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;对象的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">释放由非托管的资源<bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，还可以释放托管的资源。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;调用<ph id="ph1">`Dispose`</ph>与<ph id="ph2">`disposing`</ph>设置为<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数为 true 时，此方法释放由任何托管对象持有的全部资源此&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;引用。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用<ph id="ph1">`Dispose()`</ph>每个引用对象的方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要释放托管和非托管资源;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Adds an event handler to listen to the Disposed event on the component.</source>
          <target state="translated">添加事件处理程序以侦听组件上已释放的事件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">要添加。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the list of event handlers that are attached to this component.</source>
          <target state="translated">获取事件处理程序附加到此组件的列表。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventHandlerList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides the delegates for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventHandlerList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>为此组件提供委托。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">允许该对象尝试释放资源并在被垃圾回收回收之前执行其他清理操作。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the implementer of the &lt;xref:System.IServiceProvider&gt;.</source>
          <target state="translated">获取&lt;xref:System.IServiceProvider&gt;.&lt;/xref:System.IServiceProvider&gt;的实施者</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information on designer services you can use, see <bpt id="p1">[</bpt>Design-Time Architecture<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">你可以使用的设计器服务的详细信息，请参阅<bpt id="p1">[</bpt>设计时体系结构<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type of service you want.</source>
          <target state="translated">A &lt;xref:System.Type&gt;，表示所需的服务的类型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the implementer of the &lt;xref:System.IServiceProvider&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;它表示的&lt;xref:System.IServiceProvider&gt;。&lt;/xref:System.IServiceProvider&gt;实施者&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets the site of the component.</source>
          <target state="translated">获取或设置组件的站点。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A valid value for this property - that is, the value is not <ph id="ph1">`null`</ph>, indicates that the component has been added to a container.</source>
          <target state="translated">也就是说，该属性的有效值的值不<ph id="ph1">`null`</ph>，指示该组件已添加到容器。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When the value of this property is <ph id="ph1">`null`</ph>, the property indicates that the component is being removed from a container.</source>
          <target state="translated">此属性的值时<ph id="ph1">`null`</ph>，属性指示正在从容器中删除该组件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, this property does not remove the component from the container.</source>
          <target state="translated">但是，此属性不会删除从容器组件。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface that represents the site of the component.</source>
          <target state="translated">一个对象，实现<bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示站点组件的接口。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.String&gt; containing the name of the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if any.</source>
          <target state="translated">返回&lt;xref:System.String&gt;包含名称的<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，如果任何。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This method should not be overridden.</source>
          <target state="translated">此方法不应被替代。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Component&gt; may or may not have a name.</source>
          <target state="translated">A&lt;xref:System.ComponentModel.Component&gt;可能或可能不具有名称。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.ComponentModel.Component&gt; is given a name, the name is unique among other &lt;xref:System.ComponentModel.Component&gt; objects within its &lt;xref:System.ComponentModel.IContainer&gt;.</source>
          <target state="translated">如果&lt;xref:System.ComponentModel.Component&gt;是指定一个名称，名称是唯一的其他&lt;xref:System.ComponentModel.Component&gt;对象内其&lt;xref:System.ComponentModel.IContainer&gt;.&lt;/xref:System.ComponentModel.IContainer&gt;&lt;/xref:System.ComponentModel.Component&gt;间&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.ISite&gt; stores the &lt;xref:System.ComponentModel.Component&gt;'s name.</source>
          <target state="translated">&lt;xref:System.ComponentModel.ISite&gt;存储&lt;xref:System.ComponentModel.Component&gt;的名称。&lt;/xref:System.ComponentModel.Component&gt; &lt;/xref:System.ComponentModel.ISite&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Component&gt; can only have a &lt;xref:System.ComponentModel.ISite&gt; if it has been added to an &lt;xref:System.ComponentModel.IContainer&gt; and the &lt;xref:System.ComponentModel.IContainer&gt; assigns an &lt;xref:System.ComponentModel.ISite&gt; to it.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component&gt;只能具有&lt;xref:System.ComponentModel.ISite&gt;如果它已添加到&lt;xref:System.ComponentModel.IContainer&gt;，并&lt;xref:System.ComponentModel.IContainer&gt;将分配&lt;xref:System.ComponentModel.ISite&gt;到它。&lt;/xref:System.ComponentModel.ISite&gt; &lt;/xref:System.ComponentModel.IContainer&gt; &lt;/xref:System.ComponentModel.IContainer&gt; &lt;/xref:System.ComponentModel.ISite&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if any.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含名称的<bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，如果任何。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is unnamed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是未命名。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>