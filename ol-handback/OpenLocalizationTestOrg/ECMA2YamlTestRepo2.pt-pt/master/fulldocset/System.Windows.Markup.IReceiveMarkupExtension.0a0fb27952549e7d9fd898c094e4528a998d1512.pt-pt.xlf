<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7e536ec7fc4ccbcc90abed36fdeb93a3a29ea8f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.IReceiveMarkupExtension.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9597fe7ddc0abb362224875d337415ec46726ca4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1474a3c7fa23a9a0d0ba3449e0da6f6e3367c707</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property.</source>
          <target state="translated">Fornece um mecanismo em tipos podem declarar que pode receber uma expressão (ou outra classe) de uma extensão de markup, onde o resultado é um tipo de propriedade de diferentes que a propriedade de destino.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Do not use for <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementations; see Remarks.</source>
          <target state="translated">Não utilize para <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementações; Consulte observações.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph>, IReceiveMarkupExtension was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing.</source>
          <target state="translated">No <ph id="ph1">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph>, IReceiveMarkupExtension foi uma técnica de WPF específicos para que permite a tipos de introduzir um diferentes codepath como sempre que qualquer um dos respetivos membros XAML acessível onde definidos como as extensões de markup durante a análise de XAML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.</source>
          <target state="translated">No <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, esta interface está obsoleta e é substituída por uma implementação de serviços de XAML do .NET Framework para a forma como as extensões de markup podem receber serviços ou tipos podem invocar lógica de setter específico de extensão de markup.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt; attributes applied.</source>
          <target state="translated">Para <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> implementações, se quiser efetuar processamento especial quando a definição de propriedades pela extensão de markup em vez de outros meios, tipos de tipos devem ser definidos com &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;atributos aplicados.&lt;/xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The attribute specifies a callback, which is typically defined as a private member of the type.</source>
          <target state="translated">O atributo especifica uma chamada de retorno, que é, normalmente, definida como um membro de privada do tipo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In infrastructure implementations of WPF classes, most cases where &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt; is applied reference a <ph id="ph1">`ReceiveMarkupExtension`</ph> method that previously implemented this interface, but now instead use context through the callback.</source>
          <target state="translated">Implementações de infraestrutura de classes do WPF, mais casos onde &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;é aplicado referência um <ph id="ph1">`ReceiveMarkupExtension`</ph> método anteriormente implementado esta interface, mas agora em vez disso, utilize o contexto através de chamada de retorno.&lt;/xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides the handling for markup extensions that provide property values.</source>
          <target state="translated">Fornece o processamento para as extensões de markup que forneça valores de propriedade.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Do not use for <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementations; see Remarks in <bpt id="p1">&lt;xref href="System.Windows.Markup.IReceiveMarkupExtension"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Não utilize para <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementações; Consulte observações em <bpt id="p1">&lt;xref href="System.Windows.Markup.IReceiveMarkupExtension"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The name of the target property.</source>
          <target state="translated">O nome da propriedade de destino.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The markup extension instance of the incoming data.</source>
          <target state="translated">A instância de extensão de markup dos dados recebidos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Can provide additional services that should be performed when processing the markup extension data for a property value.</source>
          <target state="translated">Pode fornecer serviços adicionais que devem ser efetuados ao processar os dados de extensão de markup para um valor de propriedade.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>