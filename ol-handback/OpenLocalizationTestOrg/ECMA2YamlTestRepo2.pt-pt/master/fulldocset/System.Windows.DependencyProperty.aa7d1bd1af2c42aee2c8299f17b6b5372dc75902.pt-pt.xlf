<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad45d5350d7ce0512a3ddb042ebe116819840d05</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.DependencyProperty.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e25ae22b2d251a31c5b2f3a8b8c9809a6c5c95b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e77660bde0953d13f802b828789b2dd37b1699e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a property that can be set through methods such as, styling, data binding, animation, and inheritance.</source>
          <target state="translated">Representa uma propriedade que pode ser definida como através de métodos, estilo, enlace de dados, animação e herança.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A DependencyProperty supports the following capabilities in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>:      -   The property can be set in a style.</source>
          <target state="translated">Um DependencyProperty suporta as seguintes capacidades no <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>:-a propriedade pode ser definida num style.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>estilos e Templating<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can be set through data binding.</source>
          <target state="translated">-A propriedade pode ser definida através do enlace de dados.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about data binding dependency properties, see <bpt id="p1">[</bpt>How to: Bind the Properties of Two Controls<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre as propriedades de dependência de enlace de dados, consulte <bpt id="p1">[</bpt>como: vincular as propriedades de controlos dois<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can be set with a dynamic resource reference.</source>
          <target state="translated">-A propriedade pode ser definida com uma referência de recursos dinâmicos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>XAML recursos<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can inherit its value automatically from a parent element in the element tree.</source>
          <target state="translated">-A propriedade pode herdam o valor automaticamente um elemento principal na árvore de elemento.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Property Value Inheritance<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>herança de valor de propriedade<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can be animated.</source>
          <target state="translated">-Pode ser animada a propriedade.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Animation Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>descrição geral de animação<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property can report when the previous value of the property has been changed and the property value can be coerced.</source>
          <target state="translated">-A propriedade pode reportar quando o valor da propriedade anterior foi alterado e o valor da propriedade pode ser forçado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>chamadas de retorno de propriedade de dependência e validação<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property reports information to <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, such as whether changing a property value should require the layout system to recompose the visuals for an element.</source>
          <target state="translated">-A propriedade relatórios de informações para <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, tal como se alterar um valor de propriedade deve exigir que o esquema sistema recompose visuais para um elemento.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property receives support in the <ph id="ph1">[!INCLUDE[wpfdesigner_current_long](~/add/includes/wpfdesigner-current-long-md.md)]</ph>.</source>
          <target state="translated">-A propriedade recebe suporte no <ph id="ph1">[!INCLUDE[wpfdesigner_current_long](~/add/includes/wpfdesigner-current-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the property can be edited in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window.</source>
          <target state="translated">Por exemplo, a propriedade pode ser editada no <bpt id="p1">**</bpt>propriedades<ept id="p1">**</ept> janela.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To learn more about dependency properties, see <bpt id="p1">[</bpt>Dependency Properties Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para saber mais sobre as propriedades de dependência, consulte <bpt id="p1">[</bpt>descrição geral de propriedades de dependência<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want properties on your custom types to support the capabilities in the preceding list, you should create a dependency property.</source>
          <target state="translated">Se pretender que as propriedades no seu tipos personalizados para suportar as capacidades na lista anterior, deve criar uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To learn how to create custom dependency properties, see <bpt id="p1">[</bpt>Custom Dependency Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para saber como criar propriedades de dependência personalizada, consulte <bpt id="p1">[</bpt>propriedades de dependência personalizadas<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attached property is a property that enables any object to report information to the type that defines the attached property.</source>
          <target state="translated">Uma propriedade anexada é uma propriedade que permite que qualquer objeto para as informações de relatório para o tipo que define a propriedade anexada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, any type that inherits from &lt;xref:System.Windows.DependencyObject&gt; can use an attached property regardless of whether the type inherits from the type that defines the property.</source>
          <target state="translated">No <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, qualquer tipo que herda de &lt;xref:System.Windows.DependencyObject&gt;pode utilizar uma propriedade anexada independentemente se o tipo herda a partir do tipo que define a propriedade.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attached property is a feature of the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> language.</source>
          <target state="translated">Uma propriedade anexada é uma funcionalidade do <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> idioma.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set an attached property in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, use the <bpt id="p1">*</bpt>ownerType<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept> syntax.</source>
          <target state="translated">Para definir uma propriedade anexada em <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, utilize o <bpt id="p1">*</bpt>ownerType<ept id="p1">*</ept>.<bpt id="p2">*</bpt> propertyName<ept id="p2">*</ept> sintaxe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of an attached property is the &lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">É um exemplo de uma propriedade anexada a &lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;propriedade.&lt;/xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to create a property that can be used on all &lt;xref:System.Windows.DependencyObject&gt; types, then you should create an attached property.</source>
          <target state="translated">Se pretender criar uma propriedade que pode ser utilizada em todos os &lt;xref:System.Windows.DependencyObject&gt;tipos, em seguida, deve criar uma propriedade anexada.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>To learn more about attached properties, including how to create them, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre propriedades anexadas, incluindo como criá-los, consulte o artigo <bpt id="p1">[</bpt>ligado descrição geral de propriedades<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_DependencyProperty"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="dependencyPropertyName"/&gt;   - or -   &lt;object property="ownerType.dependencyPropertyName"/&gt;   - or -   &lt;object property="attachedPropertyOwnerType.attachedPropertyName"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_DependencyProperty"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <ph id="ph2">`dependencyPropertyName`</ph>    A string that specifies the &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt; of the desired dependency property.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_DependencyProperty"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # Utilização do atributo de XAML <ph id="ph1">```   &lt;object property="dependencyPropertyName"/&gt;   - or -   &lt;object property="ownerType.dependencyPropertyName"/&gt;   - or -   &lt;object property="attachedPropertyOwnerType.attachedPropertyName"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_DependencyProperty"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> # # XAML valores <ph id="ph2">`dependencyPropertyName`</ph> uma cadeia que especifica o &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;da propriedade de dependência pretendido.&lt;/xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;      </target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be preceded by an XML namespace prefix if the property is not in the default XML namespace (for details, see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.)       <ph id="ph1">`ownerType`</ph>.<ph id="ph2">`dependencyPropertyName`</ph></source>
          <target state="translated">Isto pode ser precedido por um prefixo de espaço de nomes XML se a propriedade não se encontra no espaço de nomes XML predefinido (para obter mais informações, consulte <bpt id="p1">[</bpt>XAML espaços de nomes e o espaço de nomes de mapeamento para WPF XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.)       <ph id="ph1">`ownerType`</ph>.<ph id="ph2">`dependencyPropertyName`</ph></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>A string that specifies an owner type of a dependency property, a dot (.), then the &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Uma cadeia que especifica um tipo de proprietário de uma propriedade de dependência, um ponto (.), em seguida, &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ownerType`</ph> can also be preceded by an XML namespace prefix.</source>
          <target state="translated"><ph id="ph1">`ownerType`</ph>Também pode ser precedido por um prefixo de espaço de nomes XML.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This usage is particular to late-bound styles and templates, where the owner of the dependency property must be specified for parsing context because the <ph id="ph1">`TargetType`</ph> is not yet known.</source>
          <target state="translated">Esta utilização é específica para tardio estilos e modelos, onde o proprietário da propriedade de dependência tem de ser especificado para o contexto de análise porque o <ph id="ph1">`TargetType`</ph> ainda não é conhecido.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](../Topic/Styling%20and%20Templating.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>estilos e Templating<ept id="p1">](../Topic/Styling%20and%20Templating.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`attachedPropertyOwnerType`</ph> <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`attachedPropertyOwnerType`</ph> <bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`attachedPropertyName`</ph>    A string that specifies  the owner of an attached property, a dot (.), then the attached property name.</source>
          <target state="translated"><ph id="ph1">`attachedPropertyName`</ph>Uma cadeia que especifica o proprietário de uma propriedade anexada, um ponto (.), em seguida, o nome da propriedade anexada.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`attachedPropertyOwnerType`</ph> can also be preceded by an XML namespace prefix.</source>
          <target state="translated"><ph id="ph1">`attachedPropertyOwnerType`</ph>Também pode ser precedido por um prefixo de espaço de nomes XML.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adds another type as an owner of a dependency property that has already been registered.</source>
          <target state="translated">Adiciona o tipo de outro como um proprietário de uma propriedade de dependência que já foi registado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables the property system to recognize a dependency property on a type that did not register that particular dependency property initially.</source>
          <target state="translated">Este método permite que o sistema de propriedade reconhecer uma propriedade de dependência num tipo que não se registou essa propriedade de dependência específico inicialmente.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, AddOwner is used to add dependency properties to classes that do not already expose that dependency property through managed class inheritance (class inheritance would cause the wrapper properties to be inherited by the derived class, and thus would provide general members-table access to the dependency property already).</source>
          <target state="translated">Normalmente, AddOwner é utilizada para adicionar propriedades de dependência para classes que expõe já essa propriedade de dependência através de herança de classe gerida (herança de classe faria com que as propriedades de wrapper para herdado por classe derivada e, por conseguinte, iria fornecer acesso de tabela de membros gerais para a propriedade de dependência já).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>AddOwner enables the property system to recognize a dependency property on a type that did not register that dependency property initially.</source>
          <target state="translated">AddOwner permite que o sistema de propriedade reconhecer uma propriedade de dependência num tipo que não se registou essa propriedade de dependência inicialmente.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature does not allow for specifying metadata.</source>
          <target state="translated">Esta assinatura não permite a especificação de metadados.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this method, the metadata is automatically generated for the new &lt;xref:System.Windows.DependencyProperty&gt; and its owner type.</source>
          <target state="translated">Quando utiliza este método, os metadados é gerado automaticamente para a nova &lt;xref:System.Windows.DependencyProperty&gt;e o respetivo tipo de proprietário.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The auto-generated metadata is the result of the merged metadata from all of the base types that have this property defined.</source>
          <target state="translated">Os metadados de geração automática são o resultado dos metadados intercalado de todos os tipos base com esta propriedade definida.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no merged metadata is available, then the default metadata for the property is used.</source>
          <target state="translated">Se não existem metadados intercalado estiver disponível, os metadados predefinidos para a propriedade é utilizado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property is registered by using the &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; method, then the default metadata is the same as the metadata that is created when &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; was called.</source>
          <target state="translated">Se a propriedade está registada utilizando o &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;método, em seguida, os metadados de predefinição é o mesmo que os metadados que é criado quando &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;foi chamado.&lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the &lt;xref:System.Windows.PropertyMetadata&gt; object is created with the &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; property set to the property type's default and all other properties of the &lt;xref:System.Windows.PropertyMetadata&gt; is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Caso contrário, o &lt;xref:System.Windows.PropertyMetadata&gt;objeto é criado com o &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;propriedade definida para predefinido o tipo de propriedade e todas as outras propriedades do &lt;xref:System.Windows.PropertyMetadata&gt;está definido como <ph id="ph1">`null`</ph>.&lt;/xref:System.Windows.PropertyMetadata&gt; &lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; &lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt; signature if you want to provide metadata for the version of the dependency property as added to the provided type.</source>
          <target state="translated">Utilize o &lt;xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;assinatura se pretender fornecer metadados para a versão a propriedade de dependência para adicionar ao tipo fornecido.&lt;/xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value of this method is typically used to declare and expose the dependency property by storing a dependency property identifier.</source>
          <target state="translated">O valor de retorno deste método é normalmente utilizado para declarar e expor a propriedade de dependência armazenando um identificador de propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The identifier provides access to the dependency property if you want to call property system <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> against the dependency property, particularly as it exists on the adding owner class.</source>
          <target state="translated">O identificador fornece acesso para a propriedade de dependência para chamar o sistema de propriedade <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> contra a propriedade de dependência, particularmente dado que existe na classe de proprietário de adição.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same property name for both original owner and added owner should be used to indicate the similar functionality.</source>
          <target state="translated">O mesmo nome de propriedade para o proprietário original e o proprietário adicionado deve ser utilizado para indicar uma funcionalidade semelhante.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use the &lt;xref:System.Windows.DependencyProperty&gt; return value of the AddOwner method to define the dependency property identifier, and also to declare <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> property wrappers, for dependency properties that are added to types using AddOwner.</source>
          <target state="translated">Deve utilizar o &lt;xref:System.Windows.DependencyProperty&gt;devolve o valor do método AddOwner para definir o identificador de propriedade de dependência bem como para declarar <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> wrappers de propriedade, as propriedades de dependência que são adicionados aos tipos utilizando AddOwner.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddOwner methodology recommended above is used when creating the dependency properties that are declared within <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">A metodologia de AddOwner recomendada acima é utilizada ao criar as propriedades de dependência que são declaradas dentro <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, both &lt;xref:System.Windows.Controls.Border&gt; and &lt;xref:System.Windows.Controls.Control&gt; define a <ph id="ph1">`BorderBrush`</ph> dependency property, which have similar functionality.</source>
          <target state="translated">Por exemplo, ambos &lt;xref:System.Windows.Controls.Border&gt;e &lt;xref:System.Windows.Controls.Control&gt;definir um <ph id="ph1">`BorderBrush`</ph> propriedade de dependência, o que tem uma funcionalidade semelhante.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Border&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.Control&gt; defines its <ph id="ph1">`BorderBrush`</ph> property to the property system by calling AddOwner based on the original owner &lt;xref:System.Windows.Controls.Border&gt; and its registered &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt; dependency property identifer.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Control&gt;Define o <ph id="ph1">`BorderBrush`</ph> propriedade para o sistema de propriedade ao chamar AddOwner baseado no proprietário original &lt;xref:System.Windows.Controls.Border&gt;e respetivos registado &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt;identificador de propriedade de dependência.&lt;/xref:System.Windows.Controls.Border.BorderBrushProperty&gt; &lt;/xref:System.Windows.Controls.Border&gt;&lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddOwner return value is then used to establish a new static &lt;xref:System.Windows.DependencyProperty&gt; field (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;) for that property on the added owner, and a <ph id="ph1">`BorderBrush`</ph> property wrapper is also declared.</source>
          <target state="translated">O AddOwner devolver o valor, em seguida, é utilizado para estabelecer uma novo estática &lt;xref:System.Windows.DependencyProperty&gt;campo (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;) para essa propriedade no proprietário adicionado e um <ph id="ph1">`BorderBrush`</ph> wrapper propriedade também está declarado.&lt;/xref:System.Windows.Controls.Control.BorderBrushProperty&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The type to add as an owner of this dependency property.</source>
          <target state="translated">O tipo a adicionar como um proprietário desta propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A reference to the original <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier that identifies the dependency property.</source>
          <target state="translated">Uma referência ao original <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identificador que identifica a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This identifier should be exposed by the adding class as a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field.</source>
          <target state="translated">Este identificador deve ser exposto pela classe adicionar como um <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> campo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Adds another type as an owner of a dependency property that has already been registered, providing dependency property metadata for the dependency property as it will exist on the provided owner type.</source>
          <target state="translated">Adiciona o tipo de outro como um proprietário de uma propriedade de dependência que já foi registada, fornecendo os metadados da propriedade de dependência para a propriedade de dependência, dado que será existe no tipo de proprietário fornecidos.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables the property system to recognize a dependency property on a type that did not register that particular dependency property initially.</source>
          <target state="translated">Este método permite que o sistema de propriedade reconhecer uma propriedade de dependência num tipo que não se registou essa propriedade de dependência específico inicialmente.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value of this method is used to declare and expose the dependency property, particularly as it exists on the adding owner class.</source>
          <target state="translated">O valor de retorno deste método é utilizado para declarar e expor a propriedade de dependência, particularmente tal como existe na classe de proprietário de adição.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, the same property name for both original owner and added owner should be used to indicate the similar functionality.</source>
          <target state="translated">Geralmente, o mesmo nome de propriedade para o proprietário original e o proprietário adicionado deve ser utilizado para indicar uma funcionalidade semelhante.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is good practice to expose the identifiers, as well as new <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> property wrappers, for dependency properties that are added to types using &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;.</source>
          <target state="translated">É recomendável para expor os identificadores, bem como novos <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> wrappers de propriedade, as propriedades de dependência que são adicionados aos tipos utilizando &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; methodology recommended above is used when creating <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> declared within <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">O &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;metodologia recomendada acima é utilizada ao criar <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]</ph> declarado no <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.&lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, both &lt;xref:System.Windows.Controls.Border&gt; and &lt;xref:System.Windows.Controls.Control&gt; define a <ph id="ph1">`BorderBrush`</ph> dependency property, which have similar functionality.</source>
          <target state="translated">Por exemplo, ambos &lt;xref:System.Windows.Controls.Border&gt;e &lt;xref:System.Windows.Controls.Control&gt;definir um <ph id="ph1">`BorderBrush`</ph> propriedade de dependência, o que tem uma funcionalidade semelhante.&lt;/xref:System.Windows.Controls.Control&gt; &lt;/xref:System.Windows.Controls.Border&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Controls.Control&gt; defines its <ph id="ph1">`BorderBrush`</ph> property to the property system by calling &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; on original owner &lt;xref:System.Windows.Controls.Border&gt; and its registered &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt; dependency property identifer.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Control&gt;Define o <ph id="ph1">`BorderBrush`</ph> propriedade para o sistema de propriedade ao chamar &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;no proprietário original &lt;xref:System.Windows.Controls.Border&gt;e respetivos registado &lt;xref:System.Windows.Controls.Border.BorderBrushProperty&gt;identificador de propriedade de dependência.&lt;/xref:System.Windows.Controls.Border.BorderBrushProperty&gt; &lt;/xref:System.Windows.Controls.Border&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;&lt;/xref:System.Windows.Controls.Control&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; return value is then used to establish a static &lt;xref:System.Windows.DependencyProperty&gt; field (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;)for that property on the added owner, and a <ph id="ph1">`BorderBrush`</ph> property wrapper is also declared.</source>
          <target state="translated">O &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;devolver o valor é utilizado para estabelecer uma estática &lt;xref:System.Windows.DependencyProperty&gt;campo (&lt;xref:System.Windows.Controls.Control.BorderBrushProperty&gt;) para essa propriedade no proprietário adicionado e um <ph id="ph1">`BorderBrush`</ph> wrapper propriedade também está declarado.&lt;/xref:System.Windows.Controls.Control.BorderBrushProperty&gt; &lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The added owner's dependency property identifier should be used for operations such as &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.</source>
          <target state="translated">Identificador de propriedade de dependência do proprietário adicionado deve ser utilizada para operações como &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.&lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, type-specific operations involving either types or instances of the class that was added as owner with different metadata will still return the expected results even if the original (not the added owner's) dependency property identifier is specified in calls to methods such as &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt; or &lt;xref:System.Windows.DependencyProperty.GetMetadata%2A&gt;.</source>
          <target state="translated">No entanto, as operações de tipo específicas que envolvem tipos ou instâncias da classe que foi adicionado como proprietário com metadados diferentes continuará devolvem o mesmo quando de resultados esperado original (não o adicionado do proprietário) identificador de propriedade de dependência é especificado em chamadas para métodos como &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;ou &lt;xref:System.Windows.DependencyProperty.GetMetadata%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.GetMetadata%2A&gt; &lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The metadata for the added owner is perpetuated by the AddOwner call itself, not necessarily referenced exclusively by the adding owner class identifier field.</source>
          <target state="translated">Os metadados para o proprietário adicionado é perpetuated pelo AddOwner chamar autónomo, não necessariamente referenciado exclusivamente para o campo de identificador de classe de proprietário adicionar.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nevertheless, it is good practice to expose the  identifier, as well as new <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> property wrappers, for dependency properties that are added to types using AddOwner, because failing to do so creates disparity between the <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> and <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> representations of your properties.</source>
          <target state="translated">Contudo, é boa prática para expor o identificador, bem como novo <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> wrappers de propriedade, as propriedades de dependência que são adicionados aos tipos utilizando AddOwner, porque a conseguir fazê-lo cria disparidade entre o <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> e <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> representações das suas propriedades.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied metadata is merged with the property metadata for the dependency property as it exists on the base owner.</source>
          <target state="translated">Os metadados fornecido intercalado com os metadados de propriedade para a propriedade de dependência tal como existe no proprietário de base.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any characteristics that were specified in the original base metadata will persist.</source>
          <target state="translated">Qualquer características que foram especificadas nos metadados base originais serão mantidas.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only those characteristics that were specifically changed in the new metadata will override the characteristics of the base metadata.</source>
          <target state="translated">Apenas as características que foram alteradas especificamente nos metadados da nova substituirão as características dos metadados base.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characteristics, such as &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;, are replaced if they are specified in the new metadata.</source>
          <target state="translated">Alguns características, tais como &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;, são substituídos se forem especificadas em novos metadados.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Others, such as &lt;xref:System.Windows.PropertyChangedCallback&gt;, are combined.</source>
          <target state="translated">Outros recursos, tais como &lt;xref:System.Windows.PropertyChangedCallback&gt;, são combinados.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ultimately, the merge behavior depends on the property metadata type being used for the override, so the behavior described here is for the existing property metadata classes used by <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> dependency properties.</source>
          <target state="translated">Em última análise, o comportamento de intercalação depende o tipo de metadados da propriedade que está a ser utilizado para a substituição, pelo que é o comportamento descrito aqui para as classes de metadados de propriedade existentes utilizadas pelo <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> propriedades de dependência.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Metadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Framework Property Metadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>os metadados da propriedade de dependência<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> e <bpt id="p2">[</bpt>os metadados da propriedade Framework<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The type to add as owner of this dependency property.</source>
          <target state="translated">O tipo a adicionar como proprietário desta propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The metadata that qualifies the dependency property as it exists on the provided type.</source>
          <target state="translated">Os metadados que qualificam a propriedade de dependência, tal como existe no tipo fornecido.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A reference to the original <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier that identifies the dependency property.</source>
          <target state="translated">Uma referência ao original <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identificador que identifica a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This identifier should be exposed by the adding class as a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field.</source>
          <target state="translated">Este identificador deve ser exposto pela classe adicionar como um <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> campo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets the default metadata of the dependency property.</source>
          <target state="translated">Obtém os metadados de predefinido da propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default metadata is the property metadata that is available to that particular object or an object of a derived type where no alternative metadata was supplied by an explicit &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; call.</source>
          <target state="translated">Os metadados de predefinição são os metadados de propriedade que está disponível para esse objeto específico ou um objeto de um tipo derivado onde não existem metadados alternativo foi fornecido pelo explícita &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;ou &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;chamar.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the original owner applied metadata to the first &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call that established the dependency property, then that metadata is returned as DefaultMetadata.</source>
          <target state="translated">Se o proprietário original aplicada metadados para o primeiro &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;chamada estabelecer a propriedade de dependência, em seguida, esses metadados é devolvido como DefaultMetadata.&lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no metadata was applied in the original &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call, then default metadata is generated from within the &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call and this value is returned as the DefaultMetadata.</source>
          <target state="translated">Se não existem metadados tenha sido aplicado original &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;chamada, em seguida, os metadados de predefinido é gerado a partir do &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;chamada e este valor é devolvido como o DefaultMetadata.&lt;/xref:System.Windows.DependencyProperty.Register%2A&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The main purpose of having default metadata associated with a &lt;xref:System.Windows.DependencyProperty&gt; is to supply a default value for this property on any &lt;xref:System.Windows.DependencyObject&gt; or a derived type.</source>
          <target state="translated">O objetivo principal de metadados predefinidos associados a ter um &lt;xref:System.Windows.DependencyProperty&gt;consiste em fornecer um valor predefinido para esta propriedade em qualquer &lt;xref:System.Windows.DependencyObject&gt;ou um tipo derivado.&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For nonattached properties, the metadata type returned by this property cannot be cast to derived types of &lt;xref:System.Windows.PropertyMetadata&gt; type, even if the property was originally registered with a derived metadata type.</source>
          <target state="translated">As propriedades de nonattached, o tipo de metadados devolvido por esta propriedade não pode ser convertido para tipos derivados de &lt;xref:System.Windows.PropertyMetadata&gt;escreva, mesmo se a propriedade originalmente foi registada com um tipo derivado de metadados.&lt;/xref:System.Windows.PropertyMetadata&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the originally registered metadata including its original possibly derived metadata type, call &lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Type%29&gt; instead, passing the original registering type as a parameter.</source>
          <target state="translated">Se pretender que os metadados originalmente registado, incluindo o respetivo tipo de metadados possivelmente derivada original, chamar &lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Type%29&gt;transmitir registar original em vez disso, escreva como parâmetro.&lt;/xref:System.Windows.DependencyProperty.GetMetadata%28System.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For attached properties, the type of the metadata returned by this property will match the type given in the original &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; registration method.</source>
          <target state="translated">Para propriedades anexadas, o tipo dos metadados devolvidos por esta propriedade irá corresponde ao tipo especificado no original &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;método de registo.&lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default metadata of the dependency property.</source>
          <target state="translated">Os metadados de predefinido da propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns a hash code for this <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Devolve um código hash para este <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system uses its own unique identifier &lt;xref:System.Windows.DependencyProperty.GlobalIndex%2A&gt;, and the value of that property is returned by GetHashCode.</source>
          <target state="translated">O sistema de propriedade utiliza o seu próprio identificador exclusivo &lt;xref:System.Windows.DependencyProperty.GlobalIndex%2A&gt;, e o valor da propriedade é devolvido pelo GetHashCode.&lt;/xref:System.Windows.DependencyProperty.GlobalIndex%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The hash code for this <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">O código hash <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns the metadata for this dependency property as it exists on a specified existing type.</source>
          <target state="translated">Devolve os metadados para esta propriedade de dependência, tal como existe um tipo existente especificado.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying either the type or an object reference to use as type is necessary because the metadata can vary from the original registration due either to &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; calls that alter the metadata of the dependency property as it exists on a type.</source>
          <target state="translated">Especificar o tipo ou uma referência de objeto para utilizar como tipo é necessário porque os metadados podem diferir do registo original devido a &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;ou &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;chamadas alterar os metadados da propriedade de dependência, tal como existe num tipo.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The specific type from which to retrieve the dependency property metadata.</source>
          <target state="translated">O tipo específico para obter os metadados da propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A property metadata object.</source>
          <target state="translated">Um objeto de metadados da propriedade.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns the metadata for this dependency property as it exists on the specified object instance.</source>
          <target state="translated">Devolve os metadados para esta propriedade de dependência, tal como existe na instância do objeto especificado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying either the type or an object reference is necessary because the metadata of any given dependency property can vary from the original registration due either to &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; calls that can refine the property metadata as it exists on a type.</source>
          <target state="translated">Especificar o tipo ou uma referência de objeto é necessária porque os metadados de uma propriedade de dependência fornecida podem variar entre o registo original devido a &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;ou &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;chamadas podem refinar os metadados de propriedade visto que existe um tipo.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you request property metadata based on an instance, you are really just passing the instance so that its type can be evaluated internally.</source>
          <target state="translated">Quando solicita os metadados da propriedade com base numa instância, está realmente apenas a transmitir a instância para que o respetivo tipo pode ser avaliado internamente.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency property metadata does not vary per instance; it is always consistent for any given type-property combination.</source>
          <target state="translated">Os metadados da propriedade de dependência não variam por instância; é sempre consistente para qualquer combinação de propriedade de tipo indicado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A dependency object that is checked for type, to determine which type-specific version of the dependency property the metadata should come from.</source>
          <target state="translated">Um objeto de dependência que está marcado para o tipo, para determinar que versão específicos do tipo da propriedade de dependência os metadados deverá ser proveniente.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A property metadata object.</source>
          <target state="translated">Um objeto de metadados da propriedade.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Returns the metadata for this dependency property as it exists on a specified type.</source>
          <target state="translated">Devolve os metadados para esta propriedade de dependência, tal como existe num tipo especificado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying either the type or an object reference is necessary because the metadata of any given dependency property can vary from the original registration due either to &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; calls that can refine the property metadata as it exists on a type.</source>
          <target state="translated">Especificar o tipo ou uma referência de objeto é necessária porque os metadados de uma propriedade de dependência fornecida podem variar entre o registo original devido a &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;ou &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;chamadas podem refinar os metadados de propriedade visto que existe um tipo.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A specific object that records the dependency object type from which the dependency property metadata is desired.</source>
          <target state="translated">Um objeto específico que regista o tipo de objeto de dependência do qual os metadados da propriedade de dependência for pretendido.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A property metadata object.</source>
          <target state="translated">Um objeto de metadados da propriedade.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets an internally generated value that uniquely identifies the dependency property.</source>
          <target state="translated">Obtém um valor gerado internamente que identifica exclusivamente a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is an integer, not a <ph id="ph1">[!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">Este valor é um número inteiro, não um <ph id="ph1">[!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, using this index value is not required, and there is no index access to tables of all dependency properties.</source>
          <target state="translated">Geralmente, não é necessário utilizar este valor de índice e há sem acesso de índice para tabelas de todas as propriedades de dependência.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency properties should instead be referenced by their identifier fields.</source>
          <target state="translated">Propriedades de dependência em vez disso, devem ser referenciadas pelos campos de identificador.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>GlobalIndex is used internally for faster access to data structures that use the GlobalIndex as a zero-based array index.</source>
          <target state="translated">GlobalIndex é utilizada internamente para um acesso mais rápido para estruturas de dados que utilizam o GlobalIndex como um índice de matriz baseada em zero.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>A similar usage might have applications for designers or tools.</source>
          <target state="translated">A utilização de um semelhante poderá ter aplicações para os estruturadores ou ferramentas.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A unique numeric identifier.</source>
          <target state="translated">Um identificador numérico exclusivo.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Determines whether a specified value is acceptable for this dependency property's type, as checked against the property type provided in the original dependency property registration.</source>
          <target state="translated">Determina se um valor especificado é aceitável para o tipo da propriedade de dependência, conforme verificado contra o tipo de propriedade fornecido no registo de propriedade de dependência original.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value of <ph id="ph1">`null`</ph> is a valid type for reference type dependency properties, or for a &lt;xref:System.Nullable%601&gt; dependency property, and would return <ph id="ph2">`true`</ph> for these cases.</source>
          <target state="translated">Um valor de <ph id="ph1">`null`</ph> é um tipo válido para propriedades de dependência do tipo de referência ou para um &lt;xref:System.Nullable%601&gt;propriedade de dependência e devolvam <ph id="ph2">`true`</ph> para estes casos.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>In cases where the dependency property is neither a reference nor a &lt;xref:System.Nullable%601&gt; type, IsValidType will return <ph id="ph1">`false`</ph> for a null value rather than raise an exception.</source>
          <target state="translated">Nos casos em que a propriedade de dependência é uma referência de nenhuma delas nem um &lt;xref:System.Nullable%601&gt;tipo, IsValidType irá devolver <ph id="ph1">`false`</ph> para um valor nulo em vez de emitir uma exceção.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The value to check.</source>
          <target state="translated">O valor para verificar.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified value is the registered property type or an acceptable derived type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o valor especificado é o tipo de propriedade registada ou um tipo derivado aceitável; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Determines whether the provided value is accepted for the type of property through basic type checking, and also potentially if it is within the allowed range of values for that type.</source>
          <target state="translated">Determina se o valor fornecido é aceite para o tipo de propriedade através da verificação do tipo básico e também potencialmente se estiver dentro do intervalo permitido de valores para esse tipo.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a dependency property, an allowed range of values for that type can be specified through a &lt;xref:System.Windows.ValidateValueCallback&gt; that is provided in the dependency property registration.</source>
          <target state="translated">Para uma propriedade de dependência, um intervalo permitido de valores para esse tipo pode ser especificado através de um &lt;xref:System.Windows.ValidateValueCallback&gt;que é fornecido no registo de propriedade de dependência.&lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt; internally.</source>
          <target state="translated">Este método chama &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;internamente.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the dependency property in question has no &lt;xref:System.Windows.ValidateValueCallback&gt;,then calling this method is effectively equivalent to calling &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;.</source>
          <target state="translated">Se a propriedade de dependência em questão não tiver nenhum &lt;xref:System.Windows.ValidateValueCallback&gt;em seguida, chamar este método é efetivamente equivalente a chamar &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt; &lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the dependency property does have a &lt;xref:System.Windows.ValidateValueCallback&gt;, and if &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt; would have returned <ph id="ph1">`true`</ph>, then the value returned will be as implemented in the callback.</source>
          <target state="translated">Se a propriedade de dependência tem um &lt;xref:System.Windows.ValidateValueCallback&gt;e se &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;seria ter devolvido <ph id="ph1">`true`</ph>, em seguida, o valor devolvido será conforme implementado na chamada de retorno.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt; &lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>A null value is a valid value for reference type dependency properties, or for a &lt;xref:System.Nullable%601&gt; dependency property, and would return <ph id="ph1">`true`</ph> for these cases.</source>
          <target state="translated">Um valor nulo é um valor válido para propriedades de dependência do tipo de referência ou para um &lt;xref:System.Nullable%601&gt;propriedade de dependência e devolvam <ph id="ph1">`true`</ph> para estes casos.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>In cases where the dependency property is neither a reference nor a &lt;xref:System.Nullable%601&gt; type, &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt; will return <ph id="ph1">`false`</ph> for a null value rather than raise an exception.</source>
          <target state="translated">Nos casos em que a propriedade de dependência é uma referência de nenhuma delas nem um &lt;xref:System.Nullable%601&gt;tipo, &lt;xref:System.Windows.DependencyProperty.IsValidType%2A&gt;irá devolver <ph id="ph1">`false`</ph> para um valor nulo em vez de emitir uma exceção.&lt;/xref:System.Windows.DependencyProperty.IsValidType%2A&gt; &lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The value to check.</source>
          <target state="translated">O valor para verificar.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value is acceptable and is of the correct type or a derived type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o valor é aceitável e é do tipo correto ou um tipo derivado; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets the name of the dependency property.</source>
          <target state="translated">Obtém o nome da propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property gets the name provided as the <ph id="ph1">`name`</ph> parameter during dependency property registration.</source>
          <target state="translated">Esta propriedade obtém o nome fornecido como o <ph id="ph1">`name`</ph> parâmetro durante o registo de propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This name is immutable, and cannot be <ph id="ph1">`null`</ph> or an empty string.</source>
          <target state="translated">Este nome é imutável e não pode ser <ph id="ph1">`null`</ph> ou uma cadeia vazia.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Duplicate name registrations on the same owner type are not permitted, and will throw an exception when you attempt to register the duplicate.</source>
          <target state="translated">Nome duplicado de registos do mesmo tipo de proprietário não são permitidos e irão gerar uma exceção ao tentar registar o duplicado.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The Name of a dependency property must follow the convention of matching the name of its dependency property identifier minus the suffix "Property".</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; O nome de uma propriedade de dependência tem de seguir a Convenção de correspondente ao nome do respetivo identificador de propriedade de dependência menos o sufixo "Property".</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Custom Dependency Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>propriedades de dependência personalizadas<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">O nome da propriedade.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Specifies alternate metadata for this dependency property when it is present on instances of a specified type, overriding the metadata that existed for the dependency property as it was inherited from base types.</source>
          <target state="translated">Especifica os metadados alternativo para esta propriedade de dependência quando está presente em instâncias de um tipo especificado, substituir os metadados que existiam para a propriedade de dependência conforme foi herdada a partir de tipos base.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency property metadata should be overridden before the property system uses the dependency property.</source>
          <target state="translated">Os metadados da propriedade de dependência devem ser substituído antes do sistema de propriedade utilize a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>This equates to the time that specific instances are created using the class that registers the dependency property.</source>
          <target state="translated">Isto equivale à hora que instâncias específicas são criadas utilizando a classe que regista a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to OverrideMetadata should only be performed within the static constructors of the type that provides itself as the <ph id="ph1">`forType`</ph> parameter of this method, or through similar instantiation.</source>
          <target state="translated">Chamadas para OverrideMetadata só devem ser efetuadas dentro de construtores estáticos do tipo que fornece si próprio como o <ph id="ph1">`forType`</ph> parâmetro deste método, ou através da instanciação semelhante.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to change metadata after instances of the owner type exist will not raise exceptions, but will result in inconsistent behaviors in the property system.</source>
          <target state="translated">Tentativa de alterar os metadados depois existem instâncias do tipo de proprietário não irá emitir exceções, mas irá resultar no comportamentos inconsistentes no sistema de propriedade.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>After metadata for a particular derived class override is established with this method, subsequent attempts to override metadata on this same derived class will raise an exception.</source>
          <target state="translated">Depois dos metadados para uma determinada classe derivada de substituição é estabelecido com este método, as tentativas subsequentes para substituir metadados desta classe derivada mesmo irão gerar uma exceção.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied metadata is merged with the property metadata for the dependency property as it exists on the base owner.</source>
          <target state="translated">Os metadados fornecido intercalado com os metadados de propriedade para a propriedade de dependência tal como existe no proprietário de base.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any characteristics that were specified in the original base metadata will persist; only those characteristics that were specifically changed in the new metadata will override the characteristics of the base metadata.</source>
          <target state="translated">Irão manter quaisquer características que foram especificadas nos metadados da base original; apenas as características que foram alteradas especificamente nos metadados da nova substituirão as características dos metadados base.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characteristics such as &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; are replaced if specified in the new metadata.</source>
          <target state="translated">Alguns características como &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;são substituídos se for especificado em novos metadados.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Others, such as &lt;xref:System.Windows.PropertyChangedCallback&gt;, are combined.</source>
          <target state="translated">Outros recursos, tais como &lt;xref:System.Windows.PropertyChangedCallback&gt;, são combinados.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ultimately, the merge behavior depends on the property metadata type being used for the override, so the behavior described here is for the existing property metadata classes used by <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> dependency properties.</source>
          <target state="translated">Em última análise, o comportamento de intercalação depende o tipo de metadados da propriedade que está a ser utilizado para a substituição, pelo que é o comportamento descrito aqui para as classes de metadados de propriedade existentes utilizadas pelo <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> propriedades de dependência.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Metadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Framework Property Metadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>os metadados da propriedade de dependência<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> e <bpt id="p2">[</bpt>os metadados da propriedade Framework<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The type where this dependency property is inherited and where the provided alternate metadata will be applied.</source>
          <target state="translated">O tipo em que esta propriedade de dependência é herdada e onde os metadados alternativo fornecido serão aplicados.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The metadata to apply to the dependency property on the overriding type.</source>
          <target state="translated">Os metadados para aplicar a propriedade de dependência no tipo de substituição.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An attempt was made to override metadata on a read-only dependency property (that operation cannot be done using this signature).</source>
          <target state="translated">Foi efetuada uma tentativa para substituir metadados uma propriedade de dependência só de leitura (não é possível efetuar a operação utilizando esta assinatura).</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Metadata was already established for the dependency property as it exists on the provided type.</source>
          <target state="translated">Os metadados já foi estabelecido para a propriedade de dependência, tal como existe no tipo fornecido.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Supplies alternate metadata for a read-only dependency property when it is present on instances of a specified type, overriding the metadata that was provided in the initial dependency property registration.</source>
          <target state="translated">Fontes alternativa metadados para uma propriedade de dependência só de leitura quando está presente em instâncias de um tipo especificado, substituir os metadados que foi fornecido o registo de propriedade de dependência inicial.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>You must pass the <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the read-only dependency property to avoid raising an exception.</source>
          <target state="translated">Tem de transmitir o <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para a propriedade de dependência só de leitura evitar que gera uma exceção.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature provides underlying implementation for a read-only dependency property identifier (&lt;xref:System.Windows.DependencyPropertyKey&gt;) method.</source>
          <target state="translated">Esta assinatura fornece implementação subjacente para um identificador de propriedade de dependência só de leitura (&lt;xref:System.Windows.DependencyPropertyKey&gt;) método.&lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>If overriding metadata for a read-write dependency property, use &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;.</source>
          <target state="translated">Se substituir metadados para uma propriedade de dependência de leitura e escrita, utilize &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency property metadata should be overridden before the property system uses the dependency property.</source>
          <target state="translated">Os metadados da propriedade de dependência devem ser substituído antes do sistema de propriedade utilize a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This equates to the time that specific objects are created for the class that registers the dependency property.</source>
          <target state="translated">Isto equivale a hora em que são criados objetos específicos para a classe que regista a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; should only be performed within the static constructors of the type that provides itself as the <ph id="ph1">`forType`</ph> parameter of this method, or through similar instantiation.</source>
          <target state="translated">Chamadas para &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;só deve ser efetuada dentro de construtores estáticos do tipo que fornece si próprio como o <ph id="ph1">`forType`</ph> parâmetro deste método, ou através da instanciação semelhante.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to change metadata after instances of the owner type exist will not raise exceptions, but will result in inconsistent behaviors in the property system.</source>
          <target state="translated">Tentativa de alterar os metadados depois existem instâncias do tipo de proprietário não irá emitir exceções, mas irá resultar no comportamentos inconsistentes no sistema de propriedade.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>After metadata for a particular derived class override is established with this method, subsequent attempts to override metadata on this same derived class will raise an exception.</source>
          <target state="translated">Depois dos metadados para uma determinada classe derivada de substituição é estabelecido com este método, as tentativas subsequentes para substituir metadados desta classe derivada mesmo irão gerar uma exceção.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supplied metadata is merged with the property metadata for the dependency property as it exists on the base owner.</source>
          <target state="translated">Os metadados fornecido intercalado com os metadados de propriedade para a propriedade de dependência tal como existe no proprietário de base.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any characteristics that were specified in the original base metadata will persist; only those characteristics that were specifically changed in the new metadata will override the characteristics of the base metadata.</source>
          <target state="translated">Irão manter quaisquer características que foram especificadas nos metadados da base original; apenas as características que foram alteradas especificamente nos metadados da nova substituirão as características dos metadados base.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some characteristics such as &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; are replaced if specified in the new metadata.</source>
          <target state="translated">Alguns características como &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;são substituídos se for especificado em novos metadados.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Others, such as &lt;xref:System.Windows.PropertyChangedCallback&gt;, are combined.</source>
          <target state="translated">Outros recursos, tais como &lt;xref:System.Windows.PropertyChangedCallback&gt;, são combinados.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The merge behavior depends on the property metadata type being used for the override.</source>
          <target state="translated">O comportamento de intercalação depende o tipo de metadados da propriedade que está a ser utilizado para a substituição.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Metadata<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Framework Property Metadata<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>os metadados da propriedade de dependência<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> e <bpt id="p2">[</bpt>os metadados da propriedade Framework<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The type where this dependency property is inherited and where the provided alternate metadata will be applied.</source>
          <target state="translated">O tipo em que esta propriedade de dependência é herdada e onde os metadados alternativo fornecido serão aplicados.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The metadata to apply to the dependency property on the overriding type.</source>
          <target state="translated">Os metadados para aplicar a propriedade de dependência no tipo de substituição.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The access key for a read-only dependency property.</source>
          <target state="translated">A chave de acesso para uma propriedade de dependência só de leitura.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Gets the type of the object that registered the dependency property with the property system, or added itself as owner of the property.</source>
          <target state="translated">Obtém o tipo de objeto que registado a propriedade de dependência com o sistema de propriedade ou adicionado si próprio como proprietário da propriedade.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value was provided during property registration.</source>
          <target state="translated">Este valor foi fornecido durante o registo de propriedade.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owner will be either the original registering type in the case of a &lt;xref:System.Windows.DependencyProperty&gt; identifier generated from a &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; call, or the type that added itself as owner in the case of a &lt;xref:System.Windows.DependencyProperty&gt; identifier generated from an &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt; call.</source>
          <target state="translated">O proprietário será o original ao registar tipo na case de um &lt;xref:System.Windows.DependencyProperty&gt;identificador gerado a partir de um &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;chamada ou o tipo que adicionou si próprio como proprietário da case de um &lt;xref:System.Windows.DependencyProperty&gt;identificador gerado a partir de um &lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;chamar.&lt;/xref:System.Windows.DependencyProperty.AddOwner%2A&gt; &lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.Register%2A&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OwnerType on any given &lt;xref:System.Windows.DependencyProperty&gt; is immutable, and cannot be <ph id="ph1">`null`</ph> in a valid &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">OwnerType em qualquer dado &lt;xref:System.Windows.DependencyProperty&gt;é imutável e não pode ser <ph id="ph1">`null`</ph> num &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; válido&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The type of the object that registered the property or added itself as owner of the property.</source>
          <target state="translated">O tipo do objeto que registado a propriedade ou adicionado si próprio como proprietário da propriedade.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets the type that the dependency property uses for its value.</source>
          <target state="translated">Obtém o tipo que utiliza a propriedade de dependência para o respetivo valor.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property reports the type of the property's value as declared by the original property registration, through the <ph id="ph1">`propertyType`</ph> parameter.</source>
          <target state="translated">Esta propriedade indica o tipo do valor da propriedade conforme declarado pelo registo de propriedade original, através de <ph id="ph1">`propertyType`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similar to the &lt;xref:System.Windows.DependencyProperty.Name%2A&gt;, the property type of a dependency property is immutable after registration.</source>
          <target state="translated">Semelhante para o &lt;xref:System.Windows.DependencyProperty.Name%2A&gt;, o tipo de propriedade de uma propriedade de dependência é imutável após o registo.&lt;/xref:System.Windows.DependencyProperty.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the property value.</source>
          <target state="translated">O &lt;xref:System.Type&gt;do valor de propriedade.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the dependency property identified by this <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance is a read-only dependency property.</source>
          <target state="translated">Obtém um valor que indica se a propriedade de dependência identificado por este <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> instância é uma propriedade de dependência só de leitura.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties are registered within the property system by calling the &lt;xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt; method as opposed to the &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; method.</source>
          <target state="translated">Propriedades de dependência só de leitura estão registadas no sistema de propriedade ao chamar o &lt;xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt;método opposed para o &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;método.&lt;/xref:System.Windows.DependencyProperty.Register%2A&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attached properties can also be registered as read-only; see &lt;xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt;.</source>
          <target state="translated">Propriedades anexadas também podem ser registadas como só de leitura; consulte &lt;xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties require a &lt;xref:System.Windows.DependencyPropertyKey&gt; identifier rather than a &lt;xref:System.Windows.DependencyProperty&gt; identifier to perform metadata operations such as overriding the metadata or setting the value.</source>
          <target state="translated">Propriedades de dependência só de leitura requerem um &lt;xref:System.Windows.DependencyPropertyKey&gt;identificador em vez de um &lt;xref:System.Windows.DependencyProperty&gt;identificador para efetuar operações de metadados, tais como substituir os metadados ou a definição do valor.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you obtained a collection of &lt;xref:System.Windows.DependencyProperty&gt; identifiers through a call to &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt; or another <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> that exposes identifiers, check the ReadOnly value before attempting to call &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt; or &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; using that dependency property identifier as an input parameter, to verify that the dependency property that the identifier represents is not read-only.</source>
          <target state="translated">Se tiver adquirido uma coleção de &lt;xref:System.Windows.DependencyProperty&gt;identificadores através de uma chamada para &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;ou outro <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> que expõe identificadores, verifique o valor só de leitura antes de tentar chamar &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;ou &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;com esse identificador de propriedade de dependência como um parâmetro de entrada, para verificar se a propriedade de dependência que representa o identificador não é só de leitura.&lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; &lt;/xref:System.Windows.DependencyObject.SetValue%2A&gt; &lt;/xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of ReadOnly is <ph id="ph1">`true`</ph> on a dependency property, there is no programmatic way to obtain a reference to the &lt;xref:System.Windows.DependencyPropertyKey&gt; identifier of that dependency property, from the metadata or from the &lt;xref:System.Windows.DependencyProperty&gt; identifier; the identifier must be available as a static field in order to call &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt; against a read-only dependency property.</source>
          <target state="translated">Se o valor só de leitura é <ph id="ph1">`true`</ph> na propriedade de dependência, não é possível programática para obter uma referência ao &lt;xref:System.Windows.DependencyPropertyKey&gt;identificador dessa propriedade de dependência de metadados ou do &lt;xref:System.Windows.DependencyProperty&gt;identificador; o identificador tem de estar disponível como um campo estático para chamar &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;em relação a uma propriedade de dependência só de leitura.&lt;/xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt; &lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a custom dependency property, and register it as read-only, you should define only a get accessor for the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> wrapper property.</source>
          <target state="translated">Quando criar uma propriedade de dependência personalizado e registá-lo como só de leitura, deve definir apenas um acessor get para o <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> propriedade wrapper.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, your class will have a confusing object model for the property wrapper as compared to the access to the backing dependency property.</source>
          <target state="translated">Caso contrário, a sua classe terão um modelo de objeto confuso para o wrapper de propriedade em comparação com o acesso para a propriedade de dependência de cópia de segurança.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Custom Dependency Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>Read-Only Dependency Properties<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>propriedades de dependência personalizadas<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> ou <bpt id="p2">[</bpt>propriedades de dependência só de leitura<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the dependency property is read-only; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se a propriedade de dependência é só de leitura; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Registers a dependency property with the specified property name, property type, and owner type.</source>
          <target state="translated">Regista uma propriedade de dependência com o nome de propriedade especificado, o tipo de propriedade e o tipo de proprietário.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Para obter mais informações sobre o registo de propriedade de dependência, consulte &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">O nome da propriedade de dependência para registar.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The name must be unique within the registration namespace of the owner type.</source>
          <target state="translated">O nome tem de ser exclusivo dentro do espaço de nomes de registo do tipo de proprietário.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">O tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">O tipo de proprietário que está a registar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Um identificador de propriedade de dependência que deve ser utilizado para definir o valor de um <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> campo na sua classe.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Esse identificador, em seguida, é utilizado para referenciar a propriedade de dependência mais tarde, para operações como definir o respetivo valor através de programação ou obtenção de metadados.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Registers a dependency property with the specified property name, property type, owner type, and property metadata.</source>
          <target state="translated">Regista uma propriedade de dependência com o nome de propriedade especificado, o tipo de propriedade, o tipo de proprietário e os metadados da propriedade.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Para obter mais informações sobre o registo de propriedade de dependência, consulte &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">O nome da propriedade de dependência para registar.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">O tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">O tipo de proprietário que está a registar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Metadados da propriedade para a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Um identificador de propriedade de dependência que deve ser utilizado para definir o valor de um <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> campo na sua classe.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Esse identificador, em seguida, é utilizado para referenciar a propriedade de dependência mais tarde, para operações como definir o respetivo valor através de programação ou obtenção de metadados.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Registers a dependency property with the specified property name, property type, owner type, property metadata, and a value validation callback for the property.</source>
          <target state="translated">Regista uma propriedade de dependência com o nome de propriedade especificado, o tipo de propriedade, o tipo de proprietário, os metadados da propriedade e uma chamada de retorno de validação de valor da propriedade.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Para obter mais informações sobre o registo de propriedade de dependência, consulte &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">O nome da propriedade de dependência para registar.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">O tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">O tipo de proprietário que está a registar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Metadados da propriedade para a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">Uma referência a uma chamada de retorno que deverá efetuar qualquer uma validação personalizada do valor de propriedade de dependência para além da validação do tipo típica.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Um identificador de propriedade de dependência que deve ser utilizado para definir o valor de um <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> campo na sua classe.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Esse identificador, em seguida, é utilizado para referenciar a propriedade de dependência mais tarde, para operações como definir o respetivo valor através de programação ou obtenção de metadados.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Registers an attached property with the specified property name, property type, and owner type.</source>
          <target state="translated">Regista uma propriedade anexada com o nome de propriedade especificado, o tipo de propriedade e o tipo de proprietário.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attached property is a property concept defined by <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Uma propriedade anexada é um conceito de propriedade definido pelo <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> implements attached properties as dependency properties.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>implementa propriedades anexadas como propriedades de dependência.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> attached properties are dependency properties, they can have metadata applied that can be used by the general property system for operations such as reporting layout characteristics.</source>
          <target state="translated">Porque o <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> propriedades anexadas são propriedades de dependência, podem ter metadados aplicados que podem ser utilizados pelo sistema propriedade geral para operações como relatórios características de esquema.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>ligado descrição geral de propriedades<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Para obter mais informações sobre o registo de propriedade de dependência, consulte &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">O nome da propriedade de dependência para registar.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">O tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">O tipo de proprietário que está a registar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Um identificador de propriedade de dependência que deve ser utilizado para definir o valor de um <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> campo na sua classe.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Esse identificador, em seguida, é utilizado para referenciar a propriedade de dependência mais tarde, para operações como definir o respetivo valor através de programação ou obtenção de metadados.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Registers an attached property with the specified property name, property type, owner type, and property metadata.</source>
          <target state="translated">Regista uma propriedade anexada com o nome de propriedade especificado, o tipo de propriedade, o tipo de proprietário e os metadados da propriedade.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">O nome da propriedade de dependência para registar.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">O tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">O tipo de proprietário que está a registar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Metadados da propriedade para a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This can include the default value as well as other characteristics.</source>
          <target state="translated">Isto pode incluir o valor predefinido, bem como outras características.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Um identificador de propriedade de dependência que deve ser utilizado para definir o valor de um <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> campo na sua classe.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Esse identificador, em seguida, é utilizado para referenciar a propriedade de dependência mais tarde, para operações como definir o respetivo valor através de programação ou obtenção de metadados.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Registers an attached property with the specified property type, owner type, property metadata, and value validation callback for the property.</source>
          <target state="translated">Regista uma propriedade anexada com o tipo de propriedade especificado, o tipo de proprietário, os metadados da propriedade e chamada de retorno de validação de valor da propriedade.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">O nome da propriedade de dependência para registar.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">O tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">O tipo de proprietário que está a registar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Metadados da propriedade para a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>This can include the default value as well as other characteristics.</source>
          <target state="translated">Isto pode incluir o valor predefinido, bem como outras características.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">Uma referência a uma chamada de retorno que deverá efetuar qualquer uma validação personalizada do valor de propriedade de dependência para além da validação do tipo típica.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A dependency property identifier that should be used to set the value of a <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> field in your class.</source>
          <target state="translated">Um identificador de propriedade de dependência que deve ser utilizado para definir o valor de um <bpt id="p1">&lt;xref uid="langword_csharp_public static readonly" name="public static readonly" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> campo na sua classe.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.</source>
          <target state="translated">Esse identificador, em seguida, é utilizado para referenciar a propriedade de dependência mais tarde, para operações como definir o respetivo valor através de programação ou obtenção de metadados.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Registers a read-only attached property, with the specified property type, owner type, and property metadata.</source>
          <target state="translated">Regista uma propriedade anexada só de leitura, com o tipo de propriedade especificado, o tipo de proprietário e os metadados da propriedade.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">O nome da propriedade de dependência para registar.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">O tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">O tipo de proprietário que está a registar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Metadados da propriedade para a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.</source>
          <target state="translated">Uma chave de propriedade de dependência que deve ser utilizada para definir o valor de um campo estático de só de leitura na sua classe, que, em seguida, é utilizado para referenciar a propriedade de dependência mais tarde.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Registers a read-only attached property, with the specified property type, owner type, property metadata, and a validation callback.</source>
          <target state="translated">Regista uma propriedade anexada só de leitura, com o tipo de propriedade especificado, o tipo de proprietário, os metadados da propriedade e uma chamada de retorno de validação.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">O nome da propriedade de dependência para registar.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">O tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">O tipo de proprietário que está a registar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Metadados da propriedade para a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">Uma referência a uma chamada de retorno criados pelo utilizador, que deverá efetuar qualquer uma validação personalizada do valor de propriedade de dependência para além da validação do tipo típica.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.</source>
          <target state="translated">Uma chave de propriedade de dependência que deve ser utilizada para definir o valor de um campo estático de só de leitura na sua classe, que, em seguida, é utilizado para referenciar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Registers a read-only dependency property, with the specified property type, owner type, and property metadata.</source>
          <target state="translated">Regista uma propriedade de dependência só de leitura, com o tipo de propriedade especificado, o tipo de proprietário e os metadados da propriedade.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the type &lt;xref:System.Windows.DependencyPropertyKey&gt;, whereas &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; returns the type &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Este método devolve o tipo &lt;xref:System.Windows.DependencyPropertyKey&gt;, enquanto que &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;devolve o tipo &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the keys that represent read-only properties are not made public, because the keys can be used to set the dependency property value by calling &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.</source>
          <target state="translated">Normalmente, as chaves que representam propriedades só de leitura não sejam feitas públicas, porque as chaves podem ser utilizadas para definir o valor de propriedade de dependência chamando &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.&lt;/xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your class design will affect your requirements, but it is generally recommended to limit the access and visibility of any &lt;xref:System.Windows.DependencyPropertyKey&gt; to only those parts of your code that are necessary to set that dependency property as part of class or application logic.</source>
          <target state="translated">O design da sua classe irá afetar os seus requisitos, mas é, geralmente, recomendado para limitar o acesso e visibilidade de qualquer &lt;xref:System.Windows.DependencyPropertyKey&gt;apenas as partes do seu código que são necessárias para definir essa propriedade de dependência como parte da classe ou aplicação lógica.&lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also recommended that you expose a dependency property identifier for the read-only dependency property, by exposing the value of &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt; as a <ph id="ph1">`public static readonly`</ph> field on your class.</source>
          <target state="translated">Também é recomendável que expõem um identificador de propriedade de dependência para a propriedade de dependência só de leitura, por expor o valor de &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;como um <ph id="ph1">`public static readonly`</ph> campo na sua classe.&lt;/xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties are a fairly typical scenario both in the existing <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> and for customization scenarios, because other <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> features might require a dependency property even if that property is not intended to be settable by callers.</source>
          <target state="translated">Propriedades de dependência só de leitura são razoavelmente normal cenário ambas em existente <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)]</ph> e para cenários de personalização, porque outras <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> funcionalidades poderão requerer uma propriedade de dependência, mesmo se essa propriedade não se destina a ser definível pelos chamadores.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the value of a read-only dependency property as the basis for other property system operations that take a dependency property, such as basing a &lt;xref:System.Windows.Trigger&gt; on the dependency property in a style.</source>
          <target state="translated">Pode utilizar o valor de uma propriedade de dependência só de leitura como base para outras operações do sistema de propriedade que ter uma propriedade de dependência, tais como basing um &lt;xref:System.Windows.Trigger&gt;na propriedade de dependência num style.&lt;/xref:System.Windows.Trigger&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Para obter mais informações sobre o registo de propriedade de dependência, consulte &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">O nome da propriedade de dependência para registar.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">O tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">O tipo de proprietário que está a registar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Metadados da propriedade para a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.</source>
          <target state="translated">Uma chave de propriedade de dependência que deve ser utilizada para definir o valor de um campo estático de só de leitura na sua classe, que, em seguida, é utilizado para referenciar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Registers a read-only dependency property, with the specified property type, owner type, property metadata, and a validation callback.</source>
          <target state="translated">Regista uma propriedade de dependência só de leitura, com o tipo de propriedade especificado, o tipo de proprietário, os metadados da propriedade e uma chamada de retorno de validação.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the type &lt;xref:System.Windows.DependencyPropertyKey&gt;, whereas &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; returns the type &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Este método devolve o tipo &lt;xref:System.Windows.DependencyPropertyKey&gt;, enquanto que &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;devolve o tipo &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; &lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the keys that represent read-only properties are not made public, because the keys can be used to set the dependency property value by calling &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.</source>
          <target state="translated">Normalmente, as chaves que representam propriedades só de leitura não sejam feitas públicas, porque as chaves podem ser utilizadas para definir o valor de propriedade de dependência chamando &lt;xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;.&lt;/xref:System.Windows.DependencyObject.SetValue%28System.Windows.DependencyPropertyKey%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your class design will affect your requirements, but it is generally recommended to limit the access and visibility of any &lt;xref:System.Windows.DependencyPropertyKey&gt; to only those parts of your code that are necessary to set that dependency property as part of class or application logic.</source>
          <target state="translated">O design da sua classe irá afetar os seus requisitos, mas é, geralmente, recomendado para limitar o acesso e visibilidade de qualquer &lt;xref:System.Windows.DependencyPropertyKey&gt;apenas as partes do seu código que são necessárias para definir essa propriedade de dependência como parte da classe ou aplicação lógica.&lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also recommended that you expose a dependency property identifier for the read-only dependency property, by exposing the value of &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt; as a <ph id="ph1">`public static readonly`</ph> field on your class.</source>
          <target state="translated">Também é recomendável que expõem um identificador de propriedade de dependência para a propriedade de dependência só de leitura, por expor o valor de &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;como um <ph id="ph1">`public static readonly`</ph> campo na sua classe.&lt;/xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read-only dependency properties are a fairly typical scenario.</source>
          <target state="translated">Propriedades de dependência só de leitura são um cenário razoavelmente normal.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the value of a read-only dependency property as the basis for other property system operations that take a dependency property, such as basing a &lt;xref:System.Windows.Trigger&gt; on the dependency property in a style.</source>
          <target state="translated">Pode utilizar o valor de uma propriedade de dependência só de leitura como base para outras operações do sistema de propriedade que ter uma propriedade de dependência, tais como basing um &lt;xref:System.Windows.Trigger&gt;na propriedade de dependência num style.&lt;/xref:System.Windows.Trigger&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dependency property registration, see &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Para obter mais informações sobre o registo de propriedade de dependência, consulte &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>Validation on a read-only dependency property might be less important.</source>
          <target state="translated">Validação com uma propriedade de dependência só de leitura poderá ser menos importante.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>The nonpublic access level you specify for the key reduces the likelihood for arbitrary invalid input.</source>
          <target state="translated">O nível de acesso nonpublic que especificar para a chave reduz a probabilidade de entrada inválida arbitrária.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The name of the dependency property to register.</source>
          <target state="translated">O nome da propriedade de dependência para registar.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The type of the property.</source>
          <target state="translated">O tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The owner type that is registering the dependency property.</source>
          <target state="translated">O tipo de proprietário que está a registar a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Property metadata for the dependency property.</source>
          <target state="translated">Metadados da propriedade para a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.</source>
          <target state="translated">Uma referência a uma chamada de retorno criados pelo utilizador, que deverá efetuar qualquer uma validação personalizada do valor de propriedade de dependência para além da validação do tipo típica.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.</source>
          <target state="translated">Uma chave de propriedade de dependência que deve ser utilizada para definir o valor de um campo estático de só de leitura na sua classe, que, em seguida, é utilizado para referenciar a propriedade de dependência mais tarde.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the dependency property.</source>
          <target state="translated">Devolve a representação de cadeia da propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation returns the &lt;xref:System.Windows.DependencyProperty.Name%2A&gt; property value.</source>
          <target state="translated">Esta implementação devolve o &lt;xref:System.Windows.DependencyProperty.Name%2A&gt;valor da propriedade.&lt;/xref:System.Windows.DependencyProperty.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The string representation of the dependency property.</source>
          <target state="translated">A representação de cadeia da propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Specifies a static value that is used by the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system rather than <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the property exists, but does not have its value set by the property system.</source>
          <target state="translated">Especifica um valor estático que é utilizado pelo <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> sistema propriedade vez <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> para indicar que a propriedade existe, mas não tem o respetivo valor definido pelo sistema de propriedade.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue is a sentinel value that is used for scenarios where the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system is unable to determine a requested &lt;xref:System.Windows.DependencyProperty&gt; value.</source>
          <target state="translated">UnsetValue é um valor de sentinel que é utilizado para cenários em que o <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> sistema de propriedade não é possível determinar um pedido &lt;xref:System.Windows.DependencyProperty&gt;valor.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue is used rather than <ph id="ph1">`null`</ph>, because <ph id="ph2">`null`</ph> could be a valid property value, as well as a valid (and frequently used) &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;.</source>
          <target state="translated">É utilizado UnsetValue vez <ph id="ph1">`null`</ph>porque <ph id="ph2">`null`</ph> pode ser um valor de propriedade válido, bem como uma válido (e utilizadas frequentemente) &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue is never returned out of &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">UnsetValue nunca é devolvido fora &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt; on a dependency property on a &lt;xref:System.Windows.DependencyObject&gt; instance, one of the following applies:      -   A dependency property has a default value established in metadata and that value is returned.</source>
          <target state="translated">Quando chamar &lt;xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;uma propriedade de dependência num &lt;xref:System.Windows.DependencyObject&gt;instância, um dos seguintes aplica-se: - uma propriedade de dependência tem um valor predefinido estabelecido nos metadados e que o valor é devolvido.&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.DependencyObject.GetValue%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value might come from &lt;xref:System.Windows.DependencyProperty.DefaultMetadata%2A&gt;.</source>
          <target state="translated">Este valor pode ser proveniente de &lt;xref:System.Windows.DependencyProperty.DefaultMetadata%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.DefaultMetadata%2A&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Some other value was established by the property system, and the default value is no longer relevant.</source>
          <target state="translated">-Foi estabelecido outro valor pelo sistema propriedade e o valor predefinido já não é relevante.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>precedência de valor de propriedade de dependência<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting a &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt; of UnsetValue is specifically disallowed.</source>
          <target state="translated">Definir um &lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;de UnsetValue não é especificamente permitido.&lt;/xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.DependencyObject.ReadLocalValue%2A?displayProperty=fullName&gt; returns UnsetValue when the requested property has not been locally set.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyObject.ReadLocalValue%2A?displayProperty=fullName&gt;Devolve UnsetValue quando a propriedade pedida não tiver sido definida localmente.&lt;/xref:System.Windows.DependencyObject.ReadLocalValue%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>UnsetValue has a special meaning when used as the return value of a &lt;xref:System.Windows.CoerceValueCallback&gt;.</source>
          <target state="translated">UnsetValue tem um significado especial quando utilizado como o valor de retorno de &lt;xref:System.Windows.CoerceValueCallback&gt;.&lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>chamadas de retorno de propriedade de dependência e validação<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are binding to a database, note that UnsetValue is not equivalent to &lt;xref:System.DBNull.Value&gt;, in a similar way to how &lt;xref:System.DBNull.Value&gt; is not equivalent to a true null.</source>
          <target state="translated">Se estiver a vincular a uma base de dados, tenha em atenção que UnsetValue não é equivalente ao &lt;xref:System.DBNull.Value&gt;, de forma semelhante ao procedimento &lt;xref:System.DBNull.Value&gt;não é equivalente a um valor nulo true.&lt;/xref:System.DBNull.Value&gt; &lt;/xref:System.DBNull.Value&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Gets the value validation callback for the dependency property.</source>
          <target state="translated">Obtém a chamada de retorno de validação de valor para a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property will contain <ph id="ph1">`null`</ph> for any dependency property with no registered validation callback.</source>
          <target state="translated">Esta propriedade irá conter <ph id="ph1">`null`</ph> para qualquer propriedade de dependência com chamada de retorno não registada validação.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>Validate value callbacks must act in a static sense: validation applied through the &lt;xref:System.Windows.ValidateValueCallback&gt; cannot determine whether the provided value is valid for any particular instance.</source>
          <target state="translated">Validar o valor de chamadas de retorno tem de funcionar numa noção estática: validação aplicada através da &lt;xref:System.Windows.ValidateValueCallback&gt;não é possível determinar se o valor fornecido é válido para qualquer instância específica.&lt;/xref:System.Windows.ValidateValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback can only determine whether all objects that possess the dependency property should or should not accept the provided value as valid.</source>
          <target state="translated">A chamada de retorno só pode determinar se todos os objetos que tenha a propriedade de dependência devem ou não devem aceitar o valor fornecido como válido.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to perform validation that relies on knowing the values of other dependency properties on a particular instance, use a &lt;xref:System.Windows.CoerceValueCallback&gt; instead.</source>
          <target state="translated">Se precisar de efetuar a validação que depende de saber os valores de outras propriedades de dependência numa determinada instância, utilize um &lt;xref:System.Windows.CoerceValueCallback&gt;em vez disso.&lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.CoerceValueCallback&gt; is registered as part of dependency property metadata, rather than directly within the dependency property identifier.</source>
          <target state="translated">O &lt;xref:System.Windows.CoerceValueCallback&gt;está registado como parte dos metadados da propriedade de dependência, em vez de diretamente no identificador de propriedade de dependência.&lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>chamadas de retorno de propriedade de dependência e validação<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The value validation callback for this dependency property, as provided for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">validateValueCallback</ph><ept id="p1">&lt;/code&gt;</ept> parameter in the original dependency property registration.</source>
          <target state="translated">A chamada de retorno de validação de valor para esta propriedade de dependência, conforme fornecida para o <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">validateValueCallback</ph> <ept id="p1">&lt;/code&gt;</ept> parâmetro no registo de propriedade de dependência original.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>