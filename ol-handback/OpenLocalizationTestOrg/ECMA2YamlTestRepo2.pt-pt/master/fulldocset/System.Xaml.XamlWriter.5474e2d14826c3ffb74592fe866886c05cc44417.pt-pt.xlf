<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f55a66b17a0893f709950c5df6dd09df06a0d1f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">878667b571c63df00255b56ed0f09c2cac7c108d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a29166a9764d72ef00d0e8acb4275872a44bc25e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides default implementation and base class definitions for a XAML writer.</source>
          <target state="translated">Fornece a predefinição implementação e a base de definições de classe para um escritor XAML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This is not a working default XAML writer; you must either derive from XamlWriter and implement its abstract members, or use an existing XamlWriter derived class.</source>
          <target state="translated">Não se trata de um escritor XAML do trabalho predefinida; tem de derivar de XamlWriter e implementar os seus membros abstratos ou utilize um XamlWriter existente a classe derivada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two most relevant practical derived classes of XamlWriter are the &lt;xref:System.Xaml.XamlXmlWriter&gt; and &lt;xref:System.Xaml.XamlObjectWriter&gt; classes, as the following details explain:      -   &lt;xref:System.Xaml.XamlXmlWriter&gt; processes a XAML node set and produces an XML text file.</source>
          <target state="translated">As dois mais relevantes práticas as classes derivadas de XamlWriter são o &lt;xref:System.Xaml.XamlXmlWriter&gt;e &lt;xref:System.Xaml.XamlObjectWriter&gt;classes, como os detalhes seguintes explicam:- &lt;xref:System.Xaml.XamlXmlWriter&gt;processa um conjunto de nós XAML e produz um ficheiro de texto XML.&lt;/xref:System.Xaml.XamlXmlWriter&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlXmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class might be used for serialization or as part of the function of a tool that works with in-memory representation of XAML and produces XAML file output.</source>
          <target state="translated">Esta classe pode ser utilizada para a serialização ou como parte da função de uma ferramenta que funciona com a representação de memória de XAML e produz saída de ficheiro XAML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Xaml.XamlObjectWriter&gt; processes a XAML node set and produces an object graph.</source>
          <target state="translated">- &lt;xref:System.Xaml.XamlObjectWriter&gt;processa um conjunto de nós XAML e produz um gráfico de objeto.&lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class might be used as part of a full or partial customization of a technology's XAML parser.</source>
          <target state="translated">Esta classe pode ser utilizada como parte de uma personalização total ou parcial do analisador XAML uma tecnologia.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Xaml.XamlWriterSettings&gt; is a class for settings that are used by a XamlWriter; however, by default, the &lt;xref:System.Xaml.XamlWriterSettings&gt; class does not hold any specific settings.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlWriterSettings&gt;é uma classe para as definições que são utilizadas num XamlWriter; No entanto, por predefinição, o &lt;xref:System.Xaml.XamlWriterSettings&gt;classe não contém quaisquer definições específicas.&lt;/xref:System.Xaml.XamlWriterSettings&gt;&lt;/xref:System.Xaml.XamlWriterSettings&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XamlWriter base constructor does not use this settings class as an argument, nor does any other XamlWriter member.</source>
          <target state="translated">O construtor de base XamlWriter não utilizar esta classe de definições como um argumento, nem qualquer outro membro XamlWriter.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the &lt;xref:System.Xaml.XamlXmlWriter&gt; and &lt;xref:System.Xaml.XamlObjectWriter&gt; classes include their own settings classes as construction arguments.</source>
          <target state="translated">Em vez disso, o &lt;xref:System.Xaml.XamlXmlWriter&gt;e &lt;xref:System.Xaml.XamlObjectWriter&gt;classes incluem as suas próprias classes de definições como argumentos de construção.&lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlXmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>These settings classes are &lt;xref:System.Xaml.XamlXmlWriterSettings&gt; and &lt;xref:System.Xaml.XamlObjectWriterSettings&gt;.</source>
          <target state="translated">Estas classes definições são &lt;xref:System.Xaml.XamlXmlWriterSettings&gt;e &lt;xref:System.Xaml.XamlObjectWriterSettings&gt;.&lt;/xref:System.Xaml.XamlObjectWriterSettings&gt; &lt;/xref:System.Xaml.XamlXmlWriterSettings&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The settings classes define actual settings values and are based on &lt;xref:System.Xaml.XamlWriterSettings&gt;, so that they can use the &lt;xref:System.Xaml.XamlWriterSettings&gt; merge feature.</source>
          <target state="translated">As classes de definições definir valores de definições real e se baseiam em &lt;xref:System.Xaml.XamlWriterSettings&gt;, para que podem utilizar o &lt;xref:System.Xaml.XamlWriterSettings&gt;funcionalidade de intercalação.&lt;/xref:System.Xaml.XamlWriterSettings&gt; &lt;/xref:System.Xaml.XamlWriterSettings&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Xaml.XamlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Closes the XAML writer object.</source>
          <target state="translated">Fecha o objeto de escritor XAML.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the base implementation, calling Close calls the &lt;xref:System.Xaml.XamlWriter.Dispose%2A&gt; method with the <ph id="ph1">`isDisposing`</ph> parameter as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Numa implementação base, ao chamar chamadas de fechar o &lt;xref:System.Xaml.XamlWriter.Dispose%2A&gt;método com o <ph id="ph1">`isDisposing`</ph> parâmetro como <ph id="ph2">`true`</ph>.&lt;/xref:System.Xaml.XamlWriter.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Xaml.XamlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">Liberta os recursos não geridos utilizados pelo <bpt id="p1">&lt;xref href="System.Xaml.XamlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e opcionalmente liberta os recursos geridos.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call the base class to get &lt;xref:System.Xaml.XamlWriter.IsDisposed%2A&gt; = <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Tem de chamar a classe base para obter &lt;xref:System.Xaml.XamlWriter.IsDisposed%2A&gt;= <ph id="ph1">`true`</ph>.&lt;/xref:System.Xaml.XamlWriter.IsDisposed%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release the managed resources; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Para libertar os recursos geridos; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets whether &lt;xref:System.Xaml.XamlWriter.Dispose*&gt; has been called.</source>
          <target state="translated">Obtém se &lt;xref:System.Xaml.XamlWriter.Dispose*&gt;ter sido chamado.&lt;/xref:System.Xaml.XamlWriter.Dispose*&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if &lt;xref:System.Xaml.XamlWriter.Dispose*&gt; has been called; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se &lt;xref:System.Xaml.XamlWriter.Dispose*&gt;foi chamado; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Xaml.XamlWriter.Dispose*&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the active XAML schema context.</source>
          <target state="translated">Quando implementada numa classe derivada, obtém o contexto de esquema do Active Directory XAML.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The active XAML schema context.</source>
          <target state="translated">Contexto de esquema do Active Directory XAML.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.IDisposable.Dispose*&gt;.</source>
          <target state="translated">Consulte &lt;xref:System.IDisposable.Dispose*&gt;.&lt;/xref:System.IDisposable.Dispose*&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, produces the representation of an end member node.</source>
          <target state="translated">Quando implementada numa classe derivada, produz a representação de um nó de membro de fim.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, produces the representation of an end object node.</source>
          <target state="translated">Quando implementada numa classe derivada, produz a representação de um nó de objeto de fim.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.</source>
          <target state="translated">Quando implementada numa classe derivada, produz um objeto para casos em que o objeto é um predefinido ou valor implícito da propriedade que está a ser definida, em vez de ser especificado como um valor de objecto discretas no conjunto de nós XAML de entrada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes a XAML namespace declaration node.</source>
          <target state="translated">Quando implementada numa classe derivada, escreve um nó de declaração de espaço de nomes XAML.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The namespace declaration to write.</source>
          <target state="translated">A declaração de espaço de nomes para escrita.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Performs switching based on node type from the XAML reader (<ph id="ph1">&amp;lt;</ph>xref:System.Xaml.XamlReader.NodeType%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>) and calls the relevant <bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method for the writer implementation.</source>
          <target state="translated">Efetua a mudança com base no tipo de nó do leitor XAML (<ph id="ph1">&amp;lt;</ph>xref:System.Xaml.XamlReader.NodeType%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>) e chama o relevante <bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> método para a implementação de escritor.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">##</ph> Notes for Inheritors    The WriteNode method is not a virtual method because it has practical implementation for all existing &lt;xref:System.Xaml.XamlNodeType&gt; values.</source>
          <target state="translated"><ph id="ph1">##</ph>Notas para os herdeiros de WriteNode o método não é um método virtual porque tem prática implementação para todas as existentes &lt;xref:System.Xaml.XamlNodeType&gt;valores.&lt;/xref:System.Xaml.XamlNodeType&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Based on &lt;xref:System.Xaml.XamlNodeType&gt;, WriteNode calls into the <ph id="ph1">`Write`</ph> virtual members that are dedicated to particular node types.</source>
          <target state="translated">Com base no &lt;xref:System.Xaml.XamlNodeType&gt;, WriteNode chama para o <ph id="ph1">`Write`</ph> membros virtuais dedicadas para tipos de nó específico.&lt;/xref:System.Xaml.XamlNodeType&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have an advanced XAML writing scenario that expands the XAML type system and XAML node stream concept so that new node types are defined, do not use WriteNode calls in your logic.</source>
          <target state="translated">Se tiver um cenário de escrita de XAML avançado expande o conceito de sequência de nós XAML e sistema de tipo XAML, para que os novos tipos de nó são definidos, não utilize WriteNode chamadas a lógica.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must instead provide your own alternative for node-type switching logic in the class or in virtual overrides.</source>
          <target state="translated">Em vez disso, tem de fornecer a suas próprias alternativa para a lógica de mudança de tipo de nó na classe ou nas substituições virtuais.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The reader to use for node determination.</source>
          <target state="translated">O leitor a utilizar para a determinação de nó.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default implementation encountered a <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is not in the default enumeration.</source>
          <target state="translated">A implementação predefinida encontrada uma <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que não está a ser a enumeração de predefinição.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes the representation of a start member node.</source>
          <target state="translated">Quando implementada numa classe derivada, escreve a representação de um nó de membro de início.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The member node to write.</source>
          <target state="translated">O nó de membro para escrita.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes the representation of a start object node.</source>
          <target state="translated">Quando implementada numa classe derivada, escreve a representação de um nó de objeto de início.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The XAML type of the object to write.</source>
          <target state="translated">O tipo XAML do objeto para escrita.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes a value node.</source>
          <target state="translated">Quando implementada numa classe derivada, escreve um nó de valor.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">O valor a escrever.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>