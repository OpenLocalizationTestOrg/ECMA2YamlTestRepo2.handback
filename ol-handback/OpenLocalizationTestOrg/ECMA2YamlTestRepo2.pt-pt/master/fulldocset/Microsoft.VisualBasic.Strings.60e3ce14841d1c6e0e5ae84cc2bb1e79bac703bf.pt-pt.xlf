<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">835d48ef298d118f4c72e7888f734da0ad8b1b49</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.Strings.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5be5233baf5293b37ee25f3efb7a0d13d0298861</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4989b6f0d59887429b4198491c25b76544368f0d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Strings" name="Strings" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> module contains procedures used to perform string operations.</source>
          <target state="translated">O <bpt id="p1">&lt;xref uid="langword_csharp_Strings" name="Strings" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> módulo contém os procedimentos utilizados para executar operações de cadeia.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This module supports the Visual Basic language keywords and run-time library members that manipulate strings.</source>
          <target state="translated">Este módulo suporta as palavras-chave de linguagem do Visual Basic e membros de biblioteca de tempo de execução que manipular cadeias.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">Devolve um <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representando o código de carateres correspondente a um caráter.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph>Devolve o <bpt id="p1">*</bpt>code ponto<ept id="p1">*</ept>, ou o código de carateres para o carácter de entrada.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">Isto pode ser 0 e 255 carateres de byte único conjunto (SBCS) valores e -32768 e 32767 carateres de byte duplo (DBCS) do conjunto valores.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph>Devolve o ponto de código Unicode para o carácter de entrada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be 0 through 65535.</source>
          <target state="translated">Isto pode ser 0 e 65535.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">O valor devolvido é independente das definições de idioma e o código de página para o thread actual.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`AscB`</ph> função das versões anteriores do Visual Basic devolve um código para um byte em vez de um caráter.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic 2005 estão em Unicode, e <ph id="ph1">`AscB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, only the first character of the string is used for input.</source>
          <target state="translated">Se <ph id="ph1">`String`</ph> é um <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão, apenas o primeiro caráter da cadeia é utilizada para a entrada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or contains no characters, an &lt;xref:System.ArgumentException&gt; error occurs.</source>
          <target state="translated">Se <ph id="ph1">`String`</ph> é <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou não contém carateres, uma &lt;xref:System.ArgumentException&gt;erro ocorrer.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">Devolve um <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representando o código de carateres correspondente a um caráter.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">Devolve um <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representando o código de carateres correspondente a um caráter.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph>Devolve o <bpt id="p1">*</bpt>code ponto<ept id="p1">*</ept>, ou o código de carateres para o carácter de entrada.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">Isto pode ser 0 e 255 carateres de byte único conjunto (SBCS) valores e -32768 e 32767 carateres de byte duplo (DBCS) do conjunto valores.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph>Devolve o ponto de código Unicode para o carácter de entrada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be 0 through 65535.</source>
          <target state="translated">Isto pode ser 0 e 65535.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">O valor devolvido é independente das definições de idioma e o código de página para o thread actual.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`AscB`</ph> função das versões anteriores do Visual Basic devolve um código para um byte em vez de um caráter.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic 2005 estão em Unicode, e <ph id="ph1">`AscB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, only the first character of the string is used for input.</source>
          <target state="translated">Se <ph id="ph1">`String`</ph> é um <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão, apenas o primeiro caráter da cadeia é utilizada para a entrada.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or contains no characters, an &lt;xref:System.ArgumentException&gt; error occurs.</source>
          <target state="translated">Se <ph id="ph1">`String`</ph> é <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou não contém carateres, uma &lt;xref:System.ArgumentException&gt;erro ocorrer.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">Devolve um <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representando o código de carateres correspondente a um caráter.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">Devolve um <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representando o código de carateres correspondente a um caráter.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph>Devolve o <bpt id="p1">*</bpt>code ponto<ept id="p1">*</ept>, ou o código de carateres para o carácter de entrada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">Isto pode ser 0 e 255 carateres de byte único conjunto (SBCS) valores e -32768 e 32767 carateres de byte duplo (DBCS) do conjunto valores.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph>Devolve o ponto de código Unicode para o carácter de entrada.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be 0 through 65535.</source>
          <target state="translated">Isto pode ser 0 e 65535.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">O valor devolvido é independente das definições de idioma e o código de página para o thread actual.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`AscB`</ph> função das versões anteriores do Visual Basic devolve um código para um byte em vez de um caráter.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic 2005 estão em Unicode, e <ph id="ph1">`AscB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, only the first character of the string is used for input.</source>
          <target state="translated">Se <ph id="ph1">`String`</ph> é um <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão, apenas o primeiro caráter da cadeia é utilizada para a entrada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or contains no characters, an &lt;xref:System.ArgumentException&gt; error occurs.</source>
          <target state="translated">Se <ph id="ph1">`String`</ph> é <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou não contém carateres, uma &lt;xref:System.ArgumentException&gt;erro ocorrer.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">Devolve um <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representando o código de carateres correspondente a um caráter.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">Devolve um <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representando o código de carateres correspondente a um caráter.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph>Devolve o <bpt id="p1">*</bpt>code ponto<ept id="p1">*</ept>, ou o código de carateres para o carácter de entrada.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">Isto pode ser 0 e 255 carateres de byte único conjunto (SBCS) valores e -32768 e 32767 carateres de byte duplo (DBCS) do conjunto valores.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph>Devolve o ponto de código Unicode para o carácter de entrada.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be 0 through 65535.</source>
          <target state="translated">Isto pode ser 0 e 65535.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">O valor devolvido é independente das definições de idioma e o código de página para o thread actual.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`AscB`</ph> função das versões anteriores do Visual Basic devolve um código para um byte em vez de um caráter.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic 2005 estão em Unicode, e <ph id="ph1">`AscB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, only the first character of the string is used for input.</source>
          <target state="translated">Se <ph id="ph1">`String`</ph> é um <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão, apenas o primeiro caráter da cadeia é utilizada para a entrada.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`String`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or contains no characters, an &lt;xref:System.ArgumentException&gt; error occurs.</source>
          <target state="translated">Se <ph id="ph1">`String`</ph> é <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou não contém carateres, uma &lt;xref:System.ArgumentException&gt;erro ocorrer.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character code corresponding to a character.</source>
          <target state="translated">Devolve um <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> representando o código de carateres correspondente a um caráter.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">Devolve o caráter associado ao código de carateres especificado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The asymmetric range accepted for <ph id="ph1">`CharCode`</ph> compensates for the storage differences between the <ph id="ph2">`Short`</ph> and the <ph id="ph3">`Integer`</ph>.</source>
          <target state="translated">O intervalo de assimétrico aceites para <ph id="ph1">`CharCode`</ph> compensates para as diferenças de armazenamento entre o <ph id="ph2">`Short`</ph> e <ph id="ph3">`Integer`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, -29183 is a <ph id="ph1">`Short`</ph> but +36353 is an <ph id="ph2">`Integer`</ph>.</source>
          <target state="translated">Por exemplo, é-29183 um <ph id="ph1">`Short`</ph> mas +36353 é um <ph id="ph2">`Integer`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This also facilitates compatibility with Visual Basic 6.0.</source>
          <target state="translated">Isto também facilita a compatibilidade com o Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Chr`</ph> uses the &lt;xref:System.Text.Encoding&gt; class in the &lt;xref:System.Text?displayProperty=fullName&gt; namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</source>
          <target state="translated"><ph id="ph1">`Chr`</ph>utiliza o &lt;xref:System.Text.Encoding&gt;classe no &lt;xref:System.Text?displayProperty=fullName&gt;definir o espaço de nomes para determinar se o thread actual esteja a utilizar um conjunto de carateres de byte único (SBCS) ou um caráter de byte duplo (DBCS).&lt;/xref:System.Text?displayProperty=fullName&gt; &lt;/xref:System.Text.Encoding&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then takes <ph id="ph1">`CharCode`</ph> as a code point in the appropriate set.</source>
          <target state="translated">Em seguida, demora <ph id="ph1">`CharCode`</ph> como um código de ponto no conjunto adequado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</source>
          <target state="translated">O intervalo pode ser 0 e 255 caracteres SBCS e -32768 a 65535 caracteres DBCS.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value depends on the code page for the current thread, which is contained in the &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt; property of the &lt;xref:System.Globalization.TextInfo&gt; class in the &lt;xref:System.Globalization&gt; namespace.</source>
          <target state="translated">O valor devolvido depende a página de código para o thread atual, o que faz a &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;propriedade do &lt;xref:System.Globalization.TextInfo&gt;classe no &lt;xref:System.Globalization&gt;espaço de nomes.&lt;/xref:System.Globalization&gt; &lt;/xref:System.Globalization.TextInfo&gt; &lt;/xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can obtain &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt; by specifying <ph id="ph1">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.</source>
          <target state="translated">Pode obter &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;especificando <ph id="ph1">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.&lt;/xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ChrW`</ph> takes <ph id="ph2">`CharCode`</ph> as a Unicode code point.</source>
          <target state="translated"><ph id="ph1">`ChrW`</ph>demora <ph id="ph2">`CharCode`</ph> como um Unicode de ponto de código.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">O intervalo é independente das definições de idioma e o código de página para o thread actual.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</source>
          <target state="translated">Valores entre -32768 através de-1 são tratados da mesma, como os valores no intervalo +32768 através de +65535.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</source>
          <target state="translated">Números de 0 e 31 são os mesmos que nonprintable padrão por códigos ASCII.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`Chr(10)`</ph> returns a line feed character.</source>
          <target state="translated">Por exemplo, <ph id="ph1">`Chr(10)`</ph> devolve o caráter de feed de uma linha.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`ChrB`</ph> function in earlier versions of Visual Basic returns a single byte.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`ChrB`</ph> função em versões anteriores do Visual Basic devolve um byte único.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>All strings in Visual Basic and the .NET Framework are in Unicode, and <ph id="ph1">`ChrB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias no Visual Basic e o .NET Framework estão em Unicode, e <ph id="ph1">`ChrB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression representing the <ph id="ph1">`code point`</ph>, or character code, for the character.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão que representa o <ph id="ph1">`code point`</ph>, ou o código de carateres para o carácter.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">Devolve o caráter associado ao código de carateres especificado.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;CharCode&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 or <ph id="ph3">&amp;gt;</ph> 255 for <bpt id="p1">&lt;xref uid="langword_csharp_Chr" name="Chr" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;CharCode&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> 0 or <ph id="ph3">&amp;gt;</ph> 255 for <bpt id="p1">&lt;xref uid="langword_csharp_Chr" name="Chr" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">Devolve o caráter associado ao código de carateres especificado.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The asymmetric range accepted for <ph id="ph1">`CharCode`</ph> compensates for the storage differences between the <ph id="ph2">`Short`</ph> and the <ph id="ph3">`Integer`</ph>.</source>
          <target state="translated">O intervalo de assimétrico aceites para <ph id="ph1">`CharCode`</ph> compensates para as diferenças de armazenamento entre o <ph id="ph2">`Short`</ph> e <ph id="ph3">`Integer`</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, -29183 is a <ph id="ph1">`Short`</ph> but +36353 is an <ph id="ph2">`Integer`</ph>.</source>
          <target state="translated">Por exemplo, é-29183 um <ph id="ph1">`Short`</ph> mas +36353 é um <ph id="ph2">`Integer`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This also facilitates compatibility with Visual Basic 6.0.</source>
          <target state="translated">Isto também facilita a compatibilidade com o Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Chr`</ph> uses the &lt;xref:System.Text.Encoding&gt; class in the &lt;xref:System.Text?displayProperty=fullName&gt; namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</source>
          <target state="translated"><ph id="ph1">`Chr`</ph>utiliza o &lt;xref:System.Text.Encoding&gt;classe no &lt;xref:System.Text?displayProperty=fullName&gt;definir o espaço de nomes para determinar se o thread actual esteja a utilizar um conjunto de carateres de byte único (SBCS) ou um caráter de byte duplo (DBCS).&lt;/xref:System.Text?displayProperty=fullName&gt; &lt;/xref:System.Text.Encoding&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then takes <ph id="ph1">`CharCode`</ph> as a code point in the appropriate set.</source>
          <target state="translated">Em seguida, demora <ph id="ph1">`CharCode`</ph> como um código de ponto no conjunto adequado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</source>
          <target state="translated">O intervalo pode ser 0 e 255 caracteres SBCS e -32768 a 65535 caracteres DBCS.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value depends on the code page for the current thread, which is contained in the &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt; property of the &lt;xref:System.Globalization.TextInfo&gt; class in the &lt;xref:System.Globalization&gt; namespace.</source>
          <target state="translated">O valor devolvido depende a página de código para o thread atual, o que faz a &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;propriedade do &lt;xref:System.Globalization.TextInfo&gt;classe no &lt;xref:System.Globalization&gt;espaço de nomes.&lt;/xref:System.Globalization&gt; &lt;/xref:System.Globalization.TextInfo&gt; &lt;/xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can obtain &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt; by specifying <ph id="ph1">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.</source>
          <target state="translated">Pode obter &lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;especificando <ph id="ph1">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.&lt;/xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ChrW`</ph> takes <ph id="ph2">`CharCode`</ph> as a Unicode code point.</source>
          <target state="translated"><ph id="ph1">`ChrW`</ph>demora <ph id="ph2">`CharCode`</ph> como um Unicode de ponto de código.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">O intervalo é independente das definições de idioma e o código de página para o thread actual.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</source>
          <target state="translated">Valores entre -32768 através de-1 são tratados da mesma, como os valores no intervalo +32768 através de +65535.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</source>
          <target state="translated">Números de 0 e 31 são os mesmos que nonprintable padrão por códigos ASCII.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`Chr(10)`</ph> returns a line feed character.</source>
          <target state="translated">Por exemplo, <ph id="ph1">`Chr(10)`</ph> devolve o caráter de feed de uma linha.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`ChrB`</ph> function in earlier versions of Visual Basic returns a single byte.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`ChrB`</ph> função em versões anteriores do Visual Basic devolve um byte único.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>All strings in Visual Basic and the .NET Framework are in Unicode, and <ph id="ph1">`ChrB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias no Visual Basic e o .NET Framework estão em Unicode, e <ph id="ph1">`ChrB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression representing the <ph id="ph1">`code point`</ph>, or character code, for the character.</source>
          <target state="translated">Um <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão que representa o <ph id="ph1">`code point`</ph>, ou o código de carateres para o carácter.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">Devolve o caráter associado ao código de carateres especificado.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;CharCode&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> -32768 or <ph id="ph3">&amp;gt;</ph> 65535 for <bpt id="p1">&lt;xref uid="langword_csharp_ChrW" name="ChrW" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;CharCode&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> -32768 or <ph id="ph3">&amp;gt;</ph> 65535 for <bpt id="p1">&lt;xref uid="langword_csharp_ChrW" name="ChrW" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Returns a zero-based array containing a subset of a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array based on specified filter criteria.</source>
          <target state="translated">Devolve uma matriz baseada em zero contendo um subconjunto de um <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> matriz com base nos critérios de filtro especificados.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no matches of <ph id="ph1">`Match`</ph> are found within <ph id="ph2">`Source`</ph>, the <ph id="ph3">`Filter`</ph> function returns an empty array.</source>
          <target state="translated">Se não existem correspondências de <ph id="ph1">`Match`</ph> são encontrados <ph id="ph2">`Source`</ph>, a <ph id="ph3">`Filter`</ph> função devolve uma matriz vazia.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>An error occurs if <ph id="ph1">`Source`</ph> is set to <ph id="ph2">`Nothing`</ph> or is not a one-dimensional array.</source>
          <target state="translated">Ocorre um erro se <ph id="ph1">`Source`</ph> está definido como <ph id="ph2">`Nothing`</ph> ou não é uma matriz unidimensional.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The array returned by the <ph id="ph1">`Filter`</ph> function contains only enough elements to contain the number of matched items.</source>
          <target state="translated">A matriz devolvida pelo <ph id="ph1">`Filter`</ph> função contém apenas elementos suficientes para conter o número de itens correspondentes.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated">O <ph id="ph1">`Compare`</ph> argumento pode ter os seguintes valores.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`CompareMethod.Binary`</ph>|Performs a binary comparison|   |<ph id="ph2">`CompareMethod.Text`</ph>|Performs a textual comparison|</source>
          <target state="translated">|||   |-|-|   | Constante | Descrição |   | <ph id="ph1">`CompareMethod.Binary`</ph>| Efetua uma comparação binária |   | <ph id="ph2">`CompareMethod.Text`</ph>| Efetua uma comparação textual |</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>One-dimensional array of strings to be searched.</source>
          <target state="translated">Matriz unidimensional de cadeias para ser procurado.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>String to search for.</source>
          <target state="translated">Cadeia a procurar.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether to return substrings that include or exclude <ph id="ph1">`Match`</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>valor que indica se a devolver subcadeias que incluem ou excluir <ph id="ph1">`Match`</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Include`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the subset of the array that contains <ph id="ph2">`Match`</ph> as a substring.</source>
          <target state="translated">Se <ph id="ph1">`Include`</ph> é <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o subconjunto da matriz que contenha <ph id="ph2">`Match`</ph> como uma subcadeia.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Include`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the subset of the array that does not contain <ph id="ph2">`Match`</ph> as a substring.</source>
          <target state="translated">Se <ph id="ph1">`Include`</ph> é <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o subconjunto da matriz que não contenha <ph id="ph2">`Match`</ph> como uma subcadeia.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Numeric value indicating the kind of string comparison to use.</source>
          <target state="translated">Valor numérico que indica o tipo de comparação de cadeias para utilizar.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">Consulte "Definições" para valores.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns a zero-based array containing a subset of a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array based on specified filter criteria.</source>
          <target state="translated">Devolve uma matriz baseada em zero contendo um subconjunto de um <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> matriz com base nos critérios de filtro especificados.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Source&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or is not a one-dimensional array.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Source&lt;/code&gt;</ph>é <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou não é uma matriz unidimensional.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Returns a zero-based array containing a subset of a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array based on specified filter criteria.</source>
          <target state="translated">Devolve uma matriz baseada em zero contendo um subconjunto de um <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> matriz com base nos critérios de filtro especificados.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no matches of <ph id="ph1">`Match`</ph> are found within <ph id="ph2">`Source`</ph>, the <ph id="ph3">`Filter`</ph> function returns an empty array.</source>
          <target state="translated">Se não existem correspondências de <ph id="ph1">`Match`</ph> são encontrados <ph id="ph2">`Source`</ph>, a <ph id="ph3">`Filter`</ph> função devolve uma matriz vazia.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>An error occurs if <ph id="ph1">`Source`</ph> is set to <ph id="ph2">`Nothing`</ph> or is not a one-dimensional array.</source>
          <target state="translated">Ocorre um erro se <ph id="ph1">`Source`</ph> está definido como <ph id="ph2">`Nothing`</ph> ou não é uma matriz unidimensional.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The array returned by the <ph id="ph1">`Filter`</ph> function contains only enough elements to contain the number of matched items.</source>
          <target state="translated">A matriz devolvida pelo <ph id="ph1">`Filter`</ph> função contém apenas elementos suficientes para conter o número de itens correspondentes.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated">O <ph id="ph1">`Compare`</ph> argumento pode ter os seguintes valores.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`CompareMethod.Binary`</ph>|Performs a binary comparison|   |<ph id="ph2">`CompareMethod.Text`</ph>|Performs a textual comparison|</source>
          <target state="translated">|||   |-|-|   | Constante | Descrição |   | <ph id="ph1">`CompareMethod.Binary`</ph>| Efetua uma comparação binária |   | <ph id="ph2">`CompareMethod.Text`</ph>| Efetua uma comparação textual |</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>One-dimensional array of strings to be searched.</source>
          <target state="translated">Matriz unidimensional de cadeias para ser procurado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>String to search for.</source>
          <target state="translated">Cadeia a procurar.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether to return substrings that include or exclude <ph id="ph1">`Match`</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>valor que indica se a devolver subcadeias que incluem ou excluir <ph id="ph1">`Match`</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Include`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the subset of the array that contains <ph id="ph2">`Match`</ph> as a substring.</source>
          <target state="translated">Se <ph id="ph1">`Include`</ph> é <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o subconjunto da matriz que contenha <ph id="ph2">`Match`</ph> como uma subcadeia.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Include`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the subset of the array that does not contain <ph id="ph2">`Match`</ph> as a substring.</source>
          <target state="translated">Se <ph id="ph1">`Include`</ph> é <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Filter" name="Filter" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o subconjunto da matriz que não contenha <ph id="ph2">`Match`</ph> como uma subcadeia.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Numeric value indicating the kind of string comparison to use.</source>
          <target state="translated">Valor numérico que indica o tipo de comparação de cadeias para utilizar.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">Consulte "Definições" para valores.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Returns a zero-based array containing a subset of a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array based on specified filter criteria.</source>
          <target state="translated">Devolve uma matriz baseada em zero contendo um subconjunto de um <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> matriz com base nos critérios de filtro especificados.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Source&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or is not a one-dimensional array.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Source&lt;/code&gt;</ph>é <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou não é uma matriz unidimensional.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Returns a string formatted according to instructions contained in a format <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Devolve uma cadeia formatada de acordo com as instruções contidas num formato <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Any valid expression.</source>
          <target state="translated">Uma expressão válida.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A valid named or user-defined format <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Um formato válido de nomeado ou definido pelo utilizador <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Returns a string formatted according to instructions contained in a format <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Devolve uma cadeia formatada de acordo com as instruções contidas num formato <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</source>
          <target state="translated">Devolve uma expressão formatada como um valor de moeda utilizando o símbolo de moeda definido no painel de controlo de sistema.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>When one or more optional arguments are omitted, the computer's matching regional-settings values are used instead.</source>
          <target state="translated">Quando um ou mais argumentos opcionais são for omitidos, valores de definições regionais correspondentes do computador são utilizados em vez disso.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position of the currency symbol relative to the currency value is determined by the system's regional settings.</source>
          <target state="translated">A posição do símbolo de moeda relativo ao valor de moeda é determinada pelas definições regionais do sistema.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  All settings information comes from the locale of the application.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Provém de todas as informações de definições de idioma da aplicação.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">Por predefinição, que será a região definida no painel de controlo.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it may be changed programmatically by using the .NET Framework, except leading zero, which comes from the <ph id="ph1">`Number`</ph> tab.</source>
          <target state="translated">No entanto, pode ser alterado através de programação utilizando o .NET Framework, exceto zero à esquerda, o que vêm de <ph id="ph1">`Number`</ph> separador.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments take the following TriState enumeration values.</source>
          <target state="translated">O <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, e <ph id="ph3">`GroupDigits`</ph> argumentos efetuar os seguintes valores de enumeração TriState.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>|||   |-|-|   |Value|Description|   |<ph id="ph1">`TriState.True`</ph>|True|   |<ph id="ph2">`TriState.False`</ph>|False|   |<ph id="ph3">`TriState.UseDefault`</ph>|The computer's regional settings|</source>
          <target state="translated">|||   |-|-|   | Valor | Descrição |   | <ph id="ph1">`TriState.True`</ph>| VERDADEIRO |   | <ph id="ph2">`TriState.False`</ph>| FALSO |   | <ph id="ph3">`TriState.UseDefault`</ph>| Definições regionais do computador |</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Expression to be formatted.</source>
          <target state="translated">Expressão a ser formatado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Numeric value indicating how many places are displayed to the right of the decimal.</source>
          <target state="translated">Valor numérico que indica quantos locais são apresentadas para a direita da vírgula decimal.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Default value is –1, which indicates that the computer's regional settings are used.</source>
          <target state="translated">Valor predefinido é –1, que indica que são utilizadas as definições regionais do computador.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates whether or not a leading zero is displayed for fractional values.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>enumeração que indica se é ou não um zero à esquerda é apresentada para valores fracional.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>See "Remarks" for values.</source>
          <target state="translated">Consulte "Comentários" para valores.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates whether or not to place negative values within parentheses.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>enumeração que indica se deve ou não colocar os valores negativos dentro de parênteses.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>See "Remarks" for values.</source>
          <target state="translated">Consulte "Comentários" para valores.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>enumeração que indica se é ou não os números são agrupados utilizando o delimitador de grupo especificado nas definições regionais do computador.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>See "Remarks" for values.</source>
          <target state="translated">Consulte "Comentários" para valores.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</source>
          <target state="translated">Devolve uma expressão formatada como um valor de moeda utilizando o símbolo de moeda definido no painel de controlo de sistema.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Number of digits after decimal point is greater than 99.</source>
          <target state="translated">Número de dígitos após a vírgula decimal é superior a 99.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Type is not numeric.</source>
          <target state="translated">O tipo não é um valor numérico.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Returns a string expression representing a date/time value.</source>
          <target state="translated">Devolve uma expressão de cadeia que representa um valor de data/hora.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Date`</ph> data type always contains both date and time information.</source>
          <target state="translated">O <ph id="ph1">`Date`</ph> tipo de dados sempre contém informações de data e hora.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>For purposes of type conversion, Visual Basic considers 1/1/1 (January 1 of the year 1) to be a neutral value for the date, and 00:00:00 (midnight) to be a neutral value for the time.</source>
          <target state="translated">Para efeitos de conversão de tipo, o Visual Basic considera 1/1/1 (1 de Janeiro do ano 1) para ser um valor neutro para a data e 00:00:00 (meia-noite) para ser um valor independente durante o período de tempo.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you format a <ph id="ph1">`Date`</ph> value as a date/time string, <ph id="ph2">`FormatDateTime`</ph> does not include neutral values in the resulting string.</source>
          <target state="translated">Se formatar um <ph id="ph1">`Date`</ph> valor como uma cadeia de data/hora, <ph id="ph2">`FormatDateTime`</ph> não inclui independentes valores na cadeia resultante.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you convert #1/1/0001 9:30:00# to a string, the result is "9:30:00 AM"; the date information is suppressed.</source>
          <target state="translated">Por exemplo, se converter #1/1/0001 e 9:30:&amp;#00; para uma cadeia, o resultado é "09:30:00: 00"; as informações de data são suprimidas.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the date information is still present in the original <ph id="ph1">`Date`</ph> value and can be recovered with functions such as <ph id="ph2">`DatePart`</ph>.</source>
          <target state="translated">No entanto, as informações de data ainda estão presentes no original <ph id="ph1">`Date`</ph> valor e podem ser recuperados com as funções, tais como <ph id="ph2">`DatePart`</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you pass the <ph id="ph2">`Expression`</ph> argument as a <ph id="ph3">`String`</ph> literal, <ph id="ph4">`FormatDateTime`</ph> interprets it according to the &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt; setting of your application.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Se passa o <ph id="ph2">`Expression`</ph> argumento como uma <ph id="ph3">`String`</ph> literal, <ph id="ph4">`FormatDateTime`</ph> interpreta-lo de acordo com o &lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;definição da aplicação.&lt;/xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you pass it as a <ph id="ph1">`Date`</ph> literal, use the format #mm/dd/yyyy#, because <ph id="ph2">`FormatDateTime`</ph> always interprets a <ph id="ph3">`Date`</ph> literal according to the English (US) culture.</source>
          <target state="translated">No entanto, se passa-o como um <ph id="ph1">`Date`</ph> literal, utilize o formato #mm/dd/aaaa # porque <ph id="ph2">`FormatDateTime`</ph> interpreta sempre um <ph id="ph3">`Date`</ph> literal, de acordo com a cultura inglês (EUA).</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is necessary because, if an application is developed and coded using <ph id="ph1">`Date`</ph> literals from one culture, but is then executed on a platform with a different culture, the <ph id="ph2">`Date`</ph> literals could be parsed incorrectly.</source>
          <target state="translated">Isto é necessário uma vez que, se uma aplicação for desenvolvida e coded utilizando <ph id="ph1">`Date`</ph> literais a partir de um idioma, mas, em seguida, é executada numa plataforma com um idioma diferente, o <ph id="ph2">`Date`</ph> literais foi possível analisar incorretamente.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`NamedFormat`</ph> argument has the following settings.</source>
          <target state="translated">O <ph id="ph1">`NamedFormat`</ph> argument tem as seguintes definições.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`DateFormat.GeneralDate`</ph>|Display a date and/or time.</source>
          <target state="translated">|||   |-|-|   | Constante | Descrição |   | <ph id="ph1">`DateFormat.GeneralDate`</ph>| Apresente uma data e/ou hora.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Display a date part as a short date.</source>
          <target state="translated">Apresenta uma peça de data como uma data abreviada.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a time part, display it as a long time.</source>
          <target state="translated">Se existir uma parte do tempo, apresentá-lo como muito tempo.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>If present, both parts display.|   |<ph id="ph1">`DateFormat.LongDate`</ph>|Display a date using the long date format specified in your computer's regional settings.|   |<ph id="ph2">`DateFormat.ShortDate`</ph>|Display a date using the short date format specified in your computer's regional settings.|   |<ph id="ph3">`DateFormat.LongTime`</ph>|Display a time using the time format specified in your computer's regional settings.|   |<ph id="ph4">`DateFormat.ShortTime`</ph>|Display a time using the 24-hour format (hh:mm).|</source>
          <target state="translated">Se estiver presente, ambas as peças apresentam. |   | <ph id="ph1">`DateFormat.LongDate`</ph>| Apresentar uma data utilizando o formato de data por extenso especificado nas definições regionais do seu computador. |   | <ph id="ph2">`DateFormat.ShortDate`</ph>| Apresentar uma data utilizando o formato de data abreviada especificado nas definições regionais do seu computador. |   | <ph id="ph3">`DateFormat.LongTime`</ph>| Apresentar uma vez utilizando o formato de hora especificado nas definições regionais do seu computador. |   | <ph id="ph4">`DateFormat.ShortTime`</ph>| Apresentar uma vez utilizando o formato de 24 horas (hh: mm). |</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression to be formatted.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão a ser formatado.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Numeric value that indicates the date/time format used.</source>
          <target state="translated">Valor numérico que indica o formato de data/hora utilizado.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>If omitted, <bpt id="p1">&lt;xref uid="langword_csharp_DateFormat.GeneralDate" name="DateFormat.GeneralDate" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">Se for omitido, <bpt id="p1">&lt;xref uid="langword_csharp_DateFormat.GeneralDate" name="DateFormat.GeneralDate" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é utilizado.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Returns a string expression representing a date/time value.</source>
          <target state="translated">Devolve uma expressão de cadeia que representa um valor de data/hora.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;NamedFormat&lt;/code&gt;</ph> setting is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;NamedFormat&lt;/code&gt;</ph>definição não é válida.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a number.</source>
          <target state="translated">Devolve uma expressão formatada como um número.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>When one or more optional arguments are omitted the values for omitted arguments are provided by the locale settings.</source>
          <target state="translated">Quando um ou mais argumentos opcionais estão omitidos os valores para os argumentos omitidos são fornecidos pelas definições de região.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  All settings information comes from the locale of the application.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Provém de todas as informações de definições de idioma da aplicação.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">Por predefinição, que será a região definida no painel de controlo.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it may be changed programmatically by using the .NET Framework.</source>
          <target state="translated">No entanto, se pode ser alterada através de programação utilizando o .NET Framework.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments have the following settings.</source>
          <target state="translated">O <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, e <ph id="ph3">`GroupDigits`</ph> argumentos tem as seguintes definições.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`TriState.True`</ph>|True|   |<ph id="ph2">`TriState.False`</ph>|False|   |<ph id="ph3">`TriState.UseDefault`</ph>|The computer's regional settings|</source>
          <target state="translated">|||   |-|-|   | Constante | Descrição |   | <ph id="ph1">`TriState.True`</ph>| VERDADEIRO |   | <ph id="ph2">`TriState.False`</ph>| FALSO |   | <ph id="ph3">`TriState.UseDefault`</ph>| Definições regionais do computador |</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Expression to be formatted.</source>
          <target state="translated">Expressão a ser formatado.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Numeric value indicating how many places are displayed to the right of the decimal.</source>
          <target state="translated">Valor numérico que indica quantos locais são apresentadas para a direita da vírgula decimal.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The default value is –1, which indicates that the computer's regional settings are used.</source>
          <target state="translated">O valor predefinido é –1, que indica que são utilizadas as definições regionais do computador.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether a leading 0 is displayed for fractional values.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>constante que indica se um 0 à esquerda é apresentada para valores fracional.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">Consulte "Definições" para valores.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether to place negative values within parentheses.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>constante que indica se deve colocar os valores negativos dentro de parênteses.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">Consulte "Definições" para valores.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>constante que indica se ou não os números são agrupados utilizando o delimitador de grupo especificado nas definições de região.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">Consulte "Definições" para valores.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a number.</source>
          <target state="translated">Devolve uma expressão formatada como um número.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Type is not numeric.</source>
          <target state="translated">O tipo não é um valor numérico.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</source>
          <target state="translated">Devolve uma expressão formatada como uma percentagem (ou seja, multiplicada por 100) com um caráter % final.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>When one or more optional arguments are omitted, the values for omitted arguments are provided by the locale settings.</source>
          <target state="translated">Quando um ou mais argumentos opcionais são for omitidos, os valores para os argumentos omitidos são fornecidos pelas definições de região.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  All settings information comes from the locale of the application.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Provém de todas as informações de definições de idioma da aplicação.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">Por predefinição, que será a região definida no painel de controlo.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it may be changed programmatically by using the .NET Framework.</source>
          <target state="translated">No entanto, se pode ser alterada através de programação utilizando o .NET Framework.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments have the following settings.</source>
          <target state="translated">O <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, e <ph id="ph3">`GroupDigits`</ph> argumentos tem as seguintes definições.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`TriState.True`</ph>|True|   |<ph id="ph2">`TriState.False`</ph>|False|   |<ph id="ph3">`TriState.Default`</ph>|The computer's regional settings|</source>
          <target state="translated">|||   |-|-|   | Constante | Descrição |   | <ph id="ph1">`TriState.True`</ph>| VERDADEIRO |   | <ph id="ph2">`TriState.False`</ph>| FALSO |   | <ph id="ph3">`TriState.Default`</ph>| Definições regionais do computador |</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Expression to be formatted.</source>
          <target state="translated">Expressão a ser formatado.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Numeric value indicating how many places to the right of the decimal are displayed.</source>
          <target state="translated">Valor numérico indicar quantos coloca à direita da vírgula decimal são apresentados.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Default value is –1, which indicates that the locale settings are used.</source>
          <target state="translated">Valor predefinido é –1, que indica que as definições de idioma são utilizadas.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether or not a leading zero displays for fractional values.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>constante que indica se é ou não um zero à esquerda para valores fracional apresenta.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">Consulte "Definições" para valores.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether or not to place negative values within parentheses.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>constante que indica se deve ou não colocar os valores negativos dentro de parênteses.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">Consulte "Definições" para valores.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.TriState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>constante que indica se ou não os números são agrupados utilizando o delimitador de grupo especificado nas definições de região.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">Consulte "Definições" para valores.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</source>
          <target state="translated">Devolve uma expressão formatada como uma percentagem (ou seja, multiplicada por 100) com um caráter % final.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Type is not numeric.</source>
          <target state="translated">O tipo não é um valor numérico.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character from the specified index in the supplied string.</source>
          <target state="translated">Devolve um <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valor representando o caráter do índice especificado na cadeia fornecida.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Index`</ph> is less than 1 or greater than the index of the last character in <ph id="ph2">`str`</ph>, an <ph id="ph3">`ArgumentException`</ph> is thrown.</source>
          <target state="translated">Se <ph id="ph1">`Index`</ph> é inferior a 1 ou maior do que o índice do último caráter no <ph id="ph2">`str`</ph>, um <ph id="ph3">`ArgumentException`</ph> é emitida.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The (1-based) index of the character in <ph id="ph1">`str`</ph> to be returned.</source>
          <target state="translated">O índice (base&amp;1;) do caráter em <ph id="ph1">`str`</ph> a ser devolvido.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the character from the specified index in the supplied string.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>valor que representa o caráter do índice especificado na cadeia fornecida.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;str&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <ph id="ph2">&lt;code&gt;Index&lt;/code&gt;</ph> <ph id="ph3">&amp;lt;</ph> 1, or <ph id="ph4">&lt;code&gt;Index&lt;/code&gt;</ph> is greater than index of last character of <ph id="ph5">&lt;code&gt;str&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;str&lt;/code&gt;</ph>é <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <ph id="ph2">&lt;code&gt;Index&lt;/code&gt;</ph> <ph id="ph3">&amp;lt;</ph> 1, ou <ph id="ph4">&lt;code&gt;Index&lt;/code&gt;</ph> é superior ao índice do último caráter de <ph id="ph5">&lt;code&gt;str&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Returns an integer specifying the start position of the first occurrence of one string within another.</source>
          <target state="translated">Devolve um número inteiro especificando a posição inicial da primeira ocorrência de uma cadeia dentro de outra.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">`InStr`</ph> function is used when parsing strings.</source>
          <target state="translated">Normalmente, o <ph id="ph1">`InStr`</ph> função é utilizada durante a análise de cadeias.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`InStrB`</ph> function in previous versions of Visual Basic returns a number of bytes rather than a character position.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`InStrB`</ph> função em versões anteriores do Visual Basic devolve um número de bytes em vez de uma posição de caráter.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`InStrB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic 2005 estão em Unicode, e <ph id="ph1">`InStrB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:      ||||   |-|-|-|   |Constant|Value|Description|   |<ph id="ph2">`Binary`</ph>|0|Performs a binary comparison|   |<ph id="ph3">`Text`</ph>|1|Performs a text comparison|</source>
          <target state="translated">O <ph id="ph1">`Compare`</ph> argumento definições são: |||   |-|-|-|   | Constante | Valor | Descrição |   | <ph id="ph2">`Binary`</ph>|0| Efetua uma comparação binária |   | <ph id="ph3">`Text`</ph>|1| Efetua uma comparação de texto |</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression being searched.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão a ser procurado.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression sought.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão sought.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">Especifica o tipo de comparação de cadeias.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Compare`</ph> is omitted, the <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> setting determines the type of comparison.</source>
          <target state="translated">Se <ph id="ph1">`Compare`</ph> for omitido, o <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> definição determina o tipo de comparação.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">Se</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>InStr returns</source>
          <target state="translated">InStr devolve</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String1&lt;/code&gt;</ph> is zero length or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String1&lt;/code&gt;</ph>é o comprimento zero ou<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is zero length or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>é o comprimento zero ou<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The starting position for the search, which defaults to the first character position.</source>
          <target state="translated">A posição inicial para a pesquisa, o qual está predefinida para a primeira posição de caráter.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is not found</source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>Não foi encontrado</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is found within <ph id="ph2">&lt;code&gt;String1&lt;/code&gt;</ph></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>encontra-se no<ph id="ph2">&lt;code&gt;String1&lt;/code&gt;</ph></target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Position where match begins</source>
          <target state="translated">Posição em que começa a correspondência</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Returns an integer specifying the start position of the first occurrence of one string within another.</source>
          <target state="translated">Devolve um número inteiro especificando a posição inicial da primeira ocorrência de uma cadeia dentro de outra.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">`InStr`</ph> function is used when parsing strings.</source>
          <target state="translated">Normalmente, o <ph id="ph1">`InStr`</ph> função é utilizada durante a análise de cadeias.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`InStrB`</ph> function in previous versions of Visual Basic returns a number of bytes rather than a character position.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`InStrB`</ph> função em versões anteriores do Visual Basic devolve um número de bytes em vez de uma posição de caráter.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`InStrB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic 2005 estão em Unicode, e <ph id="ph1">`InStrB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:      ||||   |-|-|-|   |Constant|Value|Description|   |<ph id="ph2">`Binary`</ph>|0|Performs a binary comparison|   |<ph id="ph3">`Text`</ph>|1|Performs a text comparison|</source>
          <target state="translated">O <ph id="ph1">`Compare`</ph> argumento definições são: |||   |-|-|-|   | Constante | Valor | Descrição |   | <ph id="ph2">`Binary`</ph>|0| Efetua uma comparação binária |   | <ph id="ph3">`Text`</ph>|1| Efetua uma comparação de texto |</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Numeric expression that sets the starting position for each search.</source>
          <target state="translated">Expressão numérica, que define a posição inicial para cada pesquisa.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>If omitted, search begins at the first character position.</source>
          <target state="translated">Se for omitido, pesquisa começa com a primeira posição de caráter.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The start index is 1-based.</source>
          <target state="translated">O índice de início é baseada em 1.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression being searched.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão a ser procurado.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression sought.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão sought.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">Especifica o tipo de comparação de cadeias.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Compare`</ph> is omitted, the <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> setting determines the type of comparison.</source>
          <target state="translated">Se <ph id="ph1">`Compare`</ph> for omitido, o <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> definição determina o tipo de comparação.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">Se</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>InStr returns</source>
          <target state="translated">InStr devolve</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String1&lt;/code&gt;</ph> is zero length or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String1&lt;/code&gt;</ph>é o comprimento zero ou<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is zero length or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>é o comprimento zero ou<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is not found</source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>Não foi encontrado</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph> is found within <ph id="ph2">&lt;code&gt;String1&lt;/code&gt;</ph></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;String2&lt;/code&gt;</ph>encontra-se no<ph id="ph2">&lt;code&gt;String1&lt;/code&gt;</ph></target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Position where match begins</source>
          <target state="translated">Posição em que começa a correspondência</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph2">&amp;gt;</ph> length of <ph id="ph3">&lt;code&gt;String1&lt;/code&gt;</ph></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;Start&lt;/code&gt;</ph><ph id="ph2">&amp;gt;</ph> comprimento de<ph id="ph3">&lt;code&gt;String1&lt;/code&gt;</ph></target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Returns the position of the first occurrence of one string within another, starting from the right side of the string.</source>
          <target state="translated">Devolve a posição da primeira ocorrência de uma cadeia dentro de outra, começando pelo lado direito da cadeia.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the syntax for the <ph id="ph1">`InStrRev`</ph> function is not the same as the syntax for the <ph id="ph2">`InStr`</ph> function.</source>
          <target state="translated">Tenha em atenção que a sintaxe para o <ph id="ph1">`InStrRev`</ph> função não é o mesmo que a sintaxe para o <ph id="ph2">`InStr`</ph> função.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated">O <ph id="ph1">`Compare`</ph> argumento pode ter os seguintes valores.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`Binary`</ph>|Performs a binary comparison.|   |<ph id="ph2">`Text`</ph>|Performs a textual comparison.|</source>
          <target state="translated">|||   |-|-|   | Constante | Descrição |   | <ph id="ph1">`Binary`</ph>| Efetua uma comparação binária. |   | <ph id="ph2">`Text`</ph>| Efetua uma comparação textual. |</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>String expression being searched.</source>
          <target state="translated">Expressão de cadeia que está a ser procurado.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>String expression being searched for.</source>
          <target state="translated">Expressão de cadeia que está a ser procurado.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Numeric expression setting the one-based starting position for each search, starting from the left side of the string.</source>
          <target state="translated">Expressão numérica definir a posição inicial baseada num de cada pesquisa, começando pelo lado esquerdo da cadeia.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Start`</ph> is omitted then –1 is used, meaning the search begins at the last character position.</source>
          <target state="translated">Se <ph id="ph1">`Start`</ph> for omitido, –1 é utilizado, o que significa que a pesquisa começa com a última posição do caráter.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Search then proceeds from right to left.</source>
          <target state="translated">Em seguida, procede de pesquisa da direita para a esquerda.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Numeric value indicating the kind of comparison to use when evaluating substrings.</source>
          <target state="translated">Valor numérico que indica o tipo de comparação para utilizar durante a avaliação de subcadeias.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>If omitted, a binary comparison is performed.</source>
          <target state="translated">Se for omitido, é efetuada uma comparação binária.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>See Settings for values.</source>
          <target state="translated">Consulte as definições para os valores.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">Se</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>InStrRev returns</source>
          <target state="translated">Devolve InStrRev</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;StringCheck&lt;/code&gt;</ph> is zero-length</source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;StringCheck&lt;/code&gt;</ph>é o comprimento de zero</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph> is zero-length</source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph>é o comprimento de zero</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph> is not found</source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph>Não foi encontrado</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph> is found within <ph id="ph2">&lt;code&gt;StringCheck&lt;/code&gt;</ph></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;StringMatch&lt;/code&gt;</ph>encontra-se no<ph id="ph2">&lt;code&gt;StringCheck&lt;/code&gt;</ph></target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Position at which the first match is found, starting with the right side of the string.</source>
          <target state="translated">Posição em que a primeira correspondência for encontrada, começando pelo lado direito da cadeia.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source><ph id="ph1">           &lt;code&gt;Start&lt;/code&gt;</ph> is greater than length of <ph id="ph2">&lt;code&gt;StringMatch&lt;/code&gt;</ph></source>
          <target state="translated"><ph id="ph1">           &lt;code&gt;Start&lt;/code&gt;</ph>é superior ao comprimento de<ph id="ph2">&lt;code&gt;StringMatch&lt;/code&gt;</ph></target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph> = 0 or <ph id="ph2">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph3">&amp;lt;</ph> -1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph>= 0 or <ph id="ph2">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph3">&amp;lt;</ph> -1.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">Devolve uma cadeia criada ao associar um número de subcadeias contidas numa matriz.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a parity between the <ph id="ph1">`Join`</ph> and <ph id="ph2">`Split`</ph> functions.</source>
          <target state="translated">Existe uma paridade entre o <ph id="ph1">`Join`</ph> e <ph id="ph2">`Split`</ph> funções.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Join`</ph> function takes an array of strings and joins them using a delimiter string, to return a single string.</source>
          <target state="translated">O <ph id="ph1">`Join`</ph> função assume uma matriz de cadeias e associa-los através de uma cadeia de delimitador para devolver uma cadeia única.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Split`</ph> function takes a string and separates it at the delimiter, to return an array of strings.</source>
          <target state="translated">O <ph id="ph1">`Split`</ph> função assume uma cadeia e separa o delimitador, para devolver uma matriz de cadeias.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a key difference is that <ph id="ph1">`Join`</ph> can concatenate strings with any delimiter string, <ph id="ph2">`Split`</ph> can only separate strings using a single character delimiter.</source>
          <target state="translated">No entanto, uma principal diferença é que <ph id="ph1">`Join`</ph> pode concatenar cadeias com qualquer cadeia de delimitador <ph id="ph2">`Split`</ph> só pode separar cadeias utilizando um único caráter delimitador.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>One-dimensional array containing substrings to be joined.</source>
          <target state="translated">Matriz unidimensional contendo subcadeias sejam associados.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Any string, used to separate the substrings in the returned string.</source>
          <target state="translated">Qualquer cadeia, utilizada para separar subcadeias na cadeia devolvida.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>If omitted, the space character (" ") is used.</source>
          <target state="translated">Se for omitido, o caráter de espaço ("") é utilizado.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Delimiter`</ph> is a zero-length string ("") or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, all items in the list are concatenated with no delimiters.</source>
          <target state="translated">Se <ph id="ph1">`Delimiter`</ph> é uma cadeia de comprimento zero ("") ou <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, todos os itens na lista são concatenados com nenhuma delimitadores.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">Devolve uma cadeia criada ao associar um número de subcadeias contidas numa matriz.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;SourceArray&lt;/code&gt;</ph> is not one dimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;SourceArray&lt;/code&gt;</ph>Não é um dimensional.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">Devolve uma cadeia criada ao associar um número de subcadeias contidas numa matriz.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a parity between the <ph id="ph1">`Join`</ph> and <ph id="ph2">`Split`</ph> functions.</source>
          <target state="translated">Existe uma paridade entre o <ph id="ph1">`Join`</ph> e <ph id="ph2">`Split`</ph> funções.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Join`</ph> function takes an array of strings and joins them using a delimiter string, to return a single string.</source>
          <target state="translated">O <ph id="ph1">`Join`</ph> função assume uma matriz de cadeias e associa-los através de uma cadeia de delimitador para devolver uma cadeia única.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Split`</ph> function takes a string and separates it at the delimiter, to return an array of strings.</source>
          <target state="translated">O <ph id="ph1">`Split`</ph> função assume uma cadeia e separa o delimitador, para devolver uma matriz de cadeias.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a key difference is that <ph id="ph1">`Join`</ph> can concatenate strings with any delimiter string, <ph id="ph2">`Split`</ph> can only separate strings using a single character delimiter.</source>
          <target state="translated">No entanto, uma principal diferença é que <ph id="ph1">`Join`</ph> pode concatenar cadeias com qualquer cadeia de delimitador <ph id="ph2">`Split`</ph> só pode separar cadeias utilizando um único caráter delimitador.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>One-dimensional array containing substrings to be joined.</source>
          <target state="translated">Matriz unidimensional contendo subcadeias sejam associados.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Any string, used to separate the substrings in the returned string.</source>
          <target state="translated">Qualquer cadeia, utilizada para separar subcadeias na cadeia devolvida.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>If omitted, the space character (" ") is used.</source>
          <target state="translated">Se for omitido, o caráter de espaço ("") é utilizado.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Delimiter`</ph> is a zero-length string ("") or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, all items in the list are concatenated with no delimiters.</source>
          <target state="translated">Se <ph id="ph1">`Delimiter`</ph> é uma cadeia de comprimento zero ("") ou <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, todos os itens na lista são concatenados com nenhuma delimitadores.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">Devolve uma cadeia criada ao associar um número de subcadeias contidas numa matriz.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;SourceArray&lt;/code&gt;</ph> is not one dimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;SourceArray&lt;/code&gt;</ph>Não é um dimensional.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">Devolve uma cadeia ou caráter convertida em minúscula.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">Apenas letras maiúsculas são convertidas para minúsculas; todas as letras minúsculas e carateres de nonletter permanecem inalterados.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">Esta função utiliza informações de cultura da aplicação quando manipular a cadeia de modo a que as alterações às maiúsculas e são adequadas para a região na qual a aplicação está a ser utilizada.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt; method, and pass &lt;xref:System.StringComparison&gt; or &lt;xref:System.StringComparison&gt; for the <ph id="ph2">`comparisonType`</ph> argument.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Se a aplicação toma decisões de segurança com base no resultado de uma operação de alteração de maiúsculas e minúsculas ou comparação, em seguida, deve utilizar a operação de &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;método e passar &lt;xref:System.StringComparison&gt;ou &lt;xref:System.StringComparison&gt;para o <ph id="ph2">`comparisonType`</ph> argumento.&lt;/xref:System.StringComparison&gt; &lt;/xref:System.StringComparison&gt; &lt;/xref:System.String.Compare%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como cultura afeta cadeias no Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">Devolve uma cadeia ou caráter convertida em minúscula.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">Devolve uma cadeia ou caráter convertida em minúscula.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">Apenas letras maiúsculas são convertidas para minúsculas; todas as letras minúsculas e carateres de nonletter permanecem inalterados.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">Esta função utiliza informações de cultura da aplicação quando manipular a cadeia de modo a que as alterações às maiúsculas e são adequadas para a região na qual a aplicação está a ser utilizada.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt; method, and pass &lt;xref:System.StringComparison&gt; or &lt;xref:System.StringComparison&gt; for the <ph id="ph2">`comparisonType`</ph> argument.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Se a aplicação toma decisões de segurança com base no resultado de uma operação de alteração de maiúsculas e minúsculas ou comparação, em seguida, deve utilizar a operação de &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;método e passar &lt;xref:System.StringComparison&gt;ou &lt;xref:System.StringComparison&gt;para o <ph id="ph2">`comparisonType`</ph> argumento.&lt;/xref:System.StringComparison&gt; &lt;/xref:System.StringComparison&gt; &lt;/xref:System.String.Compare%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como cultura afeta cadeias no Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">Devolve uma cadeia ou caráter convertida em minúscula.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Returns a string containing a specified number of characters from the left side of a string.</source>
          <target state="translated">Devolve uma cadeia contendo um número especificado de carateres do lado esquerdo de uma cadeia.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">Para determinar o número de carateres no <ph id="ph1">`str`</ph>, utilize o <ph id="ph2">`Len`</ph> função.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>If used in a Windows Forms application, or any other class that has a <ph id="ph1">`Left`</ph> property, you must fully qualify the function with <ph id="ph2">`Microsoft.VisualBasic.Left`</ph>.</source>
          <target state="translated">Se utilizar uma aplicação do Windows Forms ou qualquer outra classe que tem um <ph id="ph1">`Left`</ph> propriedade, tem qualificar completamente a função com <ph id="ph2">`Microsoft.VisualBasic.Left`</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LeftB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LeftB`</ph> função em versões anteriores do Visual Basic devolve uma cadeia de bytes em vez de carateres.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LeftB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LeftB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from which the leftmost characters are returned.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão a partir da qual são devolvidos os carateres mais à esquerda.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Numeric expression indicating how many characters to return.</source>
          <target state="translated">Expressão numérica que indica o número de carateres a devolver.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>If 0, a zero-length string ("") is returned.</source>
          <target state="translated">Se for 0, uma cadeia de comprimento zero ("") é devolvido.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>If greater than or equal to the number of characters in <ph id="ph1">`str`</ph>, the entire string is returned.</source>
          <target state="translated">Se maior que ou igual ao número de carateres de <ph id="ph1">`str`</ph>, é devolvida a cadeia completa.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Returns a string containing a specified number of characters from the left side of a string.</source>
          <target state="translated">Devolve uma cadeia contendo um número especificado de carateres do lado esquerdo de uma cadeia.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">Com tipos definidos pelo utilizador e <ph id="ph1">`Object`</ph> variáveis, a <ph id="ph2">`Len`</ph> função devolve o tamanho, tal como será escrito no ficheiro pelo <ph id="ph3">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento da cadeia.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, irá devolver o tamanho do objeto que será escrito no ficheiro pelo <ph id="ph2">`FilePut`</ph> função.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated">O <ph id="ph1">`VBFixedString`</ph> atributo pode ser aplicado aos campos de cadeia de objectos para indicar o tamanho da cadeia, em bytes, quando escrito no disco.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated">O <ph id="ph1">`Len`</ph> funcionar utiliza o <ph id="ph2">`VBFixedString`</ph> atributo, se estiver disponível, ao determinar o tamanho do <ph id="ph3">`Object`</ph> variáveis.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`Len`</ph> função não pode ser capaz de determinar o número real de bytes de armazenamento, é necessário quando utilizado com cadeias de comprimento variável em tipos de dados definidos pelo utilizador.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`LenB`</ph> função em versões anteriores do Visual Basic devolve o número de bytes uma cadeia em vez de carateres.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`LenB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart Device Developer Notes    The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated">Notas do Programador de dispositivos de smart de <ph id="ph1">`Len`</ph> função aceita apenas <ph id="ph2">`String`</ph> e <ph id="ph3">`Object`</ph> variáveis como parâmetros.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém um <ph id="ph2">`String`</ph>, irá devolver o comprimento do <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Se um parâmetro for um valor nulo <ph id="ph1">`Object`</ph> referência, a função devolve zero.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Se um <ph id="ph1">`Object`</ph> contém qualquer outro tipo, é emitida uma exceção.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression or variable name.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão ou variável de nome.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function returns the size as it will be written to the file by the <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a <bpt id="p2">&lt;xref uid="langword_csharp_Len" name="Len" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> função devolve o tamanho, tal como será escrito no ficheiro pelo <bpt id="p3">&lt;xref uid="langword_csharp_FilePut" name="FilePut" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> função.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Devolve um número inteiro contendo o número de carateres existentes numa cadeia ou o número de bytes necessário para armazenar uma variável nominal.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Returns a left-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">Devolve uma cadeia alinhada à esquerda contendo a cadeia especificada ajustada ao comprimento especificado.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified string is longer than the specified length, the returned string is shortened to the specified length.</source>
          <target state="translated">Se a cadeia especificada for superior ao comprimento especificado, a cadeia devolvida é shortened ao comprimento especificado.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified string is shorter than the specified length, spaces are added to the right end of the returned string to produce the appropriate length.</source>
          <target state="translated">Se a cadeia especificada for mais curta do que o comprimento especificado, os espaços são adicionados a extremidade direita da cadeia devolvida para produzir o comprimento adequado.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Name of string variable.</source>
          <target state="translated">Nome da variável de cadeia.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Length of returned string.</source>
          <target state="translated">Comprimento da cadeia devolvido.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>Returns a left-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">Devolve uma cadeia alinhada à esquerda contendo a cadeia especificada ajustada ao comprimento especificado.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Devolve uma cadeia contendo uma cópia de uma cadeia especificada sem espaços à esquerda (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), não à direita espaços (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), ou não esquerda ou à direita espaços (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated">O <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, e <ph id="ph3">`Trim`</ph> funções remover espaços as extremidades de cadeias.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Devolve uma cadeia contendo uma cópia de uma cadeia especificada sem espaços à esquerda (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), não à direita espaços (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), ou não esquerda ou à direita espaços (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>Returns a string that contains all the characters starting from a specified position in a string.</source>
          <target state="translated">Devolve uma cadeia que contém todos os carateres a partir de uma posição especificada, numa cadeia.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">Para determinar o número de carateres no <ph id="ph1">`str`</ph>, utilize o <ph id="ph2">`Len`</ph> função.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visual Basic has a <ph id="ph1">`Mid`</ph> function and a <ph id="ph2">`Mid`</ph> statement.</source>
          <target state="translated">Visual Basic tem um <ph id="ph1">`Mid`</ph> função e um <ph id="ph2">`Mid`</ph> instrução.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>These elements both operate on a specified number of characters in a string, but the <ph id="ph1">`Mid`</ph> function returns the characters while the <ph id="ph2">`Mid`</ph> statement replaces the characters.</source>
          <target state="translated">Estes elementos ambos operam num número especificado de carateres existentes numa cadeia, mas o <ph id="ph1">`Mid`</ph> função devolve os carateres enquanto o <ph id="ph2">`Mid`</ph> instrução substitui os carateres.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Mid Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>instrução Mid<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`MidB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`MidB`</ph> função em versões anteriores do Visual Basic devolve uma cadeia de bytes em vez de carateres.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>All Visual Basic strings are in Unicode, and <ph id="ph1">`MidB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic estão em Unicode, e <ph id="ph1">`MidB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from which characters are returned.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão a partir da qual são devolvidos carateres.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>Starting position of the characters to return.</source>
          <target state="translated">Posição inicial de carateres a devolver.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Start`</ph> is greater than the number of characters in <ph id="ph2">`str`</ph>, the <bpt id="p1">&lt;xref uid="langword_csharp_Mid" name="Mid" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function returns a zero-length string ("").</source>
          <target state="translated">Se <ph id="ph1">`Start`</ph> é superior ao número de carateres num <ph id="ph2">`str`</ph>, a <bpt id="p1">&lt;xref uid="langword_csharp_Mid" name="Mid" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> função devolve uma cadeia de comprimento zero ("").</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Start`</ph> is one-based.</source>
          <target state="translated"><ph id="ph1">`Start`</ph>é baseada num.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>A string that consists of all the characters starting from the specified position in the string.</source>
          <target state="translated">Uma cadeia que é composta por todos os carateres iniciados a partir da posição especificada na cadeia.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>Returns a string that contains a specified number of characters starting from a specified position in a string.</source>
          <target state="translated">Devolve uma cadeia que contém um número especificado de carateres a partir de uma posição especificada, numa cadeia.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">Para determinar o número de carateres no <ph id="ph1">`str`</ph>, utilize o <ph id="ph2">`Len`</ph> função.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visual Basic has a <ph id="ph1">`Mid`</ph> function and a <ph id="ph2">`Mid`</ph> statement.</source>
          <target state="translated">Visual Basic tem um <ph id="ph1">`Mid`</ph> função e um <ph id="ph2">`Mid`</ph> instrução.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source>These elements both operate on a specified number of characters in a string, but the <ph id="ph1">`Mid`</ph> function returns the characters while the <ph id="ph2">`Mid`</ph> statement replaces the characters.</source>
          <target state="translated">Estes elementos ambos operam num número especificado de carateres existentes numa cadeia, mas o <ph id="ph1">`Mid`</ph> função devolve os carateres enquanto o <ph id="ph2">`Mid`</ph> instrução substitui os carateres.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Mid Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>instrução Mid<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`MidB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`MidB`</ph> função em versões anteriores do Visual Basic devolve uma cadeia de bytes em vez de carateres.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>All Visual Basic strings are in Unicode, and <ph id="ph1">`MidB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic estão em Unicode, e <ph id="ph1">`MidB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from which characters are returned.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão a partir da qual são devolvidos carateres.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>Starting position of the characters to return.</source>
          <target state="translated">Posição inicial de carateres a devolver.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Start`</ph> is greater than the number of characters in <ph id="ph2">`str`</ph>, the <bpt id="p1">&lt;xref uid="langword_csharp_Mid" name="Mid" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function returns a zero-length string ("").</source>
          <target state="translated">Se <ph id="ph1">`Start`</ph> é superior ao número de carateres num <ph id="ph2">`str`</ph>, a <bpt id="p1">&lt;xref uid="langword_csharp_Mid" name="Mid" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> função devolve uma cadeia de comprimento zero ("").</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Start`</ph> is one based.</source>
          <target state="translated"><ph id="ph1">`Start`</ph>um baseia-se.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Number of characters to return.</source>
          <target state="translated">Número de carateres a devolver.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>If omitted or if there are fewer than <ph id="ph1">`Length`</ph> characters in the text (including the character at position <ph id="ph2">`Start`</ph>), all characters from the start position to the end of the string are returned.</source>
          <target state="translated">Se for omitido ou se existirem menos de <ph id="ph1">`Length`</ph> carateres no texto (incluindo o caráter na posição <ph id="ph2">`Start`</ph>), são devolvidos todos os carateres da posição de início ao fim da cadeia.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>A string that consists of the specified number of characters starting from the specified position in the string.</source>
          <target state="translated">Uma cadeia que consiste o número especificado de carateres a partir da posição especificada na cadeia.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Returns a string in which a specified substring has been replaced with another substring a specified number of times.</source>
          <target state="translated">Devolve uma cadeia em que uma subcadeia foi substituída por outra subcadeia um número de vezes especificado.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value of the <ph id="ph1">`Replace`</ph> function is a string that begins at the position specified by <ph id="ph2">`Start`</ph> and concludes at the end of the <ph id="ph3">`Expression`</ph> string, with the substitutions made as specified by the <ph id="ph4">`Find`</ph> and <ph id="ph5">`Replace`</ph> values.</source>
          <target state="translated">O valor de retorno do <ph id="ph1">`Replace`</ph> função é uma cadeia que começa na posição especificada pelo <ph id="ph2">`Start`</ph> e conclui no fim do <ph id="ph3">`Expression`</ph> cadeia, com as substituições efetuadas conforme especificado pelo <ph id="ph4">`Find`</ph> e <ph id="ph5">`Replace`</ph> valores.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated">O <ph id="ph1">`Compare`</ph> argumento pode ter os seguintes valores.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>|||   |-|-|   |Constant|Description|   |<ph id="ph1">`Binary`</ph>|Performs a binary comparison|   |<ph id="ph2">`Text`</ph>|Performs a textual comparison|</source>
          <target state="translated">|||   |-|-|   | Constante | Descrição |   | <ph id="ph1">`Binary`</ph>| Efetua uma comparação binária |   | <ph id="ph2">`Text`</ph>| Efetua uma comparação textual |</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>String expression containing substring to replace.</source>
          <target state="translated">Cadeia de expressão que contém a subcadeia para substituir.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Substring being searched for.</source>
          <target state="translated">Subcadeia que está a ser procurada.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>Replacement substring.</source>
          <target state="translated">Subcadeia de substituição.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Position within <ph id="ph1">`Expression`</ph> that starts a substring used for replacement.</source>
          <target state="translated">Posição dentro <ph id="ph1">`Expression`</ph> que inicia uma subcadeia utilizada para a substituição.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>The return value of <bpt id="p1">&lt;xref uid="langword_csharp_Replace" name="Replace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a string that begins at <ph id="ph1">`Start`</ph>, with appropriate substitutions.</source>
          <target state="translated">O valor de retorno de <bpt id="p1">&lt;xref uid="langword_csharp_Replace" name="Replace" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> é uma cadeia que começa com o <ph id="ph1">`Start`</ph>, com as substituições adequadas.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>If omitted, 1 is assumed.</source>
          <target state="translated">Se for omitido, é assumido 1.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>Number of substring substitutions to perform.</source>
          <target state="translated">Número de substituições de subcadeia a efetuar.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>If omitted, the default value is –1, which means "make all possible substitutions."</source>
          <target state="translated">Se for omitido, o valor predefinido é –1, o que significa "efetuar todas as substituições possíveis".</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>Numeric value indicating the kind of comparison to use when evaluating substrings.</source>
          <target state="translated">Valor numérico que indica o tipo de comparação para utilizar durante a avaliação de subcadeias.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>See Settings for values.</source>
          <target state="translated">Consulte as definições para os valores.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Replace" name="Replace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> returns the following values.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Replace" name="Replace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Devolve os seguintes valores.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">Se</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>Replace returns</source>
          <target state="translated">Substituir devolve</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Find</ph><ept id="p1">&lt;/code&gt;</ept> is zero-length or <bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Find</ph><ept id="p1">&lt;/code&gt;</ept>é o comprimento de zero ou<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>Copy of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept></source>
          <target state="translated">Cópia de<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Replace</ph><ept id="p1">&lt;/code&gt;</ept> is zero-length</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Replace</ph><ept id="p1">&lt;/code&gt;</ept>é o comprimento de zero</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>Copy of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept> with no occurrences of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">Find</ph><ept id="p2">&lt;/code&gt;</ept></source>
          <target state="translated">Copiar do <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Expression</ph> <ept id="p1">&lt;/code&gt;</ept> com nenhuma ocorrências do<bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">Find</ph><ept id="p2">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept> is zero-length or <bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">Start</ph><ept id="p3">&lt;/code&gt;</ept> is greater than length of <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">Expression</ph><ept id="p4">&lt;/code&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept>é o comprimento de zero ou <bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, ou <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">Start</ph> <ept id="p3">&lt;/code&gt;</ept> é superior ao comprimento de<bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">Expression</ph><ept id="p4">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Count</ph><ept id="p1">&lt;/code&gt;</ept> is 0</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Count</ph><ept id="p1">&lt;/code&gt;</ept>é 0</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>Copy of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept></source>
          <target state="translated">Cópia de<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Count&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> -1 or <ph id="ph3">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph>= 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Count&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph> -1 or <ph id="ph3">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph>= 0.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Returns a string containing a specified number of characters from the right side of a string.</source>
          <target state="translated">Devolve uma cadeia contendo um número especificado de carateres do lado direito de uma cadeia.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">Para determinar o número de carateres no <ph id="ph1">`str`</ph>, utilize o <ph id="ph2">`Len`</ph> função.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source>If used in a Windows Form, or any other class that has a <ph id="ph1">`Right`</ph> property, you must fully qualify the function with <ph id="ph2">`Microsoft.VisualBasic.Strings.Right`</ph>.</source>
          <target state="translated">Se a ser utilizado um formulário do Windows ou qualquer outra classe que tem um <ph id="ph1">`Right`</ph> propriedade, tem qualificar completamente a função com <ph id="ph2">`Microsoft.VisualBasic.Strings.Right`</ph>.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`RightB`</ph> function in earlier versions of Visual Basic returns a string in bytes, rather than characters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O <ph id="ph2">`RightB`</ph> função em versões anteriores do Visual Basic devolve uma cadeia em bytes, em vez de carateres.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">É utilizada principalmente para converter as cadeias de carateres de byte duplo (DBCS) conjunto de aplicações.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`RightB`</ph> is no longer supported.</source>
          <target state="translated">Todas as cadeias de Visual Basic atuais estão em Unicode, e <ph id="ph1">`RightB`</ph> já não é suportada.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression from which the rightmost characters are returned.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão a partir da qual os carateres mais à direita são devolvidos.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Numeric expression indicating how many characters to return.</source>
          <target state="translated">Expressão numérica que indica o número de carateres a devolver.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>If 0, a zero-length string ("") is returned.</source>
          <target state="translated">Se for 0, uma cadeia de comprimento zero ("") é devolvido.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>If greater than or equal to the number of characters in <ph id="ph1">`str`</ph>, the entire string is returned.</source>
          <target state="translated">Se maior que ou igual ao número de carateres de <ph id="ph1">`str`</ph>, é devolvida a cadeia completa.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>Returns a string containing a specified number of characters from the right side of a string.</source>
          <target state="translated">Devolve uma cadeia contendo um número especificado de carateres do lado direito de uma cadeia.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Length&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>Returns a right-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">Devolve uma cadeia alinhada à direita contendo a cadeia especificada ajustada ao comprimento especificado.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Source`</ph> is longer than <ph id="ph2">`Length`</ph>, <ph id="ph3">`RSet`</ph> places only the leftmost characters, up to the length of <ph id="ph4">`Source`</ph>, in the returned string.</source>
          <target state="translated">Se <ph id="ph1">`Source`</ph> é maior do que <ph id="ph2">`Length`</ph>, <ph id="ph3">`RSet`</ph> coloca apenas os carateres mais à esquerda, até o comprimento de <ph id="ph4">`Source`</ph>, na cadeia devolvida.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified string is shorter than the specified length, spaces are added to the left end of the string to produce the appropriate length.</source>
          <target state="translated">Se a cadeia especificada for mais curta do que o comprimento especificado, os espaços são adicionados a extremidade esquerda da cadeia para produzir o comprimento adequado.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified string is longer than the specified length, it is shortened to the specified length.</source>
          <target state="translated">Se a cadeia especificada for superior ao comprimento especificado, é shortened ao comprimento especificado.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>Name of string variable.</source>
          <target state="translated">Nome da variável de cadeia.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>Length of returned string.</source>
          <target state="translated">Comprimento da cadeia devolvido.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>Returns a right-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">Devolve uma cadeia alinhada à direita contendo a cadeia especificada ajustada ao comprimento especificado.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Devolve uma cadeia contendo uma cópia de uma cadeia especificada sem espaços à esquerda (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), não à direita espaços (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), ou não esquerda ou à direita espaços (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated">O <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, e <ph id="ph3">`Trim`</ph> funções remover espaços as extremidades de cadeias.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Devolve uma cadeia contendo uma cópia de uma cadeia especificada sem espaços à esquerda (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), não à direita espaços (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), ou não esquerda ou à direita espaços (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>Returns a string consisting of the specified number of spaces.</source>
          <target state="translated">Devolve uma cadeia consistindo num número especificado de espaços.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Space`</ph> function is useful for formatting output and clearing data in fixed-length strings.</source>
          <target state="translated">O <ph id="ph1">`Space`</ph> função é útil para a saída de formatação e limpar dados nas cadeias de comprimento fixo.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>The number of spaces you want in the string.</source>
          <target state="translated">O número de espaços que pretende na cadeia.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Returns a string consisting of the specified number of spaces.</source>
          <target state="translated">Devolve uma cadeia consistindo num número especificado de espaços.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>Returns a zero-based, one-dimensional array containing a specified number of substrings.</source>
          <target state="translated">Devolve uma matriz unidimensional baseada em zero contendo um número especificado de subcadeias.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, or when <ph id="ph1">`Limit`</ph> equals -1, the <ph id="ph2">`Split`</ph> function splits the input string at every occurrence of the delimiter string, and returns the substrings in an array.</source>
          <target state="translated">Por predefinição, ou quando <ph id="ph1">`Limit`</ph> é igual a -1, o <ph id="ph2">`Split`</ph> função divide a cadeia de entrada em cada ocorrência da cadeia de delimitador e devolve as subcadeias numa matriz.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`Limit`</ph> parameter is greater than zero, the <ph id="ph2">`Split`</ph> function splits the string at the first <ph id="ph3">`Limit`</ph>-1 occurrences of the delimiter, and returns an array with the resulting substrings.</source>
          <target state="translated">Quando o <ph id="ph1">`Limit`</ph> parâmetro é maior que zero, o <ph id="ph2">`Split`</ph> função divide a cadeia no primeiro <ph id="ph3">`Limit`</ph>ocorrências de-1 do delimitador e devolve uma matriz com as subcadeias resultantes.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`Split("a:b:c", ":")`</ph> returns the array <ph id="ph2">`{"a", "b", "c"}`</ph>, while <ph id="ph3">`Split("a:b:c", ":", 2)`</ph> returns the array <ph id="ph4">`{"a", "b:c"}`</ph>.</source>
          <target state="translated">Por exemplo, <ph id="ph1">`Split("a:b:c", ":")`</ph> devolve matriz <ph id="ph2">`{"a", "b", "c"}`</ph>, enquanto <ph id="ph3">`Split("a:b:c", ":", 2)`</ph> devolve matriz <ph id="ph4">`{"a", "b:c"}`</ph>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`Split`</ph> function encounters two delimiters in a row, or a delimiter at the beginning or end of the string, it interprets them as surrounding an empty string ("").</source>
          <target state="translated">Quando o <ph id="ph1">`Split`</ph> função encontra dois delimitadores numa linha ou um delimitador no início ou fim da cadeia, interpreta-o como envolvente uma cadeia vazia ("").</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`Split("xx", "x")`</ph> returns the array containing three empty strings: one from between the beginning of the string and the first "x", one from between the two "x" strings, and one from between the last "x" and the end of the string.</source>
          <target state="translated">Por exemplo, <ph id="ph1">`Split("xx", "x")`</ph> devolve a matriz de cadeias vazias três: um from between início da cadeia e o primeiro "x", um from between dois "x" cadeias e um from between último "x" e o fim da cadeia.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT">
          <source>This table demonstrates how the optional <ph id="ph1">`Delimiter`</ph>, <ph id="ph2">`Limit`</ph>, and <ph id="ph3">`Compare`</ph> parameters can change the behavior of the <ph id="ph4">`Split`</ph> function.</source>
          <target state="translated">Esta tabela demonstra como a opcional <ph id="ph1">`Delimiter`</ph>, <ph id="ph2">`Limit`</ph>, e <ph id="ph3">`Compare`</ph> parâmetros podem alterar o comportamento a <ph id="ph4">`Split`</ph> função.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT">
          <source>|||   |-|-|   |Split Call|Return Value|   |<ph id="ph1">`Split("42, 12, 19")`</ph>|{"42," , "12," , "19"}|   |<ph id="ph2">`Split("42, 12, 19", ", ")`</ph>|{"42", "12", "19"}|   |<ph id="ph3">`Split("42, 12, 19", ", ", 2)`</ph>|{"42", "12, 19"}|   |<ph id="ph4">`Split("192.168.0.1", ".")`</ph>|{"192", "168", "0", "1"}|   |<ph id="ph5">`Split("Alice and Bob", " AND ")`</ph>|{"Alice and Bob"}|   |<ph id="ph6">`Split("Alice and Bob", " AND ", ,CompareMethod.Text)`</ph>|{"Alice", "Bob"}|   |<ph id="ph7">`Split("someone@example.com", "@",1)`</ph>|{"<ph id="ph8">someone@example.com</ph>"}|   |<ph id="ph9">`Split("someone@example.com", "@",2)`</ph>|{"someone", "example.com"}|       The <ph id="ph10">`Compare`</ph> argument can have the following values.</source>
          <target state="translated">|||   |-|-|   | Dividir chamada | Devolver valor |   | <ph id="ph1">`Split("42, 12, 19")`</ph>| {"42,", "12", "19"} |   | <ph id="ph2">`Split("42, 12, 19", ", ")`</ph>| {"42", "12", "19"} |   | <ph id="ph3">`Split("42, 12, 19", ", ", 2)`</ph>| {"42", "12, 19"} |   | <ph id="ph4">`Split("192.168.0.1", ".")`</ph>| {"192", "168", "0", "1"} |   | <ph id="ph5">`Split("Alice and Bob", " AND ")`</ph>| {"Alice e João"} |   | <ph id="ph6">`Split("Alice and Bob", " AND ", ,CompareMethod.Text)`</ph>| {"Alice", "Bob"} |   | <ph id="ph7">`Split("someone@example.com", "@",1)`</ph>| {"<ph id="ph8">someone@example.com</ph>"}|   | <ph id="ph9">`Split("someone@example.com", "@",2)`</ph>| {"alguém", "example.com"}|       O <ph id="ph10">`Compare`</ph> argumento pode ter os seguintes valores.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>||||   |-|-|-|   |Constant|Description|Value|   |<ph id="ph1">`CompareMethod.Binary`</ph>|Performs a binary comparison|0|   |<ph id="ph2">`CompareMethod.Text`</ph>|Performs a textual comparison|1|</source>
          <target state="translated">||||   |-|-|-|   | Constante | Descrição | Valor |   | <ph id="ph1">`CompareMethod.Binary`</ph>| Efetua uma comparação binária |&amp;0; |   | <ph id="ph2">`CompareMethod.Text`</ph>| Efetua uma comparação textual |&amp;1; |</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing substrings and delimiters.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão que contém subcadeias e delimitadores.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>Any single character used to identify substring limits.</source>
          <target state="translated">Um único caráter utilizado para identificar os limites de substring.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Delimiter`</ph> is omitted, the space character (" ") is assumed to be the delimiter.</source>
          <target state="translated">Se <ph id="ph1">`Delimiter`</ph> for omitido, o caráter de espaço ("") é pressupõe-se que o delimitador.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>Maximum number of substrings into which the input string should be split.</source>
          <target state="translated">Número máximo de subcadeias no qual deve ser dividir a cadeia de entrada.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>The default, –1, indicates that the input string should be split at every occurrence of the <ph id="ph1">`Delimiter`</ph> string.</source>
          <target state="translated">A predefinição, –1, indica que a cadeia de entrada deve ser dividida em cada ocorrência da <ph id="ph1">`Delimiter`</ph> cadeia.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>Numeric value indicating the comparison to use when evaluating substrings.</source>
          <target state="translated">Valor numérico que indica a comparação para utilizar durante a avaliação de subcadeias.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>See "Settings" for values.</source>
          <target state="translated">Consulte "Definições" para valores.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>matriz.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Expression</ph><ept id="p1">&lt;/code&gt;</ept> is a zero-length string (""), <bpt id="p2">&lt;xref uid="langword_csharp_Split" name="Split" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> returns a single-element array containing a zero-length string.</source>
          <target state="translated">Se <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Expression</ph> <ept id="p1">&lt;/code&gt;</ept> é uma cadeia de comprimento zero (""), <bpt id="p2">&lt;xref uid="langword_csharp_Split" name="Split" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> devolve uma matriz de elemento único que contém uma cadeia de comprimento zero.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Delimiter</ph><ept id="p1">&lt;/code&gt;</ept> is a zero-length string, or if it does not appear anywhere in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">Expression</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_Split" name="Split" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> returns a single-element array containing the entire <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">Expression</ph><ept id="p4">&lt;/code&gt;</ept> string.</source>
          <target state="translated">Se <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Delimiter</ph> <ept id="p1">&lt;/code&gt;</ept> é uma cadeia de comprimento de zero, ou se não aparecer em qualquer local no <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">Expression</ph> <ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_Split" name="Split" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> devolve uma matriz de elemento único que contém toda <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">Expression</ph> <ept id="p4">&lt;/code&gt;</ept> cadeia.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>Returns -1, 0, or 1, based on the result of a string comparison.</source>
          <target state="translated">Devolve -1, 0 ou 1, com base no resultado de uma comparação de cadeias.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT">
          <source>The strings are compared by alphanumeric sort values beginning with the first character.</source>
          <target state="translated">As cadeias são comparadas pelos valores de ordenação alfanuméricos, começando com o primeiro caráter.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>For further information on binary comparisons, textual comparisons, and sort order, see <bpt id="p1">[</bpt>Option Compare Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre comparações binárias, comparações textual e ordenação, consulte <bpt id="p1">[</bpt>opção comparar instrução<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:      |||   |-|-|   |Constant|Description|   |<ph id="ph2">`Binary`</ph>|Performs a binary comparison, based on a sort order derived from the internal binary representations of the characters.|   |<ph id="ph3">`Text`</ph>|Performs a text comparison, based on a case-insensitive text sort order determined by your system's <ph id="ph4">`LocaleID`</ph> value.|</source>
          <target state="translated">O <ph id="ph1">`Compare`</ph> argumento definições são: |||   |-|-|   | Constante | Descrição |   | <ph id="ph2">`Binary`</ph>| Efetua uma comparação binária, com base numa ordem sort derivada representações binárias internas dos carateres. |   | <ph id="ph3">`Text`</ph>| Efetua uma comparação de texto, com base numa ordem sort texto sensível determinada pelo seu sistema <ph id="ph4">`LocaleID`</ph> valor. |</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">Especifica o tipo de comparação de cadeias.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Compare`</ph> is omitted, the <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> setting determines the type of comparison.</source>
          <target state="translated">Se <ph id="ph1">`Compare`</ph> for omitido, o <bpt id="p1">&lt;xref uid="langword_csharp_Option Compare" name="Option Compare" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> definição determina o tipo de comparação.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_StrComp" name="StrComp" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function has the following return values.</source>
          <target state="translated">O <bpt id="p1">&lt;xref uid="langword_csharp_StrComp" name="StrComp" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> função com os seguintes valores de retorno.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">Se</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>StrComp returns</source>
          <target state="translated">Devolve StrComp</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept> sorts ahead of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept>Ordena ahead de<bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>-1</source>
          <target state="translated">-1</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept>é igual a<bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept> sorts after <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">String1</ph><ept id="p1">&lt;/code&gt;</ept>Ordena após<bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">String2</ph><ept id="p2">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Compare&lt;/code&gt;</ph> value is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Compare&lt;/code&gt;</ph>o valor não é válido.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>Returns a string converted as specified.</source>
          <target state="translated">Devolve uma cadeia convertida conforme especificado.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constants <ph id="ph1">`VbStrConv.Wide`</ph>, <ph id="ph2">`VbStrConv.Narrow`</ph>, <ph id="ph3">`VbStrConv.SimplifiedChinese`</ph>, <ph id="ph4">`VbStrConv.TraditionalChinese`</ph>, <ph id="ph5">`VbStrConv.Katakana`</ph>, and <ph id="ph6">`VbStrConv.Hiragana`</ph> can cause run-time errors when used in locales where they do not apply, but not always: the constants <ph id="ph7">`VbStrConv.Katakana`</ph> and <ph id="ph8">`VbStrConv.Hiragana`</ph> can be used in a non-Japanese system with the Japanese Language Pack installed.</source>
          <target state="translated">As constantes <ph id="ph1">`VbStrConv.Wide`</ph>, <ph id="ph2">`VbStrConv.Narrow`</ph>, <ph id="ph3">`VbStrConv.SimplifiedChinese`</ph>, <ph id="ph4">`VbStrConv.TraditionalChinese`</ph>, <ph id="ph5">`VbStrConv.Katakana`</ph>, e <ph id="ph6">`VbStrConv.Hiragana`</ph> podem provocar erros de tempo de execução quando utilizado em regiões onde que não se aplicam, mas nem sempre: constantes <ph id="ph7">`VbStrConv.Katakana`</ph> e <ph id="ph8">`VbStrConv.Hiragana`</ph> pode ser utilizado num sistema de japonês não com o pacote de idiomas de japonês instalado.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, use of the constants <ph id="ph1">`VbStrConv.Wide`</ph> and <ph id="ph2">`VbStrConv.Narrow`</ph> is supported on any system with an East Asian language installed.</source>
          <target state="translated">Além disso, a utilização de constantes <ph id="ph1">`VbStrConv.Wide`</ph> e <ph id="ph2">`VbStrConv.Narrow`</ph> é suportado em qualquer sistema com um idioma do leste asiático instalado.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">Esta função utiliza informações de cultura da aplicação quando manipular a cadeia de modo a que as alterações às maiúsculas e são adequadas para a região na qual a aplicação está a ser utilizada.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt; method, and pass &lt;xref:System.StringComparison&gt; or &lt;xref:System.StringComparison&gt; for the <ph id="ph2">`comparisonType`</ph> argument.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Se a aplicação toma decisões de segurança com base no resultado de uma operação de alteração de maiúsculas e minúsculas ou comparação, em seguida, deve utilizar a operação de &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;método e passar &lt;xref:System.StringComparison&gt;ou &lt;xref:System.StringComparison&gt;para o <ph id="ph2">`comparisonType`</ph> argumento.&lt;/xref:System.StringComparison&gt; &lt;/xref:System.StringComparison&gt; &lt;/xref:System.String.Compare%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como cultura afeta cadeias no Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument settings are:      |||   |-|-|   |Enumeration member|Description|   |<ph id="ph2">`VbStrConv.None`</ph>|Performs no conversion|   |<ph id="ph3">`VbStrConv.LinguisticCasing`</ph>|Uses linguistic rules for casing, rather than File System (default).</source>
          <target state="translated">O <ph id="ph1">`Conversion`</ph> argumento definições são: |||   |-|-|   | Membro de enumeração | Descrição |   | <ph id="ph2">`VbStrConv.None`</ph>| Não efetua nenhuma conversão |   | <ph id="ph3">`VbStrConv.LinguisticCasing`</ph>| Utiliza regras linguístico para maiúsculas e minúsculas, em vez de sistema de ficheiros (predefinição).</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT">
          <source>Valid with <ph id="ph1">`VbStrConv.UpperCase`</ph> and <ph id="ph2">`VbStrConv.LowerCase`</ph> only.|   |<ph id="ph3">`VbStrConv.UpperCase`</ph>|Converts the string to uppercase characters.|   |<ph id="ph4">`VbStrConv.LowerCase`</ph>|Converts the string to lowercase characters.|   |<ph id="ph5">`VbStrConv.ProperCase`</ph>|Converts the first letter of every word in string to uppercase.|   |<ph id="ph6">`VbStrConv.Wide`</ph> <bpt id="p1">&lt;sup&gt;</bpt><bpt id="p2">*</bpt><ept id="p2">&lt;/sup&gt;</ept>|Converts narrow (half-width) characters in the string to wide (full-width) characters.|   |<ph id="ph7">`VbStrConv.Narrow`</ph> <bpt id="p3">&lt;sup&gt;</bpt><ept id="p3">*</ept><ept id="p1">&lt;/sup&gt;</ept>|Converts wide (full-width) characters in the string to narrow (half-width) characters.|   |<ph id="ph8">`VbStrConv.Katakana`</ph> <bpt id="p4">&lt;sup&gt;</bpt><bpt id="p5">**</bpt><ept id="p5">&lt;/sup&gt;</ept>|Converts Hiragana characters in the string to Katakana characters.|   |<ph id="ph9">`VbStrConv.Hiragana`</ph> <bpt id="p6">&lt;sup&gt;</bpt><ept id="p6">**</ept><ept id="p4">&lt;/sup&gt;</ept>|Converts Katakana characters in the string to Hiragana characters.|   |<ph id="ph10">`VbStrConv.SimplifiedChinese`</ph> <bpt id="p7">&lt;sup&gt;</bpt><bpt id="p8">*</bpt><ept id="p8">&lt;/sup&gt;</ept>|Converts Traditional Chinese characters to Simplified Chinese.|   |<ph id="ph11">`VbStrConv.TraditionalChinese`</ph> <bpt id="p9">&lt;sup&gt;</bpt><ept id="p9">*</ept><ept id="p7">&lt;/sup&gt;</ept>|Converts Simplified Chinese characters to Traditional Chinese.|       <bpt id="p10">&lt;sup&gt;</bpt><bpt id="p11">*</bpt><ept id="p11">&lt;/sup&gt;</ept> Applies to Asian locales.       <bpt id="p12">&lt;sup&gt;</bpt><ept id="p12">*</ept><ph id="ph12">*</ph><ept id="p10">&lt;/sup&gt;</ept> Applies to Japan only.</source>
          <target state="translated">Válido com <ph id="ph1">`VbStrConv.UpperCase`</ph> e <ph id="ph2">`VbStrConv.LowerCase`</ph> apenas. |   | <ph id="ph3">`VbStrConv.UpperCase`</ph>| Converte a cadeia de carateres de maiúsculas. |   | <ph id="ph4">`VbStrConv.LowerCase`</ph>| Converte a cadeia de carateres de minúsculas. |   | <ph id="ph5">`VbStrConv.ProperCase`</ph>| Converte a primeira letra de cada palavra na cadeia em maiúsculas. |   | <ph id="ph6">`VbStrConv.Wide`</ph> <bpt id="p1">&lt;sup&gt;</bpt><bpt id="p2">*</bpt><ept id="p2">&lt;/sup&gt;</ept>| Converte restringir (meio largura) carateres da cadeia de carateres de wide (largura completo). |   | <ph id="ph7">`VbStrConv.Narrow`</ph> <bpt id="p3">&lt;sup&gt;</bpt><ept id="p3">*</ept><ept id="p1">&lt;/sup&gt;</ept>| Converte carateres wide (largura completo) na cadeia de para restringir os carateres (meio largura). |   | <ph id="ph8">`VbStrConv.Katakana`</ph> <bpt id="p4">&lt;sup&gt;</bpt><bpt id="p5">**</bpt><ept id="p5">&lt;/sup&gt;</ept>| Converte carateres Hiragana na cadeia de carateres Katakana. |   | <ph id="ph9">`VbStrConv.Hiragana`</ph> <bpt id="p6">&lt;sup&gt;</bpt><ept id="p6">**</ept><ept id="p4">&lt;/sup&gt;</ept>| Converte carateres Katakana na cadeia de carateres Hiragana. |   | <ph id="ph10">`VbStrConv.SimplifiedChinese`</ph> <bpt id="p7">&lt;sup&gt;</bpt><bpt id="p8">*</bpt><ept id="p8">&lt;/sup&gt;</ept>| Converte carateres chinês tradicionais chinês simplificado. |   | <ph id="ph11">`VbStrConv.TraditionalChinese`</ph> <bpt id="p9">&lt;sup&gt;</bpt><ept id="p9">*</ept><ept id="p7">&lt;/sup&gt;</ept>| Converte carateres chinês simplificado, chinês tradicional para. |       <bpt id="p10">&lt;sup&gt;</bpt> <bpt id="p11">*</bpt> <ept id="p11">&lt;/sup&gt;</ept> Aplica-se a Asian regiões.       <bpt id="p12">&lt;sup&gt;</bpt><ept id="p12">*</ept><ph id="ph12">*</ph><ept id="p10">&lt;/sup&gt;</ept>Aplicável apenas ao Japão.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  These constants are specified in the .NET Framework common language runtime.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Estes constantes estão especificadas no .NET Framework language runtime.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, they can be used anywhere in your code in place of the actual values.</source>
          <target state="translated">Como resultado, podem ser utilizadas em qualquer lugar no seu código em vez dos valores reais.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most can be combined (for example, <ph id="ph1">`UpperCase + Wide`</ph>), except when they are mutually exclusive (for example, <ph id="ph2">`VbStrConv.Wide + VbStrConv.Narrow`</ph>).</source>
          <target state="translated">Pode ser combinada maioria (por exemplo, <ph id="ph1">`UpperCase + Wide`</ph>), exceto quando são mutuamente exclusivos (por exemplo, <ph id="ph2">`VbStrConv.Wide + VbStrConv.Narrow`</ph>).</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are valid word separators for proper casing: Null (<ph id="ph1">`Chr$(0)`</ph>), horizontal tab (<ph id="ph2">`Chr$(9)`</ph>), line feed (<ph id="ph3">`Chr$(10)`</ph>), vertical tab (<ph id="ph4">`Chr$(11)`</ph>), form feed (<ph id="ph5">`Chr$(12)`</ph>), carriage return (<ph id="ph6">`Chr$(13)`</ph>), space (single-byte character set) (<ph id="ph7">`Chr$(32)`</ph>).</source>
          <target state="translated">Seguem-se os separadores de word válido para maiúsculas e minúsculas adequada: nulo (<ph id="ph1">`Chr$(0)`</ph>), separador horizontal (<ph id="ph2">`Chr$(9)`</ph>), linha feed (<ph id="ph3">`Chr$(10)`</ph>), separador vertical (<ph id="ph4">`Chr$(11)`</ph>), formar feed (<ph id="ph5">`Chr$(12)`</ph>), avanço retorno (<ph id="ph6">`Chr$(13)`</ph>), espaço (conjunto de carateres de byte único) (<ph id="ph7">`Chr$(32)`</ph>).</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual value for a space, which can be full or half width, varies by country/region for East Asian cultures.</source>
          <target state="translated">O valor real para um espaço, que pode ser full ou largura meio, varia consoante o país/região do leste asiático culturas.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression to be converted.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão a ser convertida.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.VbStrConv"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> member.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.VbStrConv"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Membro.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>The enumeration value specifying the type of conversion to perform.</source>
          <target state="translated">O valor de enumeração especificar o tipo de conversão para executar.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value, if different from the system <bpt id="p2">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">O <bpt id="p1">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valor, se for diferente do sistema <bpt id="p2">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> valor.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>(The system <bpt id="p1">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value is the default.)</source>
          <target state="translated">(O sistema <bpt id="p1">&lt;xref uid="langword_csharp_LocaleID" name="LocaleID" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valor é a predefinição.)</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>Returns a string converted as specified.</source>
          <target state="translated">Devolve uma cadeia convertida conforme especificado.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>Unsupported <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">LocaleID</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">Conversion</ph><ept id="p2">&lt;/code&gt;</ept> <ph id="ph3">&amp;lt;</ph> 0 or <ph id="ph4">&amp;gt;</ph> 2048, or unsupported conversion for specified locale.</source>
          <target state="translated">Não suportado <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">LocaleID</ph> <ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">Conversion</ph> <ept id="p2">&lt;/code&gt;</ept> <ph id="ph3">&amp;lt;</ph> 0 ou <ph id="ph4">&amp;gt;</ph> conversão 2048 ou não é suportado para a região especificado.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Devolve uma cadeia ou objeto consistindo num caráter especificado repetido o número de vezes especificado.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">Esta função devolve um <ph id="ph1">`String`</ph> constituído por carateres repetidos.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">O caráter que constitui a cadeia é o primeiro caráter no <ph id="ph1">`Character`</ph> argumento e está duplicado <ph id="ph2">`Number`</ph> número de vezes.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>The length to the string to be returned.</source>
          <target state="translated">O comprimento da cadeia a ser devolvido.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">Será utilizado apenas o primeiro caráter da expressão.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>If Character is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, it must contain either a <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or a <bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>value.</source>
          <target state="translated">Se o carácter é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, tem de conter um um <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ou um <bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>valor.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Devolve uma cadeia ou objeto consistindo num caráter especificado repetido o número de vezes especificado.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph> is less than 0 or <ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph> type is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph>é inferior a 0 ou <ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph> tipo não é válido.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Devolve uma cadeia ou objeto consistindo num caráter especificado repetido o número de vezes especificado.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">Esta função devolve um <ph id="ph1">`String`</ph> constituído por carateres repetidos.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">O caráter que constitui a cadeia é o primeiro caráter no <ph id="ph1">`Character`</ph> argumento e está duplicado <ph id="ph2">`Number`</ph> número de vezes.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>The length to the string to be returned.</source>
          <target state="translated">O comprimento da cadeia a ser devolvido.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">Será utilizado apenas o primeiro caráter da expressão.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>If Character is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, it must contain either a <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or a <bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>value.</source>
          <target state="translated">Se o carácter é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, tem de conter um um <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ou um <bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>valor.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Devolve uma cadeia ou objeto consistindo num caráter especificado repetido o número de vezes especificado.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph> is less than 0 or <ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph> type is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph>é inferior a 0 ou <ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph> tipo não é válido.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Devolve uma cadeia ou objeto consistindo num caráter especificado repetido o número de vezes especificado.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">Esta função devolve um <ph id="ph1">`String`</ph> constituído por carateres repetidos.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">O caráter que constitui a cadeia é o primeiro caráter no <ph id="ph1">`Character`</ph> argumento e está duplicado <ph id="ph2">`Number`</ph> número de vezes.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>expressão.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>The length to the string to be returned.</source>
          <target state="translated">O comprimento da cadeia a ser devolvido.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Any valid <bpt id="p1">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> expression.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">Será utilizado apenas o primeiro caráter da expressão.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>If Character is of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, it must contain either a <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or a <bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>value.</source>
          <target state="translated">Se o carácter é do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, tem de conter um um <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ou um <bpt id="p3">&lt;xref uid="langword_csharp_String " name="String " href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>valor.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Devolve uma cadeia ou objeto consistindo num caráter especificado repetido o número de vezes especificado.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph> is less than 0 or <ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph> type is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Number&lt;/code&gt;</ph>é inferior a 0 ou <ph id="ph2">&lt;code&gt;Character&lt;/code&gt;</ph> tipo não é válido.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Character&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>Returns a string in which the character order of a specified string is reversed.</source>
          <target state="translated">Devolve uma cadeia na qual a ordem de carateres de uma cadeia especificada está invertida.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`StrReverse`</ph> function returns a string that contains the same characters as <ph id="ph2">`Expression`</ph>, but in the opposite order.</source>
          <target state="translated">O <ph id="ph1">`StrReverse`</ph> função devolve uma cadeia que contém os mesmos carateres como <ph id="ph2">`Expression`</ph>, mas oposta ordem.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source>String expression whose characters are to be reversed.</source>
          <target state="translated">Expressão de cadeia cujos carateres estão a ser invertido.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Expression`</ph> is a zero-length string (""), a zero-length string is returned.</source>
          <target state="translated">Se <ph id="ph1">`Expression`</ph> é uma cadeia de comprimento zero (""), é devolvida uma cadeia de comprimento zero.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>Returns a string in which the character order of a specified string is reversed.</source>
          <target state="translated">Devolve uma cadeia na qual a ordem de carateres de uma cadeia especificada está invertida.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Devolve uma cadeia contendo uma cópia de uma cadeia especificada sem espaços à esquerda (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), não à direita espaços (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), ou não esquerda ou à direita espaços (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated">O <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, e <ph id="ph3">`Trim`</ph> funções remover espaços as extremidades de cadeias.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), no trailing spaces (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), or no leading or trailing spaces (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Devolve uma cadeia contendo uma cópia de uma cadeia especificada sem espaços à esquerda (<bpt id="p1">&lt;xref uid="langword_csharp_LTrim" name="LTrim" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>), não à direita espaços (<bpt id="p2">&lt;xref uid="langword_csharp_RTrim" name="RTrim" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), ou não esquerda ou à direita espaços (<bpt id="p3">&lt;xref uid="langword_csharp_Trim" name="Trim" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">Devolve uma cadeia ou caráter contendo a cadeia especificada convertida em maiúsculas.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">Apenas letras minúsculas são convertidas em maiúsculas; todas as letras maiúsculas e carateres de nonletter permanecem inalterados.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">Esta função utiliza informações de cultura da aplicação quando manipular a cadeia de modo a que as alterações às maiúsculas e são adequadas para a região na qual a aplicação está a ser utilizada.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt; method, and pass &lt;xref:System.StringComparison&gt; or &lt;xref:System.StringComparison&gt; for the <ph id="ph2">`comparisonType`</ph> argument.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Se a aplicação toma decisões de segurança com base no resultado de uma operação de alteração de maiúsculas e minúsculas ou comparação, em seguida, deve utilizar a operação de &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;método e passar &lt;xref:System.StringComparison&gt;ou &lt;xref:System.StringComparison&gt;para o <ph id="ph2">`comparisonType`</ph> argumento.&lt;/xref:System.StringComparison&gt; &lt;/xref:System.StringComparison&gt; &lt;/xref:System.String.Compare%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como cultura afeta cadeias no Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">Devolve uma cadeia ou caráter contendo a cadeia especificada convertida em maiúsculas.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">Devolve uma cadeia ou caráter contendo a cadeia especificada convertida em maiúsculas.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">Apenas letras minúsculas são convertidas em maiúsculas; todas as letras maiúsculas e carateres de nonletter permanecem inalterados.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">Esta função utiliza informações de cultura da aplicação quando manipular a cadeia de modo a que as alterações às maiúsculas e são adequadas para a região na qual a aplicação está a ser utilizada.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt; method, and pass &lt;xref:System.StringComparison&gt; or &lt;xref:System.StringComparison&gt; for the <ph id="ph2">`comparisonType`</ph> argument.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Se a aplicação toma decisões de segurança com base no resultado de uma operação de alteração de maiúsculas e minúsculas ou comparação, em seguida, deve utilizar a operação de &lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;método e passar &lt;xref:System.StringComparison&gt;ou &lt;xref:System.StringComparison&gt;para o <ph id="ph2">`comparisonType`</ph> argumento.&lt;/xref:System.StringComparison&gt; &lt;/xref:System.StringComparison&gt; &lt;/xref:System.String.Compare%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como cultura afeta cadeias no Visual Basic<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>Any valid <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> expression.</source>
          <target state="translated">Qualquer válido <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ou <bpt id="p2">&lt;xref uid="langword_csharp_Char" name="Char" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> expressão.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">Devolve uma cadeia ou caráter contendo a cadeia especificada convertida em maiúsculas.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>