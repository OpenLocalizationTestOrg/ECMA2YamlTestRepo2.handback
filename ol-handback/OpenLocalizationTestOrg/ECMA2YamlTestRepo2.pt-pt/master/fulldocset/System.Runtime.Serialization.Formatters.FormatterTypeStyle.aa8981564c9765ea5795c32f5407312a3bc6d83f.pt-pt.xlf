<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73a654071eea46105ecb745646fa2aff965d9958</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.Formatters.FormatterTypeStyle.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5afdcb3308fd5d256de9973e19bf68150e3c42e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3e022ae0b1be38d93d385a007a6bdae5453777a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates the format in which type descriptions are laid out in the serialized stream.</source>
          <target state="translated">Indica o formato em que as descrições de tipo são apresentadas no fluxo serializado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Indicates that types can be given to all object members and <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object members.</source>
          <target state="translated">Indica que os tipos de podem ser especificados para todos os membros de objeto e <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> membros de objeto.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Indicates that types can be stated only for arrays of objects, object members of type &lt;xref:System.Object&gt;, and <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> non-primitive value types.</source>
          <target state="translated">Indica que podem ser indicados tipos apenas para as matrizes de objetos, os membros de objeto do tipo &lt;xref:System.Object&gt;, e <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> tipos de valor não primitivo.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Indicates that strings can be given in the XSD format rather than SOAP.</source>
          <target state="translated">Indica que cadeias podem ser especificadas no formato XSD em vez de SOAP.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>No string IDs are transmitted.</source>
          <target state="translated">Não existem IDs de cadeia são transmitidos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XsdString`</ph> and <ph id="ph2">`TypesWhenNeeded`</ph> settings are meant for high performance serialization between services built on the same version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">O <ph id="ph1">`XsdString`</ph> e <ph id="ph2">`TypesWhenNeeded`</ph> definições destinam-se para a serialização de elevado desempenho entre serviços criada na mesma versão do <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>These two values do not support VTS (Version Tolerant Serialization) because they intentionally omit type information that VTS uses to skip or add optional fields and properties.</source>
          <target state="translated">Estes dois valores não suportam VTS (serialização de tolerância a falhas de versão) porque estes intencionalmente omitir as informações de tipo VTS utiliza para ignorar ou adicionar propriedades e campos opcionais.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not use the <ph id="ph1">`XsdString`</ph> or <ph id="ph2">`TypesWhenNeeded`</ph> type formats when serializing and deserializing types on a computer running a different version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> than the computer on which the type was serialized.</source>
          <target state="translated">Não deve utilizar o <ph id="ph1">`XsdString`</ph> ou <ph id="ph2">`TypesWhenNeeded`</ph> escreva formatos quando serializar e anular a serialização dos tipos num computador com uma versão diferente do <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> diferente do computador no qual o tipo foi serializado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializing and deserializing on computers running different versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> causes the formatter to skip serialization of type information, thus making it impossible for the deserializer to skip optional fields if they are not present in certain types that may exist in the other version of the <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Serialização em computadores que executam versões diferentes do e o <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> faz com que o formatador de ignorar a serialização de informações de tipo, assim impossibilitando o desserializador ignorar os campos opcionais se não estiverem presentes em determinados tipos que possam existir na versão do que o <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you must use <ph id="ph1">`XsdString`</ph> or <ph id="ph2">`TypesWhenNeeded`</ph> in such a scenario, you must provide custom serialization for types that have changed from one version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to the other.</source>
          <target state="translated">Se tiver de utilizar <ph id="ph1">`XsdString`</ph> ou <ph id="ph2">`TypesWhenNeeded`</ph> neste cenário, tem de fornecer serialização personalizada para os tipos que foram alterados de uma versão do <ph id="ph3">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> para outro.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>