<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">622d983b53c274129793847d685acbdd440b7fa2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d909024656128c7971f07a0768b1053761ca513d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7dba3e780d88fd1bff1362801691f4fb4116ef3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides support for user customization of interop stubs in managed-to-COM interop scenarios.</source>
          <target state="translated">Fornece suporte para personalização de utilizador de interoperabilidade stubs em cenários de interoperabilidade gerido para COM.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute enables interop developers who have knowledge about marshaling and the inner workings of interop calls to do the following:      -   Take advantage of customized interop stubs at build time instead of run time.</source>
          <target state="translated">Este atributo permite aos programadores de interoperabilidade que tenham conhecimentos sobre empacotamento de referências e os trabalhos internos de interoperabilidade chamadas para fazer o seguinte:-tirar partido de stubs interoperabilidade personalizados no momento da compilação em vez de tempo de execução.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Debug customized interop stubs.</source>
          <target state="translated">-Debug personalizado interop stubs.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Provide marshaling capabilities within a stub that the runtime does not provide.</source>
          <target state="translated">-Fornece capacidades de empacotamento de referências dentro de um stub que não fornece o tempo de execução.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Provide user-specific method dispatch capabilities.</source>
          <target state="translated">-Fornece específicas do utilizador capacidades de emissão de método.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You apply the attribute on a method in an interface to specify a corresponding stub method for managed-to-native COM interop.</source>
          <target state="translated">Aplique o atributo num método numa interface para especificar um método stub correspondente para a interoperabilidade COM geridos para nativo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this attribute is encountered during run time, the common language runtime does not dynamically generate an interop stub.</source>
          <target state="translated">Se este atributo é encontrado durante o tempo de execução, o language runtime não gerar dinamicamente um stub interop.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it invokes the custom stub that was created at build time.</source>
          <target state="translated">Em vez disso, invoca o stub personalizada que foi criada no momento da compilação.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ManagedToNativeComInteropStubAttribute attribute has the following characteristics:      -   The attribute can be used only on methods from interfaces that are marked <ph id="ph1">`[ComImport]`</ph>.</source>
          <target state="translated">O atributo ManagedToNativeComInteropStubAttribute tem as seguintes características:-o atributo pode ser utilizado apenas em métodos de interfaces que estão marcados <ph id="ph1">`[ComImport]`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the attribute is applied to non-interface types, it is ignored by the runtime.</source>
          <target state="translated">Se o atributo é aplicado a tipos de interface não, é ignorada pelo runtime.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The attribute can be used only once on the same method in an interface.</source>
          <target state="translated">-O atributo pode ser utilizado apenas uma vez no mesmo método numa interface.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is used more than once, the compiler generates a duplicated attribute error.</source>
          <target state="translated">Se for utilizada mais do que uma vez, o compilador gera um erro de atributo duplicado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The attribute is not inheritable from a base interface.</source>
          <target state="translated">-O atributo não é herdável a partir de uma interface de base.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived interfaces must explicitly assign the attribute.</source>
          <target state="translated">Interfaces derivadas explicitamente tem de atribuir o atributo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The assembly that contains the attributed method must also contain the customized stub.</source>
          <target state="translated">-A assemblagem que contém o método attributed também tem de conter o stub personalizado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloaded stub methods are valid.</source>
          <target state="translated">Métodos de stub sobrecarregado são válidos.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you specify only the type and the name of the stub method, the runtime will discover the corresponding stub.</source>
          <target state="translated">Embora especificar apenas o tipo e o nome do método stub, o tempo de execução irá detetar o stub correspondente.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does this by examining all the arguments on the interface method, and then performing full signature matching by using an explicit <ph id="ph1">`this`</ph> pointer.</source>
          <target state="translated">Fazê-lo ao examinar todos os argumentos no método de interface e, em seguida, efetuar assinatura completa correspondente utilizando explícita <ph id="ph1">`this`</ph> ponteiro.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also possible for multiple methods in an interface to share the same stub method; however, you should be careful when you use shared stubs.</source>
          <target state="translated">Também é possível que vários métodos de uma interface para partilhar o mesmo método stub; No entanto, deve ter cuidado quando utilizar os stubs partilhados.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Stub methods must be static.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Métodos de stub têm de ser estáticos.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You could inform the runtime to use a customized interop stub at build time instead of run time with the following C# code:      <ph id="ph1">```   [ComImport]   interface IMyInterface   {       [ManagedToNativeComInteropStubAttribute(typeof(TestStubClass),                 "ForwardTestStub")]       void GetString (string arg);   }   ```</ph>       You could then use the following code to declare the corresponding stub method:      <ph id="ph2">```   class TestStubClass   {       internal static void ForwardTestStub(IMyInterface thisObject,                string arg) {…}   }   ```</ph></source>
          <target state="translated">Pode informar o tempo de execução para utilizar um stub interoperabilidade personalizado no momento da compilação em vez de tempo de execução com o seguinte código c#: <ph id="ph1">```   [ComImport]   interface IMyInterface   {       [ManagedToNativeComInteropStubAttribute(typeof(TestStubClass),                 "ForwardTestStub")]       void GetString (string arg);   }   ```</ph> pode, em seguida, utilizar o seguinte código para declarar o método stub correspondente:<ph id="ph2">```   class TestStubClass   {       internal static void ForwardTestStub(IMyInterface thisObject,                string arg) {…}   }   ```</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified class type and method name.</source>
          <target state="translated">Inicializa uma nova instância do <bpt id="p1">&lt;xref href="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe com o nome de tipo de método de classe especificada.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The class that contains the required stub method.</source>
          <target state="translated">A classe que contém o método stub necessária.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The name of the stub method.</source>
          <target state="translated">O nome do método stub.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;methodName&lt;/code&gt;</ph> cannot be found.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;methodName&lt;/code&gt;</ph>Não é possível encontrar.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-or-       The method is not static or non-generic.</source>
          <target state="translated">- ou - o método não estático ou não genérico.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-or-       The method's parameter list does not match the expected parameter list for the stub.</source>
          <target state="translated">- ou - lista de parâmetros do método não corresponde à lista de parâmetros esperado para o stub.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The interface that contains the managed interop method has no access to the stub method, because the stub method has private or protected accessibility, or because of a security issue.</source>
          <target state="translated">A interface que contém o método de interoperabilidade gerido não tem acesso ao método stub, porque o método stub tem acessibilidade privada ou protegida ou devido a um problema de segurança.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the class that contains the required stub method.</source>
          <target state="translated">Obtém a classe que contém o método stub necessária.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The class that contains the customized interop stub.</source>
          <target state="translated">A classe que contém o stub interoperabilidade personalizado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the name of the stub method.</source>
          <target state="translated">Obtém o nome do método stub.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The name of a customized interop stub.</source>
          <target state="translated">O nome de um stub interoperabilidade personalizado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>