<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29571fce44a7f31079da53c9e50cb88523e13019</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.CodeDom.MemberAttributes.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8e68f9f0c03009dfcc4890595c6ea6aabf0b7b3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3e3f0fee5ee5011ae219e8c4339002abcf689e0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines member attribute identifiers for class members.</source>
          <target state="translated">Define os identificadores de atributo de membro para membros de classe.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The identifiers defined in the MemberAttributes enumeration can be used to indicate the scope and access attributes of a class member.</source>
          <target state="translated">Os identificadores definidos na enumeração MemberAttributes podem ser utilizados para indicar os atributos de acesso e o âmbito de um membro de classe.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  There is no <ph id="ph2">`Virtual`</ph> member attribute.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Não existe nenhum <ph id="ph2">`Virtual`</ph> atributo de membro.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A member is declared virtual by setting its member access to Public (<ph id="ph1">`property1.Attributes = MemberAttributes.Public`</ph>) without specifying it as Final.</source>
          <target state="translated">Um membro está declarado virtual definindo o acesso de membro público (<ph id="ph1">`property1.Attributes = MemberAttributes.Public`</ph>) sem especificação-lo como Final.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absence of the Final flag makes a member <ph id="ph1">`virtual`</ph> in C# (<ph id="ph2">`public virtual`</ph>), <ph id="ph3">`overrideable`</ph> in Visual Basic (<ph id="ph4">`Public Overrideable`</ph>).</source>
          <target state="translated">A ausência do sinalizador Final faz com que um membro <ph id="ph1">`virtual`</ph> em c# (<ph id="ph2">`public virtual`</ph>), <ph id="ph3">`overrideable`</ph> no Visual Basic (<ph id="ph4">`Public Overrideable`</ph>).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid declaring the member as <ph id="ph1">`virtual`</ph> or <ph id="ph2">`overrideable`</ph>, set both the Public and Final flags in the &lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt; property.</source>
          <target state="translated">Para evitar declarar o membro como <ph id="ph1">`virtual`</ph> ou <ph id="ph2">`overrideable`</ph>, definir ambos os público e Final sinalizadores no &lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;propriedade.&lt;/xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the &lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt; property for more information on setting member attributes.</source>
          <target state="translated">Consulte o &lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;propriedade para obter mais informações sobre a configuração de atributos de membro.&lt;/xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The pattern for setting the access flags (flags containing the terms <ph id="ph2">`Public`</ph>, <ph id="ph3">`Private`</ph>, <ph id="ph4">`Assembly`</ph>, or <ph id="ph5">`Family`</ph>) is to mask out all access flags using the AccessMask mask and then set the desired access flag.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; O padrão para definir os sinalizadores de acesso (que contém os termos de sinalizadores <ph id="ph2">`Public`</ph>, <ph id="ph3">`Private`</ph>, <ph id="ph4">`Assembly`</ph>, ou <ph id="ph5">`Family`</ph>) é mascarar enviados todos os sinalizadores de acesso utilizando a máscara de AccessMask e, em seguida, defina o sinalizador de acesso pretendida.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the code statement to identify a constructor (named <ph id="ph1">`constructor1`</ph>) as public is <ph id="ph2">`constructor1.Attributes = (constructor1.Attributes &amp; ~MemberAttributes.AccessMask) | MemberAttributes.Public;`</ph>.</source>
          <target state="translated">Por exemplo, a instrução de código para identificar um construtor (com o nome <ph id="ph1">`constructor1`</ph>) como público é <ph id="ph2">`constructor1.Attributes = (constructor1.Attributes &amp; ~MemberAttributes.AccessMask) | MemberAttributes.Public;`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the &lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt; property directly to an access flag (for example, <ph id="ph1">`constructor1.Attributes = MemberAttributes.Public;`</ph>) erases all other flags that might be set.</source>
          <target state="translated">Definir o &lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;propriedade diretamente para um sinalizador de acesso (por exemplo, <ph id="ph1">`constructor1.Attributes = MemberAttributes.Public;`</ph>) elimina todos os outros sinalizadores que podem ser definidos.&lt;/xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This pattern should also be used for setting the scope flags (Abstract, Final, Static, Override or Const) using the ScopeMask mask.</source>
          <target state="translated">Este padrão também deve ser utilizado para definir os sinalizadores de âmbito (abstracto, Final, estática, substituição ou Const) com a máscara de ScopeMask.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An abstract member.</source>
          <target state="translated">Um membro abstracto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An access mask.</source>
          <target state="translated">Uma máscara de acesso.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A member that is accessible to any class within the same assembly.</source>
          <target state="translated">Um membro que esteja acessível para qualquer classe dentro da mesma assemblagem.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A constant member.</source>
          <target state="translated">Um membro constante.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A member that is accessible within the family of its class and derived classes.</source>
          <target state="translated">Um membro que é acessível na família da respetiva classe e classes derivadas.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A member that is accessible within its class, and derived classes in the same assembly.</source>
          <target state="translated">Um membro que está acessível no respetivo classe e classes derivadas na mesma assemblagem.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A member that is accessible within its class, its derived classes in any assembly, and any class in the same assembly.</source>
          <target state="translated">Um membro que é acessível na respectiva classe, respetivas classes derivadas em qualquer assemblagem e qualquer classe na mesma assemblagem.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A member that cannot be overridden in a derived class.</source>
          <target state="translated">Um membro que não pode ser substituído numa classe derivada.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A new member.</source>
          <target state="translated">Um novo membro.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An overloaded member.</source>
          <target state="translated">Um membro sobrecarregado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Some languages, such as Visual Basic, require overloaded members to be explicitly indicated.</source>
          <target state="translated">Nalguns idiomas, por exemplo, o Visual Basic requerem sobrecarregados membros sejam explicitamente indicadas.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A member that overrides a base class member.</source>
          <target state="translated">Um membro que substitui um membro de classe base.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A private member.</source>
          <target state="translated">Um membro privado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A public member.</source>
          <target state="translated">Um membro público.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A scope mask.</source>
          <target state="translated">Uma máscara de âmbito.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A static member.</source>
          <target state="translated">Um membro estático.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In Visual Basic, this is equivalent to the <bpt id="p1">&lt;xref uid="langword_csharp_Shared" name="Shared" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> keyword.</source>
          <target state="translated">No Visual Basic, isto é equivalente à <bpt id="p1">&lt;xref uid="langword_csharp_Shared" name="Shared" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> palavra-chave.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A VTable mask.</source>
          <target state="translated">Uma máscara de VTable.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">A adicionar.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>