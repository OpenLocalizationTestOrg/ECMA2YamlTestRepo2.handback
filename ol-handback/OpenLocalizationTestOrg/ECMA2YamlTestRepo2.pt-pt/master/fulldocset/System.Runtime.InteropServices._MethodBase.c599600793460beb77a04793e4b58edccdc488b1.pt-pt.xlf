<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49c24cc8813e54398b170738e7d9959bcd7e708f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices._MethodBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">def31d31458a128dea13508e8225cf120d4847c3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">caee0ccdab901ed10e6af8b9eb54a7497276df09</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes the public members of the <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.MethodBase?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> class to unmanaged code.</source>
          <target state="translated">Expõe os membros do públicos o <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.MethodBase?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> classe para o código não gerido.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta interface é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface preserves the vtable order of the &lt;xref:System.Reflection.MethodBase?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">Esta interface preserva a ordem vtable o &lt;xref:System.Reflection.MethodBase?displayProperty=fullName&gt;classe membros que podem ser acedidos por objetos de COM não geridos.&lt;/xref:System.Reflection.MethodBase?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Attributes*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.Attributes*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.Attributes*&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.Attributes%2A&gt; property gets the attributes associated with this method.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.Attributes%2A&gt;propriedade obtém os atributos associados a este método.&lt;/xref:System.Reflection.MethodBase.Attributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>One of the &lt;xref:System.Reflection.MethodAttributes&gt; values.</source>
          <target state="translated">Um do &lt;xref:System.Reflection.MethodAttributes&gt;valores.&lt;/xref:System.Reflection.MethodAttributes&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.CallingConvention*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.CallingConvention*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.CallingConvention*&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt; property gets a value indicating the calling conventions for this method.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt;propriedade obtém um valor que indica as convenções de chamadas este método.&lt;/xref:System.Reflection.MethodBase.CallingConvention%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>One of the &lt;xref:System.Reflection.CallingConventions&gt; values.</source>
          <target state="translated">Um do &lt;xref:System.Reflection.CallingConventions&gt;valores.&lt;/xref:System.Reflection.CallingConventions&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt;propriedade.&lt;/xref:System.Reflection.MemberInfo.DeclaringType*&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.</source>
          <target state="translated">O &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;propriedade obtém a classe que declara este membro.&lt;/xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the class that declares this member.</source>
          <target state="translated">O <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto para a classe que declara este membro.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Object.Equals*&gt;método.&lt;/xref:System.Object.Equals*&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">O &lt;xref:System.Object.Equals%2A&gt;método determina se o especificada &lt;xref:System.Object&gt;é igual a atual &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; &lt;/xref:System.Object&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;A comparar com a atual &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se especificado &lt;xref:System.Object&gt;é igual a atual &lt;xref:System.Object&gt;; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;método.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array containing all the custom attributes.</source>
          <target state="translated">O &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;método devolve uma matriz que contém todos os atributos personalizados.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to search this member's inheritance chain to find the attributes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>para procurar a cadeia de herança este membro para localizar os atributos; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.</source>
          <target state="translated">Uma matriz que contém todos os atributos personalizados, ou uma matriz com zero (0) elementos se não existem atributos são definidos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;método.&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.</source>
          <target state="translated">O &lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt;método devolve uma matriz de atributos personalizados identificado por &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; &lt;/xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo para procurar.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Only attributes that are assignable to this type are returned.</source>
          <target state="translated">Apenas os atributos que são pode ser atribuídos a este tipo são devolvidos.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to search this member's inheritance chain to find the attributes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>para procurar a cadeia de herança este membro para localizar os atributos; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">Uma matriz de atributos personalizados aplicadas a este membro, ou uma matriz com zero (0) elementos se não existem atributos foram aplicados.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Object.GetHashCode*&gt;método.&lt;/xref:System.Object.GetHashCode*&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.</source>
          <target state="translated">O &lt;xref:System.Object.GetHashCode%2A&gt;método funciona como uma função de hash para um determinado tipo.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;é adequado para utilização em estruturas de dados e algoritmos, tais como uma tabela hash de hash.&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The hash code for the current instance.</source>
          <target state="translated">O código hash para a instância atual.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">Mapeia um conjunto de nomes para um conjunto de identificadores de emissão correspondente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, consulte a biblioteca da MSDN.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">Reservado para utilização futura.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">Tem de ser IID_NULL.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An array of names to be mapped.</source>
          <target state="translated">Uma matriz de nomes deve ser mapeado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The count of the names to be mapped.</source>
          <target state="translated">A contagem dos nomes a ser mapeado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">O contexto de região na qual a interpretar os nomes.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An array allocated by the caller that receives the identifiers corresponding to the names.</source>
          <target state="translated">Uma matriz atribuída pelo chamador que recebe os identificadores correspondentes aos nomes.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt; method.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt;método.&lt;/xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt; member returns the &lt;xref:System.Reflection.MethodImplAttributes&gt; flags.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt;Membro devolve o &lt;xref:System.Reflection.MethodImplAttributes&gt;sinalizadores.&lt;/xref:System.Reflection.MethodImplAttributes&gt; &lt;/xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>One of the &lt;xref:System.Reflection.MethodImplAttributes&gt; values.</source>
          <target state="translated">Um do &lt;xref:System.Reflection.MethodImplAttributes&gt;valores.&lt;/xref:System.Reflection.MethodImplAttributes&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.GetParameters*&gt; method.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.GetParameters*&gt;método.&lt;/xref:System.Reflection.MethodBase.GetParameters*&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt; method gets the parameters of the specified method or constructor.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt;método obtém os parâmetros do construtor ou método especificado.&lt;/xref:System.Reflection.MethodBase.GetParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Reflection.ParameterInfo&gt; containing information that matches the signature of the method (or constructor) reflected by this instance.</source>
          <target state="translated">Uma matriz do tipo &lt;xref:System.Reflection.ParameterInfo&gt;que contém informações que corresponda a assinatura do método (ou construtor) refletidas por esta instância.&lt;/xref:System.Reflection.ParameterInfo&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Type.GetType*&gt; method.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Type.GetType*&gt;método.&lt;/xref:System.Type.GetType*&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Object.GetType%2A&gt; method gets the type of the current instance.</source>
          <target state="translated">O &lt;xref:System.Object.GetType%2A&gt;método obtém o tipo de instância atual.&lt;/xref:System.Object.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object.</source>
          <target state="translated">A &lt;xref:System.Type&gt;objeto.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Retrieves the type information for an object, which can be used to get the type information for an interface.</source>
          <target state="translated">Obtém as informações de tipo para um objeto, o que pode ser utilizado para obter as informações de tipo para uma interface.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, consulte a biblioteca da MSDN.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The type information to return.</source>
          <target state="translated">As informações de tipo de retorno.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The locale identifier for the type information.</source>
          <target state="translated">O identificador de região para obter as informações de tipo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A pointer to the requested type information object.</source>
          <target state="translated">Um ponteiro para o objeto de informações do tipo pedido.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">Obtém o número de interfaces de informações de tipo que um objeto fornece (0 ou 1).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, consulte a biblioteca da MSDN.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">Quando este método devolve, contém um ponteiro para uma localização que recebe o número de interfaces de informações de tipo fornecido pelo objeto.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Este parâmetro é transmitido não inicializado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Invoke*&gt; method.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.Invoke*&gt;método.&lt;/xref:System.Reflection.MethodBase.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt; method invokes the method or constructor represented by this object, using the specified parameters.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;método invoca o método ou construtor representado por este objeto, utilizando os parâmetros especificados.&lt;/xref:System.Reflection.MethodBase.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The instance that created this method.</source>
          <target state="translated">A instância que criou este método.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An argument list for the invoked method or constructor.</source>
          <target state="translated">Uma lista de argumentos para o construtor ou método invocado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.</source>
          <target state="translated">Esta é uma matriz de objetos com o mesmo número, ordem e tipo como os parâmetros do método ou construtor para ser invocado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If there are no parameters, <ph id="ph1">`parameters`</ph> should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Se existirem sem parâmetros, <ph id="ph1">`parameters`</ph> deve ser <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the method or constructor represented by this instance takes a <bpt id="p1">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter (<bpt id="p2">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function.</source>
          <target state="translated">Se o método ou construtor representado por esta instância tem um <bpt id="p1">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> parâmetro (<bpt id="p2">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> no Visual Basic), não existe nenhum atributo especial é necessário para esse parâmetro invocar o método ou construtor utilizando esta função.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">Qualquer objeto nesta matriz que não está explicitamente inicializado com um valor irá conter o valor predefinido para esse tipo de objeto.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For reference type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Para elementos de tipo de referência, este valor é <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For value type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">Para elementos de tipo de valor, este valor for 0, 0.0, ou <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, consoante o tipo de elemento específico.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">Uma instância da classe associada este construtor.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Invoke*&gt; method.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.Invoke*&gt;método.&lt;/xref:System.Reflection.MethodBase.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt; method invokes the constructor reflected by this &lt;xref:System.Reflection.ConstructorInfo&gt; object with the specified arguments, under the constraints of the specified &lt;xref:System.Reflection.Binder&gt; object.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;invoca o método do construtor refletido por este &lt;xref:System.Reflection.ConstructorInfo&gt;objeto com os argumentos especificados, com as restrições de especificado &lt;xref:System.Reflection.Binder&gt;objeto.&lt;/xref:System.Reflection.Binder&gt; &lt;/xref:System.Reflection.ConstructorInfo&gt; &lt;/xref:System.Reflection.MethodBase.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The instance that created this method.</source>
          <target state="translated">A instância que criou este método.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the type of binding.</source>
          <target state="translated">Um do <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valores que especifica o tipo de enlace.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> que define um conjunto de propriedades e permite o enlace adesão dos tipos de argumento e invocação dos membros utilizando reflexão.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An array of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to match the number, order, and type of the parameters for this constructor, under the constraints of <ph id="ph1">`binder`</ph>.</source>
          <target state="translated">Uma matriz do tipo <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> utilizado para fazer corresponder o número, a ordem e o tipo dos parâmetros para este construtor, sob as restrições de <ph id="ph1">`binder`</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If this constructor does not require parameters, pass an array with zero elements, as in <ph id="ph1">`Object[] parameters = new Object[0]`</ph>.</source>
          <target state="translated">Se este construtor não necessitar de parâmetros, passa uma matriz com zero elementos, como <ph id="ph1">`Object[] parameters = new Object[0]`</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">Qualquer objeto nesta matriz que não está explicitamente inicializado com um valor irá conter o valor predefinido para esse tipo de objeto.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For reference type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Para elementos de tipo de referência, este valor é <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For value type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">Para elementos de tipo de valor, este valor for 0, 0.0, ou <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, consoante o tipo de elemento específico.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; object used to govern the coercion of types.</source>
          <target state="translated">A &lt;xref:System.Globalization.CultureInfo&gt;utilizado para regular a adesão dos tipos de objeto.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">Se este for <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, a &lt;xref:System.Globalization.CultureInfo&gt;para o thread actual é utilizado.&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">Uma instância da classe associada este construtor.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">Fornece acesso às propriedades e métodos expostos por um objeto.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">`IDispatch::Invoke`</ph>, consulte a biblioteca da MSDN.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>An identifier for the member.</source>
          <target state="translated">Um identificador para o membro.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">Reservado para utilização futura.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">Tem de ser IID_NULL.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">O contexto de região na qual interpretar argumentos.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Flags describing the context of the call.</source>
          <target state="translated">Sinalizadores que descrevem o contexto da chamada.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">Um apontador para uma estrutura que contém uma matriz de argumentos, uma matriz de argumento DISPID para os argumentos com nome e contagens para o número de elementos nas matrizes.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A pointer to the location where the result will be stored.</source>
          <target state="translated">Um apontador para a localização onde o resultado será armazenado.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A pointer to a structure that contains exception information.</source>
          <target state="translated">Um apontador para uma estrutura que contém informações de exceção.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">O índice do primeiro argumento tem um erro.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsAbstract*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsAbstract*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsAbstract*&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt; property gets a value indicating whether the method is abstract.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt;propriedade obtém um valor que indica se o método é abstracto.&lt;/xref:System.Reflection.MethodBase.IsAbstract%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method is abstract; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o método é abstracto; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsAssembly*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsAssembly*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt; property gets a value indicating whether this method can be called by other classes in the same assembly</source>
          <target state="translated">A &lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt;propriedade obtém um valor que indica se este método pode ser chamado por outras classes na mesma assemblagem&lt;/xref:System.Reflection.MethodBase.IsAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method can be called by other classes in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este método pode ser chamado por outras classes na mesma assemblagem; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsConstructor*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsConstructor*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsConstructor*&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt; property gets a value indicating whether the method is a constructor.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt;propriedade obtém um valor que indica se o método é um construtor.&lt;/xref:System.Reflection.MethodBase.IsConstructor%2A&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is a constructor; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este método é um construtor; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; method.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt;método.&lt;/xref:System.Reflection.MemberInfo.IsDefined*&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; member indicates whether one or more instances of the <ph id="ph1">`attributeType`</ph> parameter are applied to this member.</source>
          <target state="translated">O &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt;Membro indica se uma ou mais instâncias do <ph id="ph1">`attributeType`</ph> parâmetro são aplicadas a este membro.&lt;/xref:System.Reflection.MemberInfo.IsDefined%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to which the custom attributes are applied.</source>
          <target state="translated">O <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto ao qual os atributos personalizados são aplicados.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to search this member's inheritance chain to find the attributes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>para procurar a cadeia de herança este membro para localizar os atributos; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if one or more instance of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">attributeType</ph><ept id="p2">&lt;/code&gt;</ept> parameter is applied to this member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se um ou mais instâncias do <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">attributeType</ph> <ept id="p2">&lt;/code&gt;</ept> parâmetro é aplicado a este membro; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamily*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsFamily*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsFamily*&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt; property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt;propriedade obtém um valor que indica se o acesso a este método é restringido aos membros de classe e membros das suas classes derivadas.&lt;/xref:System.Reflection.MethodBase.IsFamily%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o acesso para a classe é restringido aos membros da própria classe e para os membros das suas classes derivadas; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt; property gets a value indicating whether this method can be called by members of the class itself and by derived classes if they are in the same assembly</source>
          <target state="translated">A &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt;propriedade obtém um valor que indica se este método pode ser chamado por membros da própria classe e classes derivadas se estiverem na mesma assemblagem&lt;/xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o acesso a este método é restringido aos membros da própria classe e para os membros de classes derivadas que estão na mesma assemblagem; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt; property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt;propriedade obtém um valor que indica se este método pode ser chamado por classes derivadas, estejam onde estiverem e, por todas as classes na mesma assemblagem.&lt;/xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o acesso a este método é restringido aos membros da própria classe, os membros derivam classes onde quer que são e membros de outras classes na mesma assemblagem; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFinal*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsFinal*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsFinal*&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt; property gets a value indicating whether this method is <ph id="ph1">`final`</ph>.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt;propriedade obtém um valor que indica se este método é <ph id="ph1">`final`</ph>.&lt;/xref:System.Reflection.MethodBase.IsFinal%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_final" name="final" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este método é <bpt id="p2">&lt;xref uid="langword_csharp_final" name="final" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsHideBySig*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsHideBySig*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsHideBySig*&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt; property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class.</source>
          <target state="translated">A &lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt;propriedade obtém um valor que indica se apenas um membro com o mesmo nome com exatamente a mesma assinatura está oculto na classe derivada.&lt;/xref:System.Reflection.MethodBase.IsHideBySig%2A&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the member is hidden by signature; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o membro está oculto pela assinatura; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsPrivate*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsPrivate*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsPrivate*&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt; property gets a value indicating whether this member is private.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt;propriedade obtém um valor que indica se este membro é privado.&lt;/xref:System.Reflection.MethodBase.IsPrivate%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to other members of the class itself; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se o acesso a este método é restringido aos outros membros da própria; classe caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsPublic*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsPublic*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsPublic*&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt; property gets a value indicating whether this method is public.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt;propriedade obtém um valor que indica se este método é público.&lt;/xref:System.Reflection.MethodBase.IsPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is public; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este método é público; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsSpecialName*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsSpecialName*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsSpecialName*&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt; property gets a value indicating whether this method has a special name.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt;propriedade obtém um valor que indica se este método tem um nome especial.&lt;/xref:System.Reflection.MethodBase.IsSpecialName%2A&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method has a special name; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este método tem um nome especial; caso contrário, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsStatic*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsStatic*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsStatic*&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt; property gets a value indicating whether the method is <ph id="ph1">`static`</ph>.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt;propriedade obtém um valor que indica se o método é <ph id="ph1">`static`</ph>.&lt;/xref:System.Reflection.MethodBase.IsStatic%2A&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_static" name="static" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este método é <bpt id="p2">&lt;xref uid="langword_csharp_static" name="static" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsVirtual*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.IsVirtual*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.IsVirtual*&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt; property gets a value indicating whether the method is <ph id="ph1">`virtual`</ph>.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt;propriedade obtém um valor que indica se o método é <ph id="ph1">`virtual`</ph>.&lt;/xref:System.Reflection.MethodBase.IsVirtual%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_virtual" name="virtual" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se este método é <bpt id="p2">&lt;xref uid="langword_csharp_virtual" name="virtual" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; caso contrário, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.MemberType*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MemberInfo.MemberType*&gt;propriedade.&lt;/xref:System.Reflection.MemberInfo.MemberType*&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating the type of the member — method, constructor, event, and so on.</source>
          <target state="translated">O &lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;propriedade obtém um &lt;xref:System.Reflection.MemberTypes&gt;valor que indica o tipo do membro — método, construtor, eventos e assim sucessivamente.&lt;/xref:System.Reflection.MemberTypes&gt; &lt;/xref:System.Reflection.MemberInfo.MemberType%2A&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values indicating the type of member.</source>
          <target state="translated">Um do <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> valores que indica o tipo de membro.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.MethodHandle*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MethodBase.MethodHandle*&gt;propriedade.&lt;/xref:System.Reflection.MethodBase.MethodHandle*&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt; property gets a handle to the internal metadata representation of a method.</source>
          <target state="translated">O &lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt;propriedade obtém um identificador a representação de metadados interno de um método.&lt;/xref:System.Reflection.MethodBase.MethodHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.RuntimeMethodHandle&gt; object.</source>
          <target state="translated">A &lt;xref:System.RuntimeMethodHandle&gt;objeto.&lt;/xref:System.RuntimeMethodHandle&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MemberInfo.Name*&gt;propriedade.&lt;/xref:System.Reflection.MemberInfo.Name*&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.</source>
          <target state="translated">O &lt;xref:System.Reflection.MemberInfo.Name%2A&gt;propriedade obtém o nome do membro atual.&lt;/xref:System.Reflection.MemberInfo.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; object containing the name of this member.</source>
          <target state="translated">A &lt;xref:System.String&gt;objeto que contém o nome deste membro.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt;propriedade.&lt;/xref:System.Reflection.MemberInfo.ReflectedType*&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Esta propriedade é para acesso por classes geridas a partir do código não gerido e não deve ser chamada a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this <ph id="ph1">`MemberInfo`</ph> object.</source>
          <target state="translated">O &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;propriedade obtém o objeto de classe que foi utilizado para obter esta <ph id="ph1">`MemberInfo`</ph> objeto.&lt;/xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that was used to obtain this <bpt id="p2">&lt;xref uid="langword_csharp_MemberInfo" name="MemberInfo" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">O <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objeto que foi utilizado para obter esta <bpt id="p2">&lt;xref uid="langword_csharp_MemberInfo" name="MemberInfo" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> objeto.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.</source>
          <target state="translated">Fornece objetos COM acesso de independente da versão para o &lt;xref:System.Object.ToString*&gt;método.&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A string that represents the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">Uma cadeia que representa o atual &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>