<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">090ebe53f727be99a100b9af773bb82108c2964a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.RequestBringIntoViewEventHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">146702ede9be5f78d82f7591bf67735bc53b4f08</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc516054c8f11ef86c766b5d8deb2ae53815760f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the method that will handle the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.RequestBringIntoView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">処理するメソッドを表す、 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.RequestBringIntoView"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ルーティングされたイベント。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Handling this event is typically only done within elements that support a scrollable region, or otherwise deliberately set their rendering size smaller than the combined desired size of their child element content, and is only done by deliberately handling the event once it has routed upwards in the element tree and has reached the first parent that offers scrolling region support.</source>
          <target state="translated">このイベントを処理して、スクロール可能な領域をサポートしたり、それ以外の場合意図的にサイズの設定、表示、子要素のコンテンツの合計の目的のサイズより小さい要素内でのみ実行は、通常、意図的に一度が上方向要素ツリーでルーティングし、スクロール領域のサポートを提供する最初の親に達してイベントを処理することによってのみ実行されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An existing implementation that handles scrolling regions in a manner that is typically desirable for user controls is &lt;xref:System.Windows.Controls.ScrollViewer&gt;.</source>
          <target state="translated">通常、ユーザー コントロールの適切な方法でスクロール領域を処理する既存の実装は&lt;xref:System.Windows.Controls.ScrollViewer&gt;。&lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you derive from &lt;xref:System.Windows.Controls.ScrollViewer&gt;, you can register a class handler for &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt; and supplement the base class handling of the event.</source>
          <target state="translated">派生した場合&lt;xref:System.Windows.Controls.ScrollViewer&gt;、クラス ハンドラーを登録できます&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt;イベントの基本クラス処理を補足するものとします&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt;&lt;/xref:System.Windows.Controls.ScrollViewer&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You should also consider using or class-handling the class-defined &lt;xref:System.Windows.Controls.ScrollViewer.ScrollChanged&gt; event instead of &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt;.</source>
          <target state="translated">または、クラス定義の&lt;xref:System.Windows.Controls.ScrollViewer.ScrollChanged&gt;&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt;。&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt;ではなくイベント&lt;/xref:System.Windows.Controls.ScrollViewer.ScrollChanged&gt;のクラス処理を使用しても考慮する必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Alternatively, if you create an entirely custom class that does not derive from &lt;xref:System.Windows.Controls.ScrollViewer&gt;, you can still add class handling by calling &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName&gt; in your class instantiation.</source>
          <target state="translated">代わりに、完全なカスタム クラスから派生していないことを作成するかどうかは&lt;xref:System.Windows.Controls.ScrollViewer&gt;、クラス処理を呼び出すことによって追加できます&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName&gt;クラスのインスタンス化でします&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Controls.ScrollViewer&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For details on class handling, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">クラスの処理の詳細については、「 <bpt id="p1">[</bpt>Handled、クラス処理とルーティング イベントをマーク<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Content elements can cause the event to be raised by their content hosts (through calling &lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A&gt; and raising &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt; from the content host).</source>
          <target state="translated">コンテンツの要素には、イベントがそのコンテンツ ホストにより発生する可能性があります (呼び出しを介して&lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A&gt;と発生&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt;、コンテンツ ホストから).&lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt; &lt;/xref:System.Windows.FrameworkContentElement.BringIntoView%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Similarly, you can request logical tree elements to be brought into view with the helper method &lt;xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">同様に、要求内に収めるビュー &lt;xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName&gt;。&lt;/xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName&gt;ヘルパー メソッドを使用する論理ツリーの要素</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Controls.ListBox&gt; implements a related but different method &lt;xref:System.Windows.Controls.ListBox.ScrollIntoView%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ListBox&gt; &lt;xref:System.Windows.Controls.ListBox.ScrollIntoView%2A&gt;。&lt;/xref:System.Windows.Controls.ListBox.ScrollIntoView%2A&gt;関連ですが異なるメソッドを実装します。&lt;/xref:System.Windows.Controls.ListBox&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>