<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94c728563c3b791418936bc2c17f1fbb0a19e77e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Compilation.BuildProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35f049f7a11275f63b9113ffe7d0b8f1410f4eff</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66c7df0e60cd5d48bb48d36b0a44ce6013276c7e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a set of properties and methods for generating source code within the ASP.NET build environment.</source>
          <target state="translated">ASP.NET ビルド環境でソース コードの生成のプロパティとメソッドのセットを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is abstract.</source>
          <target state="translated">このクラスは抽象クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment uses BuildProvider objects to generate source code for different file types within an application.</source>
          <target state="translated">ASP.NET ビルド環境では、BuildProvider オブジェクトを使用して、アプリケーション内で別のファイルの種類のソース コードを生成します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Classes derived from BuildProvider predominantly provide source code for files, Web pages, resources, and other custom items.</source>
          <target state="translated">主に BuildProvider から派生したクラスは、ファイル、Web ページ、リソース、およびその他のカスタム項目のソース コードを提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Typically, you do not create an instance of the BuildProvider class directly.</source>
          <target state="translated">通常、BuildProvider クラスのインスタンスを直接作成する実行されません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Instead, you implement a class that derives from BuildProvider, and configure the BuildProvider implementation for use within the ASP.NET build environment.</source>
          <target state="translated">代わりに、BuildProvider から派生するクラスを実装し、ASP.NET ビルド環境で使用するための BuildProvider 実装を構成します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Instances of the BuildProvider class are used with &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; objects to build one or more files into a compiled assembly.</source>
          <target state="translated">BuildProvider クラスのインスタンスの併用&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;オブジェクトに&amp;1; つまたは複数のファイルをコンパイルされたアセンブリに組み込む&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A BuildProvider instance generates source code in the appropriate language for individual files, and the &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; object combines the source contributed by each BuildProvider instance into a single assembly.</source>
          <target state="translated">BuildProvider インスタンスは、個々 のファイルに対する適切な言語でソース コードを生成し、&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;オブジェクトが&amp;1; つのアセンブリには、各 BuildProvider インスタンスから提供されたソースを結合します&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment uses instances of the BuildProvider class to build files within an application.</source>
          <target state="translated">ASP.NET ビルド環境では、アプリケーション内でファイルをビルドするのに BuildProvider クラスのインスタンスを使用します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt; property of the BuildProvider class indicates the path of the file to be built.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt;BuildProvider クラスのプロパティを構築できるファイルのパスを示します&lt;/xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The file extension of each file within an application is mapped to a corresponding build provider.</source>
          <target state="translated">アプリケーション内の各ファイルのファイル拡張子は、対応するビルド プロバイダーにマップされます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment initializes a BuildProvider instance for each file based on the file extension, and uses the BuildProvider methods to generate source code for the file.</source>
          <target state="translated">ASP.NET ビルド環境では、ファイル拡張子に基づいてファイルごとに BuildProvider インスタンスを初期化し、BuildProvider メソッドを使用して、ファイルのソース コードを生成します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment passes an &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; object based on the preferred compiler language and the context of the file to the BuildProvider methods when building an assembly from one or more files, so that the BuildProvider instance can contribute source code for its file to the overall assembly.</source>
          <target state="translated">ASP.NET ビルド環境、&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;オブジェクト優先コンパイラ言語と、コンテキストに基づいて、BuildProvider メソッドにファイルの&amp;1; つまたは複数のファイルからアセンブリを作成するときにできるように、BuildProvider インスタンスは、全体的なアセンブリには、そのファイルのソース コードを行うことができます&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To define custom build actions for a file type within an ASP.NET application, you must derive a class from BuildProvider, implement members within the derived class for building the file type, and configure the build provider for the corresponding file extension within the application configuration file.</source>
          <target state="translated">カスタムのビルドを定義するには、ファイルの操作は、ASP.NET アプリケーション内で入力 BuildProvider からクラスを派生、ファイルの種類を作成するため、派生クラス内のメンバーを実装および構成する必要、アプリケーション構成ファイル内の対応するファイル拡張子のビルド プロバイダー。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The  specifies the file extension for supported files, and whether the build provider supports code files, Web files, resource files or all files.</source>
          <target state="translated">サポートされているファイルのファイル拡張子を指定し、ビルド プロバイダーがコード ファイル、Web ファイル、リソース ファイル、またはすべてのファイルをサポートするかどうか。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`type`</ph> attribute to specify the fully qualified type name of the build provider implementation.</source>
          <target state="translated">使用して、<ph id="ph1">`type`</ph>ビルド プロバイダーの実装の完全修飾型名を指定する属性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Web.Compilation.BuildProviderAppliesToAttribute&gt; class to specify whether the build provider applies to files in the App_Code directory, to files in a Web content directory, to global or local resources, or to all files.</source>
          <target state="translated">使用して、&lt;xref:System.Web.Compilation.BuildProviderAppliesToAttribute&gt;ビルド プロバイダーが App_Code ディレクトリ内のファイル、ディレクトリ内のファイル、Web コンテンツにグローバルまたはローカル リソース、またはすべてのファイルを適用するかどうかを指定するクラス&lt;/xref:System.Web.Compilation.BuildProviderAppliesToAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`extension`</ph> attribute to specify the file extension used to identify files that the BuildProvider class supports.</source>
          <target state="translated">使用して、 <ph id="ph1">`extension`</ph> BuildProvider クラスでサポートされるファイルを識別するためのファイル拡張子を指定する属性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Web.Configuration.BuildProviderCollection&gt; class to examine build providers in a configuration file.</source>
          <target state="translated">使用して、&lt;xref:System.Web.Configuration.BuildProviderCollection&gt;を確認するクラスが、構成ファイル内のプロバイダーをビルドします&lt;/xref:System.Web.Configuration.BuildProviderCollection&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information about configuring a build provider, see <bpt id="p1">[</bpt>buildProviders Element for compilation (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>.</source>
          <target state="translated">ビルド プロバイダーの構成の詳細については、次を参照してください。 <bpt id="p1">[</bpt>buildProviders 要素 (ASP.NET 設定スキーマ) のコンパイル<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To implement a build provider that generates source code for a custom file type, derive a class from BuildProvider, and override the &lt;xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt; method to generate source code for the supported file type.</source>
          <target state="translated">カスタム ファイルの種類のソース コードを生成するビルド プロバイダーを実装する BuildProvider からクラスを派生させ、 &lt;xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt;、サポートされているファイルの種類のソース コードを生成する方法&lt;/xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The generated source is added to the &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; object in the form of a CodeDOM graph, or as content that represents a physical source code file.</source>
          <target state="translated">生成されたソースを追加、 &lt;xref:System.Web.Compilation.AssemblyBuilder&gt;CodeDOM グラフのまたは物理ソース コード ファイルを表すコンテンツとしてフォーム内のオブジェクト&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the build provider requires a specific programming language, override the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; property to return a &lt;xref:System.Web.Compilation.CompilerType&gt; object for the supported programming language.</source>
          <target state="translated">ビルド プロバイダーは、特定のプログラミング言語を必要とする場合は、上書き、&lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;返されるプロパティを&lt;xref:System.Web.Compilation.CompilerType&gt;サポートされているプログラミング言語のオブジェクト&lt;/xref:System.Web.Compilation.CompilerType&gt;&lt;/xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the build provider does not require a specific programming language, do not override the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; property; use the base class implementation, which indicates that the build provider can use any .NET Framework language, such as Visual Basic or C#.</source>
          <target state="translated">ビルド プロバイダーに固有のプログラミング言語が必要としない場合は無効、&lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;プロパティです使用する基本クラスの実装のビルド プロバイダーが Visual Basic や c# など、任意の .NET Framework 言語を使用できることを示します。&lt;/xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To implement a build provider that generates source code for Web content, derive a class from BuildProvider and override the &lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt; method to return the &lt;xref:System.Type&gt; for the class generated by BuildProvider.</source>
          <target state="translated">Web コンテンツのソース コードを生成するビルド プロバイダーを実装するクラスを派生 BuildProvider およびオーバーライド、&lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt;を返すメソッドを&lt;xref:System.Type&gt;BuildProvider によって生成されるクラス&lt;/xref:System.Type&gt;&lt;/xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Override the &lt;xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt; method to generate source code for the type provided by the supported file.</source>
          <target state="translated">上書き、&lt;xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt;サポートされているファイルによって提供された型のソース コードを生成する方法&lt;/xref:System.Web.Compilation.BuildProvider.GenerateCode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Adding a customized BuildProvider class to the Web.config file works in an ASP.NET Web site but does not work in an ASP.NET Web application project.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Web.config ファイルにカスタマイズされた BuildProvider クラスを追加する ASP.NET Web サイトでは動作しますが、ASP.NET Web アプリケーション プロジェクトでは機能しません。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In a Web application project, the code that is generated by the BuildProvider class cannot be included in the application.</source>
          <target state="translated">Web アプリケーション プロジェクトでは、アプリケーションで BuildProvider クラスによって生成されるコードを含めることができません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Web Application Project Precompilation Overview<ept id="p1">](http://msdn.microsoft.com/en-us/b940abbd-178d-4570-b441-52914fa7b887)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>ASP.NET Web アプリケーション プロジェクト プリコンパイル概要<ept id="p1">](http://msdn.microsoft.com/en-us/b940abbd-178d-4570-b441-52914fa7b887)</ept>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Because the &lt;xref:System.Web.Compilation.BuildProvider&gt; class is abstract, you cannot create an instance of &lt;xref:System.Web.Compilation.BuildProvider&gt; directly using the constructor.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.BuildProvider&gt;クラスは抽象クラスのインスタンスを作成することはできません&lt;xref:System.Web.Compilation.BuildProvider&gt;コンス トラクターを使用して直接&lt;/xref:System.Web.Compilation.BuildProvider&gt;&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When deriving from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class, override the constructor to implement custom initialization actions for your build provider implementation.</source>
          <target state="translated">派生している場合、&lt;xref:System.Web.Compilation.BuildProvider&gt;クラス、ビルド プロバイダーの実装にカスタムの初期化のアクションを実装するコンス トラクターをオーバーライドします&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Represents the compiler type used by a build provider to generate source code for a custom file type.</source>
          <target state="translated">ビルド プロバイダーがカスタム ファイルの種類のソース コードを生成するために使用するコンパイラ タイプを表します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Use the CodeCompilerType property to provide the settings for compiling source code for an implementation of &lt;xref:System.Web.Compilation.BuildProvider&gt;.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.BuildProvider&gt;。&lt;/xref:System.Web.Compilation.BuildProvider&gt;を実装するためのソース コードのコンパイルの設定を提供するのに CodeCompilerType プロパティを使用します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The CodeCompilerType property is <ph id="ph1">`null`</ph> if the build provider does not require a specific code language for generating and compiling source code.</source>
          <target state="translated">CodeCompilerType プロパティは<ph id="ph1">`null`</ph>かどうかビルド プロバイダーは必要ありません、特定のコード言語の生成とソース コードをコンパイルします。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To set the value for a &lt;xref:System.Web.Compilation.CompilerType&gt; object within a build provider implementation, use the &lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt; or &lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt; method.</source>
          <target state="translated">値を設定する、&lt;xref:System.Web.Compilation.CompilerType&gt;ビルド プロバイダーの実装を使用して内のオブジェクト、&lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt;または&lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt;メソッド&lt;/xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt;&lt;/xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt;&lt;/xref:System.Web.Compilation.CompilerType&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A&gt; property specifies the &lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt; implementation that is used to generate and compile source code for a build provider.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A&gt;プロパティを指定します、&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;実装を生成し、ビルド プロバイダーのソース コードをコンパイルするために使用します&lt;/xref:System.CodeDom.Compiler.CodeDomProvider&gt;&lt;/xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.CompilerType.CompilerParameters%2A&gt; property defines the settings that are used to compile the source code into an assembly.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.CompilerType.CompilerParameters%2A&gt;プロパティは、ソース コードをアセンブリにコンパイルするために使用される設定を定義します&lt;/xref:System.Web.Compilation.CompilerType.CompilerParameters%2A&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A read-only <bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the code generator, code compiler, and compiler settings used to build source code for the virtual path.</source>
          <target state="translated">読み取り専用<bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コード ジェネレーター、コード コンパイラ、および仮想パスのソース コードを構築するために使用するコンパイラ設定を表すです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The base class returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">基本クラスを返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Generates source code for the virtual path of the build provider, and adds the source code to a specified assembly builder.</source>
          <target state="translated">ビルド プロバイダーの仮想パスのソース コードを生成し、ソース コードを指定したアセンブリ ビルダーに追加します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To implement a build provider that generates source code for a custom file type, derive a class from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class, and override the GenerateCode method to generate source code for the supported file type.</source>
          <target state="translated">カスタム ファイルの種類のソース コードを生成するビルド プロバイダーを実装するのには、派生クラスを&lt;xref:System.Web.Compilation.BuildProvider&gt;クラス、およびサポートされているファイルの種類のソース コードを生成する GenerateCode メソッドをオーバーライドします&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Typically, a build provider's GenerateCode implementation reads the &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt; property, parses the contents, and adds the generated source code to the specified &lt;xref:System.Web.Compilation.AssemblyBuilder&gt; object.</source>
          <target state="translated">通常、ビルド プロバイダーの GenerateCode 実装を読み取り、&lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt;プロパティ、内容を解析しを指定した、生成されたソース コードに追加&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;オブジェクト&lt;/xref:System.Web.Compilation.AssemblyBuilder&gt;&lt;/xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can contribute source code to the assembly in the form of a &lt;xref:System.IO.TextWriter&gt; object or a CodeDOM graph.</source>
          <target state="translated">ソース コードの形式でアセンブリに協力することができます、&lt;xref:System.IO.TextWriter&gt;オブジェクトまたは CodeDOM グラフ&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To add source code to the assembly through a &lt;xref:System.IO.TextWriter&gt; object, use the &lt;xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A&gt; method.</source>
          <target state="translated">ソース コードからアセンブリを追加する、&lt;xref:System.IO.TextWriter&gt;オブジェクトを使用して、&lt;xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A&gt;メソッド&lt;/xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A&gt;&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To add source code in a CodeDOM graph to the assembly, use the &lt;xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A&gt; method.</source>
          <target state="translated">CodeDOM グラフのソース コードをアセンブリに追加するには、使用、&lt;xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A&gt;メソッド&lt;/xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If the build provider generates source code in a specific programming language, you must override the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; property to return a &lt;xref:System.Web.Compilation.CompilerType&gt; object for the supported programming language.</source>
          <target state="translated">オーバーライドする必要がありますビルド プロバイダーは、特定のプログラミング言語でソース コードを生成する場合、&lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;返されるプロパティを&lt;xref:System.Web.Compilation.CompilerType&gt;サポートされているプログラミング言語のオブジェクト&lt;/xref:System.Web.Compilation.CompilerType&gt;&lt;/xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The assembly builder that references the source code generated by the build provider.</source>
          <target state="translated">ビルド プロバイダーによって生成されたソース コードを参照するアセンブリ ビルダー。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Represents the container for the generated CodeDOM graph.</source>
          <target state="translated">生成された CodeDOM グラフのコンテナーを表します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This method can be used through the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; class for syntax highlighting and designer support in Visual Studio.</source>
          <target state="translated">このメソッドを使用できます、&lt;xref:System.Web.Compilation.ClientBuildManager&gt;クラスの構文の強調表示とデザイナーは、Visual Studio でサポートします&lt;/xref:System.Web.Compilation.ClientBuildManager&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a dictionary that contains all associated line numbers and line pragmas of the source code.</source>
          <target state="translated">このメソッドが戻るときに、すべての関連付けられている行番号およびソース コードの行プラグマを格納するディクショナリが含まれています。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">このパラメーターは初期化せずに渡されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The container for the CodeDOM graph that is generated by the <bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">によって生成された CodeDOM グラフのコンテナー、 <bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インスタンス。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Generates a string to be persisted in the compiled assembly.</source>
          <target state="translated">コンパイル済みのアセンブリに保存される文字列を生成します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A&gt; method of a &lt;xref:System.Web.Compilation.BuildManager&gt; object creates an instance of a build provider for an input virtual path, and calls the GetCustomString method on the &lt;xref:System.Web.Compilation.BuildProvider&gt; object.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A&gt;のメソッド、&lt;xref:System.Web.Compilation.BuildManager&gt;オブジェクトが入力の仮想パスのビルド プロバイダーのインスタンスを作成しの GetCustomString メソッドを呼び出し、&lt;xref:System.Web.Compilation.BuildProvider&gt;オブジェクト&lt;/xref:System.Web.Compilation.BuildProvider&gt;&lt;/xref:System.Web.Compilation.BuildManager&gt;&lt;/xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The base &lt;xref:System.Web.Compilation.BuildProvider&gt; class returns <ph id="ph1">`null`</ph> for the GetCustomString method, indicating that GetCustomString is not implemented.</source>
          <target state="translated">基本&lt;xref:System.Web.Compilation.BuildProvider&gt;クラスを返します<ph id="ph1">`null`</ph>GetCustomString が実装されていないことを示す、GetCustomString メソッド&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Certain build provider implementations can implement GetCustomString in place of the &lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt; method.</source>
          <target state="translated">特定のビルド プロバイダーの実装は、の代わりに GetCustomString を実装できます、&lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt;メソッド&lt;/xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Web.Compilation.BuildProvider&gt; object typically uses &lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt; to return a &lt;xref:System.Type&gt; object for a virtual path.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.BuildProvider&gt;オブジェクトは通常&lt;xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt;、&lt;xref:System.Type&gt;仮想パスのオブジェクト&lt;/xref:System.Type&gt;を返すを&lt;/xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A&gt;使用して&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>However, the GetCustomString method can be used to indicate that a &lt;xref:System.Web.Compilation.BuildProvider&gt; object can generate multiple types from a virtual path.</source>
          <target state="translated">GetCustomString メソッドを使用してあることを示すただし、&lt;xref:System.Web.Compilation.BuildProvider&gt;オブジェクトは、仮想パスからの複数の型を生成できます&lt;/xref:System.Web.Compilation.BuildProvider&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The compilation results for the build provider's virtual path.</source>
          <target state="translated">ビルド プロバイダーの仮想パスのコンパイル結果。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A string to be persisted in the build environment, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance does not implement GetCustomString.</source>
          <target state="translated">ビルド環境に保存される文字列または<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Web.Compilation.BuildProvider"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>インスタンスは GetCustomString を実装していません。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns the compiler settings for the default language in the application.</source>
          <target state="translated">アプリケーションの既定の言語のコンパイラ設定を返します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Use the GetDefaultCompilerType method to examine the default compiler type for a build provider.</source>
          <target state="translated">ビルド プロバイダーの既定のコンパイラ型を調べるには、GetDefaultCompilerType メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt; method to examine the compiler type configured in a build provider for a specific language name.</source>
          <target state="translated">使用して、&lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt;ビルド プロバイダーの特定の言語名で構成されているコンパイラの型をチェックするメソッド&lt;/xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The base &lt;xref:System.Web.Compilation.BuildProvider&gt; class determines the default compiler type using the <ph id="ph1">`defaultLanguage`</ph> attribute value in the  section of the application configuration file.</source>
          <target state="translated">基本&lt;xref:System.Web.Compilation.BuildProvider&gt;クラスは、既定値の型を使用してコンパイラによって異なる、<ph id="ph1">`defaultLanguage`</ph>属性の値は、アプリケーション構成ファイルのセクションでします&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If there is no default language setting in the compilation section, the default compiler type is set using the &lt;xref:Microsoft.VisualBasic.VBCodeProvider&gt; language provider.</source>
          <target state="translated">使用してコンパイラの既定値の型を設定する compilation セクション内の既定の言語設定がない場合、&lt;xref:Microsoft.VisualBasic.VBCodeProvider&gt;言語プロバイダー&lt;/xref:Microsoft.VisualBasic.VBCodeProvider&gt; 。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When deriving from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class, you can use GetDefaultCompilerType to set the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; property within your implementation.</source>
          <target state="translated">派生している場合、&lt;xref:System.Web.Compilation.BuildProvider&gt;クラス、設定に GetDefaultCompilerType を使用することができます、&lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;実装内のプロパティ&lt;/xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the compiler settings for the default language in the application.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>アプリケーションの既定の言語のコンパイラ設定を表すです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The base class returns the default compiler based on the application configuration file.</source>
          <target state="translated">基本クラスでは、アプリケーション構成ファイルに基づく既定コンパイラを返します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns the compiler settings for the build provider based on the specified language.</source>
          <target state="translated">指定された言語に基づくビルド プロバイダーのコンパイラ設定を返します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use the GetDefaultCompilerTypeForLanguage method to examine the compiler type configured in the build provider for a specific language name.</source>
          <target state="translated">GetDefaultCompilerTypeForLanguage メソッドを使用して、特定の言語名のビルド プロバイダーで構成されているコンパイラ タイプを調べます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt; method to examine the default compiler type for a build provider.</source>
          <target state="translated">使用して、&lt;xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt;ビルド プロバイダーのコンパイラの既定値の型をチェックするメソッド&lt;/xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The base &lt;xref:System.Web.Compilation.BuildProvider&gt; class determines the default compiler type using the &lt;xref:System.Web.Configuration.Compiler&gt; elements in the &lt;xref:System.Web.Configuration.CompilationSection.Compilers%2A&gt; property of the &lt;xref:System.Web.Configuration.CompilationSection&gt; object for the configuration file.</source>
          <target state="translated">基本&lt;xref:System.Web.Compilation.BuildProvider&gt;クラスは、既定値の型を使用してコンパイラによって異なる、&lt;xref:System.Web.Configuration.Compiler&gt;内の要素、&lt;xref:System.Web.Configuration.CompilationSection.Compilers%2A&gt;のプロパティ、&lt;xref:System.Web.Configuration.CompilationSection&gt;構成ファイルのオブジェクト&lt;/xref:System.Web.Configuration.CompilationSection&gt;&lt;/xref:System.Web.Configuration.CompilationSection.Compilers%2A&gt;&lt;/xref:System.Web.Configuration.Compiler&gt;&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This is equivalent to examining the  elements in the  and the  elements in the  sections of the configuration file.</source>
          <target state="translated">これは、およびの構成ファイルのセクションでは、要素内の要素を確認するのには等価です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, for the <ph id="ph1">`language`</ph> value VB, the base class method returns a &lt;xref:System.Web.Compilation.CompilerType&gt; object that corresponds to the configured settings for an instance of &lt;xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName&gt;.</source>
          <target state="translated">たとえば、 <ph id="ph1">`language`</ph> VB、基本クラスのメソッドの値が&lt;xref:System.Web.Compilation.CompilerType&gt;&lt;xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName&gt;.&lt;/xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName&gt;のインスタンスの構成済みの設定に対応するオブジェクト&lt;/xref:System.Web.Compilation.CompilerType&gt;を返します</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When you derive from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class, you can use GetDefaultCompilerTypeForLanguage to set the &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt; property value for the language supported by your implementation.</source>
          <target state="translated">継承する場合、&lt;xref:System.Web.Compilation.BuildProvider&gt;クラス、設定に GetDefaultCompilerTypeForLanguage を使用することができます、 &lt;xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;、実装でサポートされる言語のプロパティの値&lt;/xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A&gt;&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A code language name.</source>
          <target state="translated">コード言語の名前。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the compiler settings for the build provider based on the specified language.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.CompilerType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を表す、指定した言語に基づくビルド プロバイダーのコンパイラ設定します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The base class returns the default compiler settings for the language based on the application configuration file.</source>
          <target state="translated">基本クラスは、既定のアプリケーション構成ファイルに基づく言語のコンパイラ設定を返します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;language&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;language&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;language&lt;/code&gt;</ph> does not match a configured compiler for the build provider.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;language&lt;/code&gt;</ph>ビルド プロバイダーの構成済みのコンパイラは一致しません。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns a type generated by the build provider from the virtual path.</source>
          <target state="translated">仮想パスからビルド プロバイダーによって生成された型を返します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To implement a build provider that generates source code for Web content such as .aspx files, derive a class from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class and override the GetGeneratedType method to return the type generated by the build provider.</source>
          <target state="translated">.Aspx ファイルなどの Web コンテンツのソース コードを生成するビルド プロバイダーを実装するのには、派生クラスを&lt;xref:System.Web.Compilation.BuildProvider&gt;クラス メソッドをオーバーライドして、GetGeneratedType ビルド プロバイダーによって生成された型を返します&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The ASP.NET build system compiles files for each build provider, and generates a &lt;xref:System.CodeDom.Compiler.CompilerResults&gt; object, which is passed to the GetGeneratedType method.</source>
          <target state="translated">ASP.NET ビルド システムが各ビルド プロバイダーのファイルをコンパイルし、生成、&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;は GetGeneratedType メソッドに渡されるオブジェクト&lt;/xref:System.CodeDom.Compiler.CompilerResults&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Typically, a build provider's GetGeneratedType implementation uses the &lt;xref:System.Reflection.Assembly.GetType%2A&gt; method on the &lt;xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt; property of the input <ph id="ph1">`results`</ph> object to return the provided type.</source>
          <target state="translated">通常、ビルド プロバイダーの GetGeneratedType 実装を使用して、&lt;xref:System.Reflection.Assembly.GetType%2A&gt;メソッドを&lt;xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt;入力のプロパティ<ph id="ph1">`results`</ph>指定された型を取得するオブジェクト&lt;/xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt;&lt;/xref:System.Reflection.Assembly.GetType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The compilation results for the build provider's virtual path.</source>
          <target state="translated">ビルド プロバイダーの仮想パスのコンパイル結果。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The type that is generated by the build provider for the virtual path.</source>
          <target state="translated">仮想パスのビルド プロバイダーによって生成される型。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The base class returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">基本クラスを返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Returns a value indicating actions required when a virtual path is built.</source>
          <target state="translated">仮想パスが構築されたときに必要なアクションを示す値を返します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The GetResultFlags method is used by the ASP.NET build environment when using instances of the &lt;xref:System.Web.Compilation.BuildProvider&gt; class to build files and load the compiled assemblies.</source>
          <target state="translated">インスタンスを使用するときに、ASP.NET ビルド環境によって GetResultFlags メソッドが使用される、&lt;xref:System.Web.Compilation.BuildProvider&gt;ファイルをビルドおよびコンパイル済みのアセンブリをロードするクラス&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The base &lt;xref:System.Web.Compilation.BuildProvider&gt; class method returns the &lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt; field value, indicating that no special action is required when the virtual path is built.</source>
          <target state="translated">基本&lt;xref:System.Web.Compilation.BuildProvider&gt;クラスのメソッドを返します、&lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt;特別な操作が不要である仮想パスが構築されたときを示す、フィールドの値&lt;/xref:System.Web.Compilation.BuildProviderResultFlags&gt;&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When deriving from the &lt;xref:System.Web.Compilation.BuildProvider&gt; class, you can implement the GetResultFlags method to return a different &lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt; value for your custom file type or virtual path.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.BuildProvider&gt;クラスを別の&lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt;カスタム ファイルの種類または仮想パスの値&lt;/xref:System.Web.Compilation.BuildProviderResultFlags&gt;を返す GetResultFlags メソッドを実装することができます&lt;/xref:System.Web.Compilation.BuildProvider&gt;から派生している場合</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For example, if a rebuild of your virtual path requires the containing &lt;xref:System.AppDomain&gt; object to be reloaded, you can return the &lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt; enumeration value from your GetResultFlags method.</source>
          <target state="translated">たとえば場合の再構築、仮想パスが必要ですを含む、&lt;xref:System.AppDomain&gt;オブジェクトを再読み込みされ、返すことができます、 &lt;xref:System.Web.Compilation.BuildProviderResultFlags&gt;GetResultFlags メソッドから列挙値&lt;/xref:System.Web.Compilation.BuildProviderResultFlags&gt;&lt;/xref:System.AppDomain&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The compilation results for the build provider's virtual path.</source>
          <target state="translated">ビルド プロバイダーの仮想パスのコンパイル結果。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProviderResultFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating actions required after the virtual path is built within the ASP.NET build environment.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.BuildProviderResultFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ビルド環境、ASP.NET での仮想パスが構築された後に必要なアクションを示す値。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Opens a text reader for reading from the virtual path of the current build provider object.</source>
          <target state="translated">現在のビルド プロバイダー オブジェクトの仮想パスから読み込むのためのテキスト リーダーを開きます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.TextReader.Read%2A&gt; method on the returned &lt;xref:System.IO.TextReader&gt; object to read the contents of the &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt; property for a &lt;xref:System.Web.Compilation.BuildProvider&gt; object.</source>
          <target state="translated">使用して、&lt;xref:System.IO.TextReader.Read%2A&gt;メソッドで返された&lt;xref:System.IO.TextReader&gt;オブジェクトの内容を読み取る、&lt;xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt;プロパティを&lt;xref:System.Web.Compilation.BuildProvider&gt;オブジェクト&lt;/xref:System.Web.Compilation.BuildProvider&gt;&lt;/xref:System.Web.Compilation.BuildProvider.VirtualPath%2A&gt;&lt;/xref:System.IO.TextReader&gt;&lt;/xref:System.IO.TextReader.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>After calling the OpenReader method, you must use the &lt;xref:System.IO.TextReader.Close%2A&gt; method to close the &lt;xref:System.IO.TextReader&gt; object and free associated system resources.</source>
          <target state="translated">使用する必要があります OpenReader メソッドを呼び出した後、&lt;xref:System.IO.TextReader.Close%2A&gt;を終了するメソッド、&lt;xref:System.IO.TextReader&gt;オブジェクトし、関連付けられたシステム リソースを解放します&lt;/xref:System.IO.TextReader&gt;&lt;/xref:System.IO.TextReader.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An open &lt;xref:System.IO.TextReader&gt; that can be used to read the contents of the &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt; &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;。&lt;/xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;の内容の読み取りに使用できる&lt;/xref:System.IO.TextReader&gt;のオープン</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Opens a text reader for reading from a specified virtual path.</source>
          <target state="translated">指定した仮想パスから読み込むのためのテキスト リーダーを開きます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.TextReader.Read%2A&gt; method on the returned &lt;xref:System.IO.TextReader&gt; object to read the contents of the virtual path.</source>
          <target state="translated">&lt;xref:System.IO.TextReader.Read%2A&gt;返された&lt;xref:System.IO.TextReader&gt;仮想パスの内容を読み取るためのオブジェクト&lt;/xref:System.IO.TextReader&gt;のメソッド&lt;/xref:System.IO.TextReader.Read%2A&gt;を使用します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>After calling the &lt;xref:System.Web.Compilation.BuildProvider.OpenReader%2A&gt; method, you must use the &lt;xref:System.IO.TextReader.Close%2A&gt; method to close the &lt;xref:System.IO.TextReader&gt; object and free associated system resources.</source>
          <target state="translated">呼び出した後、&lt;xref:System.Web.Compilation.BuildProvider.OpenReader%2A&gt;メソッドを使用する必要あります、&lt;xref:System.IO.TextReader.Close%2A&gt;を終了するメソッド、&lt;xref:System.IO.TextReader&gt;オブジェクトし、関連付けられたシステム リソースを解放します&lt;/xref:System.IO.TextReader&gt;&lt;/xref:System.IO.TextReader.Close%2A&gt;&lt;/xref:System.Web.Compilation.BuildProvider.OpenReader%2A&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The virtual path to read.</source>
          <target state="translated">読み取るへの仮想パス。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An open &lt;xref:System.IO.TextReader&gt; that can be used to read the contents of the specified virtual path.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;指定された仮想パスのコンテンツの読み取りに使用できる&lt;/xref:System.IO.TextReader&gt;のオープン</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Opens a stream for reading the virtual path of the current build provider object.</source>
          <target state="translated">現在のビルド プロバイダー オブジェクトの仮想パスを読み取るためのストリームを開きます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Stream.Read%2A&gt; method on the returned &lt;xref:System.IO.Stream&gt; object to read the contents of the virtual path for the &lt;xref:System.Web.Compilation.BuildProvider&gt; object.</source>
          <target state="translated">使用して、&lt;xref:System.IO.Stream.Read%2A&gt;メソッドで返された&lt;xref:System.IO.Stream&gt;の仮想パスの内容を読み取るためのオブジェクト、&lt;xref:System.Web.Compilation.BuildProvider&gt;オブジェクト&lt;/xref:System.Web.Compilation.BuildProvider&gt;&lt;/xref:System.IO.Stream&gt;&lt;/xref:System.IO.Stream.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>After calling the OpenStream method, you must use the &lt;xref:System.IO.Stream.Close%2A&gt; method to close the &lt;xref:System.IO.Stream&gt; object and free associated system resources.</source>
          <target state="translated">使用する必要があります OpenStream メソッドを呼び出した後、&lt;xref:System.IO.Stream.Close%2A&gt;を終了するメソッド、&lt;xref:System.IO.Stream&gt;オブジェクトし、関連付けられたシステム リソースを解放します&lt;/xref:System.IO.Stream&gt;&lt;/xref:System.IO.Stream.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An open &lt;xref:System.IO.Stream&gt; that can be used to read the contents of the &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt; &lt;xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;。&lt;/xref:System.Web.Compilation.BuildProvider.VirtualPath*&gt;の内容の読み取りに使用できる&lt;/xref:System.IO.Stream&gt;のオープン</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Opens a stream for reading from a specified virtual path.</source>
          <target state="translated">指定した仮想パスから読み取るのためのストリームを開きます。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Stream.Read%2A&gt; method on the returned &lt;xref:System.IO.Stream&gt; object to read the contents of the virtual path.</source>
          <target state="translated">&lt;xref:System.IO.Stream.Read%2A&gt;返された&lt;xref:System.IO.Stream&gt;仮想パスの内容を読み取るためのオブジェクト&lt;/xref:System.IO.Stream&gt;のメソッド&lt;/xref:System.IO.Stream.Read%2A&gt;を使用します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>After calling the &lt;xref:System.Web.Compilation.BuildProvider.OpenStream%2A&gt; method, you must use the &lt;xref:System.IO.Stream.Close%2A&gt; method to close the &lt;xref:System.IO.Stream&gt; object and free associated system resources.</source>
          <target state="translated">呼び出した後、&lt;xref:System.Web.Compilation.BuildProvider.OpenStream%2A&gt;メソッドを使用する必要あります、&lt;xref:System.IO.Stream.Close%2A&gt;を終了するメソッド、&lt;xref:System.IO.Stream&gt;オブジェクトし、関連付けられたシステム リソースを解放します&lt;/xref:System.IO.Stream&gt;&lt;/xref:System.IO.Stream.Close%2A&gt;&lt;/xref:System.Web.Compilation.BuildProvider.OpenStream%2A&gt;。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The virtual path to read.</source>
          <target state="translated">読み取るへの仮想パス。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An open &lt;xref:System.IO.Stream&gt; that can be used to read the contents of the specified virtual path.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;指定された仮想パスのコンテンツの読み取りに使用できる&lt;/xref:System.IO.Stream&gt;のオープン</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, enables you to review compiler error messages so that you can modify them to provide more information.</source>
          <target state="translated">派生クラスでオーバーライドされると、詳細を提供することを変更できるように、コンパイラ エラー メッセージを確認できます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You typically override this method so that you can modify compiler errors before they are displayed in order to make the error text more helpful to the user.</source>
          <target state="translated">通常、エラー テキストをユーザーにとってより便利に行うために表示される前に、コンパイラ エラーを修正できますようには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This is useful in scenarios where you know the context of certain errors and can provide information to the user about how to fix them.</source>
          <target state="translated">これは、特定のエラーのコンテキストを知るし、それらを修正する方法についてユーザーに情報を提供することができますのシナリオで役立ちます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The original compiler error message is usually specific to a particular language construct and might not make the real cause or solution obvious to the user.</source>
          <target state="translated">元のコンパイラ エラー メッセージは通常、特定の言語コンストラクトに固有、可能性がありますいない実際的な原因やソリューション明白なユーザーにします。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>You can access the errors by using the &lt;xref:System.CodeDom.Compiler.CompilerResults&gt; object that is passed to the method.</source>
          <target state="translated">使用して、エラーにアクセスすることができます、&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;メソッドに渡されるオブジェクト&lt;/xref:System.CodeDom.Compiler.CompilerResults&gt;。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Compiler results.</source>
          <target state="translated">コンパイラが発生します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Represents the assemblies to compile with the source generated by the build provider.</source>
          <target state="translated">ビルド プロバイダーによって生成されたソースでコンパイルしてアセンブリを表します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment initializes the collection of assemblies that are available for reference by the build provider.</source>
          <target state="translated">ASP.NET は、環境によって初期化されたビルド プロバイダーによって参照されるアセンブリのコレクションをビルドします。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The source code generated by a build provider can use public types in the referenced assemblies.</source>
          <target state="translated">ビルド プロバイダーによって生成されたソース コードでは、参照されたアセンブリでパブリック型を使用できます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The referenced assembly collection consists of other assemblies built in the ASP.NET application, and assemblies listed in the  element in the configuration file.</source>
          <target state="translated">参照アセンブリのコレクションは、他の ASP.NET アプリケーションでビルドされたアセンブリおよび構成ファイル内の要素の一覧にアセンブリで構成されます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the &lt;xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt; method.</source>
          <target state="translated">ビルド プロバイダーを使用して、追加のアセンブリに追加のビルド プロバイダーは、追加のアセンブリを参照するソース コードを生成する場合、&lt;xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt;メソッド&lt;/xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</source>
          <target state="translated">ASP.NET ビルド環境では、プロバイダーとの参照で使用できるアセンブリの既定のコレクションをビルドによって追加された両方の参照先アセンブリを使用してアセンブリのコンパイル時に外部のタイプを解決します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The ReferencedAssemblies collection does not include assemblies that are added for reference by other build providers through the &lt;xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt; method.</source>
          <target state="translated">ReferencedAssemblies コレクションを介して他のビルド プロバイダーによって参照に追加されるアセンブリを含まない、&lt;xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt;メソッド&lt;/xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A read-only collection of assemblies that can be referenced by the source code generated by the build provider.</source>
          <target state="translated">ビルド プロバイダーによって生成されたソース コードで参照できるアセンブリの読み取り専用コレクション。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Registers a build provider.</source>
          <target state="translated">ビルド プロバイダーを登録します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>You can use this method to register build providers instead of defining them in the Web.config file.</source>
          <target state="translated">このメソッドを使用するには、Web.config ファイルで定義することではなくビルド プロバイダーを登録します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For more information about build providers, see the &lt;xref:System.Web.Compilation.BuildProvider&gt; class and <bpt id="p1">[</bpt>buildProviders Element for compilation (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>.</source>
          <target state="translated">ビルド プロバイダーの詳細については、次を参照してください、&lt;xref:System.Web.Compilation.BuildProvider&gt;クラスと<bpt id="p1">[</bpt>buildProviders 要素 (ASP.NET 設定スキーマ) のコンパイル<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>。&lt;/xref:System.Web.Compilation.BuildProvider&gt; 。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The file-name extension that the build provider is for.</source>
          <target state="translated">ビルド プロバイダーが、ファイル名拡張子。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The build provider class.</source>
          <target state="translated">ビルド プロバイダーのクラスです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Represents the file to be built by this build provider implementation.</source>
          <target state="translated">このビルド プロバイダーの実装でビルドするファイルを表します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The virtual path of a &lt;xref:System.Web.Compilation.BuildProvider&gt; object is the path to the file that is being compiled by the build provider.</source>
          <target state="translated">仮想パス、&lt;xref:System.Web.Compilation.BuildProvider&gt;オブジェクトは、ビルド プロバイダーによってコンパイルされるファイルへのパス&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For example, if you have configured a custom &lt;xref:System.Web.Compilation.BuildProvider&gt; class to build all files in the Web site with the custom extension of .abc, if your Web site is named WebSite1, and the Web site contains a file named Example.abc, the VirtualPath property contains the value <ph id="ph1">`/WebSite1/Example.abc`</ph>.</source>
          <target state="translated">たとえば、カスタム構成した場合&lt;xref:System.Web.Compilation.BuildProvider&gt;.abc のカスタム拡張機能がある Web サイトのすべてのファイルを作成するクラス、VirtualPath プロパティに値が含まれています、Web サイトにより、WebSite1 という名前は、Web サイトに Example.abc をという名前のファイルが含まれている場合は、 <ph id="ph1">`/WebSite1/Example.abc`</ph>&lt;/xref:System.Web.Compilation.BuildProvider&gt; 。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The file extension of each file within the application determines the file type, and the corresponding build provider for the file type.</source>
          <target state="translated">アプリケーション内の各ファイルのファイル拡張子は、ファイルの種類とファイルの種類に対応するビルド プロバイダーを決定します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The ASP.NET build environment initializes a &lt;xref:System.Web.Compilation.BuildProvider&gt; object for each file based on the file type, and uses the &lt;xref:System.Web.Compilation.BuildProvider&gt; methods to generate source for each file.</source>
          <target state="translated">ASP.NET ビルド環境によって初期化、&lt;xref:System.Web.Compilation.BuildProvider&gt;オブジェクトの各ファイルのファイルの種類に基づいてを使用して、&lt;xref:System.Web.Compilation.BuildProvider&gt;各ファイルのソースを生成するメソッド&lt;/xref:System.Web.Compilation.BuildProvider&gt;&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For more information about configuring a build provider, see <bpt id="p1">[</bpt>buildProviders Element for compilation (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>.</source>
          <target state="translated">ビルド プロバイダーの構成の詳細については、次を参照してください。 <bpt id="p1">[</bpt>buildProviders 要素 (ASP.NET 設定スキーマ) のコンパイル<ept id="p1">](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)</ept>です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A read-only string that specifies the virtual path of a file to be compiled by this build provider.</source>
          <target state="translated">このビルド プロバイダーによってコンパイルされるファイルの仮想パスを指定する読み取り専用の文字列。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Represents a collection of virtual paths that must be built before the build provider generates code.</source>
          <target state="translated">ビルド プロバイダーがコードを生成する前に構築する必要がある仮想パスのコレクションを表します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The VirtualPathDependencies property is a collection of virtual paths that must be compiled before the &lt;xref:System.Web.Compilation.BuildProvider&gt; instance generates source code.</source>
          <target state="translated">VirtualPathDependencies プロパティは使用する前にコンパイルする必要がある仮想パスのコレクション、&lt;xref:System.Web.Compilation.BuildProvider&gt;インスタンスは、ソース コードを生成します&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The assemblies from the virtual paths in VirtualPathDependencies are added as references to the compilation for the &lt;xref:System.Web.Compilation.BuildProvider&gt; instance.</source>
          <target state="translated">コンパイルへの参照として VirtualPathDependencies 内の仮想パスからアセンブリが追加、&lt;xref:System.Web.Compilation.BuildProvider&gt;インスタンス&lt;/xref:System.Web.Compilation.BuildProvider&gt;。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A read-only collection of strings, representing the virtual paths that this instance of the build provider is dependent on.</source>
          <target state="translated">ビルド プロバイダーのこのインスタンスが依存する仮想パスを表す文字列の読み取り専用コレクション。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>