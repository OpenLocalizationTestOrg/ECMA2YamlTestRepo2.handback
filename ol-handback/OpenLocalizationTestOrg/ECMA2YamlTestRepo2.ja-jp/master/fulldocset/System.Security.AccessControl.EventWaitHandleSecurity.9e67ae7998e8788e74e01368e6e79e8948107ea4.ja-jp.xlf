<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5785955b78cb278987505922f2674d18d4899c36</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.AccessControl.EventWaitHandleSecurity.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5633cc96881523122f544d67a375956194a01bde</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d426f065f90faeef72f259c4e6acb00ed5522dfb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the Windows access control security applied to a named system wait handle.</source>
          <target state="translated">名前付きシステム待機ハンドルに適用される Windows アクセス制御セキュリティを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An EventWaitHandleSecurity object specifies access rights for a named system wait handle, and also specifies the way access attempts are audited.</source>
          <target state="translated">EventWaitHandleSecurity オブジェクトは、名前付きシステム待機ハンドルのアクセス権を指定し、またアクセス試行を監査する方法を指定します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Access rights to the wait handle are expressed as rules, with each access rule represented by an &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt; object.</source>
          <target state="translated">待機ハンドルへのアクセス権がによって表される各アクセス規則と、規則で表される、&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;オブジェクト&lt;/xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each auditing rule is represented by an &lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt; object.</source>
          <target state="translated">によって表される各監査規則、&lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;オブジェクト&lt;/xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</source>
          <target state="translated">これには、セキュリティ保護可能なオブジェクトごとに最大で&amp;1; つ随意アクセス制御リスト (DACL) に最大で&amp;1; つシステム アクセス制御リスト (SACL) を指定するアクセス試行を監査する、セキュリティで保護されたオブジェクトとのアクセスを制御する、基になる Windows セキュリティ システムがミラー化します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</source>
          <target state="translated">DACL および SACL は、アクセスおよび監査のユーザーとグループを指定するアクセス制御エントリ (ACE) の一覧を並べ替えられています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt; or &lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt; object might represent more than one ACE.</source>
          <target state="translated">&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;または&lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;オブジェクトは、1 つ以上の ACE を表す場合があります&lt;/xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;&lt;/xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.Threading.EventWaitHandle&gt; object can represent a local wait handle or a named system wait handle.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.Threading.EventWaitHandle&gt;オブジェクトは、ローカルの待機ハンドルを表すことができる、名前付きシステムがハンドルを待機します&lt;/xref:System.Threading.EventWaitHandle&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows access control security is meaningful only for named system wait handles.</source>
          <target state="translated">Windows アクセス制御セキュリティは、名前付きシステム待機ハンドルに対してのみ有効です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The EventWaitHandleSecurity, &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;, and &lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt; classes hide the implementation details of ACLs and ACEs.</source>
          <target state="translated">EventWaitHandleSecurity &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;、および&lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;クラスは、Acl や Ace の実装の詳細を非表示にします&lt;/xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;&lt;/xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</source>
          <target state="translated">これらによって、17 個の異なる ACE 型との継承とアクセス権の伝達を正しく維持するための複雑さの制約を無視できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These objects are also designed to prevent the following common access control errors:      -   Creating a security descriptor with a null DACL.</source>
          <target state="translated">これらのオブジェクトは、次の一般的なアクセス制御エラーを防ぐためにも設計:-null DACL のセキュリティ記述子を作成します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</source>
          <target state="translated">DACL を null 参照では、可能性のあるサービス拒否攻撃を作成する、オブジェクトへのアクセス ルールを追加するすべてのユーザーを許可します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A new EventWaitHandleSecurity object always starts with an empty DACL, which denies all access for all users.</source>
          <target state="translated">新しい EventWaitHandleSecurity オブジェクトは、常にすべてのユーザーのすべてのアクセスを拒否する空の DACL を開始します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-   Violating the canonical ordering of ACEs.</source>
          <target state="translated">-Ace の正規の順序に違反します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</source>
          <target state="translated">DACL の ACE リストが正規の順序で維持されない場合ユーザー誤ってを付与するアクセス セキュリティで保護されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, denied access rights must always appear before allowed access rights.</source>
          <target state="translated">たとえば、拒否されたアクセス権は必要があります許可されるアクセス権の前に常に表示されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>EventWaitHandleSecurity objects maintain the correct order internally.</source>
          <target state="translated">EventWaitHandleSecurity オブジェクトは、内部的に正しい順序を維持します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   Manipulating security descriptor flags, which should be under resource manager control only.</source>
          <target state="translated">操作に使用するセキュリティ記述子のフラグ、リソース マネージャーの制御だけである必要があります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-   Creating invalid combinations of ACE flags.</source>
          <target state="translated">-ACE フラグの無効な組み合わせを作成します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-   Manipulating inherited ACEs.</source>
          <target state="translated">-継承された Ace を操作します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</source>
          <target state="translated">継承と伝達は、アクセスおよび監査規則に対して行った変更への応答で、リソース マネージャーによって処理されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-   Inserting meaningless ACEs into ACLs.</source>
          <target state="translated">-Acl に無意味な Ace を挿入します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:      -   Low-level tasks that are normally performed by the resource manager.</source>
          <target state="translated">.NET セキュリティ オブジェクトでサポートされていない唯一の機能は、次のようなアプリケーションの開発者の過半数によって避ける必要がある危険なアクティビティ:-通常、リソース マネージャーで実行される低レベルのタスクです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-   Adding or removing access control entries in ways that do not maintain the canonical ordering.</source>
          <target state="translated">追加または正規の順序を保持しない方法でアクセス制御エントリを削除します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To modify Windows access control security for a named wait handle, use the &lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt; method to get the EventWaitHandleSecurity object.</source>
          <target state="translated">名前付きの待機ハンドルの Windows アクセス制御セキュリティを変更するには、使用、 &lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;EventWaitHandleSecurity オブジェクトを取得するメソッド&lt;/xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Modify the security object by adding and removing rules, and then use the &lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt; method to reattach it.</source>
          <target state="translated">追加し、ルールを削除して、セキュリティ オブジェクトを変更し、&lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;それを再アタッチする方法&lt;/xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Changes you make to an EventWaitHandleSecurity object do not affect the access levels of the named wait handle until you call the &lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt; method to assign the altered security object to the named wait handle.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; EventWaitHandleSecurity オブジェクトに加えた変更には影響しません、名前付きの待機ハンドルのアクセス レベルが呼び出されるまで、&lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;名前付きの待機ハンドルには、変更されたセキュリティ オブジェクトを割り当てる方法&lt;/xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To copy access control security from one wait handle to another, use the &lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt; method to get an EventWaitHandleSecurity object representing the access and audit rules for the first wait handle, and then use the &lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt; method, or a constructor that accepts an EventWaitHandleSecurity object, to assign those rules to the second wait handle.</source>
          <target state="translated">1 つの待機ハンドルから別のアクセス制御セキュリティをコピーするには、使用、 &lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;EventWaitHandleSecurity を最初の待機ハンドルのアクセスおよび監査規則を表すオブジェクトを取得し、使用する方法、&lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;メソッド、またはを受け取るコンス トラクターにそれらのルールを&amp;2; つ目の待機に割り当てる、EventWaitHandleSecurity オブジェクトを処理します&lt;/xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;&lt;/xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Users with an investment in the security descriptor definition language (SDDL) can use the &lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt; method to set access rules for a named wait handle, and the &lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt; method to obtain a string that represents the access rules in SDDL format.</source>
          <target state="translated">セキュリティ記述子定義言語 (SDDL) で、初期投資をユーザーが使用できる、 &lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;、名前付きの待機ハンドルのアクセス規則を設定するメソッドと&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;SDDL 形式でのアクセス規則を表す文字列を取得するメソッド&lt;/xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;&lt;/xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This is not recommended for new development.</source>
          <target state="translated">これは、説明は、新規の開発は推奨されません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with default values.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>既定値を持つクラス。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A new &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; object always starts with an empty discretionary access list (DACL), which denies all access for all users.</source>
          <target state="translated">新しい&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;オブジェクトは常に空の随意アクセス リスト (DACL)、すべてのユーザーのすべてのアクセスを拒否するで始まります&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">このクラスは、Windows 98 または Windows Millennium Edition ではサポートされていません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets the enumeration type that the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class uses to represent access rights.</source>
          <target state="translated">列挙型を取得、 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスのアクセス権を表現するために使用します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt; property and return the type they use to represent access rights.</source>
          <target state="translated">派生したクラス、&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;クラスのオーバーライド、&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;プロパティと戻り値のアクセス権を表すために使用する型&lt;/xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;&lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な列挙型を判断します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object representing the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">A&lt;xref:System.Type&gt;オブジェクトを表す、 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙体です&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</source>
          <target state="translated">指定したアクセス権、アクセス制御、およびフラグを指定したユーザーの新しいアクセス制御規則を作成します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The recommended way to create access control rules is to use the constructors of the &lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt; class.</source>
          <target state="translated">アクセス制御規則を作成することをお勧めは&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;クラス&lt;/xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;のコンス トラクターを使用するには</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Although inheritance and propagation flags are meaningless for named events, it is still possible to specify them.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 継承し、伝達フラグは、名前付きイベントに対しては無効ですはそれらを指定することも可能です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">これは使用しないで、不必要に複雑になる、ルールのメンテナンスたとえばするには互換性のある規則の組み合わせに干渉することであるためです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that identifies the user or group the rule applies to.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ユーザーを識別するまたはにグループのルールを適用します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the access rights to allow or deny, cast to an integer.</source>
          <target state="translated">ビットごとの組み合わせ<bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、許可または拒否するアクセス権を指定する値が整数にキャストします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">名前付きの待機ハンドルの無意味な階層がないためです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">名前付きの待機ハンドルの無意味な階層がないためです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">名前付きの待機ハンドルの無意味な階層がないためです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>権限を許可または拒否するかどうかを指定する値。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the specified rights for the specified user.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定したユーザーの指定された権限を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>、 <ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>、 <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>、または<ph id="ph4">&lt;code&gt;type&lt;/code&gt;</ph>に無効な値を指定します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph> is zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>ゼロです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is neither of type <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, nor of a type such as <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that can be converted to type <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>型のどちらも<bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、やなどの型の<bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>型に変換できる<bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the type that the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class uses to represent access rules.</source>
          <target state="translated">型を取得、 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスのアクセス規則を表現するために使用します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt; property and return the type they use to represent access rules.</source>
          <target state="translated">派生したクラス、&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;クラスのオーバーライド、&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;プロパティと戻り値のアクセス規則を表すために使用する型&lt;/xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;&lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</source>
          <target state="translated">配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切なアクセス ルールの種類を決定します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object representing the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">A&lt;xref:System.Type&gt;オブジェクトを表す、 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Searches for a matching access control rule with which the new rule can be merged.</source>
          <target state="translated">使用する新しい規則をマージできる一致するアクセス制御規則を検索します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">何も見つからない場合は、新しい規則を追加します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The AddAccessRule method searches for rules with the same user or group and the same &lt;xref:System.Security.AccessControl.AccessControlType&gt; as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">AddAccessRule メソッドは、同じユーザーまたはグループと同じ規則を検索&lt;xref:System.Security.AccessControl.AccessControlType&gt;として<ph id="ph1">`rule`</ph>&lt;/xref:System.Security.AccessControl.AccessControlType&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">見つからない場合は、<ph id="ph1">`rule`</ph>を追加します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If a matching rule is found, the rights in <ph id="ph1">`rule`</ph> are merged with the existing rule.</source>
          <target state="translated">照合ルールが見つからないかどうかは、rights in<ph id="ph1">`rule`</ph>既存の規則とマージされます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The access control rule to add.</source>
          <target state="translated">アクセス制御規則を追加します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Searches for an audit rule with which the new rule can be merged.</source>
          <target state="translated">使用する新しい規則をマージできる監査規則を検索します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">何も見つからない場合は、新しい規則を追加します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The AddAuditRule method searches for rules with the same user or group as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">AddAuditRule メソッドと同じユーザーまたはグループとして規則を検索<ph id="ph1">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">見つからない場合は、<ph id="ph1">`rule`</ph>を追加します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If a matching rule is found, the flags in <ph id="ph1">`rule`</ph> are merged into the existing rule.</source>
          <target state="translated">照合ルールが見つからないかどうかでフラグ<ph id="ph1">`rule`</ph>既存のルールにマージされます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The audit rule to add.</source>
          <target state="translated">追加する監査規則。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The user specified by this rule determines the search.</source>
          <target state="translated">このルールで指定されたユーザーは、検索を決定します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</source>
          <target state="translated">規則、監査へのアクセス権、および監査規則をトリガーする結果を適用するユーザーを指定して、新しい監査規則を作成します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The recommended way to create audit rules is to use the constructors of the &lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt; class.</source>
          <target state="translated">監査規則を作成することをお勧めは&lt;xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;クラス&lt;/xref:System.Security.AccessControl.EventWaitHandleAuditRule&gt;のコンス トラクターを使用するには</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Although inheritance and propagation flags are meaningless for named events, it is still possible to specify them.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 継承し、伝達フラグは、名前付きイベントに対しては無効ですはそれらを指定することも可能です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">これは使用しないで、不必要に複雑になる、ルールのメンテナンスたとえばするには互換性のある規則の組み合わせに干渉することであるためです。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that identifies the user or group the rule applies to.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Principal.IdentityReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ユーザーを識別するまたはにグループのルールを適用します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the access rights to audit, cast to an integer.</source>
          <target state="translated">ビットごとの組み合わせ<bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>監査へのアクセス権を指定する値が整数にキャストします。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">名前付きの待機ハンドルの無意味な階層がないためです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">名前付きの待機ハンドルの無意味な階層がないためです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">名前付きの待機ハンドルの無意味な階層がないためです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying whether to audit successful access, failed access, or both.</source>
          <target state="translated">ビットごとの組み合わせ<bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>アクセスが成功した、失敗したアクセス、またはその両方を監査するかどうかを指定する値。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the specified audit rule for the specified user.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したユーザーの指定された監査規則を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The return type of the method is the base class, <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but the return value can be cast safely to the derived class.</source>
          <target state="translated">メソッドの戻り値の型は、基本クラス<bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、派生クラスを戻り値を安全にキャストされることができますが、します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;flags&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>、 <ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>、 <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>、または<ph id="ph4">&lt;code&gt;flags&lt;/code&gt;</ph>に無効な値を指定します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph> is zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>ゼロです。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is neither of type <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, nor of a type such as <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that can be converted to type <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>型のどちらも<bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、やなどの型の<bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>型に変換できる<bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets the type that the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class uses to represent audit rules.</source>
          <target state="translated">型を取得、 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>監査規則を表すクラスします。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt; property and return the type they use to represent audit rights.</source>
          <target state="translated">派生したクラス、&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;クラスのオーバーライド、&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;プロパティと監査権限を表すために使用する型を戻り値&lt;/xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;&lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</source>
          <target state="translated">配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な監査規則の種類を決定します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object representing the <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">A&lt;xref:System.Type&gt;オブジェクトを表す、 <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Searches for an access control rule with the same user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (allow or deny) as the specified access rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</source>
          <target state="translated">同じユーザーがアクセス制御規則を検索し、 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (許可または拒否) ようなルールが見つかった場合、指定されたアクセス規則に含まれる権限がそのから削除されます互換性のある継承と伝達のフラグです。 使用して、指定されたアクセス規則として。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; is searched for a rule that has the same user and the same &lt;xref:System.Security.AccessControl.AccessControlType&gt; value as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">現在&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;は同じユーザーと同じを持つルールの検索は&lt;xref:System.Security.AccessControl.AccessControlType&gt;として値<ph id="ph1">`rule`</ph>&lt;/xref:System.Security.AccessControl.AccessControlType&gt;&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">このような規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">指定されたフラグと互換性のための継承との互換性フラグをチェック照合ルールが見つかった場合、<ph id="ph1">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">互換性のある規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">権限がで指定された互換性フラグを含むルールが見つかった場合、 <ph id="ph1">`rule`</ph> 、互換性のあるルールから削除されますが返されます<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">場合<ph id="ph1">`rule`</ph>互換性のあるルールに含まれていない権限を指定、それらの権利に関するアクションは実行されません。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; object.</source>
          <target state="translated">現在の全体の規則が削除される場合は、すべての権限は、互換性のある規則から削除されます、&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;オブジェクト&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Although you can specify inheritance and propagation flags for event access rules, by creating them with the &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory%2A&gt; method, this is not recommended.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; でそれらを作成することで、イベントのアクセス ルールの継承と伝達のフラグを指定できますが、&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory%2A&gt;メソッド、お勧めしません&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory%2A&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Inheritance and propagation have no meaning for named events, and they make the maintenance of access rules more complicated.</source>
          <target state="translated">継承と伝達に、名前付きイベントの意味がなくと複雑アクセス ルールのメンテナンスを行います。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user and <bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ユーザーを指定し、 <bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>を検索し、ルール、一致する場合の継承と伝達のフラグのセットが見つかりませんと互換性のある必要があります。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">場合は、互換性のあるルールから削除する権限を指定します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a compatible rule is found; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>互換性のある規則が見つかった場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Searches for all access control rules with the same user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (allow or deny) as the specified rule and, if found, removes them.</source>
          <target state="translated">同じユーザーが制御規則をアクセスするすべての検索と<bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (許可または拒否)、指定されたルールし、見つかった場合は、削除にします。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; is searched for rules that have the same user and the same &lt;xref:System.Security.AccessControl.AccessControlType&gt; value as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">現在&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;は同じユーザーと同じであるルールの検索は&lt;xref:System.Security.AccessControl.AccessControlType&gt;として値<ph id="ph1">`rule`</ph>&lt;/xref:System.Security.AccessControl.AccessControlType&gt;&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">指定された権限をまったく<ph id="ph1">`rule`</ph>この検索を実行する場合は無視されます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>All matching rules are removed.</source>
          <target state="translated">すべての照合ルールが削除されます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">照合ルールが見つからない場合、処理は行われません。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user and <bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to search for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ユーザーを指定し、 <bpt id="p2">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>を検索します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">このルールで指定された権限は無視されます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">完全に一致する、指定したアクセス制御規則を検索し、削除を見つかった場合は、そのです。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">ルールが削除されるは、完全に一致する場合にのみ<ph id="ph1">`rule`</ph>フラグを含むすべての詳細。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Other rules with the same user and &lt;xref:System.Security.AccessControl.AccessControlType&gt; are not affected.</source>
          <target state="translated">同じユーザーがその他の規則と&lt;xref:System.Security.AccessControl.AccessControlType&gt;には影響しません&lt;/xref:System.Security.AccessControl.AccessControlType&gt;。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; ルールが&amp;1; つまたは複数基になるアクセス制御エントリ (ACE) を表し、これらのエントリの分割またはユーザーのアクセスのセキュリティ ルールを変更する場合に、必要に応じて、結合します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the RemoveAccessRuleSpecific method cannot remove it.</source>
          <target state="translated">したがって、ルールは、形式が追加されたときに存在しない可能性があります、RemoveAccessRuleSpecific メソッドが削除できない場合。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を削除します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Searches for an audit rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</source>
          <target state="translated">指定した規則と同じユーザーと互換性のある継承および伝達フラグは、監査規則の検索互換性のある規則が見つかった場合、指定されたルールに含まれる権限はそこから削除されます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; is searched for an audit rule that has the same user as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">現在&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;を同一のユーザーを持つ監査規則の検索<ph id="ph1">`rule`</ph>&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">このような規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">指定されたフラグと互換性のための継承との互換性フラグをチェック照合ルールが見つかった場合、<ph id="ph1">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">互換性のある規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">権限がで指定された互換性フラグを含むルールが見つかった場合、 <ph id="ph1">`rule`</ph> 、互換性のあるルールから削除されますが返されます<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">場合<ph id="ph1">`rule`</ph>互換性のあるルールに含まれていない権限を指定、それらの権利に関するアクションは実行されません。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; object.</source>
          <target state="translated">現在の全体の規則が削除される場合は、すべての権限は、互換性のある規則から削除されます、&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;オブジェクト&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Although you can specify inheritance and propagation flags for event audit rules, by creating them with the &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory%2A&gt; method, this is not recommended.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; でそれらを作成することで、イベントの監査規則の継承と伝達のフラグを指定できますが、&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory%2A&gt;メソッド、お勧めしません&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory%2A&gt;。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Inheritance and propagation have no meaning for named events, and they make the maintenance of audit rules more complicated.</source>
          <target state="translated">継承と伝達に、名前付きイベントの意味がなくより複雑な監査規則のメンテナンスを行います。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user to search for and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を検索するユーザーと一致するルールは、継承と伝達のフラグのセットを指定する場合は、互換性がある必要があります。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">場合は、互換性のあるルールから削除する権限を指定します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a compatible rule is found; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>互換性のある規則が見つかった場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</source>
          <target state="translated">場合とすべての監査規則を指定した規則と同じユーザーの検索を発見し、それらを削除します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The current &lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt; is searched for audit rules that have the same user as <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">現在&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;監査規則を持つと同じユーザーが検索<ph id="ph1">`rule`</ph>&lt;/xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">指定された権限をまったく<ph id="ph1">`rule`</ph>この検索を実行する場合は無視されます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>All matching rules are removed.</source>
          <target state="translated">すべての照合ルールが削除されます。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">照合ルールが見つからない場合、処理は行われません。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the user to search for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を検索するユーザーを指定します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">このルールで指定された権限は無視されます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">完全に一致する、指定された監査規則の検索と削除、見つかった場合は、そのします。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">ルールが削除されるは、完全に一致する場合にのみ<ph id="ph1">`rule`</ph>フラグを含むすべての詳細。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Other audit rules for the same user are not affected.</source>
          <target state="translated">同じユーザーの場合は、その他の監査規則には影響しません。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; ルールが&amp;1; つまたは複数基になるアクセス制御エントリ (ACE) を表し、これらのエントリの分割またはユーザーの監査のセキュリティ ルールを変更する場合に、必要に応じて、結合します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the RemoveAuditRuleSpecific method cannot remove it.</source>
          <target state="translated">したがって、ルールは、形式が追加されたときに存在しない可能性があります、RemoveAuditRuleSpecific メソッドが削除できない場合。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を削除します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Removes all access control rules with the same user as the specified rule, regardless of <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and then adds the specified rule.</source>
          <target state="translated">関係なく、指定した規則と同じユーザーを持つすべてのアクセス制御規則を削除<bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、指定されたルールを追加します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If there are no access rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">ユーザーが、指定されたルールに一致するアクセス規則がない場合<ph id="ph1">`rule`</ph>を追加します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">このルールで指定されたユーザーは、この規則を追加する前に削除する規則を決定します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Removes all access control rules with the same user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (allow or deny) as the specified rule, and then adds the specified rule.</source>
          <target state="translated">同じユーザーを持つすべてのアクセス制御規則を削除し、 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (許可または拒否)、指定されたルールとしてし、指定されたルールを追加します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>If the specified rule has &lt;xref:System.Security.AccessControl.AccessControlType&gt;, the effect of this method is to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; rules for the specified user, replacing them with the specified rule.</source>
          <target state="translated">場合は、指定されたルール&lt;xref:System.Security.AccessControl.AccessControlType&gt;をすべて削除するのには、このメソッドの効果&lt;xref:System.Security.AccessControl.AccessControlType&gt;、指定されたルールに置き換える、指定したユーザーのルール&lt;/xref:System.Security.AccessControl.AccessControlType&gt;&lt;/xref:System.Security.AccessControl.AccessControlType&gt;。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If the specified rule has &lt;xref:System.Security.AccessControl.AccessControlType&gt;, all &lt;xref:System.Security.AccessControl.AccessControlType&gt; rules for the specified user are replaced with the specified rule.</source>
          <target state="translated">指定されたルールがある場合&lt;xref:System.Security.AccessControl.AccessControlType&gt;すべて、&lt;xref:System.Security.AccessControl.AccessControlType&gt;指定したユーザーのルールは、指定されたルールに置き換えられます&lt;/xref:System.Security.AccessControl.AccessControlType&gt;&lt;/xref:System.Security.AccessControl.AccessControlType&gt;。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If there are no rules whose user and &lt;xref:System.Security.AccessControl.AccessControlType&gt; match the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">規則がないユーザーの場合と&lt;xref:System.Security.AccessControl.AccessControlType&gt;指定の規則に一致<ph id="ph1">`rule`</ph>が追加されます&lt;/xref:System.Security.AccessControl.AccessControlType&gt;。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The user and <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of this rule determine the rules to remove before this rule is added.</source>
          <target state="translated">ユーザーと<bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>この規則には、この規則を追加する前に削除の規則を決定します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Removes all audit rules with the same user as the specified rule, regardless of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value, and then adds the specified rule.</source>
          <target state="translated">関係なくすべての監査規則、指定されたルールと同じユーザーを削除、 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値に設定して、指定されたルールを追加します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If there are no audit rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">ユーザーが、指定されたルールに一致する監査規則がない場合<ph id="ph1">`rule`</ph>を追加します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">このルールで指定されたユーザーは、この規則を追加する前に削除する規則を決定します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;rule&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>