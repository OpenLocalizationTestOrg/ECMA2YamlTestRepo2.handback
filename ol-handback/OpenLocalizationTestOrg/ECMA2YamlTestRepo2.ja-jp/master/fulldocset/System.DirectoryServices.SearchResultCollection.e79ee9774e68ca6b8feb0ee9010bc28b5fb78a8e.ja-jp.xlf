<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61fa9172ee24569572462862376105d4b0429a1b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.DirectoryServices.SearchResultCollection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41bf9605cd22f5a81736330c32eef9a5eabee9a4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cc58a9d6ae6a792a82777606f14784d54d3823f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The SearchResultCollection class contains the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances that the Active Directory hierarchy returned during a <bpt id="p2">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> query.</source>
          <target state="translated">SearchResultCollection クラスに含まれる、 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中に、Active Directory 階層が返されるインスタンス、 <bpt id="p2">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>クエリ。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Due to implementation restrictions, the SearchResultCollection class cannot release all of its unmanaged resources when it is garbage collected.</source>
          <target state="translated">実装の制限によるもの SearchResultCollection クラスをリリースできませんのすべてのアンマネージ リソースのガベージ コレクションがある場合に。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To prevent a memory leak, you must call the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method when the SearchResultCollection object is no longer needed.</source>
          <target state="translated">メモリ リークを防ぐためには、呼び出す必要があります、 &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;SearchResultCollection オブジェクトが不要になったときのメソッド&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Determines if a specified <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is in this collection.</source>
          <target state="translated">かどうかを指定した<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトがこのコレクションにします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to find.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>検索するオブジェクト。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified property belongs to this collection; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定したプロパティがこのコレクションに属している場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Copies all <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in this collection to the specific array, starting at the specified index in the target array.</source>
          <target state="translated">すべてコピー <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>対象となる配列の指定したインデックスから始まります、特定の配列をこのコレクション内のオブジェクト。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The array of <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that receives the elements of this collection.</source>
          <target state="translated">配列<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>をこのコレクションの要素を受け取るオブジェクト。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`results`</ph> where this method starts copying this collection.</source>
          <target state="translated">内の&amp;0; から始まるインデックス<ph id="ph1">`results`</ph>このメソッドがこのコレクションのコピーを開始します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the number of <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in this collection.</source>
          <target state="translated">数を取得<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>このコレクション内のオブジェクト。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The number of <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in this collection.</source>
          <target state="translated">数<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>このコレクション内のオブジェクト。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Releases all resources that are used by the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">によって使用されているすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Dispose method, it allows the resources that are used by the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; to be reallocated for other purposes.</source>
          <target state="translated">Dispose メソッドによって使用されているリソースは、&lt;xref:System.DirectoryServices.SearchResultCollection&gt;を他の目的に再割り当てされます&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Dispose の詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The garbage collector does not release memory for a &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object.</source>
          <target state="translated">ガベージ コレクターにメモリを解放していない、&lt;xref:System.DirectoryServices.SearchResultCollection&gt;オブジェクト&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Therefore, an application must call the Dispose method explicitly to prevent a memory leak.</source>
          <target state="translated">そのため、アプリケーションでは、メモリ リークを防ぐには、明示的に Dispose メソッドを呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources that are used by the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and optionally releases the managed resources.</source>
          <target state="translated">によって使用されているアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトをオプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">このメソッドは、パブリック&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;メソッドおよび&lt;xref:System.Object.Finalize%2A&gt;メソッド&lt;/xref:System.Object.Finalize%2A&gt;&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; invokes the protected Dispose method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;保護された Dispose メソッドを呼び出し、<ph id="ph1">`disposing`</ph>パラメーターに設定<ph id="ph2">`true`</ph>です。&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes Dispose with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;Dispose を呼び出す、<ph id="ph1">`disposing`</ph>パラメーターに設定<ph id="ph2">`false`</ph>です。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources that are held by any managed objects that this &lt;xref:System.DirectoryServices.SearchResultCollection&gt; references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターは<ph id="ph2">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.DirectoryServices.SearchResultCollection&gt;参照。&lt;/xref:System.DirectoryServices.SearchResultCollection&gt; 。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The garbage collector does not release memory for a &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object.</source>
          <target state="translated">ガベージ コレクターにメモリを解放していない、&lt;xref:System.DirectoryServices.SearchResultCollection&gt;オブジェクト&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Therefore, you must call the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method explicitly to prevent a memory leak.</source>
          <target state="translated">そのため、呼び出す必要があります、&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;メソッドをメモリ リークを防ぐために明示的にします&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method of each object in the collection.</source>
          <target state="translated">このメソッドを呼び出して、&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;コレクション内の各オブジェクトのメソッド&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt; and &lt;xref:System.Object.Finalize%2A&gt;, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;と&lt;xref:System.Object.Finalize%2A&gt;を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>&lt;/xref:System.Object.Finalize%2A&gt;&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&amp;lt;</ph>xref:System.Object.Finalize%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">上書き、 <ph id="ph1">&amp;lt;</ph>xref:System.Object.Finalize%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that you can use to iterate through this collection.</source>
          <target state="translated">このコレクションを反復処理に使用できる列挙子を返します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; object that you can use to iterate through this collection.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;このコレクションを反復処理に使用できるオブジェクト&lt;/xref:System.Collections.IEnumerator&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the handle that is returned by the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> method that performs the actual search.</source>
          <target state="translated">によって返されるハンドルを取得、 <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept>実際の検索を実行するメソッド。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> topic in the MSDN Library at <bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。、 <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept>に MSDN ライブラリの「 <bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The  &lt;xref:System.DirectoryServices.DirectorySearcher&gt; that created this collection calls the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> method, which makes the query results available to the T:System.DirectoryServices.SearchResultCollection object.</source>
          <target state="translated">&lt;xref:System.DirectoryServices.DirectorySearcher&gt;このコレクションを作成する呼び出し、 <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept>メソッドで、クエリの結果をそのオブジェクトを使用できるようにします&lt;/xref:System.DirectoryServices.DirectorySearcher&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> topic in the MSDN Library at <bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。、 <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept>に MSDN ライブラリの「 <bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Each time that a query is performed, a handle for the results of that query is associated with its  &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object.</source>
          <target state="translated">クエリを実行するたびに、そのクエリの結果のハンドルに関連付けられているその&lt;xref:System.DirectoryServices.SearchResultCollection&gt;オブジェクト&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This handle corresponds to the search handle in ADSI.</source>
          <target state="translated">このハンドルは、adsi エディターの検索のハンドルに対応します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This handle persists until you call the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt; method on the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object, so you must call &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt; to prevent a memory leak.</source>
          <target state="translated">このハンドルは、呼び出されるまでが引き続き発生する、&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;メソッドを&lt;xref:System.DirectoryServices.SearchResultCollection&gt;オブジェクトを呼び出す必要がありますので&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;、メモリ リークを防ぐためにします&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The garbage collector does not free memory for this particular object.</source>
          <target state="translated">ガベージ コレクターは、この特定のオブジェクトのメモリを解放しません。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The ADS_SEARCH_HANDLE value that this collection uses.</source>
          <target state="translated">このコレクションが使用する ADS_SEARCH_HANDLE 値。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of the specified <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object in this collection.</source>
          <target state="translated">最初に見つかった位置の指定したインデックスを返します<bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>このコレクション内のオブジェクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to search for in this collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このコレクション内で検索するオブジェクト。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first matching object.</source>
          <target state="translated">最初に一致するオブジェクトの&amp;0; から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns -1 if no member of this collection is identical to the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">このコレクションのメンバーのと同じですが存在しない場合、-1 を返します、 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is located at a specified index in this collection.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このコレクション内の指定したインデックス位置にあるオブジェクト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In C#, this property is the indexer for the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; class.</source>
          <target state="translated">C# の場合、このプロパティは、&lt;xref:System.DirectoryServices.SearchResultCollection&gt;クラス&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;のインデクサー</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</source>
          <target state="translated">JScript では、型によって定義された既定のインデックス付きプロパティを使用することができますが明示的に、自分を定義できません。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and with an index type of &lt;xref:System.String&gt;.</source>
          <target state="translated">ただし、クラスに expando 属性は、既定値を自動的に提供を指定するインデックス付きプロパティの型がオブジェクトと&lt;xref:System.String&gt;.&lt;/xref:System.String&gt;のインデックスの種類</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The zero-based index of the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to retrieve.</source>
          <target state="translated">0 から始まるインデックス、 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is located at the specified index.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したインデックス位置にあるオブジェクト。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> properties that were specified before the search was executed.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>検索を実行する前に指定されたプロパティ。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.String&gt; that contains the properties that were specified in the &lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt; property collection before the search was executed.</source>
          <target state="translated">型の配列&lt;xref:System.String&gt;で指定されたプロパティを格納している、&lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt;検索を実行する前に、プロパティのコレクション&lt;/xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt;&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Copies the elements of the &lt;xref:System.Collections.ICollection&gt; to an &lt;xref:System.Array&gt;, starting at a particular &lt;xref:System.Array&gt; index.</source>
          <target state="translated">要素をコピー、&lt;xref:System.Collections.ICollection&gt;を&lt;xref:System.Array&gt;特定の開始、&lt;xref:System.Array&gt;インデックス&lt;/xref:System.Array&gt;&lt;/xref:System.Array&gt;&lt;/xref:System.Collections.ICollection&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Array&gt; &lt;xref:System.Collections.ICollection&gt;。&lt;/xref:System.Collections.ICollection&gt;からコピーした要素のコピー先である&lt;/xref:System.Array&gt;1 次元</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0 から始まるインデックス番号が必要です&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">内の&amp;0; から始まるインデックス<ph id="ph1">`array`</ph>コピーの開始位置。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>多次元です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is greater than the available space from <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">- または - ソース内の要素の数<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>から使用可能な領域より大きくなって<ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph>変換先の末尾に<ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The type of the source &lt;xref:System.Collections.ICollection&gt; cannot be cast automatically to the type of the destination <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">ソースの種類&lt;xref:System.Collections.ICollection&gt;変換先の型に自動的にキャストすることはできません<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p1">&lt;/code&gt;</ept>&lt;/xref:System.Collections.ICollection&gt; 。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe).</source>
          <target state="translated">アクセスをするかどうかを示す値を取得、&lt;xref:System.Collections.ICollection&gt;が同期されている (スレッド セーフである).&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; returns an object, which can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;&lt;xref:System.Collections.ICollection&gt;。&lt;/xref:System.Collections.ICollection&gt;へのアクセスを同期するために使用できるオブジェクトを返します&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Most collection classes in the &lt;xref:System.Collections?displayProperty=fullName&gt; namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">内のほとんどのコレクション クラス、&lt;xref:System.Collections?displayProperty=fullName&gt;名前空間も、基になるコレクションをラップする同期されたラッパーを提供する同期メソッドを実装します&lt;/xref:System.Collections?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフな方法です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration:      <ph id="ph1">```c#   ICollection myCollection = new ICollection();     lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph>      <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph></source>
          <target state="translated">[Visual Basic、C# の場合]      次のコード例を使用してコレクションをロックする方法を示しています、&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;列挙中に: <ph id="ph1">```c#   ICollection myCollection = new ICollection();     lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph> <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph>       &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe); otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合へのアクセス、&lt;xref:System.Collections.ICollection&gt;が同期 (スレッド セーフな) ですそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt; 。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;。&lt;/xref:System.Collections.ICollection&gt;へのアクセスを同期するために使用できるオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</source>
          <target state="translated">コレクションの基になっているストアがパブリックではない場合、実装が要求を現在のインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's <ph id="ph1">`SyncRoot`</ph> property.</source>
          <target state="translated">現在のインスタンスへのポインターできないことがあります。 その他のコレクションをラップするコレクションには十分に注意してください。基になるコレクションを返す必要があります、<ph id="ph1">`SyncRoot`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Most collection classes in the &lt;xref:System.Collections?displayProperty=fullName&gt; namespace also implement a <ph id="ph1">`Synchronized`</ph> method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">内のほとんどのコレクション クラス、&lt;xref:System.Collections?displayProperty=fullName&gt;名前空間を実装も、<ph id="ph1">`Synchronized`</ph>を基になるコレクションをラップする同期されたラッパーを提供するメソッド&lt;/xref:System.Collections?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>However, derived classes can provide their own synchronized version of the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.</source>
          <target state="translated">ただし、派生クラスは、独自の同期されたバージョンのコレクションを使用して、指定、&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;プロパティ&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The synchronizing code must perform operations on the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; of the collection, not directly on the collection.</source>
          <target state="translated">同期されたコードで操作を実行する必要があります、&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;コレクションの操作は、コレクションの&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">これにより、他のオブジェクトから派生したコレクションを適切に操作します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
          <target state="translated">具体的には、コレクション インスタンスを同時に変更する可能性がある別スレッドとの適切な同期を維持します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In the absence of a <ph id="ph1">`Synchronized`</ph> method on a collection, the expected usage for &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; looks like this:      <ph id="ph2">```c#   ICollection MyCollection =...    lock(MyCollection.SyncRoot) {     // Some operation on the collection, which is now thread safe.    }   ```</ph>       [Visual Basic]      <ph id="ph3">```   Dim myCollection as New ICollection()    SyncLock myCollection.SyncRoot     ' Some operation on the collection, which is now thread safe.    End SyncLock   ```</ph>       Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">ない場合、<ph id="ph1">`Synchronized`</ph>メソッドの使用状況、必要なコレクションを&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;次のよう: <ph id="ph2">```c#   ICollection MyCollection =...    lock(MyCollection.SyncRoot) {     // Some operation on the collection, which is now thread safe.    }   ```</ph> [Visual Basic]<ph id="ph3">```   Dim myCollection as New ICollection()    SyncLock myCollection.SyncRoot     ' Some operation on the collection, which is now thread safe.    End SyncLock   ```</ph>コレクションの列挙は本質的にスレッド セーフな処理&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration:      <ph id="ph1">```c#   ICollection myCollection = new ICollection();    lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph>      <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph></source>
          <target state="translated">[Visual Basic、C# の場合]      次のコード例を使用してコレクションをロックする方法を示しています、&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;列挙中に: <ph id="ph1">```c#   ICollection myCollection = new ICollection();    lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph> <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph>       &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;。&lt;/xref:System.Collections.ICollection&gt;へのアクセスを同期するために使用できるオブジェクト</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>