<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eea5d39fa138db1db722d30397b62477911a2643</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.SortedList.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1622ab7a3e142d470d010b3dd95358ceb457111</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77929b6051f98313b71b605920fefbe82eaba97b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</source>
          <target state="translated">キーにより並べ替えられた、インデックス キーにアクセスできるキー/値ペアのコレクションを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>For the generic version of this collection, see &lt;xref:System.Collections.Generic.SortedList%602?displayProperty=fullName&gt;.</source>
          <target state="translated">このコレクションの汎用バージョン、 &lt;xref:System.Collections.Generic.SortedList%602?displayProperty=fullName&gt;。&lt;/xref:System.Collections.Generic.SortedList%602?displayProperty=fullName&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A SortedList element can be accessed by its key, like an element in any &lt;xref:System.Collections.IDictionary&gt; implementation, or by its index, like an element in any &lt;xref:System.Collections.IList&gt; implementation.</source>
          <target state="translated">SortedList 要素は、いずれかで、要素と同様に、キーを使用してアクセスできる&lt;xref:System.Collections.IDictionary&gt;実装、またはいずれかの要素と同様に、インデックスを使用して&lt;xref:System.Collections.IList&gt;実装&lt;/xref:System.Collections.IList&gt;&lt;/xref:System.Collections.IDictionary&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A SortedList object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</source>
          <target state="translated">SortedList オブジェクトが内部的に、リストの要素を格納する&amp;2; つの配列を保持します。1 つ配列は、キーと関連付けられている値を別の配列。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair that can be accessed as a &lt;xref:System.Collections.DictionaryEntry&gt; object.</source>
          <target state="translated">各要素は、キー/値ペアとしてアクセスできる、&lt;xref:System.Collections.DictionaryEntry&gt;オブジェクト&lt;/xref:System.Collections.DictionaryEntry&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">キーには<ph id="ph1">`null`</ph>値を指定できますが、します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The capacity of a SortedList object is the number of elements the SortedList can hold.</source>
          <target state="translated">SortedList オブジェクトの容量とは、SortedList に格納できる要素の数です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>As elements are added to a SortedList, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">SortedList に要素が追加されるため、容量を増やすは自動的に再割り当て、必要に応じて。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.SortedList.TrimToSize%2A&gt; or by setting the &lt;xref:System.Collections.SortedList.Capacity%2A&gt; property explicitly.</source>
          <target state="translated">呼び出すことによって、容量を削減できる&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;かを設定して、&lt;xref:System.Collections.SortedList.Capacity%2A&gt;プロパティに明示的にします&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;&lt;/xref:System.Collections.SortedList.TrimToSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For very large SortedList objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph1">`enabled`</ph> attribute of the  configuration element to <ph id="ph2">`true`</ph> in the run-time environment.</source>
          <target state="translated">SortedList オブジェクトの非常に大きい場合は、設定して、64 ビット システム上の 20億要素に最大の容量を増やすことができます、<ph id="ph1">`enabled`</ph>構成要素の属性<ph id="ph2">`true`</ph>実行時環境でします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The elements of a SortedList object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the SortedList is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">SortedList オブジェクトの要素のキーに基づいて並べ替えられますか特定に従って&lt;xref:System.Collections.IComparer&gt;、SortedList が作成されるとき、またはによると指定された実装、&lt;xref:System.IComparable&gt;キー自体で提供される実装&lt;/xref:System.IComparable&gt;&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In either case, a SortedList does not allow duplicate keys.</source>
          <target state="translated">どちらの場合、SortedList に重複するキーは許可されません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">インデックス順序は、並べ替え順序に基づいています。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into SortedList in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">要素が追加されると、SortedList に正しい並べ替え順序で挿入され、それに応じてインデックス調整します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">要素が削除されると、インデックス作成もそれに応じて調整します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the SortedList object.</source>
          <target state="translated">そのため、要素が追加または SortedList オブジェクトから削除される、特定のキー/値ペアのインデックスを変更する可能性があります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Operations on a SortedList object tend to be slower than operations on a &lt;xref:System.Collections.Hashtable&gt; object because of the sorting.</source>
          <target state="translated">操作よりも遅いと思われる傾向がありますの SortedList オブジェクトの操作、&lt;xref:System.Collections.Hashtable&gt;並べ替えを行うためのオブジェクト&lt;/xref:System.Collections.Hashtable&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, the SortedList offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</source>
          <target state="translated">ただし、SortedList では、関連するキーまたはインデックスのいずれかの値へのアクセスを許可して柔軟性を提供します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">このコレクション内の要素は、整数インデックスを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">このコレクションのインデックスは&amp;0; から始まります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 言語のステートメント (<ph id="ph2">`for each`</ph> Visual Basic で)、コレクション内の要素の型のオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Since each element of the SortedList object is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">SortedList オブジェクトの各要素が、キー/値ペアであるため、要素の型は、キーの型または値の型。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Rather, the element type is &lt;xref:System.Collections.DictionaryEntry&gt;.</source>
          <target state="translated">代わりに、要素の型は、 &lt;xref:System.Collections.DictionaryEntry&gt;。&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic SortedList Example#2<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.sor_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>Classic SortedList Example#2<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.sor_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic SortedList Example#2<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.sor_1.vb)</ept><ept id="p5">]</ept>       The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated">例: <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>クラシック SortedList 例&amp;2;<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.sor_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>クラシック SortedList 例&amp;2;<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.sor_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>クラシック SortedList 例&amp;2;<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.sor_1.vb)</ept> <ept id="p5">]</ept> 、<ph id="ph1">`foreach`</ph>ステートメントは、コレクションには書き込めませんから読み取りのみが使用できる列挙子のラッパー。    </target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the default initial capacity, and is sorted according to the &lt;xref:System.IComparable&gt; interface implemented by each key added to the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が空で、クラスが既定の初期量を備え、に従って並べ替えられます、&lt;xref:System.IComparable&gt;に追加された各キーによって実装されるインターフェイス、 <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">各キーを実装する必要があります、&lt;xref:System.IComparable&gt;内の他のすべてのキーの比較ができるようにするインターフェイス、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the &lt;xref:System.IComparable&gt; implementation of each key added to the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">要素は、&lt;xref:System.IComparable&gt;各キー &lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;に追加の実装&lt;/xref:System.IComparable&gt;では、に従って並べ替えられます</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量、&lt;xref:System.Collections.SortedList&gt;オブジェクトは、要素の数を&lt;xref:System.Collections.SortedList&gt;を保持できます&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、 &lt;xref:System.Collections.SortedList&gt;、容量は自動的に増加内部の配列を再割り当てによる要求どおり&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">このコンス トラクターは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the default initial capacity, and is sorted according to the specified &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が空で、クラスが既定の初期量を備えされ、並べ替えは、指定に従って&lt;xref:System.Collections.IComparer&gt;インターフェイス&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">要素は、指定に従って&lt;xref:System.Collections.IComparer&gt;実装&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the &lt;xref:System.IComparable&gt; implementation of each key is used; therefore, each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">場合、<ph id="ph1">`comparer`</ph>パラメーターは<ph id="ph2">`null`</ph>、&lt;xref:System.IComparable&gt;各キーによって実装が使用されますしたがって、各キーを実装する必要があります、&lt;xref:System.IComparable&gt;内の他のすべてのキーの比較ができるようにするインターフェイス、&lt;xref:System.Collections.SortedList&gt;オブジェクト。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt; &lt;/xref:System.IComparable&gt; 。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量、&lt;xref:System.Collections.SortedList&gt;オブジェクトは、要素の数を&lt;xref:System.Collections.SortedList&gt;を保持できます&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、 &lt;xref:System.Collections.SortedList&gt;、容量は自動的に増加内部の配列を再割り当てによる要求どおり&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">このコンス トラクターは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing keys.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;キーを比較するときに使用する実装&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the &lt;xref:System.IComparable&gt; implementation of each key.</source>
          <target state="translated">- または - <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を使用する、&lt;xref:System.IComparable&gt;各キーによって実装されます&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the &lt;xref:System.IComparable&gt; interface implemented by each key.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定されたディクショナリからコピーされた要素を含むクラスは、コピーした要素の数と同じ初期量を備えたし、に従って並べ替えられます、&lt;xref:System.IComparable&gt;各キーによって実装されるインターフェイス&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">各キーを実装する必要があります、&lt;xref:System.IComparable&gt;内の他のすべてのキーの比較ができるようにするインターフェイス、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the &lt;xref:System.IComparable&gt; implementation of each key added to the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">要素は、&lt;xref:System.IComparable&gt;各キー &lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;に追加の実装&lt;/xref:System.IComparable&gt;では、に従って並べ替えられます</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Hashtable&gt; object is an example of an &lt;xref:System.Collections.IDictionary&gt; implementation that can be passed to this constructor.</source>
          <target state="translated">A&lt;xref:System.Collections.Hashtable&gt;オブジェクトの例に示します、&lt;xref:System.Collections.IDictionary&gt;このコンス トラクターに渡すことができる実装&lt;/xref:System.Collections.IDictionary&gt;&lt;/xref:System.Collections.Hashtable&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Collections.SortedList&gt; object contains a copy of the keys and values stored in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">新しい&lt;xref:System.Collections.SortedList&gt;オブジェクトには、キーと&lt;xref:System.Collections.Hashtable&gt;。&lt;/xref:System.Collections.Hashtable&gt;に格納されている値のコピーが含まれています。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量、&lt;xref:System.Collections.SortedList&gt;オブジェクトは、要素の数を&lt;xref:System.Collections.SortedList&gt;を保持できます&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、 &lt;xref:System.Collections.SortedList&gt;、容量は自動的に増加内部の配列を再割り当てによる要求どおり&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">このコンス トラクターは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>内の要素の数は、<ph id="ph3">`d`</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; implementation to copy to a new <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;実装を新しいコピーを<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Collections.IDictionary&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>One or more elements in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> do not implement the &lt;xref:System.IComparable&gt; interface.</source>
          <target state="translated">1 つまたは複数の要素で<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">d</ph> <ept id="p1">&lt;/code&gt;</ept>を実装していない、&lt;xref:System.IComparable&gt;インターフェイス&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and is sorted according to the &lt;xref:System.IComparable&gt; interface implemented by each key added to the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が空で、クラスが、指定した初期量、およびに従って並べ替えられます、&lt;xref:System.IComparable&gt;を追加、各キーによって実装されるインターフェイス、 <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">各キーを実装する必要があります、&lt;xref:System.IComparable&gt;内の他のすべてのキーの比較ができるようにするインターフェイス、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the &lt;xref:System.IComparable&gt; implementation of each key added to the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">要素は、&lt;xref:System.IComparable&gt;各キー &lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;に追加の実装&lt;/xref:System.IComparable&gt;では、に従って並べ替えられます</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量、&lt;xref:System.Collections.SortedList&gt;オブジェクトは、要素の数を&lt;xref:System.Collections.SortedList&gt;を保持できます&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、 &lt;xref:System.Collections.SortedList&gt;、容量は自動的に増加内部の配列を再割り当てによる要求どおり&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialCapacity`</ph>.</source>
          <target state="translated">このコンス トラクターは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">`initialCapacity`</ph>します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can contain.</source>
          <target state="translated">最初の要素数を<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトを含めることができます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;initialCapacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;initialCapacity&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to create a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">initialCapacity</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">作成する十分なメモリがない、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したオブジェクト<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">initialCapacity</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and is sorted according to the specified &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が空で、クラスが指定した初期量を備えされ、並べ替えは、指定に従って&lt;xref:System.Collections.IComparer&gt;インターフェイス&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">要素は、指定に従って&lt;xref:System.Collections.IComparer&gt;実装&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the &lt;xref:System.IComparable&gt; implementation of each key is used; therefore, each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">場合、<ph id="ph1">`comparer`</ph>パラメーターは<ph id="ph2">`null`</ph>、&lt;xref:System.IComparable&gt;各キーによって実装が使用されますしたがって、各キーを実装する必要があります、&lt;xref:System.IComparable&gt;内の他のすべてのキーの比較ができるようにするインターフェイス、&lt;xref:System.Collections.SortedList&gt;オブジェクト。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt; &lt;/xref:System.IComparable&gt; 。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量、&lt;xref:System.Collections.SortedList&gt;オブジェクトは、要素の数を&lt;xref:System.Collections.SortedList&gt;を保持できます&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、 &lt;xref:System.Collections.SortedList&gt;、容量は自動的に増加内部の配列を再割り当てによる要求どおり&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">このコンス トラクターは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">`capacity`</ph>します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing keys.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;キーを比較するときに使用する実装&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the &lt;xref:System.IComparable&gt; implementation of each key.</source>
          <target state="translated">- または - <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を使用する、&lt;xref:System.IComparable&gt;各キーによって実装されます&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can contain.</source>
          <target state="translated">最初の要素数を<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトを含めることができます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to create a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">capacity</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">作成する十分なメモリがない、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したオブジェクト<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">capacity</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定したディクショナリからコピーされた要素を含むクラスが、コピーした要素の数と同じ初期量を備えたされ、並べ替えは、指定に従って&lt;xref:System.Collections.IComparer&gt;インターフェイス&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">要素は、指定に従って&lt;xref:System.Collections.IComparer&gt;実装&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the &lt;xref:System.IComparable&gt; implementation of each key is used; therefore, each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">場合、<ph id="ph1">`comparer`</ph>パラメーターは<ph id="ph2">`null`</ph>、&lt;xref:System.IComparable&gt;各キーによって実装が使用されますしたがって、各キーを実装する必要があります、&lt;xref:System.IComparable&gt;内の他のすべてのキーの比較ができるようにするインターフェイス、&lt;xref:System.Collections.SortedList&gt;オブジェクト。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt; &lt;/xref:System.IComparable&gt; 。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Hashtable&gt; object is an example of an &lt;xref:System.Collections.IDictionary&gt; implementation that can be passed to this constructor.</source>
          <target state="translated">A&lt;xref:System.Collections.Hashtable&gt;オブジェクトの例に示します、&lt;xref:System.Collections.IDictionary&gt;このコンス トラクターに渡すことができる実装&lt;/xref:System.Collections.IDictionary&gt;&lt;/xref:System.Collections.Hashtable&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Collections.SortedList&gt; object contains a copy of the keys and values stored in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">新しい&lt;xref:System.Collections.SortedList&gt;オブジェクトには、キーと&lt;xref:System.Collections.Hashtable&gt;。&lt;/xref:System.Collections.Hashtable&gt;に格納されている値のコピーが含まれています。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量、&lt;xref:System.Collections.SortedList&gt;オブジェクトは、要素の数を&lt;xref:System.Collections.SortedList&gt;を保持できます&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、 &lt;xref:System.Collections.SortedList&gt;、容量は自動的に増加内部の配列を再割り当てによる要求どおり&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">コレクションのサイズを推定できる場合に要素を追加するときにサイズ変更操作の数を実行する必要があるの初期量を指定する、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">このコンス トラクターは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>内の要素の数は、<ph id="ph3">`d`</ph>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; implementation to copy to a new <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;実装を新しいコピーを<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Collections.IDictionary&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing keys.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;キーを比較するときに使用する実装&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the &lt;xref:System.IComparable&gt; implementation of each key.</source>
          <target state="translated">- または - <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を使用する、&lt;xref:System.IComparable&gt;各キーによって実装されます&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and one or more elements in <ph id="ph2">&lt;code&gt;d&lt;/code&gt;</ph> do not implement the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、および&amp;1; つまたは複数の要素に<ph id="ph2">&lt;code&gt;d&lt;/code&gt;</ph>を実装していない、<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Adds an element with the specified key and value to a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定したキーと値を持つ要素を追加、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The insertion point is determined based on the comparer selected, either explicitly or by default, when the &lt;xref:System.Collections.SortedList&gt; object was created.</source>
          <target state="translated">カーソルは、比較演算子を選択すると、明示的にまたは既定では、いずれかで決まるときに、&lt;xref:System.Collections.SortedList&gt;オブジェクトが作成されました&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.SortedList.Count%2A&gt; already equals &lt;xref:System.Collections.SortedList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.SortedList&gt; object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">場合&lt;xref:System.Collections.SortedList.Count%2A&gt;既に等しい&lt;xref:System.Collections.SortedList.Capacity%2A&gt;、容量、&lt;xref:System.Collections.SortedList&gt;オブジェクトが内部の配列を自動的に再割り当て増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;&lt;/xref:System.Collections.SortedList.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;xref:System.Collections.SortedList.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.SortedList&gt; object (for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">使用することも、&lt;xref:System.Collections.SortedList.Item%2A&gt;でキーの値を設定して、新しい要素を追加するプロパティが存在しません、&lt;xref:System.Collections.SortedList&gt;オブジェクト (たとえば、 <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>).&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.SortedList&gt;, setting the &lt;xref:System.Collections.SortedList.Item%2A&gt; property overwrites the old value.</source>
          <target state="translated">ただしで指定したキーが既に存在する場合、 &lt;xref:System.Collections.SortedList&gt;、設定、&lt;xref:System.Collections.SortedList.Item%2A&gt;プロパティに古い値が上書きされます&lt;/xref:System.Collections.SortedList.Item%2A&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In contrast, the Add method does not modify existing elements.</source>
          <target state="translated">これに対し、追加のメソッドでは、既存の要素は変更しません。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">要素、&lt;xref:System.Collections.SortedList&gt;オブジェクトは、キーにより並べ替えられたいずれかに従って、特定&lt;xref:System.Collections.IComparer&gt;実装では、ときに指定された、&lt;xref:System.Collections.SortedList&gt;が作成されたかに応じて、&lt;xref:System.IComparable&gt;キー自体で提供される実装&lt;/xref:System.IComparable&gt;&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.IComparer&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">キーには<ph id="ph1">`null`</ph>値を指定できますが、します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>)、並べ替えられていないデータの操作を<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;には</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>It is an O(log <ph id="ph1">`n`</ph>) operation if the new element is added at the end of the list.</source>
          <target state="translated">これは、O (ログ<ph id="ph1">`n`</ph>) 操作の場合は、新しい要素は、リストの末尾に追加します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">カーソルでは、サイズ変更が発生する場合、操作は O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The key of the element to add.</source>
          <target state="translated">追加する要素のキー。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The value of the element to add.</source>
          <target state="translated">追加する要素の値。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An element with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> already exists in the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した要素<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>に既に存在する、 <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is set to use the &lt;xref:System.IComparable&gt; interface, and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p2">&lt;/code&gt;</ept> does not implement the &lt;xref:System.IComparable&gt; interface.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を使用する設定、&lt;xref:System.IComparable&gt;インターフェイス、および<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p2">&lt;/code&gt;</ept>を実装しません、&lt;xref:System.IComparable&gt;インターフェイス&lt;/xref:System.IComparable&gt;&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to add the element to the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要素を追加するための十分な使用可能なメモリがない、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比較演算子は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets the capacity of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得または設定の容量、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Capacity is the number of elements that the &lt;xref:System.Collections.SortedList&gt; object can store.</source>
          <target state="translated">容量は、要素の数を&lt;xref:System.Collections.SortedList&gt;オブジェクトを格納できます&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Count%2A&gt; is the number of elements that are actually in the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Count%2A&gt;実際に&lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;内にある要素の数です。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Capacity is always greater than or equal to &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">容量は、常に&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;以上</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.SortedList.Count%2A&gt; exceeds Capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">場合&lt;xref:System.Collections.SortedList.Count%2A&gt;要素を追加中に容量を超えています、容量は前の要素をコピーして、新しい要素を追加する前に、内部配列の再割り当てによって自動的に増加します&lt;/xref:System.Collections.SortedList.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.SortedList.TrimToSize%2A&gt; or by setting the Capacity property explicitly.</source>
          <target state="translated">呼び出すことによって、容量を削減できる&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;または容量プロパティを明示的に設定します&lt;/xref:System.Collections.SortedList.TrimToSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When the value of Capacity is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">容量の値が明示的に設定されている場合、内部配列が指定した容量に合わせても再割り当てされます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">このプロパティの値を取得する場合は、o (1) 操作です。O は、プロパティの設定 (<ph id="ph1">`n`</ph>) 操作、場所<ph id="ph2">`n`</ph>新しい容量します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The number of elements that the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can contain.</source>
          <target state="translated">要素の数を<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトを含めることができます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The value assigned is less than the current number of elements in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">割り当てられている値が現在の要素数より小さい、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">システムでメモリ不足がありません。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Removes all elements from a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">すべての要素を削除する<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Count%2A&gt; is set to zero and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Count%2A&gt;0 に設定し、コレクションの要素から他のオブジェクトへの参照も解放します。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Capacity%2A&gt; remains unchanged.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;変更されません。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To reset the capacity of the &lt;xref:System.Collections.SortedList&gt; object, call &lt;xref:System.Collections.SortedList.TrimToSize%2A&gt; or set the &lt;xref:System.Collections.SortedList.Capacity%2A&gt; property directly.</source>
          <target state="translated">容量をリセットする、&lt;xref:System.Collections.SortedList&gt;オブジェクトを呼び出す&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;設定や、&lt;xref:System.Collections.SortedList.Capacity%2A&gt;プロパティを直接&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;&lt;/xref:System.Collections.SortedList.TrimToSize%2A&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.SortedList&gt; sets the capacity of the &lt;xref:System.Collections.SortedList&gt; to the default capacity.</source>
          <target state="translated">空のトリミング&lt;xref:System.Collections.SortedList&gt;のキャパシティを設定、&lt;xref:System.Collections.SortedList&gt;を既定の容量&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">簡易コピーを作成、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</source>
          <target state="translated">参照型または値の型が参照先のオブジェクトはコピーされないかどうか、コレクションの簡易コピーは、コレクションの要素のみをコピーします。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">新しいコレクション内の参照は、元のコレクション内の参照をポイントする同じオブジェクトをポイントします。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">これに対し、コレクションのディープ コピーされた要素をコピーして、要素が直接または間接的に参照するすべてです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">簡易コピー、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Determines whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object contains a specific key.</source>
          <target state="translated">決定するかどうか、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトには、特定のキーが含まれています。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">要素、&lt;xref:System.Collections.SortedList&gt;オブジェクトは、キーにより並べ替えられたいずれかに従って、特定&lt;xref:System.Collections.IComparer&gt;実装では、ときに指定された、&lt;xref:System.Collections.SortedList&gt;が作成されたかに応じて、&lt;xref:System.IComparable&gt;キー自体で提供される実装&lt;/xref:System.IComparable&gt;&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.IComparer&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Contains implements &lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">実装して&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;。&lt;/xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;が含まれています</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>It behaves exactly as &lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;。&lt;/xref:System.Collections.SortedList.ContainsKey%2A&gt;とまったく同じように動作します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、バイナリ検索アルゴリズムを使用します。そのため、このメソッドは、O (ログ<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">内で検索するキー、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクトには、指定した要素が含まれています。 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p3">&lt;/code&gt;</ept>、それ以外の<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比較演算子は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Determines whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object contains a specific key.</source>
          <target state="translated">決定するかどうか、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトには、特定のキーが含まれています。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">要素、&lt;xref:System.Collections.SortedList&gt;オブジェクトは、キーにより並べ替えられたいずれかに従って、特定&lt;xref:System.Collections.IComparer&gt;実装では、ときに指定された、&lt;xref:System.Collections.SortedList&gt;が作成されたかに応じて、&lt;xref:System.IComparable&gt;キー自体で提供される実装&lt;/xref:System.IComparable&gt;&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.IComparer&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This method behaves exactly as the &lt;xref:System.Collections.SortedList.Contains%2A&gt; method.</source>
          <target state="translated">このメソッドの動作とまったく同じ、&lt;xref:System.Collections.SortedList.Contains%2A&gt;メソッド&lt;/xref:System.Collections.SortedList.Contains%2A&gt;。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、バイナリ検索アルゴリズムを使用します。そのため、このメソッドは、O (ログ<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">内で検索するキー、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクトには、指定した要素が含まれています。 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p3">&lt;/code&gt;</ept>、それ以外の<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比較演算子は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Determines whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object contains a specific value.</source>
          <target state="translated">決定かどうか、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトには、特定の値が含まれています。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The values of the elements of the &lt;xref:System.Collections.SortedList&gt; object are compared to the specified value using the &lt;xref:System.Object.Equals%2A&gt; method.</source>
          <target state="translated">要素の値、&lt;xref:System.Collections.SortedList&gt;オブジェクトを使用して、指定した値と比較されます、&lt;xref:System.Object.Equals%2A&gt;メソッド&lt;/xref:System.Object.Equals%2A&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, the average execution time is proportional to &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。したがって、平均実行時間は&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;に比例して</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">つまり、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The value to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">内で検索する値、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクトには、指定した要素が含まれています。 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p3">&lt;/code&gt;</ept>、それ以外の<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Copies <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> elements to a one-dimensional &lt;xref:System.Array&gt; object, starting at the specified index in the array.</source>
          <target state="translated">コピー <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要素を&amp;1; 次元&lt;xref:System.Array&gt;オブジェクト、配列の指定したインデックスから始まります&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The key/value pairs are copied to the &lt;xref:System.Array&gt; object in the same order in which the enumerator iterates through the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">キー/値ペアがコピーされた、&lt;xref:System.Array&gt;オブジェクトを列挙子が反復処理する順序と同じ順序で、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>To copy only the keys in the &lt;xref:System.Collections.SortedList&gt;, use <ph id="ph1">`SortedList.Keys.CopyTo`</ph>.</source>
          <target state="translated">内のキーのみをコピーする、&lt;xref:System.Collections.SortedList&gt;を使用して<ph id="ph1">`SortedList.Keys.CopyTo`</ph>&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To copy only the values in the &lt;xref:System.Collections.SortedList&gt;, use <ph id="ph1">`SortedList.Values.CopyTo`</ph>.</source>
          <target state="translated">値だけをコピーする、&lt;xref:System.Collections.SortedList&gt;を使用して<ph id="ph1">`SortedList.Values.CopyTo`</ph>&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; object that is the destination of the &lt;xref:System.Collections.DictionaryEntry&gt; objects copied from <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">1 次元&lt;xref:System.Array&gt;のコピー先であるオブジェクトを&lt;xref:System.Collections.DictionaryEntry&gt;からコピーされるオブジェクト<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Collections.DictionaryEntry&gt; &lt;/xref:System.Array&gt; 。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0 から始まるインデックス番号が必要です&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">内の&amp;0; から始まるインデックス<ph id="ph1">`array`</ph>コピーの開始位置。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>多次元です。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is greater than the available space from <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">- または - ソース内の要素の数<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトがから利用可能な領域よりも大きい<ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>変換先の末尾に<ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">ソースの種類<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>変換先の型に自動的にキャストすることはできません<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Gets the number of elements contained in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">含まれる要素の数を取得、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair that can be accessed as a &lt;xref:System.Collections.DictionaryEntry&gt; object.</source>
          <target state="translated">各要素は、キー/値ペアとしてアクセスできる、&lt;xref:System.Collections.DictionaryEntry&gt;オブジェクト&lt;/xref:System.Collections.DictionaryEntry&gt;。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Capacity%2A&gt; is the number of elements that the &lt;xref:System.Collections.SortedList&gt; object can store.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;要素の数を&lt;xref:System.Collections.SortedList&gt;オブジェクトを格納できます&lt;/xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Count is the number of elements that are actually in the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">数は実際に&lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;内にある要素の数</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Capacity%2A&gt; is always greater than or equal to Count.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;大きいか等しい数には常にします。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If Count exceeds &lt;xref:System.Collections.SortedList.Capacity%2A&gt; while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">数を超える場合&lt;xref:System.Collections.SortedList.Capacity%2A&gt;要素を追加するには、中に容量が前の要素をコピーし、新しい要素を追加する前に、内部配列の再割り当てによって自動的に増加します&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティの値を取得するは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">含まれる要素の数、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets the value at the specified index of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定したインデックス位置の値を取得、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">インデックス順序は、並べ替え順序に基づいています。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">挿入される要素が追加されると、&lt;xref:System.Collections.SortedList&gt;正しい並べ替えの順序、およびインデックス作成もそれに応じて調整します&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">要素が削除されると、インデックス作成もそれに応じて調整します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">要素が追加または削除、したがって、特定のキー/値ペアのインデックスを変更可能性があります、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The zero-based index of the value to get.</source>
          <target state="translated">取得する値の&amp;0; から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The value at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定したインデックスにある値、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>有効なインデックスの範囲外である、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that iterates through a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">返します、&lt;xref:System.Collections.IDictionaryEnumerator&gt;を反復処理するオブジェクト、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Collections.IDictionaryEnumerator&gt;。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 言語のステートメント (<ph id="ph2">`for each`</ph> Visual Basic で)、列挙子の複雑さが隠されています。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">したがってを使用して<ph id="ph1">`foreach`</ph>列挙子を直接操作せずにお勧めします。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;列挙子をこの位置に戻さ点もあります。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">この位置にある&lt;xref:System.Collections.IEnumerator.Current%2A&gt;が定義されていません&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">したがって、 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Current%2A&gt;。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;の値を読み取る前に、コレクションの最初の要素に列挙子を進めるに&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;いずれかのまで同じオブジェクトを返します&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;または&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;と呼びます&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;次の要素にします&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返します<ph id="ph1">`false`</ph>&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;を返すことも<ph id="ph1">`false`</ph>&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">最後の呼び出し場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返される<ph id="ph1">`false`</ph>、&lt;xref:System.Collections.IEnumerator.Current%2A&gt;が定義されていません&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;再度、コレクションの最初の要素を&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;続けて&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;を呼び出すことができます&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;を設定するには</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能とその動作は未定義です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列挙子はコレクションへの排他アクセスがありません。そのため、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">列挙中にスレッドの安全性を保証するためには、列挙中にコレクションをロックできます。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">読み取りと書き込みの複数のスレッドがアクセスするコレクションを許可するのには、独自に同期を実装する必要があります。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionaryEnumerator&gt; object for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionaryEnumerator&gt;オブジェクトに対して、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Collections.IDictionaryEnumerator&gt;。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Gets the key at the specified index of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定したインデックス位置のキーを取得、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">インデックス順序は、並べ替え順序に基づいています。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">挿入される要素が追加されると、&lt;xref:System.Collections.SortedList&gt;正しい並べ替えの順序、およびインデックス作成もそれに応じて調整します&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">要素が削除されると、インデックス作成もそれに応じて調整します。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">要素が追加または削除、したがって、特定のキー/値ペアのインデックスを変更可能性があります、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The zero-based index of the key to get.</source>
          <target state="translated">取得するキーの&amp;0; から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The key at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定したインデックスにあるキーを<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>有効なインデックスの範囲外である、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Gets the keys in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">内のキーを取得する<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Collections.IList&gt; object is a read-only view of the keys of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">返された&lt;xref:System.Collections.IList&gt;オブジェクトは、キーの読み取り専用ビュー、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">基になる&lt;xref:System.Collections.SortedList&gt;&lt;xref:System.Collections.IList&gt;。&lt;/xref:System.Collections.IList&gt;すぐに反映されます&lt;/xref:System.Collections.SortedList&gt;への変更</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The elements of the returned &lt;xref:System.Collections.IList&gt; are sorted in the same order as the keys of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt; &lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;のキーと同じ順序で並べ替えられて&lt;/xref:System.Collections.IList&gt;返されるの要素</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>This method is similar to the &lt;xref:System.Collections.SortedList.Keys%2A&gt; property, but returns an &lt;xref:System.Collections.IList&gt; object instead of an &lt;xref:System.Collections.ICollection&gt; object.</source>
          <target state="translated">このメソッドがに似ていますが、&lt;xref:System.Collections.SortedList.Keys%2A&gt;プロパティが返されます、&lt;xref:System.Collections.IList&gt;オブジェクトの代わりに、&lt;xref:System.Collections.ICollection&gt;オブジェクト&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.IList&gt;&lt;/xref:System.Collections.SortedList.Keys%2A&gt;。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; object containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;オブジェクト内のキーを含む、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Gets the values in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">内の値を取得、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Collections.IList&gt; object is a read-only view of the values of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">返された&lt;xref:System.Collections.IList&gt;オブジェクトは、の値の読み取り専用ビュー、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">基になる&lt;xref:System.Collections.SortedList&gt;&lt;xref:System.Collections.IList&gt;。&lt;/xref:System.Collections.IList&gt;すぐに反映されます&lt;/xref:System.Collections.SortedList&gt;への変更</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The elements of the returned &lt;xref:System.Collections.IList&gt; are sorted in the same order as the values of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt; &lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;の値と同じ順序で並べ替えられて&lt;/xref:System.Collections.IList&gt;返されるの要素</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>This method is similar to the &lt;xref:System.Collections.SortedList.Values%2A&gt; property, but returns an &lt;xref:System.Collections.IList&gt; object instead of an &lt;xref:System.Collections.ICollection&gt; object.</source>
          <target state="translated">このメソッドがに似ていますが、&lt;xref:System.Collections.SortedList.Values%2A&gt;プロパティが返されます、&lt;xref:System.Collections.IList&gt;オブジェクトの代わりに、&lt;xref:System.Collections.ICollection&gt;オブジェクト&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.IList&gt;&lt;/xref:System.Collections.SortedList.Values%2A&gt;。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; object containing the values in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;オブジェクトの値を含む、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Returns the zero-based index of the specified key in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定されたキーの&amp;0; から始まるインデックスを返します、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created, or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">要素、&lt;xref:System.Collections.SortedList&gt;オブジェクトは、キーにより並べ替えられたいずれかに従って、特定&lt;xref:System.Collections.IComparer&gt;実装では、ときに指定された、&lt;xref:System.Collections.SortedList&gt;が作成された、またはそれに対応する、&lt;xref:System.IComparable&gt;キー自体で提供される実装&lt;/xref:System.IComparable&gt;&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.IComparer&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">インデックス順序は、並べ替え順序に基づいています。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">挿入される要素が追加されると、&lt;xref:System.Collections.SortedList&gt;正しい並べ替えの順序、およびインデックス作成もそれに応じて調整します&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">要素が削除されると、インデックス作成もそれに応じて調整します。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">要素が追加または&lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;から削除されるため、特定のキー/値ペアのインデックスを変更可能性があります。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、バイナリ検索アルゴリズムを使用します。そのため、このメソッドは、O (ログ<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">内で検索するキー、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The zero-based index of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object; otherwise, -1.</source>
          <target state="translated">0 から始まるインデックス、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーター場合<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">key</ph> <ept id="p2">&lt;/code&gt;</ept>で見つかった、 <bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>オブジェクトです。 それ以外の場合、-1。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比較演算子は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Returns the zero-based index of the first occurrence of the specified value in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した値の最初に見つかった位置の&amp;0; から始まるインデックスを返します、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">インデックス順序は、並べ替え順序に基づいています。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">挿入される要素が追加されると、&lt;xref:System.Collections.SortedList&gt;正しい並べ替えの順序、およびインデックス作成もそれに応じて調整します&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">要素が削除されると、インデックス作成もそれに応じて調整します。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">要素が追加または削除、したがって、特定のキー/値ペアのインデックスを変更可能性があります、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The values of the elements of the &lt;xref:System.Collections.SortedList&gt; are compared to the specified value using the &lt;xref:System.Object.Equals%2A&gt; method.</source>
          <target state="translated">要素の値、&lt;xref:System.Collections.SortedList&gt;を使用して、指定した値と比較されます、&lt;xref:System.Object.Equals%2A&gt;メソッド&lt;/xref:System.Object.Equals%2A&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>This method uses a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは一方向の検索を使用します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The value to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">内で検索する値、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object; otherwise, -1.</source>
          <target state="translated">最初に見つかった位置の&amp;0; から始まるインデックス、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーター場合<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p2">&lt;/code&gt;</ept>で見つかった、 <bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>オブジェクトです。 それ以外の場合、-1。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが固定サイズです。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">固定サイズ コレクションできない追加または削除の要素のコレクションが作成された後で、既存の要素の変更はできます。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティの値を取得するは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object has a fixed size; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクトが固定サイズです。 それ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">読み取り専用であるコレクション追加、削除、または要素の変更後にできません、コレクションを作成します。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">読み取り専用であるコレクションは、コレクションのコレクションの変更を防止するラッパーです。そのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティの値を取得するは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクトは読み取り専用です。 それ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is synchronized (thread safe).</source>
          <target state="translated">アクセスをするかどうかを示す値を取得、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが同期されている (スレッド セーフである)。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of a &lt;xref:System.Collections.SortedList&gt; object, all operations must be done through the wrapper returned by the &lt;xref:System.Collections.SortedList.Synchronized%2A&gt; method.</source>
          <target state="translated">スレッド セーフを確保する、&lt;xref:System.Collections.SortedList&gt;オブジェクト、によって返されるラッパーを介してすべての操作を行う必要があります、&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;メソッド&lt;/xref:System.Collections.SortedList.Synchronized%2A&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフなプロシージャ</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合へのアクセス、 <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクトが同期されている (スレッド セーフである)、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Gets and sets the value associated with a specific key in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得し、特定のキーに関連付けられている値を設定、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>You can use the Item property to access a specific element in a collection by specifying the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">項目のプロパティを使用するには、次の構文を指定することによって、コレクション内の特定の要素にアクセスする:<ph id="ph1">`myCollection[key]`</ph>です。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>You can also use this property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.SortedList&gt; object (for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue)`</ph>.</source>
          <target state="translated">要素を追加する新しいに存在しないキーの値を設定して、このプロパティを使用することもできます、&lt;xref:System.Collections.SortedList&gt;オブジェクト (たとえば、 <ph id="ph1">`myCollection["myNonexistentKey"] = myValue)`</ph>&lt;/xref:System.Collections.SortedList&gt; 。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.SortedList&gt;, setting the Item property overwrites the old value.</source>
          <target state="translated">ただしで指定したキーが既に存在する場合、 &lt;xref:System.Collections.SortedList&gt;、古い値を上書きする項目のプロパティを設定します&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>In contrast, the &lt;xref:System.Collections.SortedList.Add%2A&gt; method does not modify existing elements.</source>
          <target state="translated">これに対し、&lt;xref:System.Collections.SortedList.Add%2A&gt;メソッドでは、既存の要素は変更しません&lt;/xref:System.Collections.SortedList.Add%2A&gt;。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">キーには<ph id="ph1">`null`</ph>値を指定できますが、します。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the &lt;xref:System.Collections.SortedList.Contains%2A&gt; method or the &lt;xref:System.Collections.SortedList.ContainsKey%2A&gt; method to determine if the key exists in the list.</source>
          <target state="translated">区別するために<ph id="ph1">`null`</ph>指定したキーが見つからないため、返されると<ph id="ph2">`null`</ph>指定したキーの値が返される<ph id="ph3">`null`</ph>を使用して、&lt;xref:System.Collections.SortedList.Contains%2A&gt;メソッドまたは&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;一覧で、キーが存在するかどうかを決定するメソッド&lt;/xref:System.Collections.SortedList.ContainsKey%2A&gt;&lt;/xref:System.Collections.SortedList.Contains%2A&gt;。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">要素、&lt;xref:System.Collections.SortedList&gt;キーにより並べ替えられた、固有の仕様に従って、&lt;xref:System.Collections.IComparer&gt;実装では、ときに指定された、&lt;xref:System.Collections.SortedList&gt;が作成されたかに応じて、&lt;xref:System.IComparable&gt;キー自体で提供される実装&lt;/xref:System.IComparable&gt;&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.IComparer&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the &lt;xref:System.Collections.SortedList.Keys%2A&gt;property.</source>
          <target state="translated">C# 言語キーワードを使用して実装する代わりに、インデクサーの定義、&lt;xref:System.Collections.SortedList.Keys%2A&gt;プロパティ&lt;/xref:System.Collections.SortedList.Keys%2A&gt;。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Visual Basic implements Item as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic では、同様のインデックス機能を提供する既定のプロパティとして項目を実装します。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">O は、このプロパティの値を取得する (ログ<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Setting the property is an O(log <ph id="ph1">`n`</ph>) operation if the key is already in the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">プロパティの設定は、O (ログ<ph id="ph1">`n`</ph>) キーが既に存在&lt;xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList&gt;場合の操作。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>If the key is not in the list, setting the property is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, or O(log <ph id="ph2">`n`</ph>) if the new element is added at the end of the list.</source>
          <target state="translated">キーがない場合、一覧で、プロパティの設定は O (<ph id="ph1">`n`</ph>)、並べ替えられていないデータまたは O の操作 (ログ<ph id="ph2">`n`</ph>) 場合は、新しい要素は、リストの末尾に追加します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">カーソルでは、サイズ変更が発生する場合、操作は O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The key associated with the value to get or set.</source>
          <target state="translated">取得または設定する値に関連付けられたキー。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The value associated with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter in the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">関連付けられている値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>内のパラメーター、 <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>場合<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">key</ph> <ept id="p3">&lt;/code&gt;</ept>以外、それ以外の場合は、 <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The property is set and the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated">プロパティが設定され、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>-or-       The property is set, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the collection, and the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または - プロパティが設定されて、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept> 、コレクションに存在しません、 <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>固定サイズです。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to add the element to the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要素を追加するための十分な使用可能なメモリがない、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比較演算子は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Gets the keys in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">内のキーを取得する<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; object is a read-only view of the keys of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;オブジェクトは、キーの読み取り専用ビュー、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.ICollection&gt;。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">基になる&lt;xref:System.Collections.SortedList&gt;&lt;xref:System.Collections.ICollection&gt;。&lt;/xref:System.Collections.ICollection&gt;すぐに反映されます&lt;/xref:System.Collections.SortedList&gt;への変更</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ICollection&gt; are sorted in the same order as the keys of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt; &lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;のキーと同じ順序で並べ替えられた&lt;/xref:System.Collections.ICollection&gt;要素</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>This property is similar to the &lt;xref:System.Collections.SortedList.GetKeyList%2A&gt; method, but returns an &lt;xref:System.Collections.ICollection&gt; object instead of an &lt;xref:System.Collections.IList&gt; object.</source>
          <target state="translated">このプロパティがに似ていますが、&lt;xref:System.Collections.SortedList.GetKeyList%2A&gt;メソッド、コードが返されます、&lt;xref:System.Collections.ICollection&gt;オブジェクトの代わりに、&lt;xref:System.Collections.IList&gt;オブジェクト&lt;/xref:System.Collections.IList&gt;&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.SortedList.GetKeyList%2A&gt;。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;オブジェクト内のキーを含む、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Collections.ICollection&gt;。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Removes the element with the specified key from a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定したキーを持つ要素を削除する<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.SortedList&gt; object does not contain an element with the specified key, the &lt;xref:System.Collections.SortedList&gt; remains unchanged.</source>
          <target state="translated">場合、&lt;xref:System.Collections.SortedList&gt;オブジェクトに指定のキーを持つ要素が含まれていません、&lt;xref:System.Collections.SortedList&gt;は変更されません&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>No exception is thrown.</source>
          <target state="translated">例外はスローされません。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションで、削除された要素に続く要素上へ移動繰りにします。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">場合は、コレクションのインデックスが、移動した要素のインデックスも更新します。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素がハッシュ テーブルなどのバケットにグループ化概念的にはコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The key of the element to remove.</source>
          <target state="translated">削除する要素のキー。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified index of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定したインデックス位置にある要素を削除、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">インデックス順序は、並べ替え順序に基づいています。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">挿入される要素が追加されると、&lt;xref:System.Collections.SortedList&gt;正しい並べ替えの順序、およびインデックス作成もそれに応じて調整します&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">要素が削除されると、インデックス作成もそれに応じて調整します。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">要素が追加または削除、したがって、特定のキー/値ペアのインデックスを変更可能性があります、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションで、削除された要素に続く要素上へ移動繰りにします。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">場合は、コレクションのインデックスが、移動した要素のインデックスも更新します。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素がハッシュ テーブルなどのバケットにグループ化概念的にはコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">削除する要素の&amp;0; から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>有効なインデックスの範囲外である、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Replaces the value at a specific index in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">特定のインデックスの値で置き換え、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">インデックス順序は、並べ替え順序に基づいています。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">挿入される要素が追加されると、&lt;xref:System.Collections.SortedList&gt;正しい並べ替えの順序、およびインデックス作成もそれに応じて調整します&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">要素が削除されると、インデックス作成もそれに応じて調整します。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">要素が追加または削除、したがって、特定のキー/値ペアのインデックスを変更可能性があります、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The zero-based index at which to save <ph id="ph1">`value`</ph>.</source>
          <target state="translated">保存先となる位置の&amp;0; から始まるインデックス<ph id="ph1">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to save into the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;に保存する、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>有効なインデックスの範囲外である、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Returns a synchronized (thread-safe) wrapper for a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">同期 (スレッド セーフである) ラッパーを返します、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of a &lt;xref:System.Collections.SortedList&gt; object, all operations must be done through this wrapper only.</source>
          <target state="translated">スレッド セーフを確保する、&lt;xref:System.Collections.SortedList&gt;オブジェクト、このラッパーのみを通じてすべての操作を行う必要があります&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフなプロシージャ</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to synchronize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を同期するオブジェクト。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>A synchronized (thread-safe) wrapper for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A 同期 (スレッド セーフである) ラッパーを<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">アクセスを同期するために使用できるオブジェクトを取得する<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>To create a synchronized version of the &lt;xref:System.Collections.SortedList&gt; object, use the &lt;xref:System.Collections.SortedList.Synchronized%2A&gt; method.</source>
          <target state="translated">同期されたバージョンを作成する、&lt;xref:System.Collections.SortedList&gt;オブジェクトを使用して、&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;メソッド&lt;/xref:System.Collections.SortedList.Synchronized%2A&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>However, derived classes can provide their own synchronized version of the &lt;xref:System.Collections.SortedList&gt; using the SyncRoot property.</source>
          <target state="translated">ただし、派生クラスは、独自の同期されたバージョンを指定、 &lt;xref:System.Collections.SortedList&gt;SyncRoot プロパティを使用します&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.SortedList&gt;, not directly on the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">同期されたコードでの操作を実行する必要があります、 &lt;xref:System.Collections.SortedList&gt;、 &lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;で直接&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">これにより、他のオブジェクトから派生したコレクションを適切に操作します。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">具体的には、同時に変更する可能性がある別スレッドとの適切な同期を維持、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフなプロシージャ</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">アクセスを同期するために使用できるオブジェクト、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; that iterates through the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返します、&lt;xref:System.Collections.IEnumerator&gt;を反復処理する、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Collections.IEnumerator&gt; 。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic、C# の場合]      <ph id="ph1">`foreach`</ph> C# 言語のステートメント (<ph id="ph2">`for each`</ph> Visual Basic で)、列挙子の複雑さが隠されています。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">したがってを使用して<ph id="ph1">`foreach`</ph>列挙子を直接操作せずにお勧めします。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;列挙子をこの位置に戻さ点もあります。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>At this position, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">この位置で、呼び出す&lt;xref:System.Collections.IEnumerator.Current%2A&gt;例外をスローします&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">したがって、 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Current%2A&gt;。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;の値を読み取る前に、コレクションの最初の要素に列挙子を進めるに&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;いずれかのまで同じオブジェクトを返します&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;または&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;と呼びます&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;次の要素にします&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返します<ph id="ph1">`false`</ph>&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;を返すことも<ph id="ph1">`false`</ph>&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">場合は、最後の呼び出し&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返される<ph id="ph1">`false`</ph>、呼び出し元&lt;xref:System.Collections.IEnumerator.Current%2A&gt;例外をスローします&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;再度、コレクションの最初の要素を&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;続けて&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;を呼び出すことができます&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;を設定するには</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能な無効なり、次を&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;xref:System.InvalidOperationException&gt;。&lt;/xref:System.InvalidOperationException&gt;がスロー&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;または&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">間で、コレクションが変更された場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;と&lt;xref:System.Collections.IEnumerator.Current%2A&gt;、&lt;xref:System.Collections.IEnumerator.Current%2A&gt;列挙子が既に無効になっている場合でもに設定されている要素を返します&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列挙子はコレクションへの排他アクセスがありません。そのため、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Sets the capacity to the actual number of elements in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">実際の要素数を容量を設定、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">このメソッドは、コレクションのメモリ オーバーヘッドを最小要素がコレクションに追加されない場合に使用できます。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>To reset a &lt;xref:System.Collections.SortedList&gt; object to its initial state, call the &lt;xref:System.Collections.SortedList.Clear%2A&gt; method before calling TrimToSize.</source>
          <target state="translated">リセット、&lt;xref:System.Collections.SortedList&gt;を呼び出し、初期状態のオブジェクト、 &lt;xref:System.Collections.SortedList.Clear%2A&gt;TrimToSize を呼び出す前にメソッド&lt;/xref:System.Collections.SortedList.Clear%2A&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.SortedList&gt; sets the capacity of the &lt;xref:System.Collections.SortedList&gt; to the default capacity.</source>
          <target state="translated">空のトリミング&lt;xref:System.Collections.SortedList&gt;のキャパシティを設定、&lt;xref:System.Collections.SortedList&gt;を既定の容量&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList&gt;。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Gets the values in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">内の値を取得、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; object is a read-only view of the values of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;オブジェクトは、の値の読み取り専用ビュー、&lt;xref:System.Collections.SortedList&gt;オブジェクト&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.ICollection&gt;。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">基になる&lt;xref:System.Collections.SortedList&gt;&lt;xref:System.Collections.ICollection&gt;。&lt;/xref:System.Collections.ICollection&gt;すぐに反映されます&lt;/xref:System.Collections.SortedList&gt;への変更</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ICollection&gt; are sorted in the same order as the values of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt; &lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;の値と同じ順序で並べ替えられた&lt;/xref:System.Collections.ICollection&gt;要素</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>This property is similar to the &lt;xref:System.Collections.SortedList.GetValueList%2A&gt; method, but returns an &lt;xref:System.Collections.ICollection&gt; object instead of an &lt;xref:System.Collections.IList&gt; object.</source>
          <target state="translated">このプロパティがに似ていますが、&lt;xref:System.Collections.SortedList.GetValueList%2A&gt;メソッド、コードが返されます、&lt;xref:System.Collections.ICollection&gt;オブジェクトの代わりに、&lt;xref:System.Collections.IList&gt;オブジェクト&lt;/xref:System.Collections.IList&gt;&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.SortedList.GetValueList%2A&gt;。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing the values in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;オブジェクトの値を含む、 <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Collections.ICollection&gt;。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>