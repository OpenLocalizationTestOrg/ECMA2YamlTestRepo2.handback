<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ad8edce4d94157fda2057cf709dfbb3426bd2be</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9f867523beafabbf48f41c9ccea457d230bfbea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3383aa117017c3e5bdedb0ed2a60399948f1b4fd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides base definitions for classes that consume XAML input and produce XAML node streams.</source>
          <target state="translated">XAML 入力を処理し、XAML ノード ストリームを生成するクラスの基本定義を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XamlReader is an abstract class and does not provide implementations or definitions that have a working result for all members.</source>
          <target state="translated">XamlReader は抽象クラスであり、実装や作業結果があるすべてのメンバーの定義を提供しません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Members that do have an implementation in XamlReader are noted in the remarks for that member.</source>
          <target state="translated">XamlReader で、実装ではメンバーは、そのメンバーの「解説」に記載されていますいます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Specifically, XamlReader has several abstract members that must be implemented, and several virtual members.</source>
          <target state="translated">具体的には、XamlReader では、実装する必要があるいくつかの抽象メンバーといくつかの仮想メンバーがあります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Of the virtual members, &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt; and &lt;xref:System.Xaml.XamlReader.Skip%2A&gt; each provide a default implementation that is appropriate for most cases.</source>
          <target state="translated">仮想メンバーの&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;と&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;各ほとんどの場合に適切な既定の実装を提供します&lt;/xref:System.Xaml.XamlReader.Skip%2A&gt;&lt;/xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, the &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt; and &lt;xref:System.Xaml.XamlReader.Skip%2A&gt; default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the &lt;xref:System.Xaml.XamlReader.Read%2A&gt; override.</source>
          <target state="translated">ただし、&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;と&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;実装の XAML リーダーの他の予期される動作に依存して既定の実装です具体的には、依存している、&lt;xref:System.Xaml.XamlReader.Read%2A&gt;をオーバーライドします。&lt;/xref:System.Xaml.XamlReader.Read%2A&gt; &lt;/xref:System.Xaml.XamlReader.Skip%2A&gt; &lt;/xref:System.Xaml.XamlReader.ReadSubtree%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlReader.Dispose%2A&gt; is also a virtual member that has a working default implementation.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlReader.Dispose%2A&gt;作業用の既定の実装を持つ仮想メンバーです。&lt;/xref:System.Xaml.XamlReader.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:      -   &lt;xref:System.Xaml.XamlObjectReader&gt;, which reads an object graph, such as the active object graph of an application at run time.</source>
          <target state="translated">次の&amp;2; つのクラスは、最も関連して、実用的な派生と System.Xaml アセンブリの .NET Framework XAML サービスのクラス:- &lt;xref:System.Xaml.XamlObjectReader&gt;、実行時にアプリケーションのアクティブなオブジェクト グラフなど、オブジェクト グラフを読み取ります&lt;/xref:System.Xaml.XamlObjectReader&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xaml.XamlXmlReader&gt;, which reads XAML in the form of a XML text file by using a general &lt;xref:System.Xml.XmlReader&gt; that loads the file as an intermediary helper class.</source>
          <target state="translated">-&lt;xref:System.Xaml.XamlXmlReader&gt;&lt;xref:System.Xml.XmlReader&gt;中間ヘルパー クラスとしてファイルを読み込む&lt;/xref:System.Xml.XmlReader&gt;の [全般] を使用して XML テキスト ファイルの形式で XAML を読み取りますが、&lt;/xref:System.Xaml.XamlXmlReader&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Other XAML readers from other frameworks include &lt;xref:System.Windows.Baml2006.Baml2006Reader&gt; and &lt;xref:System.Activities.Debugger.XamlDebuggerXmlReader&gt;.</source>
          <target state="translated">その他のフレームワークから他の XAML リーダー、&lt;xref:System.Windows.Baml2006.Baml2006Reader&gt;および&lt;xref:System.Activities.Debugger.XamlDebuggerXmlReader&gt;。&lt;/xref:System.Activities.Debugger.XamlDebuggerXmlReader&gt; &lt;/xref:System.Windows.Baml2006.Baml2006Reader&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>XamlReader differs from <ph id="ph1">[!INCLUDE[TLA#tla_xmldom](~/add/includes/tlasharptla-xmldom-md.md)]</ph> and &lt;xref:System.Xml.XmlReader&gt; design principles because XamlReader does not have a <ph id="ph2">`Create`</ph> method to return underlying default XAML reader implementations.</source>
          <target state="translated">XamlReader とは異なります<ph id="ph1">[!INCLUDE[TLA#tla_xmldom](~/add/includes/tlasharptla-xmldom-md.md)]</ph>と&lt;xref:System.Xml.XmlReader&gt;XamlReader があるないためにのデザイン原則を<ph id="ph2">`Create`</ph>基になる既定の XAML リーダーの実装を返すメソッドを&lt;/xref:System.Xml.XmlReader&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.</source>
          <target state="translated">代わりに、そのコンス トラクターまたはその他のクラスに固有のヘルパー Api を呼び出すことによって派生の特定の XAML リーダー クラスをインスタンス化する必要があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Subtree Readers    For the most part, you call XamlReader API in the context of specific XAML reader classes that derive from XamlReader.</source>
          <target state="translated">ほとんどのリーダーのサブツリー、XamlReader から派生する特定の XAML リーダー クラスのコンテキストで XamlReader API を呼び出します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, in one particular case, you access XamlReader API on a practical XAML reader instance that is not public and not derived from &lt;xref:System.Xaml.XamlObjectReader&gt; or &lt;xref:System.Xaml.XamlXmlReader&gt;.</source>
          <target state="translated">ただし、特定の&amp;1; つのケースではアクセス XamlReader API とパブリックでない&lt;xref:System.Xaml.XamlObjectReader&gt;または&lt;xref:System.Xaml.XamlXmlReader&gt;.&lt;/xref:System.Xaml.XamlXmlReader&gt;&lt;/xref:System.Xaml.XamlObjectReader&gt;から派生ではない実用的な XAML リーダー インスタンスの</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This case is when you call &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;, which returns a XamlReader instance.</source>
          <target state="translated">この例を呼び出すときは、 &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;、XamlReader インスタンスが返されます&lt;/xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the default implementation, the XamlReader that is returned by this API is an internal class.</source>
          <target state="translated">既定の実装では、この API によって返される XamlReader は、内部クラスです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The XamlReader obtained for subtree reading has valid actions for APIs such as &lt;xref:System.Xaml.XamlReader.Read%2A&gt; and &lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;, and those actions are based on the parent reader class.</source>
          <target state="translated">サブツリーの読み取りなど、Api の有効なアクションには、XamlReader が取得された&lt;xref:System.Xaml.XamlReader.Read%2A&gt;と&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;、それらのアクションが親リーダー クラスに基づいています&lt;/xref:System.Xaml.XamlReader.NodeType%2A&gt;&lt;/xref:System.Xaml.XamlReader.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This design enables the internal class to track the frame level where the subtree was entered.</source>
          <target state="translated">この設計により、内部クラスのサブツリーが入力されたフレームのレベルを追跡するためになります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The acting subtree XamlReader makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or <ph id="ph1">`null`</ph> at the current node.</source>
          <target state="translated">機能を実行するサブツリー XamlReader により、現在のノードの位置は、サブツリーの境界外に移動する場合は、特定のサブツリー リーダー ファイルの終端と報告されることを確認または<ph id="ph1">`null`</ph>現在のノードにします。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Notes about subtree reader usage are included on certain XamlReader APIs.</source>
          <target state="translated">特定の XamlReader Api では、サブツリーのリーダーの使用状況に関する注意事項が含まれています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes the <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初期化、 <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Closes the XAML node stream.</source>
          <target state="translated">XAML ノード ストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the base implementation, calling Close calls &lt;xref:System.Xaml.XamlReader.Dispose%2A&gt; with the <ph id="ph1">`isDisposing`</ph> parameter as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">基底クラスの実装では、Close の呼び出しを呼び出して&lt;xref:System.Xaml.XamlReader.Dispose%2A&gt;で、<ph id="ph1">`isDisposing`</ph>パラメーターとして<ph id="ph2">`true`</ph>&lt;/xref:System.Xaml.XamlReader.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and optionally, releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、し、必要に応じてマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You must call the base class to get &lt;xref:System.Xaml.XamlReader.IsDisposed%2A&gt; = <ph id="ph1">`true`</ph>.</source>
          <target state="translated">取得する基本クラスを呼び出す必要があります&lt;xref:System.Xaml.XamlReader.IsDisposed%2A&gt;= <ph id="ph1">`true`</ph>&lt;/xref:System.Xaml.XamlReader.IsDisposed%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release the managed resources; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ リソースを解放するにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets whether &lt;xref:System.Xaml.XamlReader.Dispose*&gt; has been called.</source>
          <target state="translated">取得するかどうか&lt;xref:System.Xaml.XamlReader.Dispose*&gt;呼び出されました&lt;/xref:System.Xaml.XamlReader.Dispose*&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if &lt;xref:System.Xaml.XamlReader.Dispose*&gt; has been called; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合&lt;xref:System.Xaml.XamlReader.Dispose*&gt;と呼ばれる、それ以外のされました<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Xaml.XamlReader.Dispose*&gt; 。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.</source>
          <target state="translated">派生クラスとして実装された場合は、リーダーの位置が、ファイルの終端にするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Subtree readers can call IsEof, with behavior that correctly reflects the bounds of the entered subtree.</source>
          <target state="translated">サブツリーのリーダーは、入力されたサブツリーの境界を正しく反映して動作を持つ IsEof を呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」 &lt;xref:System.Xaml.XamlReader&gt;、または参照してください&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.&lt;/xref:System.Xaml.XamlReader.ReadSubtree%2A&gt; &lt;/xref:System.Xaml.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the position is at the conceptual end-of-file of the XAML node stream; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>位置が、XAML ノード ストリームの概念ファイルの末尾にある場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生クラスで実装された場合、現在のメンバーを取得リーダーの位置では、リーダーの位置は場合、 <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Subtree readers can call Member, with behavior restrictions.</source>
          <target state="translated">サブツリーのリーダーは、動作の制限があります、メンバーを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」 &lt;xref:System.Xaml.XamlReader&gt;、または参照してください&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.&lt;/xref:System.Xaml.XamlReader.ReadSubtree%2A&gt; &lt;/xref:System.Xaml.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The current member; or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if the reader position is not on a member.</source>
          <target state="translated">現在のメンバー。または<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>リーダーの位置がメンバーでない場合、します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the XAML namespace information from the current node.</source>
          <target state="translated">派生クラスとして実装された場合は、現在のノードから XAML 名前空間情報を取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The intended design of this API is to return a non-null result only if the &lt;xref:System.Xaml.XamlReader.NodeType%2A&gt; of the current node is &lt;xref:System.Xaml.XamlNodeType&gt;.</source>
          <target state="translated">この API の目的の設計が&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;&lt;xref:System.Xaml.XamlNodeType&gt;。&lt;/xref:System.Xaml.XamlNodeType&gt;は、現在のノードの&lt;/xref:System.Xaml.XamlReader.NodeType%2A&gt;場合は null 以外の結果のみを返すには</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context.</source>
          <target state="translated">プロパティでは、XAML スキーマ コンテキストで解釈されるよう、オブジェクトまたは一般的なスコープの意味、メンバーに適用される XAML 名前空間は報告されません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer.</source>
          <target state="translated">アプリケーションは、機能の情報をキャッシュするための手段を提供する必要がありますのでの XAML 名前空間は、方法、XAML スキーマ コンテキストにレポートをそのライター以外の方法では、その情報が必要な場合、XAML ノードを通過する時間します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See&lt;xref:System.Xaml.XamlXmlReader.Namespace%2A&gt; for notes on the reference implementation.</source>
          <target state="translated">参照してください&lt;xref:System.Xaml.XamlXmlReader.Namespace%2A&gt;の参照の実装に関する注意事項&lt;/xref:System.Xaml.XamlXmlReader.Namespace%2A&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The XAML namespace information, if it is available; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">使用可能である場合の XAML 名前空間については、それ以外の場合、 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the type of the current node.</source>
          <target state="translated">派生クラスとして実装された場合は、現在のノードの種類を取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Subtree readers can call NodeType, with behavior restrictions.</source>
          <target state="translated">サブツリーのリーダーは、動作の制限があります NodeType を呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」 &lt;xref:System.Xaml.XamlReader&gt;、または参照してください&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.&lt;/xref:System.Xaml.XamlReader.ReadSubtree%2A&gt; &lt;/xref:System.Xaml.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A value of the <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">値、 <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, provides the next XAML node from the source, if a node is available.</source>
          <target state="translated">派生クラスとして実装された場合は、ノードがある場合、ソースから次の XAML ノードを提供します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Subtree readers can call Read, with behavior restrictions.</source>
          <target state="translated">サブツリーのリーダーは、動作の制限を読み取りを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」 &lt;xref:System.Xaml.XamlReader&gt;、または参照してください&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.&lt;/xref:System.Xaml.XamlReader.ReadSubtree%2A&gt; &lt;/xref:System.Xaml.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a node is available; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ノードがある場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on the current <bpt id="p2">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, where the returned <bpt id="p3">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> is used to iterate through a subtree of the XAML node structure.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在に基づく<bpt id="p2">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>ここで、返された<bpt id="p3">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> XAML ノードの構造のサブツリーを反復処理するために使用します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This method has a default implementation and returns a valid &lt;xref:System.Xaml.XamlReader&gt;.</source>
          <target state="translated">このメソッドは、既定の実装を持つし、有効な&lt;xref:System.Xaml.XamlReader&gt;。&lt;/xref:System.Xaml.XamlReader&gt;を返します</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Xaml.XamlReader&gt; is an internal class that restricts certain &lt;xref:System.Xaml.XamlReader&gt; actions.</source>
          <target state="translated">返された&lt;xref:System.Xaml.XamlReader&gt;特定を制限する内部クラスは、&lt;xref:System.Xaml.XamlReader&gt;アクション&lt;/xref:System.Xaml.XamlReader&gt;&lt;/xref:System.Xaml.XamlReader&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or <ph id="ph1">`null`</ph> at the current node when the subtree is exited.</source>
          <target state="translated">制限は次元設定されたサブツリーの XAML ノード セットは、大規模ソースとファイルの終端を返すだけに読み取り目的に設定された一貫性のあるまたは<ph id="ph1">`null`</ph>サブツリーが終了したときに、現在のノードにします。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Generally, you should check the current node from the initial &lt;xref:System.Xaml.XamlReader.Read%2A&gt; to determine whether you need a subtree reader.</source>
          <target state="translated">一般に、最初から現在のノードを確認する必要があります&lt;xref:System.Xaml.XamlReader.Read%2A&gt;サブツリー リーダーが必要かどうかを判断する&lt;/xref:System.Xaml.XamlReader.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree.</source>
          <target state="translated">これをチェックする方法があります実装に固有です。ただし、すべてのサブツリーの複数のサブツリー リーダーを作成しないでください。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In addition, avoid invoking a subtree reader for certain node cases (for example, for &lt;xref:System.Xaml.XamlNodeType&gt;) that cannot contain a subtree of nodes.</source>
          <target state="translated">さらに、特定のノードのケースのサブツリー リーダーの呼び出しを回避する (たとえば、 &lt;xref:System.Xaml.XamlNodeType&gt;) ノードのサブツリーを含めることはできません&lt;/xref:System.Xaml.XamlNodeType&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>After you obtain a subtree reader, you must call &lt;xref:System.Xaml.XamlReader.Read%2A&gt; on it to obtain a current node (or call &lt;xref:System.Xaml.XamlReader.Skip%2A&gt; to obtain a next node).</source>
          <target state="translated">サブツリーのリーダーを取得した後に呼び出す必要があります&lt;xref:System.Xaml.XamlReader.Read%2A&gt;現在のノードを取得することで (呼び出しまたは&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;次のノードを取得する).&lt;/xref:System.Xaml.XamlReader.Skip%2A&gt; &lt;/xref:System.Xaml.XamlReader.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You do not automatically obtain an initial node position from the subtree reader when you create it.</source>
          <target state="translated">自動的に取得しない初期ノード位置サブツリー リーダーから作成するときにします。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The reader you obtain by calling ReadSubtree from this default implementation is an internal class.</source>
          <target state="translated">この既定の実装から ReadSubtree を呼び出すことによって取得するリーダーは、内部クラスです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The internal class bases its behavior on the &lt;xref:System.Xaml.XamlReader&gt; implementation that is being used when ReadSubtree is called.</source>
          <target state="translated">内部クラスに基づいて、その動作、 &lt;xref:System.Xaml.XamlReader&gt;ReadSubtree が呼び出されたときに使用されている実装&lt;/xref:System.Xaml.XamlReader&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The purpose of the internal class is to wrap the &lt;xref:System.Xaml.XamlReader.Read%2A&gt; and general traversal behavior.</source>
          <target state="translated">内部クラスの目的は、ラップする、&lt;xref:System.Xaml.XamlReader.Read%2A&gt;と一般的な走査の各動作&lt;/xref:System.Xaml.XamlReader.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The traversal stays within the intended subtree by keeping track of &lt;xref:System.Xaml.XamlNodeType&gt;/&lt;xref:System.Xaml.XamlNodeType&gt; pairs or &lt;xref:System.Xaml.XamlNodeType&gt;/&lt;xref:System.Xaml.XamlNodeType&gt; pairs.</source>
          <target state="translated">走査まま、目的のサブツリー内で追跡することにより&lt;xref:System.Xaml.XamlNodeType&gt;/&lt;xref:System.Xaml.XamlNodeType&gt;ペアまたは&lt;xref:System.Xaml.XamlNodeType&gt;/&lt;xref:System.Xaml.XamlNodeType&gt;ペア&lt;/xref:System.Xaml.XamlNodeType&gt;&lt;/xref:System.Xaml.XamlNodeType&gt;&lt;/xref:System.Xaml.XamlNodeType&gt;&lt;/xref:System.Xaml.XamlNodeType&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>It also correctly returns <ph id="ph1">`false`</ph> for &lt;xref:System.Xaml.XamlReader.Read%2A&gt; and <ph id="ph2">`true`</ph> for &lt;xref:System.Xaml.XamlReader.IsEof%2A&gt; when the reader is at the end of the subtree, as defined by its entry point.</source>
          <target state="translated">正しく返す<ph id="ph1">`false`</ph>の&lt;xref:System.Xaml.XamlReader.Read%2A&gt;と<ph id="ph2">`true`</ph>の&lt;xref:System.Xaml.XamlReader.IsEof%2A&gt;ときにリーダーが配置されて、サブツリーの最後のエントリ ポイントで定義されている&lt;/xref:System.Xaml.XamlReader.IsEof%2A&gt;&lt;/xref:System.Xaml.XamlReader.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In general, you assume that any &lt;xref:System.Xaml.XamlReader&gt; API you call from a subtree reader has the same implementation as the overall &lt;xref:System.Xaml.XamlReader&gt; except for the traversal bounding behavior.</source>
          <target state="translated">一般に、想定すること、&lt;xref:System.Xaml.XamlReader&gt;サブツリー リーダーから呼び出し API は、全体的なと同じ実装&lt;xref:System.Xaml.XamlReader&gt;動作を境界の検査を除く&lt;/xref:System.Xaml.XamlReader&gt;&lt;/xref:System.Xaml.XamlReader&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>However, ReadSubtree is virtual.</source>
          <target state="translated">ただし、ReadSubtree は、仮想です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Therefore, a specific &lt;xref:System.Xaml.XamlReader&gt; implementation can provide behavior that differs from the &lt;xref:System.Xaml.XamlReader&gt; internal wrapper behavior; and a &lt;xref:System.Xaml.XamlReader&gt; implementation can even disable subtree reader functionality by returning &lt;xref:System.NotImplementedException&gt; or other exceptions.</source>
          <target state="translated">したがって、特定&lt;xref:System.Xaml.XamlReader&gt;実装とは異なる動作を提供できます、&lt;xref:System.Xaml.XamlReader&gt;内部ラッパーの動作と&lt;xref:System.Xaml.XamlReader&gt;実装でもを無効にできますサブツリー リーダー機能を返すことによって&lt;xref:System.NotImplementedException&gt;またはその他の例外です&lt;/xref:System.NotImplementedException&gt;&lt;/xref:System.Xaml.XamlReader&gt;&lt;/xref:System.Xaml.XamlReader&gt;&lt;/xref:System.Xaml.XamlReader&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A new XAML reader instance for the subtree.</source>
          <target state="translated">サブツリーの新しい XAML リーダー インスタンス。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets an object that provides XAML schema context information for the information set.</source>
          <target state="translated">派生クラスとして実装された場合は、情報セットの XAML スキーマ コンテキスト情報を提供するオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An object that provides XAML schema context information for the information set.</source>
          <target state="translated">については、XAML スキーマ コンテキスト情報を提供するオブジェクトを設定します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Skips the current node and advances the reader position to the next node.</source>
          <target state="translated">現在のノードをスキップし、次のノードにリーダーの位置を進めます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Once skipped, &lt;xref:System.Xaml.XamlReader.Read%2A&gt; is called by the default Skip implementation.</source>
          <target state="translated">1 回スキップ、 &lt;xref:System.Xaml.XamlReader.Read%2A&gt;Skip 実装、既定により呼び出されます&lt;/xref:System.Xaml.XamlReader.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You typically do not call Skip and &lt;xref:System.Xaml.XamlReader.Read%2A&gt; in sequence.</source>
          <target state="translated">通常呼び出さない Skip と&lt;xref:System.Xaml.XamlReader.Read%2A&gt;順番&lt;/xref:System.Xaml.XamlReader.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In the default Skip implementation, different actions are taken depending on which &lt;xref:System.Xaml.XamlReader.NodeType%2A&gt; the reader position is currently on.</source>
          <target state="translated">によって既定 Skip 実装では、さまざまな操作が実行される&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;リーダーの位置が現在オン&lt;/xref:System.Xaml.XamlReader.NodeType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the reader position is currently on a &lt;xref:System.Xaml.XamlNodeType&gt; or &lt;xref:System.Xaml.XamlNodeType&gt;, that member or object is skipped.</source>
          <target state="translated">リーダーの位置が現在の場合、&lt;xref:System.Xaml.XamlNodeType&gt;または&lt;xref:System.Xaml.XamlNodeType&gt;、そのメンバーまたはオブジェクトはスキップされます&lt;/xref:System.Xaml.XamlNodeType&gt;&lt;/xref:System.Xaml.XamlNodeType&gt;。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For other &lt;xref:System.Xaml.XamlReader.NodeType%2A&gt; values, no action is taken other than calling &lt;xref:System.Xaml.XamlReader.Read%2A&gt; from the current position.</source>
          <target state="translated">その他の&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;値、何も処理呼び出し以外&lt;xref:System.Xaml.XamlReader.Read%2A&gt;現在の位置から&lt;/xref:System.Xaml.XamlReader.Read%2A&gt;&lt;/xref:System.Xaml.XamlReader.NodeType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Subtree readers can call Skip, with behavior restrictions.</source>
          <target state="translated">サブツリー リーダーは、動作の制限をスキップ を呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」 &lt;xref:System.Xaml.XamlReader&gt;、または参照してください&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.&lt;/xref:System.Xaml.XamlReader.ReadSubtree%2A&gt; &lt;/xref:System.Xaml.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The node tree behavior of Skip is based on the XML equivalent &lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">スキップのノード ツリーの動作は同等の XML &lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName&gt;.&lt;/xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName&gt;に基づいてください。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Based on the &lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName&gt; behavior equivalence, Skip skips the node and its subtree, not just the single entry node.</source>
          <target state="translated">に基づいて、&lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName&gt;ノードとそのサブツリーでは、1 つのエントリのノードだけでなく動作の等価性、Skip をスキップします&lt;/xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">現在のインスタンスによって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Xaml.XamlReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the current node.</source>
          <target state="translated">派生クラスで実装された場合、取得、 <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在のノードです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Subtree readers can call Type, with behavior restrictions.</source>
          <target state="translated">サブツリーのリーダーは、動作の制限がありますの種類を呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see the "Subtree Readers" section in &lt;xref:System.Xaml.XamlReader&gt;, or see &lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.</source>
          <target state="translated">詳細についてを参照してください「サブツリー リーダー」 &lt;xref:System.Xaml.XamlReader&gt;、または参照してください&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;.&lt;/xref:System.Xaml.XamlReader.ReadSubtree%2A&gt; &lt;/xref:System.Xaml.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the current node; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if the current reader position is not on an object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ; 現在のノードのまたは<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>現在リーダーが配置されていないオブジェクトの場合は、します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the value of the current node.</source>
          <target state="translated">派生クラスとして実装された場合は、現在のノードの値を取得します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The value of the current node; or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if the current reader position is not on a <bpt id="p2">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> node type.</source>
          <target state="translated">現在のノードの値または<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、現在のリーダーの位置に含まれていない場合、 <bpt id="p2">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>ノードの種類。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>