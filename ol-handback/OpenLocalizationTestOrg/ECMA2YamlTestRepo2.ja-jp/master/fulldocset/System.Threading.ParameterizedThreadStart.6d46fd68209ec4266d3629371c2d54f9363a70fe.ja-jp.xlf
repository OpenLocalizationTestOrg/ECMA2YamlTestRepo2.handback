<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e380be4474237c2f088cb14445641a67f71425b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.ParameterizedThreadStart.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46773aa3a880c892075b4e961922644b90ed743e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44c10de7aee5cd9759c15f18c6f0a26c87b5d110</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the method that executes on a <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">実行するメソッドを表す、 <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When a managed thread is created, the method that executes on the thread is represented by:      -   A &lt;xref:System.Threading.ThreadStart&gt; delegate that is passed to the &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">マネージ スレッドが作成されると、スレッド上で実行するメソッドがで表される: -&lt;xref:System.Threading.ThreadStart&gt;デリゲートに渡される、&lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt;コンス トラクター&lt;/xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName&gt; &lt;/xref:System.Threading.ThreadStart&gt; 。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Any method that has no parameters and that returns <ph id="ph1">`void`</ph> in C# or is a <ph id="ph2">`Sub`</ph> procedure in Visual Basic can represent the delegate.</source>
          <target state="translated">任意のメソッド パラメーターを持たずを返す<ph id="ph1">`void`</ph>(C#) または、 <ph id="ph2">`Sub`</ph> Visual Basic のプロシージャは、デリゲートを表すことができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>-   A ParameterizedThreadStart delegate that is passed to the &lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">-ParameterizedThreadStart デリゲートに渡される、&lt;xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt;コンス トラクター&lt;/xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName&gt; 。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Any method that has a single parameter of type &lt;xref:System.Object&gt; and that returns void in C# or is a Sub procedure in Visual Basic can represent the delegate.</source>
          <target state="translated">型の&amp;1; つのパラメーターを持つ任意のメソッド&lt;xref:System.Object&gt;し、c# では、void を返しますまたは、Visual Basic では Sub プロシージャは、デリゲートを表すことができます&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The thread does not begin executing until the &lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt; method is called.</source>
          <target state="translated">スレッドがまで実行を開始していない、&lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;メソッドが呼び出されます&lt;/xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Threading.ThreadStart&gt; or ParameterizedThreadStart delegate is invoked on the thread, and execution begins at the first line of the method represented by the delegate.</source>
          <target state="translated">&lt;xref:System.Threading.ThreadStart&gt;または ParameterizedThreadStart デリゲートが、スレッドで呼び出され、デリゲートによって表されるメソッドの最初の行で実行を開始します&lt;/xref:System.Threading.ThreadStart&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the case of the ParameterizedThreadStart delegate, the object that is passed to the &lt;xref:System.Threading.Thread.Start%28System.Object%29&gt; method is passed to the delegate.</source>
          <target state="translated">ParameterizedThreadStart デリゲートに渡されるオブジェクトの場合、&lt;xref:System.Threading.Thread.Start%28System.Object%29&gt;メソッドは、デリゲートに渡されます&lt;/xref:System.Threading.Thread.Start%28System.Object%29&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Visual Basic and C# users can omit the &lt;xref:System.Threading.ThreadStart&gt; or ParameterizedThreadStart delegate constructor when creating a thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Visual Basic および c# のユーザーを省略できます、&lt;xref:System.Threading.ThreadStart&gt;またはスレッドを作成するときの ParameterizedThreadStart デリゲート コンス トラクター&lt;/xref:System.Threading.ThreadStart&gt; 。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In Visual Basic, use the <ph id="ph1">`AddressOf`</ph> operator when passing your method to the &lt;xref:System.Threading.Thread.%23ctor%2A&gt; constructor; for example, <ph id="ph2">`Dim t As New Thread(AddressOf ThreadProc)`</ph>.</source>
          <target state="translated">Visual Basic を使用して、<ph id="ph1">`AddressOf`</ph>演算子が、メソッドに渡すときに、&lt;xref:System.Threading.Thread.%23ctor%2A&gt;コンス トラクターたとえば、 <ph id="ph2">`Dim t As New Thread(AddressOf ThreadProc)`</ph>。&lt;/xref:System.Threading.Thread.%23ctor%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In C#, simply specify the name of the thread procedure.</source>
          <target state="translated">C# の場合は、単にスレッド プロシージャの名前を指定します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The compiler selects the correct delegate constructor.</source>
          <target state="translated">コンパイラは、適切なデリゲート コンス トラクターを選択します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you create a ParameterizedThreadStart delegate for an instance method in C++, the first parameter of the constructor is the instance variable.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; コンス トラクターの最初のパラメーターが、インスタンス変数を C++ では、インスタンス メソッドの ParameterizedThreadStart デリゲートを作成するときにします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For a static method, the first parameter of the constructor is zero.</source>
          <target state="translated">静的メソッドは、コンス トラクターの最初のパラメーターは&amp;0; です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For a static method, the delegate constructor requires only one parameter: the address of the callback method, qualified by the class name.</source>
          <target state="translated">静的メソッドでは、デリゲート コンス トラクターには、1 つだけのパラメーターが必要です。 クラス名で修飾して、コールバック メソッドのアドレス。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The ParameterizedThreadStart delegate and the &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt; method overload make it easy to pass data to a thread procedure, but this technique is not type safe because any object can be passed to &lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;.</source>
          <target state="translated">ParameterizedThreadStart デリゲートと&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;簡単にデータをスレッド プロシージャが、この手法を渡すにはタイプ セーフではない&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;。&lt;/xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;任意のオブジェクトを渡すことができますのでメソッド オーバー ロードします。&lt;/xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A more robust way to pass data to a thread procedure is to put both the thread procedure and the data fields into a worker object.</source>
          <target state="translated">データをスレッド プロシージャに渡すより堅牢な方法は、ワーカーのオブジェクトをスレッド プロシージャと、データ フィールドの両方にです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Creating Threads and Passing Data at Start Time<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>スレッドの作成と開始時にデータを渡す<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The ParameterizedThreadStart delegate supports only a single parameter.</source>
          <target state="translated">ParameterizedThreadStart デリゲートには、1 つのパラメーターのみがサポートしています。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can pass multiple data items to the ParameterizedThreadStart by making that parameter one of the following:      -   An array.</source>
          <target state="translated">次のいずれかのパラメーターをすることにより、ParameterizedThreadStart に複数のデータ項目を渡すことができます: の配列。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-   A collection type, if all of the data items are of the same type.</source>
          <target state="translated">コレクション型の場合、同じ種類のすべてのデータ項目の場合。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-   A tuple type, such as &lt;xref:System.Tuple%602&gt; or &lt;xref:System.Tuple%604&gt;.</source>
          <target state="translated">は、タプル型、&lt;xref:System.Tuple%602&gt;または&lt;xref:System.Tuple%604&gt;。&lt;/xref:System.Tuple%604&gt;&lt;/xref:System.Tuple%602&gt;など</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>