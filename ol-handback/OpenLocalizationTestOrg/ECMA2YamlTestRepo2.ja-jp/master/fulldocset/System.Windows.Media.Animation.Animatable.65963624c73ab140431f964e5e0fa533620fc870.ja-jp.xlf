<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54987b145df524e2c04721d4c6bffcfcc50ba9e3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Media.Animation.Animatable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e3af9b722338fa0314302bcbaf2d142f0430979</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7b2f884eff8b4afc58e95a4cd67f1658436c86c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Abstract class that provides animation support.</source>
          <target state="translated">アニメーションのサポートを提供する抽象クラスです。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Applies an <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">適用される、 <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定した<bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the property is already animated, the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> handoff behavior is used.</source>
          <target state="translated">プロパティが既にアニメーション化されている場合、 <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ハンドオフ動作が使用されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Note that using this method to removing clocks from a property does not stop those clocks.</source>
          <target state="translated">このメソッドを使用して、プロパティからクロックを削除しても、クロックは停止しません注意してください。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">アニメーション化するプロパティです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">指定したプロパティをアニメーション化するときに使用するクロック。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`clock`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">場合<ph id="ph1">`clock`</ph>は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、すべてのアニメーションは、指定したプロパティから削除 (しますが、停止されません)。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Applies an <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified <bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">適用される、 <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定した<bpt id="p2">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the property is already animated, the specified <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">プロパティが既にアニメーション化されている場合、指定した<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>を使用します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Note that using this method to remove clocks from a property does not stop those clocks.</source>
          <target state="translated">このメソッドを使用して、プロパティからクロックを削除しても、クロックは停止しませんに注意してください。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">使用して、作成 HandoffBehavior を適用する、 &lt;xref:System.Windows.Media.Animation.Storyboard&gt;、 &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;、または&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;を使用してプロパティを&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;、any&lt;xref:System.Windows.Media.Animation.Clock&gt;以前そのプロパティに関連付けられているオブジェクトがシステム リソースを消費引き続き; タイミング システムはこれらの時計を自動的に削除されません&lt;/xref:System.Windows.Media.Animation.Clock&gt;&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;&lt;/xref:System.Windows.Media.Animation.AnimationTimeline&gt;&lt;/xref:System.Windows.Media.Animation.Storyboard&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To avoid performance issues when you apply a large number of clocks using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">使用してクロックの数が多いを適用するときに、パフォーマンスの問題を回避する&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;、完了した後、アニメーションのプロパティから作成クロックを削除する必要があります&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">クロックを削除するいくつかの方法はあります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.</source>
          <target state="translated">、すべてのクロック プロパティからを削除するには使用、&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;または&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;アニメーション オブジェクトのメソッド&lt;/xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;&lt;/xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 <ph id="ph1">`null`</ph>&amp;2; つ目として。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">これにより、すべてのアニメーション クロックが、プロパティから削除されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.</source>
          <target state="translated">-特定&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;のクロックの一覧から、使用して&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;&lt;xref:System.Windows.Media.Animation.ClockController&gt;&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;&lt;xref:System.Windows.Media.Animation.ClockController&gt;。&lt;/xref:System.Windows.Media.Animation.ClockController&gt;のメソッド&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;を呼び出して、&lt;/xref:System.Windows.Media.Animation.ClockController&gt;取得する&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;プロパティ&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;を削除するには</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.</source>
          <target state="translated">これは、通常、&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;クロックのイベント ハンドラー&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt; 。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock will return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">唯一のルート クロックできますで制御されることに注意してください、 &lt;xref:System.Windows.Media.Animation.ClockController&gt;;&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;子クロックのプロパティを返します<ph id="ph1">`null`</ph>&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;/xref:System.Windows.Media.Animation.ClockController&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">なお、 &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;、クロックの有効期間が forever の場合、イベントは呼び出されません&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In that case, the user will need to determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.</source>
          <target state="translated">ユーザーの必要がありますを&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;。&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;を呼び出すタイミングを決定する場合は、</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">これは、主に有効期間が長いオブジェクトにおけるアニメーションの問題です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">オブジェクトがガベージ コレクションである場合は、そのクロックは切断されても、ガベージ コレクションします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">クロック オブジェクトに関する詳細については、次を参照してください。、<bpt id="p1">[</bpt>アニメーションおよびタイミング システムの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">アニメーション化するプロパティです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">指定したプロパティをアニメーション化するときに使用するクロック。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`handoffBehavior`</ph> is <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph2">`clock`</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">場合<ph id="ph1">`handoffBehavior`</ph>は<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<ph id="ph2">`clock`</ph>は<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、すべてのアニメーションは、指定したプロパティから削除 (しますが、停止されません)。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`handoffBehavior`</ph> is <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and clock is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this method has no effect.</source>
          <target state="translated">場合<ph id="ph1">`handoffBehavior`</ph>は<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>時計と<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、このメソッドは影響を与えません。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">新しいアニメーションは既にプロパティの値に影響する、現在のアニメーションと対話する方法を指定する値。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Applies an animation to the specified <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定されたアニメーションを適用<bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">次のフレームがレンダリングされるときに、アニメーションが開始されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the specified property is already animated, the <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> handoff behavior is used.</source>
          <target state="translated">指定したプロパティが既にアニメーション化されている場合、 <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ハンドオフ動作が使用されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the animation has a &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">アニメーションがある場合、 &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;0 より大きい値である、期間が次のフレームがレンダリング時から経過した後に、アニメーションが開始します&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">アニメーション化するプロパティです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">指定したプロパティをアニメーション化するために使用するアニメーション。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the animation's &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, any current animations will be removed and the current value of the property will be held.</source>
          <target state="translated">場合、アニメーションの&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime*&gt;は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と、現在のアニメーションが削除され、プロパティの現在の値が保持されます&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime*&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`animation`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, all animations will be removed from the property and the property value will revert back to its base value.</source>
          <target state="translated">場合<ph id="ph1">`animation`</ph>は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、すべてのアニメーションがプロパティから削除され、プロパティの値がその基本値に戻します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Applies an animation to the specified <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定されたアニメーションを適用<bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">次のフレームがレンダリングされるときに、アニメーションが開始されます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the specified property is already animated, the specified <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">指定したプロパティが既にアニメーション化されている場合、指定した<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>を使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the animation has a &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt; that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">アニメーションがある場合、 &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;0 より大きい値である、期間が次のフレームがレンダリング時から経過した後に、アニメーションが開始します&lt;/xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Using the Compose HandoffBehavior    When you apply a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, or &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to a property using the &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt; &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, any &lt;xref:System.Windows.Media.Animation.Clock&gt; objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">使用して、作成 HandoffBehavior を適用する、 &lt;xref:System.Windows.Media.Animation.Storyboard&gt;、 &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;、または&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;を使用してプロパティを&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;、any&lt;xref:System.Windows.Media.Animation.Clock&gt;以前そのプロパティに関連付けられているオブジェクトがシステム リソースを消費引き続き; タイミング システムはこれらの時計を自動的に削除されません&lt;/xref:System.Windows.Media.Animation.Clock&gt;&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;&lt;/xref:System.Windows.Media.Animation.AnimationTimeline&gt;&lt;/xref:System.Windows.Media.Animation.Storyboard&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To avoid performance issues when you apply a large number of clocks using &lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">使用してクロックの数が多いを適用するときに、パフォーマンスの問題を回避する&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;、完了した後、アニメーションのプロパティから作成クロックを削除する必要があります&lt;/xref:System.Windows.Media.Animation.HandoffBehavior&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">クロックを削除するいくつかの方法はあります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-   To remove all clocks from a property, use the &lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt; or &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt; method of the animated object.</source>
          <target state="translated">、すべてのクロック プロパティからを削除するには使用、&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;または&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;アニメーション オブジェクトのメソッド&lt;/xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;&lt;/xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 <ph id="ph1">`null`</ph>&amp;2; つ目として。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">これにより、すべてのアニメーション クロックが、プロパティから削除されます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-   To remove a specific &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; from a list of clocks, use the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of the &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; to retrieve a &lt;xref:System.Windows.Media.Animation.ClockController&gt;, then call the &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt; method of the &lt;xref:System.Windows.Media.Animation.ClockController&gt;.</source>
          <target state="translated">-特定&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;のクロックの一覧から、使用して&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;&lt;xref:System.Windows.Media.Animation.ClockController&gt;&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;&lt;xref:System.Windows.Media.Animation.ClockController&gt;。&lt;/xref:System.Windows.Media.Animation.ClockController&gt;のメソッド&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;を呼び出して、&lt;/xref:System.Windows.Media.Animation.ClockController&gt;取得する&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;プロパティ&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;/xref:System.Windows.Media.Animation.AnimationClock&gt;を削除するには</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This is typically done in the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event handler for a clock.</source>
          <target state="translated">これは、通常、&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;クロックのイベント ハンドラー&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt; 。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Note that only root clocks can be controlled by a &lt;xref:System.Windows.Media.Animation.ClockController&gt;; the &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt; property of a child clock will return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">唯一のルート クロックできますで制御されることに注意してください、 &lt;xref:System.Windows.Media.Animation.ClockController&gt;;&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;子クロックのプロパティを返します<ph id="ph1">`null`</ph>&lt;/xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;&lt;/xref:System.Windows.Media.Animation.ClockController&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt; event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">なお、 &lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;、クロックの有効期間が forever の場合、イベントは呼び出されません&lt;/xref:System.Windows.Media.Animation.Clock.Completed&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In that case, the user will need to determine when to call &lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;.</source>
          <target state="translated">ユーザーの必要がありますを&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;。&lt;/xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;を呼び出すタイミングを決定する場合は、</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">これは、主に有効期間が長いオブジェクトにおけるアニメーションの問題です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">オブジェクトがガベージ コレクションである場合は、そのクロックは切断されても、ガベージ コレクションします。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">クロック オブジェクトに関する詳細については、次を参照してください。、<bpt id="p1">[</bpt>アニメーションおよびタイミング システムの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The property to animate.</source>
          <target state="translated">アニメーション化するプロパティです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">指定したプロパティをアニメーション化するために使用するアニメーション。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`handoffBehavior`</ph> is <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the animation's &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime<bpt id="p2">*</bpt>&gt; is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, any current animations will be removed and the current value of the property will be held.       If <ph id="ph2">`handoffBehavior`</ph> is <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and <ph id="ph3">`animation`</ph> is a <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> reference, all animations will be removed from the property and the property value will revert back to its base value.       If <ph id="ph4">`handoffBehavior`</ph> is <bpt id="p6">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>, this method will have no effect if the animation or its &lt;xref:System.Windows.Media.Animation.Timeline.BeginTime<ept id="p2">*</ept>&gt; is <bpt id="p7">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>.</source>
          <target state="translated">場合<ph id="ph1">`handoffBehavior`</ph>は<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>およびアニメーションの&lt;&gt; <bpt id="p2">*</bpt>&gt; は<bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>と、現在のアニメーションが削除され、プロパティの現在の値が保持されます。     場合<ph id="ph2">`handoffBehavior`</ph>は<bpt id="p4">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>と<ph id="ph3">`animation`</ph>は、 <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept>リファレンス、すべてのアニメーションは、プロパティから削除されますおよびプロパティの値がその基本値に戻ります。     場合<ph id="ph4">`handoffBehavior`</ph>は<bpt id="p6">&lt;xref href="System.Windows.Media.Animation.HandoffBehavior"&gt;</bpt> <ept id="p6">&lt;/xref&gt;</ept>、このメソッドは効果がなく場合は、アニメーションやその&lt;&gt; <ept id="p2">*</ept>&gt; は<bpt id="p7">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">新しいアニメーションは既にプロパティの値に影響する、現在のアニメーションと対話する方法を指定する値。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone of this <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, making deep copies of this object's values.</source>
          <target state="translated">この変更可能な複製を作成<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、このオブジェクトの値の詳細コピーを作成します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
          <target state="translated">このオブジェクトの依存関係プロパティをコピーするときにこのメソッドは、リソースの参照とデータ バインディングをコピー (ただし、解決できなくなる可能性があります)、アニメーションやその現在の値ではありません。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The Clone method can be used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects.</source>
          <target state="translated">Clone メソッドの変更可能なコピーを生成するために使用できます固定&lt;xref:System.Windows.Freezable&gt;オブジェクト&lt;/xref:System.Windows.Freezable&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For convenience, this method shadows the inherited &lt;xref:System.Windows.Freezable.Clone%2A&gt; method to provide a strongly typed implementation.</source>
          <target state="translated">便宜上、このメソッドは、継承されたシャドウ&lt;xref:System.Windows.Freezable.Clone%2A&gt;厳密に型指定された実装を提供するメソッド&lt;/xref:System.Windows.Freezable.Clone%2A&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A modifiable clone of this instance.</source>
          <target state="translated">このインスタンスの変更可能な複製。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The returned clone is effectively a deep copy of the current object.</source>
          <target state="translated">返される複製は、現在のオブジェクトのディープ コピーでは効果的です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The clone's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id="p1">*</bpt>&gt; property is <ept id="p1">*</ept><bpt id="p2">*</bpt>false<ept id="p2">*</ept>*.</source>
          <target state="translated">複製の&lt;&gt; <bpt id="p1">*</bpt>&gt; プロパティは<ept id="p1">*</ept> <bpt id="p2">*</bpt>false<ept id="p2">*</ept>* です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Makes this <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object unmodifiable or determines whether it can be made unmodifiable.</source>
          <target state="translated">この<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>不可能な状態のオブジェクトまたはかどうか、変更不可能にできるを判断します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This method will return <bpt id="p1">**</bpt>false<ept id="p1">**</ept> when &lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt; is <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="translated">このメソッドは<bpt id="p1">**</bpt>false<ept id="p1">**</ept>とき&lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;は<bpt id="p2">**</bpt>true<ept id="p2">**</ept>&lt;/xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Do not call this method directly (except when calling base in an implementation).</source>
          <target state="translated">直接 (呼び出す場合を除きますベースの実装で) このメソッドを呼び出さないでください。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This method is called internally by &lt;xref:System.Windows.Freezable.CanFreeze%2A&gt; (with <ph id="ph1">`isChecking`</ph> equal to <ph id="ph2">`true`</ph>) and  &lt;xref:System.Windows.Freezable.Freeze%2A&gt; (with <ph id="ph3">`isChecking`</ph> equal to <ph id="ph4">`false`</ph>).</source>
          <target state="translated">このメソッドがによって内部的に呼び出されます&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;(で<ph id="ph1">`isChecking`</ph>と等しい<ph id="ph2">`true`</ph>) および&lt;xref:System.Windows.Freezable.Freeze%2A&gt;(で<ph id="ph3">`isChecking`</ph>と等しい<ph id="ph4">`false`</ph>).&lt;/xref:System.Windows.Freezable.Freeze%2A&gt; &lt;/xref:System.Windows.Freezable.CanFreeze%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method should simply determine whether this instance can be frozen.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>このメソッドは、このインスタンスが固定されるかどうかを簡単に確認する必要がある場合。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this instance should actually freeze itself when this method is called.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>このメソッドが呼び出されたときに、このインスタンスは自身を固定実際にする必要がある場合。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this method returns <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if this <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> can be made unmodifiable, or <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> if it cannot be made unmodifiable.</source>
          <target state="translated">場合<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">isChecking</ph> <ept id="p1">&lt;/code&gt;</ept>は<bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、このメソッドが戻る<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>場合は、この<bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>できます変更不可能にできる、または<bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>にできない変更不可能になっている場合。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this method returns <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the if this <bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> is now unmodifiable, or <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</source>
          <target state="translated">場合<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">isChecking</ph> <ept id="p1">&lt;/code&gt;</ept>は<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、このメソッドが戻る<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>場合場合に、この<bpt id="p4">&lt;xref href="System.Windows.Media.Animation.Animatable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>は変更できますが、または<bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>にできない不可能な状態で、このオブジェクトの固定された状態を変更する始めたことの副作用の場合。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Returns the non-animated value of the specified <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定したアニメーション化されていない値を返します<bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the specified property is not animated, this method returns the same result as &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;.</source>
          <target state="translated">指定したプロパティをアニメーション化しない場合、このメソッドは&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;。&lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;と同じ結果を返します</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Identifies the property whose base (non-animated) value should be retrieved.</source>
          <target state="translated">基本 (アニメーション化されていない) 値を取得するプロパティを識別します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The value that would be returned if the specified property were not animated.</source>
          <target state="translated">指定したプロパティのアニメーション化されていない場合に返される値。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether one or more <bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects is associated with any of this object's dependency properties.</source>
          <target state="translated">示す値を取得するかどうか&amp;1; つまたは複数<bpt id="p1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトはこのオブジェクトの依存関係プロパティのいずれかに関連付けられています。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This property does not indicate whether this object contains animated sub-objects.</source>
          <target state="translated">このプロパティは、このオブジェクトがアニメーション化されたサブオブジェクトを含むかどうかを示すものではありません。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies whether a dependency object should be serialized.</source>
          <target state="translated">依存関係オブジェクトをシリアル化するかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor&gt; class uses the ShouldSerializeStoredWeakReference method to determine if a property should be serialized.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor&gt;クラスでは、ShouldSerializeStoredWeakReference メソッドを使用して、プロパティをシリアル化するかどうかを判断します&lt;/xref:System.ComponentModel.TypeDescriptor&gt;。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Represents an object that participates in the dependency property system.</source>
          <target state="translated">依存関係プロパティ システムに参加しているオブジェクトを表します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to serialize <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>to serialize <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>