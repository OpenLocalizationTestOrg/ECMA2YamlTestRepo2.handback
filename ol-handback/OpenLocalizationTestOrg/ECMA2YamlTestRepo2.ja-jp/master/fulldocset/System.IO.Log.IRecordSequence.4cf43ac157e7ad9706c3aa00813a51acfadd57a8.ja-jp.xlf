<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a167971b0b5d6a45ba8cd4783696d16d414acee6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Log.IRecordSequence.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d039cf607eae8de4e374e56db4834535c16b37ee</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb78af0469dacf07d11bfc0904977849ec2a00f5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a generic interface to a sequence of records.</source>
          <target state="translated">レコードのシーケンスへの汎用インターフェイスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The IRecordSequence interface provides an abstract interface to a record-oriented stream.</source>
          <target state="translated">IRecordSequence インターフェイスでは、レコード指向ストリームの抽象インターフェイスを提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A IRecordSequence instance can be used to read and write log records.</source>
          <target state="translated">IRecordSequence インスタンスは、読み取りし、書き込みのログ レコードを使用できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The IRecordSequence interface provides the following capabilities,      -   Append log records using the &lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt; methods.</source>
          <target state="translated">IRecordSequence インターフェイスには、次の機能が用意されています - 追加のログ記録を使用して、&lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Append%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>-   Read the appended records using the &lt;xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A&gt; method.</source>
          <target state="translated">-を使用して、追加したレコードを読み取り、&lt;xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>-   Write a special restart record using the &lt;xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt; method.</source>
          <target state="translated">-特殊な再開レコードを使用して、書き込み、&lt;xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>-   Read restart records from the most recently written restart record using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">読み取りレコードから再開レコード、直前に書き込まれた再開レコードを使用して、&lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>-   Flush the records to durable store using the  &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">-永続的ストアを使用するレコードのフラッシュ、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   Reserve space for appending records.</source>
          <target state="translated">レコードを追加するための領域を予約します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-   Free log space by advancing the base of the log.</source>
          <target state="translated">のログのベースを進めることでログ空き容量。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   Receive &lt;xref:System.IO.Log.IRecordSequence.TailPinned&gt; event notifications to move the base of the log to free space.</source>
          <target state="translated">受信&lt;xref:System.IO.Log.IRecordSequence.TailPinned&gt;領域を解放するログのベースを移動するイベント通知&lt;/xref:System.IO.Log.IRecordSequence.TailPinned&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Log records are appended to a IRecordSequence instance, and each log record is given a unique sequence number.</source>
          <target state="translated">IRecordSequence インスタンスにログ レコードは表示し、各ログ レコードが一意のシーケンス番号を指定します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Sequence numbers are strictly monotonically increasing within a given record sequence.</source>
          <target state="translated">シーケンス番号は、厳密に単調に増加する特定のレコード シーケンス内で。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A log record consists of opaque data, supplied to the IRecordSequence instance in an &lt;xref:System.Collections.IList&gt; of ArraySegments of bytes.</source>
          <target state="translated">ログ レコードから成るで IRecordSequence インスタンスに渡される、不透明なデータ、&lt;xref:System.Collections.IList&gt;バイトの ArraySegments の&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The IRecordSequence interface also exposes a few basic properties which provides information about log boundaries.</source>
          <target state="translated">IRecordSequence インターフェイスでは、ログ境界に関する情報を提供するいくつかの基本的なプロパティも公開します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt; property contains the sequence number of the first valid record in the record sequence.</source>
          <target state="translated">-&lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;プロパティには、レコード シーケンスの最初の有効なレコードのシーケンス番号が含まれています&lt;/xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt; property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</source>
          <target state="translated">-&lt;xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt;プロパティには、大きくすることが保証されるシーケンス番号が含まれています追加されたレコードの最後のシーケンス番号より。&lt;/xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A&gt; property contains the sequence number of the last written restart area.</source>
          <target state="translated">-&lt;xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A&gt;プロパティには、最後の書き込まれた再開領域のシーケンス番号が含まれています&lt;/xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A&gt; property contains the size of the largest record that can be appended to, or read from the sequence.</source>
          <target state="translated">-&lt;xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A&gt;プロパティには追加、または、シーケンスから読み取り可能な最大レコード サイズが含まれています&lt;/xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.IO.Log.IRecordSequence.ReservedBytes%2A&gt; property contains the total size of all reservations made in this record sequence.</source>
          <target state="translated">-&lt;xref:System.IO.Log.IRecordSequence.ReservedBytes%2A&gt;プロパティには、このレコード シーケンスで行われたすべての予約の合計サイズが含まれています&lt;/xref:System.IO.Log.IRecordSequence.ReservedBytes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.IO.Log.IRecordSequence.RetryAppend%2A&gt; property is set to <ph id="ph1">`true`</ph>, and an &lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt; operation fails because there is no space in the sequence, the record sequence will attempt to free space, and retry the Append operation.</source>
          <target state="translated">場合、&lt;xref:System.IO.Log.IRecordSequence.RetryAppend%2A&gt;プロパティに設定されている<ph id="ph1">`true`</ph>、および&lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;シーケンスの領域がないために、操作が失敗した、レコード シーケンスはしようと空き領域、および追加操作を再試行してください&lt;/xref:System.IO.Log.IRecordSequence.Append%2A&gt;&lt;/xref:System.IO.Log.IRecordSequence.RetryAppend%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Moves the base sequence number of the log forward.</source>
          <target state="translated">ログの基本シーケンス番号を前方移動します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When you use a &lt;xref:System.IO.Log.LogRecordSequence&gt; instance and try to advance the sequence number to free up space in the log, the new base sequence number must reside in a different log extent for the previous extent to be marked as empty.</source>
          <target state="translated">使用すると、&lt;xref:System.IO.Log.LogRecordSequence&gt;新しい基本シーケンス番号が空としてマークするのには、次のエクステントの別のログ エクステント内に存在する必要がありますインスタンスしようとして、ログ領域を解放するためのシーケンス番号を進める、.&lt;/xref:System.IO.Log.LogRecordSequence&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Freeing extents partially is not supported.</source>
          <target state="translated">エクステントの部分的に解放することはサポートされていません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The new base sequence number of the record sequence.</source>
          <target state="translated">レコード シーケンスの新しい基本シーケンス番号。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBaseSequenceNumber&lt;/code&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;newBaseSequenceNumber&lt;/code&gt;</ph>正しくありません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBaseSequenceNumber&lt;/code&gt;</ph> is not active in the log.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;newBaseSequenceNumber&lt;/code&gt;</ph>ログ内でアクティブではないです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while modifying the sequence.</source>
          <target state="translated">シーケンスの変更中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The record sequence is full.</source>
          <target state="translated">レコード シーケンスがいっぱいです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a log record to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生クラスでオーバーライドされるとときに、ログ レコードを書き込みます、 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれる前に完了します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">追加されたログ レコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">レコード シーケンスは、新しいレコードを格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, appends a log record to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生クラスでオーバーライドされるとときに、ログ レコードを追加、 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれる前に完了します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">追加されたログ レコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">レコード シーケンスは、新しいレコードを格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, appends a log record to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, using space previously reserved in the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされるとときに、ログ レコードを追加、 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、以前のシーケンスに予約された領域を使用します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The appended record will consume space that has been previously reserved, using a reservation specified by the <ph id="ph1">`reservations`</ph> parameter.</source>
          <target state="translated">追加されたレコードは以前に予約されたで指定された予約を使用して領域の消費量、<ph id="ph1">`reservations`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</source>
          <target state="translated">追加に成功した場合に、最小予約領域が消費データを保存して、その予約領域をコレクションから削除されます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれる前に完了します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this record.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このレコードを使用する予約情報を格納します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">追加されたログ レコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">レコード シーケンスは、新しいレコードを格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, appends a log record to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, using space previously reserved in the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされるとときに、ログ レコードを追加、 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、以前のシーケンスに予約された領域を使用します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The appended record will consume space that has been previously reserved, using a reservation specified by the <ph id="ph1">`reservations`</ph> parameter.</source>
          <target state="translated">追加されたレコードは以前に予約されたで指定された予約を使用して領域の消費量、<ph id="ph1">`reservations`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</source>
          <target state="translated">追加に成功した場合に、最小予約領域が消費データを保存して、その予約領域をコレクションから削除されます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれる前に完了します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this record.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このレコードを使用する予約情報を格納します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">追加されたログ レコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">レコード シーケンスは、新しいレコードを格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the sequence number of the first valid record in the current <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生クラスでオーバーライドされると、現在の最初の有効なレコードのシーケンス番号を取得<bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Valid sequence numbers are greater than or equal to BaseSequenceNumber and less than &lt;xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt;.</source>
          <target state="translated">有効なシーケンス番号より大きいまたは basesequencenumber と同じ値に等しいと&lt;xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt;。&lt;/xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt;よりも小さい</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The value of this property can be changed by calling the &lt;xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A&gt; or &lt;xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt; method.</source>
          <target state="translated">このプロパティの値を呼び出すことにより変更することができます、&lt;xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A&gt;または&lt;xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt;&lt;/xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A&gt;。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The lowest sequence number that corresponds to a valid record in the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有効なレコードに対応する下限のシーケンス番号、 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後にプロパティがアクセスされました。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous append operation.</source>
          <target state="translated">派生クラスでオーバーライドされると、非同期開始操作を追加します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">渡す必要があります、&lt;xref:System.IAsyncResult&gt;にこのメソッドによって返される、&lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;追加操作が完了し、リソースを適切に解放できるようにするメソッド&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">まで例外はスローされません非同期追加中にエラーが発生した場合、&lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;メソッドが呼び出された、&lt;xref:System.IAsyncResult&gt;このメソッドによって返される&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれる前に完了します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">追加の完全なときに呼び出されるオプションの非同期コールバック。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">この特定の非同期を区別するユーザー指定のオブジェクトは、他の要求からの要求を追加します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous append, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;を表す非同期の追加は、保留になっている可能性があります&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">レコード シーケンスは、新しいレコードを格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされると、非同期の開始シーケンスで以前に予約された領域を使用して、操作を追加します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">渡す必要があります、&lt;xref:System.IAsyncResult&gt;にこのメソッドによって返される、&lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;追加操作が完了し、リソースを適切に解放できるようにするメソッド&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">まで例外はスローされません非同期追加中にエラーが発生した場合、&lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;メソッドが呼び出された、&lt;xref:System.IAsyncResult&gt;このメソッドによって返される&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれる前に完了します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">追加の完全なときに呼び出されるオプションの非同期コールバック。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">この特定の非同期を区別するユーザー指定のオブジェクトは、他の要求からの要求を追加します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous append, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;を表す非同期の追加は、保留になっている可能性があります&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">レコード シーケンスは、新しいレコードを格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous append operation using space previously reserved in the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされると、非同期の開始シーケンスで以前に予約された領域を使用して操作を追加します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">渡す必要があります、&lt;xref:System.IAsyncResult&gt;にこのメソッドによって返される、&lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;追加操作が完了し、リソースを適切に解放できるようにするメソッド&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">まで例外はスローされません非同期追加中にエラーが発生した場合、&lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;メソッドが呼び出された、&lt;xref:System.IAsyncResult&gt;このメソッドによって返される&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The appended record will consume space that has been previously reserved, using a reservation specified by the <ph id="ph1">`reservations`</ph> parameter.</source>
          <target state="translated">追加されたレコードは以前に予約されたで指定された予約を使用して領域の消費量、<ph id="ph1">`reservations`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</source>
          <target state="translated">追加に成功した場合に、最小予約領域が消費データを保存して、その予約領域をコレクションから削除されます。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれる前に完了します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this record.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このレコードを使用する予約情報を格納します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">追加の完全なときに呼び出されるオプションの非同期コールバック。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">この特定の非同期を区別するユーザー指定のオブジェクトは、他の要求からの要求を追加します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous append, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;を表す非同期の追加は、保留になっている可能性があります&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">レコード シーケンスは、新しいレコードを格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされると、非同期の開始シーケンスで以前に予約された領域を使用して、操作を追加します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">渡す必要があります、&lt;xref:System.IAsyncResult&gt;にこのメソッドによって返される、&lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;追加操作が完了し、リソースを適切に解放できるようにするメソッド&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">まで例外はスローされません非同期追加中にエラーが発生した場合、&lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;メソッドが呼び出された、&lt;xref:System.IAsyncResult&gt;このメソッドによって返される&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The appended record will consume space that has been previously reserved, using a reservation specified by the <ph id="ph1">`reservations`</ph> parameter.</source>
          <target state="translated">追加されたレコードは以前に予約されたで指定された予約を使用して領域の消費量、<ph id="ph1">`reservations`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</source>
          <target state="translated">追加に成功した場合に、最小予約領域が消費データを保存して、その予約領域をコレクションから削除されます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれる前に完了します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this record.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このレコードを使用する予約情報を格納します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">追加の完全なときに呼び出されるオプションの非同期コールバック。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">この特定の非同期を区別するユーザー指定のオブジェクトは、他の要求からの要求を追加します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous append, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;を表す非同期の追加は、保留になっている可能性があります&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">レコード シーケンスは、新しいレコードを格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous flush operation, using space previously reserved in the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされると、以前のシーケンスに予約された領域を使用して、非同期のフラッシュ操作を開始します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by the current method to the &lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt; method to ensure that the flush completes and resources are freed appropriately.</source>
          <target state="translated">渡す必要があります、&lt;xref:System.IAsyncResult&gt;を現在のメソッドによって返される、 &lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt;、フラッシュが完了し、リソースが適切に解放されるようにするメソッド&lt;/xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If an error occurs during an asynchronous flush, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">まで例外はスローされません非同期のフラッシュ中にエラーが発生した場合、&lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt;メソッドが呼び出された、&lt;xref:System.IAsyncResult&gt;このメソッドによって返される&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt;。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Calling this method ensures that all records that have been appended to the &lt;xref:System.IO.Log.IRecordSequence&gt; are durably written.</source>
          <target state="translated">このメソッドを呼び出すことにより、すべてのレコードを追加されていること、&lt;xref:System.IO.Log.IRecordSequence&gt;は永続的に書き込まれます&lt;/xref:System.IO.Log.IRecordSequence&gt;。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、例外がスローされますすぐにこの操作内で。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt; method is called.</source>
          <target state="translated">I/O 要求時にディスク障害など非同期フラッシュ要求、中に発生したエラーが発生するときに例外スロー、&lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt;メソッドが呼び出されます&lt;/xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt;。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The sequence number of the latest record that must be written.</source>
          <target state="translated">書き込む必要のある最新レコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If this <bpt id="p1">&lt;xref href="System.IO.Log.SequenceNumber"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is invalid, then all records must be written.</source>
          <target state="translated">この場合<bpt id="p1">&lt;xref href="System.IO.Log.SequenceNumber"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が正しくない、すべてのレコードを書き込む必要があります。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the flush is complete.</source>
          <target state="translated">フラッシュが完了すると呼び出されるオプションの非同期コールバック。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous flush request from other requests.</source>
          <target state="translated">この特定の非同期フラッシュ要求を他の要求と区別するユーザー指定のオブジェクト。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous flush operation, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;保留になっていることを表す非同期のフラッシュ操作をまだ&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while flushing the data.</source>
          <target state="translated">データのフラッシュ中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous reserve and append operation.</source>
          <target state="translated">オーバーライドされた場合、派生クラスでは、非同期の予約および追加を開始操作です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">渡す必要があります、&lt;xref:System.IAsyncResult&gt;にこのメソッドによって返される、&lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;追加操作が完了し、リソースを適切に解放できるようにするメソッド&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">まで例外はスローされません非同期追加中にエラーが発生した場合、&lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;メソッドが呼び出された、&lt;xref:System.IAsyncResult&gt;このメソッドによって返される&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</source>
          <target state="translated">指定の予約情報が追加されたレコードと分割不可能な操作でコレクションを提供された予約するには、追加の操作です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If the append fails, no space is reserved.</source>
          <target state="translated">追加が失敗した場合、領域は予約されていません。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Normally, this method may complete before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれた前に完了場合があります。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、例外がスローされますすぐにこの操作内で。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called.</source>
          <target state="translated">I/O 要求時にディスク障害など、非同期追加要求中に発生したエラーが発生するときに例外スロー、&lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;メソッドが呼び出されます&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The reservation collection to make reservations in.</source>
          <target state="translated">予約を作成する予約コレクション。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The reservations to make, in bytes.</source>
          <target state="translated">(バイト単位) を作成する予約します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">追加の完全なときに呼び出されるオプションの非同期コールバック。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">この特定の非同期を区別するユーザー指定のオブジェクトは、他の要求からの要求を追加します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents this asynchronous operation, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;を表す、この非同期操作を保留になっている可能性があります&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record, or to make the reservation.</source>
          <target state="translated">レコード シーケンスは、十分な空き領域を新しいレコードを格納する、または予約を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous reserve and append operation.</source>
          <target state="translated">オーバーライドされた場合、派生クラスでは、非同期の予約および追加を開始操作です。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">渡す必要があります、&lt;xref:System.IAsyncResult&gt;にこのメソッドによって返される、&lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;追加操作が完了し、リソースを適切に解放できるようにするメソッド&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">まで例外はスローされません非同期追加中にエラーが発生した場合、&lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;メソッドが呼び出された、&lt;xref:System.IAsyncResult&gt;このメソッドによって返される&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</source>
          <target state="translated">指定の予約情報が追加されたレコードと分割不可能な操作でコレクションを提供された予約するには、追加の操作です。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>If the append fails, no space is reserved.</source>
          <target state="translated">追加が失敗した場合、領域は予約されていません。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Normally, this method may complete before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれた前に完了場合があります。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、例外がスローされますすぐにこの操作内で。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called.</source>
          <target state="translated">I/O 要求時にディスク障害など、非同期追加要求中に発生したエラーが発生するときに例外スロー、&lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;メソッドが呼び出されます&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The reservation collection to make reservations in.</source>
          <target state="translated">予約を作成する予約コレクション。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The reservations to make, in bytes.</source>
          <target state="translated">(バイト単位) を作成する予約します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">追加の完全なときに呼び出されるオプションの非同期コールバック。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">この特定の非同期を区別するユーザー指定のオブジェクトは、他の要求からの要求を追加します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents this asynchronous operation, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;を表す、この非同期操作を保留になっている可能性があります&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record, or to make the reservation.</source>
          <target state="translated">レコード シーケンスは、十分な空き領域を新しいレコードを格納する、または予約を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされると、以前のシーケンスに予約された領域を使用して、非同期の再開領域書き込み操作を開始します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method, to assure that the restart area write operation has completed and resources can be freed appropriately.</source>
          <target state="translated">渡す必要があります、&lt;xref:System.IAsyncResult&gt;にこのメソッドによって返される、&lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;再開領域の書き込み操作を確保するためのメソッドが完了し、リソースを適切に解放できます&lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">まで例外はスローされません非同期の再開領域の書き込み操作中にエラーが発生した場合、&lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;メソッドが呼び出された、&lt;xref:System.IAsyncResult&gt;このメソッドによって返される&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>When the operation successfully completes, the base sequence number has been updated.</source>
          <target state="translated">操作が正常に完了すると、基本シーケンス番号が更新されました。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">すべてのログ レコードのシーケンス番号を持つ未満の新しい基本シーケンス番号はアクセスできません。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.IO.Log.ReservationCollection&gt; is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</source>
          <target state="translated">場合、&lt;xref:System.IO.Log.ReservationCollection&gt;を指定すると、書き込まれた再開領域は以前に予約された、コレクションに含まれている予約を使用して領域を消費します&lt;/xref:System.IO.Log.ReservationCollection&gt;。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</source>
          <target state="translated">メソッドが成功すると、消費され、最も小さな予約データを格納できること、および予約がコレクションから削除されます。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、例外がスローされますすぐにこの操作内で。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method is called.</source>
          <target state="translated">I/O 要求時にディスク障害など、非同期追加要求中に発生したエラーが発生するときに例外スロー、&lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;メソッドが呼び出されます&lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">新しい基本シーケンス番号。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">指定されたシーケンス番号は、現在の基本シーケンス番号以上でなければなりません。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this restart area.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>この再開領域で使用する予約情報を格納します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the restart area write is complete.</source>
          <target state="translated">再開領域の書き込みが完了すると呼び出されるオプションの非同期コールバック。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</source>
          <target state="translated">この特定の非同期の再開領域の書き込み要求を他の要求と区別するユーザー指定のオブジェクト。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous restart area write operation, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;保留になっていることを表す非同期の再開領域の書き込み操作、まだでした&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされると、以前のシーケンスに予約された領域を使用して、非同期の再開領域書き込み操作を開始します。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method to ensure that the restart area write operation has completed and resources can be freed appropriately.</source>
          <target state="translated">渡す必要があります、&lt;xref:System.IAsyncResult&gt;にこのメソッドによって返される、&lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;再開領域の書き込み操作が完了し、リソースを適切に解放できるようにするメソッド&lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">まで例外はスローされません非同期の再開領域の書き込み操作中にエラーが発生した場合、&lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;メソッドが呼び出された、&lt;xref:System.IAsyncResult&gt;このメソッドによって返される&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>When the operation successfully completes, the base sequence number has been updated.</source>
          <target state="translated">操作が正常に完了すると、基本シーケンス番号が更新されました。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">すべてのログ レコードのシーケンス番号を持つ未満の新しい基本シーケンス番号はアクセスできません。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.IO.Log.ReservationCollection&gt; is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</source>
          <target state="translated">場合、&lt;xref:System.IO.Log.ReservationCollection&gt;を指定すると、書き込まれた再開領域は以前に予約された、コレクションに含まれている予約を使用して領域を消費します&lt;/xref:System.IO.Log.ReservationCollection&gt;。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</source>
          <target state="translated">メソッドが成功すると、消費され、最も小さな予約データを格納できること、および予約がコレクションから削除されます。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、例外がスローされますすぐにこの操作内で。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method is called.</source>
          <target state="translated">I/O 要求時にディスク障害など、非同期追加要求中に発生したエラーが発生するときに例外スロー、&lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;メソッドが呼び出されます&lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">新しい基本シーケンス番号。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">指定されたシーケンス番号は、現在の基本シーケンス番号以上でなければなりません。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this restart area.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>この再開領域で使用する予約情報を格納します。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the restart area write is complete.</source>
          <target state="translated">再開領域の書き込みが完了すると呼び出されるオプションの非同期コールバック。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</source>
          <target state="translated">この特定の非同期の再開領域の書き込み要求を他の要求と区別するユーザー指定のオブジェクト。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous restart area write operation, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;保留になっていることを表す非同期の再開領域の書き込み操作、まだでした&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">再開領域の書き込み中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">レコード シーケンスは、新しいレコードを格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a new <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生クラスでオーバーライドされると、新たに作成<bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しく作成された<bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ends an asynchronous append operation.</source>
          <target state="translated">派生クラスでオーバーライドされると、追加操作を非同期の終了。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">このメソッドは、I/O 操作が完了するまでブロックします。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when EndAppend is called.</source>
          <target state="translated">EndAppend が呼び出されたときに、I/O 要求時にディスク障害など、非同期書き込み要求中に発生したエラーが表示されます。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>This method must be called exactly once on every &lt;xref:System.IAsyncResult&gt; returned by the &lt;xref:System.IO.Log.IRecordSequence.BeginAppend%2A&gt; method.</source>
          <target state="translated">このメソッドは&amp;1; 回だけ呼び出す必要がありますすべて&lt;xref:System.IAsyncResult&gt;によって返される、&lt;xref:System.IO.Log.IRecordSequence.BeginAppend%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.BeginAppend%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>A reference to the outstanding asynchronous I/O request.</source>
          <target state="translated">未処理の非同期 I/O リクエストへの参照。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">追加されたログ レコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ends an asynchronous flush operation.</source>
          <target state="translated">派生クラスでオーバーライドされると、非同期のフラッシュ操作を終了します。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">このメソッドは、I/O 操作が完了するまでブロックします。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when EndFlush is called.</source>
          <target state="translated">EndFlush が呼び出されたときに、I/O 要求時にディスク障害など非同期フラッシュ要求中に発生したエラーが表示されます。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>This method must be called exactly once on every &lt;xref:System.IAsyncResult&gt; returned by the &lt;xref:System.IO.Log.IRecordSequence.BeginFlush%2A&gt; method.</source>
          <target state="translated">このメソッドは&amp;1; 回だけ呼び出す必要がありますすべて&lt;xref:System.IAsyncResult&gt;によって返される、&lt;xref:System.IO.Log.IRecordSequence.BeginFlush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.BeginFlush%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>A reference to the outstanding asynchronous I/O request.</source>
          <target state="translated">未処理の非同期 I/O リクエストへの参照。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The sequence number of the last record written.</source>
          <target state="translated">最後に書き込まれたレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ends an asynchronous reserve and append operation.</source>
          <target state="translated">派生クラスでオーバーライドされると、非同期の終了を予約および追加操作をします。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">このメソッドは、I/O 操作が完了するまでブロックします。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when EndReserveAndAppend is called.</source>
          <target state="translated">EndReserveAndAppend が呼び出されたときに、I/O 要求時にディスク障害など、非同期書き込み要求中に発生したエラーが表示されます。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>This method must be called exactly once on every &lt;xref:System.IAsyncResult&gt; returned by the &lt;xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A&gt; method.</source>
          <target state="translated">このメソッドは&amp;1; 回だけ呼び出す必要がありますすべて&lt;xref:System.IAsyncResult&gt;によって返される、&lt;xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>A reference to the outstanding asynchronous I/O request.</source>
          <target state="translated">未処理の非同期 I/O リクエストへの参照。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">追加されたログ レコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ends an asynchronous restart area write operation.</source>
          <target state="translated">派生クラスでオーバーライドされると、非同期の再開領域の書き込み操作を終了します。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">このメソッドは、I/O 操作が完了するまでブロックします。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when EndWriteRestartArea is called.</source>
          <target state="translated">EndWriteRestartArea が呼び出されたときに、I/O 要求時にディスク障害など、非同期書き込み要求中に発生したエラーが表示されます。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>This method must be called exactly once on every &lt;xref:System.IAsyncResult&gt; returned by the &lt;xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A&gt; method.</source>
          <target state="translated">このメソッドは&amp;1; 回だけ呼び出す必要がありますすべて&lt;xref:System.IAsyncResult&gt;によって返される、&lt;xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>A reference to the outstanding asynchronous I/O request.</source>
          <target state="translated">未処理の非同期 I/O リクエストへの参照。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The sequence number of the written log record.</source>
          <target state="translated">書き込まれたログ レコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ensures that all appended records have been written.</source>
          <target state="translated">派生クラスでオーバーライドされると、追加したすべてのレコードが書き込まれていることを確認します。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Calling this method ensures that all records that have been appended to the &lt;xref:System.IO.Log.IRecordSequence&gt; have been durably written.</source>
          <target state="translated">このメソッドを呼び出すことにより、すべてのレコードを追加されていること、&lt;xref:System.IO.Log.IRecordSequence&gt;永続的に書き込まれます&lt;/xref:System.IO.Log.IRecordSequence&gt;。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The sequence number of the last record written.</source>
          <target state="translated">最後に書き込まれたレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while flushing the data.</source>
          <target state="translated">データのフラッシュ中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ensures that all appended records up to and including the record with the specified sequence number have been durably written.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定されたシーケンス番号を持つレコードを含むすべての追加されたレコードが永続的に書き込まれていることを確認します。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</source>
          <target state="translated">このメソッドにより、すべてのレコード シーケンス番号を呼び出すと、指定されたシーケンス番号は、永続的に書き込まれています。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The sequence number of the latest record that must be written.</source>
          <target state="translated">書き込む必要のある最新レコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>If this <bpt id="p1">&lt;xref href="System.IO.Log.SequenceNumber"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is invalid, then all records must be written.</source>
          <target state="translated">この場合<bpt id="p1">&lt;xref href="System.IO.Log.SequenceNumber"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が正しくない、すべてのレコードを書き込む必要があります。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The sequence number of the last record written.</source>
          <target state="translated">最後に書き込まれたレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while flushing the data.</source>
          <target state="translated">データのフラッシュ中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the sequence number which is greater than the last record appended.</source>
          <target state="translated">派生クラスでオーバーライドされると、シーケンス番号を取得するが追加された最後のレコードより大きい。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</source>
          <target state="translated">このプロパティには、大きくすることが保証されるシーケンス番号が含まれています。 最後のシーケンス番号よりも、レコードを追加します。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Valid sequence numbers are greater than or equal to &lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt; and less than LastSequenceNumber.</source>
          <target state="translated">有効なシーケンス番号がより大きいか等しい&lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;LastSequenceNumber よりも小さいです&lt;/xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When using a &lt;xref:System.IO.Log.LogRecordSequence&gt; instance, the &lt;xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A&gt; value can become out of date until records are flushed to the log.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.IO.Log.LogRecordSequence&gt;インスタンスの&lt;xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A&gt;値が古くなったレコードは、ログにフラッシュされるまで&lt;/xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A&gt;&lt;/xref:System.IO.Log.LogRecordSequence&gt;を使用する場合</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; and &lt;xref:System.IO.Log.RecordAppendOptions&gt; for more information on flushing records..</source>
          <target state="translated">&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;xref:System.IO.Log.RecordAppendOptions&gt;レコード.. のフラッシュの詳細について&lt;/xref:System.IO.Log.RecordAppendOptions&gt;&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>A sequence number which is greater than the last record appended.</source>
          <target state="translated">追加された最後のレコードより大きい番号シーケンス番号します。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後にプロパティがアクセスされました。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the size of the largest record that can be appended to or read from this sequence, in bytes.</source>
          <target state="translated">派生クラスでオーバーライドされると、追加または (バイト単位)、このシーケンスから読み取り可能な最大レコード サイズを取得します。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The size of the largest record that can be appended to or read from this sequence, in bytes.</source>
          <target state="translated">追加または (バイト単位)、このシーケンスから読み取り可能な最大レコード サイズ。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後にプロパティがアクセスされました。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns an enumerable collection of records in the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされると、シーケンス内のレコードの列挙可能なコレクションを返します。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns an enumerable collection of records in the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされると、シーケンス内のレコードの列挙可能なコレクションを返します。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The order of the enumerated records depends on the value of the <ph id="ph1">`logRecordEnum`</ph> parameter.</source>
          <target state="translated">列挙されたレコードの順序の値によって異なります、<ph id="ph1">`logRecordEnum`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The sequence number of the first record where the reading starts.</source>
          <target state="translated">読み込みを開始する最初のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>A valid <bpt id="p1">&lt;xref href="System.IO.Log.LogRecordEnumeratorType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that specifies the manner (that is, forward or backward) in which records should be read from a <bpt id="p2">&lt;xref href="System.IO.Log.LogRecordSequence"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有効な<bpt id="p1">&lt;xref href="System.IO.Log.LogRecordEnumeratorType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>内からレコードを読み取る方法 (つまり、前方または後方) を指定する値、 <bpt id="p2">&lt;xref href="System.IO.Log.LogRecordSequence"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>An enumerable collection of records in the sequence.</source>
          <target state="translated">シーケンス内のレコードの列挙可能なコレクション。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while reading the record.</source>
          <target state="translated">レコードの読み取り中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns an enumerable collection of the restart areas in the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされると、シーケンス内の再開領域の列挙可能なコレクションを返します。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</source>
          <target state="translated">再開領域が下限のシーケンス番号のシーケンス番号の最大値からは、反転シーケンス番号の順に列挙されます。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</source>
          <target state="translated">最後のシーケンス番号間のシーケンス番号を持つ再開領域のみと、基本シーケンス番号が列挙されます。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the log extent containing the &lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt; becomes corrupted, this method can throw an &lt;xref:System.IO.IOException&gt; with the error message "The request could not be performed because of an unexpected I/O exception.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 場合を含むログ エクステント、&lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;が破損した場合、このメソッド、&lt;xref:System.IO.IOException&gt;と、エラー メッセージ"予期しない I/O 例外のため、要求を実行できませんでした&lt;/xref:System.IO.IOException&gt;&lt;/xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>The following error code was returned: '80070026'".</source>
          <target state="translated">次のエラー コードが返されました:&amp;80070;026"です。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>An enumerable collection of the restart areas in the sequence.</source>
          <target state="translated">シーケンス内の再開領域の列挙可能なコレクション。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while reading the record.</source>
          <target state="translated">レコードの読み取り中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされると、自動的に単一の予約を行い、シーケンスにレコードを追加します。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</source>
          <target state="translated">指定の予約情報が追加されたレコードと分割不可能な操作でコレクションを提供された予約するには、追加の操作です。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>If the append fails, no space is reserved.</source>
          <target state="translated">追加が失敗した場合、領域は予約されていません。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Normally, this method may complete before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれた前に完了場合があります。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the collection to make reservations in.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で予約を作成するコレクションを格納します。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The reservations to make, in bytes.</source>
          <target state="translated">(バイト単位) を作成する予約します。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">追加されたログ レコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record, or to make the reservation.</source>
          <target state="translated">レコード シーケンスは、十分な空き領域を新しいレコードを格納する、または予約を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</source>
          <target state="translated">派生クラスでオーバーライドされると、自動的に単一の予約を行い、シーケンスにレコードを追加します。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">含まれるデータ、<ph id="ph1">`data`</ph>パラメーターは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">ただし、データを分割して配列セグメントに戻す、レコードが読み取られると準備は実施されません。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</source>
          <target state="translated">指定の予約情報が追加されたレコードと分割不可能な操作でコレクションを提供された予約するには、追加の操作です。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>If the append fails, no space is reserved.</source>
          <target state="translated">追加が失敗した場合、領域は予約されていません。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Normally, this method may complete before the record has been written.</source>
          <target state="translated">通常、このメソッドは、レコードが書き込まれた前に完了場合があります。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">指定するか、レコードが書き込まれたことを確認してくださいに、&lt;xref:System.IO.Log.RecordAppendOptions&gt;フラグを使用して、<ph id="ph1">`recordAppendOptions`</ph>パラメーター、または呼び出し、&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;&lt;/xref:System.IO.Log.RecordAppendOptions&gt;。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">ユーザー指定の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">以前の順序で次のレコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">有効な値<bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの書き込み方法を指定します。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The reservation collection to make reservations in.</source>
          <target state="translated">予約を作成する予約コレクション。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The reservations to make, in bytes.</source>
          <target state="translated">(バイト単位) を作成する予約します。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">追加されたログ レコードのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">レコードの追加中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record, or to make the reservation.</source>
          <target state="translated">レコード シーケンスは、十分な空き領域を新しいレコードを格納する、または予約を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the total number of bytes that have been reserved.</source>
          <target state="translated">派生クラスでオーバーライドされると、予約されているバイトの合計数を取得します。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The total size of all reservations made in this record sequence.</source>
          <target state="translated">このレコード シーケンスで行われたすべての予約の合計サイズ。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後にプロパティがアクセスされました。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the sequence number of the most recently written restart area.</source>
          <target state="translated">派生クラスでオーバーライドされると、直前に書き込まれた再開領域のシーケンス番号を取得します。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">再開領域は、クライアントの最後のチェックポイント操作が含まれるデータを一時的に保存するために使用します。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">回復処理が必要な場合は、最後のチェックポイント操作からのすべてのデータの取得に再開領域を解析できます。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">このデータは、回復プロセスで使用できるようにトランザクション テーブル、ダーティ ページ テーブル、およびファイルを開くテーブルを初期化します。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The sequence number of the most recently written restart area.</source>
          <target state="translated">再開領域を直前に書き込まれたのシーケンス番号。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後にプロパティがアクセスされました。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether appends are automatically retried if the log is full.</source>
          <target state="translated">取得または設定を示す値かどうかを追加、ログがいっぱいの場合は、自動的に再試行します。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>If the value of this property is <ph id="ph1">`true`</ph>, and an &lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt; call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</source>
          <target state="translated">このプロパティの値が場合<ph id="ph1">`true`</ph>、および&lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;、シーケンス内に十分な領域がないために、呼び出しが失敗し、レコード シーケンスが領域の追加を再試行して、試みた&lt;/xref:System.IO.Log.IRecordSequence.Append%2A&gt;。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if appends are automatically retried if the log is full; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合追加は自動的に再試行を行う場合、ログがいっぱいです。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後にプロパティがアクセスされました。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Occurs when the record sequence determines that the tail must be moved forward.</source>
          <target state="translated">レコード シーケンスでは、末尾を前方移動する必要がありますが判断した場合に発生します。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>You can fire this event when the record sequence has run out of space.</source>
          <target state="translated">レコード シーケンスが領域を使い果たしたときに、このイベントを発生させることができます。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</source>
          <target state="translated">このイベントが発生したときに、シーケンス (つまり、基本シーケンス番号) の末尾は領域を解放する前方に移動します。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生クラスでオーバーライドされるとときに、再開領域を書き込みます、 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">再開領域は、クライアントの最後のチェックポイント操作が含まれるデータを一時的に保存するために使用します。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</source>
          <target state="translated">Common Log File System (CLFS) は、2 つの再開には、少なくとも&amp;1; つの有効な領域が常に利用可能なを保証するために領域を保持します。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</source>
          <target state="translated">回復処理が必要なときに、CLFS は最後のチェックポイント操作から再開領域とすべてのデータを読み取ります。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">このデータは、回復プロセスで使用できるようにトランザクション テーブル、ダーティ ページ テーブル、およびファイルを開くテーブルを初期化します。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">使用して再開領域を読み取ることができます、&lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The data in the byte array segments will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">バイト配列セグメント内のデータは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">データを分割して配列セグメントに戻す、再開領域を読み取るときに、準備は実施されません。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">シーケンス数、書き込まれた再開領域です。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">再開領域の書き込み中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">レコード シーケンスは、新しい再開領域を格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生クラスでオーバーライドされるとときに、再開領域を書き込みます、 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">再開領域は、クライアントの最後のチェックポイント操作が含まれるデータを一時的に保存するために使用します。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">回復処理が必要な場合は、最後のチェックポイント操作からのすべてのデータの取得に再開領域を解析できます。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">このデータは、回復プロセスで使用できるようにトランザクション テーブル、ダーティ ページ テーブル、およびファイルを開くテーブルを初期化します。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">使用して再開領域を読み取ることができます、&lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The data in the byte array segments will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">バイト配列セグメント内のデータは、レコードとして追加するための単一のバイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">データを分割して配列セグメントに戻す、再開領域を読み取るときに、準備は実施されません。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">シーケンス数、書き込まれた再開領域です。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">再開領域の書き込み中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">レコード シーケンスは、新しい再開領域を格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and updates the base sequence number</source>
          <target state="translated">派生クラスでオーバーライドされるとときに、再開領域を書き込みます、 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>基本シーケンス番号を更新</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">再開領域は、クライアントの最後のチェックポイント操作が含まれるデータを一時的に保存するために使用します。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">回復処理が必要な場合は、最後のチェックポイント操作からのすべてのデータの取得に再開領域を解析できます。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">このデータは、回復プロセスで使用できるようにトランザクション テーブル、ダーティ ページ テーブル、およびファイルを開くテーブルを初期化します。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">使用して再開領域を読み取ることができます、&lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</source>
          <target state="translated">再開領域が書き込まれるときに、バイト配列セグメント内のデータは、レコードとして追加するために単一バイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">データを分割して配列セグメントに戻す、再開領域を読み取るときに、準備は実施されません。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>When this method successfully completes, the base sequence number has been updated.</source>
          <target state="translated">このメソッドが正常に完了すると、基本シーケンス番号が更新されました。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">すべてのログ レコードのシーケンス番号を持つ未満の新しい基本シーケンス番号はアクセスできません。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">新しい基本シーケンス番号。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">指定されたシーケンス番号は、現在の基本シーケンス番号以上でなければなりません。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">シーケンス数、書き込まれた再開領域です。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">再開領域の書き込み中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">レコード シーケンスは、新しい再開領域を格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and updates the base sequence number.</source>
          <target state="translated">派生クラスでオーバーライドされるとときに、再開領域を書き込みます、 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>基本シーケンス番号を更新します。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">再開領域は、クライアントの最後のチェックポイント操作が含まれるデータを一時的に保存するために使用します。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">回復処理が必要な場合は、最後のチェックポイント操作からのすべてのデータの取得に再開領域を解析できます。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">このデータは、回復プロセスで使用できるようにトランザクション テーブル、ダーティ ページ テーブル、およびファイルを開くテーブルを初期化します。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">使用して再開領域を読み取ることができます、&lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</source>
          <target state="translated">再開領域が書き込まれるときに、バイト配列セグメント内のデータは、レコードとして追加するために単一バイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">データを分割して配列セグメントに戻す、再開領域を読み取るときに、準備は実施されません。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>When this method successfully completes, the base sequence number has been updated.</source>
          <target state="translated">このメソッドが正常に完了すると、基本シーケンス番号が更新されました。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">すべてのログ レコードのシーケンス番号を持つ未満の新しい基本シーケンス番号はアクセスできません。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">新しい基本シーケンス番号。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">指定されたシーケンス番号は、現在の基本シーケンス番号以上でなければなりません。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">シーケンス数、書き込まれた再開領域です。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">再開領域の書き込み中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">レコード シーケンスは、新しい再開領域を格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using a reservation, and updates the base sequence number</source>
          <target state="translated">派生クラスでオーバーライドされるとときに、再開領域を書き込みます、 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>予約を使用して、基本シーケンス番号を更新</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">再開領域は、クライアントの最後のチェックポイント操作が含まれるデータを一時的に保存するために使用します。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">回復処理が必要な場合は、最後のチェックポイント操作からのすべてのデータの取得に再開領域を解析できます。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">このデータは、回復プロセスで使用できるようにトランザクション テーブル、ダーティ ページ テーブル、およびファイルを開くテーブルを初期化します。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">使用して再開領域を読み取ることができます、&lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</source>
          <target state="translated">再開領域が書き込まれるときに、バイト配列セグメント内のデータは、レコードとして追加するために単一バイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">データを分割して配列セグメントに戻す、再開領域を読み取るときに、準備は実施されません。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</source>
          <target state="translated">予約を指定すると、書き込まれた再開領域は以前に予約された、コレクションに含まれている予約を使用して領域を消費します。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</source>
          <target state="translated">メソッドが成功すると、消費され、最も小さな予約データを持つことができること、および予約がコレクションから削除されます。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>When this method successfully completes, the base sequence number has been updated.</source>
          <target state="translated">このメソッドが正常に完了すると、基本シーケンス番号が更新されました。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">すべてのログ レコードのシーケンス番号を持つ未満の新しい基本シーケンス番号はアクセスできません。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、例外がスローされますすぐにこの操作内で。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called.</source>
          <target state="translated">I/O 要求時にディスク障害など、非同期追加要求中に発生したエラーが発生するときに例外スロー、&lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;メソッドが呼び出されます&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">新しい基本シーケンス番号。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">指定されたシーケンス番号は、現在の基本シーケンス番号以上でなければなりません。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this restart area.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>この再開領域で使用する予約情報を格納します。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">シーケンス数、書き込まれた再開領域です。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">再開領域の書き込み中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">レコード シーケンスは、新しい再開領域を格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using a reservation, and updates the base sequence number.</source>
          <target state="translated">派生クラスでオーバーライドされるとときに、再開領域を書き込みます、 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>予約を使用して、基本シーケンス番号を更新します。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">再開領域は、クライアントの最後のチェックポイント操作が含まれるデータを一時的に保存するために使用します。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">回復処理が必要な場合は、最後のチェックポイント操作からのすべてのデータの取得に再開領域を解析できます。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">このデータは、回復プロセスで使用できるようにトランザクション テーブル、ダーティ ページ テーブル、およびファイルを開くテーブルを初期化します。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">使用して再開領域を読み取ることができます、&lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;メソッド&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</source>
          <target state="translated">再開領域が書き込まれるときに、バイト配列セグメント内のデータは、レコードとして追加するために単一バイト配列に連結されます。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">データを分割して配列セグメントに戻す、再開領域を読み取るときに、準備は実施されません。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</source>
          <target state="translated">予約を指定すると、書き込まれた再開領域は以前に予約された、コレクションに含まれている予約を使用して領域を消費します。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</source>
          <target state="translated">メソッドが成功すると、消費され、最も小さな予約データを持つことができること、および予約がコレクションから削除されます。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>When this method successfully completes, the base sequence number has been updated.</source>
          <target state="translated">このメソッドが正常に完了すると、基本シーケンス番号が更新されました。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">すべてのログ レコードのシーケンス番号を持つ未満の新しい基本シーケンス番号はアクセスできません。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、例外がスローされますすぐにこの操作内で。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called.</source>
          <target state="translated">I/O 要求時にディスク障害など、非同期追加要求中に発生したエラーが発生するときに例外スロー、&lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;メソッドが呼び出されます&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">連結して、レコードとして追加されるバイト配列セグメントの一覧。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">新しい基本シーケンス番号。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">指定されたシーケンス番号は、現在の基本シーケンス番号以上でなければなりません。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this restart area.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>この再開領域で使用する予約情報を格納します。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">シーケンス数、書き込まれた再開領域です。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">再開領域の書き込み中に I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">レコード シーケンスは、新しい再開領域を格納するための十分な空き領域を作成できませんでした。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">シーケンスが破棄された後に、メソッドが呼び出されました。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>