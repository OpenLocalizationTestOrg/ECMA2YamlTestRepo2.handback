<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bb24e794fede20895936913c4055a5b6d79c02e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.Odbc.OdbcCommand.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">153b2f5ceaa763e71ec77e57391010b25037a370</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86b89eaa451fb6dafa8762ed7f1f2dfdfde411e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an SQL statement or stored procedure to execute against a data source.</source>
          <target state="translated">SQL ステートメントまたはデータ ソースに対して実行するストアド プロシージャを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The OdbcCommand class provides the following methods for executing commands against a data source:      |Item|Description|   |----------|-----------------|   |&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;|Executes commands that return rows.|   |&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;|Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.|   |&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A&gt;|Retrieves a single value, for example, an aggregate value, from a database.|       You can reset the &lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt; property and reuse the OdbcCommand object.</source>
          <target state="translated">OdbcCommand クラスは、データ ソースに対してコマンドを実行するための次のメソッドを提供します |。項目 |説明 |  |----------|-----------------|  |&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;|行を返すコマンドを実行します |。  |&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;|SQL の INSERT、DELETE、UPDATE、および一連のステートメントなどのコマンドを実行します |。  |&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A&gt;|データベースから単一の値、たとえば、集計値を取得します |。      リセットすることができます、&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;プロパティと OdbcCommand オブジェクトを再利用します&lt;/xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, you must close the &lt;xref:System.Data.Odbc.OdbcDataReader&gt; before you can execute a new or previous command.</source>
          <target state="translated">ただし、閉じる必要があります、&lt;xref:System.Data.Odbc.OdbcDataReader&gt;新しいまたは前のコマンドを実行する前にします&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If execution of the command causes a fatal &lt;xref:System.Data.Odbc.OdbcException&gt; such as a SQL Server severity level of 20 or more, &lt;xref:System.Data.Odbc.OdbcConnection&gt; may close.</source>
          <target state="translated">コマンドの実行によって致命的なエラーが生じた場合&lt;xref:System.Data.Odbc.OdbcException&gt;20 以上の SQL Server の重大度レベルなど&lt;xref:System.Data.Odbc.OdbcConnection&gt;閉じることがあります&lt;/xref:System.Data.Odbc.OdbcConnection&gt;&lt;/xref:System.Data.Odbc.OdbcException&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, the user can reopen the connection and continue.</source>
          <target state="translated">ただし、ユーザーことができます、接続を再び開き、続行します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The base constructor initializes all fields to their default values.</source>
          <target state="translated">基本コンス トラクターは、すべてのフィールドを既定値を初期化します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Data.Odbc.OdbcCommand&gt;.</source>
          <target state="translated">次の表は、 &lt;xref:System.Data.Odbc.OdbcCommand&gt;。&lt;/xref:System.Data.Odbc.OdbcCommand&gt;のインスタンスの初期プロパティ値を示しています。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>|Properties|Initial Value|   |----------------|-------------------|   |&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;|empty string ("")|   |&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;|30|   |&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;|<ph id="ph1">`Text`</ph>|   |&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;|null|</source>
          <target state="translated">|プロパティ |初期値 |  |----------------|-------------------|  |&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;| 空の文字列 ("") |  |&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;|&amp;30; |  |&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;|<ph id="ph1">`Text`</ph>|  |&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;|null|&lt;/xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the text of the query.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クエリのテキストを持つクラス。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The text of the query.</source>
          <target state="translated">クエリのテキスト。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the text of the query and an <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クエリのテキストを持つクラスと<bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The text of the query.</source>
          <target state="translated">クエリのテキスト。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the connection to a data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>をデータ ソースへの接続を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the text of the query, an <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object, and the &lt;xref:System.Data.Odbc.OdbcCommand.Transaction*&gt;.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、クエリのテキストを持つクラス、 <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクト、および&lt;xref:System.Data.Odbc.OdbcCommand.Transaction*&gt;.&lt;/xref:System.Data.Odbc.OdbcCommand.Transaction*&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following table shows initial property values for an instance of this implementation of the &lt;xref:System.Data.Odbc.OdbcCommand&gt;.</source>
          <target state="translated">次の表は、 &lt;xref:System.Data.Odbc.OdbcCommand&gt;。&lt;/xref:System.Data.Odbc.OdbcCommand&gt;のこの実装のインスタンスの初期プロパティ値を示しています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>|Properties|Initial Value|   |----------------|-------------------|   |&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;|<ph id="ph1">`cmdText`</ph>|   |&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;|30|   |&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;|<ph id="ph2">`Text`</ph>|   |&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;|A new &lt;xref:System.Data.Odbc.OdbcConnection&gt; that is the value for the <ph id="ph3">`connection`</ph> parameter.|       You can change the value for any one of these parameters by setting the related property.</source>
          <target state="translated">|プロパティ |初期値 |  |----------------|-------------------|  |&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;|<ph id="ph1">`cmdText`</ph>|  |&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;|&amp;30; |  |&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;|<ph id="ph2">`Text`</ph>|  |&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;|値である新しい&lt;xref:System.Data.Odbc.OdbcConnection&gt;、<ph id="ph3">`connection`</ph>パラメーターです |。      これらのパラメーターのいずれかの値を変更するには、関連するプロパティを設定します&lt;/xref:System.Data.Odbc.OdbcConnection&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The text of the query.</source>
          <target state="translated">クエリのテキスト。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the connection to a data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>をデータ ソースへの接続を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The transaction in which the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> executes.</source>
          <target state="translated">これで、トランザクション、 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を実行します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Tries to cancel the execution of an <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">実行をキャンセルしようとする、 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If there is nothing to cancel, nothing occurs.</source>
          <target state="translated">[キャンセル] を何も行われませんが、何が発生します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>However, if there is a command in process, and the cancellation try fails, no exception is generated.</source>
          <target state="translated">ただし、プロセスでは、コマンドがあるし、キャンセルが失敗して、例外は生成されません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To cancel a query on one thread, Cancel must be called from another thread.</source>
          <target state="translated">1 つのスレッドでのクエリを取り消すには、[キャンセル] を別のスレッドから呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Because you cannot execute commands asynchronously with &lt;xref:System.Data.Odbc.OdbcCommand&gt;, to cancel a command from another thread, one thread must be running synchronously.</source>
          <target state="translated">使用した非同期のコマンドを実行することはできませんので&lt;xref:System.Data.Odbc.OdbcCommand&gt;、別のスレッドからコマンドを取り消す&amp;1; つのスレッドを同期的に実行する必要があります&lt;/xref:System.Data.Odbc.OdbcCommand&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This means that the &lt;xref:System.Data.Odbc.OdbcCommand&gt; object must be accessible from both threads.</source>
          <target state="translated">つまり、&lt;xref:System.Data.Odbc.OdbcCommand&gt;オブジェクトは、両方のスレッドからアクセス可能である必要があります&lt;/xref:System.Data.Odbc.OdbcCommand&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets the SQL statement or stored procedure to execute against the data source.</source>
          <target state="translated">取得または SQL ステートメントまたはデータ ソースに対して実行するストアド プロシージャを設定します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.IDbCommand.CommandType%2A&gt; property is set to <ph id="ph1">`StoredProcedure`</ph>, the CommandText property should be set using standard ODBC stored procedure escape sequences.</source>
          <target state="translated">ときに、&lt;xref:System.Data.IDbCommand.CommandType%2A&gt;プロパティに設定されている<ph id="ph1">`StoredProcedure`</ph>、標準 ODBC ストアド プロシージャのエスケープ シーケンスを使用して、CommandText プロパティを設定する必要があります&lt;/xref:System.Data.IDbCommand.CommandType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Setting the CommandText to the name of the stored procedure does not function as it does for other .NET Framework data providers.</source>
          <target state="translated">ストアド プロシージャの名前に、CommandText を設定しても、同様に、他の .NET Framework データ プロバイダーは機能しません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Many language features, such as outer joins and scalar function calls, are generally implemented by data sources.</source>
          <target state="translated">外部結合およびスカラー関数の呼び出しなど、多くの言語機能は、一般に、データ ソースによって実装されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Even the syntax for these features is generally data source-specific.</source>
          <target state="translated">これらの機能の構文でもは、一般にデータ ソースに固有です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Therefore, ODBC defines escape sequences that contain standard syntax for the following language features:      -   Date, time, timestamp, and datetime interval literals      -   Scalar functions such as numeric, string, and data type conversion functions      -   LIKE predicate escape character      -   Outer joins      -   Procedure calls       The escape sequence used by ODBC is as follows:      <ph id="ph1">```   {extension}   ```</ph>       This escape sequence is recognized and parsed by ODBC drivers.</source>
          <target state="translated">そのため、ODBC が次の言語機能の標準構文を含むエスケープ シーケンスを定義します: 数値などの日付、時刻、タイムスタンプ、および datetime 間隔のリテラルのスカラー関数、文字列、およびデータ型変換関数では、ODBC で使用されるエスケープ シーケンスは次のように、エスケープ文字の外部結合のプロシージャ呼び出しの述語と同様に:<ph id="ph1">```   {extension}   ```</ph>このエスケープ シーケンスが認識され、ODBC ドライバーによって解析します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>They then replace any escape sequences with data source-specific grammar.</source>
          <target state="translated">それらは、データ ソースに固有の文法でエスケープ シーケンスを置き換えます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A procedure is an executable object stored at the data source.</source>
          <target state="translated">プロシージャは、データ ソースに格納されている実行可能なオブジェクトです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Generally, it is one or more SQL statements that have been precompiled.</source>
          <target state="translated">これは通常、プリコンパイルされた&amp;1; つまたは複数の SQL ステートメントです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The escape sequence for calling a procedure is      <ph id="ph1">```   {[?=]call procedure-name[([parameter][,[parameter]]...)]}   ```</ph>       where <ph id="ph2">`procedure-name`</ph> specifies the name of a procedure and <ph id="ph3">`parameter`</ph> specifies a procedure parameter.</source>
          <target state="translated">プロシージャ呼び出しのためのエスケープ シーケンスは<ph id="ph1">```   {[?=]call procedure-name[([parameter][,[parameter]]...)]}   ```</ph>場所<ph id="ph2">`procedure-name`</ph>プロシージャの名前を指定および<ph id="ph3">`parameter`</ph>プロシージャのパラメーターを指定します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The command executes this stored procedure when you call one of the Execute methods (for example, &lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt; or &lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;).</source>
          <target state="translated">コマンドでは、Execute メソッドの&amp;1; つを呼び出すときにこのストアド プロシージャが実行される (たとえば、&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;または&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;).&lt;/xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt; &lt;/xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You cannot set the &lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;, &lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt; and CommandText properties if the current connection is performing an execute or fetch operation.</source>
          <target state="translated">設定することはできません、 &lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;、&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;と現在の接続が実行または fetch 操作を実行している場合に、CommandText プロパティ&lt;/xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The ODBC.NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an &lt;xref:System.Data.Odbc.OdbcCommand&gt; when &lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt; is set to <ph id="ph1">`Text`</ph>.</source>
          <target state="translated">ODBC.NET プロバイダーが SQL ステートメントまたは呼び出されるストアド プロシージャにパラメーターを渡すの名前付きパラメーターをサポートしていません、&lt;xref:System.Data.Odbc.OdbcCommand&gt;とき&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;に設定されている<ph id="ph1">`Text`</ph>&lt;/xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In this case, the question mark (?) placeholder must be used.</source>
          <target state="translated">この場合、疑問符 (?) プレース ホルダーを使用する必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example:      <ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = ?   ```</ph>       Therefore, the order in which &lt;xref:System.Data.Odbc.OdbcParameter&gt; objects are added to the &lt;xref:System.Data.Odbc.OdbcParameterCollection&gt; must directly correspond to the position of the question mark placeholder for the parameter.</source>
          <target state="translated">例:<ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = ?   ```</ph>そのため、順序&lt;xref:System.Data.Odbc.OdbcParameter&gt;オブジェクトに追加されます、&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;パラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります&lt;/xref:System.Data.Odbc.OdbcParameterCollection&gt;&lt;/xref:System.Data.Odbc.OdbcParameter&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If a parameter contains a null value, the .NET Framework Data Provider for ODBC still binds that parameter, but uses a default parameter, if one has been defined by using SQL_DEFAULT_PARAM, instead of the null value.</source>
          <target state="translated">パラメーターに null 値が含まれている場合、.NET Framework Data Provider for ODBC も、そのパラメーターをバインドが、SQL_DEFAULT_PARAM を使用して、null 値ではなく&amp;1; つ定義されている場合、既定のパラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;:      <ph id="ph1">```   {1, null, 2}   ```</ph>       passed into the CommandText property:      <ph id="ph2">```   {call sp(?, ?, ?)}   ```</ph>       causes the .NET Framework Data Provider for ODBC binding the first parameter to the value 1, the third parameter to the value 2, and the second parameter as SQL_DEFAULT_PARAM.</source>
          <target state="translated">たとえば、 &lt;xref:System.Data.Odbc.OdbcParameterCollection&gt; <ph id="ph1">```   {1, null, 2}   ```</ph> CommandText プロパティに渡される:<ph id="ph2">```   {call sp(?, ?, ?)}   ```</ph>原因は、最初のパラメーター値を 1 に、値 2、3 番目のパラメーターと SQL_DEFAULT_PARAM として 2 番目のパラメーター バインド ODBC の .NET Framework Data Provider。&lt;/xref:System.Data.Odbc.OdbcParameterCollection&gt; 。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>However, this behavior is driver-dependent.</source>
          <target state="translated">ただし、この動作は、ドライバーによって異なります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If the driver does not support this functionality, just do not pass in a value for the parameter.</source>
          <target state="translated">ドライバーがこの機能をサポートしていない場合だけを渡さないでください値のパラメーターです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, use the &lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;:      <ph id="ph1">```   {1, 2}   ```</ph>       and set the CommandText property to the following:      <ph id="ph2">```   {call sp(?, null, ?)}   ```</ph><ph id="ph3">      &gt; </ph><ph id="ph4">[!NOTE]</ph> &gt;  If a parameter is omitted, the comma delimiting it from other parameters must still appear.</source>
          <target state="translated">たとえば、使用して、 &lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;:<ph id="ph1">```   {1, 2}   ```</ph>し、次に、CommandText プロパティを設定: <ph id="ph2">```   {call sp(?, null, ?)}   ```</ph> <ph id="ph3">      &gt; </ph> <ph id="ph4">[!NOTE]</ph> &gt; パラメーターを省略すると、その他のパラメーターを区切るコンマが必要があります&lt;/xref:System.Data.Odbc.OdbcParameterCollection&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If an input or input/output parameter is omitted, the procedure uses the default value of the parameter.</source>
          <target state="translated">パラメーターまたは入出力パラメーターを省略した場合、プロシージャは、パラメーターの既定値を使用します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Another way to specify the default value of an input or input/output parameter is to set the value of the length/indicator buffer bound to the parameter to SQL_DEFAULT_PARAM.</source>
          <target state="translated">長さ/インジケーター バッファーの値を設定するパラメーターまたは入出力パラメーターの既定値を指定する別の方法は、SQL_DEFAULT_PARAM をパラメーターにバインドします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The SQL statement or stored procedure to execute.</source>
          <target state="translated">SQL ステートメントまたはストアド プロシージャを実行します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
          <target state="translated">既定値は空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the wait time before terminating an attempt to execute a command and generating an error.</source>
          <target state="translated">取得またはコマンドを実行する試行を終了し、エラーを生成するまでの待機時間を設定します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A value of zero (0) specifies no limit to the wait time, instead of no wait time, and therefore should be avoided.</source>
          <target state="translated">値がゼロ (0) の指定、待機時間ではなく、待機時間を制限していないため、避ける必要があります。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The time in seconds to wait for the command to execute.</source>
          <target state="translated">コマンドの実行を待機する秒単位の時間。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The default is 30 seconds.</source>
          <target state="translated">既定は 30 秒です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates how the &lt;xref:System.Data.Odbc.OdbcCommand.CommandText*&gt; property is interpreted.</source>
          <target state="translated">取得または設定を示す値が、どのように&lt;xref:System.Data.Odbc.OdbcCommand.CommandText*&gt;プロパティが解釈されます&lt;/xref:System.Data.Odbc.OdbcCommand.CommandText*&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When the CommandType property is set to <ph id="ph1">`StoredProcedure`</ph>, you should set the &lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt; property to the full ODBC call syntax.</source>
          <target state="translated">CommandType プロパティに設定するときに<ph id="ph1">`StoredProcedure`</ph>、設定する必要があります、&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;プロパティをすべての ODBC call 構文&lt;/xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The command then executes this stored procedure when you call one of the Execute methods (for example, &lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt; or &lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;).</source>
          <target state="translated">コマンドは、Execute メソッドの&amp;1; つを呼び出すときに、このストアド プロシージャを実行 (たとえば、&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;または&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;).&lt;/xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt; &lt;/xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;, CommandType and &lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt; properties cannot be set if the current connection is performing an execute or fetch operation.</source>
          <target state="translated">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;、CommandType と&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;、現在の接続が実行または fetch 操作を実行している場合、プロパティを設定することはできません&lt;/xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for ODBC does not support passing named parameters to an SQL statement or to a stored procedure called by an &lt;xref:System.Data.Odbc.OdbcCommand&gt;.</source>
          <target state="translated">名前付きの引き渡しは、.NET Framework Data Provider for ODBC でサポートされません&lt;xref:System.Data.Odbc.OdbcCommand&gt;.&lt;/xref:System.Data.Odbc.OdbcCommand&gt;によって呼び出されるストアド プロシージャを SQL ステートメントにパラメーター</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In either of these cases, use the question mark (?) placeholder.</source>
          <target state="translated">いずれのケースでは、疑問符 (?) プレース ホルダーを使用します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For example:      <ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = ?   ```</ph>       The order in which &lt;xref:System.Data.Odbc.OdbcParameter&gt; objects are added to the &lt;xref:System.Data.Odbc.OdbcParameterCollection&gt; must directly correspond to the position of the question mark placeholder for the parameter.</source>
          <target state="translated">例:<ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = ?   ```</ph>順序&lt;xref:System.Data.Odbc.OdbcParameter&gt;オブジェクトに追加されます、&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;パラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります&lt;/xref:System.Data.Odbc.OdbcParameterCollection&gt;&lt;/xref:System.Data.Odbc.OdbcParameter&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The .NET Framework Data Provider for ODBC does not support the &lt;xref:System.Data.CommandType&gt; setting of <ph id="ph2">`TableDirect`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; .NET Framework Data Provider for ODBC がサポートしていません、&lt;xref:System.Data.CommandType&gt;設定<ph id="ph2">`TableDirect`</ph>&lt;/xref:System.Data.CommandType&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.CommandType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Data.CommandType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_Text" name="Text" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_Text" name="Text" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The value was not a valid <bpt id="p1">&lt;xref href="System.Data.CommandType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値が有効ないなかった<bpt id="p1">&lt;xref href="System.Data.CommandType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used by this instance of the <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のこのインスタンスによって使用される、 <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You cannot set the Connection, &lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;, and &lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt; properties if the current connection is performing an execute or fetch operation.</source>
          <target state="translated">接続を設定することはできません&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;、および&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;プロパティの場合は、現在の接続で実行またはフェッチ操作が実行されます&lt;/xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you set Connection while a transaction is in progress and the &lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt; property is not null, an &lt;xref:System.InvalidOperationException&gt; is generated.</source>
          <target state="translated">トランザクションが進行中は、接続を設定する場合、&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;プロパティが null でない、&lt;xref:System.InvalidOperationException&gt;が生成されます&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you set Connection after the transaction has been committed or rolled back, and the &lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt; property is not null, the &lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt; property is then set to a null value.</source>
          <target state="translated">トランザクションがコミットまたはロールバックされた後、接続を設定した場合、&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;プロパティが null でない、&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;プロパティが null 値に設定し、&lt;/xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt; &lt;/xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The connection to a data source.</source>
          <target state="translated">データ ソースに接続します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The default is a null value.</source>
          <target state="translated">既定値は、null 値です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The Connection property was changed while a transaction was in progress.</source>
          <target state="translated">トランザクションの処理中に、接続プロパティが変更されました。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Creates a new instance of an <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">新しいインスタンスを作成、 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcParameter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The CreateParameter method is a strongly-typed version of &lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;.</source>
          <target state="translated">CreateParameter メソッドは、厳密に型指定されたバージョンの&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;。&lt;/xref:System.Data.IDbCommand.CreateParameter%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcParameter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the command object should be visible in a customized interface control.</source>
          <target state="translated">取得または、コマンド オブジェクトをカスタマイズしたインターフェイスのコントロールに表示するかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept>, if the command object should be visible in a control; otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>true<ept id="p1">**</ept>コマンド オブジェクトは、それ以外のコントロールに表示されている必要がある場合、 <bpt id="p2">**</bpt>false<ept id="p2">**</ept>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">**</bpt>true<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Executes an SQL statement against the &lt;xref:System.Data.Odbc.OdbcCommand.Connection*&gt; and returns the number of rows affected.</source>
          <target state="translated">に対して SQL ステートメントを実行、&lt;xref:System.Data.Odbc.OdbcCommand.Connection*&gt;影響を受ける行の数を返します&lt;/xref:System.Data.Odbc.OdbcCommand.Connection*&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You can use ExecuteNonQuery to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a &lt;xref:System.Data.DataSet&gt;, by executing UPDATE, INSERT, or DELETE statements.</source>
          <target state="translated">たとえば、データベースの構造のクエリを実行する (テーブルなどのデータベース オブジェクトを作成する); カタログ操作を実行するのに ExecuteNonQuery を使用することができます。使用せず、データベース内のデータを変更したり、&lt;xref:System.Data.DataSet&gt;で実行する、更新、挿入、または DELETE ステートメント&lt;/xref:System.Data.DataSet&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can also use ExecuteNonQuery to execute multiple SQL statements if the underlying ODBC driver supports this functionality.</source>
          <target state="translated">また、基になる ODBC ドライバーは、この機能をサポートしている場合は、複数の SQL ステートメントを実行するのに ExecuteNonQuery を使用することができます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In this case, the return value is the number of rows affected by all statements in the command.</source>
          <target state="translated">この場合、戻り値は、コマンドのすべてのステートメントによって影響を受ける行の数</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Although ExecuteNonQuery returns no rows, any output parameters or return values mapped to parameters are populated with data.</source>
          <target state="translated">ExecuteNonQuery に行が返されなかったが、出力パラメーターまたは戻り値のパラメーターにマップ データが挿入されます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE、INSERT、および DELETE ステートメントでは、戻り値は、コマンドによって影響を受ける行の数です。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">その他のすべての種類のステートメントは、戻り値は-1 です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If a rollback occurs, the return value is also -1.</source>
          <target state="translated">ロールバックが発生した場合、戻り値も-1 にです。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>When a trigger exists on a table and data is being added or changed in the table, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.</source>
          <target state="translated">トリガーが存在する場合にテーブルとデータは追加またはテーブルで変更されるは、戻り値には、insert または update 操作とトリガーの影響を受ける行の数の両方の影響を受ける行の数が含まれています。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE、INSERT、および DELETE ステートメントでは、戻り値は、コマンドによって影響を受ける行の数です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">その他のすべての種類のステートメントは、戻り値は-1 です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The connection does not exist.</source>
          <target state="translated">接続が存在しません。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-or-       The connection is not open.</source>
          <target state="translated">または、接続が開かれていません。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Sends the &lt;xref:System.Data.Odbc.OdbcCommand.CommandText<bpt id="p1">*</bpt>&gt; to the &lt;xref:System.Data.Odbc.OdbcCommand.Connection<ept id="p1">*</ept>&gt; and builds an <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">送信、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; を&lt;&gt; <ept id="p1">*</ept>&gt; をビルドし、 <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You should set the &lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt; property to the full ODBC call syntax for stored procedures.</source>
          <target state="translated">設定する必要があります、&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;プロパティをストアド プロシージャの完全な ODBC 呼び出し構文&lt;/xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The command executes this stored procedure when you call ExecuteReader.</source>
          <target state="translated">コマンドは、ExecuteReader を呼び出すときに、このストアド プロシージャを実行します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>While the &lt;xref:System.Data.Odbc.OdbcDataReader&gt; is used, the associated &lt;xref:System.Data.Odbc.OdbcConnection&gt; is busy serving the &lt;xref:System.Data.Odbc.OdbcDataReader&gt;.</source>
          <target state="translated">中に、&lt;xref:System.Data.Odbc.OdbcDataReader&gt;を使用する&lt;xref:System.Data.Odbc.OdbcConnection&gt;&lt;xref:System.Data.Odbc.OdbcDataReader&gt;.&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;を処理中は、&lt;/xref:System.Data.Odbc.OdbcConnection&gt;関連付けられている&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>While in this state, no other operations can be performed on the &lt;xref:System.Data.Odbc.OdbcConnection&gt; other than closing it.</source>
          <target state="translated">この状態で他の操作はありません&lt;xref:System.Data.Odbc.OdbcConnection&gt;それを閉じる以外&lt;/xref:System.Data.Odbc.OdbcConnection&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This is the case until the &lt;xref:System.Data.Odbc.OdbcDataReader.Close%2A&gt; method of the &lt;xref:System.Data.Odbc.OdbcDataReader&gt; is called.</source>
          <target state="translated">これは、まで続きます、&lt;xref:System.Data.Odbc.OdbcDataReader.Close%2A&gt;のメソッド、&lt;xref:System.Data.Odbc.OdbcDataReader&gt;と呼びます&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;&lt;/xref:System.Data.Odbc.OdbcDataReader.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Sends the &lt;xref:System.Data.Odbc.OdbcCommand.CommandText<bpt id="p1">*</bpt>&gt; to the &lt;xref:System.Data.Odbc.OdbcCommand.Connection<ept id="p1">*</ept>&gt;, and builds an <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> using one of the <bpt id="p3">&lt;xref uid="langword_csharp_CommandBehavior" name="CommandBehavior" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">送信、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; を&lt;&gt; <ept id="p1">*</ept>&gt;、およびビルド、 <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>のいずれかを使用して、 <bpt id="p3">&lt;xref uid="langword_csharp_CommandBehavior" name="CommandBehavior" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>If you expect your SQL statement to return only a single row, specifying <ph id="ph1">`SingleRow`</ph> as the &lt;xref:System.Data.CommandBehavior&gt; value may improve application performance.</source>
          <target state="translated">指定する&amp;1; つの行のみを返す SQL ステートメントの場合、<ph id="ph1">`SingleRow`</ph>として、&lt;xref:System.Data.CommandBehavior&gt;値は、アプリケーションのパフォーマンスを向上させることがあります&lt;/xref:System.Data.CommandBehavior&gt;。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You should set the &lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt; property to the full ODBC call syntax for stored procedures.</source>
          <target state="translated">設定する必要があります、&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;プロパティをストアド プロシージャの完全な ODBC 呼び出し構文&lt;/xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The command executes this stored procedure when you call &lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;.</source>
          <target state="translated">コマンドは、 &lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;。&lt;/xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;を呼び出すときにこのストアド プロシージャを実行します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Odbc.OdbcDataReader&gt; supports a special mode that enables large binary values to be read efficiently.</source>
          <target state="translated">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;を効率的に読み込まれる大きなバイナリ値を有効にする、特殊なモードをサポートしています&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">`SequentialAccess`</ph> setting for &lt;xref:System.Data.CommandBehavior&gt;.</source>
          <target state="translated">詳細については、次を参照してください、 <ph id="ph1">`SequentialAccess`</ph> &lt;xref:System.Data.CommandBehavior&gt;。&lt;/xref:System.Data.CommandBehavior&gt;の設定。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`SequentialAccess`</ph> value of &lt;xref:System.Data.CommandBehavior&gt; is not a limiting setting; it just means that you will have at least sequential access to the &lt;xref:System.Data.Odbc.OdbcDataReader&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、<ph id="ph2">`SequentialAccess`</ph>の値&lt;xref:System.Data.CommandBehavior&gt;いない制限の対象は、設定、単に意味するがアクセスできるようには、少なくともシーケンシャル&lt;xref:System.Data.Odbc.OdbcDataReader&gt;&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;&lt;/xref:System.Data.CommandBehavior&gt;。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For example, when you use the SQL Server ODBC Driver in <ph id="ph1">`SequentialAccess`</ph> mode, you can still move to the first column of an &lt;xref:System.Data.Odbc.OdbcDataReader&gt; row after having read through all the other columns sequentially.</source>
          <target state="translated">SQL Server ODBC Driver を使用する場合など、<ph id="ph1">`SequentialAccess`</ph>モードでは、まだに移動できますの最初の列、&lt;xref:System.Data.Odbc.OdbcDataReader&gt;順番に他のすべての列を参照した後に行&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>While the &lt;xref:System.Data.Odbc.OdbcDataReader&gt; is used, the associated &lt;xref:System.Data.Odbc.OdbcConnection&gt; is busy serving the &lt;xref:System.Data.Odbc.OdbcDataReader&gt;.</source>
          <target state="translated">中に、&lt;xref:System.Data.Odbc.OdbcDataReader&gt;を使用する&lt;xref:System.Data.Odbc.OdbcConnection&gt;&lt;xref:System.Data.Odbc.OdbcDataReader&gt;.&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;を処理中は、&lt;/xref:System.Data.Odbc.OdbcConnection&gt;関連付けられている&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>While in this state, no other operations can be performed on the &lt;xref:System.Data.Odbc.OdbcConnection&gt; other than closing it.</source>
          <target state="translated">この状態で他の操作はありません&lt;xref:System.Data.Odbc.OdbcConnection&gt;それを閉じる以外&lt;/xref:System.Data.Odbc.OdbcConnection&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This is the case until you call the &lt;xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">呼び出されるまで、そうでは、&lt;xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Data.Odbc.OdbcDataReader&gt; is created with &lt;xref:System.Data.CommandBehavior&gt; set to <ph id="ph1">`CloseConnection`</ph>, closing the &lt;xref:System.Data.Odbc.OdbcDataReader&gt; closes the connection automatically.</source>
          <target state="translated">場合、&lt;xref:System.Data.Odbc.OdbcDataReader&gt;で作成された&lt;xref:System.Data.CommandBehavior&gt;'éý'<ph id="ph1">`CloseConnection`</ph>を閉じて、&lt;xref:System.Data.Odbc.OdbcDataReader&gt;接続を自動的に閉じます&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;&lt;/xref:System.Data.CommandBehavior&gt;&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref uid="langword_csharp_System.Data.CommandBehavior" name="System.Data.CommandBehavior" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref uid="langword_csharp_System.Data.CommandBehavior" name="System.Data.CommandBehavior" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Executes the query, and returns the first column of the first row in the result set returned by the query.</source>
          <target state="translated">クエリを実行し、クエリによって返される結果セットの最初の行の最初の列を返します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Additional columns or rows are ignored.</source>
          <target state="translated">追加の列または行は無視されます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Use the ExecuteScalar method to retrieve a single value (for example, an aggregate value) from a data source.</source>
          <target state="translated">ExecuteScalar メソッドを使用すると、データ ソースから単一の値 (たとえば、集計値) を取得できます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This requires less code than using the &lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt; method, and then performing the operations required to generate the single value from the data returned by an &lt;xref:System.Data.Odbc.OdbcDataReader&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt; &lt;xref:System.Data.Odbc.OdbcDataReader&gt;。&lt;/xref:System.Data.Odbc.OdbcDataReader&gt;によって返されるデータから単一の値を生成するために必要なメソッド、および操作を実行し、&lt;/xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;使用するよりも少ないコードが必要です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The first column of the first row in the result set, or a null reference if the result set is empty.</source>
          <target state="translated">結果の最初の行の最初の列は、次の設定、または null 参照場合、結果セットは空にします。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcParameterCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Gets the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcParameterCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt; is set to <ph id="ph1">`Text`</ph>, the .NET Framework Data Provider for ODBC does not support passing named parameters to an SQL statement or to a stored procedure called by an &lt;xref:System.Data.Odbc.OdbcCommand&gt;.</source>
          <target state="translated">ときに&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;に設定されている<ph id="ph1">`Text`</ph>、名前付きの引き渡しは、.NET Framework Data Provider for ODBC でサポートされません&lt;xref:System.Data.Odbc.OdbcCommand&gt;.&lt;/xref:System.Data.Odbc.OdbcCommand&gt;によって呼び出されるストアド プロシージャを SQL ステートメントにパラメーター&lt;/xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>In either of these cases, use the question mark (?) placeholder.</source>
          <target state="translated">いずれのケースでは、疑問符 (?) プレース ホルダーを使用します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For example:      <ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = ?   ```</ph>       The order in which &lt;xref:System.Data.Odbc.OdbcParameter&gt; objects are added to the &lt;xref:System.Data.Odbc.OdbcParameterCollection&gt; must directly correspond to the position of the question mark placeholder for the parameter in the command text.</source>
          <target state="translated">例:<ph id="ph1">```   SELECT * FROM Customers WHERE CustomerID = ?   ```</ph>順序&lt;xref:System.Data.Odbc.OdbcParameter&gt;オブジェクトに追加されます、&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;コマンド テキスト内のパラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります&lt;/xref:System.Data.Odbc.OdbcParameterCollection&gt;&lt;/xref:System.Data.Odbc.OdbcParameter&gt;。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; コレクション内のパラメーターが実行されるクエリの要件が一致しない場合、エラーが発生します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The parameters of the SQL statement or stored procedure.</source>
          <target state="translated">SQL ステートメントまたはストアド プロシージャのパラメーターです。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The default is an empty collection.</source>
          <target state="translated">既定では、空のコレクションです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Creates a prepared or compiled version of the command at the data source.</source>
          <target state="translated">データ ソースにコマンドの準備またはコンパイル済みのバージョンを作成します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The Prepare method calls the ODBC <ph id="ph1">`SQLPrepare`</ph> function.</source>
          <target state="translated">Prepare メソッドを呼び出す ODBC<ph id="ph1">`SQLPrepare`</ph>関数。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Depending on the capabilities of the underlying ODBC driver and data source, parameter information such as data types may be checked when the statement is prepared, if all parameters have been bound, or when it is executed if not all parameters have been bound.</source>
          <target state="translated">データ ソースの基になる ODBC ドライバーの機能、によってステートメントが準備された、すべてのパラメーターがバインドされている場合、またはすべてのパラメーターがバインドされていない場合に実行されるときにデータ型などのパラメーター情報をチェックする可能性があります。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For maximum interoperability, an application should unbind all parameters that applied to a previous SQL statement before preparing a new SQL statement on the same &lt;xref:System.Data.Odbc.OdbcCommand&gt;.</source>
          <target state="translated">相互運用性を最大にするため、アプリケーションが同じ&lt;xref:System.Data.Odbc.OdbcCommand&gt;。&lt;/xref:System.Data.Odbc.OdbcCommand&gt;新しい SQL ステートメントを準備する前に、以前の SQL ステートメントに適用されるすべてのパラメーターを解除します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This prevents errors that are caused by previous parameter information being applied to the new SQL statement.</source>
          <target state="translated">これにより、新しい SQL ステートメントに適用される前のパラメーター情報によって引き起こされるエラーです。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If you call an Execute method after you call Prepare, any parameter value that is larger than the value specified by the &lt;xref:System.Data.Odbc.OdbcParameter.Size%2A&gt; property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</source>
          <target state="translated">メソッドの呼び出し後に準備する、任意のパラメーター値がで指定された値より大きい、Execute を呼び出した場合、&lt;xref:System.Data.Odbc.OdbcParameter.Size%2A&gt;プロパティは、パラメーターの指定した元のサイズを自動的に切り捨てられます、切り捨てエラーは返されません&lt;/xref:System.Data.Odbc.OdbcParameter.Size%2A&gt;。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Output parameters (whether prepared or not) must have a user-specified data type.</source>
          <target state="translated">出力では、(準備またはない) かどうかをパラメーター ユーザー指定のデータ型である必要があります。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If you specify a variable length data type, you must also specify the maximum &lt;xref:System.Data.Odbc.OdbcParameter.Size%2A&gt;.</source>
          <target state="translated">可変長データ型を指定する場合は、最大&lt;xref:System.Data.Odbc.OdbcParameter.Size%2A&gt;。&lt;/xref:System.Data.Odbc.OdbcParameter.Size%2A&gt;をも指定する必要があります。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Odbc.OdbcCommand.Connection<bpt id="p1">*</bpt>&gt; is not set.       -or-       The &lt;xref:System.Data.Odbc.OdbcCommand.Connection<ept id="p1">*</ept>&gt; is not &lt;xref:System.Data.Odbc.OdbcConnection.Open*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; が設定されていません。      -or-       The &lt;&gt;<ept id="p1">*</ept>&gt; is not &lt;xref:System.Data.Odbc.OdbcConnection.Open*&gt;.&lt;/xref:System.Data.Odbc.OdbcConnection.Open*&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Resets the &lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout*&gt; property to the default value.</source>
          <target state="translated">リセット、&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout*&gt;プロパティを既定値にします&lt;/xref:System.Data.Odbc.OdbcCommand.CommandTimeout*&gt;。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The default value of the &lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt; is 30 seconds.</source>
          <target state="translated">既定値、&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;は 30 秒です&lt;/xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">このメンバーの説明は、次を参照してください。 <ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.Odbc.OdbcCommand&gt; instance is cast to an &lt;xref:InterfaceName&gt; interface.</source>
          <target state="translated">使用する場合にのみ、&lt;xref:System.Data.Odbc.OdbcCommand&gt;にインスタンスをキャスト、&lt;xref:InterfaceName&gt;インターフェイス&lt;/xref:InterfaceName&gt;&lt;/xref:System.Data.Odbc.OdbcCommand&gt;。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">[</bpt>T;System.Object<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> that is a copy of this instance.</source>
          <target state="translated">新しい<bpt id="p1">[</bpt>T です。System.Object<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>のこのインスタンスのコピーであります。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> within which the <bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> executes.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を<bpt id="p2">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>を実行します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>You cannot set the Transaction property if it is already set to a specific value, and the command is in the process of executing.</source>
          <target state="translated">場合は、既に特定の値に設定し、コマンドが実行中はトランザクションのプロパティを設定することはできません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If you set the transaction property to an &lt;xref:System.Data.Odbc.OdbcTransaction&gt; object that is not connected to the same &lt;xref:System.Data.Odbc.OdbcConnection&gt; as the &lt;xref:System.Data.Odbc.OdbcCommand&gt; object, an exception will be thrown the next time that you try to execute a statement.</source>
          <target state="translated">トランザクションのプロパティを設定する場合、&lt;xref:System.Data.Odbc.OdbcTransaction&gt;に同じ接続されていないオブジェクト&lt;xref:System.Data.Odbc.OdbcConnection&gt;として、&lt;xref:System.Data.Odbc.OdbcCommand&gt;オブジェクト、次回ステートメントを実行するときに、例外がスローされます&lt;/xref:System.Data.Odbc.OdbcCommand&gt;&lt;/xref:System.Data.Odbc.OdbcConnection&gt;&lt;/xref:System.Data.Odbc.OdbcTransaction&gt;。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An <bpt id="p1">&lt;xref href="System.Data.Odbc.OdbcTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The default is a null value.</source>
          <target state="translated">既定値は、null 値です。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies how the <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> method should apply command results to the <bpt id="p2">**</bpt>DataRow<ept id="p2">**</ept>.</source>
          <target state="translated">取得または設定を指定する値、<bpt id="p1">**</bpt>更新<ept id="p1">**</ept>メソッドはコマンドの結果に適用する必要があります、 <bpt id="p2">**</bpt>DataRow<ept id="p2">**</ept>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The default &lt;xref:System.Data.UpdateRowSource&gt; value is <bpt id="p1">**</bpt>Both<ept id="p1">**</ept> unless the command is automatically generated, as with the &lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;, in which case the default is <bpt id="p2">**</bpt>None<ept id="p2">**</ept>.</source>
          <target state="translated">既定値&lt;xref:System.Data.UpdateRowSource&gt;値は<bpt id="p1">**</bpt>両方<ept id="p1">**</ept>コマンドは自動的に生成しない限りと同様、&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;の場合、既定値は<bpt id="p2">**</bpt>None<ept id="p2">**</ept>&lt;/xref:System.Data.Odbc.OdbcCommandBuilder&gt; &lt;/xref:System.Data.UpdateRowSource&gt; 。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>For more information about how to use the UpdatedRowSource property, see <bpt id="p1">[</bpt>DataAdapter Parameters<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">UpdatedRowSource プロパティを使用する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>DataAdapter パラメーター<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>