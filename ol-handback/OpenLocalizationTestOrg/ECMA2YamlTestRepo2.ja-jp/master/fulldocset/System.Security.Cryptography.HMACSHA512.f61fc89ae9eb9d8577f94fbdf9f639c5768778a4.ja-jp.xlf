<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd77ce9ae4bff918cb155252ff8cd46db0814bf3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.HMACSHA512.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2da3a69389553f0315eb1aa49a88841ad99f03db</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebf21e8d035964fd6cf6399d5d5b7b76a7e73cfa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Computes a Hash-based Message Authentication Code (HMAC) using the <bpt id="p1">&lt;xref href="System.Security.Cryptography.SHA512"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> hash function.</source>
          <target state="translated">計算するハッシュ ベース メッセージ認証コード (HMAC) を使用して、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.SHA512"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ハッシュ関数です。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>HMACSHA512 is a type of keyed hash algorithm that is constructed from the SHA-512 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">HMACSHA512 が sha-512 ハッシュ関数から構築され、としてするハッシュ ベース メッセージ認証コード (HMAC) を使用するキー付きハッシュ アルゴリズムの一種です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The HMAC process mixes a secret key with the message data and hashes the result.</source>
          <target state="translated">HMAC プロセスでは、秘密キーと、メッセージ データを合成し、結果をハッシュします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The hash value is mixed with the secret key again, and then hashed a second time.</source>
          <target state="translated">ハッシュ値は、秘密キーを使用してもう一度、混在し、2 番目の時間をハッシュします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The output hash is 512 bits in length.</source>
          <target state="translated">出力ハッシュは、512 ビットの長さです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An HMAC can be used to determine whether a message sent over a nonsecure channel has been tampered with, provided that the sender and receiver share a secret key.</source>
          <target state="translated">HMAC を使用して、送信者と受信者に、共有シークレット キーを共有すると、安全でないチャネル経由で送信されたメッセージが改ざんされているかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The sender computes the hash value for the original data and sends both the original data and hash value as a single message.</source>
          <target state="translated">送信者は、元のデータのハッシュ値を計算し、単一のメッセージとして、元のデータとハッシュ値を送信します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The receiver recalculates the hash value on the received message and checks that the computed HMAC matches the transmitted HMAC.</source>
          <target state="translated">受信者は、受信メッセージのハッシュ値を再計算され、計算の HMAC に送信された HMAC が一致することを確認します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the original and computed hash values match, the message is authenticated.</source>
          <target state="translated">元と計算されたハッシュ値が一致した場合、メッセージが認証されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If they do not match, either the data or the hash value has been changed.</source>
          <target state="translated">これらが一致しない場合、データまたはハッシュ値のいずれかが変更されました。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>HMACs provide security against tampering because knowledge of the secret key is required to change the message and reproduce the correct hash value.</source>
          <target state="translated">Hmac は、改ざん、メッセージを変更し、正しいハッシュ値を再現する秘密キーの知識が必要なためのセキュリティを提供します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>HMACSHA512 accepts keys of any size, and produces a hash sequence of length 512 bits.</source>
          <target state="translated">HMACSHA512 は任意のサイズ、キーを確定し、512 ビットの長さの一連のハッシュを生成します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA512"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a randomly generated key.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA512"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ランダムに生成されたキーを持つクラス。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>With this constructor, a 64-byte, randomly generated key is used.</source>
          <target state="translated">このコンス トラクターでは 64 バイト、ランダムに生成されたキーが使用されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA512"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified key data.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA512"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスに指定したキー データ。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The secret key for <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA512"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> encryption.</source>
          <target state="translated">用のシークレット キー <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA512"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>暗号化します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The key can be any length.</source>
          <target state="translated">キーは、任意の長さを指定できます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, the recommended size is 128 bytes.</source>
          <target state="translated">ただし、推奨されるサイズは、128 バイトです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the key is more than 128 bytes long, it is hashed (using SHA-512) to derive a 128-byte key.</source>
          <target state="translated">(Sha-512 を使用) がハッシュされてキーが 128 バイトより長い場合は、128 ビット キーを取得します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If it is less than 128 bytes long, it is padded to 128 bytes.</source>
          <target state="translated">長さが 128 バイト未満である場合は 128 バイトに埋められます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Provides a workaround for the <ph id="ph1">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph> implementation of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA512"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> algorithm, which is inconsistent with the <ph id="ph2">[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]</ph> implementation.</source>
          <target state="translated">回避策を提供、<ph id="ph1">[!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]</ph>の実装、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.HMACSHA512"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と整合性がありません、アルゴリズム、<ph id="ph2">[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]</ph>実装します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The purpose of the ProduceLegacyHmacValues Boolean property is to enable <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]</ph> applications to interact with <ph id="ph2">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph> applications.</source>
          <target state="translated">有効にするブール値を ProduceLegacyHmacValues プロパティの目的は、<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]</ph>アプリケーションと対話<ph id="ph2">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>アプリケーションです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When you set this property to <ph id="ph1">`true`</ph>, the &lt;xref:System.Security.Cryptography.HMACSHA512&gt; object produces values that match the values produced by the <ph id="ph2">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>.</source>
          <target state="translated">このプロパティを設定すると<ph id="ph1">`true`</ph>、&lt;xref:System.Security.Cryptography.HMACSHA512&gt;オブジェクトによって生成される値に一致する値を生成する、 <ph id="ph2">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>&lt;/xref:System.Security.Cryptography.HMACSHA512&gt; 。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You should set this property only once after you create your HMAC object.</source>
          <target state="translated">HMAC オブジェクトを作成した後は、このプロパティを&amp;1; 回だけ設定する必要があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You will need to reset your key afterwards, as shown in the following example.</source>
          <target state="translated">次の例で示すように、その後、キーを再設定する必要があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to enable <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]</ph> applications to interact with <ph id="ph2">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph> applications; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>有効にする<ph id="ph1">[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]</ph>アプリケーションと対話<ph id="ph2">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>アプリケーション以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>