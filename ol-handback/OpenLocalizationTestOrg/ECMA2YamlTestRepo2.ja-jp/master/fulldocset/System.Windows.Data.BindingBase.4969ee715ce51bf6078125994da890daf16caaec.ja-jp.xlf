<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd5cf12f2edabad76f0cb466f8bb5de4506bfbcc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Data.BindingBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">977fe1791dcccee9c2d174c2f7859b475e7699e1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d2f58494c0f60fea34997c13081aa4636474e63</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the common characteristics of the <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Windows.Data.PriorityBinding"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">一般的な特性を定義、 <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref href="System.Windows.Data.PriorityBinding"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、および<bpt id="p3">&lt;xref href="System.Windows.Data.MultiBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Because the &lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName&gt; method is sealed, a custom binding class that derives from BindingBase will not function correctly as a <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> markup extension.</source>
          <target state="translated">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName&gt;メソッドはシールされていると、カスタム バインディングから派生するクラス BindingBase が正しく機能しません、<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>マークアップ拡張機能&lt;/xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which this binding belongs.</source>
          <target state="translated">取得または設定の名前、 <bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このバインディングが属しています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If BindingGroupName is not set, the binding belongs to a &lt;xref:System.Windows.Data.BindingGroup&gt; only if the binding's source and the &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; of the parent element that has the &lt;xref:System.Windows.Data.BindingGroup&gt; are the same object.</source>
          <target state="translated">BindingGroupName が設定されていない場合、バインディングが属する、&lt;xref:System.Windows.Data.BindingGroup&gt;場合にのみ、バインディングのソースと&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;の親を持つ要素を&lt;xref:System.Windows.Data.BindingGroup&gt;同じオブジェクトです&lt;/xref:System.Windows.Data.BindingGroup&gt;&lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt;&lt;/xref:System.Windows.Data.BindingGroup&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If BindingGroupName is set to a value, the binding belongs to a &lt;xref:System.Windows.Data.BindingGroup&gt; if the following conditions are true:      -   The &lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt; of the &lt;xref:System.Windows.Data.BindingGroup&gt; and BindingGroupName are equal.</source>
          <target state="translated">バインディングが属する BindingGroupName が値に設定されている場合、 &lt;xref:System.Windows.Data.BindingGroup&gt;、次の条件に該当する場合: -&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;の&lt;xref:System.Windows.Data.BindingGroup&gt;BindingGroupName が等しいと&lt;/xref:System.Windows.Data.BindingGroup&gt;&lt;/xref:System.Windows.Data.BindingGroup.Name%2A&gt;&lt;/xref:System.Windows.Data.BindingGroup&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Windows.Data.BindingGroup&gt; belongs to a parent element of the binding's target element.</source>
          <target state="translated">-&lt;xref:System.Windows.Data.BindingGroup&gt;バインディングのターゲット要素の親要素に属している&lt;/xref:System.Windows.Data.BindingGroup&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If BindingGroupName is set to <ph id="ph1">`null`</ph>, the binding is never a part of a &lt;xref:System.Windows.Data.BindingGroup&gt;.</source>
          <target state="translated">BindingGroupName に設定されている場合<ph id="ph1">`null`</ph>、バインディングが&lt;xref:System.Windows.Data.BindingGroup&gt;.&lt;/xref:System.Windows.Data.BindingGroup&gt;の一部であることはありません</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can include bindings that have a source that is different from the &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; of the parent element that has the &lt;xref:System.Windows.Data.BindingGroup&gt; by setting &lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt; of the &lt;xref:System.Windows.Data.BindingGroup&gt; and the BindingGroupName property of a binding to the same value.</source>
          <target state="translated">異なるソースのバインドを含めることができます、&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;の親を持つ要素を&lt;xref:System.Windows.Data.BindingGroup&gt;を設定して&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;の&lt;xref:System.Windows.Data.BindingGroup&gt;と同じ値にバインディングの BindingGroupName プロパティ&lt;/xref:System.Windows.Data.BindingGroup&gt;&lt;/xref:System.Windows.Data.BindingGroup.Name%2A&gt;&lt;/xref:System.Windows.Data.BindingGroup&gt;&lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can exclude bindings that have the same source as &lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt; of the parent element that has the &lt;xref:System.Windows.Data.BindingGroup&gt; by setting &lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt; of the &lt;xref:System.Windows.Data.BindingGroup&gt; and the BindingGroupName property of a binding to different values.</source>
          <target state="translated">同じソースのバインドを除外する&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;の親を持つ要素を&lt;xref:System.Windows.Data.BindingGroup&gt;を設定して&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;の&lt;xref:System.Windows.Data.BindingGroup&gt;と異なる値へのバインドの BindingGroupName プロパティ&lt;/xref:System.Windows.Data.BindingGroup&gt;&lt;/xref:System.Windows.Data.BindingGroup.Name%2A&gt;&lt;/xref:System.Windows.Data.BindingGroup&gt;&lt;/xref:System.Windows.FrameworkElement.DataContext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which this binding belongs.</source>
          <target state="translated">名前、 <bpt id="p1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このバインディングが属しています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets or sets the amount of time, in milliseconds, to wait before updating the binding source after the value on the target changes.</source>
          <target state="translated">取得またはターゲットの変更の値の後に、バインディング ソースを更新する前に待機するミリ秒単位で、時間を設定します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you use a binding to update the binding source whenever the value of the property changes on the target, you set the &lt;xref:System.Windows.Data.Binding.Mode%2A&gt; property to &lt;xref:System.Windows.Data.BindingMode&gt; and the &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; to &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Data.BindingMode&gt;&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;プロパティ&lt;/xref:System.Windows.Data.Binding.Mode%2A&gt;&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;&lt;/xref:System.Windows.Data.BindingMode&gt;を設定するターゲットのプロパティの値が変更されるたびに、バインディング ソースを更新する、バインディングを使用するとき</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this situation, you can use the Delay property to specify whether there should be a time delay between when the target is changed and when the source is updated.</source>
          <target state="translated">このような状況では、ターゲットが変更されたときと、ソースが更新されたときの間の遅延時間が存在するかどうかを指定するのに遅延プロパティを使用できます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is useful when you want to enable users to change a property on a source object but you don't want each change to be immediately committed to the source.</source>
          <target state="translated">これは、機能は、ソース オブジェクトのプロパティを変更するユーザーを有効にするがソースにすぐにコミットするには、各変更したくない場合に便利です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, suppose that you have a text box that is data two-way bound to a property of a data object.</source>
          <target state="translated">たとえば、双方向にデータ バインドされたデータ オブジェクトのプロパティをテキスト ボックスがあるとします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When the user changes the value in the text box, the source gets updated.</source>
          <target state="translated">ユーザーには、テキスト ボックスに値が変更された、ときに、ソースの更新を取得します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To enable this scenario, you set the &lt;xref:System.Windows.Data.Binding.Mode%2A&gt; property on the &lt;xref:System.Windows.Data.Binding&gt; to &lt;xref:System.Windows.Data.BindingMode&gt; and the &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; to &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;.</source>
          <target state="translated">このシナリオを有効にするには、&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;&lt;xref:System.Windows.Data.Binding&gt;および&lt;xref:System.Windows.Data.BindingMode&gt;&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;&lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;。&lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt;&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;&lt;/xref:System.Windows.Data.BindingMode&gt;&lt;/xref:System.Windows.Data.Binding&gt;プロパティ&lt;/xref:System.Windows.Data.Binding.Mode%2A&gt;を設定します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To avoid updating the source object with every keystroke, set the Delay property to a reasonable value to cause the binding to update only after that amount of time has elapsed since the user stopped typing.</source>
          <target state="translated">すべてのキーストロークで、ソース オブジェクトの更新を避けるためには、バインディングを入力するユーザーによって中止されたために、期間が経過した後に更新する適切な値に遅延プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The amount of time, in milliseconds, to wait before updating the binding source.</source>
          <target state="translated">バインディング ソースを更新する前に待機するミリ秒単位の時間数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets or sets the value to use when the binding is unable to return a value.</source>
          <target state="translated">取得または値を返すことではないときに使用する値を設定します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A binding returns a value successfully if:      1.</source>
          <target state="translated">バインディングの値を返しますが正常に: 1。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The path to the binding source resolves successfully.</source>
          <target state="translated">バインディング ソースへのパスを正常に解決します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The value converter, if any, is able to convert the resulting value.</source>
          <target state="translated">値コンバーター、存在する場合は、結果の値を変換することです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The resulting value is valid for the binding target (target) property.</source>
          <target state="translated">結果の値は、バインディング ターゲット (ターゲット) プロパティに対して無効です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If 1 and 2 return &lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;, the target property is set to the value of the FallbackValue, if one is available.</source>
          <target state="translated">1 と 2 を返す場合&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;、target プロパティが、FallbackValue の値に設定が 1 つが利用可能な場合&lt;/xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If there is no FallbackValue, the default value of the target property is used.</source>
          <target state="translated">FallbackValue がない場合は、ターゲット プロパティの既定値が使用されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The value &lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt; is not considered a successful return value.</source>
          <target state="translated">値&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;成功の戻り値とは見なされません&lt;/xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_FallbackValue"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage      <ph id="ph1">```   &lt;object FallbackValue="fallbackValue" /&gt;   ```</ph>       <bpt id="p2">**</bpt>- or –<ept id="p2">**</ept>      <ph id="ph2">```   &lt;object&gt;     &lt;object.FallbackValue&gt;       fallbackValue       &lt;/object.FallbackValue&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_FallbackValue"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>fallbackValue<ept id="p4">*</ept>    An attribute or object element value of the same type as the target property.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_FallbackValue"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法<ph id="ph1">```   &lt;object FallbackValue="fallbackValue" /&gt;   ```</ph> <bpt id="p2">**</bpt>- または -<ept id="p2">**</ept> <ph id="ph2">```   &lt;object&gt;     &lt;object.FallbackValue&gt;       fallbackValue       &lt;/object.FallbackValue&gt;   &lt;/object&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_FallbackValue"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> ## XAML 値<bpt id="p4">*</bpt>fallbackValue<ept id="p4">*</ept>ターゲット プロパティと同じ型の属性またはオブジェクト要素の値。                   </target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See that type's documentation for XAML usage information.</source>
          <target state="translated">XAML の使用方法については、その型のドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</source>
          <target state="translated">その種類可能性があります、その値に対して属性の構文をサポートしない可能性がありますまたは可能性があります、またはオブジェクトの要素の構文を必要とする型に既定のコンス トラクター) をサポートしていません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The target property type will therefore influence which syntax you use for the value of the FallbackValue property.</source>
          <target state="translated">ターゲット プロパティの型 FallbackValue プロパティの値を使用する構文ので影響を与えます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="System.Windows.DependencyProperty.UnsetValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns an object that should be set on the property where this binding and extension are applied.</source>
          <target state="translated">このバインディングおよび拡張機能が適用されたプロパティに設定するオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This implementation provides the base syntax support for binding through <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> for all provided practical derived classes (&lt;xref:System.Windows.Data.Binding&gt;, &lt;xref:System.Windows.Data.PriorityBinding&gt;, and &lt;xref:System.Windows.Data.MultiBinding&gt;).</source>
          <target state="translated">この実装を提供をバインドの基本構文サポート<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>実用的な派生クラスが提供されるすべての (&lt;xref:System.Windows.Data.Binding&gt;、 &lt;xref:System.Windows.Data.PriorityBinding&gt;、および&lt;xref:System.Windows.Data.MultiBinding&gt;).&lt;/xref:System.Windows.Data.MultiBinding&gt; &lt;/xref:System.Windows.Data.PriorityBinding&gt; &lt;/xref:System.Windows.Data.Binding&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Data.BindingBase&gt; class implementation of this method is expected to return an expression object that is the result of a binding.</source>
          <target state="translated">&lt;xref:System.Windows.Data.BindingBase&gt;このメソッドのクラスの実装がバインディングの結果である式オブジェクトを取得するが必要です&lt;/xref:System.Windows.Data.BindingBase&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Binding a property works by targeting a given &lt;xref:System.Windows.DependencyProperty&gt; on a given &lt;xref:System.Windows.DependencyObject&gt;.</source>
          <target state="translated">連結のプロパティの動作が、指定された&lt;xref:System.Windows.DependencyProperty&gt;特定の&lt;xref:System.Windows.DependencyObject&gt;。&lt;/xref:System.Windows.DependencyObject&gt;&lt;/xref:System.Windows.DependencyProperty&gt;対象にします。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>These two pieces of information are transmitted by querying for an &lt;xref:System.Windows.Markup.IProvideValueTarget&gt; implementation on the <ph id="ph1">`serviceProvider`</ph>, which the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> reader makes available during parsing of a binding.</source>
          <target state="translated">クエリを実行してこれらの&amp;2; つの情報は送信、&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;上の実装、 <ph id="ph1">`serviceProvider`</ph>、どの、 <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>リーダーは、バインディングの解析中に使用できるようにします&lt;/xref:System.Windows.Markup.IProvideValueTarget&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This base class implementation is responsible for checking for a valid &lt;xref:System.Windows.DependencyProperty&gt; and &lt;xref:System.Windows.DependencyObject&gt;.</source>
          <target state="translated">この基本クラス実装は、有効な&lt;xref:System.Windows.DependencyProperty&gt;と&lt;xref:System.Windows.DependencyObject&gt;。&lt;/xref:System.Windows.DependencyObject&gt;&lt;/xref:System.Windows.DependencyProperty&gt;のチェック</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If these are found, the actual implementation of returning a binding expression falls to various derived classes, as implemented by having the base class call an internal abstract method.</source>
          <target state="translated">これらが見つからない場合は、バインド式を返すの実際の実装は、基本クラスの呼び出し内部抽象メソッドを持つによって実装されるさまざまな派生クラスになります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Otherwise, the extension returns the binding object itself.</source>
          <target state="translated">それ以外の場合、拡張機能には、バインディング オブジェクト自体が返されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returning the binding itself results in a type mismatch error, but this should not occur under normal circumstances.</source>
          <target state="translated">型の不一致エラーの結果、バインディング自体を返すことが、これは通常の状況で発生しません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Because the syntax for binding through <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> as implemented in this method relies on implementing an internal override, and because ProvideValue itself is sealed, a custom binding class that derives from &lt;xref:System.Windows.Data.BindingBase&gt; will not function correctly as a <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> markup extension.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; ためを通じてバインドの構文<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>で実装されているこのメソッドは、内部のオーバーライドを実装に依存し、ProvideValue 自体が封印されているため、カスタム バインドの派生クラスで&lt;xref:System.Windows.Data.BindingBase&gt;として正しく機能しません、<ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>マークアップ拡張機能&lt;/xref:System.Windows.Data.BindingBase&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The object that can provide services for the markup extension.</source>
          <target state="translated">マークアップ拡張機能のサービスを提供できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; see the Remarks section for more information.</source>
          <target state="translated">あります<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; 詳細については「解説」セクションを参照してください。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value to set on the binding target property.</source>
          <target state="translated">バインディング ターゲット プロパティに設定する値。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether serialization processes should serialize the effective value of the &lt;xref:System.Windows.Data.BindingBase.FallbackValue*&gt; property on instances of this class.</source>
          <target state="translated">シリアル化プロセスが&lt;xref:System.Windows.Data.BindingBase.FallbackValue*&gt;このクラスのインスタンスのプロパティ&lt;/xref:System.Windows.Data.BindingBase.FallbackValue*&gt;の有効な値をシリアル化する必要があるかどうかを示す値を返します</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Data.BindingBase.FallbackValue*&gt; property value should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、&lt;xref:System.Windows.Data.BindingBase.FallbackValue*&gt;プロパティの値が、それ以外のシリアル化する必要があります<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Windows.Data.BindingBase.FallbackValue*&gt; 。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the &lt;xref:System.Windows.Data.BindingBase.TargetNullValue*&gt; property should be serialized.</source>
          <target state="translated">示す値を返すかどうか、&lt;xref:System.Windows.Data.BindingBase.TargetNullValue*&gt;プロパティをシリアル化する必要があります&lt;/xref:System.Windows.Data.BindingBase.TargetNullValue*&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Data.BindingBase.TargetNullValue*&gt; property should be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、&lt;xref:System.Windows.Data.BindingBase.TargetNullValue*&gt;プロパティは、それ以外のシリアル化する必要があります<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Windows.Data.BindingBase.TargetNullValue*&gt; 。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</source>
          <target state="translated">取得またはバインドされた値を文字列として表示される場合、バインディングの書式を設定する方法を指定する文字列を設定します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>StringFormat can be a predefined, composite, or custom string format.</source>
          <target state="translated">StringFormat には、定義済み、複合、またはカスタムの文字列形式を指定できます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information about string formats, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">文字列形式の詳細については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you set the &lt;xref:System.Windows.Data.Binding.Converter%2A&gt; and StringFormat properties, the converter is applied to the data value first, and then the StringFormat is applied.</source>
          <target state="translated">設定した場合、 &lt;xref:System.Windows.Data.Binding.Converter%2A&gt;StringFormat プロパティは、コンバーターが最初に、データ値に適用され、StringFormat を適用し、および&lt;/xref:System.Windows.Data.Binding.Converter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When you set the StringFormat on a &lt;xref:System.Windows.Data.Binding&gt; to a composite string format, you can specify only one parameter.</source>
          <target state="translated">StringFormat を設定すると、&lt;xref:System.Windows.Data.Binding&gt;複合文字列の形式では、1 つだけのパラメーターを指定できます&lt;/xref:System.Windows.Data.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When you use a &lt;xref:System.Windows.Data.MultiBinding&gt;, the StringFormat property applies only when it is set on the &lt;xref:System.Windows.Data.MultiBinding&gt;.</source>
          <target state="translated">使用すると&lt;xref:System.Windows.Data.MultiBinding&gt;、のみが設定されている場合、 &lt;xref:System.Windows.Data.MultiBinding&gt;。&lt;/xref:System.Windows.Data.MultiBinding&gt; StringFormat プロパティが適用されます。&lt;/xref:System.Windows.Data.MultiBinding&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The value of StringFormat that is set on any child &lt;xref:System.Windows.Data.Binding&gt; objects is ignored.</source>
          <target state="translated">すべての子に設定されている StringFormat 値&lt;xref:System.Windows.Data.Binding&gt;オブジェクトは無視されます&lt;/xref:System.Windows.Data.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The number of parameters in a composite string format cannot exceed the number of child &lt;xref:System.Windows.Data.Binding&gt; objects in the &lt;xref:System.Windows.Data.MultiBinding&gt;.</source>
          <target state="translated">複合文字列の形式でパラメーターの数は、子&lt;xref:System.Windows.Data.Binding&gt;&lt;xref:System.Windows.Data.MultiBinding&gt;。&lt;/xref:System.Windows.Data.MultiBinding&gt;内のオブジェクト&lt;/xref:System.Windows.Data.Binding&gt;の数を超えることはできません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When you use a &lt;xref:System.Windows.Data.PriorityBinding&gt;, you can set the StringFormat on the &lt;xref:System.Windows.Data.PriorityBinding&gt;, on child binding objects, or both.</source>
          <target state="translated">使用すると、 &lt;xref:System.Windows.Data.PriorityBinding&gt;、上、StringFormat を設定することができます、 &lt;xref:System.Windows.Data.PriorityBinding&gt;、バインディングの子オブジェクト、またはその両方でします&lt;/xref:System.Windows.Data.PriorityBinding&gt;&lt;/xref:System.Windows.Data.PriorityBinding&gt;。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If the StringFormat is set on the child binding that is applied, that value is used.</source>
          <target state="translated">適用される子のバインドに、StringFormat を設定すると、その値が使用されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the StringFormat is not set on the child binding that is applied, the StringFormat of the &lt;xref:System.Windows.Data.PriorityBinding&gt; is applied if it is set.</source>
          <target state="translated">子でバインドが適用されるの StringFormat、StringFormat が設定されていない場合、&lt;xref:System.Windows.Data.PriorityBinding&gt;設定されている場合に適用します&lt;/xref:System.Windows.Data.PriorityBinding&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A string that specifies how to format the binding if it displays the bound value as a string.</source>
          <target state="translated">バインドされた値を文字列として表示される場合、バインディングの書式を設定する方法を指定する文字列。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets or sets the value that is used in the target when the value of the source is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ソースの値が、ターゲットのために使用される値を設定を取得または<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_TargetNullValue"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage      <ph id="ph1">```   &lt;object TargetNullValue="nullValue" /&gt;   ```</ph>       <bpt id="p2">**</bpt>- or –<ept id="p2">**</ept>      <ph id="ph2">```   &lt;object&gt;     &lt;object.TargetNullValue&gt;       nullValue       &lt;/object.TargetNullValue&gt;   &lt;/object&gt;   ```</ph>      <bpt id="p3">&lt;a name="xamlValues_TargetNullValue"&gt;</bpt><ept id="p3">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p4">*</bpt>nullValue<ept id="p4">*</ept>    An attribute or object element value of the same type as the target property.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_TargetNullValue"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法<ph id="ph1">```   &lt;object TargetNullValue="nullValue" /&gt;   ```</ph> <bpt id="p2">**</bpt>- または -<ept id="p2">**</ept> <ph id="ph2">```   &lt;object&gt;     &lt;object.TargetNullValue&gt;       nullValue       &lt;/object.TargetNullValue&gt;   &lt;/object&gt;   ```</ph> <bpt id="p3">&lt;a name="xamlValues_TargetNullValue"&gt;</bpt> <ept id="p3">&lt;/a&gt;</ept> ## XAML 値<bpt id="p4">*</bpt>nullValue<ept id="p4">*</ept>ターゲット プロパティと同じ型の属性またはオブジェクト要素の値。                   </target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See that type's documentation for XAML usage information.</source>
          <target state="translated">XAML の使用方法については、その型のドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</source>
          <target state="translated">その種類可能性があります、その値に対して属性の構文をサポートしない可能性がありますまたは可能性があります、またはオブジェクトの要素の構文を必要とする型に既定のコンス トラクター) をサポートしていません。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The value that is used in the target when the value of the source is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ソースの値が、ターゲットで使用されている値<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>