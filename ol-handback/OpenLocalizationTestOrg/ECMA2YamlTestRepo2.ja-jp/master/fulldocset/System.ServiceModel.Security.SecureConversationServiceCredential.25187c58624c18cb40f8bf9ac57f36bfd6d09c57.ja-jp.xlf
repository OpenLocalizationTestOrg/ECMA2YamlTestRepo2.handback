<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebd56cc968183bb7e522f6acd8cca2a35ac51fe2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Security.SecureConversationServiceCredential.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b154976f4f3f71cdd48941bf4210672e15913553</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e66880c7e7494ac10e27611cff7ce56032d606f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides credential settings for a secure conversation service.</source>
          <target state="translated">セキュリティで保護されたメッセージ交換サービスの資格情報の設定を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Secure conversations involve the exchange of multiple messages and use a Security Context Token (SCT) to ensure security.</source>
          <target state="translated">セキュリティで保護されたメッセージ交換では、複数のメッセージの交換を伴うおよび、セキュリティを確保する、セキュリティ コンテキスト トークン (SCT) を使用します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The SCT is shared among the communicating parties for the lifetime of a communications session.</source>
          <target state="translated">SCT は、通信セッションの有効期間の通信参加者の間で共有されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A service can issue two different kinds of SCTs:      -   The first is a session-based SCT that contains a unique id.</source>
          <target state="translated">サービスは、次の&amp;2; つの種類の Sct を発行できます:-1 つはセッション ベースの SCT は一意の id を含むです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Messages carry only the id, and the service maintains a state-mapping cache that maps between the SCT ids and contents (such as claims, security keys, and so on).</source>
          <target state="translated">メッセージ id だけを実行して、サービスが、SCT id と内容 (クレーム、セキュリティ キーなど) の間でマップする状態マッピング キャッシュを保持します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A well-behaved client must send an SCT cancellation to help the service optimize the cache resources.</source>
          <target state="translated">適切に動作のクライアントには、キャッシュのリソースの最適化処理に必要な SCT キャンセルを送信する必要があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you instantiate this class by calling &lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt; with the <ph id="ph1">`requireCancellation`</ph> parameter equal to <ph id="ph2">`true`</ph>, the SCT is issued in this manner.</source>
          <target state="translated">呼び出してこのクラスをインスタンス化する場合&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;で、<ph id="ph1">`requireCancellation`</ph>パラメーターと等しい<ph id="ph2">`true`</ph>、この方法で、SCT を発行します&lt;/xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>-   The second is a self-contained SCT that resides in a cookie on the client.</source>
          <target state="translated">2 つ目は、クライアントのクッキーに存在する自己完結型の SCT です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This SCT contains the entire state information, so requires neither state management from the service nor SCT cancellation from the client.</source>
          <target state="translated">この SCT は、全体の状態情報が含まれています、どちらも、サービスからの状態管理も、クライアントからの SCT キャンセルを必要とします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is sometimes called a "cookie-mode" SCT.</source>
          <target state="translated">「クッキー モード」SCT とも呼びます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Because the SCT contains the entire state information, its size is larger than in the session-based case.</source>
          <target state="translated">SCT に全体の状態情報が含まれているため、サイズはセッション ベースの場合よりも大きいです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>With session-based SCTs, the service stores much of the state information.</source>
          <target state="translated">セッション ベースの Sct と共には、サービスは、多くの状態情報を格納します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, because it is self-contained, it can be used across service lifetime and persists across service shutdown and restart.</source>
          <target state="translated">ただし、自己完結型であるため、サービスの有効期間の間で使用でき、サービスのシャット ダウンと再起動の間で永続化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets a collection of the &lt;xref:System.Type&gt; claims for cookie serialization.</source>
          <target state="translated">コレクションを取得、&lt;xref:System.Type&gt;クッキー シリアル化の要求&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To serialize claims into SCT cookies, <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> uses &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; as the default.</source>
          <target state="translated">クレームを SCT クッキーにシリアル化する<ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>使用&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;既定値として&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because the Claim resource is extensible, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> allows you to provide a list of known resource types.</source>
          <target state="translated">クレームのリソースを拡張するため<ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph>既知のリソースの種類の一覧を指定することができます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This assists the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; during deserialization of the claims in the cookie so that it can return the original strongly-typed objects.</source>
          <target state="translated">これは、機能によって、&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;元の厳密に型指定されたオブジェクト返すことができるようにクッキー内のクレームの逆シリアル化中に&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A collection of the &lt;xref:System.Type&gt; claims for cookie serialization.</source>
          <target state="translated">コレクション、&lt;xref:System.Type&gt;クッキー シリアル化の要求&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets a customized <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityStateEncoder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for encoding and decoding cookie serialization.</source>
          <target state="translated">取得または設定、カスタマイズされた<bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityStateEncoder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>エンコードとデコード クッキー シリアル化します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In "cookie mode", a service issues the client a security context token (SCT) in the form of a cookie to the client so that it does not have to maintain any security state.</source>
          <target state="translated">「クッキー モード」で、サービス発行クライアント cookie の形式でのセキュリティ コンテキスト トークン (SCT) をクライアントに、セキュリティ状態を維持するためがあるないようにします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The client sends the cookie back in the request message so that the service knows how to unprotect and verify the request message.</source>
          <target state="translated">クライアントは、サービスの保護を解除して、要求メッセージを検証する方法が認識できるように、要求メッセージに cookie を送信します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Because the SCT is often transmitted over a non-secure network, it must be protected.</source>
          <target state="translated">SCT はセキュリティ保護されていないネットワーク経由で送信される多くの場合、のでを保護する必要があります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> uses the &lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt; class to protect the cookie using the Data Protection API (DPAPI).</source>
          <target state="translated">既定では、<ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>を使用して、&lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;データ保護 API (DPAPI) を使用して cookie を保護するクラス&lt;/xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For DPAPI to work in a Web farm environment, all the backend services must run as the same domain user account.</source>
          <target state="translated">Web ファーム環境で動作する DPAPI は、すべてのバックエンド サービスは、同じドメイン ユーザー アカウントとして実行する必要があります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In other words, if the service is Web hosted, then the Internet Information Services (IIS) worker process must be configured to run as a domain user.</source>
          <target state="translated">つまり、サービスが Web ホストされている場合は、ドメイン ユーザーとして実行するインターネット インフォメーション サービス (IIS) ワーカー プロセスを構成する必要があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This property enables you to use a customized &lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt; to encrypt and decrypt the cookie and not depend on DPAPI.</source>
          <target state="translated">このプロパティを使用すると、カスタマイズされた使用&lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt;暗号化し、cookie を復号化、DPAPI に依存しない&lt;/xref:System.ServiceModel.Security.SecurityStateEncoder&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityStateEncoder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, which is a customization of <bpt id="p2">&lt;xref href="System.ServiceModel.Security.DataProtectionSecurityStateEncoder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ServiceModel.Security.SecurityStateEncoder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のカスタマイズでは、オブジェクトの<bpt id="p2">&lt;xref href="System.ServiceModel.Security.DataProtectionSecurityStateEncoder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>