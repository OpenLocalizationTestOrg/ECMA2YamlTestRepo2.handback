<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46a8fba82f77f46a8400d8d08b031a0961afd7a8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.Build.Tasks.WriteCodeFragment.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9492c045fe6a691eefc79fed69940cc0c7537ea6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96cb52c8a15df1e41b8508259f8aa26ca6832077</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Generates a temporary code file with the specified generated code fragment.</source>
          <target state="translated">指定された生成されたコード フラグメントの一時コード ファイルを生成します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Does not delete the file.</source>
          <target state="translated">ファイルは削除されません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Creates a temporary code file with the specified generated code fragment.</source>
          <target state="translated">生成されたコードを指定したフラグメントを一時コード ファイルを作成します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Gets or sets the attributes to write.</source>
          <target state="translated">取得またはに書き込まれる属性を設定します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each piece of metadata is the name-value pair of a parameter, which must be of type System.String.</source>
          <target state="translated">メタデータの各部分は、System.String 型にする必要がありますパラメーターの名前と値のペアです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Some attributes only allow positional constructor arguments, or the user may just prefer them.</source>
          <target state="translated">いくつかの属性のみ許可する位置指定のコンス トラクター引数、または、ユーザーが希望するだけです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To set those, use metadata names like "_Parameter1", "_Parameter2" etc. If a parameter index is skipped, it's an error.</source>
          <target state="translated">ものを設定するには、"_Parameter1"、"_Parameter2"などのメタデータの名前を使用してなど。パラメーターのインデックスがスキップされる場合は、エラーを勧めします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Returns an item whose value is the full type name of he attribute, for example, "System.AssemblyVersionAttribute".</source>
          <target state="translated">項目を完全な型属性の名前は、たとえば、"System.AssemblyVersionAttribute"の値を返します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Executes the WriteCodeFragment method.</source>
          <target state="translated">WriteCodeFragment メソッドを実行します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Returns true if the code fragment was written.</source>
          <target state="translated">コード フラグメントが書き込まれた場合に true を返します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets or sets the language of code to generate.</source>
          <target state="translated">取得または生成するコードの言語を設定します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Language name can be any language for which a CodeDom provider is available.</source>
          <target state="translated">言語名では、CodeDom プロバイダーの使用可能な任意の言語を指定できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, "C#", "VisualBasic".</source>
          <target state="translated">たとえば、"c#"、"VisualBasic"です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The file emitted is given the default extension for that language.</source>
          <target state="translated">出力ファイルはその言語の既定の拡張機能を付与します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns the language of code to generate.</source>
          <target state="translated">生成するコードの言語を返します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets or sets the destination folder for the generated code, typically the intermediate folder.</source>
          <target state="translated">取得または中間フォルダーでは通常、生成されたコードのコピー先フォルダーを設定します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns the destination folder for the generated code.</source>
          <target state="translated">生成されたコードのコピー先フォルダーを返します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the path to the file that was generated.</source>
          <target state="translated">取得または生成されたファイルにパスを設定します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If setting this property with a file name, the destination folder will be prepended.</source>
          <target state="translated">ファイル名を持つには、このプロパティを設定する場合、コピー先のフォルダーが前に付加します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If setting this property with a rooted value, the destination folder will be ignored.</source>
          <target state="translated">Root 化された値を持つには、このプロパティを設定するには、コピー先のフォルダーは無視されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If this property is not set, WriteCodeFragment uses the destination folder, an arbitrary file name, and the default extension for the language selected.</source>
          <target state="translated">このプロパティが設定されていない場合に、WriteCodeFragment は、選択した言語でコピー先フォルダー、任意のファイル名、および既定の拡張機能を使用します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns the path to the file that was generated.</source>
          <target state="translated">生成されたファイルへのパスを返します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>