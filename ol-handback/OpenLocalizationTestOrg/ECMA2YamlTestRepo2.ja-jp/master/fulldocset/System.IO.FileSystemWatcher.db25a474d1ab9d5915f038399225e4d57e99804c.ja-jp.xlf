<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da7113852156d60062ba8e58aea1509685e907bf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.FileSystemWatcher.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cca40a59cdda31fd2df9d7eeed6c98355ff2b098</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">25f368b8c1522ce81ec84ae64d86aba49c1e3749</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</source>
          <target state="translated">ディレクトリ、または変更のディレクトリにファイルときに通知し、発生イベントを変更するファイル システムに待機します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#System/services/io/system/io/FileSystemWatcher.cs#a9eb0249dc928b09)</ept>.</source>
          <target state="translated">この型の .NET Framework ソース コードを参照するを参照してください。、<bpt id="p1">[</bpt>参照ソース<ept id="p1">](http://referencesource.microsoft.com/#System/services/io/system/io/FileSystemWatcher.cs#a9eb0249dc928b09)</ept>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, given the specified directory to monitor.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスを監視するディレクトリを指定します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The component will not watch the specified directory until the &lt;xref:System.IO.FileSystemWatcher.Path%2A&gt; is set, and &lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt; is <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt; コンポーネントは、指定したディレクトリまでを視聴しません、&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;が設定されていると&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;は<ph id="ph2">`true`</ph>&lt;/xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;&lt;/xref:System.IO.FileSystemWatcher.Path%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The component can watch files on your personal computer, a network drive, or a remote computer.</source>
          <target state="translated">コンポーネントは、パーソナル コンピューター、ネットワーク ドライブ、またはリモート コンピューター上のファイルを見ることができます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You cannot watch a remote computer that does not have Windows NT or Windows 2000.</source>
          <target state="translated">Windows NT または Windows 2000 がないリモート コンピューターを監視することはできません。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</source>
          <target state="translated">Windows NT 4.0 のコンピューターからリモートの Windows NT 4.0 コンピューターを監視することはできません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt; property is set by default to watch all files.</source>
          <target state="translated">&lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;プロパティが既定ですべてのファイルを監視します&lt;/xref:System.IO.FileSystemWatcher.Filter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</source>
          <target state="translated">標準表記または汎用名前付け規則 (UNC) 表記で、監視するディレクトリ。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an empty string ("").</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-or-       The path specified through the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter does not exist.</source>
          <target state="translated">- または - で指定されたパス、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが存在しません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is too long.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>長すぎます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, given the specified directory and type of files to monitor.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、指定したディレクトリおよび監視するファイルの種類を指定します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The component will not watch the specified directory until the &lt;xref:System.IO.FileSystemWatcher.Path%2A&gt; is set, and &lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt; is <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt; コンポーネントは、指定したディレクトリまでを視聴しません、&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;が設定されていると&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;は<ph id="ph2">`true`</ph>&lt;/xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;&lt;/xref:System.IO.FileSystemWatcher.Path%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The component can watch files on your personal computer, a network drive, or a remote computer.</source>
          <target state="translated">コンポーネントは、パーソナル コンピューター、ネットワーク ドライブ、またはリモート コンピューター上のファイルを見ることができます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You cannot watch a remote computer that does not have Windows NT or Windows 2000.</source>
          <target state="translated">Windows NT または Windows 2000 がないリモート コンピューターを監視することはできません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</source>
          <target state="translated">Windows NT 4.0 のコンピューターからリモートの Windows NT 4.0 コンピューターを監視することはできません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</source>
          <target state="translated">標準表記または汎用名前付け規則 (UNC) 表記で、監視するディレクトリ。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The type of files to watch.</source>
          <target state="translated">ウォッチするファイルの種類。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, "*.txt" watches for changes to all text files.</source>
          <target state="translated">たとえば、"*.txt"は、すべてのテキスト ファイルへの変更は監視します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filter</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filter</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an empty string ("").</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-or-       The path specified through the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter does not exist.</source>
          <target state="translated">- または - で指定されたパス、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが存在しません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is too long.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>長すぎます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Begins the initialization of a <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used on a form or used by another component.</source>
          <target state="translated">初期化を開始、 <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>フォームまたは別のコンポーネントで使用します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初期化は実行時に発生します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> design environment uses this method to start the initialization of a component used on a form or used by another component.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph>デザイン環境では、このメソッドを使用して、コンポーネントの初期化を開始フォームまたは別のコンポーネントを使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt; method ends the initialization.</source>
          <target state="translated">&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;メソッドが初期化を終了します&lt;/xref:System.IO.FileSystemWatcher.EndInit%2A&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Using the BeginInit and &lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt; methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">BeginInit を使用して&lt;xref:System.IO.FileSystemWatcher.EndInit%2A&gt;メソッド使用されないように、コントロールが完全に初期化される前にします&lt;/xref:System.IO.FileSystemWatcher.EndInit%2A&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Occurs when a file or directory in the specified &lt;xref:System.IO.FileSystemWatcher.Path*&gt; is changed.</source>
          <target state="translated">ファイルまたはディレクトリが指定されたときに発生&lt;xref:System.IO.FileSystemWatcher.Path*&gt;が変更された&lt;/xref:System.IO.FileSystemWatcher.Path*&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Changed event is raised when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</source>
          <target state="translated">Changed イベントが発生するは、サイズが変更されたときに、システム属性では、最終書き込み時刻、最終アクセス時刻、またはファイルまたはディレクトリのセキュリティ アクセス許可で監視されているディレクトリ。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Common file system operations might raise more than one event.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 一般的なファイル システム操作が&amp;1; つ以上のイベントを発生させる可能性があります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, when a file is moved from one directory to another, several &lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt; and some &lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt; and &lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt; events might be raised.</source>
          <target state="translated">たとえば、移動した場合、ファイル別に、いくつかの&amp;1; つのディレクトリから&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;といくつか&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;と&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;イベントを発生させる可能性があります&lt;/xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;&lt;/xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;&lt;/xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">複数のイベントを発生させるためファイルが複数の単純な操作で構成される複雑な操作を移動するには、します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by &lt;xref:System.IO.FileSystemWatcher&gt;.</source>
          <target state="translated">同様に、一部のアプリケーション (ウイルス対策ソフトウェアなど) が&lt;xref:System.IO.FileSystemWatcher&gt;。&lt;/xref:System.IO.FileSystemWatcher&gt;によって検出された追加のファイル システムのイベントを発生可能性があります。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt; to restrict the number of notifications raised when this event is handled.</source>
          <target state="translated">使用して&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;をこのイベントが処理されるときに発生する通知の数を制限します&lt;/xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The Changed event is raised unexpectedly when a file is renamed, but is not raised when a directory is renamed.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; の変更イベントは、予期しないファイルの名前を変更がディレクトリの名前が変更されるには発生しません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To watch for renaming, use the &lt;xref:System.IO.FileSystemWatcher.Renamed&gt; event.</source>
          <target state="translated">名前を変更するをウォッチするを使用して、&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;イベント&lt;/xref:System.IO.FileSystemWatcher.Renamed&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The order in which the Changed event is raised in relation to the other &lt;xref:System.IO.FileSystemWatcher&gt; events may change when the &lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt; property is not <ph id="ph2">`null`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Changed イベントが、他の関連して発生する順序&lt;xref:System.IO.FileSystemWatcher&gt;イベントが変更可能性があります、&lt;xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;プロパティは使用されません<ph id="ph2">`null`</ph>&lt;/xref:System.IO.FileSystemWatcher.SynchronizingObject%2A&gt;&lt;/xref:System.IO.FileSystemWatcher&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Occurs when a file or directory in the specified &lt;xref:System.IO.FileSystemWatcher.Path*&gt; is created.</source>
          <target state="translated">ファイルまたはディレクトリが指定されたときに発生&lt;xref:System.IO.FileSystemWatcher.Path*&gt;が作成されます&lt;/xref:System.IO.FileSystemWatcher.Path*&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Occurs when a file or directory in the specified &lt;xref:System.IO.FileSystemWatcher.Path*&gt; is deleted.</source>
          <target state="translated">ファイルまたはディレクトリが指定されたときに発生&lt;xref:System.IO.FileSystemWatcher.Path*&gt;を削除します&lt;/xref:System.IO.FileSystemWatcher.Path*&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>し、必要に応じてマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">このメソッドは、パブリック&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;メソッドおよび&lt;xref:System.Object.Finalize%2A&gt;メソッド&lt;/xref:System.Object.Finalize%2A&gt;&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.Component.Dispose%2A&gt; invokes the protected Dispose method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;保護された Dispose メソッドを呼び出し、<ph id="ph1">`disposing`</ph>パラメーターに設定<ph id="ph2">`true`</ph>です。&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes Dispose with <ph id="ph1">`disposing`</ph> set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;Dispose を呼び出す<ph id="ph1">`disposing`</ph>'éý'<ph id="ph2">`false`</ph>です。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.IO.Compression.DeflateStream&gt; references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターは<ph id="ph2">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.IO.Compression.DeflateStream&gt;参照。&lt;/xref:System.IO.Compression.DeflateStream&gt; 。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;参照される各オブジェクトのメソッド&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the component is enabled.</source>
          <target state="translated">取得またはコンポーネントが有効になっているかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The component will not raise events unless you set EnableRaisingEvents to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">コンポーネントがないイベントを発生させる EnableRaisingEvents に設定する場合を除き、<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The component will not watch the specified directory until the &lt;xref:System.IO.FileSystemWatcher.Path%2A&gt; property has been set and EnableRaisingEvents is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; コンポーネントは、指定したディレクトリまでを視聴しません、&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;プロパティが設定されている、EnableRaisingEvents <ph id="ph2">`true`</ph>&lt;/xref:System.IO.FileSystemWatcher.Path%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt; method allows event handlers to be invoked to respond to file changes even if this property is set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;メソッドにより、イベント ハンドラーをこのプロパティ設定されている場合でも、ファイルの変更に応答するに呼び出せる<ph id="ph1">`false`</ph>&lt;/xref:System.IO.FileSystemWatcher.WaitForChanged%2A&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the component is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コンポーネントが有効である場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you are using the component on a designer in <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph>, the default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">使用するかどうかは、コンポーネントのデザイナーで<ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph>、既定値は<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは破棄されました。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The current operating system is not Microsoft Windows NT or later.</source>
          <target state="translated">現在のオペレーティング システムは Microsoft Windows NT 以降です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The directory specified in &lt;xref:System.IO.FileSystemWatcher.Path*&gt; could not be found.</source>
          <target state="translated">指定されたディレクトリ&lt;xref:System.IO.FileSystemWatcher.Path*&gt;で見つかりませんでした&lt;/xref:System.IO.FileSystemWatcher.Path*&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileSystemWatcher.Path*&gt; has not been set or is invalid.</source>
          <target state="translated">&lt;xref:System.IO.FileSystemWatcher.Path*&gt;設定されていないか、無効です。&lt;/xref:System.IO.FileSystemWatcher.Path*&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Ends the initialization of a <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used on a form or used by another component.</source>
          <target state="translated">初期化を終了、 <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>フォームまたは別のコンポーネントで使用します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初期化は実行時に発生します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> design environment uses this method to end the initialization of a component used on a form or used by another component.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph>デザイン環境では、このメソッドを使用して、コンポーネントの初期化を終了フォームまたは別のコンポーネントを使用します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt; method starts the initialization.</source>
          <target state="translated">&lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;メソッドは、初期化を開始します&lt;/xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Using the &lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt; and EndInit methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">使用して、 &lt;xref:System.IO.FileSystemWatcher.BeginInit%2A&gt;EndInit メソッド使用されないように、コントロールが完全に初期化される前に、&lt;/xref:System.IO.FileSystemWatcher.BeginInit%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Occurs when the instance of <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is unable to continue monitoring changes or when the internal buffer overflows.</source>
          <target state="translated">発生したときに、インスタンスの<bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>は変更または内部バッファーがオーバーフローした場合の監視を継続できません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This event is raised whenever something prevents the &lt;xref:System.IO.FileSystemWatcher&gt; object from monitoring changes.</source>
          <target state="translated">このイベントは、問題を防止するたびに、&lt;xref:System.IO.FileSystemWatcher&gt;オブジェクトからの変更の監視します&lt;/xref:System.IO.FileSystemWatcher&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For example, if the object is monitoring changes in a remote directory and the connection to that directory is lost, the Error event is raised.</source>
          <target state="translated">たとえば、オブジェクトは、リモート ディレクトリの変更を監視は、そのディレクトリへの接続が失われた場合、エラー イベントが発生します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The system notifies you of file changes, and it stores those changes in a buffer that the component creates and passes to the APIs.</source>
          <target state="translated">システムでは、ファイルの変更、ユーザーに通知し、その変更をコンポーネントを作成し、Api に渡すバッファーに格納します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If there are many changes in a short time, the buffer can overflow.</source>
          <target state="translated">短期間に多数の変更がある場合、バッファーがオーバーフローすることができます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</source>
          <target state="translated">これにより、コンポーネントは、ディレクトリ内の変更の追跡とブランケットの通知のみ提供されます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Increasing the size of the buffer is expensive, because it comes from non paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</source>
          <target state="translated">バッファーのサイズを増やす、負荷が高い、以外のものであるためにページは維持する、ディスクにスワップ アウトできませんメモリ バッファーをできるだけ小さくします。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To avoid a buffer overflow, use the &lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;, &lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;, and &lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt; properties to filter out unwanted change notifications.</source>
          <target state="translated">バッファー オーバーフローを避けるためを使用して、 &lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;、 &lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;、および&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;望ましくないを除外するプロパティの変更通知&lt;/xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;&lt;/xref:System.IO.FileSystemWatcher.Filter%2A&gt;&lt;/xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Common file system operations might raise more than one event.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 一般的なファイル システム操作が&amp;1; つ以上のイベントを発生させる可能性があります。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, when a file is moved from one directory to another, several &lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt; and some &lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt; and &lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt; events might be raised.</source>
          <target state="translated">たとえば、移動した場合、ファイル別に、いくつかの&amp;1; つのディレクトリから&lt;xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;といくつか&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;と&lt;xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;イベントを発生させる可能性があります&lt;/xref:System.IO.FileSystemWatcher.OnDeleted%2A&gt;&lt;/xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;&lt;/xref:System.IO.FileSystemWatcher.OnChanged%2A&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</source>
          <target state="translated">複数のイベントを発生させるためファイルが複数の単純な操作で構成される複雑な操作を移動するには、します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by &lt;xref:System.IO.FileSystemWatcher&gt;.</source>
          <target state="translated">同様に、一部のアプリケーション (ウイルス対策ソフトウェアなど) が&lt;xref:System.IO.FileSystemWatcher&gt;。&lt;/xref:System.IO.FileSystemWatcher&gt;によって検出された追加のファイル システムのイベントを発生可能性があります。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets or sets the filter string used to determine what files are monitored in a directory.</source>
          <target state="translated">取得またはディレクトリに監視するファイルを決定するためのフィルター文字列を設定します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The filter string.</source>
          <target state="translated">フィルター文字列。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The default is "*.<ph id="ph1">\*</ph>"</source>
          <target state="translated">既定値は"* です。<ph id="ph1">\*</ph>"</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>(Watches all files.)</source>
          <target state="translated">(すべてのファイルをウォッチします)。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</source>
          <target state="translated">取得または指定したパスのサブディレクトリを監視する必要があるかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Set IncludeSubdirectories to <ph id="ph1">`true`</ph> when you want to watch for change notifications for files and directories contained within the directory specified through the &lt;xref:System.IO.FileSystemWatcher.Path%2A&gt; property, and its subdirectories.</source>
          <target state="translated">IncludeSubdirectories 'éý'<ph id="ph1">`true`</ph>ファイルとディレクトリを指定したディレクトリ内に含まれる変更通知を監視する場合、&lt;xref:System.IO.FileSystemWatcher.Path%2A&gt;プロパティ、およびそのサブディレクトリ&lt;/xref:System.IO.FileSystemWatcher.Path%2A&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Setting the IncludeSubdirectories property to <ph id="ph1">`false`</ph> helps reduce the number of notifications sent to the internal buffer.</source>
          <target state="translated">IncludeSubdirectories プロパティを設定<ph id="ph1">`false`</ph>内部バッファーに送信された通知の数を削減できます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For more information on filtering out unwanted notifications, see the &lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt; and &lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt; properties.</source>
          <target state="translated">不必要な通知をフィルター処理の詳細については、次を参照してください、&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;と&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;プロパティ。&lt;/xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt; &lt;/xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`true`</ph>, IncludeSubdirectories is recursive through the entire sub tree, not just the immediate child directories.</source>
          <target state="translated">ときに<ph id="ph1">`true`</ph>IncludeSubdirectories は直下の子ディレクトリだけでなく、全体のサブ ツリーを再帰的です。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The relative path to a file or directory within the sub tree returns in the &lt;xref:System.IO.FileSystemEventArgs.Name%2A&gt; property of &lt;xref:System.IO.FileSystemEventArgs&gt; and the &lt;xref:System.IO.RenamedEventArgs.OldName%2A&gt; property of &lt;xref:System.IO.RenamedEventArgs&gt;, depending on changes you are watching for.</source>
          <target state="translated">&lt;xref:System.IO.FileSystemEventArgs.Name%2A&gt;&lt;xref:System.IO.FileSystemEventArgs&gt;および&lt;xref:System.IO.RenamedEventArgs.OldName%2A&gt;&lt;xref:System.IO.RenamedEventArgs&gt;データ型を試聴して変更内容に応じて&lt;/xref:System.IO.RenamedEventArgs&gt;、プロパティ&lt;/xref:System.IO.RenamedEventArgs.OldName%2A&gt;&lt;/xref:System.IO.FileSystemEventArgs&gt;のプロパティ&lt;/xref:System.IO.FileSystemEventArgs.Name%2A&gt;内のファイルまたはサブツリー内のディレクトリへの相対パスを返します</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can get the fully qualified path from the &lt;xref:System.IO.FileSystemEventArgs.FullPath%2A&gt; property of &lt;xref:System.IO.FileSystemEventArgs&gt; and the &lt;xref:System.IO.RenamedEventArgs.OldFullPath%2A&gt; property of &lt;xref:System.IO.RenamedEventArgs&gt;, depending on the changes you are watching for.</source>
          <target state="translated">&lt;xref:System.IO.FileSystemEventArgs.FullPath%2A&gt;&lt;xref:System.IO.FileSystemEventArgs&gt;および&lt;xref:System.IO.RenamedEventArgs.OldFullPath%2A&gt;&lt;xref:System.IO.RenamedEventArgs&gt;データ型を試聴して変更内容に応じて&lt;/xref:System.IO.RenamedEventArgs&gt;、プロパティ&lt;/xref:System.IO.RenamedEventArgs.OldFullPath%2A&gt;&lt;/xref:System.IO.FileSystemEventArgs&gt;のプロパティ&lt;/xref:System.IO.FileSystemEventArgs.FullPath%2A&gt;から完全修飾パスを取得できます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If a directory is created in the sub tree of the directory you are watching, and IncludeSubdirectories is <ph id="ph1">`true`</ph>, that directory will automatically be watched.</source>
          <target state="translated">ディレクトリのサブツリーには、次の監視は、ディレクトリが作成された場合、IncludeSubdirectories <ph id="ph1">`true`</ph>、そのディレクトリが自動的に監視します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if you want to monitor subdirectories; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>サブディレクトリを監視する場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets or sets the size (in bytes) of the internal buffer.</source>
          <target state="translated">取得またはサイズ (バイト単位) の内部バッファーを設定します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can set the buffer to 4 KB or larger, but it must not exceed 64 KB.</source>
          <target state="translated">4 KB 以上では、バッファーを設定することができますが、64 KB を超えない必要があります。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If you try to set the InternalBufferSize property to less than 4096 bytes, your value is discarded and the InternalBufferSize property is set to 4096 bytes.</source>
          <target state="translated">4096 バイト未満に InternalBufferSize プロパティを設定しようとする場合、値が破棄され、InternalBufferSize プロパティが 4096 バイトに設定します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For best performance, use a multiple of 4 KB on Intel-based computers.</source>
          <target state="translated">パフォーマンスを得るには、Intel ベース コンピューター上で 4 KB の倍数を使用します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The system notifies the component of file changes, and it stores those changes in a buffer the component creates and passes to the APIs.</source>
          <target state="translated">システム ファイルの変更のコンポーネントに通知し、その変更をコンポーネントを作成し、Api に渡すバッファーに格納します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Each event can use up to 16 bytes of memory, not including the file name.</source>
          <target state="translated">各イベントは、最大 16 バイトのファイル名を含まない、メモリを使用できます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If there are many changes in a short time, the buffer can overflow.</source>
          <target state="translated">短期間に多数の変更がある場合、バッファーがオーバーフローすることができます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</source>
          <target state="translated">これにより、コンポーネントは、ディレクトリ内の変更の追跡とブランケットの通知のみ提供されます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Increasing the size of the buffer can prevent missing file system change events.</source>
          <target state="translated">バッファーのサイズを増やすことを防ぐことができます変更イベントをファイル システムがありません。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>However, increasing buffer size is expensive, because it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</source>
          <target state="translated">ただし、バッファー サイズを増やすことは、コストがディスクに保管しておいてバッファー可能な限り小さくスワップ アウトできない非ページ メモリのものであるためです。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To avoid a buffer overflow, use the &lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt; and &lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt; properties to filter out unwanted change notifications.</source>
          <target state="translated">バッファー オーバーフローを避けるためを使用して、&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;と&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;望ましくないを除外するプロパティの変更通知&lt;/xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;&lt;/xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The internal buffer size in bytes.</source>
          <target state="translated">バイトの内部バッファー サイズ。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The default is 8192 (8 KB).</source>
          <target state="translated">既定値は、8192 (8 KB) です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of changes to watch for.</source>
          <target state="translated">取得またはウォッチする変更の種類を設定します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You can combine the members of the &lt;xref:System.IO.NotifyFilters&gt; enumeration to watch for more than one type of change at a time.</source>
          <target state="translated">メンバーを組み合わせることができます、&lt;xref:System.IO.NotifyFilters&gt;列挙型を一度に変更の&amp;1; つ以上の種類を監視します&lt;/xref:System.IO.NotifyFilters&gt;。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For example, you can watch for changes in size of a file, and for changes in the <ph id="ph1">`LastWrite`</ph> time.</source>
          <target state="translated">たとえば、ファイルのサイズの変更との変更を見ることができます、<ph id="ph1">`LastWrite`</ph>時間。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This raises an event anytime there is a change in file or folder size, or a change in the <ph id="ph1">`LastWrite`</ph> time of the file or folder.</source>
          <target state="translated">これは、イベントを発生させますが、ファイルまたはフォルダーのサイズの変更や、<ph id="ph1">`LastWrite`</ph>ファイルまたはフォルダーの時間。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This is one way to filter out unwanted notifications.</source>
          <target state="translated">これは、不必要な通知をフィルター処理する方法の&amp;1; つです。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For more information on filtering out unwanted notifications, see the &lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;, &lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;, and &lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt; properties.</source>
          <target state="translated">不必要な通知をフィルター処理の詳細については、次を参照してください、 &lt;xref:System.IO.FileSystemWatcher.Filter%2A&gt;、 &lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt;、および&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt;プロパティ。&lt;/xref:System.IO.FileSystemWatcher.InternalBufferSize%2A&gt; &lt;/xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A&gt; &lt;/xref:System.IO.FileSystemWatcher.Filter%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.IO.NotifyFilters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.IO.NotifyFilters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The default is the bitwise OR combination of <bpt id="p1">&lt;xref uid="langword_csharp_LastWrite" name="LastWrite" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_FileName" name="FileName" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;xref uid="langword_csharp_DirectoryName" name="DirectoryName" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値のビットごとの OR の組み合わせは、 <bpt id="p1">&lt;xref uid="langword_csharp_LastWrite" name="LastWrite" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref uid="langword_csharp_FileName" name="FileName" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、および<bpt id="p3">&lt;xref uid="langword_csharp_DirectoryName" name="DirectoryName" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The value is not a valid bitwise OR combination of the <bpt id="p1">&lt;xref href="System.IO.NotifyFilters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">値は、有効なビットごとの OR の組み合わせではない、 <bpt id="p1">&lt;xref href="System.IO.NotifyFilters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The value that is being set is not valid.</source>
          <target state="translated">設定されている値が正しくありません。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher.Changed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">発生させる、 <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher.Changed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>OnChanged is called when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</source>
          <target state="translated">OnChanged は、サイズが変更されたときに呼び出されますが、システム属性では、最終書き込み時刻、最終アクセス時刻、またはファイルまたはディレクトリのセキュリティ アクセス許可で監視されているディレクトリ。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt; property to restrict the number of events raised when the &lt;xref:System.IO.FileSystemWatcher.Changed&gt; event is handled.</source>
          <target state="translated">使用して、&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;いつ発生するイベントの数を制限するプロパティ、&lt;xref:System.IO.FileSystemWatcher.Changed&gt;イベントを処理します&lt;/xref:System.IO.FileSystemWatcher.Changed&gt;&lt;/xref:System.IO.FileSystemWatcher.NotifyFilter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt; event is raised as soon as a file is created.</source>
          <target state="translated">&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;ファイルが作成されるとすぐにイベントが発生します&lt;/xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If a file is being copied or transferred into a watched directory, the &lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt; event will be raised immediately, followed by one or more OnChanged events.</source>
          <target state="translated">ファイルの中の場合コピーまたは転送を監視対象のディレクトリに、&lt;xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;イベントを発生させる、すぐに&amp;1; つまたは複数の OnChanged イベント続く&lt;/xref:System.IO.FileSystemWatcher.OnCreated%2A&gt;。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>イベント<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.FileSystemEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.FileSystemEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント データを格納します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher.Created"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">発生させる、 <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher.Created"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.FileSystemEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.FileSystemEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント データを格納します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher.Deleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">発生させる、 <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher.Deleted"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.FileSystemEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.FileSystemEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント データを格納します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher.Error"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">発生させる、 <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher.Error"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>OnError is called when an error occurs.</source>
          <target state="translated">OnError は、エラーが発生したときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>イベント<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.IO.ErrorEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.ErrorEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント データを格納します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher.Renamed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">発生させる、 <bpt id="p1">&lt;xref href="System.IO.FileSystemWatcher.Renamed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>OnRenamed is called when a file or directory within the directory being monitored is renamed.</source>
          <target state="translated">OnRenamed は、ファイルまたは監視されているディレクトリ内のディレクトリの名前を変更するときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>イベント<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.RenamedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.RenamedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント データを格納します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets or sets the path of the directory to watch.</source>
          <target state="translated">取得またはウォッチするディレクトリのパスを設定します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The path to monitor.</source>
          <target state="translated">監視するパス。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
          <target state="translated">既定値は空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The specified path does not exist or could not be found.</source>
          <target state="translated">指定されたパスは存在しないか、見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>-or-       The specified path contains wildcard characters.</source>
          <target state="translated">または、指定されたパスにワイルドカード文字が含まれています。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-or-       The specified path contains invalid path characters.</source>
          <target state="translated">または、指定されたパスに無効なパス文字が含まれています。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Occurs when a file or directory in the specified &lt;xref:System.IO.FileSystemWatcher.Path*&gt; is renamed.</source>
          <target state="translated">ファイルまたはディレクトリが指定されたときに発生&lt;xref:System.IO.FileSystemWatcher.Path*&gt;名前が変更されます&lt;/xref:System.IO.FileSystemWatcher.Path*&gt;。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Renaming the directory you are watching will not raise a notification.</source>
          <target state="translated">ウォッチするディレクトリの名前を変更する場合は、通知は発生しません。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Notifications are only raised for entries inside the directory you are watching.</source>
          <target state="translated">通知を試聴しているディレクトリ内のエントリに対してのみ発生します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の<bpt id="p2">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Sites bind a &lt;xref:System.ComponentModel.Component&gt; to a &lt;xref:System.ComponentModel.Design.IDesignerHost.Container%2A&gt; and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">サイトのバインド、&lt;xref:System.ComponentModel.Component&gt;を&lt;xref:System.ComponentModel.Design.IDesignerHost.Container%2A&gt;とそれらの間で通信を有効にするだけでなく、コンテナーは、そのコンポーネントを管理するための手段を提供します&lt;/xref:System.ComponentModel.Design.IDesignerHost.Container%2A&gt;&lt;/xref:System.ComponentModel.Component&gt;。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.IO.FileSystemWatcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.</source>
          <target state="translated">取得または、ディレクトリ変更の結果として発行されるイベント ハンドラー呼び出しをマーシャ リングに使用するオブジェクトを設定します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>When SynchronizingObject is <ph id="ph1">`null`</ph>, methods handling the &lt;xref:System.IO.FileSystemWatcher.Changed&gt;, &lt;xref:System.IO.FileSystemWatcher.Created&gt;, &lt;xref:System.IO.FileSystemWatcher.Deleted&gt;, and &lt;xref:System.IO.FileSystemWatcher.Renamed&gt; events are called on a thread from the system thread pool.</source>
          <target state="translated">SynchronizingObject がある場合<ph id="ph1">`null`</ph>、処理方法、 &lt;xref:System.IO.FileSystemWatcher.Changed&gt;、 &lt;xref:System.IO.FileSystemWatcher.Created&gt;、 &lt;xref:System.IO.FileSystemWatcher.Deleted&gt;、および&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;イベントがシステムのスレッド プールのスレッドで呼び出されます&lt;/xref:System.IO.FileSystemWatcher.Renamed&gt;&lt;/xref:System.IO.FileSystemWatcher.Deleted&gt;&lt;/xref:System.IO.FileSystemWatcher.Created&gt;&lt;/xref:System.IO.FileSystemWatcher.Changed&gt;。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>For more information on system thread pools, see &lt;xref:System.Threading.ThreadPool&gt;.</source>
          <target state="translated">システム スレッド プールの詳細については、 &lt;xref:System.Threading.ThreadPool&gt;。&lt;/xref:System.Threading.ThreadPool&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.IO.FileSystemWatcher.Changed&gt;, &lt;xref:System.IO.FileSystemWatcher.Created&gt;, &lt;xref:System.IO.FileSystemWatcher.Deleted&gt;, and &lt;xref:System.IO.FileSystemWatcher.Renamed&gt; events are handled by a visual Windows Forms component, such as a &lt;xref:System.Windows.Forms.Button&gt;, accessing the component through the system thread pool might not work, or may result in an exception.</source>
          <target state="translated">ときに、 &lt;xref:System.IO.FileSystemWatcher.Changed&gt;、 &lt;xref:System.IO.FileSystemWatcher.Created&gt;、 &lt;xref:System.IO.FileSystemWatcher.Deleted&gt;、および&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;ようイベントを Windows フォームのビジュアル コンポーネントによって処理される、 &lt;xref:System.Windows.Forms.Button&gt;、システム スレッド プールを介したコンポーネントへのアクセスが機能しない、または例外が発生する可能性があります&lt;/xref:System.Windows.Forms.Button&gt;&lt;/xref:System.IO.FileSystemWatcher.Renamed&gt;&lt;/xref:System.IO.FileSystemWatcher.Deleted&gt;&lt;/xref:System.IO.FileSystemWatcher.Created&gt;&lt;/xref:System.IO.FileSystemWatcher.Changed&gt;。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Avoid this by setting SynchronizingObject to a Windows Forms component, which causes the methods that handle the &lt;xref:System.IO.FileSystemWatcher.Changed&gt;, &lt;xref:System.IO.FileSystemWatcher.Created&gt;, &lt;xref:System.IO.FileSystemWatcher.Deleted&gt;, and &lt;xref:System.IO.FileSystemWatcher.Renamed&gt; events to be called on the same thread on which the component was created.</source>
          <target state="translated">SynchronizingObject を処理するメソッドを、Windows フォームのコンポーネントに設定してこれを避けるため、 &lt;xref:System.IO.FileSystemWatcher.Changed&gt;、 &lt;xref:System.IO.FileSystemWatcher.Created&gt;、 &lt;xref:System.IO.FileSystemWatcher.Deleted&gt;、および&lt;xref:System.IO.FileSystemWatcher.Renamed&gt;コンポーネントが作成されたスレッドと同じスレッドで呼び出されるイベント&lt;/xref:System.IO.FileSystemWatcher.Renamed&gt;&lt;/xref:System.IO.FileSystemWatcher.Deleted&gt;&lt;/xref:System.IO.FileSystemWatcher.Created&gt;&lt;/xref:System.IO.FileSystemWatcher.Changed&gt;。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.IO.FileSystemWatcher&gt; is used inside <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> in a Windows Forms designer, SynchronizingObject automatically sets to the control that contains the &lt;xref:System.IO.FileSystemWatcher&gt;.</source>
          <target state="translated">場合、&lt;xref:System.IO.FileSystemWatcher&gt;内で使用する<ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph>、Windows フォーム デザイナーで SynchronizingObject に自動的に設定を含む&lt;xref:System.IO.FileSystemWatcher&gt;.&lt;/xref:System.IO.FileSystemWatcher&gt;コントロール&lt;/xref:System.IO.FileSystemWatcher&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>For example, if you place a &lt;xref:System.IO.FileSystemWatcher&gt; on a designer for Form1 (which inherits from &lt;xref:System.Windows.Forms.Form&gt;) the SynchronizingObject property of &lt;xref:System.IO.FileSystemWatcher&gt; is set to the instance of Form1.</source>
          <target state="translated">配置する場合など、 &lt;xref:System.IO.FileSystemWatcher&gt;Form1 のデザイナー上 (から継承される&lt;xref:System.Windows.Forms.Form&gt;) の SynchronizingObject プロパティ&lt;xref:System.IO.FileSystemWatcher&gt;Form1 のインスタンスに設定されている&lt;/xref:System.IO.FileSystemWatcher&gt;&lt;/xref:System.Windows.Forms.Form&gt;&lt;/xref:System.IO.FileSystemWatcher&gt;。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the object used to marshal the event handler calls issued as a result of a directory change.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ディレクトリ変更の結果として発行されるイベント ハンドラー呼び出しをマーシャ リングするために使用するオブジェクトを表すです。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</source>
          <target state="translated">監視する変更の種類を指定して、発生した変更についての特定の情報を格納する構造体を返す同期メソッド。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>This method waits indefinitely until the first change occurs and then returns.</source>
          <target state="translated">このメソッドは、最初の変更が発生し、返しますまで無期限に待機します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This is the same as using WaitForChanged with the <ph id="ph1">`timeout`</ph> parameter set to -1.</source>
          <target state="translated">これと同じで WaitForChanged を使用して、<ph id="ph1">`timeout`</ph>パラメーターが-1 に設定します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method allows an event handler to be invoked to respond to file changes even if the &lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt; property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このメソッドに応答ファイルの変更の場合でも呼び出されるイベント ハンドラーを使用する、&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;プロパティに設定されている<ph id="ph2">`false`</ph>&lt;/xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>In some systems, &lt;xref:System.IO.FileSystemWatcher&gt; reports changes to files using the short 8.3 file name format.</source>
          <target state="translated">一部のシステムで&lt;xref:System.IO.FileSystemWatcher&gt;短い 8.3 ファイル名の形式を使用してファイルへの変更を報告します&lt;/xref:System.IO.FileSystemWatcher&gt;。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</source>
          <target state="translated">たとえば、"LongFileName.LongExtension"への変更として報告する"LongFi ~ です。Lon"です。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.WatcherChangeTypes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to watch for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.WatcherChangeTypes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を監視します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.WaitForChangedResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains specific information on the change that occurred.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.WaitForChangedResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>発生した変更についての特定の情報を格納します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</source>
          <target state="translated">タイムアウトになるまで待機する時間 (ミリ秒) の監視と変更の種類を指定して、発生した変更についての特定の情報を含む構造体を返す同期メソッド。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This method waits until a change occurs or it has timed out.</source>
          <target state="translated">このメソッドは、変更が発生したかがタイムアウトするまで待機します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A value of -1 for the <ph id="ph1">`timeout`</ph> parameter means wait indefinitely.</source>
          <target state="translated">達すると-1 の値、<ph id="ph1">`timeout`</ph>パラメーターは、無期限に待機することを意味します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method allows an event handler to be invoked to respond to file changes even if the &lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt; property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このメソッドに応答ファイルの変更の場合でも呼び出されるイベント ハンドラーを使用する、&lt;xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;プロパティに設定されている<ph id="ph2">`false`</ph>&lt;/xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A&gt;。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>In some systems, &lt;xref:System.IO.FileSystemWatcher&gt; reports changes to files using the short 8.3 file name format.</source>
          <target state="translated">一部のシステムで&lt;xref:System.IO.FileSystemWatcher&gt;短い 8.3 ファイル名の形式を使用してファイルへの変更を報告します&lt;/xref:System.IO.FileSystemWatcher&gt;。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</source>
          <target state="translated">たとえば、"LongFileName.LongExtension"への変更として報告する"LongFi ~ です。Lon"です。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.WatcherChangeTypes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to watch for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.WatcherChangeTypes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を監視します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The time (in milliseconds) to wait before timing out.</source>
          <target state="translated">時間 (ミリ秒単位) をタイムアウトになるまで待機します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.WaitForChangedResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains specific information on the change that occurred.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.WaitForChangedResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>発生した変更についての特定の情報を格納します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>