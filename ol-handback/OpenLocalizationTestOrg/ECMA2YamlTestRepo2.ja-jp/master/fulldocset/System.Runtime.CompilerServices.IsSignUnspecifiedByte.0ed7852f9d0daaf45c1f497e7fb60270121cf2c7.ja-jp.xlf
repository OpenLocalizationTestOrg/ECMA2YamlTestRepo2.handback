<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e183cc702f6f79fc59c9dd2b33cba39dbd529d7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.CompilerServices.IsSignUnspecifiedByte.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e7e767adbb081d6ac07046bec8f94bf68c92e92</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4f79d880ec95df22279040cd8c7d1fe257d6dae</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates that a modifier is neither signed nor unsigned.</source>
          <target state="translated">修飾子は署名も署名されていないことを示します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Some programming languages, such as C++, recognize three distinct <ph id="ph1">`char`</ph> values: <ph id="ph2">`signed char`</ph>, <ph id="ph3">`unsigned char`</ph>, and <ph id="ph4">`char`</ph>.</source>
          <target state="translated">3 つの異なる、C など、一部のプログラミング言語認識<ph id="ph1">`char`</ph>値: <ph id="ph2">`signed char`</ph>、 <ph id="ph3">`unsigned char`</ph>、および<ph id="ph4">`char`</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To distinguish the unmodified <ph id="ph1">`char`</ph> type from the others, the Microsoft C++ compiler adds the IsSignUnspecifiedByte modifier to each <ph id="ph2">`char`</ph> type emitted to an assembly.</source>
          <target state="translated">変更されていないを区別する<ph id="ph1">`char`</ph>型、他のユーザーから、Microsoft C コンパイラは各に IsSignUnspecifiedByte 修飾子を追加<ph id="ph2">`char`</ph>型のアセンブリに出力されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</source>
          <target state="translated">コンパイラは、既定の動作が適切ではない場合、・ イン タイム (JIT) コンパイラが値を処理する方法を変更するメタデータ内のカスタム修飾子を生成します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</source>
          <target state="translated">JIT コンパイラには、カスタム修飾子が検出されると、修飾子を指定する方法で値を処理します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Compilers can apply custom modifiers to methods, parameters, and return values.</source>
          <target state="translated">コンパイラは、メソッド、パラメーターにカスタム修飾子を適用し、値を返します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The JIT compiler must respond to required modifiers but can ignore optional modifiers.</source>
          <target state="translated">JIT コンパイラでは、必須の修飾子に応答する必要がありますが、オプションの修飾子を無視することができます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can emit custom modifiers into metadata using one of the following techniques:      -   Using methods in the &lt;xref:System.Reflection.Emit.TypeBuilder&gt; class such as &lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;, &lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;, &lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;, and &lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;.</source>
          <target state="translated">次の手法のいずれかを使用してメタデータにカスタム修飾子を出力することができます:-内のメソッドを使用して、&lt;xref:System.Reflection.Emit.TypeBuilder&gt;などクラス&lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;、 &lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;、 &lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;、 &lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;&lt;/xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder&gt; 。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-   Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to <ph id="ph1">`modopt`</ph> and <ph id="ph2">`modreq`</ph>, and assembling the file with the <bpt id="p1">[</bpt>Ilasm.exe (IL Assembler)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">呼び出しを含む Microsoft intermediate language (MSIL) の命令ファイルを生成する<ph id="ph1">`modopt`</ph>と<ph id="ph2">`modreq`</ph>を使用してファイルをまとめることと、 <bpt id="p1">[</bpt>Ilasm.exe (IL アセンブラー)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   Using the unmanaged reflection API.</source>
          <target state="translated">アンマネージ リフレクション API を使用します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>