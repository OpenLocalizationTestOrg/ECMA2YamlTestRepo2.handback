<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b431c28d8b409bfcd0c7194ec2df5b445a42e5d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.ConflictOptions.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2918252bd0a0a74f7e1cfd6424d692ba7ed586e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e017b22adc8551320f649a1b46fa14257c4704cb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Determines how ASP.NET data source controls handle data conflicts when updating or deleting data.</source>
          <target state="translated">ASP.NET のデータ ソースがハンドル データの競合を更新する場合、またはデータの削除を制御する方法を決定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</source>
          <target state="translated">同時実行制御は、データを読み取るし、複数のクライアントがアクセスして、同じデータを操作するときに、ストアで変更する方法を制御するデータ ストアを使用する手法です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</source>
          <target state="translated">たとえば、1 つのクライアントは、データを読み取り、別のクライアントが、同じデータを読み取り、別のユーザーに提示中に、ユーザーに提示します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If both users update the data and submit it to the data storage, some unexpected result might occur, because the clients might update different values for the same data.</source>
          <target state="translated">両方のユーザーは、データ更新、データ ストレージに送信すると、予期しない結果が発生する、クライアントは、同じデータの異なる値を更新するためです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This is considered a conflict.</source>
          <target state="translated">これは、競合と見なされます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ConflictDetection`</ph> property that is defined for ASP.NET data source controls is used to determine how a control handles data conflicts in the underlying data storage when the underlying data storage is using optimistic concurrency and a delete or update operation is performed.</source>
          <target state="translated"><ph id="ph1">`ConflictDetection`</ph> ASP.NET データ ソース コントロールに定義されているプロパティを使用して、基になるデータ ストレージを使用してオプティミスティック同時実行制御と delete または update 操作が実行される際に、コントロールが基になるデータ ストレージでデータの競合を処理する方法を決定します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>By default, the <ph id="ph1">`ConflictDetection`</ph> property is set to OverwriteChanges, which means the data source control will overwrite any changes made to a data row between the time the data source control first read data from the row and the time that the row is updated.</source>
          <target state="translated">既定では、 <ph id="ph1">`ConflictDetection`</ph> OverwriteChanges で、データ ソース コントロールは、データ ソース コントロールが最初の行からデータを読み取るときと、行が更新される時刻の間のデータ行に加えられた変更を上書きすることを意味するプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The primary key is used for locating the data row that will be updated or deleted, but no other comparison of the data is performed.</source>
          <target state="translated">主キーが更新または削除されるデータ行を検索に使用されるが、その他のデータの比較は行われません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the data source control is configured to use the CompareAllValues option, however, the control passes the original data in the <ph id="ph1">`oldValues`</ph> collections of the <ph id="ph2">`Update`</ph> and <ph id="ph3">`Delete`</ph> methods so that you can write logic to update or delete data only if these values match the values currently in the data storage.</source>
          <target state="translated">データ ソース コントロールが CompareAllValues オプションを使用して構成されている場合、制御が渡される内の元のデータ、<ph id="ph1">`oldValues`</ph>のコレクション、<ph id="ph2">`Update`</ph>と<ph id="ph3">`Delete`</ph>メソッドを更新またはこれらの値には、データ記憶域の現在の値が一致する場合だけにデータを削除するためのロジックを作成できるようにします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The matching values indicate that the data has not changed since the time it was read.</source>
          <target state="translated">一致する値は、データが読み取られて以来変更されていないことを示します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A data source control uses the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">oldValues</ph><ept id="p1">&lt;/code&gt;</ept> collection of the <bpt id="p2">&lt;xref uid="langword_csharp_Update" name="Update" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref uid="langword_csharp_Delete" name="Delete" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> methods to determine whether the data has been changed by another process.</source>
          <target state="translated">データ ソース コントロールを使用して、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">oldValues</ph> <ept id="p1">&lt;/code&gt;</ept>のコレクション、 <bpt id="p2">&lt;xref uid="langword_csharp_Update" name="Update" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>と<bpt id="p3">&lt;xref uid="langword_csharp_Delete" name="Delete" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>別のプロセスによってデータが変更されたかどうかを判別する方法です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A data source control overwrites all values in a data row with its own values for the row.</source>
          <target state="translated">データ ソース コントロールには、行の値で、データ行のすべての値が上書きされます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>