<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24ce8816893421b474c70a0eb428566231c1c6cf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Schema.XmlSchemaElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74487da8957743b13b31a8fc019edd78ddac7fb6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ede87674a8a3195b9156a9b09ed583b9fbdf3d8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the <bpt id="p1">&lt;xref uid="langword_csharp_element" name="element" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element from XML Schema as specified by the World Wide Web Consortium (W3C).</source>
          <target state="translated">表す、 <bpt id="p1">&lt;xref uid="langword_csharp_element" name="element" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> World Wide Web Consortium (W3C) で指定された XML スキーマの要素。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is the base class for all particle types and is used to describe an element in an XML document.</source>
          <target state="translated">このクラスは、すべてのパーティクル型の基底クラスがあり、XML ドキュメント内の要素の記述に使用されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  -   Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt;-場所や不明または信頼できないソースからスキーマを使用しないでください。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">これは、コードのセキュリティが低下します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">&gt;-XML スキーマ (インライン スキーマを含む) を受けます本質的にサービス拒否攻撃です。信頼されていないシナリオでに同意されません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&gt; -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">&gt;-スキーマ検証エラー メッセージと例外が、コンテンツ モデルまたはスキーマ ファイルの URI パスに関する機密情報を公開します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">信頼されていない呼び出し元にこの情報を公開しないように注意します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derivation.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>から派生します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This attribute can contain the following values:      |Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`BlockDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Empty`</ph>|There are no restrictions on replacements of this element.|   |<ph id="ph4">`Substitution`</ph>|This element cannot be replaced by a type derived by Substitution.|   |<ph id="ph5">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph6">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph7">`All`</ph><ph id="ph8">|</ph><ph id="ph9">`#all`</ph>.</source>
          <target state="translated">この属性は、次の値を含めることができます |。Enum |説明 |  |----------|-----------------|  |<ph id="ph1">`None`</ph>|によって定義される派生制限を使用して、<ph id="ph2">`BlockDefault`</ph>が存在する場合は、スキーマのプロパティです |。  |<ph id="ph3">`Empty`</ph>|この要素の置換に関する制限はありません |。  |<ph id="ph4">`Substitution`</ph>|この要素は、置換による派生型によって置き換えられることはできません |。  |<ph id="ph5">`Extension`</ph>|この要素は、拡張によって派生した型によって置き換えられることはできません |。  |<ph id="ph6">`Restriction`</ph>|この要素は、制限による派生型によって置き換えられることはできません |。  |<ph id="ph7">`All`</ph><ph id="ph8">|</ph><ph id="ph9">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This element cannot be replaced by any type regardless of derivation method.|       This property does not prevent derivation, but prevents derivation from replacing the type in an instance.</source>
          <target state="translated">この要素は、派生方法に関係なく任意の型によって置き換えられることはできません |。      このプロパティは、派生クラスができないという、インスタンスの型が置換からの派生を防止します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>List and union values are not supported for the <ph id="ph1">`block`</ph> property.</source>
          <target state="translated">リストと共用体の値はサポートされていません、<ph id="ph1">`block`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The attribute used to block a type derivation.</source>
          <target state="translated">型の派生をブロックするために使用する属性です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Default value is <bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">コンパイル後の値を取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロパティです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This value indicates how the type is enforced when <ph id="ph1">`xsi:type`</ph> is used in the instance document.</source>
          <target state="translated">この値は、型の適用方法を示すとき<ph id="ph1">`xsi:type`</ph>インスタンス ドキュメントで使用します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, if the value is restricted, only the specific defined type can be used, not types derived by restriction from the specific defined type.</source>
          <target state="translated">たとえば、値が制限されている場合は、特定の定義済みの型のみを使用できます、制限付きで定義された特定の型から派生した型ではなくです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This property can contain the values shown in the following table.</source>
          <target state="translated">このプロパティは、次の表に示す値を含めることができます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`None`</ph>.</source>
          <target state="translated">既定値は<ph id="ph1">`None`</ph>します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>List and union derivation methods are not allowed on this property.</source>
          <target state="translated">リストと共用体の派生メソッドは、このプロパティは使用できません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`Empty`</ph>|There are no restrictions on replacements of this element.|   |<ph id="ph2">`Substitution`</ph>|This element cannot be replaced by a type derived by Substitution.|   |<ph id="ph3">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph4">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</source>
          <target state="translated">|Enum |説明 |  |----------|-----------------|  |<ph id="ph1">`Empty`</ph>|この要素の置換に関する制限はありません |。  |<ph id="ph2">`Substitution`</ph>|この要素は、置換による派生型によって置き換えられることはできません |。  |<ph id="ph3">`Extension`</ph>|この要素は、拡張によって派生した型によって置き換えられることはできません |。  |<ph id="ph4">`Restriction`</ph>|この要素は、制限による派生型によって置き換えられることはできません |。  |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This element cannot be replaced by any type regardless of derivation method.|</source>
          <target state="translated">この要素は、派生方法に関係なく任意の型によって置き換えられることはできません |。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">コンパイル後の値、 <bpt id="p1">&lt;xref uid="langword_csharp_Block" name="Block" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロパティです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The default is the <bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value on the <bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">既定値は、 <bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値を<bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>要素。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the collection of constraints on the element.</source>
          <target state="translated">要素に関する制約のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns a collection of constraints on the element.</source>
          <target state="translated">要素に関する制約のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Can be any of <ph id="ph1">`XmlSchemaKey`</ph>, <ph id="ph2">`XmlSchemaKeyref`</ph>, or <ph id="ph3">`XmlSchemaUnique`</ph>.</source>
          <target state="translated">Can be any of <ph id="ph1">`XmlSchemaKey`</ph>, <ph id="ph2">`XmlSchemaKeyref`</ph>, or <ph id="ph3">`XmlSchemaUnique`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The collection of constraints.</source>
          <target state="translated">制約のコレクション。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets the default value of the element if its content is a simple type or content of the element is <bpt id="p1">&lt;xref uid="langword_csharp_textOnly" name="textOnly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">か、そのコンテンツが単純型要素のコンテンツは、要素の既定値の設定を取得または<bpt id="p1">&lt;xref uid="langword_csharp_textOnly" name="textOnly" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fixed`</ph> and <ph id="ph2">`default`</ph> attributes are mutually exclusive.</source>
          <target state="translated"><ph id="ph1">`fixed`</ph>と<ph id="ph2">`default`</ph>属性は相互に排他的です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the element contains a simple type, this value must be a valid value of that type.</source>
          <target state="translated">要素に単純型が含まれている場合、この値は、その型の有効な値をする必要があります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default value for the element.</source>
          <target state="translated">要素の既定値。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default is a null reference.</source>
          <target state="translated">既定値は、null 参照です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the type of the element based on the &lt;xref:System.Xml.Schema.XmlSchemaElement.SchemaType<bpt id="p2">*</bpt>&gt; or &lt;xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName<ept id="p2">*</ept>&gt; values of the element.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要素の型を表すオブジェクトがに基づいて、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; または&lt;&gt; <ept id="p2">*</ept>&gt; 要素の値。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This property is a post-schema-validation infoset property.</source>
          <target state="translated">このプロパティは、スキーマ検証後の infoset プロパティです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets a common language runtime (CLR) object based on the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> of the element, which holds the post-compilation value of the <bpt id="p3">&lt;xref uid="langword_csharp_ElementType" name="ElementType" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">共通言語ランタイム (CLR) オブジェクトに基づいて取得、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>または<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>のコンパイル後の値が保持されている要素の<bpt id="p3">&lt;xref uid="langword_csharp_ElementType" name="ElementType" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>プロパティです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The object can be &lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt; if the element has a built-in XML Schema type or &lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt; if the element has a user-defined type.</source>
          <target state="translated">オブジェクトを指定できます&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;要素に組み込みの XML スキーマ型がある場合または&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;要素に、ユーザー定義型がある場合&lt;/xref:System.Xml.Schema.XmlSchemaSimpleType&gt;&lt;/xref:System.Xml.Schema.XmlSchemaDatatype&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This property is a post-schema-validation infoset property.</source>
          <target state="translated">このプロパティは、スキーマ検証後の infoset プロパティです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The ElementType property is obsolete in the 2.0 version of the .NET Framework and has been replaced by the &lt;xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A&gt; property.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;、ElementType プロパティは、2.0、.NET Framework のバージョンで廃止されておりは置き換えられました、&lt;xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A&gt;プロパティ&lt;/xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The common language runtime object.</source>
          <target state="translated">共通言語ランタイム オブジェクト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_ElementType" name="ElementType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">コンパイル後の値、 <bpt id="p1">&lt;xref uid="langword_csharp_ElementType" name="ElementType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロパティです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property to indicate that no further derivations are allowed.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>をさらに派生が許可されないことを示すプロパティです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This attribute can contain the values shown in the following table.</source>
          <target state="translated">この属性は、次の表に示す値を含めることができます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`FinalDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Empty`</ph>|There are no restrictions on derivations of this element.|   |<ph id="ph4">`Extension`</ph>|This element cannot be derived by Extension.|   |<ph id="ph5">`Restriction`</ph>|This element cannot be derived by Restriction.|   |<ph id="ph6">`All`</ph><ph id="ph7">|</ph><ph id="ph8">`#all`</ph>.</source>
          <target state="translated">|Enum |説明 |  |----------|-----------------|  |<ph id="ph1">`None`</ph>|によって定義される派生制限を使用して、<ph id="ph2">`FinalDefault`</ph>が存在する場合は、スキーマのプロパティです |。  |<ph id="ph3">`Empty`</ph>|この要素の派生に制限はありません |。  |<ph id="ph4">`Extension`</ph>|この要素は、拡張によって派生させることはできません |。  |<ph id="ph5">`Restriction`</ph>|この要素は、制限による派生することはできません |。  |<ph id="ph6">`All`</ph><ph id="ph7">|</ph><ph id="ph8">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This element cannot be derived by any derivation method.|       See also &lt;xref:System.Xml.Schema.XmlSchemaElement&gt;.</source>
          <target state="translated">任意の派生メソッドでこの要素を派生することはできません |。      関連項目&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaElement&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not allowed for this property.</source>
          <target state="translated"><ph id="ph1">`Substitution`</ph>、 <ph id="ph2">`List`</ph>、および<ph id="ph3">`Union`</ph>派生メソッドは、このプロパティは使用できません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロパティです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">コンパイル後の値を取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロパティです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This value indicates how the type is restricted when the type is extended through restriction.</source>
          <target state="translated">この値は、制限を使用して型を拡張するときに、型がどのように制限されるかを示します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This property can contain the following values.</source>
          <target state="translated">このプロパティは、次の値を含めることができます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`Empty`</ph>|There are no restrictions on derivations of this element.|   |<ph id="ph2">`Extension`</ph>|This element cannot be derived by Extension.|   |<ph id="ph3">`Restriction`</ph>|This element cannot be derived by Restriction.|   |<ph id="ph4">`All`</ph><ph id="ph5">|</ph><ph id="ph6">`#all`</ph>.</source>
          <target state="translated">|Enum |説明 |  |----------|-----------------|  |<ph id="ph1">`Empty`</ph>|この要素の派生に制限はありません |。  |<ph id="ph2">`Extension`</ph>|この要素は、拡張によって派生させることはできません |。  |<ph id="ph3">`Restriction`</ph>|この要素は、制限による派生することはできません |。  |<ph id="ph4">`All`</ph><ph id="ph5">|</ph><ph id="ph6">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This element cannot be derived by any derivation method.|       Substitution, List, and Union derivation methods are not allowed for this property.</source>
          <target state="translated">任意の派生メソッドでこの要素を派生することはできません |。      置換、リスト、および共用体の派生メソッドは、このプロパティは使用できません。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">コンパイル後の値、 <bpt id="p1">&lt;xref uid="langword_csharp_Final" name="Final" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロパティです。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Default value is the <bpt id="p1">&lt;xref uid="langword_csharp_FinalDefault" name="FinalDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value on the <bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">既定値は、 <bpt id="p1">&lt;xref uid="langword_csharp_FinalDefault" name="FinalDefault" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値を<bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>要素。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the fixed value.</source>
          <target state="translated">取得または固定値を設定します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The content should be a simple type or <ph id="ph1">`textOnly`</ph>.</source>
          <target state="translated">コンテンツは単純型である必要がありますまたは<ph id="ph1">`textOnly`</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fixed`</ph> and <ph id="ph2">`default`</ph> attributes are mutually exclusive.</source>
          <target state="translated"><ph id="ph1">`fixed`</ph>と<ph id="ph2">`default`</ph>属性は相互に排他的です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The fixed value that is predetermined and unchangeable.</source>
          <target state="translated">固定値では、あらかじめ決められたおり、変更できません。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The default is a null reference.</source>
          <target state="translated">既定値は、null 参照です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets the form for the element.</source>
          <target state="translated">取得または要素の形式を設定します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The default value is the value of the <ph id="ph1">`elementFormDefault`</ph> attribute for the <ph id="ph2">`schema`</ph> element containing the element.</source>
          <target state="translated">既定値の値、<ph id="ph1">`elementFormDefault`</ph>属性を<ph id="ph2">`schema`</ph>要素を含む要素です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`Unqualified`</ph>.</source>
          <target state="translated">既定値は<ph id="ph1">`Unqualified`</ph>します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`Qualified`</ph>|Element must be qualified with the namespace prefix.|   |<ph id="ph2">`Unqualified`</ph>|Element is not required to be qualified with the namespace prefix.|       The value cannot be set if the containing element is the <ph id="ph3">`schema`</ph> element.</source>
          <target state="translated">|Enum |説明 |  |----------|-----------------|  |<ph id="ph1">`Qualified`</ph>|要素は、名前空間プレフィックスで修飾する必要があります |。  |<ph id="ph2">`Unqualified`</ph>|要素が名前空間プレフィックスで修飾する必要はありません |。      コンテナーの要素がある場合、値を設定できません、<ph id="ph3">`schema`</ph>要素。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The form for the element.</source>
          <target state="translated">要素の形式です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default is the <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> value.</source>
          <target state="translated">既定値は、 <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets information to indicate if the element can be used in an instance document.</source>
          <target state="translated">取得または、インスタンス ドキュメント内の要素を使用することができるかどうかを示す情報を設定します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the element cannot appear in the instance document.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、インスタンス ドキュメント内の要素は指定できません。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets or sets information that indicates if <bpt id="p1">&lt;xref uid="langword_csharp_xsi:nil" name="xsi:nil" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can occur in the instance data.</source>
          <target state="translated">取得または設定についてはどうかを示す<bpt id="p1">&lt;xref uid="langword_csharp_xsi:nil" name="xsi:nil" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>インスタンス データに発生することができます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Indicates if an explicit nil value can be assigned to the element.</source>
          <target state="translated">かどうかは、明示的な nil 値に指定できます、要素を示します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This applies to element content and not the attributes of the element.</source>
          <target state="translated">これは、要素の属性ではなく、要素のコンテンツに適用されます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If nillable is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, this enables an instance of the element to have the <bpt id="p2">&lt;xref uid="langword_csharp_nil" name="nil" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> attribute set to <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Nillable 場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、これを有効にして、要素のインスタンス、 <bpt id="p2">&lt;xref uid="langword_csharp_nil" name="nil" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>属性に設定<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_nil" name="nil" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute is defined as part of the XML Schema namespace for instances.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_nil" name="nil" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>属性が XML スキーマ名前空間の一部として定義されているインスタンス。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the element.</source>
          <target state="translated">取得または要素の名前を設定します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The name must be an NCName (no-colon name) as defined in the World Wide Web Consortium (W3C) XML Namespaces specification.</source>
          <target state="translated">名前は、World Wide Web Consortium (W3C) XML 名前空間の仕様で定義されているが NCName (コロンを含まない名前) をする必要があります。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Name`</ph> and <ph id="ph2">`RefName`</ph> attributes are mutually exclusive.</source>
          <target state="translated"><ph id="ph1">`Name`</ph><ph id="ph2">`RefName`</ph>属性は相互に排他的です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The name of the element.</source>
          <target state="translated">要素の名前です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_String.Empty" name="String.Empty" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_String.Empty" name="String.Empty" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets the actual qualified name for the given element.</source>
          <target state="translated">指定した要素の実際の限定名を取得します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>QualifiedName is the name that a <ph id="ph1">`ref`</ph> attribute refers to.</source>
          <target state="translated">QualifiedName は名前を<ph id="ph1">`ref`</ph>属性を参照します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The qualified name consists of the NCName of the element.</source>
          <target state="translated">要素の NCName の修飾名で構成されます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example, element name = "NCName", and the prefix used to describe the <ph id="ph1">`targetNamespace`</ph> of the schema.</source>
          <target state="translated">たとえば、要素名 ="NCName"と記述に使用されるプレフィックス、<ph id="ph1">`targetNamespace`</ph>のスキーマです。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This property holds the post-compilation value of the <ph id="ph1">`QualifiedName`</ph> property.</source>
          <target state="translated">このプロパティのコンパイル後の値を保持する、<ph id="ph1">`QualifiedName`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The qualified name of the element.</source>
          <target state="translated">要素の修飾名。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_QualifiedName" name="QualifiedName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">コンパイル後の値、 <bpt id="p1">&lt;xref uid="langword_csharp_QualifiedName" name="QualifiedName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロパティです。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets or sets the reference name of an element declared in this schema (or another schema indicated by the specified namespace).</source>
          <target state="translated">取得またはこのスキーマで宣言された要素 (または指定した名前空間で示された別のスキーマ) の参照名を設定します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`RefName`</ph> must be a QName.</source>
          <target state="translated"><ph id="ph1">`RefName`</ph> QName である必要があります。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`RefName`</ph> can include a namespace prefix.</source>
          <target state="translated"><ph id="ph1">`RefName`</ph>名前空間プレフィックスを含めることができます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`RefName`</ph> attribute is present, all <ph id="ph2">`complexType`</ph>, <ph id="ph3">`simpleType`</ph>, <ph id="ph4">`key`</ph>, <ph id="ph5">`keyref`</ph>, <ph id="ph6">`unique`</ph>, <ph id="ph7">`nillable`</ph>, <ph id="ph8">`default`</ph>, <ph id="ph9">`fixed`</ph>, <ph id="ph10">`form`</ph>, <ph id="ph11">`block`</ph>, and <ph id="ph12">`type`</ph> must be absent.</source>
          <target state="translated">If <ph id="ph1">`RefName`</ph> attribute is present, all <ph id="ph2">`complexType`</ph>, <ph id="ph3">`simpleType`</ph>, <ph id="ph4">`key`</ph>, <ph id="ph5">`keyref`</ph>, <ph id="ph6">`unique`</ph>, <ph id="ph7">`nillable`</ph>, <ph id="ph8">`default`</ph>, <ph id="ph9">`fixed`</ph>, <ph id="ph10">`form`</ph>, <ph id="ph11">`block`</ph>, and <ph id="ph12">`type`</ph> must be absent.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`RefName`</ph> is present, <ph id="ph2">`minOccurs`</ph>, <ph id="ph3">`maxOccurs`</ph>, and <ph id="ph4">`id`</ph> are allowed.</source>
          <target state="translated">場合<ph id="ph1">`RefName`</ph>が含まれている<ph id="ph2">`minOccurs`</ph>、 <ph id="ph3">`maxOccurs`</ph>、および<ph id="ph4">`id`</ph>許可されます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To declare an element using an existing element definition, use the <ph id="ph1">`RefName`</ph> attribute to specify the existing element definition.</source>
          <target state="translated">既存の要素の定義を使用して要素を宣言するには、使用、<ph id="ph1">`RefName`</ph>属性を既存の要素の定義を指定します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The value cannot be set if the containing element is the <ph id="ph1">`schema`</ph> element.</source>
          <target state="translated">コンテナーの要素がある場合、値を設定できません、<ph id="ph1">`schema`</ph>要素。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The reference name of the element.</source>
          <target state="translated">要素の参照名。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of the element.</source>
          <target state="translated">取得または要素の型を設定します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This can either be a complex type or a simple type.</source>
          <target state="translated">複合型または単純型を指定できます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To declare an element using an existing <ph id="ph1">`simpleType`</ph> or <ph id="ph2">`complexType`</ph> definition, use the <ph id="ph3">`SchemaType`</ph> property to specify the existing type.</source>
          <target state="translated">使用して既存の要素を宣言する<ph id="ph1">`simpleType`</ph>または<ph id="ph2">`complexType`</ph>定義、使用、<ph id="ph3">`SchemaType`</ph>プロパティを既存の種類を指定します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`RefName`</ph> attribute is present, <ph id="ph2">`complexType`</ph>, <ph id="ph3">`simpleType`</ph>, <ph id="ph4">`key`</ph>, <ph id="ph5">`keyref`</ph>, and <ph id="ph6">`unique`</ph> elements and <ph id="ph7">`nillable`</ph>, <ph id="ph8">`default`</ph>, <ph id="ph9">`fixed`</ph>, <ph id="ph10">`form`</ph>, <ph id="ph11">`block`</ph>, and <ph id="ph12">`SchemaType`</ph> attributes cannot be present.</source>
          <target state="translated">場合<ph id="ph1">`RefName`</ph>属性が含まれている<ph id="ph2">`complexType`</ph>、 <ph id="ph3">`simpleType`</ph>、 <ph id="ph4">`key`</ph>、 <ph id="ph5">`keyref`</ph>、および<ph id="ph6">`unique`</ph>要素および<ph id="ph7">`nillable`</ph>、 <ph id="ph8">`default`</ph>、 <ph id="ph9">`fixed`</ph>、 <ph id="ph10">`form`</ph>、 <ph id="ph11">`block`</ph>、および<ph id="ph12">`SchemaType`</ph>属性が存在することはできません。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The type of the element.</source>
          <target state="translated">要素の型。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of a built-in data type defined in this schema or another schema indicated by the specified namespace.</source>
          <target state="translated">取得またはこのスキーマまたは指定した名前空間で示された別のスキーマで定義された組み込みのデータ型の名前を設定します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The name of the built-in data type.</source>
          <target state="translated">組み込みデータ型の名前。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of an element that is being substituted by this element.</source>
          <target state="translated">取得またはこの要素によって置き換えられる要素の名前を設定します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This element must have the same type or a type derived from the type of the specified element.</source>
          <target state="translated">この要素は、同じ型または指定した要素の型から派生した型が必要です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This value must be a QName.</source>
          <target state="translated">この値は QName である必要があります。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The value cannot be set if the containing element is the <ph id="ph1">`schema`</ph> element.</source>
          <target state="translated">コンテナーの要素がある場合、値を設定できません、<ph id="ph1">`schema`</ph>要素。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The qualified name of an element that is being substituted by this element.</source>
          <target state="translated">この要素によって置き換えられる要素の修飾名。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>