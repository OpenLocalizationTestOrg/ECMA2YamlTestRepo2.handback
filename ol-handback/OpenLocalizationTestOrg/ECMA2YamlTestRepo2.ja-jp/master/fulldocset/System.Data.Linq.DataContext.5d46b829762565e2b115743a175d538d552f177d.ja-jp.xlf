<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14be8aef7bbf0954b3531707eda6ac0d1c8eb140</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.Linq.DataContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">baf1bb0c4e568e7899fd512cc2a9cf57c6b71ab0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15150288bd3c42b577a6b50773bca2a430b4e3e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the main entry point for the <ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> framework.</source>
          <target state="translated">メイン エントリ ポイントを表す、<ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>フレームワークです。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The DataContext is the source of all entities mapped over a database connection.</source>
          <target state="translated">DataContext は、データベース接続にマップされ、すべてのエンティティのソースです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It tracks changes that you made to all retrieved entities and maintains an "identity cache" that guarantees that entities retrieved more than one time are represented by using the same object instance.</source>
          <target state="translated">取得したすべてのエンティティに対して行った変更を追跡し、「id キャッシュ」で表されるエンティティが&amp;1; つ以上の時間を取得することの保証を維持、同じオブジェクト インスタンスを使用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In general, a DataContext instance is designed to last for one "unit of work" however your application defines that term.</source>
          <target state="translated">一般に、DataContext インスタンスは、アプリケーションがその用語を定義するただし「の作業単位」1 つの最後に設計されています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A DataContext is lightweight and is not expensive to create.</source>
          <target state="translated">DataContext は、軽量を作成するコストではありません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A typical <ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> application creates DataContext instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</source>
          <target state="translated">一般的な<ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>メソッドのスコープで、または論理一連の関連するデータベース操作を表す有効期間が短いクラスのメンバーとして、アプリケーションが DataContext インスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by referencing the connection used by the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスによって使用される接続を参照することによって、<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Data.Linq.DataContext&gt; opens and closes a database connection as needed if you provide a closed connection or a connection string.</source>
          <target state="translated">A&lt;xref:System.Data.Linq.DataContext&gt;閉じた接続または接続文字列を指定する場合、必要に応じて、データベース接続の開閉&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In general, you should never have to call <ph id="ph1">`Dispose`</ph> on a &lt;xref:System.Data.Linq.DataContext&gt;.</source>
          <target state="translated">一般に、することはありませんを呼び出す<ph id="ph1">`Dispose`</ph> &lt;xref:System.Data.Linq.DataContext&gt;&lt;/xref:System.Data.Linq.DataContext&gt; 。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you provide an open connection, the &lt;xref:System.Data.Linq.DataContext&gt; will not close it.</source>
          <target state="translated">&lt;xref:System.Data.Linq.DataContext&gt;それが閉じない&lt;/xref:System.Data.Linq.DataContext&gt;、開いている接続を提供する場合</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Therefore, do not instantiate a &lt;xref:System.Data.Linq.DataContext&gt; with an open connection unless you have a good reason to do this.</source>
          <target state="translated">そのため、インスタンス化しないで、&lt;xref:System.Data.Linq.DataContext&gt;開いている接続を使用してこれを行う妥当な理由がない&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In a &lt;xref:System.Transactions&gt; transaction, a &lt;xref:System.Data.Linq.DataContext&gt; will not open or close a connection to avoid promotion.</source>
          <target state="translated">&lt;xref:System.Transactions&gt;、トランザクション、&lt;xref:System.Data.Linq.DataContext&gt;開くまたは昇格を避けるために、接続を閉じるされません&lt;/xref:System.Data.Linq.DataContext&gt;&lt;/xref:System.Transactions&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The connection used by the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">使用する接続、<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by referencing a file source.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ファイル ソースを参照することでクラスです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This argument can be any one of the following:       The name of a file where a SQL Server Express database resides.</source>
          <target state="translated">この引数は、次のいずれかを指定できます。 SQL Server Express のデータベースが存在するファイルの名前。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The name of a server where a database is present.</source>
          <target state="translated">データベースが存在するサーバーの名前。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In this case the provider uses the default database for a user.</source>
          <target state="translated">ここでは、プロバイダーは、ユーザーの既定のデータベースを使用します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A complete connection string.</source>
          <target state="translated">完全な接続文字列。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> just passes the string to the provider without modification.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>だけを変更しなくても、プロバイダー文字列を渡します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by referencing a connection and a mapping source.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの接続とマッピング ソースを参照します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The connection used by the .NET Framework.</source>
          <target state="translated">.NET Framework で使用される接続です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A source for mapping.</source>
          <target state="translated">マッピングのソースです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by referencing a file source and a mapping source.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス ファイルのソースとマッピング ソースを参照します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This argument can be any one of the following:       The name of a file where a SQL Server Express database resides.</source>
          <target state="translated">この引数は、次のいずれかを指定できます。 SQL Server Express のデータベースが存在するファイルの名前。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The name of a server where a database is present.</source>
          <target state="translated">データベースが存在するサーバーの名前。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In this case the provider uses the default database for a user.</source>
          <target state="translated">ここでは、プロバイダーは、ユーザーの既定のデータベースを使用します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A complete connection string.</source>
          <target state="translated">完全な接続文字列。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> just passes the string to the provider without modification.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>だけを変更しなくても、プロバイダー文字列を渡します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A source for mapping.</source>
          <target state="translated">マッピングのソースです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets a collection of objects that caused concurrency conflicts when &lt;xref:System.Data.Linq.DataContext.SubmitChanges*&gt; was called.</source>
          <target state="translated">同時実行の競合の原因となったオブジェクトのコレクションを取得するときに&lt;xref:System.Data.Linq.DataContext.SubmitChanges*&gt;が呼び出されました&lt;/xref:System.Data.Linq.DataContext.SubmitChanges*&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example shows how the collection can be iterated over to retrieve conflict information.</source>
          <target state="translated">次の例では、どのコレクション反復処理できる競合情報を取得するを示します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A collection of objects that caused concurrency conflicts.</source>
          <target state="translated">同時実行の競合の原因となったオブジェクトのコレクション。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.</source>
          <target state="translated">取得またはそれ以外の場合のタイムアウトを既定のタイムアウト期間中に、クエリのタイムアウト時間が増加する値を設定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This property gets or sets the command time-out used to execute generated commands (<ph id="ph1">`IDbCommands`</ph>).</source>
          <target state="translated">このプロパティを取得または生成されたコマンドを実行するために使用するコマンドのタイムアウトを設定 (<ph id="ph1">`IDbCommands`</ph>)。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;.</source>
          <target state="translated">詳細については、 &lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;。&lt;/xref:System.Data.IDbCommand.CommandTimeout%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When this property is not set, the default value of &lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt; is used for query command execution.</source>
          <target state="translated">ときにこのプロパティが設定されていない、既定値の&lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;クエリ コマンドの実行に使用します&lt;/xref:System.Data.IDbCommand.CommandTimeout%2A&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This default value is set by the storage provider.</source>
          <target state="translated">この既定値は、記憶域プロバイダーによって設定されます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Note that some providers may throw exceptions if this value is set to a non-zero value.</source>
          <target state="translated">この値は&amp;0; 以外の値に設定されている場合に、一部のプロバイダーが例外をスロー可能性がありますに注意してください。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.</source>
          <target state="translated">それ以外の場合のタイムアウトを既定のタイムアウト期間中に、クエリのタイムアウト時間を増加する整数値。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the connection used by the framework.</source>
          <target state="translated">フレームワークで使用する接続を取得します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can use this property to interoperate with relational ADO.NET code.</source>
          <target state="translated">このプロパティを使用すると、リレーショナル ADO.NET コードと相互運用。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The returned connection will be closed unless it has been explicitly opened by the user.</source>
          <target state="translated">ユーザーによって明示的に開いている場合を除き、返される接続は切断されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The connection used by the framework.</source>
          <target state="translated">フレームワークによって使用される接続。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Creates a database on the server.</source>
          <target state="translated">サーバー上のデータベースを作成します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The name of the database is derived by using the following algorithm:      -   If a database is identified in the connection string, its name is used.</source>
          <target state="translated">次のアルゴリズムを使用して、データベースの名前は派生:-識別される場合は、データベース接続文字列で、その名前を使用します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-   If a &lt;xref:System.Data.Linq.Mapping.DatabaseAttribute&gt; attribute is present, its &lt;xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A&gt; property is used as the name of the database.</source>
          <target state="translated">場合、&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute&gt;属性が含まれているその&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A&gt;プロパティは、データベースの名前として使用します&lt;/xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A&gt;&lt;/xref:System.Data.Linq.Mapping.DatabaseAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-   If there is no database tag in the connection string and a strongly typed &lt;xref:System.Data.Linq.DataContext&gt; is used, a database that has the same name as the &lt;xref:System.Data.Linq.DataContext&gt; inheriting class is checked.</source>
          <target state="translated">-接続文字列と厳密に型指定されたデータベースのタグが存在しない場合&lt;xref:System.Data.Linq.DataContext&gt;を使用すると同じ名前を持つデータベース、&lt;xref:System.Data.Linq.DataContext&gt;クラスを継承することが確認されます&lt;/xref:System.Data.Linq.DataContext&gt;&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-   If a weakly typed &lt;xref:System.Data.Linq.DataContext&gt; is used, an exception is thrown.</source>
          <target state="translated">場合は、弱い型指定された&lt;xref:System.Data.Linq.DataContext&gt;はこれを使用すると、例外がスローされます&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Data.Linq.DataContext&gt; has been created by using a file name, the database corresponding to that file name is created.</source>
          <target state="translated">場合、&lt;xref:System.Data.Linq.DataContext&gt;が作成されたファイル名を使用すると、そのファイル名に対応するデータベースを作成します&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Determines whether the associated database can be opened.</source>
          <target state="translated">関連付けられたデータベースを開くことがあるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This method uses the connection in the &lt;xref:System.Data.Linq.DataContext.Connection%2A&gt; property to attempt to open the associated database.</source>
          <target state="translated">このメソッドはで接続を使用して、&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;プロパティを開くには、関連付けられたデータベースを試みます&lt;/xref:System.Data.Linq.DataContext.Connection%2A&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified database can be opened; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定されたデータベースが起動できる場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</source>
          <target state="translated">取得または一対多または一対一のリレーションシップの遅延読み込みするかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.</source>
          <target state="translated">リレーションシップが一対一、一対多である場合、空のコレクションが返された場合、コードからのアクセスをする null これらのリレーションシップのいずれかが返されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The relationships can still be filled by setting the &lt;xref:System.Data.Linq.DataContext.LoadOptions%2A&gt; property.</source>
          <target state="translated">設定して、リレーションシップを格納することができますも、&lt;xref:System.Data.Linq.DataContext.LoadOptions%2A&gt;プロパティ&lt;/xref:System.Data.Linq.DataContext.LoadOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).</source>
          <target state="translated">このプロパティの主なシナリオを使用すると、オブジェクト モデルの一部を抽出し、(たとえば、Web サービス) に送信を開始します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If this property is set to <ph id="ph2">`false`</ph> after a query has been executed, an exception is thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このプロパティが設定されている場合<ph id="ph2">`false`</ph>クエリの実行後に、例外をスローします。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">**</bpt>Valid Modes<ept id="p1">**</ept> section below for more information.</source>
          <target state="translated">参照してください、<bpt id="p1">**</bpt>有効なモード<ept id="p1">**</ept>詳細については、後述の「します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Valid modes    Deferred loading requires object tracking.</source>
          <target state="translated">遅延読み込みの有効なモードでは、オブジェクトの追跡が必要です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Only the following three modes are valid:      -   &lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt; = <ph id="ph1">`false`</ph>.</source>
          <target state="translated">のみ次の&amp;3; つのモードが有効:- &lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;= <ph id="ph1">`false`</ph>&lt;/xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>DeferredLoadingEnabled is ignored and inferred to be <ph id="ph1">`false`</ph>.</source>
          <target state="translated">DeferredLoadingEnabled は無視され、推論されます<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This behavior corresponds to a read-only &lt;xref:System.Data.Linq.DataContext&gt;.</source>
          <target state="translated">この動作は、読み取り専用&lt;xref:System.Data.Linq.DataContext&gt;。&lt;/xref:System.Data.Linq.DataContext&gt;に対応しています</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt; = <ph id="ph1">`true`</ph>.</source>
          <target state="translated">-   &lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt; = <ph id="ph1">`true`</ph>.&lt;/xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>DeferredLoadingEnabled = <ph id="ph1">`false`</ph>.</source>
          <target state="translated">DeferredLoadingEnabled =<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This situation corresponds to a &lt;xref:System.Data.Linq.DataContext&gt; that allows users to load an object graph by using &lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt; directives, but it does not enable deferred loading.</source>
          <target state="translated">このような状況に対応する、&lt;xref:System.Data.Linq.DataContext&gt;ユーザーを使用して、オブジェクト グラフを読み込むことができます&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;ディレクティブは、それが遅延読み込みを有効にしません&lt;/xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-   Both are set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">どちら設定されている<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This is the default.</source>
          <target state="translated">これは、既定値です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The flags may not be changed after a query has been executed.</source>
          <target state="translated">クエリの実行後、フラグは変更できません。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Any change after the execution of the first query that uses that &lt;xref:System.Data.Linq.DataContext&gt; throws an exception.</source>
          <target state="translated">使用する最初のクエリの実行後に変更&lt;xref:System.Data.Linq.DataContext&gt;例外をスローします&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if deferred loading is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>遅延読み込みが有効である場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Deletes the associated database.</source>
          <target state="translated">関連付けられたデータベースを削除します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This method uses the connection in the &lt;xref:System.Data.Linq.DataContext.Connection%2A&gt; property to identify the database to be deleted.</source>
          <target state="translated">このメソッドはで接続を使用して、&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;プロパティを削除するデータベースを識別します&lt;/xref:System.Data.Linq.DataContext.Connection%2A&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">現在のインスタンスによって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and optionally releases the managed resource.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスし、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Executes SQL commands directly on the database.</source>
          <target state="translated">データベース上で直接 SQL コマンドを実行します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The SQL command to be executed.</source>
          <target state="translated">実行する SQL コマンド。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">コマンドに渡されるパラメーターの配列。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Note the following behavior:       If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</source>
          <target state="translated">次の動作に注意してください: 配列内のオブジェクトの数が、コマンド文字列で識別される最大数より小さい場合は、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If the array contains objects that are not referenced in the command string, no exception is thrown.</source>
          <target state="translated">配列にコマンド文字列で参照されていないオブジェクトが含まれている場合、例外はスローされません。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If any one of the parameters is null, it is converted to <bpt id="p1">&lt;xref uid="langword_csharp_DBNull.Value" name="DBNull.Value" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">パラメーターのいずれかが null の場合、これに変換されます。 <bpt id="p1">&lt;xref uid="langword_csharp_DBNull.Value" name="DBNull.Value" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The number of rows modified by the executed command.</source>
          <target state="translated">コマンドの実行によって変更された行の数。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Executes, inside delete override methods, to redelegate to <ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for delete operations.</source>
          <target state="translated">代行させるために、削除のオーバーライド メソッド内で、実行<ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>の生成と動的な SQL を実行するタスクが操作を削除します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;。&lt;/xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The entity to be deleted.</source>
          <target state="translated">削除するエンティティ。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Executes, inside insert override methods, to redelegate to <ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for insert operations.</source>
          <target state="translated">代行させるために、挿入のオーバーライド メソッド内で、実行<ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>の生成と動的な SQL を実行するタスクが操作を挿入します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Note the following considerations:      -   Because the method has a protected modifier, its use requires subclassing &lt;xref:System.Data.Linq.DataContext&gt;.</source>
          <target state="translated">次の考慮事項に注意してください:-ため protected 修飾子をメソッドには、その使用が必要に&lt;xref:System.Data.Linq.DataContext&gt;.&lt;/xref:System.Data.Linq.DataContext&gt;をサブクラス化</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-   An exception is thrown if this operation is not called inside a &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; operation.</source>
          <target state="translated">にこの操作が内部呼び出されない場合、例外がスローされます、&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;操作&lt;/xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>It is not intended to be called as a stand-alone operation outside the scope of a &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; operation.</source>
          <target state="translated">スコープ外のスタンドアロン操作として呼び出されるものではありません、&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;操作&lt;/xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.</source>
          <target state="translated">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;自体の呼び出しのメソッドをオーバーライド実装されると、前述の方法は、オーバーライド メソッド内で呼び出すことです。&lt;/xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-   It is the responsibility of the developer to pass in the correct entity.</source>
          <target state="translated">-これは、正しいエンティティに渡す開発者の責任です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The implementation verifies that the passed-in entity is tracked.</source>
          <target state="translated">実装では、渡されたエンティティを追跡することを確認します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.</source>
          <target state="translated">ただし、順序を維持または&amp;2; 回、同じエンティティに渡す、開発者の責任であります。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>-   It is the responsibility of the developer to invoke the correct dynamic API.</source>
          <target state="translated">-これは、正しい動的 API を呼び出す開発者の責任です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For example, in the <ph id="ph1">`Update`</ph> override method, only the &lt;xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A&gt; method can be called.</source>
          <target state="translated">などで、<ph id="ph1">`Update`</ph>のみメソッドをオーバーライドして、&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A&gt;メソッドを呼び出すことができます&lt;/xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> does not detect or verify whether the invoked dynamic method matches the applicable operation.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>検出されず、呼び出した動的メソッドが適用される操作と一致するかどうかを確認してください。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The results are undefined if an inapplicable method is called (for example, calling &lt;xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A&gt; for an object to be updated).</source>
          <target state="translated">適切でないメソッドが呼び出された場合、結果は定義されて (たとえば、呼び出し&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A&gt;オブジェクトを更新するため).&lt;/xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The entity to be inserted.</source>
          <target state="translated">挿入するエンティティ。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Executes, inside update override methods, to redelegate to <ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for update operations.</source>
          <target state="translated">代行させるために、更新プログラムのオーバーライド メソッド内で、実行<ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>タスクの生成と更新操作のための動的 SQL を実行します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;。&lt;/xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The entity to be updated.</source>
          <target state="translated">更新するエンティティ。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Executes the stored database procedure or scalar function associated with the specified CLR method.</source>
          <target state="translated">格納されているデータベースのプロシージャまたは指定された CLR メソッドに関連付けられているスカラー関数を実行します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The ExecuteMethodCall method is used in automatically generated code and acts as a proxy to database functions.</source>
          <target state="translated">ExecuteMethodCall メソッドは、自動的に生成されたコードでは使用し、データベース関数をプロキシとして機能します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The instance of the method invocation (the current object).</source>
          <target state="translated">メソッドの呼び出し (現在のオブジェクト) のインスタンス。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Identifies the CLR method that corresponds to a database method.</source>
          <target state="translated">データベースのメソッドに対応する CLR メソッドを識別します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">コマンドに渡されるパラメーターの配列。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The result (the return value and output parameters) of executing the specified method.</source>
          <target state="translated">指定したメソッドの実行結果 (戻り値と出力パラメーター)。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Executes SQL queries directly on the database.</source>
          <target state="translated">データベース上で直接には、SQL クエリを実行します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The type of the <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph> to be returned.</source>
          <target state="translated">型、 <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph>を指定します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:       If a field or property is mapped to a particular column name, that column name is expected in the resultset.</source>
          <target state="translated">フィールドに、クエリの結果内の列オブジェクトのプロパティと照合するためのアルゴリズムは次のように動作します。 フィールドまたはプロパティは、特定の列名にマップされて、結果セットのその列名は正常な動作です。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</source>
          <target state="translated">フィールドまたはプロパティがマップされていない場合、結果セットのフィールドまたはプロパティと同じ名前の列が必要です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The comparison is performed by looking for a case-sensitive match first.</source>
          <target state="translated">最初の大文字と小文字を検索して比較されます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If this match is not found, a subsequent search occurs for a case-insensitive match.</source>
          <target state="translated">この一致が見つからない場合は、大文字と小文字の以降の検索が発生します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:       <ph id="ph1">`T`</ph> is an entity explicitly tracked by the <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">クエリは、すべての追跡対象のフィールドと (除く遅延ごとに読み込まれる) オブジェクトのプロパティを返す必要があります、次の条件が当てはまる場合:<ph id="ph1">`T`</ph>エンティティに明示的にでは、追跡、 <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled*&gt;is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Linq.DataContext.ObjectTrackingEnabled*&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The entity has a primary key.</source>
          <target state="translated">エンティティは、主キーを持ちます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">それ以外の場合、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The SQL query to be executed.</source>
          <target state="translated">実行する SQL クエリ。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">コマンドに渡されるパラメーターの配列。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Note the following behavior:       If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</source>
          <target state="translated">次の動作に注意してください: 配列内のオブジェクトの数が、コマンド文字列で識別される最大数より小さい場合は、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If the array contains objects that are not referenced in the command string, no exception is thrown.</source>
          <target state="translated">配列にコマンド文字列で参照されていないオブジェクトが含まれている場合、例外はスローされません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If a parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, it is converted to <bpt id="p2">&lt;xref uid="langword_csharp_DBNull.Value" name="DBNull.Value" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">パラメーターが場合<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>に変換されます<bpt id="p2">&lt;xref uid="langword_csharp_DBNull.Value" name="DBNull.Value" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph> collection of objects returned by the query.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>Xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph>クエリによって返されるオブジェクトのコレクション。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets the modified objects tracked by <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">によって追跡される変更済みオブジェクトを取得<bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Note the following considerations:      -   GetChangeSet might have side effects, such as inference of insert and delete operations that are usually performed at the time of &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;.</source>
          <target state="translated">次の考慮事項に注意してください:-GetChangeSet が挿入の推論など、副作用がある操作と削除&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;.&lt;/xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;の時点で通常実行されます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For example, objects that are used in the following operations can create corresponding inferred operations in the following list:          -   &lt;xref:System.Data.Linq.EntitySet%601.Add%2A&gt; to &lt;xref:System.Data.Linq.Table%601.InsertOnSubmit%2A&gt;.</source>
          <target state="translated">たとえば、次の操作で使用されるオブジェクトは、次の一覧の対応する、推論される操作を作成できます:- &lt;xref:System.Data.Linq.EntitySet%601.Add%2A&gt; &lt;xref:System.Data.Linq.Table%601.InsertOnSubmit%2A&gt;&lt;/xref:System.Data.Linq.Table%601.InsertOnSubmit%2A&gt; &lt;/xref:System.Data.Linq.EntitySet%601.Add%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Data.Linq.EntityRef%601&gt; assignment to null (possibly because of &lt;xref:System.Data.Linq.EntitySet%601.Remove%2A&gt; to &lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.Linq.EntityRef%601&gt;null への代入 (&lt;xref:System.Data.Linq.EntitySet%601.Remove%2A&gt;&lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;&lt;/xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;&lt;/xref:System.Data.Linq.EntitySet%601.Remove%2A&gt;ため可能性のある&lt;/xref:System.Data.Linq.EntityRef%601&gt;。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-   The set may not be ordered according to foreign key constraints.</source>
          <target state="translated">外部キー制約に従って-セットを順序付けされない可能性があります。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>-   Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.</source>
          <target state="translated">-データベースによって生成された値 (たとえば、主キーと外部キーの値、タイムスタンプ、およびなど) は使用できません。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).</source>
          <target state="translated">このような情報は、データベース コマンドを実行し、取得した情報 (たとえば、主キーから外部キー) が反映が必要です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>-   The set of changed objects is computed at the time of the call.</source>
          <target state="translated">-変更されたオブジェクトのセットは、呼び出し時に計算されます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Subsequent calls to &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; can produce a different set if additional changes are made.</source>
          <target state="translated">後続の呼び出し&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;追加の変更が加えられた場合、別のセットを生成できます&lt;/xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Output when no changes have been made appears as follows:       <ph id="ph1">`{Added: 0, Removed: 0, Modified: 0}`</ph></source>
          <target state="translated">変更が行われていません時の出力は次のとおりです。<ph id="ph1">`{Added: 0, Removed: 0, Modified: 0}`</ph></target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The set of objects is returned as three read-only collections.</source>
          <target state="translated">オブジェクトのセットは、次の&amp;3; つの読み取り専用のコレクションとして返されます。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Gets the information about SQL commands generated by <ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>.</source>
          <target state="translated">によって生成された SQL コマンドに関する情報を取得<ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>This method is only a getter and does not affect &lt;xref:System.Data.Linq.DataContext&gt; state.</source>
          <target state="translated">このメソッドは値の取得のみであり、影響を与えません&lt;xref:System.Data.Linq.DataContext&gt;状態&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Note the following considerations:      -   The argument must be non-null.</source>
          <target state="translated">次の考慮事項に注意してください:-引数が null にする必要があります。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Otherwise, a null argument exception is thrown.</source>
          <target state="translated">それ以外の場合、null の引数の例外がスローされます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>-   Normal query translation exceptions thrown during <ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> query execution apply for a query that cannot be translated.</source>
          <target state="translated">-通常のクエリ変換の例外が中にスローされた<ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>変換できないクエリのクエリの実行を適用します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>-   Only the first query command is returned.</source>
          <target state="translated">に最初のクエリ コマンドのみが返されます。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Specifically, additional commands that are used for eager loading (&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;) are not included.</source>
          <target state="translated">一括読み込みに使用されるその他のコマンド具体的には、(&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;) は含まれません&lt;/xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Data.Linq.DataContext&gt; does not track what the user does with the command.</source>
          <target state="translated">-&lt;xref:System.Data.Linq.DataContext&gt;コマンドを使用して、ユーザーが何を追跡しません&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For example, results from the execution of the returned command are not tracked and do not affect &lt;xref:System.Data.Linq.DataContext&gt; state.</source>
          <target state="translated">たとえば返されたコマンドの実行から結果は追跡されませんには影響しません&lt;xref:System.Data.Linq.DataContext&gt;状態&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The query whose SQL command information is to be retrieved.</source>
          <target state="translated">SQL コマンドの情報を取得するクエリ。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The requested command information object.</source>
          <target state="translated">要求されたコマンドについてのオブジェクト。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Returns a collection of objects of a particular type, where the type is defined by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">型が定義されている、特定の種類のオブジェクトのコレクションを返します、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>のパラメーターです。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>This is a weakly typed version of &lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;.</source>
          <target state="translated">これは&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;.&lt;/xref:System.Data.Linq.DataContext.GetTable%2A&gt;の弱く型指定されたバージョンです。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.</source>
          <target state="translated">クエリを動的に構築するために比較的一般的になっているために、弱く型指定されたバージョンを理解しておくことはできます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>It would be inconvenient to force the application to use reflection to call the correct generic method.</source>
          <target state="translated">リフレクションを使用して、正しいジェネリック メソッドを呼び出すを強制すると便利なできなくなります。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>If there is no collection for a particular type, an exception is thrown.</source>
          <target state="translated">特定の型のコレクションがない場合、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The type of the objects to be returned.</source>
          <target state="translated">返されるオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A collection of objects defined by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">定義されているオブジェクトのコレクション、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーター。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Data.Linq.DataLoadOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with this <bpt id="p2">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Data.Linq.DataLoadOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>これに関連付けられている<bpt id="p2">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</source>
          <target state="translated">このプロパティを取得または遅延読み込みされるメンバーと関連コレクションのメンバーシップのプリフェッチの動作を定義するために使用するオプションを設定します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The prefetch load options for related data.</source>
          <target state="translated">プリフェッチは、関連するデータのオプションを読み込みます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Gets or sets the destination to write the SQL query or command.</source>
          <target state="translated">取得または SQL クエリまたはコマンドを書き込む宛先を設定します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Set this property to <ph id="ph1">`null`</ph> to disable command logging.</source>
          <target state="translated">このプロパティを設定<ph id="ph1">`null`</ph>コマンドのログ記録を無効にします。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextReader&gt; to use for writing the command.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;コマンドの記述に使用する&lt;/xref:System.IO.TextReader&gt;。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Data.Linq.Mapping.MetaModel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on which the mapping is based.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Data.Linq.Mapping.MetaModel"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>にマッピングが基づいています。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The mapping between a database and domain objects.</source>
          <target state="translated">データベースとドメインのオブジェクト間のマッピング。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether object tracking is enabled.</source>
          <target state="translated">取得またはオブジェクト トラッキングが有効になっているかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Setting this property to <ph id="ph1">`false`</ph> improves performance at retrieval time, because there are fewer items to track.</source>
          <target state="translated">このプロパティを設定<ph id="ph1">`false`</ph>追跡するために以下の項目があるため、取得時にパフォーマンスが向上します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>An exception is thrown:      -   If the property is set to <ph id="ph1">`false`</ph> after a query has been executed.</source>
          <target state="translated">例外がスローされます: プロパティ設定されている場合 -<ph id="ph1">`false`</ph>クエリが実行された後です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For more information, see the Valid Modes section in &lt;xref:System.Data.Linq.DataContext&gt;.</source>
          <target state="translated">詳細については、 &lt;xref:System.Data.Linq.DataContext&gt;。&lt;/xref:System.Data.Linq.DataContext&gt;有効なモード」を参照してください。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>-   If the property is set to <ph id="ph1">`false`</ph> and &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; is called.</source>
          <target state="translated">場合は、プロパティに設定<ph id="ph1">`false`</ph>と&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;と呼びます&lt;/xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>If ObjectTrackingEnabled is <ph id="ph1">`false`</ph>, &lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt; is ignored and treated as <ph id="ph2">`false`</ph>.</source>
          <target state="translated">ObjectTrackingEnabled 場合<ph id="ph1">`false`</ph>、&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;は無視され、として扱われます<ph id="ph2">`false`</ph>&lt;/xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.Linq.DataContext&gt; is read-only.</source>
          <target state="translated">ここで、&lt;xref:System.Data.Linq.DataContext&gt;は読み取り専用です&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>If ObjectTrackingEnabled is <ph id="ph1">`true`</ph>, &lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt; is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">ObjectTrackingEnabled 場合<ph id="ph1">`true`</ph>、&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;は<ph id="ph2">`false`</ph>&lt;/xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>In this case, &lt;xref:System.Data.Linq.DataContext&gt; allows you to load an object graph by using &lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt; directives, but does not enable deferred loading.</source>
          <target state="translated">この場合、&lt;xref:System.Data.Linq.DataContext&gt;を使用して、オブジェクト グラフを読み込むことができます&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;ディレクティブは、遅延読み込みが有効にしません&lt;/xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;&lt;/xref:System.Data.Linq.DataContext&gt;。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object tracking is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト トラッキングが有効である場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Refreshes a collection of entity objects according to the specified mode.</source>
          <target state="translated">指定されたモードに従ってエンティティ オブジェクトのコレクションを更新します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A value that specifies how optimistic concurrency conflicts are handled.</source>
          <target state="translated">同時実行の競合をオプティミスティックの方法を指定する値が処理されます。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The collection of entities to be refreshed.</source>
          <target state="translated">更新するエンティティのコレクション。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Refreshes an entity object according to the specified mode.</source>
          <target state="translated">指定されたモードに従ってエンティティ オブジェクトを更新します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>A value that specifies how optimistic concurrency conflicts are handled.</source>
          <target state="translated">同時実行の競合をオプティミスティックの方法を指定する値が処理されます。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The object to be refreshed.</source>
          <target state="translated">更新するオブジェクト。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Refreshes an array of entity objects according to the specified mode.</source>
          <target state="translated">指定されたモードに従ってエンティティ オブジェクトの配列を更新します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>A value that specifies how optimistic concurrency conflicts are handled.</source>
          <target state="translated">同時実行の競合をオプティミスティックの方法を指定する値が処理されます。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The array of entity objects to be refreshed.</source>
          <target state="translated">更新するエンティティ オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</source>
          <target state="translated">挿入、更新、または削除すると、変更されたオブジェクトのセットを計算し、データベースへの変更を実装する適切なコマンドを実行します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>If override methods are present for insert, update, or delete, &lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt; executes these methods instead of the default <ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> commands.</source>
          <target state="translated">オーバーライド メソッドが insert、update、または削除、存在する場合&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;、既定ではなくこれらのメソッドを実行<ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>コマンド&lt;/xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</source>
          <target state="translated">加えられた変更が、基になるデータベースにオブジェクトを取得し、送信が失敗した場合に実行されるアクションを指定を送信します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Default failure mode is &lt;xref:System.Data.Linq.ConflictMode&gt;.</source>
          <target state="translated">既定のエラー モードは&lt;xref:System.Data.Linq.ConflictMode&gt;.&lt;/xref:System.Data.Linq.ConflictMode&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The action to be taken if the submission fails.</source>
          <target state="translated">送信が失敗した場合に実行されるアクションです。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Valid arguments are as follows:       <bpt id="p1">&lt;xref href="System.Data.Linq.ConflictMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref href="System.Data.Linq.ConflictMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></source>
          <target state="translated">有効な引数は次のとおりです。<bpt id="p1">&lt;xref href="System.Data.Linq.ConflictMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref href="System.Data.Linq.ConflictMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Gets or sets a local transaction for the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> to use to access the database.</source>
          <target state="translated">取得または設定のローカル トランザクション、<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>を使用して、データベースにアクセスします。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The primary scenario for this property is interoperability with relational <ph id="ph1">[!INCLUDE[vstecado](~/add/includes/vstecado-md.md)]</ph> code.</source>
          <target state="translated">このプロパティの主なシナリオは、リレーショナルとの相互運用<ph id="ph1">[!INCLUDE[vstecado](~/add/includes/vstecado-md.md)]</ph>コード。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>For example, use this property when you write your own <ph id="ph1">`Create`</ph><ph id="ph2">/</ph><ph id="ph3">`Update`</ph><ph id="ph4">/</ph><ph id="ph5">`Delete`</ph> methods to set the <ph id="ph6">`Transaction`</ph> property on the ADO <ph id="ph7">`Command`</ph> object.</source>
          <target state="translated">たとえば、独自に作成するときにこのプロパティを使用して<ph id="ph1">`Create`</ph> <ph id="ph2">/</ph> <ph id="ph3">`Update`</ph> <ph id="ph4">/</ph> <ph id="ph5">`Delete`</ph>を設定する方法、<ph id="ph6">`Transaction`</ph>プロパティを ADO<ph id="ph7">`Command`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Note the following:      -   If this property has not been explicitly set, the getter returns null.</source>
          <target state="translated">次に注意してください:-このプロパティが明示的に設定されていない場合、get アクセス操作子が null を返します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>-   If the code is executing in a &lt;xref:System.Transactions.Transaction&gt; context, setting this property throws an exception.</source>
          <target state="translated">-でコードが実行されている場合、&lt;xref:System.Transactions.Transaction&gt;コンテキスト、このプロパティの設定は例外をスローします&lt;/xref:System.Transactions.Transaction&gt;。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>-   If this property is set and a new &lt;xref:System.Transactions.Transaction&gt; is opened, an exception is thrown when a query or update is executed.</source>
          <target state="translated">場合、このプロパティが設定され、新しい&lt;xref:System.Transactions.Transaction&gt;が開くと、例外がスロー クエリまたは更新を実行するとします&lt;/xref:System.Transactions.Transaction&gt;。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The transaction object used by the <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when executing queries and commands.</source>
          <target state="translated">によって使用されるトランザクション オブジェクト、 <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クエリとコマンドを実行するときにします。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Converts an existing <bpt id="p1">&lt;xref href="System.Data.Common.DbDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to objects.</source>
          <target state="translated">既存の変換<bpt id="p1">&lt;xref href="System.Data.Common.DbDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトにします。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be converted.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>変換します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A list of objects returned by the conversion.</source>
          <target state="translated">変換によって返されるオブジェクトの一覧。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Converts an existing <bpt id="p1">&lt;xref href="System.Data.Common.DbDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to objects.</source>
          <target state="translated">既存の変換<bpt id="p1">&lt;xref href="System.Data.Common.DbDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトにします。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The type of the <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph> to be returned.</source>
          <target state="translated">型、 <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph>を指定します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The algorithm for matching columns in the result to fields and properties in the object works as follows:       If a field or property is mapped to a particular column name, that column name is expected in the resultset.</source>
          <target state="translated">オブジェクトのプロパティおよびフィールドに、結果内の列を照合するアルゴリズムは次のように動作: フィールドまたはプロパティは、特定の列名にマップされて、結果セットの列名は正常な動作です。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</source>
          <target state="translated">フィールドまたはプロパティがマップされていない場合、結果セットのフィールドまたはプロパティと同じ名前の列が必要です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The comparison is performed by looking for a case-sensitive match first.</source>
          <target state="translated">最初の大文字と小文字を検索して比較されます。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>If this match is not found, a subsequent search is occurs for a case-insensitive match.</source>
          <target state="translated">以降の検索では、大文字と小文字の発生はこの一致が見つからない場合。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:       <ph id="ph1">`T`</ph> is an entity explicitly tracked by the <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">クエリは、すべての追跡対象のフィールドと (除く遅延ごとに読み込まれる) オブジェクトのプロパティを返す必要があります、次の条件が当てはまる場合:<ph id="ph1">`T`</ph>エンティティに明示的にでは、追跡、 <bpt id="p1">&lt;xref href="System.Data.Linq.DataContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled*&gt;is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Linq.DataContext.ObjectTrackingEnabled*&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The entity has a primary key.</source>
          <target state="translated">エンティティは、主キーを持ちます。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">それ以外の場合、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be converted.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>変換します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A list of objects returned by the conversion.</source>
          <target state="translated">変換によって返されるオブジェクトの一覧。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>