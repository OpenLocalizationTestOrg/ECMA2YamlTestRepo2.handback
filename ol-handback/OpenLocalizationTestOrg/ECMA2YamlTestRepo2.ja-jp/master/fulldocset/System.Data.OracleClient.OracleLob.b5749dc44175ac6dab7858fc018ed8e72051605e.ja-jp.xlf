<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bd7caa82ae55a2966b763cc4755cdcf6036f053</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.OracleClient.OracleLob.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbaa84398094a00be97cc2a4c412a7649d6192d1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3edd14644522bf37966b2bf30006e36d5df4e8ea</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a large object binary (<bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) data type stored on an Oracle server.</source>
          <target state="translated">バイナリ ラージ オブジェクトを表します (<bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>)、Oracle サーバー上に格納されているデータ型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An OracleLob differs from an &lt;xref:System.Data.OracleClient.OracleBFile&gt; in that the data is stored on the server instead of in a physical file in the operating system.</source>
          <target state="translated">OracleLob とは異なります、&lt;xref:System.Data.OracleClient.OracleBFile&gt;の代わりに、オペレーティング システムの物理ファイル内のサーバーにデータを格納します&lt;/xref:System.Data.OracleClient.OracleBFile&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It can also be a read-write object, unlike an &lt;xref:System.Data.OracleClient.OracleBFile&gt;, which is always read-only.</source>
          <target state="translated">異なり、読み取り/書き込みオブジェクトにも、&lt;xref:System.Data.OracleClient.OracleBFile&gt;は常に読み取り専用です&lt;/xref:System.Data.OracleClient.OracleBFile&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An OracleLob may be one of these &lt;xref:System.Data.OracleClient.OracleType&gt; data types.</source>
          <target state="translated">OracleLob では、これらのいずれかの可能性があります&lt;xref:System.Data.OracleClient.OracleType&gt;データ型&lt;/xref:System.Data.OracleClient.OracleType&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>|OracleType data type|Description|   |--------------------------|-----------------|   |<ph id="ph1">`Blob`</ph>|An Oracle <ph id="ph2">`BLOB`</ph> data type that contains binary data with a maximum size of 4 gigabytes (GB).</source>
          <target state="translated">|OracleType データ タイプ |説明 |  |--------------------------|-----------------|  |<ph id="ph1">`Blob`</ph>|Oracle <ph id="ph2">`BLOB`</ph> 4 ギガバイト (GB) の最大サイズのバイナリ データを格納するデータ型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This maps to an &lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt;.|   |<ph id="ph1">`Clob`</ph>|An Oracle <ph id="ph2">`CLOB`</ph> data type that contains character data, based on the default character set on the server, with a maximum size of 4 GB.</source>
          <target state="translated">これは、&lt;xref:System.Array&gt;&lt;xref:System.Byte&gt;型にマップします |。  |<ph id="ph1">`Clob`</ph>|Oracle<ph id="ph2">`CLOB`</ph>サーバーで、4 GB の最大サイズを既定の文字に基づく文字データを含むデータ型を設定します&lt;/xref:System.Byte&gt;&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This maps to &lt;xref:System.String&gt;.|   |<ph id="ph1">`NClob`</ph>|An Oracle <ph id="ph2">`NCLOB`</ph> data type that contains character data, based on the national character set on the server with a maximum size of 4 GB.</source>
          <target state="translated">これは&lt;xref:System.String&gt;にマップします |。  |<ph id="ph1">`NClob`</ph>|Oracle<ph id="ph2">`NCLOB`</ph>各国語文字が 4 GB の最大サイズを使用してサーバー セットに基づいて、データ型を文字データが含まれています&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This maps to &lt;xref:System.String&gt;.|       A .NET application developer can retrieve the Oracle <ph id="ph1">`LOB`</ph> values into basic .NET data types, such as &lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt; and &lt;xref:System.String&gt;, or the specialized OracleLob data type.</source>
          <target state="translated">&lt;xref:System.String&gt;をマップします |。      .NET アプリケーションの開発者は、Oracle で取得できる<ph id="ph1">`LOB`</ph>などの基本的な .NET データ型に値&lt;xref:System.Array&gt;型の&lt;xref:System.Byte&gt;と&lt;xref:System.String&gt;、または特殊な OracleLob データ型&lt;/xref:System.String&gt;&lt;/xref:System.Byte&gt;&lt;/xref:System.Array&gt;&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The OracleLob class supports reading data from and writing to the Oracle <ph id="ph1">`LOB`</ph> in the Oracle database.</source>
          <target state="translated">OracleLob クラスがサポートするデータからの読み取りと書き込み、Oracle <ph id="ph1">`LOB`</ph> Oracle データベースでします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following are the main characteristics of an OracleLob data type that distinguish it from basic .NET data types:      -   After you retrieve the Oracle <ph id="ph1">`LOB`</ph> value from the Oracle database into the OracleLob class, you can change the <ph id="ph2">`LOB`</ph> data in an open transaction and your changes are directly reflected to the database.</source>
          <target state="translated">.NET の基本データ型から区別する OracleLob データ型の主な特徴を次に示します: Oracle を取得した後に -<ph id="ph1">`LOB`</ph>値 OracleLob クラスに、Oracle データベースから変更することができます、<ph id="ph2">`LOB`</ph>開いているトランザクションで変更データはデータベースに直接反映されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you retrieve the Oracle <ph id="ph1">`LOB`</ph> value into an &lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt; or &lt;xref:System.String&gt; and update these arrays, your changes are not reflected to the database.</source>
          <target state="translated">Oracle を取得する場合<ph id="ph1">`LOB`</ph>値に、&lt;xref:System.Array&gt;型の&lt;xref:System.Byte&gt;または&lt;xref:System.String&gt;これらの配列を更新し、変更はデータベースに反映されません&lt;/xref:System.String&gt;&lt;/xref:System.Byte&gt;&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-   When you use the OracleLob class to access a chunk of a <ph id="ph1">`LOB`</ph> value, only that chunk is passed from the Oracle database to the client.</source>
          <target state="translated">のチャンクにアクセスする OracleLob クラスを使用する場合、 <ph id="ph1">`LOB`</ph> 、チャンクだけ値は、Oracle データベースからクライアントにします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When you use the &lt;xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt; method to access a chunk of a <ph id="ph1">`LOB`</ph> value, the entire contents of the value are passed from the Oracle database to the client.</source>
          <target state="translated">使用すると、&lt;xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt;のチャンクにアクセスするメソッド、<ph id="ph1">`LOB`</ph>値、値の内容全体がクライアントに渡され、Oracle データベースから&lt;/xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To obtain an OracleLob object, call the &lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt; method.</source>
          <target state="translated">OracleLob オブジェクトを取得するには、呼び出し、&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt;メソッド&lt;/xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can construct an OracleLob that is NULL using this format:      <ph id="ph1">```   OracleLob myLob = OracleLob.Null;   ```</ph>       This technique is used primarily to test whether a <ph id="ph2">`LOB`</ph> returned from the server is NULL, as this example illustrates:      <ph id="ph3">```   If(myLob == OracleLob.Null)   ```</ph>       A NULL <ph id="ph4">`LOB`</ph> behaves similarly to a zero-byte <ph id="ph5">`LOB`</ph> in that &lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt; succeeds and always returns zero bytes.</source>
          <target state="translated">この形式を使用して NULL である OracleLob を構築することができます:<ph id="ph1">```   OracleLob myLob = OracleLob.Null;   ```</ph>をテストするには、主に、この手法を使用するかどうか、<ph id="ph2">`LOB`</ph>はこの例のように、NULL の場合、サーバーから返された: <ph id="ph3">```   If(myLob == OracleLob.Null)   ```</ph> NULL <ph id="ph4">`LOB`</ph>&amp;0; バイトと同様に動作<ph id="ph5">`LOB`</ph>点で&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;が成功し、常に&amp;0; バイトを返します&lt;/xref:System.Data.OracleClient.OracleLob.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Selecting a <ph id="ph1">`LOB`</ph> column that contains a null value returns &lt;xref:System.Data.OracleClient.OracleLob.Null&gt;.</source>
          <target state="translated">選択すると、 <ph id="ph1">`LOB`</ph> null 値を含む列には、 &lt;xref:System.Data.OracleClient.OracleLob.Null&gt;.&lt;/xref:System.Data.OracleClient.OracleLob.Null&gt;が返されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You must begin a transaction before obtaining a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">一時的なを取得する前にトランザクションを開始する必要があります<ph id="ph1">`LOB`</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;xref:System.Data.OracleClient.OracleDataReader&gt; may fail to obtain data later.</source>
          <target state="translated">それ以外の場合、&lt;xref:System.Data.OracleClient.OracleDataReader&gt;後でデータを取得できない可能性があります&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also open a temporary <ph id="ph1">`LOB`</ph> in Oracle by calling the DBMS_LOB.CREATETEMPORARY system stored procedure and binding a <ph id="ph2">`LOB`</ph> output parameter.</source>
          <target state="translated">一時的なを開くことも<ph id="ph1">`LOB`</ph>DBMS_LOB を呼び出すことによって Oracle でします。CREATETEMPORARY システム ストアド プロシージャとバインディング、<ph id="ph2">`LOB`</ph>出力パラメーターです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>On the client side, a temporary <ph id="ph1">`LOB`</ph> behaves like a table-based <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">クライアント側で、一時的な<ph id="ph1">`LOB`</ph>はテーブルに基づくように動作<ph id="ph2">`LOB`</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, to update the temporary <ph id="ph1">`LOB`</ph>, it must be enclosed in a transaction.</source>
          <target state="translated">例については、一時的なを更新する<ph id="ph1">`LOB`</ph>トランザクションで囲む必要があります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following C# example demonstrates how to open a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">次の c# の例は、一時的なを開く方法を示します<ph id="ph1">`LOB`</ph>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   OracleConnection connection = new OracleConnection("server=MyServer; integrated security=yes;");   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";   command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   byte[] tempbuff = new byte[10000];   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = "MyTable.MyProc";   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  The inherited &lt;xref:System.IO.Stream.WriteByte%2A&gt; method fails if used with character data, and an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated"><ph id="ph1">```   OracleConnection connection = new OracleConnection("server=MyServer; integrated security=yes;");   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";   command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   byte[] tempbuff = new byte[10000];   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = "MyTable.MyProc";   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt;、継承された&lt;xref:System.IO.Stream.WriteByte%2A&gt;、文字データと共に使用した場合、メソッドが失敗したと&lt;xref:System.InvalidOperationException&gt;がスローされます&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.IO.Stream.WriteByte%2A&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt; method instead.</source>
          <target state="translated">使用して、&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;メソッド代わりにします&lt;/xref:System.Data.OracleClient.OracleLob.Write%2A&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  Temporary <ph id="ph1">`LOB`</ph>s are only closed when the connection is closed, but with pooling and under load, temporary <ph id="ph2">`LOB`</ph>s do not close.</source>
          <target state="translated">&gt;&gt; 一時<ph id="ph1">`LOB`</ph>が閉じ、接続が閉じられたときにのみでは、プールところですが、負荷の一時的な<ph id="ph2">`LOB`</ph>は閉じられません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This can be resolved by disposing the temporary <ph id="ph1">`LOB`</ph>, by invoking <ph id="ph2">`tempLob.Dispose()`</ph>.</source>
          <target state="translated">一時的な廃棄することにより解決できます<ph id="ph1">`LOB`</ph>、呼び出すことによって<ph id="ph2">`tempLob.Dispose()`</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Appends data from the specified <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the current <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定された対象からデータを追加<bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>現在<bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">書き込む、 <ph id="ph1">`LOB`</ph>、取得する必要があります、<ph id="ph2">`LOB`</ph>開始されたローカル トランザクションを使用して、SQL SELECT ステートメントの FOR UPDATE 句が必要です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>All data from the source <ph id="ph1">`LOB`</ph> is appended to the end of the current <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">すべてのデータ ソースから<ph id="ph1">`LOB`</ph>が現在の末尾に追加されます<ph id="ph2">`LOB`</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The position of neither <ph id="ph1">`LOB`</ph> is evaluated or changed during this process.</source>
          <target state="translated">どちらの位置<ph id="ph1">`LOB`</ph>が評価されるか、このプロセス中に変更します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基になるデータ型では、同じでなければなりません常にします。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, if you are appending from an &lt;xref:System.Data.OracleClient.OracleType&gt;, the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; must also be an &lt;xref:System.Data.OracleClient.OracleType&gt;.</source>
          <target state="translated">たとえばから&lt;xref:System.Data.OracleClient.OracleType&gt;、 &lt;xref:System.Data.OracleClient.OracleLob&gt; &lt;xref:System.Data.OracleClient.OracleType&gt;。&lt;/xref:System.Data.OracleClient.OracleType&gt;必要もあります&lt;/xref:System.Data.OracleClient.OracleLob&gt;変換先&lt;/xref:System.Data.OracleClient.OracleType&gt;を追加します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このリリースでは、読み取り専用への書き込み操作で<ph id="ph2">`LOB`</ph>可能性がありますが、更新されない、<ph id="ph3">`LOB`</ph>サーバーでします。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">この場合、ただし、ローカル コピーの<ph id="ph1">`LOB`</ph>が更新されます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">読み取り操作が後で、そのため、&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクトは、書き込み操作の結果を返す場合があります&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to append data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>元となるデータを追加します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The source <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null.</source>
          <target state="translated">ソース<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が null です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The source <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is null, or the connection is closed.</source>
          <target state="translated">ソース<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が null、または接続が閉じられました。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The source <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object was closed or disposed.</source>
          <target state="translated">ソース<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトが終了または破棄します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Prevents server-side triggers from firing while performing multiple read operations.</source>
          <target state="translated">サーバー側のトリガーが複数の読み取り操作の実行中に発生しないようにします。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Opens the <ph id="ph1">`LOB`</ph> in &lt;xref:System.Data.OracleClient.OracleLobOpenMode&gt; mode; therefore, the <ph id="ph2">`LOB`</ph> can only be read from, not written to, until the corresponding call to &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;.</source>
          <target state="translated">開く、<ph id="ph1">`LOB`</ph>で&lt;xref:System.Data.OracleClient.OracleLobOpenMode&gt;モードですしたがって、、<ph id="ph2">`LOB`</ph>のみ読み取ることができます、 &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;。&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;の対応する呼び出しまで、には書き込まれません&lt;/xref:System.Data.OracleClient.OracleLobOpenMode&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To perform batch writes to the <ph id="ph1">`LOB`</ph>, call &lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt; with &lt;xref:System.Data.OracleClient.OracleLobOpenMode&gt;.</source>
          <target state="translated">バッチ書き込みを実行する、 <ph id="ph1">`LOB`</ph>、&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;&lt;xref:System.Data.OracleClient.OracleLobOpenMode&gt;&lt;/xref:System.Data.OracleClient.OracleLobOpenMode&gt;&lt;/xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;を呼び出す。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Calling BeginBatch more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</source>
          <target state="translated">Oracle BeginBatch&amp;2; 回以上同じトランザクション内で現在の呼び出しをスロー"か&amp;22293;: LOB は、同じトランザクションで既に開かれて"エラーです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In addition, if you obtain the <ph id="ph1">`LOB`</ph> using another &lt;xref:System.Data.OracleClient.OracleDataReader&gt;, and the original caller has not called the &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; method, the same error is generated.</source>
          <target state="translated">さらに、取得した場合、<ph id="ph1">`LOB`</ph>を使用して別&lt;xref:System.Data.OracleClient.OracleDataReader&gt;、最初の呼び出し元が呼び出されると、&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;メソッド、同じエラーが生成されます&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Therefore, you must call the &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; method when you are finished using the &lt;xref:System.Data.OracleClient.OracleLob&gt;.</source>
          <target state="translated">したがって、 &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; &lt;xref:System.Data.OracleClient.OracleLob&gt;。&lt;/xref:System.Data.OracleClient.OracleLob&gt;の使用が終了したときにメソッド&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;を呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">接続は閉じられます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Prevents server-side triggers from firing while performing multiple read and write operations in the specified access mode.</source>
          <target state="translated">サーバー側のトリガーを実行する複数の読み取り中に発生させると、指定されたアクセス モードでの書き込み操作に防ぎます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">書き込む、 <ph id="ph1">`LOB`</ph>、取得する必要があります、<ph id="ph2">`LOB`</ph>開始されたローカル トランザクションを使用して、SQL SELECT ステートメントの FOR UPDATE 句が必要です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Calling &lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt; more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;、同じトランザクション内で複数回現在スロー Oracle"か&amp;22293;: LOB は、同じトランザクションで既に開かれて"エラー&lt;/xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In addition, if you obtain the <ph id="ph1">`LOB`</ph> using another &lt;xref:System.Data.OracleClient.OracleDataReader&gt;, and the original caller has not called the &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; method, the same error is generated.</source>
          <target state="translated">さらに、取得した場合、<ph id="ph1">`LOB`</ph>を使用して別&lt;xref:System.Data.OracleClient.OracleDataReader&gt;、最初の呼び出し元が呼び出されると、&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;メソッド、同じエラーが生成されます&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Therefore, you must call the &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; method when you are finished using the &lt;xref:System.Data.OracleClient.OracleLob&gt;.</source>
          <target state="translated">したがって、 &lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt; &lt;xref:System.Data.OracleClient.OracleLob&gt;。&lt;/xref:System.Data.OracleClient.OracleLob&gt;の使用が終了したときにメソッド&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;を呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Mode (one of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLobOpenMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values) in which the <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can be accessed between this BeginBatch call and the corresponding &lt;xref:System.Data.OracleClient.OracleLob.EndBatch*&gt; call.</source>
          <target state="translated">モード (のいずれか、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLobOpenMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値) を<bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>この BeginBatch 呼び出しと、対応する間アクセスできる&lt;xref:System.Data.OracleClient.OracleLob.EndBatch*&gt;呼び出します&lt;/xref:System.Data.OracleClient.OracleLob.EndBatch*&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">接続は閉じられます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream can be read.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ストリームを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> stream supports reading, otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if a <bpt id="p4">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> is closed or disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>ストリームが読み取りをサポート、それ以外の場合<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>場合、 <bpt id="p4">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>が終了または破棄します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether forward and backward seek operations can be performed.</source>
          <target state="translated">実行できる前方と後方のシーク操作をするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is closed or disposed, otherwise <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>が終了または破棄されると、それ以外の場合<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob.Null"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob.Null"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Always returns true, regardless of whether the <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> supports writing or not.</source>
          <target state="translated">常に true を返します、かどうかに関係なく、 <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>かの書き込みをサポートします。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have started a local transaction.</source>
          <target state="translated">書き込みを<ph id="ph1">`LOB`</ph>、取得する必要があります、<ph id="ph2">`LOB`</ph>を使用して、SQL SELECT ステートメントの FOR UPDATE 句は、開始必要がありますが、ローカル トランザクション。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, regardless of whether an opened or undisposed <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> supports writing or not, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if a <bpt id="p4">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> is closed or disposed.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>かどうかに関係なく、開くか、破棄されていない、 <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>で記述するか、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>場合、 <bpt id="p4">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>が終了または破棄します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets a value indicating the minimum number of bytes to retrieve from or send to the server during a read/write operation.</source>
          <target state="translated">取得したり、読み取り/書き込み操作中に、サーバーに送信するバイトの最小数を示す値を取得します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The value returned by the ChunkSize property is not a setting of the .NET Framework Data Provider for Oracle.</source>
          <target state="translated">ChunkSize プロパティによって返される値は、.NET Framework Data Provider for Oracle の設定ではありません。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Instead, it is the value that the Oracle Call Interface (OCI) uses when communicating with the server.</source>
          <target state="translated">代わりに、これは、Oracle Call Interface (OCI) がサーバーとの通信に使用する値です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use ChunkSize to ensure that client-side chunks are the same size.</source>
          <target state="translated">ChunkSize を使用して、クライアント側のチャンクが同じサイズであることを確認します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Reading or writing in smaller chunks does not cache data, and causes a less-optimized round trip to the server, because a full packet is not received or sent.</source>
          <target state="translated">小さいチャンクで読み取りまたは書き込みが、データをキャッシュしていないと、完全なパケットの受信または送信されていないため、サーバーへの低い最適化ラウンド トリップが原因でします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The minimum number of bytes to retrieve or send.</source>
          <target state="translated">取得または送信するバイト数の最小数。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">接続は閉じられます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that references the same Oracle <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as the original <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">新たに作成<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>同じ Oracle が参照するオブジェクト<bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>元<bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The properties of the new &lt;xref:System.Data.OracleClient.OracleLob&gt; object initially have the same values as those of the original object.</source>
          <target state="translated">新しいプロパティ&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクトが最初に元のオブジェクトと同じ値を持ちます&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>However, after the Clone is complete, each &lt;xref:System.Data.OracleClient.OracleLob&gt; object is independent from the other.</source>
          <target state="translated">ただし、複製完了後、各&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクトは、他から独立しています&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, changing the value of the &lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt; property on the original &lt;xref:System.Data.OracleClient.OracleLob&gt; does not change the value of &lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt; on the copy.</source>
          <target state="translated">値を変更するなど、&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;元のプロパティ&lt;xref:System.Data.OracleClient.OracleLob&gt;の値は変わりません&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;コピーにします&lt;/xref:System.Data.OracleClient.OracleLob.Position%2A&gt;&lt;/xref:System.Data.OracleClient.OracleLob&gt;&lt;/xref:System.Data.OracleClient.OracleLob.Position%2A&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that references the same Oracle <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as the original <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">新しい<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>同じ Oracle が参照するオブジェクト<bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>元<bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">接続は閉じられます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used by this instance of the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のこのインスタンスによって使用される、 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The connection to a data source.</source>
          <target state="translated">データ ソースに接続します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Copies from this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a destination <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これをコピーします。 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>先<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基になるデータ型では、同じでなければなりません常にします。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For example, if you are copying from an &lt;xref:System.Data.OracleClient.OracleType&gt;, the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; must also be an &lt;xref:System.Data.OracleClient.OracleType&gt;.</source>
          <target state="translated">たとえば、コピーする場合はから&lt;xref:System.Data.OracleClient.OracleType&gt;、移行先の&lt;xref:System.Data.OracleClient.OracleLob&gt;&lt;xref:System.Data.OracleClient.OracleType&gt;。&lt;/xref:System.Data.OracleClient.OracleType&gt;必要もあります。&lt;/xref:System.Data.OracleClient.OracleLob&gt; &lt;/xref:System.Data.OracleClient.OracleType&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">コピー先のオフセットが変換先の末尾を越えるかどうか<ph id="ph1">`LOB`</ph>、<ph id="ph2">`LOB`</ph>データがコピーに拡張します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The space between the end of the <ph id="ph1">`LOB`</ph> and the destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">最後の間隔、<ph id="ph1">`LOB`</ph>最後を越えたコピー先のオフセットは&amp;0; で埋められますと<ph id="ph2">`BLOB`</ph>データ型とスペースを<ph id="ph3">`CLOB`</ph>と<ph id="ph4">`NCLOB`</ph>データ型。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">書き込む、 <ph id="ph1">`LOB`</ph>、取得する必要があります、<ph id="ph2">`LOB`</ph>開始されたローカル トランザクションを使用して、SQL SELECT ステートメントの FOR UPDATE 句が必要です。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このリリースでは、読み取り専用への書き込み操作で<ph id="ph2">`LOB`</ph>が成功したが更新されない可能性があります、<ph id="ph3">`LOB`</ph>サーバーにします。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> will be updated.</source>
          <target state="translated">この場合、ただし、ローカル コピーの<ph id="ph1">`LOB`</ph>が更新されます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">読み取り操作が後で、そのため、&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクトは、書き込み操作の結果を返す場合があります&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated">&gt;&gt;、<ph id="ph1">`CopyTo`</ph>メソッドでは、対象のコンテンツはクリアしません<ph id="ph2">`OracleLob`</ph>コピー操作を実行する前にします。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The destination <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">転送先<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The number of bytes copied.</source>
          <target state="translated">コピーされたバイト数。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This excludes any padded bytes.</source>
          <target state="translated">これには、すべての埋め込みバイトが含まれません。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">destination</ph><ept id="p2">&lt;/code&gt;</ept> parameter is null.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で指定されている、 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">destination</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターが null です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">操作は、トランザクション内で、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが null、または接続が閉じられました。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Copies from this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a destination <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> with the specified amount of data.</source>
          <target state="translated">これをコピーします。 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>先<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>で指定されたデータ量。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基になるデータ型では、同じでなければなりません常にします。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For example, if you are copying from an &lt;xref:System.Data.OracleClient.OracleType&gt;, the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; must also be an &lt;xref:System.Data.OracleClient.OracleType&gt;.</source>
          <target state="translated">たとえば、コピーする場合はから&lt;xref:System.Data.OracleClient.OracleType&gt;、移行先の&lt;xref:System.Data.OracleClient.OracleLob&gt;&lt;xref:System.Data.OracleClient.OracleType&gt;。&lt;/xref:System.Data.OracleClient.OracleType&gt;必要もあります。&lt;/xref:System.Data.OracleClient.OracleLob&gt; &lt;/xref:System.Data.OracleClient.OracleType&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">コピー先のオフセットが変換先の末尾を越えるかどうか<ph id="ph1">`LOB`</ph>、<ph id="ph2">`LOB`</ph>データがコピーに拡張します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The space between the end of <ph id="ph1">`LOB`</ph> and destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">末尾の間の空白<ph id="ph1">`LOB`</ph>末尾を越えるコピー先のオフセットはの場合は&amp;0; で埋められますと<ph id="ph2">`BLOB`</ph>データ型とスペースを<ph id="ph3">`CLOB`</ph>と<ph id="ph4">`NCLOB`</ph>データ型。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">書き込む、 <ph id="ph1">`LOB`</ph>、取得する必要があります、<ph id="ph2">`LOB`</ph>開始されたローカル トランザクションを使用して、SQL SELECT ステートメントの FOR UPDATE 句が必要です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このリリースでは、読み取り専用への書き込み操作で<ph id="ph2">`LOB`</ph>可能性がありますが、更新されない、<ph id="ph3">`LOB`</ph>サーバーでします。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">この場合、ただし、ローカル コピーの<ph id="ph1">`LOB`</ph>が更新されます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">読み取り操作が後で、そのため、&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクトは、書き込み操作の結果を返す場合があります&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated">&gt;&gt;、<ph id="ph1">`CopyTo`</ph>メソッドでは、対象のコンテンツはクリアしません<ph id="ph2">`OracleLob`</ph>コピー操作を実行する前にします。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The destination <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
          <target state="translated">変換先<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The offset to which to copy.</source>
          <target state="translated">コピー先にオフセットします。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number of bytes.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ型をバイト数は偶数でなければなりません。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The number of bytes copied.</source>
          <target state="translated">コピーされたバイト数。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This excludes any padded bytes.</source>
          <target state="translated">これには、すべての埋め込みバイトが含まれません。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">destination</ph><ept id="p2">&lt;/code&gt;</ept> parameter is full.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で指定されている、 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">destination</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターがいっぱいです。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destinationOffset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">指定された値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">destinationOffset</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターは、ゼロ未満か 4 ギガバイトより大きい。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destinationOffset</ph><ept id="p1">&lt;/code&gt;</ept> parameter for a <bpt id="p2">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> data type is not even.</source>
          <target state="translated">- または - で指定された値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">destinationOffset</ph> <ept id="p1">&lt;/code&gt;</ept>のパラメーター、 <bpt id="p2">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>または<bpt id="p3">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>データ型が均等でないです。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-or-       You must specify <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types as an even number of bytes.</source>
          <target state="translated">- または - を指定する必要があります<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数が偶数バイトのデータ型。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">操作は、トランザクション内で、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが null、または接続が閉じられました。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Copies from this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a destination <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> with the specified amount of data, and the source offset.</source>
          <target state="translated">これをコピーします。 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>先<bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ、およびソース オフセットの指定した容量を持つ。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">基になるデータ型では、同じでなければなりません常にします。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For example, if you are copying from an &lt;xref:System.Data.OracleClient.OracleType&gt;, the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; must also be an &lt;xref:System.Data.OracleClient.OracleType&gt;.</source>
          <target state="translated">たとえば、コピーする場合はから&lt;xref:System.Data.OracleClient.OracleType&gt;、移行先の&lt;xref:System.Data.OracleClient.OracleLob&gt;&lt;xref:System.Data.OracleClient.OracleType&gt;。&lt;/xref:System.Data.OracleClient.OracleType&gt;必要もあります。&lt;/xref:System.Data.OracleClient.OracleLob&gt; &lt;/xref:System.Data.OracleClient.OracleType&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">コピー先のオフセットが変換先の末尾を越えるかどうか<ph id="ph1">`LOB`</ph>、<ph id="ph2">`LOB`</ph>データがコピーに拡張します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The space between the end of <ph id="ph1">`LOB`</ph> and destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">末尾の間の空白<ph id="ph1">`LOB`</ph>末尾を越えるコピー先のオフセットはの場合は&amp;0; で埋められますと<ph id="ph2">`BLOB`</ph>データ型とスペースを<ph id="ph3">`CLOB`</ph>と<ph id="ph4">`NCLOB`</ph>データ型。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">書き込む、 <ph id="ph1">`LOB`</ph>、取得する必要があります、<ph id="ph2">`LOB`</ph>開始されたローカル トランザクションを使用して、SQL SELECT ステートメントの FOR UPDATE 句が必要です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このリリースでは、読み取り専用への書き込み操作で<ph id="ph2">`LOB`</ph>可能性がありますが、更新されない、<ph id="ph3">`LOB`</ph>サーバーでします。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">この場合、ただし、ローカル コピーの<ph id="ph1">`LOB`</ph>が更新されます。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">読み取り操作が後で、そのため、&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクトは、書き込み操作の結果を返す場合があります&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated">&gt;&gt;、<ph id="ph1">`CopyTo`</ph>メソッドでは、対象のコンテンツはクリアしません<ph id="ph2">`OracleLob`</ph>コピー操作を実行する前にします。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The offset from which to copy.</source>
          <target state="translated">コピー先からのオフセット。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ型の場合は偶数でなければなりません。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The destination <bpt id="p1">&lt;xref uid="langword_csharp_OracleLob" name="OracleLob" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref href="System.Data.OracleClient"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The destination <bpt id="p1">&lt;xref uid="langword_csharp_OracleLob" name="OracleLob" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref href="System.Data.OracleClient"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The destination offset to which to copy.</source>
          <target state="translated">コピーする先のオフセット。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ型の場合は偶数でなければなりません。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The quantity of data, in bytes, to copy.</source>
          <target state="translated">(バイト単位) をコピーする、データの量。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ型の場合は偶数でなければなりません。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The number of bytes copied.</source>
          <target state="translated">コピーされたバイト数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This excludes any padded bytes.</source>
          <target state="translated">これには、すべての埋め込みバイトが含まれません。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">destination</ph><ept id="p2">&lt;/code&gt;</ept> parameter is full.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で指定されている、 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">destination</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターがいっぱいです。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">amount</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">sourceOffset</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">destinationOffset</ph><ept id="p3">&lt;/code&gt;</ept> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">指定された値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">amount</ph> <ept id="p1">&lt;/code&gt;</ept>、 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">sourceOffset</ph> <ept id="p2">&lt;/code&gt;</ept>、または<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">destinationOffset</ph> <ept id="p3">&lt;/code&gt;</ept>パラメーターは、ゼロ未満か 4 ギガバイトより大きい。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">amount</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">sourceOffset</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">destinationOffset</ph><ept id="p3">&lt;/code&gt;</ept> parameter for a <bpt id="p4">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> data type is not even.</source>
          <target state="translated">-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">amount</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">sourceOffset</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">destinationOffset</ph><ept id="p3">&lt;/code&gt;</ept> parameter for a <bpt id="p4">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> data type is not even.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">操作は、トランザクション内で、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが null、または接続が閉じられました。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Allows server-side triggers to resume firing after performing multiple write operations.</source>
          <target state="translated">により、サーバー側のトリガーを複数の書き込み操作を実行した後の起動処理を再開します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt; method before you begin performing write operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt;.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt; &lt;xref:System.Data.OracleClient.OracleLob&gt;。&lt;/xref:System.Data.OracleClient.OracleLob&gt;で書き込み操作の実行を開始する前にメソッド&lt;/xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;を呼び出す</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">接続は閉じられます。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Erases all data from this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このデータはすべて消去<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Erase does not truncate data.</source>
          <target state="translated">消去では、データは切り捨てられません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`LOB`</ph> length remains the same for a <ph id="ph2">`BLOB`</ph> data type, and the erased data is replaced by 0x00.</source>
          <target state="translated"><ph id="ph1">`LOB`</ph>の長さは一定の<ph id="ph2">`BLOB`</ph>データ型と 0x00 で、消去されたデータを交換します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types are replaced by spaces.</source>
          <target state="translated"><ph id="ph1">`CLOB`</ph>および<ph id="ph2">`NCLOB`</ph>データ型はスペースで置き換えられます。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">書き込む、 <ph id="ph1">`LOB`</ph>、取得する必要があります、<ph id="ph2">`LOB`</ph>開始されたローカル トランザクションを使用して、SQL SELECT ステートメントの FOR UPDATE 句が必要です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このリリースでは、読み取り専用への書き込み操作で<ph id="ph2">`LOB`</ph>可能性がありますが、更新されない、<ph id="ph3">`LOB`</ph>サーバーでします。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">この場合、ただし、ローカル コピーの<ph id="ph1">`LOB`</ph>が更新されます。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">読み取り操作が後で、そのため、&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクトは、書き込み操作の結果を返す場合があります&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The number of bytes erased.</source>
          <target state="translated">消去されたバイト数。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">操作は、トランザクション内で、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが null、または接続が閉じられました。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Erases the specified amount of data from this <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定されたこのからのデータ量が消去される<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The sum of the values in the <ph id="ph1">`offset`</ph> and <ph id="ph2">`amount`</ph> parameters can be greater than that of the size of the &lt;xref:System.Data.OracleClient.OracleLob&gt;.</source>
          <target state="translated">内の値の合計、<ph id="ph1">`offset`</ph>と<ph id="ph2">`amount`</ph>パラメーターは&lt;xref:System.Data.OracleClient.OracleLob&gt;.&lt;/xref:System.Data.OracleClient.OracleLob&gt;のサイズよりも大きくすることができます</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Therefore, specifying a value greater than that returned by the &lt;xref:System.Data.OracleClient.OracleLob.Length%2A&gt; property succeeds; however &lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt; only erases to the end of the &lt;xref:System.Data.OracleClient.OracleLob&gt;.</source>
          <target state="translated">したがって、によって返されるより大きい値を指定する、&lt;xref:System.Data.OracleClient.OracleLob.Length%2A&gt;プロパティが成功したただし&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;&lt;xref:System.Data.OracleClient.OracleLob&gt;.&lt;/xref:System.Data.OracleClient.OracleLob&gt;の末尾に消去するだけ&lt;/xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;&lt;/xref:System.Data.OracleClient.OracleLob.Length%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>(Similarly, if a negative value is passed to <ph id="ph1">`offset`</ph>, &lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt; will succeed, but only erase starting from the beginning of the &lt;xref:System.Data.OracleClient.OracleLob&gt;.) This behavior is different from that of the &lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt; and &lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt; methods, and offers the advantage of being able to erase all data from the value specified by <ph id="ph2">`offset`</ph> without making an additional roundtrip to the server to verify the actual size.</source>
          <target state="translated">(負の値が渡された場合に同様に、 <ph id="ph1">`offset`</ph>、&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;は成功しますが、限り消去の先頭から始まる、 &lt;xref:System.Data.OracleClient.OracleLob&gt;.)&lt;/xref:System.Data.OracleClient.OracleLob&gt; &lt;/xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;この動作は異なる、&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;と&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;メソッド、およびプランで指定された値からすべてのデータを消去できるという利点<ph id="ph2">`offset`</ph>を実際のサイズを確認するサーバーに追加のラウンドト リップを行わず&lt;/xref:System.Data.OracleClient.OracleLob.Write%2A&gt;&lt;/xref:System.Data.OracleClient.OracleLob.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt; does not truncate data.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;データは切り捨てられません。&lt;/xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`LOB`</ph> length remains the same for a <ph id="ph2">`BLOB`</ph> data type, and the erased data is replaced by 0x00.</source>
          <target state="translated"><ph id="ph1">`LOB`</ph>の長さは一定の<ph id="ph2">`BLOB`</ph>データ型と 0x00 で、消去されたデータを交換します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types are replaced by spaces.</source>
          <target state="translated"><ph id="ph1">`CLOB`</ph>および<ph id="ph2">`NCLOB`</ph>データ型はスペースで置き換えられます。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">書き込む、 <ph id="ph1">`LOB`</ph>、取得する必要があります、<ph id="ph2">`LOB`</ph>開始されたローカル トランザクションを使用して、SQL SELECT ステートメントの FOR UPDATE 句が必要です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In this release, a write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このリリースでは、読み取り専用への書き込み操作で<ph id="ph2">`LOB`</ph>可能性がありますが、更新されない、<ph id="ph3">`LOB`</ph>サーバーでします。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">この場合、ただし、ローカル コピーの<ph id="ph1">`LOB`</ph>が更新されます。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">読み取り操作が後で、そのため、&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクトは、書き込み操作の結果を返す場合があります&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The offset from which to erase.</source>
          <target state="translated">位置のオフセットを消去します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ型の場合は偶数でなければなりません。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The quantity of data, in bytes, to erase.</source>
          <target state="translated">データ量 (バイト単位) を消去します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ型の場合は偶数でなければなりません。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The number of bytes erased.</source>
          <target state="translated">消去されたバイト数。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">操作は、トランザクション内で、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが null、または接続が閉じられました。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Not currently supported.</source>
          <target state="translated">現在サポートされていません。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>In this release, this method is not functional.</source>
          <target state="translated">このリリースでこのメソッドは機能しません。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether an application called the &lt;xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt; method.</source>
          <target state="translated">アプリケーションを呼び出すかどうかを示す値を取得、&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt;メソッド&lt;/xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt;。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>When using an Oracle 8.0.5 server, an Oracle "ORA-00600: internal error code" exception is thrown.</source>
          <target state="translated">Oracle 8.0.5 サーバー、Oracle の使用時に"か 00600: 内部エラー コード"例外がスローされます。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if application called the &lt;xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt; method, otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>アプリケーションが呼び出された場合、&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt;メソッド、それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Data.OracleClient.OracleLob.BeginBatch*&gt; 。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBFile.Null"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> stream.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は、 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleBFile.Null"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>ストリーム。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBFile.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> stream, otherwise <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a <bpt id="p3">&lt;xref href="System.Data.OracleClient.OracleBFile.Null"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> stream, otherwise <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a temporary <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は一時的な<bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to create a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">次の例は、一時的なを作成する方法を示します<ph id="ph1">`LOB`</ph>です。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a temporary <bpt id="p3">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, otherwise <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>は一時的な<bpt id="p3">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>それ以外の場合、 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">接続は閉じられます。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Gets a value that returns the size of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">サイズを表す値を取得、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The size of the &lt;xref:System.Data.OracleClient.OracleLob&gt; is always returned in bytes for all data types.</source>
          <target state="translated">サイズ、&lt;xref:System.Data.OracleClient.OracleLob&gt;が常にすべてのデータ型のバイト単位で返されます&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The size of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in bytes.</source>
          <target state="translated">サイズ、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (バイト単位)。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">接続は閉じられます。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Gets a value that returns the <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> data type.</source>
          <target state="translated">返す値を取得、 <bpt id="p1">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データ型。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Data.OracleClient.OracleLob&gt; may be one of the following &lt;xref:System.Data.OracleClient.OracleType&gt; data types.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleLob&gt;、次のいずれかの&lt;xref:System.Data.OracleClient.OracleType&gt;データ型&lt;/xref:System.Data.OracleClient.OracleType&gt;&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>|OracleType data type|Description|   |--------------------------|-----------------|   |<ph id="ph1">`Blob`</ph>|An Oracle <ph id="ph2">`BLOB`</ph> data type that contains binary data with a maximum size of 4 gigabytes.</source>
          <target state="translated">|OracleType データ タイプ |説明 |  |--------------------------|-----------------|  |<ph id="ph1">`Blob`</ph>|Oracle <ph id="ph2">`BLOB`</ph> 4 ギガバイト単位の最大サイズのバイナリ データを格納するデータ型。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>This maps to an &lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt;.|   |<ph id="ph1">`Clob`</ph>|An Oracle <ph id="ph2">`CLOB`</ph> data type that contains character data, based on the default character set on the server, with a maximum size of 4 gigabytes.</source>
          <target state="translated">これは、&lt;xref:System.Array&gt;&lt;xref:System.Byte&gt;型にマップします |。  |<ph id="ph1">`Clob`</ph>|Oracle<ph id="ph2">`CLOB`</ph>データ型に基づいて既定の文字、文字データを含む 4 ギガバイト単位の最大サイズは、サーバーに設定します&lt;/xref:System.Byte&gt;&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This maps to &lt;xref:System.String&gt;.|   |<ph id="ph1">`NClob`</ph>|An Oracle <ph id="ph2">`NCLOB`</ph> data type that contains character data, based on the national character set on the server with a maximum size of 4 gigabytes.</source>
          <target state="translated">これは&lt;xref:System.String&gt;にマップします |。  |<ph id="ph1">`NClob`</ph>|Oracle<ph id="ph2">`NCLOB`</ph>を文字データを含むデータ型が各国語文字が 4 ギガバイト単位の最大サイズを使用してサーバー セットに基づく&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>This maps to &lt;xref:System.String&gt;.|</source>
          <target state="translated">これはマップ&lt;xref:System.String&gt;. |&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_LOB" name="LOB" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>データ型。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Represents a null <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Null 値を表す<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>You can construct an &lt;xref:System.Data.OracleClient.OracleLob&gt; that is NULL using this format:      <ph id="ph1">```   OracleLob myLob = OracleLOB.Null;   ```</ph>       This technique is used primarily to test whether a <ph id="ph2">`LOB`</ph> returned from the server is NULL, as this example illustrates:      <ph id="ph3">```   If(myLob == OracleLob.Null)   ```</ph>       A NULL <ph id="ph4">`LOB`</ph> behaves similarly to a zero byte <ph id="ph5">`LOB`</ph> in that &lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt; succeeds and always returns zero bytes.</source>
          <target state="translated">構築できます、&lt;xref:System.Data.OracleClient.OracleLob&gt;この形式を使用して NULL である:<ph id="ph1">```   OracleLob myLob = OracleLOB.Null;   ```</ph>をテストするには、主に、この手法を使用するかどうか、<ph id="ph2">`LOB`</ph>はこの例のように、NULL の場合、サーバーから返さ: <ph id="ph3">```   If(myLob == OracleLob.Null)   ```</ph> NULL<ph id="ph4">`LOB`</ph>ゼロのバイトと同様に動作<ph id="ph5">`LOB`</ph>点で&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;が成功し、常に&amp;0; バイトを返します&lt;/xref:System.Data.OracleClient.OracleLob.Read%2A&gt;&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Gets the current read position in the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream.</source>
          <target state="translated">内の位置を読み取り、現在の取得、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ストリーム。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The stream must support seeking to get or set the position.</source>
          <target state="translated">ストリームは、取得または位置を設定するシークをサポートする必要があります。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt; property to determine whether the stream supports seeking.</source>
          <target state="translated">使用して、 &lt;xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt;、ストリームがシークをサポートしているかどうかを決定するプロパティ&lt;/xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt;。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">ストリームの長さを超えた位置にシークはサポートされています。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Seeking to an odd position for <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types is also supported.</source>
          <target state="translated">奇数の位置までシーク<ph id="ph1">`CLOB`</ph>と<ph id="ph2">`NCLOB`</ph>データ型もサポートされています。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section of the &lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt; property.</source>
          <target state="translated">詳細については、の「解説」セクションを参照してください、&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;プロパティ&lt;/xref:System.Data.OracleClient.OracleLob.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The Position property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</source>
          <target state="translated">位置プロパティはありませんの追跡が消費されている、スキップ、ストリーム、またはその両方からのバイト数。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The current position within the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream.</source>
          <target state="translated">内の現在位置、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ストリーム。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
          <target state="translated">接続は閉じられます。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Reads a sequence of bytes from the current <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream and advances the position within the stream by the number of bytes read.</source>
          <target state="translated">現在のバイトのシーケンスを読み取り<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>バイト数だけストリーム内の位置が読み取るストリーム。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The Read method reads a maximum of <ph id="ph1">`count`</ph> bytes from the current stream and stores them in <ph id="ph2">`buffer`</ph> beginning at <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">Read メソッドは、最大数を読み取ります<ph id="ph1">`count`</ph>現在からのバイト ストリームおよびそれらの格納に<ph id="ph2">`buffer`</ph>始点<ph id="ph3">`offset`</ph>です。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</source>
          <target state="translated">読み取りバイト数だけストリーム内の現在位置が高度なただし、例外が発生する場合、ストリーム内の現在の位置は変更されません。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Read returns the number of bytes read.</source>
          <target state="translated">読み取りでは、読み取られたバイト数を返します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The return value is zero only if the position is currently at the end of the stream.</source>
          <target state="translated">ストリームの末尾には、位置は現在場合にのみ、戻り値は&amp;0; です。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Read will block until at least one byte of data can be read, in the event that no data is available.Read returns 0 if you attempt to read from a <ph id="ph1">`LOB`</ph> when the current position is at the end of <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">読み取りは、データがないことには、少なくとも 1 バイトのデータを読み取ることができるまでブロックされます。読み取りを試行した場合は 0 を返しますを読み取り、<ph id="ph1">`LOB`</ph>の最後に、現在の位置が場合<ph id="ph2">`LOB`</ph>です。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Read can return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">ストリームの末尾に達していない場合でも、読み取りは要求されたより少ないバイト数を返すことができます。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">.NET Framework Data Provider for Oracle は、すべて処理<ph id="ph1">`CLOB`</ph>と<ph id="ph2">`NCLOB`</ph>データを Unicode として。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">そのため、アクセスするときに<ph id="ph1">`CLOB`</ph>と<ph id="ph2">`NCLOB`</ph>データ型の場合は、常に扱うバイトの各文字は 2 バイトの数。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`Read`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">たとえば、3 文字の文字列として保存する場合、<ph id="ph1">`NCLOB`</ph>ここで、文字セットが 1 文字を 4 バイトを実行する Oracle サーバー、<ph id="ph2">`Read`</ph>操作、サーバーで、12 バイトとして格納されますが、6 バイトを文字列の長さを指定します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The following C# example demonstrates how to read &lt;xref:System.Data.OracleClient.OracleLob&gt; objects.</source>
          <target state="translated">次の c# の例を読み取る方法を示します&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクト&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   public static void ReadLobExample(OracleCommand command)   {      int actual = 0;         //Select some data.      // Table Schema:      //  "CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)";      //  "INSERT INTO TableWithLobs values (1, 'AA', 'AAA', N'AAAA')";      command.CommandText = "SELECT * FROM TableWithLobs";      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain the LOBs (all 3 varieties).         OracleLob BLOB = reader.GetOracleLob(1);         OracleLob CLOB  = reader.GetOracleLob(2);         OracleLob NCLOB = reader.GetOracleLob(3);            //Example - Reading binary data (in chunks).         byte[] buffer = new byte[100];         while((actual = BLOB.Read(buffer, 0, buffer.Length)) &gt;0)            Console.WriteLine(BLOB.LobType + ".Read(" + buffer + ", " + buffer.Length + ") =&gt; " + actual);            //Example - Reading CLOB/NCLOB data (in chunks).         //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).         //However, because the OracleLob object inherits directly from the.NET stream object,          //all the existing classes that manipluate streams can also be used. For example, the          //.NET StreamReader makes converting the raw bytes into actual characters easier.         StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);         char[] cbuffer = new char[100];         while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) &gt;0)            Console.WriteLine(CLOB.LobType + ".Read(" + new string(cbuffer, 0, actual) + ", " + cbuffer.Length + ") =&gt; " + actual);            //Example - Reading data (all at once).         //You could use StreamReader.ReadToEnd to obtain all the string data,or simply         //call OracleLob.Value to obtain a contiguous allocation of all the data.         Console.WriteLine(NCLOB.LobType + ".Value =&gt; " + NCLOB.Value);      }   }   ```</ph>       You can construct an &lt;xref:System.Data.OracleClient.OracleLob&gt; that is NULL using this format:      <ph id="ph2">```   OracleLob myLob = OracleLob.Null;   ```</ph>       This technique is used primarily to test whether a <ph id="ph3">`LOB`</ph> returned from the server is NULL, as the following example illustrates.</source>
          <target state="translated"><ph id="ph1">```   public static void ReadLobExample(OracleCommand command)   {      int actual = 0;         //Select some data.      // Table Schema:      //  "CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)";      //  "INSERT INTO TableWithLobs values (1, 'AA', 'AAA', N'AAAA')";      command.CommandText = "SELECT * FROM TableWithLobs";      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain the LOBs (all 3 varieties).         OracleLob BLOB = reader.GetOracleLob(1);         OracleLob CLOB  = reader.GetOracleLob(2);         OracleLob NCLOB = reader.GetOracleLob(3);            //Example - Reading binary data (in chunks).         byte[] buffer = new byte[100];         while((actual = BLOB.Read(buffer, 0, buffer.Length)) &gt;0)            Console.WriteLine(BLOB.LobType + ".Read(" + buffer + ", " + buffer.Length + ") =&gt; " + actual);            //Example - Reading CLOB/NCLOB data (in chunks).         //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).         //However, because the OracleLob object inherits directly from the.NET stream object,          //all the existing classes that manipluate streams can also be used. For example, the          //.NET StreamReader makes converting the raw bytes into actual characters easier.         StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);         char[] cbuffer = new char[100];         while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) &gt;0)            Console.WriteLine(CLOB.LobType + ".Read(" + new string(cbuffer, 0, actual) + ", " + cbuffer.Length + ") =&gt; " + actual);            //Example - Reading data (all at once).         //You could use StreamReader.ReadToEnd to obtain all the string data,or simply         //call OracleLob.Value to obtain a contiguous allocation of all the data.         Console.WriteLine(NCLOB.LobType + ".Value =&gt; " + NCLOB.Value);      }   }   ```</ph>構築することができます、&lt;xref:System.Data.OracleClient.OracleLob&gt;この形式を使用して NULL である:<ph id="ph2">```   OracleLob myLob = OracleLob.Null;   ```</ph>をテストするには、主に、この手法を使用するかどうか、<ph id="ph3">`LOB`</ph>は次の例に示すように、NULL の場合、サーバーから返される&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   If(myLob == OracleLob.Null)   ```</ph>       A NULL <ph id="ph2">`LOB`</ph> behaves similarly to a zero byte <ph id="ph3">`LOB`</ph> in that Read succeeds and always returns zero bytes.</source>
          <target state="translated"><ph id="ph1">```   If(myLob == OracleLob.Null)   ```</ph>NULL<ph id="ph2">`LOB`</ph>ゼロのバイトと同様に動作<ph id="ph3">`LOB`</ph>で、読み取り成功を常に&amp;0; バイトを返します。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>An array of bytes.</source>
          <target state="translated">バイトの配列。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>When this method returns, the buffer contains the specified byte array with the values between <ph id="ph1">`offset`</ph> and (<ph id="ph2">`offset`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph>) replaced by the bytes read from the current source.</source>
          <target state="translated">指定したバイト配列の値を持つが、バッファーに含まれているこのメソッドが戻るとき<ph id="ph1">`offset`</ph>と (<ph id="ph2">`offset`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph>)、現在のソースから読み取られたバイトに置き換えします。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin storing the data read from the current stream.</source>
          <target state="translated">内の&amp;0; から始まるバイト オフセット<ph id="ph1">`buffer`</ph>開始位置を示す現在のストリームから読み取ったデータの格納します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ型の場合は偶数でなければなりません。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to be read from the current stream.</source>
          <target state="translated">現在のストリームから読み取られるバイトの最大数。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ型の場合は偶数でなければなりません。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">バッファーに読み取られた合計バイト数。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This may be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</source>
          <target state="translated">バイト数は要求より小さくバイト数が、現在ご利用いただけませんまたはゼロ (0) の場合、ストリームの末尾に達していることがあります。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> is a null reference (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">buffer</ph> <ept id="p1">&lt;/code&gt;</ept> Null 参照 (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>A value in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not positive.</source>
          <target state="translated">値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>または<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターは正の値ではありません。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>-or-       The sum of the offset and count parameters is larger than the buffer length.</source>
          <target state="translated">または、オフセットとカウントのパラメーターの合計がバッファーの長さよりも大きくします。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">amount</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">- または - で指定された値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">amount</ph> <ept id="p1">&lt;/code&gt;</ept>または<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">offset</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターは、ゼロ未満か 4 ギガバイトより大きい。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">操作は、トランザクション内で、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが null、または接続が閉じられました。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Sets the position on the current <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream.</source>
          <target state="translated">現在の位置を設定<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ストリーム。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position must precede the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">場合<ph id="ph1">`offset`</ph>は負の場合、新しい位置はによって指定された位置を付ける必要があります<ph id="ph2">`origin`</ph>で指定したバイト数だけ<ph id="ph3">`offset`</ph>です。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is zero, the new position must be the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">場合<ph id="ph1">`offset`</ph>0 の場合は、新しい位置がで指定した位置にある必要があります<ph id="ph2">`origin`</ph>です。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position must follow the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">場合<ph id="ph1">`offset`</ph>が正の値であり、新しい位置で指定した位置に従う必要あります<ph id="ph2">`origin`</ph>で指定したバイト数だけ<ph id="ph3">`offset`</ph>です。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">ストリームの長さを超えた位置にシークはサポートされています。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Seeking to an odd position for <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types is also supported.</source>
          <target state="translated">奇数の位置までシーク<ph id="ph1">`CLOB`</ph>と<ph id="ph2">`NCLOB`</ph>データ型もサポートされています。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section of the &lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt; property.</source>
          <target state="translated">詳細については、の「解説」セクションを参照してください、&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;プロパティ&lt;/xref:System.Data.OracleClient.OracleLob.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>A byte offset relative to origin.</source>
          <target state="translated">原点からのバイト オフセット。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position precedes the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">場合<ph id="ph1">`offset`</ph>は負の場合、新しい位置の前に指定した位置<ph id="ph2">`origin`</ph>で指定したバイト数だけ<ph id="ph3">`offset`</ph>です。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is zero, the new position is the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">場合<ph id="ph1">`offset`</ph>0 の場合は、指定した位置は、新しい位置は<ph id="ph2">`origin`</ph>します。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position follows the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">場合<ph id="ph1">`offset`</ph>が正の値であり、新しい位置で指定した位置に依存して<ph id="ph2">`origin`</ph>で指定したバイト数だけ<ph id="ph3">`offset`</ph>です。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>A value of type &lt;xref:System.IO.SeekOrigin&gt; indicating the reference point used to obtain the new position.</source>
          <target state="translated">型の値&lt;xref:System.IO.SeekOrigin&gt;新しい位置を取得するために使用する参照ポイントを示すします&lt;/xref:System.IO.SeekOrigin&gt;。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The new position within the current stream.</source>
          <target state="translated">現在のストリーム内の新しい位置。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">origin</ph><ept id="p1">&lt;/code&gt;</ept> parameter does not contain a valid value.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">origin</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターに有効な値が含まれていません。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The resulting position is beyond the length of the value.</source>
          <target state="translated">結果として得られる位置は、値の長さを超えてです。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object was closed or disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが終了または破棄します。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Sets the length of the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream to a value less than the current length.</source>
          <target state="translated">長さを設定、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ストリームを現在の長さ未満の値。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>An attempt to increase the length of the &lt;xref:System.Data.OracleClient.OracleLob&gt; stream fails, and returns "Message: ORA-22926: specified trim length is greater than current LOB value's length" from the Oracle server.</source>
          <target state="translated">長さを拡張しよう、&lt;xref:System.Data.OracleClient.OracleLob&gt;ストリーム失敗し、返します"メッセージ: か&amp;22926;: 指定トリムの長さは現在の LOB 値の長さより大きい"Oracle サーバーから&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>A stream must support both writing and seeking for SetLength to function.</source>
          <target state="translated">ストリームには、書き込みと関数に SetLength をシークする両方をサポートする必要があります。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">.NET Framework Data Provider for Oracle は、すべて処理<ph id="ph1">`CLOB`</ph>と<ph id="ph2">`NCLOB`</ph>データを Unicode として。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">そのため、アクセスするときに<ph id="ph1">`CLOB`</ph>と<ph id="ph2">`NCLOB`</ph>データ型の場合は、常に扱うバイトの各文字は 2 バイトの数。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`SetLength`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">たとえば、3 文字の文字列として保存する場合、<ph id="ph1">`NCLOB`</ph>ここで、文字セットが 1 文字を 4 バイトを実行する Oracle サーバー、<ph id="ph2">`SetLength`</ph>操作、サーバーで、12 バイトとして格納されますが、6 バイトを文字列の長さを指定します。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">書き込む、 <ph id="ph1">`LOB`</ph>、取得する必要があります、<ph id="ph2">`LOB`</ph>開始されたローカル トランザクションを使用して、SQL SELECT ステートメントの FOR UPDATE 句が必要です。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  A write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; を読み取り専用の書き込み操作<ph id="ph2">`LOB`</ph>可能性がありますが、更新されない、<ph id="ph3">`LOB`</ph>サーバーでします。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">この場合、ただし、ローカル コピーの<ph id="ph1">`LOB`</ph>が更新されます。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">読み取り操作が後で、そのため、&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクトは、書き込み操作の結果を返す場合があります&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The desired length of the current <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream in bytes.</source>
          <target state="translated">現在の希望の長さ<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>バイト単位のストリーム。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ型の場合は偶数でなければなりません。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter for a <bpt id="p2">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> data type is not even.</source>
          <target state="translated">指定された値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>のパラメーター、 <bpt id="p2">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>または<bpt id="p3">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>データ型が均等でないです。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">- または - で指定された値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターは、ゼロ未満か 4 ギガバイトより大きい。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">操作は、トランザクション内で、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが null、または接続が閉じられました。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Gets the common language runtime stream value equivalent of the underlying value.</source>
          <target state="translated">等価の基になる値の共通言語ランタイム ストリームの値を取得します。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>For &lt;xref:System.Data.OracleClient.OracleType&gt; data types, Value returns the entire underlying data as a contiguous array of type <ph id="ph1">`Byte[]`</ph>.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleType&gt;、連続した型の配列として、データ型の値を返します全体の基になるデータ<ph id="ph1">`Byte[]`</ph>&lt;/xref:System.Data.OracleClient.OracleType&gt;。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>For &lt;xref:System.Data.OracleClient.OracleType&gt; and &lt;xref:System.Data.OracleClient.OracleType&gt; data types, Value returns all the data as a <ph id="ph1">`String`</ph> data type.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleType&gt;と&lt;xref:System.Data.OracleClient.OracleType&gt;データ型、値を返します、すべてのデータとして、<ph id="ph1">`String`</ph>データ型&lt;/xref:System.Data.OracleClient.OracleType&gt;&lt;/xref:System.Data.OracleClient.OracleType&gt;。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>For null data, Value returns &lt;xref:System.DBNull&gt;.</source>
          <target state="translated">Null データの場合は、値は&lt;xref:System.DBNull&gt;。&lt;/xref:System.DBNull&gt;を返します。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>By comparing the returned values, you can distinguish among empty data, null data, and data.</source>
          <target state="translated">返された値を比較すると、できると区別する空のデータの間でデータ、およびデータは null です。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  A benefit of using <ph id="ph2">`LOB`</ph> data types is the capability to retrieve large amounts of data in chunks at the client.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; を使用する利点<ph id="ph2">`LOB`</ph>データ型は、大量のクライアント側のチャンク単位でデータを取得する機能。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>However, when you use Value, you obtain all the data for the <ph id="ph1">`LOB`</ph> column as one contiguous chunk, which can significantly increase application overhead.</source>
          <target state="translated">ただし、値を使用する場合に、すべてのデータを取得、<ph id="ph1">`LOB`</ph>アプリケーションのオーバーヘッドを大幅に向上する可能性が&amp;1; つの連続したチャンクとして列です。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, an array of type <bpt id="p2">&lt;xref uid="langword_csharp_Byte[]" name="Byte[]" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">For <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, an array of type <bpt id="p2">&lt;xref uid="langword_csharp_Byte[]" name="Byte[]" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, a <bpt id="p3">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">For <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, a <bpt id="p3">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>For null data, <bpt id="p1">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Null のデータの<bpt id="p1">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the current <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream, and advances the current position within this stream by the number of bytes written.</source>
          <target state="translated">現在のバイトのシーケンスを書き込み<bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ストリーム、および、書き込まれたバイト数だけストリーム内の現在位置を進めます。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>If the write operation is successful, the position within the stream advances by the number of bytes written.</source>
          <target state="translated">書き込み操作が成功した場合、ストリーム内の位置は、書き込まれたバイト数だけ進めます。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>If an exception occurs, the position within the stream remains unchanged.</source>
          <target state="translated">例外が発生する場合、ストリーム内の位置は変更されません。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Writing beyond the end of <ph id="ph1">`LOB`</ph> is allowed and enlarges the <ph id="ph2">`LOB`</ph> by the number of bytes written.</source>
          <target state="translated">末尾を越えて書き込み<ph id="ph1">`LOB`</ph>が許可され、拡大、<ph id="ph2">`LOB`</ph>によって書き込まれたバイト数。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">.NET Framework Data Provider for Oracle は、すべて処理<ph id="ph1">`CLOB`</ph>と<ph id="ph2">`NCLOB`</ph>データを Unicode として。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">そのため、アクセスするときに<ph id="ph1">`CLOB`</ph>と<ph id="ph2">`NCLOB`</ph>データ型の場合は、常に扱うバイトの各文字は 2 バイトの数。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`Write`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">たとえば、3 文字の文字列として保存する場合、<ph id="ph1">`NCLOB`</ph>ここで、文字セットが 1 文字を 4 バイトを実行する Oracle サーバー、<ph id="ph2">`Write`</ph>操作、サーバーで、12 バイトとして格納されますが、6 バイトを文字列の長さを指定します。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">書き込む、 <ph id="ph1">`LOB`</ph>、取得する必要があります、<ph id="ph2">`LOB`</ph>開始されたローカル トランザクションを使用して、SQL SELECT ステートメントの FOR UPDATE 句が必要です。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The following C# example demonstrates how to write to &lt;xref:System.Data.OracleClient.OracleLob&gt; objects.</source>
          <target state="translated">次の c# の例を書き込む方法を示しています&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクト&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   public static void WriteLobExample(OracleCommand command)   {      //Note: Updating LOB data requires a transaction.      command.Transaction = command.Connection.BeginTransaction();      //Select some data.      //    Table Schema:      //        "CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)";      //        "INSERT INTO tablewithlobs values (1, 'AA', 'AAA')";      command.CommandText = "SELECT * FROM TableWithLobs FOR UPDATE";      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain both LOBs.         OracleLob BLOB1    = reader.GetOracleLob(1);         OracleLob BLOB2    = reader.GetOracleLob(2);         //Perform any desired operations on the LOB, (read, position, and so on).         //...         //Example - Writing binary data (directly to the backend).         //To write, you can use any of the stream classes, or write raw binary data using          //the OracleLob write method. Writing character vs. binary is the same;         //however note that character is always in terms of Unicode byte counts         //(for example: even number of bytes - 2 bytes for every Unicode character).         byte[] buffer = new byte[100];         buffer[0] = 0xCC;         buffer[1] = 0xDD;         BLOB1.Write(buffer, 0, 2);         BLOB1.Position = 0;         Console.WriteLine(BLOB1.LobType + ".Write(" + buffer + ", 0, 2) =&gt; " + BLOB1.Value);            //Example - Copying data into another LOB.         long actual = BLOB1.CopyTo(BLOB2);         Console.WriteLine(BLOB1.LobType + ".CopyTo(" + BLOB2.Value + ") =&gt; " + actual);            //Commit the transaction now that everything succeeded.         //Note: On error, Transaction.Dispose is called (from the using statement)         //and will automatically roll-back the pending transaction.         command.Transaction.Commit();      }   }   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  A write operation to a read-only <ph id="ph4">`LOB`</ph> might succeed, but does not update the <ph id="ph5">`LOB`</ph> on the server.</source>
          <target state="translated"><ph id="ph1">```   public static void WriteLobExample(OracleCommand command)   {      //Note: Updating LOB data requires a transaction.      command.Transaction = command.Connection.BeginTransaction();      //Select some data.      //    Table Schema:      //        "CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)";      //        "INSERT INTO tablewithlobs values (1, 'AA', 'AAA')";      command.CommandText = "SELECT * FROM TableWithLobs FOR UPDATE";      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain both LOBs.         OracleLob BLOB1    = reader.GetOracleLob(1);         OracleLob BLOB2    = reader.GetOracleLob(2);         //Perform any desired operations on the LOB, (read, position, and so on).         //...         //Example - Writing binary data (directly to the backend).         //To write, you can use any of the stream classes, or write raw binary data using          //the OracleLob write method. Writing character vs. binary is the same;         //however note that character is always in terms of Unicode byte counts         //(for example: even number of bytes - 2 bytes for every Unicode character).         byte[] buffer = new byte[100];         buffer[0] = 0xCC;         buffer[1] = 0xDD;         BLOB1.Write(buffer, 0, 2);         BLOB1.Position = 0;         Console.WriteLine(BLOB1.LobType + ".Write(" + buffer + ", 0, 2) =&gt; " + BLOB1.Value);            //Example - Copying data into another LOB.         long actual = BLOB1.CopyTo(BLOB2);         Console.WriteLine(BLOB1.LobType + ".CopyTo(" + BLOB2.Value + ") =&gt; " + actual);            //Commit the transaction now that everything succeeded.         //Note: On error, Transaction.Dispose is called (from the using statement)         //and will automatically roll-back the pending transaction.         command.Transaction.Commit();      }   }   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; の書き込み操作を読み取り専用に<ph id="ph4">`LOB`</ph>可能性がありますが、更新されない、<ph id="ph5">`LOB`</ph>サーバーでします。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">この場合、ただし、ローカル コピーの<ph id="ph1">`LOB`</ph>が更新されます。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">読み取り操作が後で、そのため、&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクトは、書き込み操作の結果を返す場合があります&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>An array of bytes.</source>
          <target state="translated">バイトの配列。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>This method copies the number of bytes specified in <ph id="ph1">`count`</ph> from <ph id="ph2">`buffer`</ph> to the current stream.</source>
          <target state="translated">このメソッドで指定されたバイト数はコピー<ph id="ph1">`count`</ph>から<ph id="ph2">`buffer`</ph>現在のストリームにします。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin copying bytes to the current stream.</source>
          <target state="translated">内の&amp;0; から始まるバイト オフセット<ph id="ph1">`buffer`</ph>現在のストリームにバイトのコピーを開始する位置。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ型の場合は偶数でなければなりません。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The number of bytes to be written to the current stream.</source>
          <target state="translated">現在のストリームに書き込むバイト数。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types, this must be an even number.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>データ型の場合は偶数でなければなりません。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a null reference (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">buffer</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが null 参照 (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>A value in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not positive.</source>
          <target state="translated">値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>または<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターは正の値ではありません。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>-or-       The sum of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> parameters is larger than the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">buffer</ph><ept id="p3">&lt;/code&gt;</ept> length.</source>
          <target state="translated">- または - の合計、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>と<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターがよりも大きい、 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">buffer</ph> <ept id="p3">&lt;/code&gt;</ept>長さ。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>-or-       A value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">count</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">- または - で指定された値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">count</ph> <ept id="p1">&lt;/code&gt;</ept>または<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">offset</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターは、ゼロ未満か 4 ギガバイトより大きい。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>-or-       You must specify <bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> data types as an even number of bytes.</source>
          <target state="translated">- または - を指定する必要があります<bpt id="p1">&lt;xref uid="langword_csharp_CLOB" name="CLOB" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref uid="langword_csharp_NCLOB" name="NCLOB" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>数が偶数バイトのデータ型。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The operation is not within a transaction, the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is null, or the connection is closed.</source>
          <target state="translated">操作は、トランザクション内で、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが null、または接続が閉じられました。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The object was closed or disposed.</source>
          <target state="translated">オブジェクトが閉じられたか、破棄されます。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Writes a byte to the current position in the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> stream, and advances the position within the stream by one byte.</source>
          <target state="translated">内の現在位置にバイトを書き込み、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ストリームし、を&amp;1; バイト、ストリーム内の位置を進めます。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>If the write operation is successful, the position within the stream advances by one byte.</source>
          <target state="translated">書き込み操作が成功した場合、ストリーム内の位置は&amp;1; バイト進めます。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>If an exception occurs, the position within the stream remains unchanged.</source>
          <target state="translated">例外が発生する場合、ストリーム内の位置は変更されません。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Writing beyond the end of the <ph id="ph1">`LOB`</ph> is allowed and enlarges the <ph id="ph2">`LOB`</ph> by one byte.</source>
          <target state="translated">末尾を越えて書き込み、<ph id="ph1">`LOB`</ph>が許可され、拡大、 <ph id="ph2">`LOB`</ph>&amp;1; バイトです。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">書き込む、 <ph id="ph1">`LOB`</ph>、取得する必要があります、<ph id="ph2">`LOB`</ph>開始されたローカル トランザクションを使用して、SQL SELECT ステートメントの FOR UPDATE 句が必要です。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  A write operation to a read-only <ph id="ph2">`LOB`</ph> might succeed, but does not update the <ph id="ph3">`LOB`</ph> on the server.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; を読み取り専用の書き込み操作<ph id="ph2">`LOB`</ph>可能性がありますが、更新されない、<ph id="ph3">`LOB`</ph>サーバーでします。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">この場合、ただし、ローカル コピーの<ph id="ph1">`LOB`</ph>が更新されます。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Therefore, later read operations on the &lt;xref:System.Data.OracleClient.OracleLob&gt; object might return the results of the write operation.</source>
          <target state="translated">読み取り操作が後で、そのため、&lt;xref:System.Data.OracleClient.OracleLob&gt;オブジェクトは、書き込み操作の結果を返す場合があります&lt;/xref:System.Data.OracleClient.OracleLob&gt;。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The byte to write to the stream.</source>
          <target state="translated">ストリームに書き込むバイト。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>