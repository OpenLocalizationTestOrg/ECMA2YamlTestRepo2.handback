<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33ba4212fa614816addf83a3b68829252dfadfc3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices._EventInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be6b3f31c0c7854a86fa096864c8b0d5f62bd406</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c39d08cde02838aa679c02376edfd8d076be7498</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes the public members of the <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.EventInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> class to unmanaged code.</source>
          <target state="translated">パブリック メンバーを公開、 <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.EventInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>アンマネージ コードにクラスです。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This interface is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このインターフェイスは、アンマネージ コードからマネージ クラスには、アクセスをマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This interface preserves the vtable order of the &lt;xref:System.Reflection.EventInfo?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">このインターフェイスの vtable 順序の維持、&lt;xref:System.Reflection.EventInfo?displayProperty=fullName&gt;クラス メンバーのアンマネージ COM オブジェクトでアクセスできる&lt;/xref:System.Reflection.EventInfo?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.AddEventHandler*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.AddEventHandler*&gt;メソッド&lt;/xref:System.Reflection.EventInfo.AddEventHandler*&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.AddEventHandler%2A&gt; method adds an event handler to an event source.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.AddEventHandler%2A&gt;メソッドは、イベント ソースにイベント ハンドラーを追加します&lt;/xref:System.Reflection.EventInfo.AddEventHandler%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The event source.</source>
          <target state="translated">イベント ソース。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A method or methods to be invoked when the event is raised by the target.</source>
          <target state="translated">メソッドまたはイベントが、ターゲットで発生したときに呼び出されるメソッドをします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.Attributes*&gt; property.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.Attributes*&gt;プロパティ&lt;/xref:System.Reflection.EventInfo.Attributes*&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.Attributes%2A&gt; property gets the attributes for this event.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.Attributes%2A&gt;プロパティは、このイベントの属性を取得します&lt;/xref:System.Reflection.EventInfo.Attributes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The read-only attributes for this event.</source>
          <target state="translated">このイベントの読み取り専用属性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt;プロパティ&lt;/xref:System.Reflection.MemberInfo.DeclaringType*&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;プロパティは、このメンバーを宣言するクラスを取得します&lt;/xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the class that declares this member.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このメンバーを宣言するクラスのオブジェクト。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Object.Equals*&gt;メソッド&lt;/xref:System.Object.Equals*&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object.Equals%2A&gt;メソッドを判断するかどうか&lt;xref:System.Object&gt;が現在&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;と等しい&lt;/xref:System.Object&gt;の指定した&lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;現在&lt;xref:System.Object&gt;。&lt;/xref:System.Object&gt;と比較するには&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、指定した&lt;xref:System.Object&gt;が現在に等しい&lt;xref:System.Object&gt;、それ以外の<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; &lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.EventHandlerType*&gt; property.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.EventHandlerType*&gt;プロパティ&lt;/xref:System.Reflection.EventInfo.EventHandlerType*&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.EventHandlerType%2A&gt; property gets the &lt;xref:System.Type&gt; object of the underlying event-handler delegate associated with this event.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.EventHandlerType%2A&gt;プロパティを取得、&lt;xref:System.Type&gt;基になるイベント ハンドラー デリゲートのオブジェクトは、このイベントに関連付けられている&lt;/xref:System.Type&gt;&lt;/xref:System.Reflection.EventInfo.EventHandlerType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A read-only &lt;xref:System.Type&gt; object representing the delegate event handler.</source>
          <target state="translated">読み取り専用&lt;xref:System.Type&gt;デリゲート イベント ハンドラーを表すオブジェクト&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetAddMethod*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.GetAddMethod*&gt;メソッド&lt;/xref:System.Reflection.EventInfo.GetAddMethod*&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.GetAddMethod%2A&gt; method returns the method used to add an event-handler delegate to the event source.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.GetAddMethod%2A&gt;メソッドは、イベント ソースにイベント ハンドラー デリゲートを追加するために使用するメソッドを返します&lt;/xref:System.Reflection.EventInfo.GetAddMethod%2A&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object representing the method used to add an event-handler delegate to the event source.</source>
          <target state="translated">A&lt;xref:System.Reflection.MethodInfo&gt;イベント ソースにイベント ハンドラー デリゲートを追加するために使用するメソッドを表すオブジェクト&lt;/xref:System.Reflection.MethodInfo&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetAddMethod*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.GetAddMethod*&gt;メソッド&lt;/xref:System.Reflection.EventInfo.GetAddMethod*&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.GetAddMethod%2A&gt; method retrieves the &lt;xref:System.Reflection.MethodInfo&gt; object for the &lt;xref:System.Reflection.EventInfo.AddEventHandler%2A&gt; method of the event and specifies whether to return non-public methods</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.GetAddMethod%2A&gt;メソッドの取得、&lt;xref:System.Reflection.MethodInfo&gt;オブジェクトに対して、 &lt;xref:System.Reflection.EventInfo.AddEventHandler%2A&gt;、イベントのメソッドと非パブリック メソッドを返すかどうかを指定します&lt;/xref:System.Reflection.EventInfo.AddEventHandler%2A&gt;&lt;/xref:System.Reflection.MethodInfo&gt;&lt;/xref:System.Reflection.EventInfo.GetAddMethod%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to return non-public methods; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>返します。 非パブリック メソッドそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object representing the method used to add an event-handler delegate to the event source.</source>
          <target state="translated">A&lt;xref:System.Reflection.MethodInfo&gt;イベント ソースにイベント ハンドラー デリゲートを追加するために使用するメソッドを表すオブジェクト&lt;/xref:System.Reflection.MethodInfo&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;メソッド&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method retrieves the &lt;xref:System.Reflection.MethodInfo&gt; object for the &lt;xref:System.Reflection.EventInfo.AddEventHandler%2A&gt; method of the event and specifies whether to return non-public methods</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;メソッドの取得、&lt;xref:System.Reflection.MethodInfo&gt;オブジェクトに対して、 &lt;xref:System.Reflection.EventInfo.AddEventHandler%2A&gt;、イベントのメソッドと非パブリック メソッドを返すかどうかを指定します&lt;/xref:System.Reflection.EventInfo.AddEventHandler%2A&gt;&lt;/xref:System.Reflection.MethodInfo&gt;&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to search a member's inheritance chain to find the attributes; otherwise, false.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性を検索するメンバーの継承チェーンを検索それ以外の場合は false です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.</source>
          <target state="translated">すべてのカスタム属性を格納する配列。 または属性が定義されていない場合はゼロ (0) 要素を含む配列。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;メソッド&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; &lt;xref:System.Type&gt;。&lt;/xref:System.Type&gt;で識別されるカスタム属性の配列を返します&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The type of attribute to search for.</source>
          <target state="translated">検索対象の属性の型。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Only attributes that are assignable to this type are returned.</source>
          <target state="translated">この型に割り当てることができる属性だけが返されます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to search this member's inheritance chain to find the attributes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性を検索するこのメンバーの継承チェーンを検索するにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">このメンバーに適用されるカスタム属性の配列。 または属性が適用されていない場合はゼロ (0) 要素の配列。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Object.GetHashCode*&gt;メソッド&lt;/xref:System.Object.GetHashCode*&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;メソッドは、特定の型のハッシュ関数として機能します&lt;/xref:System.Object.GetHashCode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;ハッシュ テーブルなどのアルゴリズムとデータの構造体のハッシュでの使用に適しています。&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The hash code for the current instance.</source>
          <target state="translated">現在のインスタンスのハッシュ コード。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">一連の名前を対応する一連のディスパッチ識別子にマップします。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">詳細については<ph id="ph1">`IDispatch::GetIDsOfNames`</ph>、MSDN ライブラリを参照してください。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">将来の使用のために予約されています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">Iid_ にする必要があります。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An array of names to be mapped.</source>
          <target state="translated">割り当てる名前の配列。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The count of the names to be mapped.</source>
          <target state="translated">マップする名前の数。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">名前を解釈するロケール コンテキスト。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An array allocated by the caller that receives the identifiers corresponding to the names.</source>
          <target state="translated">名前に対応する識別子を受け取る、呼び出し元が割り当てた配列。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetRaiseMethod*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.GetRaiseMethod*&gt;メソッド&lt;/xref:System.Reflection.EventInfo.GetRaiseMethod*&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.GetRaiseMethod%2A&gt; method returns the method that is called when the event is raised.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.GetRaiseMethod%2A&gt;メソッドは、イベントが発生したときに呼び出されるメソッドを返します&lt;/xref:System.Reflection.EventInfo.GetRaiseMethod%2A&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The method that is called when the event is raised.</source>
          <target state="translated">イベントが発生したときに呼び出されるメソッド。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetRaiseMethod*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.GetRaiseMethod*&gt;メソッド&lt;/xref:System.Reflection.EventInfo.GetRaiseMethod*&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.GetRaiseMethod%2A&gt; method returns the method that is called when the event is raised and specifies whether to return non-public methods.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.GetRaiseMethod%2A&gt;メソッドは、イベントが発生し、非パブリック メソッドを返すかどうかを指定するときに呼び出されるメソッドを返します&lt;/xref:System.Reflection.EventInfo.GetRaiseMethod%2A&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to return non-public methods; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>返します。 非パブリック メソッドそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodInfo&gt; object that was called when the event was raised.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodInfo&gt;イベントが発生したときに呼び出されたオブジェクト&lt;/xref:System.Reflection.MethodInfo&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetRemoveMethod*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.GetRemoveMethod*&gt;メソッド&lt;/xref:System.Reflection.EventInfo.GetRemoveMethod*&gt;。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.GetRemoveMethod%2A&gt; method returns the method used to remove an event-handler delegate from the event source.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.GetRemoveMethod%2A&gt;メソッドは、イベント ソースからのイベント ハンドラー デリゲートの削除に使用するメソッドを返します&lt;/xref:System.Reflection.EventInfo.GetRemoveMethod%2A&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object representing the method used to remove an event-handler delegate from the event source.</source>
          <target state="translated">A&lt;xref:System.Reflection.MethodInfo&gt;イベント ハンドラー デリゲートをイベント ソースから削除するために使用するメソッドを表すオブジェクト&lt;/xref:System.Reflection.MethodInfo&gt;。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetRemoveMethod*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.GetRemoveMethod*&gt;メソッド&lt;/xref:System.Reflection.EventInfo.GetRemoveMethod*&gt;。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.GetRemoveMethod%2A&gt; method retrieves the &lt;xref:System.Reflection.MethodInfo&gt; object for removing a method of the event and specifies whether to return non-public methods.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.GetRemoveMethod%2A&gt;メソッドの取得、&lt;xref:System.Reflection.MethodInfo&gt;をイベントのメソッドを削除するオブジェクトし、非パブリック メソッドを返すかどうかを指定します&lt;/xref:System.Reflection.MethodInfo&gt;&lt;/xref:System.Reflection.EventInfo.GetRemoveMethod%2A&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to return non-public methods; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>返します。 非パブリック メソッドそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MethodInfo&gt; object representing the method used to remove an event-handler delegate from the event source.</source>
          <target state="translated">A&lt;xref:System.Reflection.MethodInfo&gt;イベント ハンドラー デリゲートをイベント ソースから削除するために使用するメソッドを表すオブジェクト&lt;/xref:System.Reflection.MethodInfo&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetType*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Object.GetType*&gt;メソッド&lt;/xref:System.Object.GetType*&gt;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object.GetType%2A&gt; method gets the type of the current instance.</source>
          <target state="translated">&lt;xref:System.Object.GetType%2A&gt;メソッドは、現在のインスタンスの型を取得します&lt;/xref:System.Object.GetType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object.</source>
          <target state="translated">A&lt;xref:System.Type&gt;オブジェクト&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Retrieves the type information for an object, which can be used to get the type information for an interface.</source>
          <target state="translated">インターフェイスの型情報を取得するために使用できるオブジェクトの型情報を取得します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">詳細については<ph id="ph1">`IDispatch::GetTypeInfo`</ph>、MSDN ライブラリを参照してください。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The type information to return.</source>
          <target state="translated">返される型情報。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The locale identifier for the type information.</source>
          <target state="translated">型情報のロケールの識別子です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A pointer to the requested type information object.</source>
          <target state="translated">要求された型情報オブジェクトへのポインター。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">オブジェクトが (0 または 1) を提供する型情報インターフェイスの数を取得します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">詳細については<ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>、MSDN ライブラリを参照してください。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">このメソッドが戻るときに、オブジェクトによって提供される型情報インターフェイスの数を受け取る場所へのポインターが含まれています。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">このパラメーターは初期化せずに渡されます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">プロパティとオブジェクトによって公開されたメソッドへのアクセスを提供します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">詳細については<ph id="ph1">`IDispatch::Invoke`</ph>、MSDN ライブラリを参照してください。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An identifier for the member.</source>
          <target state="translated">メンバーの識別子。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">将来の使用のために予約されています。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">Iid_ にする必要があります。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">引数を解釈する対象のロケール コンテキスト。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Flags describing the context of the call.</source>
          <target state="translated">呼び出しのコンテキストを記述するフラグ。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">引数の配列、名前付き引数、および各配列内の要素の数のカウントの引数 Dispid の配列を含む構造体へのポインター。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A pointer to the location where the result will be stored.</source>
          <target state="translated">結果を格納する場所へのポインター。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A pointer to a structure that contains exception information.</source>
          <target state="translated">例外情報を格納する構造体へのポインター。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">エラーが発生した最初の引数のインデックス。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.MemberInfo.IsDefined*&gt;メソッド&lt;/xref:System.Reflection.MemberInfo.IsDefined*&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; method indicates whether one or more instances of the <ph id="ph1">`attributeType`</ph> parameter are applied to this member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt;メソッドを示すかどうかの&amp;1; つまたは複数のインスタンス、<ph id="ph1">`attributeType`</ph>パラメーターは、このメンバーに適用されます&lt;/xref:System.Reflection.MemberInfo.IsDefined%2A&gt;。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to which the custom attributes are applied.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>カスタム属性が適用されるオブジェクトします。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to search this member's inheritance chain to find the attributes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>属性を検索するこのメンバーの継承チェーンを検索するにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if one or more instance of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">attributeType</ph><ept id="p2">&lt;/code&gt;</ept> parameter is applied to this member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合&amp;1; つ以上のインスタンス、 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">attributeType</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターがこのメンバーに適用されている、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.IsMulticast*&gt; property.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.IsMulticast*&gt;プロパティ&lt;/xref:System.Reflection.EventInfo.IsMulticast*&gt;。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.IsMulticast%2A&gt; property gets a value indicating whether the event is multicast.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.IsMulticast%2A&gt;プロパティは、イベントをマルチキャストであるかどうかを示す値を取得します&lt;/xref:System.Reflection.EventInfo.IsMulticast%2A&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the delegate is an instance of a multicast delegate; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>デリゲートがインスタンスのマルチキャスト デリゲート以外の場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.IsSpecialName*&gt; property.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.IsSpecialName*&gt;プロパティ&lt;/xref:System.Reflection.EventInfo.IsSpecialName*&gt;。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.IsSpecialName%2A&gt; property gets a value indicating whether the &lt;xref:System.Reflection.EventInfo&gt; object has a name with a special meaning.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.IsSpecialName%2A&gt;プロパティを示す値を取得するかどうか、&lt;xref:System.Reflection.EventInfo&gt;特別な意味を持つ名前が付きます&lt;/xref:System.Reflection.EventInfo&gt;&lt;/xref:System.Reflection.EventInfo.IsSpecialName%2A&gt;。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this event has a special name; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>このイベントは、特別な名前を持つ場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.MemberType*&gt; property.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.MemberType*&gt;プロパティ&lt;/xref:System.Reflection.EventInfo.MemberType*&gt;。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating that this member is an event.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.MemberType%2A&gt;プロパティを取得、&lt;xref:System.Reflection.MemberTypes&gt;このメンバーが、イベントであることを示す値&lt;/xref:System.Reflection.MemberTypes&gt;&lt;/xref:System.Reflection.EventInfo.MemberType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating that this member is an event.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このメンバーが、イベントであることを示す値。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.MemberInfo.Name*&gt;プロパティ&lt;/xref:System.Reflection.MemberInfo.Name*&gt;。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;プロパティは、現在のメンバーの名前を取得します&lt;/xref:System.Reflection.MemberInfo.Name%2A&gt;。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; object containing the name of this member.</source>
          <target state="translated">A&lt;xref:System.String&gt;このメンバーの名前を表すオブジェクト&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt;プロパティ&lt;/xref:System.Reflection.MemberInfo.ReflectedType*&gt;。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this instance.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;プロパティがこのインスタンスの取得に使用されたクラス オブジェクトを取得します&lt;/xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object that was used to obtain this object.</source>
          <target state="translated">&lt;xref:System.Type&gt;このオブジェクトを取得するために使用されたオブジェクト&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.RemoveEventHandler*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Reflection.EventInfo.RemoveEventHandler*&gt;メソッド&lt;/xref:System.Reflection.EventInfo.RemoveEventHandler*&gt;。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.EventInfo.RemoveEventHandler%2A&gt; method removes an event handler from an event source.</source>
          <target state="translated">&lt;xref:System.Reflection.EventInfo.RemoveEventHandler%2A&gt;メソッドは、イベント ソースからイベント ハンドラーを削除します&lt;/xref:System.Reflection.EventInfo.RemoveEventHandler%2A&gt;。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The event source.</source>
          <target state="translated">イベント ソース。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The delegate to be disassociated from the events raised by target.</source>
          <target state="translated">ターゲットによって生成されるイベントから関連付けを解除するデリゲート。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.</source>
          <target state="translated">COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、&lt;xref:System.Object.ToString*&gt;メソッド&lt;/xref:System.Object.ToString*&gt;。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A string that represents the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">現在&lt;xref:System.Object&gt;。&lt;/xref:System.Object&gt;を表す文字列です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>