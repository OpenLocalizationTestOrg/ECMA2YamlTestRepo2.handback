<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0e1caaa0dc89aa1f76ae5159557d531e52f15a0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.Timer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58efa2dba6b73dd78c9458ea030ed00f374e3296</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee10a7f1704f5daf93b1482b7d45c48a3d52dee9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements a timer that raises an event at user-defined intervals.</source>
          <target state="translated">ユーザー定義の間隔でイベントを発生させるタイマーを実装します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This timer is optimized for use in Windows Forms applications and must be used in a window.</source>
          <target state="translated">このタイマーは、Windows フォーム アプリケーションで用に最適化されていて、ウィンドウで使用する必要があります。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A Timer is used to raise an event at user-defined intervals.</source>
          <target state="translated">ユーザー定義の間隔でイベントを発生させるタイマーを使用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</source>
          <target state="translated">この Windows タイマーは、処理を実行する UI スレッドが使用されているシングル スレッドの環境に適しています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</source>
          <target state="translated">これには、ユーザー コードが使用可能な UI メッセージ ポンプと常に、同じスレッドから動作かいるを別のスレッドの呼び出しをマーシャ リングが必要です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When you use this timer, use the &lt;xref:System.Windows.Forms.Timer.Tick&gt; event to perform a polling operation or to display a splash screen for a specified period of time.</source>
          <target state="translated">このタイマーを使用してを使用して、&lt;xref:System.Windows.Forms.Timer.Tick&gt;ポーリング操作を実行する場合、または一定の時間のスプラッシュ画面を表示するイベントです&lt;/xref:System.Windows.Forms.Timer.Tick&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; property is set to <ph id="ph1">`true`</ph> and the &lt;xref:System.Windows.Forms.Timer.Interval%2A&gt; property is greater than zero, the &lt;xref:System.Windows.Forms.Timer.Tick&gt; event is raised at intervals based on the &lt;xref:System.Windows.Forms.Timer.Interval%2A&gt; property setting.</source>
          <target state="translated">たびに、&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;プロパティに設定されている<ph id="ph1">`true`</ph>と&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;プロパティは、ゼロより大きく、&lt;xref:System.Windows.Forms.Timer.Tick&gt;に基づいた間隔でイベントが発生、&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;プロパティの設定&lt;/xref:System.Windows.Forms.Timer.Interval%2A&gt;&lt;/xref:System.Windows.Forms.Timer.Tick&gt;&lt;/xref:System.Windows.Forms.Timer.Interval%2A&gt;&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This class provides methods to set the interval, and to start and stop the timer.</source>
          <target state="translated">このクラスは、間隔を設定および開始し、タイマーを停止するメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Windows フォームの Timer コンポーネントはシングル スレッドおよび 55 ミリ秒の精度に制限されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you require a multithreaded timer with greater accuracy, use the &lt;xref:System.Timers.Timer&gt; class in the &lt;xref:System.Timers&gt; namespace.</source>
          <target state="translated">精度の向上でマルチ スレッド タイマーを必要とする場合を使用して、&lt;xref:System.Timers.Timer&gt;クラス内で、&lt;xref:System.Timers&gt;名前空間&lt;/xref:System.Timers&gt;&lt;/xref:System.Timers.Timer&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When a new timer is created, it is disabled; that is, &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; is set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">新しいタイマーの作成時に無効です。つまり、&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;に設定されている<ph id="ph1">`false`</ph>&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To enable the timer, call the &lt;xref:System.Windows.Forms.Timer.Start%2A&gt; method or set &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">タイマーを有効にするを呼び出して、&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;メソッドまたはセット&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;に<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;&lt;/xref:System.Windows.Forms.Timer.Start%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</source>
          <target state="translated">場合は、タイマーが無効になり、タイマーがスコープ外には、ガベージ コレクションが発生すると、タイマーが破棄されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</source>
          <target state="translated">タイマーが有効な場合、スコープ外である場合でも、これはガベージ コレクションの対象とします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class together with the specified container.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と共に、指定されたコンテナー クラスです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.Timer&gt; constructor enables you to associate a &lt;xref:System.Windows.Forms.Timer&gt; with any &lt;xref:System.ComponentModel.Container&gt; object.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.Timer&gt;コンス トラクターは、関連付けることができます、&lt;xref:System.Windows.Forms.Timer&gt;いずれかを持つ&lt;xref:System.ComponentModel.Container&gt;オブジェクト&lt;/xref:System.ComponentModel.Container&gt;&lt;/xref:System.Windows.Forms.Timer&gt;&lt;/xref:System.Windows.Forms.Timer&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By associating the &lt;xref:System.Windows.Forms.Timer&gt; like this, you hand over control of the lifetime of the &lt;xref:System.Windows.Forms.Timer&gt; to the &lt;xref:System.ComponentModel.Container&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.Timer&gt; &lt;xref:System.Windows.Forms.Timer&gt; &lt;xref:System.ComponentModel.Container&gt;。&lt;/xref:System.ComponentModel.Container&gt;&lt;/xref:System.Windows.Forms.Timer&gt;の有効期間の制御を渡す、次のように&lt;/xref:System.Windows.Forms.Timer&gt;関連付けることによって</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</source>
          <target state="translated">これはする、アプリケーションでは多くのコンポーネントを使用していて、それらのすべてを同時に破棄する場合に役立ちます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, if you associate a &lt;xref:System.Windows.Forms.ToolTip&gt;, an &lt;xref:System.Windows.Forms.ImageList&gt;, and a &lt;xref:System.Windows.Forms.Timer&gt; with a &lt;xref:System.ComponentModel.Container&gt;, calling &lt;xref:System.ComponentModel.Container.Dispose%2A&gt; on the &lt;xref:System.ComponentModel.Container&gt; will force disposal of all of these components as well.</source>
          <target state="translated">関連付ける場合など、 &lt;xref:System.Windows.Forms.ToolTip&gt;、 &lt;xref:System.Windows.Forms.ImageList&gt;、および&lt;xref:System.Windows.Forms.Timer&gt;で、 &lt;xref:System.ComponentModel.Container&gt;、呼び出し元&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;で、&lt;xref:System.ComponentModel.Container&gt;が強制的にすべてのこれらのコンポーネントも破棄します&lt;/xref:System.ComponentModel.Container&gt;&lt;/xref:System.ComponentModel.Container.Dispose%2A&gt;&lt;/xref:System.ComponentModel.Container&gt;&lt;/xref:System.Windows.Forms.Timer&gt;&lt;/xref:System.Windows.Forms.ImageList&gt;&lt;/xref:System.Windows.Forms.ToolTip&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When a new timer is created, it is disabled; that is, &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; is set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">新しいタイマーの作成時に無効です。つまり、&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;に設定されている<ph id="ph1">`false`</ph>&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To enable the timer, call the &lt;xref:System.Windows.Forms.Timer.Start%2A&gt; method or set &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">タイマーを有効にするを呼び出して、&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;メソッドまたはセット&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;に<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;&lt;/xref:System.Windows.Forms.Timer.Start%2A&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This instance will exist until its container releases it to garbage collection.</source>
          <target state="translated">このインスタンスは、そのコンテナーがガベージ コレクションを解放するまでは存在します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the container for the timer.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>タイマーのコンテナーを表すです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Disposes of the resources, other than memory, used by the timer.</source>
          <target state="translated">タイマーによって使用されるメモリ以外のリソースを解放します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the timer.</source>
          <target state="translated">タイマーの使用が終了した場合は、Dispose を呼び出します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the timer in an unusable state.</source>
          <target state="translated">Dispose メソッドは、使用不可の状態タイマーを残します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>After you call Dispose, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">Dispose を呼び出した後が使用していたメモリをガベージ コレクションによって再要求できるように、このタイマーへのすべての参照を解放する必要があります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the timer.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 常に呼び出し、このタイマーへの最後の参照を解放する前に破棄します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</source>
          <target state="translated">それ以外の場合、ガベージ コレクションが、タイマー オブジェクトのデストラクターを呼び出すまで、タイマーを使用してリソースは解放されません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release only the unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the timer is running.</source>
          <target state="translated">取得またはタイマーが実行されているかどうかを設定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The timer is not subject to garbage collection when the value is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">タイマーがガベージ コレクションの対象と値が<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Calling the &lt;xref:System.Windows.Forms.Timer.Start%2A&gt; method is the same as setting Enabled to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">呼び出す、&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;メソッドは、有効に設定と同じ<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.Timer.Start%2A&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Likewise, calling the &lt;xref:System.Windows.Forms.Timer.Stop%2A&gt; method is the same as setting Enabled to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">同様に、呼び出し、&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;メソッドは、有効に設定と同じ<ph id="ph1">`false`</ph>&lt;/xref:System.Windows.Forms.Timer.Stop%2A&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the timer is currently enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>タイマーが現在有効である場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the time, in milliseconds, before the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised relative to the last occurrence of the <bpt id="p2">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">取得または設定の時間 (ミリ秒単位) 前に、 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベントは、最後に見つかった位置の基準とした、 <bpt id="p2">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To get the number of seconds in the interval, divide this number by 1,000.</source>
          <target state="translated">間隔の秒数を取得するには、1,000 でこの数値を除算します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; specifying the number of milliseconds before the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event is raised relative to the last occurrence of the <bpt id="p2">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">&lt;xref:System.Int32&gt;までのミリ秒数を指定する、 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベントは、最後に見つかった位置の基準とした、 <bpt id="p2">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>イベント&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The value cannot be less than one.</source>
          <target state="translated">値は、1 より小さくすることはできません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">発生させる、 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer.Tick"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This method is called for each timer tick.</source>
          <target state="translated">このメソッドは、タイマー刻みごとに呼び出されます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It calls any methods that are added through &lt;xref:System.Windows.Forms.Timer.Tick&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.Timer.Tick&gt;。&lt;/xref:System.Windows.Forms.Timer.Tick&gt;を介して追加された任意のメソッドを呼び出します</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If you are inheriting from &lt;xref:System.Windows.Forms.Timer&gt;, you can override this method.</source>
          <target state="translated">継承している場合&lt;xref:System.Windows.Forms.Timer&gt;、このメソッドをオーバーライドすることができます&lt;/xref:System.Windows.Forms.Timer&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;イベント データを格納します&lt;/xref:System.EventArgs&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This is always &lt;xref:System.EventArgs&gt;.</source>
          <target state="translated">これは常に&lt;xref:System.EventArgs&gt;.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Starts the timer.</source>
          <target state="translated">タイマーを開始します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can also start the timer by setting the &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定して、タイマーを開始することもできます、&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;プロパティを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Stops the timer.</source>
          <target state="translated">タイマーを停止します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can also stop the timer by setting the &lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">設定して、タイマーを停止することも、&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;プロパティを<ph id="ph1">`false`</ph>&lt;/xref:System.Windows.Forms.Timer.Enabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Forms.Timer&gt; object may be enabled and disabled multiple times within the same application session.</source>
          <target state="translated">A&lt;xref:System.Windows.Forms.Timer&gt;オブジェクトを有効になっているし、同じアプリケーションのセッション内で複数回無効になっている可能性があります&lt;/xref:System.Windows.Forms.Timer&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Calling &lt;xref:System.Windows.Forms.Timer.Start%2A&gt; after you have disabled a &lt;xref:System.Windows.Forms.Timer&gt; by calling Stop will cause the &lt;xref:System.Windows.Forms.Timer&gt; to restart the interrupted interval.</source>
          <target state="translated">呼び出す&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;を無効にした後、&lt;xref:System.Windows.Forms.Timer&gt;停止すると、呼び出すことによって、&lt;xref:System.Windows.Forms.Timer&gt;中断の間隔を再起動します&lt;/xref:System.Windows.Forms.Timer&gt;&lt;/xref:System.Windows.Forms.Timer&gt;&lt;/xref:System.Windows.Forms.Timer.Start%2A&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If your &lt;xref:System.Windows.Forms.Timer&gt; is set for a 5000-millisecond interval, and you call Stop at around 3000 milliseconds, calling &lt;xref:System.Windows.Forms.Timer.Start%2A&gt; will cause the &lt;xref:System.Windows.Forms.Timer&gt; to wait 5000 milliseconds before raising the &lt;xref:System.Windows.Forms.Timer.Tick&gt; event.</source>
          <target state="translated">場合、 &lt;xref:System.Windows.Forms.Timer&gt;5000 ミリ秒に設定されているを呼び出す Stop 約 3000 (ミリ秒単位) を呼び出して&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;により、 &lt;xref:System.Windows.Forms.Timer&gt;5000 ミリ秒を発生させる前に待機する、&lt;xref:System.Windows.Forms.Timer.Tick&gt;イベント&lt;/xref:System.Windows.Forms.Timer.Tick&gt;&lt;/xref:System.Windows.Forms.Timer&gt;&lt;/xref:System.Windows.Forms.Timer.Start%2A&gt;&lt;/xref:System.Windows.Forms.Timer&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Calling Stop on any &lt;xref:System.Windows.Forms.Timer&gt; within a Windows Forms application can cause messages from other &lt;xref:System.Windows.Forms.Timer&gt; components in the application to be processed immediately, because all &lt;xref:System.Windows.Forms.Timer&gt; components operate on the main application thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; を呼び出すと、いずれかで停止&lt;xref:System.Windows.Forms.Timer&gt;Windows フォーム内でアプリケーションを与えるメッセージを他の&lt;xref:System.Windows.Forms.Timer&gt;ので、すぐに処理するアプリケーションのコンポーネントすべて&lt;xref:System.Windows.Forms.Timer&gt;コンポーネントがメイン アプリケーション スレッドで動作します&lt;/xref:System.Windows.Forms.Timer&gt;&lt;/xref:System.Windows.Forms.Timer&gt;&lt;/xref:System.Windows.Forms.Timer&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you have two &lt;xref:System.Windows.Forms.Timer&gt; components, one set to 700 milliseconds and one set to 500 milliseconds, and you call Stop on the first &lt;xref:System.Windows.Forms.Timer&gt;, your application may receive an event callback for the second component first.</source>
          <target state="translated">2 つある&lt;xref:System.Windows.Forms.Timer&gt;コンポーネント、700 ミリ秒、500 (ミリ秒単位) を 1 つのセットを 1 つ設定し、最初の停止を呼び出す&lt;xref:System.Windows.Forms.Timer&gt;、アプリケーションが最初の 2 番目のコンポーネントのイベント コールバックを受信する可能性があります&lt;/xref:System.Windows.Forms.Timer&gt;&lt;/xref:System.Windows.Forms.Timer&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If this proves problematic, consider using the &lt;xref:System.Threading.Timer&gt; class in the &lt;xref:System.Threading&gt; namespace instead.</source>
          <target state="translated">問題があることを証明している場合は、使用を検討して、&lt;xref:System.Threading.Timer&gt;クラス内で、&lt;xref:System.Threading&gt;名前空間代わりにします&lt;/xref:System.Threading&gt;&lt;/xref:System.Threading.Timer&gt;。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets an arbitrary string representing some type of user state.</source>
          <target state="translated">取得またはいくつかの種類のユーザー状態を表す任意の文字列を設定します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An arbitrary string representing some type of user state.</source>
          <target state="translated">ユーザー状態のいくつかの型を表す任意の文字列。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Occurs when the specified timer interval has elapsed and the timer is enabled.</source>
          <target state="translated">指定したタイマーの間隔が経過し、タイマーが有効になっているときに発生します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Calling the &lt;xref:System.Diagnostics.Debug.Assert%2A&gt; method on the &lt;xref:System.Diagnostics.Debug&gt; class from within the Tick event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the Tick event repeatedly.</source>
          <target state="translated">呼び出す、&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;メソッドを&lt;xref:System.Diagnostics.Debug&gt;Tick イベント内からクラスが予想どおりに動作しない可能性があります、アサーションのダイアログを表示するボックスを繰り返し、Tick イベントを発生させる Windows が発生する可能性があります&lt;/xref:System.Diagnostics.Debug&gt;&lt;/xref:System.Diagnostics.Debug.Assert%2A&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>We recommend that you refrain from testing assertions within this event, and use the &lt;xref:System.Diagnostics.Debug.Write%2A&gt;, &lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;, &lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;, or &lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt; methods instead.</source>
          <target state="translated">このイベントの中でアサーションをテストしないようにして、使用することをお勧め、 &lt;xref:System.Diagnostics.Debug.Write%2A&gt;、 &lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;、 &lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;、または&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;メソッド代わりにします&lt;/xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;&lt;/xref:System.Diagnostics.Debug.WriteLine%2A&gt;&lt;/xref:System.Diagnostics.Debug.WriteIf%2A&gt;&lt;/xref:System.Diagnostics.Debug.Write%2A&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">表す文字列を返します、 <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The ToString method returns a string that includes the value of the &lt;xref:System.Windows.Forms.Timer.Interval%2A&gt; property.</source>
          <target state="translated">ToString メソッドの値を含む文字列を返します、&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;プロパティ&lt;/xref:System.Windows.Forms.Timer.Interval%2A&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A string that represents the current <bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">現在を表す文字列<bpt id="p1">&lt;xref href="System.Windows.Forms.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>