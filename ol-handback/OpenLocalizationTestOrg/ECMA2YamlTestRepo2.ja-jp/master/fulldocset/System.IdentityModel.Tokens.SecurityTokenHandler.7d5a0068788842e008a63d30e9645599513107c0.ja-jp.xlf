<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4eea9ca7e256bdd61e34750d92d12a051dcbb496</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.SecurityTokenHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d06a0b9ec0c9abb5ed0dc904b92734bc110ed4c1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">661aa9254f1a9b6259e85a32c3b0fb97514defd4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The abstract base class for security token handlers.</source>
          <target state="translated">セキュリティ トークン ハンドラーの抽象基本クラス。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Called from constructors in derived classes to initialize the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初期化するために派生クラスのコンス トラクターから呼び出される、 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</source>
          <target state="translated">指定した XML リーダーがこのインスタンスで逆シリアル化するキー識別子句で参照される XML 要素かどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`false`</ph> to indicate that the key identifier clause cannot be read.</source>
          <target state="translated">既定の実装を返します<ph id="ph1">`false`</ph>を示すキー識別子句を読み取ることができません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</source>
          <target state="translated">派生クラスでは、インスタンスがキー識別句を逆シリアル化できるかどうかを判断するため、リーダーが参照している要素を確認します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This is typically accomplished through a call to the &lt;xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=fullName&gt; method with the appropriate element and namespace strings specified.</source>
          <target state="translated">呼び出すことによってこれは通常、&lt;xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=fullName&gt;メソッドを適切な要素と名前空間文字列を指定します&lt;/xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you override CanReadKeyIdentifierClause, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt; method to provide the logic to deserialize the key identifier clause.</source>
          <target state="translated">オーバーライドも CanReadKeyIdentifierClause をオーバーライドする場合、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt;キー識別子句を逆シリアル化するためのロジックを提供するメソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element.</source>
          <target state="translated">開始要素に配置されている XML リーダーです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The reader should not be advanced by this method.</source>
          <target state="translated">リーダーは、このメソッドでない高度な必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause*&gt; method can read the element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause*&gt;メソッドは、要素を読み取ることができますそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause*&gt; 。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</source>
          <target state="translated">このインスタンスによって処理された種類のトークンとして、指定した文字列を逆シリアル化できるかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定の実装を常に返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you override this method, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method to provide the logic to deserialize the token.</source>
          <target state="translated">オーバーライドもこのメソッドをオーバーライドする場合、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;トークンを逆シリアル化するためのロジックを提供するメソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The token string to read.</source>
          <target state="translated">読み取るトークン文字列。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method can read the element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>メソッドは、要素を読み取ることができます。 それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</source>
          <target state="translated">このインスタンスによって処理された種類のトークンとして指定された XML リーダーで参照される XML 要素を読み取ることができるかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定の実装を常に返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</source>
          <target state="translated">派生クラスでは、インスタンスが、セキュリティ トークンを逆シリアル化できるかどうかを判断するため、リーダーが参照している要素を確認します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is typically accomplished through a call to the &lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt; method with the appropriate element and namespace strings specified.</source>
          <target state="translated">呼び出すことによってこれは通常、&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;メソッドを適切な要素と名前空間文字列を指定します&lt;/xref:System.Xml.XmlReader.IsStartElement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you override &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method or the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method to provide the logic to deserialize the key identifier clause.</source>
          <target state="translated">オーバーライドする場合&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;、上書きすることも必要があります、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;メソッドまたは&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;キー識別子句を逆シリアル化するためのロジックを提供するメソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at a start element.</source>
          <target state="translated">開始要素に配置されている XML リーダーです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The reader should not be advanced by this method.</source>
          <target state="translated">リーダーは、このメソッドでない高度な必要があります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method can read the element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <ph id="ph1">&amp;lt;</ph>xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>メソッドは、要素を読み取ることができます。 それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the handler supports validation of security tokens.</source>
          <target state="translated">ハンドラーがセキュリティ トークンの検証をサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To implement validation in a derived class, override this property to return <ph id="ph1">`true`</ph> and override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt; method to implement the validation logic.</source>
          <target state="translated">派生クラスでは、検証を実装を返すには、このプロパティをオーバーライド<ph id="ph1">`true`</ph>をオーバーライドし、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;検証ロジックを実装するメソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the class is capable of validating security tokens; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>クラスがセキュリティ トークンを検証できる場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</source>
          <target state="translated">このインスタンスで、指定したキー識別子句をシリアル化できるかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定の実装を常に返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you override CanWriteKeyIdentifierClause, you must also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt; method to provide the logic to serialize the key identifier clause.</source>
          <target state="translated">オーバーライドも CanWriteKeyIdentifierClause をオーバーライドする場合、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt;キー識別子句をシリアル化するためのロジックを提供するメソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The key identifier clause to be checked.</source>
          <target state="translated">チェックするキー識別句。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the key identifier clause can be serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>キー識別子句をシリアル化する場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the handler can serialize security tokens.</source>
          <target state="translated">ハンドラーがセキュリティ トークンをシリアル化できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To implement serialization in a derived class, override this property to return <ph id="ph1">`true`</ph> and override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt; methods to implement the serialization logic.</source>
          <target state="translated">派生クラスでシリアル化を実装するには、このプロパティを返すをオーバーライド<ph id="ph1">`true`</ph>をオーバーライドし、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;をシリアル化ロジックを実装するメソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the class is capable of serializing tokens; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>クラスはトークンをシリアル化できる場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that provides configuration for the current instance.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在のインスタンスの構成を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The configuration object for the current instance.</source>
          <target state="translated">現在のインスタンスに対する構成オブジェクト。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the token handler collection that contains the current instance.</source>
          <target state="translated">現在のインスタンスを含んだトークン ハンドラーのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When the token handler is added to a &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt; instance, this property is automatically set.</source>
          <target state="translated">トークン ハンドラーを追加するときに、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;インスタンスでは、このプロパティは自動的に設定します&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The token handler collection that contains the current instance.</source>
          <target state="translated">現在のインスタンスを含むトークン ハンドラーのコレクションです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates the security token reference for tokens processed by that class.</source>
          <target state="translated">派生クラスでオーバーライドされると、そのクラスによって処理されたトークンのセキュリティ トークンへの参照を作成します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This method is typically called by a security token service (STS).</source>
          <target state="translated">このメソッドは通常、セキュリティ トークン サービス (STS) によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">既定では、このメソッドをスロー、&lt;xref:System.NotImplementedException&gt;例外です&lt;/xref:System.NotImplementedException&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Derived classes override this method to return a key identifier clause (&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;) that can be used to create a <ph id="ph1">`&lt;wsse:SecurityTokenReference&gt;`</ph> element for the specified token.</source>
          <target state="translated">派生クラスをキー識別子句を返すには、このメソッドをオーバーライドする (&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;) の作成に使用できる、<ph id="ph1">`&lt;wsse:SecurityTokenReference&gt;`</ph>指定したトークンの要素&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Called from implementations of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService&gt;クラス&lt;/xref:System.IdentityModel.SecurityTokenService&gt;の実装から呼び出されます</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt; does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">通常、 &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;、以外のときに使用される、カスタム セキュリティ トークン サービスが作成される必要はありません&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">セキュリティ トークン サービスには、セキュリティ トークンが返される、ときに、発行されたセキュリティ トークンには、接続されており、結び付けられていないセキュリティ トークンへの参照が含まれています。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</source>
          <target state="translated">アタッチされた参照が SOAP メッセージのセキュリティ ヘッダー内に含まれるセキュリティ トークンを参照し、結び付けられていない参照が SOAP メッセージのセキュリティ ヘッダーに含まれていないセキュリティ トークンを参照します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">これらの参照は、通常、発行されたセキュリティ トークンの信頼性を確認します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The token for which the reference is to be created.</source>
          <target state="translated">対象の参照を作成するトークンです。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if an attached reference should be created; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if an unattached reference should be created.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>アタッチされた参照を作成する場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>結び付けられていない参照を作成する場合。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A key identifier clause that references the specified token.</source>
          <target state="translated">指定したトークンを参照するキー識別句。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a security token using the specified token descriptor.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定されたトークンの記述子を使用して、セキュリティ トークンを作成します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This method is called by a security token service (STS).</source>
          <target state="translated">このメソッドは、セキュリティ トークン サービス (STS) によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">既定では、このメソッドをスロー、&lt;xref:System.NotImplementedException&gt;例外です&lt;/xref:System.NotImplementedException&gt;。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Called from implementations of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService&gt;クラス&lt;/xref:System.IdentityModel.SecurityTokenService&gt;の実装から呼び出されます</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The security token descriptor from which the token is to be created.</source>
          <target state="translated">元のトークンを作成するセキュリティ トークン記述子。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Properties of the token descriptor are set before this method is called.</source>
          <target state="translated">このメソッドが呼び出される前に、トークンの記述子のプロパティが設定されます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A security token that matches the properties of the token descriptor.</source>
          <target state="translated">トークンの記述子のプロパティに一致するセキュリティ トークンです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</source>
          <target state="translated">派生クラスでオーバーライドされると、再生されると、指定されたトークンが検出された場合、例外をスローします。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The token to check for replay.</source>
          <target state="translated">再生をチェックするトークンです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</source>
          <target state="translated">派生クラスでオーバーライドされると、派生クラスによって処理された種類のトークンを識別する要求で使用される Uri のセットを返します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the token processed by the current instance is accessed through the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Type&gt;の現在のインスタンスによって処理されたトークンを介してアクセスは、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt;プロパティ&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A&gt;&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The GetTokenTypeIdentifiers method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</source>
          <target state="translated">GetTokenTypeIdentifiers メソッドは、トークンの種類を参照してくださいへのメッセージで使用できる許容可能な識別子のセットを返します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, the URI value used in the <ph id="ph1">`&lt;wst:TokenType&gt;`</ph> element under the <ph id="ph2">`&lt;wst:RequestSecurityToken&gt;`</ph> element to request a specific kind of token (represented by the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=fullName&gt; property in the object model).</source>
          <target state="translated">URI 値を使用するなど、<ph id="ph1">`&lt;wst:TokenType&gt;`</ph>要素の下、<ph id="ph2">`&lt;wst:RequestSecurityToken&gt;`</ph>特定の種類のトークンを要求する要素 (によって表される、&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=fullName&gt;オブジェクト モデルのプロパティ).&lt;/xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The set of URIs that identify the token type that this handler supports.</source>
          <target state="translated">このハンドラーがサポート トークンの種類を識別する Uri のセット。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, loads custom configuration from XML.</source>
          <target state="translated">派生クラスでオーバーライドされると、XML からカスタム構成を読み込みます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The configuration XML elements.</source>
          <target state="translated">構成 XML 要素です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Each node in the list is of type <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">型のリスト内の各ノードは、 <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</source>
          <target state="translated">派生クラスでオーバーライドされると、派生クラスによって処理されたトークンを参照するキー識別子句を指定した XML リーダーによって参照される XML に逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">既定では、このメソッドをスロー、&lt;xref:System.NotImplementedException&gt;例外です&lt;/xref:System.NotImplementedException&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to deserialize a key identifier clause from XML.</source>
          <target state="translated">XML からのキー識別子句を逆シリアル化するためのロジックを提供するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、上書きすることがも、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</source>
          <target state="translated">キー識別句に逆シリアル化する XML の開始要素に配置されている XML リーダーです。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The key identifier clause that was deserialized from the XML.</source>
          <target state="translated">XML から逆シリアル化されたキー識別句。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</source>
          <target state="translated">派生クラスでオーバーライドされると、派生クラスによって処理された種類のトークンに指定した文字列を逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 信頼できないデータをこのメソッドを呼び出すと、セキュリティ上のリスクです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Call this method only with trusted data.</source>
          <target state="translated">このメソッドでは、信頼されたデータだけです。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>信頼されていないデータのセキュリティ リスク<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">既定では、このメソッドをスロー、&lt;xref:System.NotImplementedException&gt;例外です&lt;/xref:System.NotImplementedException&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Override this method to provide functionality that can deserialize a security token from a string.</source>
          <target state="translated">文字列からセキュリティ トークンを逆シリアル化できる機能を提供するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If you override, this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">またをオーバーライドする必要がある、このメソッドをオーバーライドする場合、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The string to be deserialized.</source>
          <target state="translated">逆シリアル化する文字列。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The security token that was deserialized from the specified string.</source>
          <target state="translated">指定した文字列から逆シリアル化されたセキュリティ トークンです。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</source>
          <target state="translated">派生クラスでオーバーライドされると、派生クラスによって処理された種類のトークンに指定された XML リーダーで参照されている XML を逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 信頼できないデータをこのメソッドを呼び出すと、セキュリティ上のリスクです。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Call this method only with trusted data.</source>
          <target state="translated">このメソッドでは、信頼されたデータだけです。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>信頼されていないデータのセキュリティ リスク<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">既定では、このメソッドをスロー、&lt;xref:System.NotImplementedException&gt;例外です&lt;/xref:System.NotImplementedException&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to deserialize a security token from XML.</source>
          <target state="translated">XML からセキュリティ トークンを逆シリアル化するためのロジックを提供するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">またをオーバーライドする必要があるこのメソッドをオーバーライドする場合、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an &lt;xref:System.Xml.XmlException&gt;.</source>
          <target state="translated">通常、派生クラスでメソッドが参照先の XML からトークンを逆シリアル化できませんスロー &lt;xref:System.Xml.XmlException&gt;。&lt;/xref:System.Xml.XmlException&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the token.</source>
          <target state="translated">トークンの開始要素に配置されている XML リーダーです。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The security token that was deserialized from the XML.</source>
          <target state="translated">XML から逆シリアル化されたセキュリティ トークンです。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定のトークン リゾルバーを使用して、派生クラスによって処理された種類のトークンに指定された XML リーダーで参照されている XML を逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 信頼できないデータをこのメソッドを呼び出すと、セキュリティ上のリスクです。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Call this method only with trusted data.</source>
          <target state="translated">このメソッドでは、信頼されたデータだけです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>信頼されていないデータのセキュリティ リスク<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The default implementation ignores the <ph id="ph1">`tokenResolver`</ph> parameter and delegates the call to the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">既定の実装は無視されます、<ph id="ph1">`tokenResolver`</ph>パラメーターに呼び出しを代行し、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to deserialize a security token from XML.</source>
          <target state="translated">XML からセキュリティ トークンを逆シリアル化するためのロジックを提供するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">またをオーバーライドする必要があるこのメソッドをオーバーライドする場合、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an &lt;xref:System.Xml.XmlException&gt;.</source>
          <target state="translated">通常、派生クラスでメソッドが参照先の XML からトークンを逆シリアル化できませんスロー &lt;xref:System.Xml.XmlException&gt;。&lt;/xref:System.Xml.XmlException&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the token.</source>
          <target state="translated">トークンの開始要素に配置されている XML リーダーです。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A token resolver that contains out-of-band and cached tokens.</source>
          <target state="translated">帯域外のおよびキャッシュされたトークンを含むトークン リゾルバー。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The security token that was deserialized from the XML.</source>
          <target state="translated">XML から逆シリアル化されたセキュリティ トークンです。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the type of the security token that is processed by this instance.</source>
          <target state="translated">派生クラスでオーバーライドされると、このインスタンスによって処理されるセキュリティ トークンの種類を取得します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You must override this property in derived classes and return the &lt;xref:System.Type&gt; of the security token (&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;) that is processed by the derived class.</source>
          <target state="translated">派生クラスでは、このプロパティをオーバーライドし、返す必要があります、 &lt;xref:System.Type&gt;、セキュリティ トークンの (&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;) は、派生クラスによって処理される&lt;/xref:System.IdentityModel.Tokens.SecurityToken&gt;&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The type of the security token that is processed by this instance.</source>
          <target state="translated">このインスタンスによって処理されるセキュリティ トークンの種類。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Traces the failure event during the validation of security tokens when tracing is enabled.</source>
          <target state="translated">トレースが有効な場合は、セキュリティ トークンの検証中にエラー イベントをトレースします。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This method should be called from the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt; method when validation of the token fails.</source>
          <target state="translated">このメソッドを呼び出す必要があります、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;メソッドは、トークンの検証が失敗したとします&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The security token that is being validated.</source>
          <target state="translated">検証されているセキュリティ トークンです。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The message to write to the trace.</source>
          <target state="translated">トレースに書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Traces the successful validation of security tokens event when tracing is enabled.</source>
          <target state="translated">セキュリティ トークンのイベント トレースが有効な場合の検証が成功したをトレースします。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This method should be called from the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt; method after the token has been successfully validated.</source>
          <target state="translated">このメソッドを呼び出す必要があります、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;メソッド トークンが正常に検証された後にします&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The token that was validated.</source>
          <target state="translated">検証されたトークンです。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, validates the specified security token.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定したセキュリティ トークンを検証します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">派生クラスによって処理された種類のトークンがあります。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The token to validate.</source>
          <target state="translated">検証トークンです。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The identities contained in the token.</source>
          <target state="translated">トークンに含まれている識別情報。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the specified key identifier clause to XML.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定したキー識別子句を XML にシリアル化します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The key identifier clause must be of the type supported by the derived class.</source>
          <target state="translated">キー識別子句は、派生クラスでサポートされる型でなければなりません。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">既定では、このメソッドをスロー、&lt;xref:System.NotImplementedException&gt;例外です&lt;/xref:System.NotImplementedException&gt;。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to serialize a key identifier clause to XML.</source>
          <target state="translated">キー識別子句で xml をシリアル化するためのロジックを提供するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt; method.</source>
          <target state="translated">またをオーバーライドする必要があるこのメソッドをオーバーライドする場合、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;メソッド&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A&gt;。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The XML writer.</source>
          <target state="translated">XML ライター。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The key identifier clause to serialize.</source>
          <target state="translated">シリアル化するキー識別句。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the specified security token to a string.</source>
          <target state="translated">派生クラスでオーバーライドされると、文字列に指定されたセキュリティ トークンをシリアル化します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">派生クラスによって処理された種類のトークンがあります。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">既定では、このメソッドをスロー、&lt;xref:System.NotImplementedException&gt;例外です&lt;/xref:System.NotImplementedException&gt;。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to serialize a security token to XML.</source>
          <target state="translated">XML のセキュリティ トークンをシリアル化するためのロジックを提供するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt; property.</source>
          <target state="translated">またをオーバーライドする必要があるこのメソッドをオーバーライドする場合、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;プロパティ&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The token to serialize.</source>
          <target state="translated">シリアル化するトークンです。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The serialized token.</source>
          <target state="translated">シリアル化されたトークンです。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the specified security token to XML.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定したセキュリティ トークンを XML にシリアル化します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The token must be of the type processed by the derived class.</source>
          <target state="translated">派生クラスによって処理された種類のトークンがあります。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>By default this method throws a &lt;xref:System.NotImplementedException&gt; exception.</source>
          <target state="translated">既定では、このメソッドをスロー、&lt;xref:System.NotImplementedException&gt;例外です&lt;/xref:System.NotImplementedException&gt;。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Override this method to provide the logic to serialize a security token to XML.</source>
          <target state="translated">XML のセキュリティ トークンをシリアル化するためのロジックを提供するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If you override this method, you should also override the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt; property.</source>
          <target state="translated">またをオーバーライドする必要があるこのメソッドをオーバーライドする場合、&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;プロパティ&lt;/xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A&gt;。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The XML writer.</source>
          <target state="translated">XML ライター。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The token to serialize.</source>
          <target state="translated">シリアル化するトークンです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>