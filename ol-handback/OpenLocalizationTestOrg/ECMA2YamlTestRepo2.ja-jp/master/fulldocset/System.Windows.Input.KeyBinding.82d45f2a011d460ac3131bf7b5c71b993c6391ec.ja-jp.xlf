<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e12b67e3363bc166f85cfceac6136b54a050a732</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Input.KeyBinding.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d61bb74c8a7d053f9a80cd158e2a2f047323f56b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">274aa9ef36f74383e012c9a0e35d9a2d33eae109</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Binds a <bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a <bpt id="p2">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> (or another  &lt;xref:System.Windows.Input.ICommand&gt; implementation).</source>
          <target state="translated">バインド、 <bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を<bpt id="p2">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> (または別&lt;xref:System.Windows.Input.ICommand&gt;実装).&lt;/xref:System.Windows.Input.ICommand&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A KeyBinding associates a &lt;xref:System.Windows.Input.KeyGesture&gt; with a &lt;xref:System.Windows.Input.ICommand&gt;, such as a &lt;xref:System.Windows.Input.RoutedCommand&gt;.</source>
          <target state="translated">キーの割り当てに関連付けます、&lt;xref:System.Windows.Input.KeyGesture&gt;で、 &lt;xref:System.Windows.Input.ICommand&gt;、 &lt;xref:System.Windows.Input.RoutedCommand&gt;.&lt;/xref:System.Windows.Input.RoutedCommand&gt;など&lt;/xref:System.Windows.Input.ICommand&gt;&lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Input.RoutedCommand&gt; is the primary implementation of the &lt;xref:System.Windows.Input.ICommand&gt; interface for the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> commanding system .</source>
          <target state="translated">&lt;xref:System.Windows.Input.RoutedCommand&gt;プライマリの実装、&lt;xref:System.Windows.Input.ICommand&gt;のためのインターフェイス、<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>システムのコマンドを実行します&lt;/xref:System.Windows.Input.ICommand&gt;。&lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In general, when the &lt;xref:System.Windows.Input.KeyGesture&gt; is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the &lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt; value.</source>
          <target state="translated">通常、&lt;xref:System.Windows.Input.KeyGesture&gt;が実行されるコマンドが呼び出されるコマンドの動作は、さらに影響を受けるコマンド固有の要因によってなどが、&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;値&lt;/xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;&lt;/xref:System.Windows.Input.KeyGesture&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information on commanding, see the <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">コマンド実行の詳細については、次を参照してください。、<bpt id="p1">[</bpt>コマンド実行の概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>With the exception of the function keys and the numeric keypad keys, a valid &lt;xref:System.Windows.Input.KeyGesture&gt; must contain exactly one &lt;xref:System.Windows.Input.Key&gt; and one or more &lt;xref:System.Windows.Input.ModifierKeys&gt;.</source>
          <target state="translated">ファンクション キーと、テンキーのキーを有効なを除き&lt;xref:System.Windows.Input.KeyGesture&gt;1 つだけ含める必要があります&lt;xref:System.Windows.Input.Key&gt;と&amp;1; つまたは複数&lt;xref:System.Windows.Input.ModifierKeys&gt;.&lt;/xref:System.Windows.Input.ModifierKeys&gt; &lt;/xref:System.Windows.Input.Key&gt; &lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Function keys and numeric keypad keys do not require a modifier key in order to be a valid &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">ファンクション キーおよびテンキーのキーは必要ありません修飾子キーの有効な&lt;xref:System.Windows.Input.KeyGesture&gt;。&lt;/xref:System.Windows.Input.KeyGesture&gt;をするために</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It is possible to specify an invalid &lt;xref:System.Windows.Input.KeyGesture&gt; and a KeyBinding with an invalid associated gesture, either through <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> or code.</source>
          <target state="translated">無効なを指定することは&lt;xref:System.Windows.Input.KeyGesture&gt;とキーの割り当てに使用するか無効な関連付けられているジェスチャ、<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>またはコード&lt;/xref:System.Windows.Input.KeyGesture&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For instance, there is no validation that prevents creating and binding a &lt;xref:System.Windows.Input.KeyGesture&gt; that contains only a nonfunction key, or only modifiers but no key.</source>
          <target state="translated">インスタンスを作成してバインドを妨げる検証は行われません、&lt;xref:System.Windows.Input.KeyGesture&gt;修飾子がキーなし、またはのみ以外キーのみを格納している&lt;/xref:System.Windows.Input.KeyGesture&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Such a KeyBinding will never attempt to invoke its associated command.</source>
          <target state="translated">このようなキーの割り当ては、その関連付けられたコマンドを呼び出すことはありません試みます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When defining a KeyBinding in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">キーの割り当てを定義するときに<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> &lt;xref:System.Windows.Input.KeyGesture&gt;.&lt;/xref:System.Windows.Input.KeyGesture&gt;を指定する&amp;2; つの方法</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The first way to establish a KeyBinding in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> is to define the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute of the KeyBinding element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">最初の方法でキーの割り当てを確立するために<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>を定義するのには、&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;により、キーと修飾子を&amp;1; つの文字列、たとえば"CTRL + P"として指定する構文、keybinding を割り当てる要素の属性です&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The second way is to define the &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt; attribute and the &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt; attributes of the KeyBinding element.</source>
          <target state="translated">2 番目の方法は、定義する、&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;属性および&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;keybinding を割り当てる要素の属性です&lt;/xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;&lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Both ways of setting the &lt;xref:System.Windows.Input.KeyGesture&gt; are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">設定のどちらの方法、&lt;xref:System.Windows.Input.KeyGesture&gt;は同じと同一の基になるオブジェクトの変更がある場合は、両方の競合が使用されます&lt;/xref:System.Windows.Input.KeyGesture&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the case when the &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;, &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;, and the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attributes are all set, the attribute which is defined last will be used for the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">場合と、 &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;、 &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;、しこの&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性は、すべて設定、定義されている属性最後が使われます&lt;xref:System.Windows.Input.KeyGesture&gt;&lt;/xref:System.Windows.Input.KeyGesture&gt;&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;&lt;/xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;&lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can potentially have situations where for example a &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt; set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">場所など、状況を持つ可能性のある、&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;セット最後はジェスチャを前のキー コンポーネントだけを上書きしますが、同じジェスチャの修飾子のままにします&lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In general, it is recommended that you use only the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">一般に、お勧めのみに使用する、&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性から<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>ですこのあいまいさを避ける、最も簡潔な構文、説明およびシリアル化の最も簡単な表現を提供します。&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A KeyBinding can be defined on a specific object or at the class level by registering a &lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt; on the &lt;xref:System.Windows.Input.CommandManager&gt; class.</source>
          <target state="translated">キーの割り当て、特定のオブジェクトまたはクラス レベルで登録すると、&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;&lt;xref:System.Windows.Input.CommandManager&gt;クラス&lt;/xref:System.Windows.Input.CommandManager&gt;の&lt;/xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;定義します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The most typical way to define a KeyBinding is within the control template, setting the &lt;xref:System.Windows.UIElement.InputBindings%2A&gt; property in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> by declaring one or more &lt;xref:System.Windows.Input.MouseBinding&gt; or KeyBinding elements.</source>
          <target state="translated">コントロール テンプレートの設定内のキーの割り当てを定義する最も一般的な方法は、&lt;xref:System.Windows.UIElement.InputBindings%2A&gt;プロパティ<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>1 つまたは複数を宣言することによって&lt;xref:System.Windows.Input.MouseBinding&gt;または keybinding を割り当てる要素&lt;/xref:System.Windows.Input.MouseBinding&gt;&lt;/xref:System.Windows.UIElement.InputBindings%2A&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified &lt;xref:System.Windows.Input.ICommand&gt; and <bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス&lt;xref:System.Windows.Input.ICommand&gt;と<bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Windows.Input.ICommand&gt; 。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The command to associate with <ph id="ph1">`gesture`</ph>.</source>
          <target state="translated">関連付けるコマンド<ph id="ph1">`gesture`</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The key combination to associate with <ph id="ph1">`command`</ph>.</source>
          <target state="translated">キーの組み合わせに関連付ける<ph id="ph1">`command`</ph>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;command&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;gesture&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;command&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;gesture&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified &lt;xref:System.Windows.Input.ICommand&gt; and the specified <bpt id="p2">&lt;xref href="System.Windows.Input.Key"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and <bpt id="p3">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> which will be converted into a <bpt id="p4">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス&lt;xref:System.Windows.Input.ICommand&gt;と、指定した<bpt id="p2">&lt;xref href="System.Windows.Input.Key"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>と<bpt id="p3">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>に変換されますが、 <bpt id="p4">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>&lt;/xref:System.Windows.Input.ICommand&gt; 。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The command to invoke.</source>
          <target state="translated">呼び出すコマンド。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The key to be associated with <ph id="ph1">`command`</ph>.</source>
          <target state="translated">関連付けられるキー<ph id="ph1">`command`</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The modifiers to be associated with <ph id="ph1">`command`</ph>.</source>
          <target state="translated">関連付けられる修飾子<ph id="ph1">`command`</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Creates an instance of a <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">インスタンスを作成、 <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The new object.</source>
          <target state="translated">新しいオブジェクト。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the gesture associated with this <bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定に関連付けられたジェスチャ<bpt id="p1">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>With the exception of the function keys and the numeric keypad keys, a &lt;xref:System.Windows.Input.KeyGesture&gt; must contain a &lt;xref:System.Windows.Input.Key&gt; and one or more &lt;xref:System.Windows.Input.ModifierKeys&gt;.</source>
          <target state="translated">ファンクション キーと、テンキーを除いて、&lt;xref:System.Windows.Input.KeyGesture&gt;含める必要があります、&lt;xref:System.Windows.Input.Key&gt;と&amp;1; つまたは複数&lt;xref:System.Windows.Input.ModifierKeys&gt;.&lt;/xref:System.Windows.Input.ModifierKeys&gt; &lt;/xref:System.Windows.Input.Key&gt; &lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The key sequence.</source>
          <target state="translated">キーのシーケンス。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>the value <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">gesture</ph><ept id="p1">&lt;/code&gt;</ept> is being set to is not a <bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">gesture</ph> <ept id="p1">&lt;/code&gt;</ept>に設定されているが、 <bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Input.Key"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the <bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> associated with this <bpt id="p3">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Input.Key"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の<bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>これに関連付けられている<bpt id="p3">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>With the exception of the function keys and the numeric keypad keys, a &lt;xref:System.Windows.Input.KeyGesture&gt; must contain a &lt;xref:System.Windows.Input.Key&gt; and one or more &lt;xref:System.Windows.Input.ModifierKeys&gt;.</source>
          <target state="translated">ファンクション キーと、テンキーを除いて、&lt;xref:System.Windows.Input.KeyGesture&gt;含める必要があります、&lt;xref:System.Windows.Input.Key&gt;と&amp;1; つまたは複数&lt;xref:System.Windows.Input.ModifierKeys&gt;.&lt;/xref:System.Windows.Input.ModifierKeys&gt; &lt;/xref:System.Windows.Input.Key&gt; &lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When defining a &lt;xref:System.Windows.Input.KeyBinding&gt; in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">定義するときに、&lt;xref:System.Windows.Input.KeyBinding&gt;で<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> &lt;xref:System.Windows.Input.KeyGesture&gt;.&lt;/xref:System.Windows.Input.KeyGesture&gt;を指定する&amp;2; つの方法がある&lt;/xref:System.Windows.Input.KeyBinding&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first way to establish a &lt;xref:System.Windows.Input.KeyBinding&gt; in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> is to define the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute of the &lt;xref:System.Windows.Input.KeyBinding&gt; element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">確立するために最初の方法、&lt;xref:System.Windows.Input.KeyBinding&gt;で<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>を定義するのには、&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;の属性、&lt;xref:System.Windows.Input.KeyBinding&gt;要素は、キーと修飾子を&amp;1; つの文字列、たとえば"CTRL + P"として指定する構文を使用します&lt;/xref:System.Windows.Input.KeyBinding&gt;&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;&lt;/xref:System.Windows.Input.KeyBinding&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The second way is to define the Key attribute and the &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt; attributes of the &lt;xref:System.Windows.Input.KeyBinding&gt; element.</source>
          <target state="translated">2 番目の方法は、キー属性を定義して、&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;の属性、&lt;xref:System.Windows.Input.KeyBinding&gt;要素&lt;/xref:System.Windows.Input.KeyBinding&gt;&lt;/xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Both ways of setting the &lt;xref:System.Windows.Input.KeyGesture&gt; are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">設定のどちらの方法、&lt;xref:System.Windows.Input.KeyGesture&gt;は同じと同一の基になるオブジェクトの変更がある場合は、両方の競合が使用されます&lt;/xref:System.Windows.Input.KeyGesture&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the case when the Key, &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;, and the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attributes are all set, the attribute which is defined last will be used for the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">場合と、キー &lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;、しこの&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性は、すべて設定、定義されている属性最後が使われます&lt;xref:System.Windows.Input.KeyGesture&gt;&lt;/xref:System.Windows.Input.KeyGesture&gt;&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;&lt;/xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can potentially have situations where for example a Key set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">可能性がある場合など、キーのセット最後はジェスチャを前のキー コンポーネントだけを上書きジェスチャの修飾子を同じままことができます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In general, it is recommended that you use only the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">一般に、お勧めのみに使用する、&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性から<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>ですこのあいまいさを避ける、最も簡潔な構文、説明およびシリアル化の最も簡単な表現を提供します。&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The key part of the <bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">重要な部分、 <bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Input.Key"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="System.Windows.Input.Key"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Input.KeyBinding.Key*&gt; dependency property.</source>
          <target state="translated">識別、&lt;xref:System.Windows.Input.KeyBinding.Key*&gt;依存関係プロパティ&lt;/xref:System.Windows.Input.KeyBinding.Key*&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the <bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> associated with this <bpt id="p3">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の<bpt id="p2">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>これに関連付けられている<bpt id="p3">&lt;xref href="System.Windows.Input.KeyBinding"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>With the exception of the function keys and the numeric keypad keys, a &lt;xref:System.Windows.Input.KeyGesture&gt; must contain a &lt;xref:System.Windows.Input.Key&gt; and one or more &lt;xref:System.Windows.Input.ModifierKeys&gt;.</source>
          <target state="translated">ファンクション キーと、テンキーを除いて、&lt;xref:System.Windows.Input.KeyGesture&gt;含める必要があります、&lt;xref:System.Windows.Input.Key&gt;と&amp;1; つまたは複数&lt;xref:System.Windows.Input.ModifierKeys&gt;.&lt;/xref:System.Windows.Input.ModifierKeys&gt; &lt;/xref:System.Windows.Input.Key&gt; &lt;/xref:System.Windows.Input.KeyGesture&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When defining a &lt;xref:System.Windows.Input.KeyBinding&gt; in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">定義するときに、&lt;xref:System.Windows.Input.KeyBinding&gt;で<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> &lt;xref:System.Windows.Input.KeyGesture&gt;.&lt;/xref:System.Windows.Input.KeyGesture&gt;を指定する&amp;2; つの方法がある&lt;/xref:System.Windows.Input.KeyBinding&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first way to establish a &lt;xref:System.Windows.Input.KeyBinding&gt; in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> is to define the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute of the &lt;xref:System.Windows.Input.KeyBinding&gt; element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">確立するために最初の方法、&lt;xref:System.Windows.Input.KeyBinding&gt;で<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>を定義するのには、&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;の属性、&lt;xref:System.Windows.Input.KeyBinding&gt;要素は、キーと修飾子を&amp;1; つの文字列、たとえば"CTRL + P"として指定する構文を使用します&lt;/xref:System.Windows.Input.KeyBinding&gt;&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;&lt;/xref:System.Windows.Input.KeyBinding&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second way is to define the &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt; attribute and the Modifiers attributes of the &lt;xref:System.Windows.Input.KeyBinding&gt; element.</source>
          <target state="translated">2 番目の方法は、定義する、&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;属性との修飾子属性、&lt;xref:System.Windows.Input.KeyBinding&gt;要素&lt;/xref:System.Windows.Input.KeyBinding&gt;&lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Both ways of setting the &lt;xref:System.Windows.Input.KeyGesture&gt; are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">設定のどちらの方法、&lt;xref:System.Windows.Input.KeyGesture&gt;は同じと同一の基になるオブジェクトの変更がある場合は、両方の競合が使用されます&lt;/xref:System.Windows.Input.KeyGesture&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the case when the &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;, Modifiers, and the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attributes are all set, the attribute which is defined last will be used for the &lt;xref:System.Windows.Input.KeyGesture&gt;.</source>
          <target state="translated">場合と&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;、修飾子、およびこの&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性は、すべての設定、 &lt;xref:System.Windows.Input.KeyGesture&gt;.&lt;/xref:System.Windows.Input.KeyGesture&gt;の最後に定義されている属性が使用されます&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;&lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can potentially have situations where for example a &lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt; set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">場所など、状況を持つ可能性のある、&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;セット最後はジェスチャを前のキー コンポーネントだけを上書きしますが、同じジェスチャの修飾子のままにします&lt;/xref:System.Windows.Input.KeyBinding.Key%2A&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In general, it is recommended that you use only the &lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; attribute from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">一般に、お勧めのみに使用する、&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;属性から<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>ですこのあいまいさを避ける、最も簡潔な構文、説明およびシリアル化の最も簡単な表現を提供します。&lt;/xref:System.Windows.Input.KeyBinding.Gesture%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Modifiers"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Modifiers="oneOrMoreModifierKeys"/&gt;      ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Modifiers"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreModifierKeys<ept id="p3">*</ept>    One or more modifier keys, defined by the &lt;xref:System.Windows.Input.ModifierKeys&gt; enumeration, delimited with a "+" character.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Modifiers"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<ph id="ph1">```   &lt;object Modifiers="oneOrMoreModifierKeys"/&gt;      ```</ph> <bpt id="p2">&lt;a name="xamlValues_Modifiers"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## XAML 値<bpt id="p3">*</bpt>oneOrMoreModifierKeys<ept id="p3">*</ept>によって定義された&amp;1; つまたは複数の修飾子キー、&lt;xref:System.Windows.Input.ModifierKeys&gt;列挙型、「+」文字で区切られます&lt;/xref:System.Windows.Input.ModifierKeys&gt;。      </target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The modifier keys of the <bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">修飾子キー、 <bpt id="p1">&lt;xref href="System.Windows.Input.KeyGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Input.KeyBinding.Modifiers*&gt; dependency property.</source>
          <target state="translated">識別、&lt;xref:System.Windows.Input.KeyBinding.Modifiers*&gt;依存関係プロパティ&lt;/xref:System.Windows.Input.KeyBinding.Modifiers*&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>