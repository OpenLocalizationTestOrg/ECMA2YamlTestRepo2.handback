<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4b1c0bbbb744ceae5dd3f655fe4d602efef4353</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Text.EncoderExceptionFallbackBuffer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a50e5c4396b83432d6c9f13c8fe0acca467c0424</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5dc68a64823c4f3c678fa1269c86c0de93e4e669</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.Text.EncoderFallbackException&gt; when an input character cannot be converted to an encoded output byte sequence.</source>
          <target state="translated">スロー&lt;xref:System.Text.EncoderFallbackException&gt;入力文字をエンコード済み出力バイト シーケンスに変換できません&lt;/xref:System.Text.EncoderFallbackException&gt;。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.</source>
          <target state="translated">エンコードまたはデコード操作の失敗の一般的な理由は、基になるエンコード クラスが、文字と等価なバイト シーケンスの間のマッピングを提供しないかどうかです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the input character cannot be converted to an output byte sequence, the encoding operation calls the &lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt; method, which throws &lt;xref:System.Text.EncoderFallbackException&gt;.</source>
          <target state="translated">エンコード操作が&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;&lt;xref:System.Text.EncoderFallbackException&gt;。&lt;/xref:System.Text.EncoderFallbackException&gt;をスローするメソッド&lt;/xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;を呼び出す場合は、入力文字は、出力バイト シーケンスに変換できません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName&gt; class, which represents a data buffer used in an encoding operation, is the base class for the EncoderExceptionFallbackBuffer class.</source>
          <target state="translated">&lt;xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName&gt;クラス、エンコード操作で使用するデータ バッファーを表しますが、EncoderExceptionFallbackBuffer クラスの基本クラス&lt;/xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, instead of a data buffer, the EncoderExceptionFallbackBuffer class represents a standard behavior wherein an exception is thrown if an encoding operation fails.</source>
          <target state="translated">ただし、EncoderExceptionFallbackBuffer クラスは、データ バッファーではなく、エンコード操作が失敗した場合、例外がスローされますが、標準的な動作を表します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.</source>
          <target state="translated">実際のデータ バッファーが存在しないと、このようなバッファーを操作するためのメンバーに大変な作業が行われません。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">入力文字をエンコードできないために、例外をスローします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Parameters specify the value and index position of the character that cannot be converted.</source>
          <target state="translated">パラメーターは、変換できない文字の値とインデックスの位置を指定します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Encoder.Convert%2A&gt; methods call Fallback if they encounter an unknown character in their input.</source>
          <target state="translated">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;と&lt;xref:System.Text.Encoder.Convert%2A&gt;メソッドが入力内の不明な文字が発生した場合、フォールバックを呼び出します&lt;/xref:System.Text.Encoder.Convert%2A&gt;&lt;/xref:System.Text.Encoding.GetBytes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In response, Fallback always throws &lt;xref:System.Text.EncoderFallbackException&gt;.</source>
          <target state="translated">応答として、フォールバックは常にスロー &lt;xref:System.Text.EncoderFallbackException&gt;。&lt;/xref:System.Text.EncoderFallbackException&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An input character.</source>
          <target state="translated">入力文字です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The index position of the character in the input buffer.</source>
          <target state="translated">入力バッファー内の文字のインデックス位置。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">ありません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>No value is returned because the Fallback method always throws an exception.</source>
          <target state="translated">フォールバック メソッドは常に例外をスローするため、値は返されません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph> cannot be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph>エンコードすることはできません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method always throws an exception that reports the value of the <ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> parameters.</source>
          <target state="translated">このメソッドは常の値を報告する例外をスロー、<ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph>と<ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">入力文字をエンコードできないために、例外をスローします。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Parameters specify the value and index position of the surrogate pair in the input, and the nominal return value is not used.</source>
          <target state="translated">パラメーターが入力で、サロゲート ペアの値とインデックスの位置を指定して、名目上の戻り値は使用されません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Encoder.Convert%2A&gt; methods call Fallback if they encounter a surrogate pair in their input.</source>
          <target state="translated">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;と&lt;xref:System.Text.Encoder.Convert%2A&gt;メソッドは、その入力にサロゲート ペアが発生した場合、フォールバックを呼び出して&lt;/xref:System.Text.Encoder.Convert%2A&gt;&lt;/xref:System.Text.Encoding.GetBytes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In response, Fallback always throws an exception.</source>
          <target state="translated">応答として、フォールバックは常に例外をスローします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The high surrogate of the input pair.</source>
          <target state="translated">入力のペアの上位サロゲート。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The low surrogate of the input pair.</source>
          <target state="translated">入力のペアの下位サロゲート。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The index position of the surrogate pair in the input buffer.</source>
          <target state="translated">入力バッファー内のサロゲート ペアのインデックス位置。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">ありません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>No value is returned because the Fallback method always throws an exception.</source>
          <target state="translated">フォールバック メソッドは常に例外をスローするため、値は返されません。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The character represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> cannot be encoded.</source>
          <target state="translated">によって表される文字<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">charUnknownHigh</ph> <ept id="p1">&lt;/code&gt;</ept>と<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">charUnknownLow</ph> <ept id="p2">&lt;/code&gt;</ept>エンコードすることはできません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Either <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">Either <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> is invalid.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> is not between U+D800 and U+DBFF, inclusive, or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> is not between U+DC00 and U+DFFF, inclusive.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept>u+d800 ~ U+DBFF、包括的ではありませんか<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">charUnknownLow</ph> <ept id="p2">&lt;/code&gt;</ept> u+dc00 ~ U+DFFF、包括的はありません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Retrieves the next character in the exception fallback buffer.</source>
          <target state="translated">例外フォールバック バッファー内の次の文字を取得します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Because &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the GetNextChar method always returns the Unicode NULL character.</source>
          <target state="translated">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;、実際の例外データ バッファーを持たない GetNextChar メソッドは常に Unicode NULL 文字を返します&lt;/xref:System.Text.EncoderExceptionFallbackBuffer&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The return value is always the Unicode character, NULL (U+0000).</source>
          <target state="translated">戻り値は、常に Unicode 文字、NULL (u+0000)。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">このメソッドは、抽象メソッドを実装するため、変更はありませんが、戻り値は定義します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Causes the next call to the &lt;xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*&gt; method to access the exception data buffer character position that is prior to the current position.</source>
          <target state="translated">次の呼び出しの原因、&lt;xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*&gt;が現在の位置より前の例外データ バッファーの文字位置にアクセスするメソッド&lt;/xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Because &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the MovePrevious method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;がない実際の例外データのバッファー、MovePrevious メソッドは常に返します<ph id="ph1">`false`</ph>&lt;/xref:System.Text.EncoderExceptionFallbackBuffer&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The return value is always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">戻り値は常に<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">このメソッドは、抽象メソッドを実装するため、変更はありませんが、戻り値は定義します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the number of characters in the current <bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that remain to be processed.</source>
          <target state="translated">現在の文字数を取得<bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>を処理するための残存オブジェクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Because &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the Remaining property always returns zero.</source>
          <target state="translated">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;、実際の例外データ バッファーを持たず、他のプロパティは常に&amp;0; を返します&lt;/xref:System.Text.EncoderExceptionFallbackBuffer&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The return value is always zero.</source>
          <target state="translated">戻り値は、常に&amp;0; です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">このメソッドは、抽象メソッドを実装するため、変更はありませんが、戻り値は定義します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>