<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73eade37beedd3799e27434ce7c93d78bbaad9f1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.ObjectManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a9683f0169ad62c6f06a8c78077728227edc109</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">793fe101653f32f5211f48489b432cedfd20a496</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Keeps track of objects as they are deserialized.</source>
          <target state="translated">追跡オブジェクトとは逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>During deserialization, the &lt;xref:System.Runtime.Serialization.Formatter&gt; queries the ObjectManager to determine whether a reference to an object in the serialized stream refers to an object that has already been deserialized (a backward reference), or to an object that has not yet been deserialized (a forward reference).</source>
          <target state="translated">逆シリアル化中に、&lt;xref:System.Runtime.Serialization.Formatter&gt;を逆シリアル化された、既にしているオブジェクト参照参照シリアル化ストリーム内のオブジェクトへの参照が、(旧バージョンとリファレンス) を使用するかどうかを判断する ObjectManager をクエリがないまだ逆シリアル化されたオブジェクトに (前方参照).&lt;/xref:System.Runtime.Serialization.Formatter&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>If the reference in the serialized stream is a forward reference, then the &lt;xref:System.Runtime.Serialization.Formatter&gt; can register a fixup with the ObjectManager.</source>
          <target state="translated">シリアル化ストリーム内の参照が前方参照の場合、 &lt;xref:System.Runtime.Serialization.Formatter&gt;ObjectManager で fixup を登録できます&lt;/xref:System.Runtime.Serialization.Formatter&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the reference in the serialized stream is a backward reference, the &lt;xref:System.Runtime.Serialization.Formatter&gt; immediately completes the reference.</source>
          <target state="translated">シリアル化ストリーム内の参照が旧バージョンとの参照の場合、&lt;xref:System.Runtime.Serialization.Formatter&gt;参照をすぐに完了します&lt;/xref:System.Runtime.Serialization.Formatter&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Fixup refers to the process of finalizing object references not already completed during the object deserialization process.</source>
          <target state="translated">フィックス アップは、既に完了していないオブジェクトの逆シリアル化プロセス中にオブジェクト参照を最終処理中のプロセスを指します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>After the required object has been deserialized, the ObjectManager will complete the reference.</source>
          <target state="translated">必要なオブジェクトが逆シリアル化、ObjectManager 参照によって完了します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The ObjectManager follows a set of rules that dictate the fixup order.</source>
          <target state="translated">ObjectManager では、一連のフィックス アップ順序を指定するルールに従います。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>All objects that implement &lt;xref:System.Runtime.Serialization.ISerializable&gt; or have a &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt; can expect to have all the objects that they transmitted through &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; available when the object tree is deserialized.</source>
          <target state="translated">実装するすべてのオブジェクト&lt;xref:System.Runtime.Serialization.ISerializable&gt;ことも、&lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;経由で送信される、すべてのオブジェクトに予想される、&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;オブジェクト ツリーが逆シリアル化されるときに使用できます&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt;&lt;/xref:System.Runtime.Serialization.ISerializable&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, a parent object cannot presume that all its child objects will be fully completed when it is fully deserialized.</source>
          <target state="translated">ただし、親オブジェクトでは、すべての子オブジェクトが完全に完了完全に逆シリアル化されることはできません推測します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>All child objects will be present but not all the grandchild objects will necessarily be present.</source>
          <target state="translated">すべての子オブジェクトは存在しますが、孫のすべてのオブジェクトが存在するとは限りません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If an object needs to take certain actions that depend on executing code on its child objects, it can delay these actions, implement the &lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt; interface, and execute the code only when it is called back on this interface.</source>
          <target state="translated">オブジェクトは、その子オブジェクトでのコードの実行に依存する特定のアクションを実行する必要がある場合、これらのアクションの遅延、実装、&lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt;インターフェイス、および戻るこのインターフェイスで呼び出されるときにのみ、コードを実行します&lt;/xref:System.Runtime.Serialization.IDeserializationCallback&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ObjectManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ObjectManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The surrogate selector to use.</source>
          <target state="translated">使用するサロゲート セレクター。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> determines the correct surrogate to use when deserializing objects of a given type.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定された型のオブジェクトを逆シリアル化時に使用する正しいサロゲートを決定します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>At deserialization time, the surrogate selector creates a new instance of the object from the information transmitted on the stream.</source>
          <target state="translated">逆シリアル化時に、サロゲート セレクターは、ストリームで送信される情報からオブジェクトの新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The streaming context.</source>
          <target state="translated">ストリーミング コンテキスト。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; is not used by <bpt id="p1">&lt;xref uid="langword_csharp_ObjectManager" name="ObjectManager" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but is passed as a parameter to any objects implementing <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or having a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;で使用されていない<bpt id="p1">&lt;xref uid="langword_csharp_ObjectManager" name="ObjectManager" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、実装する任意のオブジェクトに対するパラメーターとして渡されますが、 <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>句または having、 <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>&lt;/xref:System.Runtime.Serialization.StreamingContext&gt; 。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These objects can take specific actions depending on the source of the information to deserialize.</source>
          <target state="translated">これらのオブジェクトは、逆シリアル化する情報のソースに応じて、特定のアクションを実行できます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元には、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Performs all the recorded fixups.</source>
          <target state="translated">記録されたすべてのフィックス アップを実行します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The fixups are carried out by any appropriate surrogate, the object itself (if it implements &lt;xref:System.Runtime.Serialization.ISerializable&gt;), or the default implementation.</source>
          <target state="translated">フィックス アップがすべて該当するサロゲート、オブジェクト自体によって実行されます (実装している場合&lt;xref:System.Runtime.Serialization.ISerializable&gt;)、または既定の実装&lt;/xref:System.Runtime.Serialization.ISerializable&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A fixup was not successfully completed.</source>
          <target state="translated">Fixup が正常に完了しませんでした。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns the object with the specified object ID.</source>
          <target state="translated">指定したオブジェクト ID を持つオブジェクトを返します</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An object can be registered and issued an object ID with a call to the &lt;xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A&gt; method.</source>
          <target state="translated">オブジェクトを登録およびへの呼び出しでオブジェクト ID を発行することができます、&lt;xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A&gt;メソッド&lt;/xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The ID of the requested object.</source>
          <target state="translated">要求されたオブジェクトの ID です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The object with the specified object ID if it has been previously stored or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no such object has been registered.</source>
          <target state="translated">指定したオブジェクト ID が既に格納されている場合のオブジェクトまたは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、このようなオブジェクトが登録されていません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Raises the deserialization event to any registered object that implements <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDeserializationCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">実装する登録済みのオブジェクトに逆シリアル化イベントを発生させます<bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDeserializationCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Invokes the method marked with the &lt;xref:System.Runtime.Serialization.OnDeserializingAttribute&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.OnDeserializingAttribute&gt;。&lt;/xref:System.Runtime.Serialization.OnDeserializingAttribute&gt;でマークされたメソッドを呼び出します</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The instance of the type that contains the method to be invoked.</source>
          <target state="translated">呼び出されるメソッドを含む型のインスタンス。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Records a fixup for one element in an array.</source>
          <target state="translated">配列内の&amp;1; つの要素のフィックス アップを記録します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The fixup is for a specified element of a specified array.</source>
          <target state="translated">フィックス アップは、指定した配列の指定した要素のことです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The value used during the fixup process is provided in the <ph id="ph1">`objectRequired`</ph> parameter.</source>
          <target state="translated">修正プロセス中に使用される値が提供される、<ph id="ph1">`objectRequired`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The ID of the array used to record a fixup.</source>
          <target state="translated">フィックス アップを記録するために使用する配列の ID。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The index within <ph id="ph1">`arrayFixup`</ph> that a fixup is requested for.</source>
          <target state="translated">内のインデックス<ph id="ph1">`arrayFixup`</ph>フィックス アップが要求されます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The ID of the object that the current array element will point to after fixup is completed.</source>
          <target state="translated">フィックス アップが完了した後に、現在の配列要素が指すオブジェクトの ID。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">arrayToBeFixed</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">objectRequired</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">arrayToBeFixed</ph> <ept id="p1">&lt;/code&gt;</ept>または<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">objectRequired</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターが&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Records fixups for the specified elements in an array, to be executed later.</source>
          <target state="translated">後で実行するために、配列内の指定した要素のフィックス アップを記録します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The fixup is for specified elements of a specified array.</source>
          <target state="translated">フィックス アップは、指定した配列の指定した要素です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The value used during the fixup process is provided in the <ph id="ph1">`objectRequired`</ph> parameter.</source>
          <target state="translated">修正プロセス中に使用される値が提供される、<ph id="ph1">`objectRequired`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The ID of the array used to record a fixup.</source>
          <target state="translated">フィックス アップを記録するために使用する配列の ID。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The indexes within the multidimensional array that a fixup is requested for.</source>
          <target state="translated">Fixup が要求される多次元配列内のインデックス。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The ID of the object the array elements will point to after fixup is completed.</source>
          <target state="translated">オブジェクトの ID、配列の要素が指すフィックス アップが完了した後です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">arrayToBeFixed</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">objectRequired</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">arrayToBeFixed</ph> <ept id="p1">&lt;/code&gt;</ept>または<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">objectRequired</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターが&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">indices</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">indices</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Records a fixup for an object member, to be executed later.</source>
          <target state="translated">後で実行するために、オブジェクト メンバーのフィックス アップを記録します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The fixup is for a specified member of a specified object.</source>
          <target state="translated">フィックス アップは、指定したオブジェクトの指定したメンバーのことです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The value to be used during the fixup process is provided as the <ph id="ph1">`objectRequired`</ph> argument.</source>
          <target state="translated">としてフィックス アップ処理中に使用される値を指定、<ph id="ph1">`objectRequired`</ph>引数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The ID of the object that needs the reference to <ph id="ph1">`objectRequired`</ph>.</source>
          <target state="translated">参照を必要とするオブジェクトの ID<ph id="ph1">`objectRequired`</ph>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The member name of <ph id="ph1">`objectToBeFixed`</ph> where the fixup will be performed.</source>
          <target state="translated">メンバー名<ph id="ph1">`objectToBeFixed`</ph>フィックス アップを実行します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The ID of the object required by <ph id="ph1">`objectToBeFixed`</ph>.</source>
          <target state="translated">必要なオブジェクトの ID<ph id="ph1">`objectToBeFixed`</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;objectToBeFixed&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;objectRequired&lt;/code&gt;</ph> parameter is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;objectToBeFixed&lt;/code&gt;</ph>または<ph id="ph2">&lt;code&gt;objectRequired&lt;/code&gt;</ph>パラメーターが&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">memberName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">memberName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Records a fixup for a member of an object, to be executed later.</source>
          <target state="translated">後で実行するには、オブジェクトのメンバーのフィックス アップを記録します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The fixup is for a specified member of a specified object.</source>
          <target state="translated">フィックス アップは、指定したオブジェクトの指定したメンバーのことです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The value to be used during the fixup process is provided as the <ph id="ph1">`objectRequired`</ph> parameter.</source>
          <target state="translated">としてフィックス アップ処理中に使用される値を指定、<ph id="ph1">`objectRequired`</ph>のパラメーターです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The ID of the object that needs the reference to the <ph id="ph1">`objectRequired`</ph> object.</source>
          <target state="translated">参照を必要とするオブジェクトの ID、<ph id="ph1">`objectRequired`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The member of <ph id="ph1">`objectToBeFixed`</ph> where the fixup will be performed.</source>
          <target state="translated">メンバーの<ph id="ph1">`objectToBeFixed`</ph>フィックス アップを実行します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The ID of the object required by <ph id="ph1">`objectToBeFixed`</ph>.</source>
          <target state="translated">必要なオブジェクトの ID<ph id="ph1">`objectToBeFixed`</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectToBeFixed</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">objectRequired</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectToBeFixed</ph> <ept id="p1">&lt;/code&gt;</ept>または<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">objectRequired</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターが&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">member</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">member</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Registers an object as it is deserialized, associating it with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">オブジェクトは、逆シリアル化に関連付けられたレジスタ<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains information about both the object and its ID.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;オブジェクトとその ID の両方に関する情報を保持します。&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Later during deserialization, &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt; can be used to determine whether a particular object ID has already been deserialized, or whether it is a forward reference to an object that has not yet been deserialized.</source>
          <target state="translated">逆シリアル化後&lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;かどうかは、特定のオブジェクト ID は既に逆シリアル化された、または前方参照がないまだ逆シリアル化されたオブジェクトにあるかどうかを決定するために使用できます&lt;/xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The object to register.</source>
          <target state="translated">登録するオブジェクト。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The ID of the object to register.</source>
          <target state="translated">登録するオブジェクトの ID。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>は既に登録されて、オブジェクト以外の<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Registers an object as it is deserialized, associating it with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept>, and recording the <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> used with it.</source>
          <target state="translated">オブジェクトは、逆シリアル化に関連付けられたレジスタ<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>、および録画、 <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>一緒に使用します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains the information about both the object and its ID.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;オブジェクトとその ID の両方に関する情報を保持します。&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Later during deserialization, you can use &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt; to discover whether a particular object ID has already been deserialized, or if it is a forward reference to an object that has not yet been deserialized.</source>
          <target state="translated">逆シリアル化中に後で行うこともできます&lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;がないまだ逆シリアル化されたオブジェクトへの前方参照がある場合または ID は既に逆シリアル化された、特定のオブジェクトかどうかを検出します&lt;/xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The object to register.</source>
          <target state="translated">登録するオブジェクト。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The ID of the object to register.</source>
          <target state="translated">登録するオブジェクトの ID。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`info`</ph> will be completed with any required fixup information and then passed to the required object when that object is completed.</source>
          <target state="translated"><ph id="ph1">`info`</ph>必要なフィックス アップについては、正常に完了せず、そのオブジェクトが完了したときに必要なオブジェクトに渡され、します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>は既に登録されて、オブジェクト以外の<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Registers a member of an object as it is deserialized, associating it with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept>, and recording the <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">オブジェクトのメンバーは、逆シリアル化に関連付けられたレジスタ<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>、および録画、 <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You need to provide the <ph id="ph1">`member`</ph> and <ph id="ph2">`idOfContainingObj`</ph> parameters if <ph id="ph3">`obj`</ph> is a &lt;xref:System.ValueType&gt; because of the way fixups are performed on &lt;xref:System.ValueType&gt; objects.</source>
          <target state="translated">指定する必要があります、<ph id="ph1">`member`</ph>と<ph id="ph2">`idOfContainingObj`</ph>パラメーター場合<ph id="ph3">`obj`</ph>は、&lt;xref:System.ValueType&gt;方法により、フィックス アップを実行して、&lt;xref:System.ValueType&gt;オブジェクト&lt;/xref:System.ValueType&gt;&lt;/xref:System.ValueType&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The space to store the information for a &lt;xref:System.ValueType&gt; is allocated inline with its containing object.</source>
          <target state="translated">情報を格納する領域、&lt;xref:System.ValueType&gt;インラインで含まれるオブジェクトが割り当てられます&lt;/xref:System.ValueType&gt;。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>However, when the &lt;xref:System.ValueType&gt; is boxed to be registered with the &lt;xref:System.Runtime.Serialization.ObjectManager&gt;, it loses the connection with its containing object.</source>
          <target state="translated">ただし、&lt;xref:System.ValueType&gt;を登録することをボックス化、 &lt;xref:System.Runtime.Serialization.ObjectManager&gt;、親オブジェクトとの接続は失われます&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;&lt;/xref:System.ValueType&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To guarantee that fixups occur in the instance of the &lt;xref:System.ValueType&gt; stored in the containing object and not in the boxed instance, the &lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains some additional information.</source>
          <target state="translated">フィックス アップがのインスタンスで実行することを保証するために、&lt;xref:System.ValueType&gt;とボックス化されたインスタンスではなく親オブジェクトに格納、&lt;xref:System.Runtime.Serialization.ObjectManager&gt;いくつかの情報を保持します&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;&lt;/xref:System.ValueType&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains information about both the object and its ID.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;オブジェクトとその ID の両方に関する情報を保持します。&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Later during deserialization, &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt; can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.</source>
          <target state="translated">逆シリアル化後&lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;を特定のオブジェクト ID は既に逆シリアル化された、またはまだ逆シリアル化するかどうかは、オブジェクトへの前方参照かどうかを検出するために使用できます&lt;/xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The object to register.</source>
          <target state="translated">登録するオブジェクト。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The ID of the object to register.</source>
          <target state="translated">登録するオブジェクトの ID。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`info`</ph> will be completed with any required fixup information and then passed to the required object when that object is completed.</source>
          <target state="translated"><ph id="ph1">`info`</ph>必要なフィックス アップについては、正常に完了せず、そのオブジェクトが完了したときに必要なオブジェクトに渡され、します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The ID of the object that contains <ph id="ph1">`obj`</ph>.</source>
          <target state="translated">含むオブジェクトの ID<ph id="ph1">`obj`</ph>です。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This parameter is required only if <ph id="ph1">`obj`</ph> is a value type.</source>
          <target state="translated">場合にのみ、このパラメーターは必須<ph id="ph1">`obj`</ph>は値型です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The field in the containing object where <ph id="ph1">`obj`</ph> exists.</source>
          <target state="translated">親オブジェクト内のフィールドを<ph id="ph1">`obj`</ph>が存在します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This parameter has meaning only if <ph id="ph1">`obj`</ph> is a value type.</source>
          <target state="translated">このパラメーターには意味がある場合にのみ<ph id="ph1">`obj`</ph>は値型です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">member</ph><ept id="p3">&lt;/code&gt;</ept> is not a &lt;xref:System.Reflection.FieldInfo&gt; and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">member</ph><ept id="p4">&lt;/code&gt;</ept> is not <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">member</ph><ept id="p3">&lt;/code&gt;</ept> is not a &lt;xref:System.Reflection.FieldInfo&gt; and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">member</ph><ept id="p4">&lt;/code&gt;</ept> is not <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.FieldInfo&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Registers a member of an array contained in an object while it is deserialized, associating it with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept>, and recording the <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">関連付けることが逆シリアル化中に、オブジェクトに含まれる配列のメンバーを登録<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>、および録画、 <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You need to provide the <ph id="ph1">`member`</ph> and <ph id="ph2">`idOfContainingObj`</ph> parameters if <ph id="ph3">`obj`</ph> is a &lt;xref:System.ValueType&gt; because of the way fixups are performed on &lt;xref:System.ValueType&gt; objects.</source>
          <target state="translated">指定する必要があります、<ph id="ph1">`member`</ph>と<ph id="ph2">`idOfContainingObj`</ph>パラメーター場合<ph id="ph3">`obj`</ph>は、&lt;xref:System.ValueType&gt;方法により、フィックス アップを実行して、&lt;xref:System.ValueType&gt;オブジェクト&lt;/xref:System.ValueType&gt;&lt;/xref:System.ValueType&gt;。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The space to store the information for a &lt;xref:System.ValueType&gt; is allocated inline with its containing object.</source>
          <target state="translated">情報を格納する領域、&lt;xref:System.ValueType&gt;インラインで含まれるオブジェクトが割り当てられます&lt;/xref:System.ValueType&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>However, when the &lt;xref:System.ValueType&gt; is boxed to be registered with the &lt;xref:System.Runtime.Serialization.ObjectManager&gt;, it loses the connection with its containing object.</source>
          <target state="translated">ただし、&lt;xref:System.ValueType&gt;を登録することをボックス化、 &lt;xref:System.Runtime.Serialization.ObjectManager&gt;、親オブジェクトとの接続は失われます&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;&lt;/xref:System.ValueType&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To guarantee that fixups occur in the instance of the &lt;xref:System.ValueType&gt; stored in the containing object and not in the boxed instance, the &lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains some additional information.</source>
          <target state="translated">フィックス アップがのインスタンスで実行することを保証するために、&lt;xref:System.ValueType&gt;とボックス化されたインスタンスではなく親オブジェクトに格納、&lt;xref:System.Runtime.Serialization.ObjectManager&gt;いくつかの情報を保持します&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;&lt;/xref:System.ValueType&gt;。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Runtime.Serialization.ObjectManager&gt; retains information about both the object and its ID.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;オブジェクトとその ID の両方に関する情報を保持します。&lt;/xref:System.Runtime.Serialization.ObjectManager&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Later during deserialization, &lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt; can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.</source>
          <target state="translated">逆シリアル化後&lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;を特定のオブジェクト ID は既に逆シリアル化された、またはまだ逆シリアル化するかどうかは、オブジェクトへの前方参照かどうかを検出するために使用できます&lt;/xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The object to register.</source>
          <target state="translated">登録するオブジェクト。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The ID of the object to register.</source>
          <target state="translated">登録するオブジェクトの ID。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used if <ph id="ph1">`obj`</ph> implements <bpt id="p2">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or has a <bpt id="p3">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`info`</ph> will be completed with any required fixup information and then passed to the required object when that object is completed.</source>
          <target state="translated"><ph id="ph1">`info`</ph>必要なフィックス アップについては、正常に完了せず、そのオブジェクトが完了したときに必要なオブジェクトに渡され、します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The ID of the object that contains <ph id="ph1">`obj`</ph>.</source>
          <target state="translated">含むオブジェクトの ID<ph id="ph1">`obj`</ph>です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This parameter is required only if <ph id="ph1">`obj`</ph> is a value type.</source>
          <target state="translated">場合にのみ、このパラメーターは必須<ph id="ph1">`obj`</ph>は値型です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The field in the containing object where <ph id="ph1">`obj`</ph> exists.</source>
          <target state="translated">親オブジェクト内のフィールドを<ph id="ph1">`obj`</ph>が存在します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This parameter has meaning only if <ph id="ph1">`obj`</ph> is a value type.</source>
          <target state="translated">このパラメーターには意味がある場合にのみ<ph id="ph1">`obj`</ph>は値型です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`obj`</ph> is a &lt;xref:System.ValueType&gt; and a member of an array, <ph id="ph2">`arrayIndex`</ph> contains the index within that array where <ph id="ph3">`obj`</ph> exists.</source>
          <target state="translated">場合<ph id="ph1">`obj`</ph>は、&lt;xref:System.ValueType&gt;であり、配列のメンバー<ph id="ph2">`arrayIndex`</ph>その配列内のインデックスが含まれています、<ph id="ph3">`obj`</ph>が存在します&lt;/xref:System.ValueType&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`arrayIndex`</ph> is ignored if <ph id="ph2">`obj`</ph> is not both a &lt;xref:System.ValueType&gt; and a member of an array.</source>
          <target state="translated"><ph id="ph1">`arrayIndex`</ph>場合は無視されます<ph id="ph2">`obj`</ph>は両方とも、&lt;xref:System.ValueType&gt;であり、配列のメンバー&lt;/xref:System.ValueType&gt; 。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">objectID</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">member</ph><ept id="p3">&lt;/code&gt;</ept> is not a &lt;xref:System.Reflection.FieldInfo&gt; and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">member</ph><ept id="p4">&lt;/code&gt;</ept> isn't <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">objectID</ph><ept id="p1">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">member</ph><ept id="p3">&lt;/code&gt;</ept> is not a &lt;xref:System.Reflection.FieldInfo&gt; and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">member</ph><ept id="p4">&lt;/code&gt;</ept> isn't <bpt id="p5">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.FieldInfo&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>