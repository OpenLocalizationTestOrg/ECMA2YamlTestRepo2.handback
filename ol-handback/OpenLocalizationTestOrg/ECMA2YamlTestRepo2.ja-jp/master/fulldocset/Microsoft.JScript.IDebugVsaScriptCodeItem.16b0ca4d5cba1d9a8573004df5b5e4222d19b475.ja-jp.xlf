<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca5c39cdb67a23924d2922659bbaeaaf56c0aeb7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.JScript.IDebugVsaScriptCodeItem.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8e5ce7e4157c89a8ae41000b3c3cf534e3d66a3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b43c012dabcca3d89d7bc38983d1f43a4ebda3c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines methods that evaluate expressions and parse strings.</source>
          <target state="translated">式を評価し、文字列を解析するメソッドを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger.</source>
          <target state="translated">このインターフェイスは通常、コード ブロックを表すオブジェクトによって実装し、は通常、デバッガーによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This interface provides extra functionality that is needed by an IActiveScript host.</source>
          <target state="translated">このインターフェイスは、IActiveScript ホストが必要とする追加の機能を提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value.</source>
          <target state="translated">クラスで実装された場合、ブロック、式、またはコード項目で表されるステートメントを評価し、値を返します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example).</source>
          <target state="translated">通常呼び出されます (たとえば、ウォッチ ウィンドウ) で式を評価する必要があるデバッガーによってです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For expressions, the value is the result of the expression.</source>
          <target state="translated">式の場合は、値は、式の結果です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For blocks and statements, the resulting expression is the last expression calculated by the block or statement.</source>
          <target state="translated">ブロックとステートメントの場合は、結果の式は最後のブロックまたはステートメントによって計算式です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Note that the Evaluate method is functionally identical to the &lt;xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt; method.</source>
          <target state="translated">Evaluate メソッドは機能と同じことに注意してください、&lt;xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt;メソッド&lt;/xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Only the marshaling attributes differ.</source>
          <target state="translated">マーシャ リング属性のみが異なります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This version of the interface allows an unmanaged debugger to obtain the return value as an <ph id="ph1">`IUnknown`</ph> pointer rather than a <ph id="ph2">`VARIANT`</ph>.</source>
          <target state="translated">このバージョンのインターフェイスを使用すると、として戻り値を取得するアンマネージのデバッガー、<ph id="ph1">`IUnknown`</ph>ポインターではなく、<ph id="ph2">`VARIANT`</ph>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns a value that represents the evaluation of the statement, expression, or block.</source>
          <target state="translated">ステートメント、式、またはブロックの評価を表す値を返します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When implemented in a class, parses strings and returns the parsed-out information.</source>
          <target state="translated">クラスで実装された場合、文字列を解析し、解析された出力情報を返します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このメソッドと通常呼ばれるとして表されるブレークポイントに関する情報を解析する必要があるデバッガーによって、 <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The debugger might have a breakpoint typed in by the user in the form <bpt id="p1">*</bpt>functionname-arguments-ILoffset<ept id="p1">*</ept>.</source>
          <target state="translated">デバッガーは、フォーム内のユーザーによって入力されたブレークポイントがある可能性があります<bpt id="p1">*</bpt>functionname 引数-ILoffset<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A named breakpoint string can have a complex format, for example, <ph id="ph1">`F.B(C.D[], int, arg : double ) : C.Abc + 123.`</ph> The parameter list is optional, as is the IL offset.</source>
          <target state="translated">ブレークポイントの名前付き文字列はなど、複雑な形式を持つことができます<ph id="ph1">`F.B(C.D[], int, arg : double ) : C.Abc + 123.`</ph>IL オフセットは、パラメーター リストはオプションです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</source>
          <target state="translated">整形式では、関数、省略可能な引数リスト、および省略可能な IL オフセットを与えるブレークポイント文字列という名前です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</source>
          <target state="translated">Out パラメーター、関数の名前を返す場合に解析、入力文字列または空の文字列から、入力文字列の形式が正しくありません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Out parameter returning the number of arguments in the optional argument list.</source>
          <target state="translated">省略可能な引数リストの引数の数を返す出力パラメーター。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns zero if there is no arguments list or if the string is not well formed.</source>
          <target state="translated">引数リストがない場合、または文字列が整形式でない場合は、0 を返します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</source>
          <target state="translated">返す出力パラメーターのすべての引数の型の名前をスペースで区切って、引数リスト、または空の文字列引数のリストが見つからないか、入力文字列の形式は正しくありません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</source>
          <target state="translated">Out パラメーターで、入力をという名前の関数の戻り値の型を含む文字列または戻り値の型が見つからない場合は、空の文字列または入力文字列を取得するもの形式がありません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</source>
          <target state="translated">IL オフセットがないか、文字列の形式が正しくありませんは、入力文字列、または&amp;0; から IL オフセットを指定する符号なし long 整数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the named breakpoint is successfully parsed, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> otherwise.</source>
          <target state="translated">返します<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>名前付きのブレークポイントが正常に解析された場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>それ以外の場合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>