<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2343ebf844c28d67c970f4255a6cfa2e88275b0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.Collection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2850a6fa2a07d675948894d08fcae8b79e90eb4b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c04bd635de8ded7c6dd1dc552b64a18511ef8e4f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is an ordered set of items that can be referred to as a unit.</source>
          <target state="translated">Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を単位として参照できる項目の順序付きセットは、します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  Whenever possible, you should use the generic collections in the &lt;xref:System.Collections.Generic?displayProperty=fullName&gt; namespace or the &lt;xref:System.Collections.Concurrent&gt; namespace instead of a Visual Basic <ph id="ph2">`Collection`</ph>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt; ジェネリック コレクションを使用する必要があります、可能な限り、&lt;xref:System.Collections.Generic?displayProperty=fullName&gt;名前空間または&lt;xref:System.Collections.Concurrent&gt;Visual Basic ではなく名前空間<ph id="ph2">`Collection`</ph>&lt;/xref:System.Collections.Concurrent&gt;&lt;/xref:System.Collections.Generic?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Collections<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>コレクション<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Visual Basic <ph id="ph1">`Collection`</ph> object provides a convenient way to refer to a related group of items as a single object.</source>
          <target state="translated">Visual Basic<ph id="ph1">`Collection`</ph>オブジェクトは、単一のオブジェクトとしてアイテムの関連するグループを参照する便利な手段を提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The items, or <bpt id="p1">*</bpt>elements<ept id="p1">*</ept>, in a collection need only be related by the fact that they exist in the collection.</source>
          <target state="translated">項目、または<bpt id="p1">*</bpt>要素<ept id="p1">*</ept>で、コレクション内に存在しているという事実によって、コレクションを関連のみ必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Elements of a collection do not have to share the same data type.</source>
          <target state="translated">コレクションの要素を同じデータ型を共有する必要はありません。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can create a collection the same way you create other objects, as the following example illustrates.</source>
          <target state="translated">次の例に示すようには、コレクションの他のオブジェクトの作成と同じ方法を作成することができます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   Dim coll As New Microsoft.VisualBasic.Collection()   ```</ph>       Once you have created a collection, you can do any of the following:      -   Add an element with the &lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt; method.</source>
          <target state="translated"><ph id="ph1">```   Dim coll As New Microsoft.VisualBasic.Collection()   ```</ph>コレクションを作成した後、次のいずれかを行うことができます:-を持つ要素を追加、&lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt;メソッド&lt;/xref:Microsoft.VisualBasic.Collection.Add%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   Remove an element with the &lt;xref:Microsoft.VisualBasic.Collection.Remove%2A&gt; method.</source>
          <target state="translated">-を持つ要素を削除する、&lt;xref:Microsoft.VisualBasic.Collection.Remove%2A&gt;メソッド&lt;/xref:Microsoft.VisualBasic.Collection.Remove%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-   Remove all elements with the &lt;xref:Microsoft.VisualBasic.Collection.Clear%2A&gt; method.</source>
          <target state="translated">-すべての要素を削除する、&lt;xref:Microsoft.VisualBasic.Collection.Clear%2A&gt;メソッド&lt;/xref:Microsoft.VisualBasic.Collection.Clear%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   Find out how many elements the collection contains with the &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt; property.</source>
          <target state="translated">持つコレクションに要素の数を見つけ、&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Collection.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-   Check whether a specific element is present with the &lt;xref:Microsoft.VisualBasic.Collection.Contains%2A&gt; method.</source>
          <target state="translated">-特定の要素が存在するかどうかを確認、&lt;xref:Microsoft.VisualBasic.Collection.Contains%2A&gt;メソッド&lt;/xref:Microsoft.VisualBasic.Collection.Contains%2A&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-   Return a specific element from the collection with the &lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt; property.</source>
          <target state="translated">-使用して、コレクションから特定の要素を返す、&lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Collection.Item%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-   Iterate through the entire collection with the <bpt id="p1">[</bpt>For Each...Next Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-全体のコレクションを反復処理する、<bpt id="p1">[</bpt>ごとにしています.次のステートメントの<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  Although the Visual Basic <ph id="ph2">`Collection`</ph> object has functionality identical to the <ph id="ph3">`Collection`</ph> object in Visual Basic 6.0, the two cannot interoperate in a COM environment.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; ですが、Visual Basic<ph id="ph2">`Collection`</ph>オブジェクトと同じ機能を持つ、 <ph id="ph3">`Collection`</ph> Visual Basic 6.0 でオブジェクトの 2 つが COM 環境で相互運用することはできません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph>     &gt;  Iterating through a Visual Basic <ph id="ph2">`Collection`</ph> is not a thread-safe procedure.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; Visual Basic の反復<ph id="ph2">`Collection`</ph>はスレッド セーフなプロシージャはありません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも他のスレッドが例外をスローする列挙子の原因と、コレクションを変更できます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙中にスレッド セーフを確保する、コレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information on locking a programming element, see <bpt id="p1">[</bpt>SyncLock Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">プログラミング要素のロックの詳細については、次を参照してください。 <bpt id="p1">[</bpt>SyncLock ステートメント<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creates and returns a new <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">作成して、新しい返します<ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> collection returned by this constructor is empty and does not have any initial capacity allocated.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>このコンス トラクターによって返されるコレクションは空に割り当てられているすべての初期容量がありません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> collections are not compatible with the <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> collections available in the &lt;xref:System.Collections?displayProperty=fullName&gt;, &lt;xref:System.Collections.Generic?displayProperty=fullName&gt;, and &lt;xref:System.Collections.Specialized?displayProperty=fullName&gt; namespaces.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>コレクションと互換性がない、<ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>コレクションで使用できる、 &lt;xref:System.Collections?displayProperty=fullName&gt;、 &lt;xref:System.Collections.Generic?displayProperty=fullName&gt;、および&lt;xref:System.Collections.Specialized?displayProperty=fullName&gt;名前空間&lt;/xref:System.Collections.Specialized?displayProperty=fullName&gt;&lt;/xref:System.Collections.Generic?displayProperty=fullName&gt;&lt;/xref:System.Collections?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Adds an element to a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要素を追加、 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Before`</ph> or <ph id="ph2">`After`</ph> argument must refer to an existing element of the collection; otherwise, an error occurs.</source>
          <target state="translated"><ph id="ph1">`Before`</ph>または<ph id="ph2">`After`</ph>引数は、コレクションの既存の要素を参照する必要があります。 それ以外の場合、エラーが発生します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If both the <ph id="ph1">`Before`</ph> and <ph id="ph2">`After`</ph> arguments are omitted, the new object is added to the end of the collection.</source>
          <target state="translated">両方の<ph id="ph1">`Before`</ph>と<ph id="ph2">`After`</ph>の引数を省略すると、新しいオブジェクトがコレクションの末尾に追加します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An error also occurs if a specified <ph id="ph1">`Key`</ph> value matches the key for an existing element of the collection.</source>
          <target state="translated">指定した場合にも、エラーが発生<ph id="ph1">`Key`</ph>値に一致するコレクションの既存の要素のキー。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An object of any type that specifies the element to add to the collection.</source>
          <target state="translated">コレクションに追加する要素を指定する任意の型のオブジェクトです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A unique <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.</source>
          <target state="translated">一意な<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>位置のインデックスではなく、コレクション内の新しい要素にアクセスするために使用するキー文字列を指定する式。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An expression that specifies a relative position in the collection.</source>
          <target state="translated">コレクション内の相対位置を指定する式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The element to be added is placed in the collection before the element identified by the <ph id="ph1">`Before`</ph> argument.</source>
          <target state="translated">によって識別される要素の前に、コレクションに追加する要素が配置されます、<ph id="ph1">`Before`</ph>引数。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Before`</ph> is a numeric expression, it must be a number from 1 through the value of the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt; property.</source>
          <target state="translated">場合<ph id="ph1">`Before`</ph>数値式は、コレクションの値を使用して 1 から番号をする必要があります&lt;xref:Microsoft.VisualBasic.Collection.Count*&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Collection.Count*&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Before`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, it must correspond to the key string specified when the element being referred to was added to the collection.</source>
          <target state="translated">場合<ph id="ph1">`Before`</ph>は、 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>式では、参照されている要素がコレクションに追加されたときに指定されたキーの文字列に対応は必要があります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You cannot specify both <ph id="ph1">`Before`</ph> and <ph id="ph2">`After`</ph>.</source>
          <target state="translated">両方を指定することはできません<ph id="ph1">`Before`</ph>と<ph id="ph2">`After`</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An expression that specifies a relative position in the collection.</source>
          <target state="translated">コレクション内の相対位置を指定する式。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The element to be added is placed in the collection after the element identified by the <ph id="ph1">`After`</ph> argument.</source>
          <target state="translated">によって識別される要素の後にコレクションに追加する要素を配置している、<ph id="ph1">`After`</ph>引数。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`After`</ph> is a numeric expression, it must be a number from 1 through the value of the collection's <bpt id="p1">&lt;xref uid="langword_csharp_Count" name="Count" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">場合<ph id="ph1">`After`</ph>数値式は、コレクションの値を使用して 1 から番号をする必要があります<bpt id="p1">&lt;xref uid="langword_csharp_Count" name="Count" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>プロパティです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`After`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, it must correspond to the key string specified when the element referred to was added to the collection.</source>
          <target state="translated">場合<ph id="ph1">`After`</ph>は、 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>式では、参照先の要素がコレクションに追加したときに指定されたキーの文字列に対応は必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You cannot specify both <ph id="ph1">`Before`</ph> and <ph id="ph2">`After`</ph>.</source>
          <target state="translated">両方を指定することはできません<ph id="ph1">`Before`</ph>と<ph id="ph2">`After`</ph>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Deletes all elements of a Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Visual Basic のすべての要素を削除<bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Clear`</ph> method empties the collection and resets its &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt; property to 0.</source>
          <target state="translated"><ph id="ph1">`Clear`</ph>メソッドは、コレクションを空にして、リセット、&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;プロパティを 0 にします&lt;/xref:Microsoft.VisualBasic.Collection.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether a Visual Basic <bpt id="p2">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with a specific key.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual Basic かどうかを示すを値<bpt id="p2">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクトには、特定のキーを持つ要素が含まれています。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Contains`</ph> returns <ph id="ph2">`True`</ph> if the collection contains an element with a key exactly matching <ph id="ph3">`Key`</ph>.</source>
          <target state="translated"><ph id="ph1">`Contains`</ph>返します<ph id="ph2">`True`</ph>正確に一致するキーを持つ要素がコレクションに含まれている場合<ph id="ph3">`Key`</ph>です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Otherwise, <ph id="ph1">`Contains`</ph> returns <ph id="ph2">`False`</ph>.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">`Contains`</ph>返します<ph id="ph2">`False`</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Case is ignored when matching key values.</source>
          <target state="translated">一致するキー値の場合は無視されます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A Visual Basic <ph id="ph1">`Collection`</ph> can hold some elements that have keys and other elements without keys.</source>
          <target state="translated">Visual Basic<ph id="ph1">`Collection`</ph>キーがあるいくつかの要素およびキーを持たない他の要素を保持できます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This depends on whether the call to the &lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt; method supplies an argument to the optional <ph id="ph1">`Key`</ph> parameter.</source>
          <target state="translated">これは異なるかどうかを呼び出す、&lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt;メソッドには、オプションの引数が指定されて<ph id="ph1">`Key`</ph>パラメーター&lt;/xref:Microsoft.VisualBasic.Collection.Add%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies the key for which to search the elements of the collection.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コレクションの要素を検索するキーを指定する式。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether a Visual Basic <bpt id="p2">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with a specific key.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual Basic かどうかを示すを値<bpt id="p2">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクトには、特定のキーを持つ要素が含まれています。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the number of elements in a collection.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コレクション内の要素数を格納します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Count`</ph> property to determine the number of elements in a <ph id="ph2">`Collection`</ph> object.</source>
          <target state="translated">使用して、<ph id="ph1">`Count`</ph>内の要素の数を決定するプロパティ、<ph id="ph2">`Collection`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the number of elements in a collection.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コレクション内の要素数を格納します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns a reference to an enumerator object, which is used to iterate over a <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">反復処理に使用される、列挙子オブジェクトへの参照を返します、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>For Each...Next Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> calls <ph id="ph1">`GetEnumerator`</ph> to obtain an enumerator object to support iteration over a collection's elements.</source>
          <target state="translated"><bpt id="p1">[</bpt>ごとにしています.次のステートメントの<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>呼び出し<ph id="ph1">`GetEnumerator`</ph>コレクションの要素に対する反復処理をサポートする列挙子オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Normally, you use a <ph id="ph1">`For Each`</ph>...<ph id="ph2">`Next`</ph> loop to traverse a collection or array, and you do not need to call <ph id="ph3">`GetEnumerator`</ph> explicitly.</source>
          <target state="translated">通常は、使用、<ph id="ph1">`For Each`</ph>しています.<ph id="ph2">`Next`</ph>コレクションまたは配列を走査するループしを呼び出す必要はありません<ph id="ph3">`GetEnumerator`</ph>明示的にします。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If you need closer control over the iteration than the <ph id="ph1">`For Each`</ph>...<ph id="ph2">`Next`</ph> statements provide, you can use the <ph id="ph3">`GetEnumerator`</ph> method to perform a customized traversal.</source>
          <target state="translated">イテレーションに近い制御必要がある場合、<ph id="ph1">`For Each`</ph>しています.<ph id="ph2">`Next`</ph>ステートメントの提供、使用することができます、<ph id="ph3">`GetEnumerator`</ph>カスタマイズの検査を実行するメソッド。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following are some cases in which you might need to do this.</source>
          <target state="translated">次に、場合によってはするがこれを行う必要があります。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-   You might want to return to the beginning of the collection and start the iteration again before it is finished.</source>
          <target state="translated">-可能性がある、コレクションの先頭に戻るが終わる前に、もう一度イテレーションを開始します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-   You might want to skip over one or more elements for a variety of reasons.</source>
          <target state="translated">さまざまな理由の&amp;1; つまたは複数の要素をスキップする-可能性があります。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-   You might need to change the elements of the collection in the middle of a traversal.</source>
          <target state="translated">-は、検査中にコレクションの要素を変更する必要があります。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In this case you must obtain a new enumerator object because the previous one is invalidated.</source>
          <target state="translated">ここでは前の&amp;1; つが無効になっているために、新しい列挙子オブジェクトを取得する必要があります。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns a reference to an enumerator object, which is used to iterate over a <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">反復処理に使用される、列挙子オブジェクトへの参照を返します、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">特定の要素を返し、 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>位置またはキーのいずれかのオブジェクト。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Index`</ph> is of type <ph id="ph2">`Object`</ph>, the <ph id="ph3">`Item`</ph> property attempts to treat it as a <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> array, or integer value.</source>
          <target state="translated">場合<ph id="ph1">`Index`</ph>の種類は<ph id="ph2">`Object`</ph>、<ph id="ph3">`Item`</ph>として処理しようとしているプロパティ、 <ph id="ph4">`String`</ph>、 <ph id="ph5">`Char`</ph>、<ph id="ph6">`Char`</ph>配列、または整数値。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Item`</ph> cannot convert <ph id="ph2">`Index`</ph> to <ph id="ph3">`String`</ph> or <ph id="ph4">`Integer`</ph>, it throws an &lt;xref:System.ArgumentException&gt; exception.</source>
          <target state="translated">場合<ph id="ph1">`Item`</ph>に変換できません<ph id="ph2">`Index`</ph>に<ph id="ph3">`String`</ph>または<ph id="ph4">`Integer`</ph>、スロー、&lt;xref:System.ArgumentException&gt;例外です&lt;/xref:System.ArgumentException&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Item`</ph> property is the default property for a collection.</source>
          <target state="translated"><ph id="ph1">`Item`</ph>プロパティは、コレクションの既定のプロパティです。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Therefore, the following lines of code are equivalent.</source>
          <target state="translated">したがって、次のコード行は等価です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>(A) A numeric expression that specifies the position of an element of the collection.</source>
          <target state="translated">(コレクションの要素の位置を指定します A) の数値式です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Index`</ph> must be a number from 1 through the value of the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt; property.</source>
          <target state="translated"><ph id="ph1">`Index`</ph>コレクションの値を使用して 1 の数値でなければなりません&lt;xref:Microsoft.VisualBasic.Collection.Count*&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Collection.Count*&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Or (B) An <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies the position or key string of an element of the collection.</source>
          <target state="translated">または (B)、 <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コレクションの要素の位置またはキー文字列を指定します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">特定の要素を返し、 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>位置またはキーのいずれかのオブジェクト。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">特定の要素を返し、 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>位置またはキーのいずれかのオブジェクト。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Index`</ph> is of type <ph id="ph2">`Object`</ph>, the <ph id="ph3">`Item`</ph> property attempts to treat it as a <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> array, or integer value.</source>
          <target state="translated">場合<ph id="ph1">`Index`</ph>の種類は<ph id="ph2">`Object`</ph>、<ph id="ph3">`Item`</ph>として処理しようとしているプロパティ、 <ph id="ph4">`String`</ph>、 <ph id="ph5">`Char`</ph>、<ph id="ph6">`Char`</ph>配列、または整数値。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Item`</ph> cannot convert <ph id="ph2">`Index`</ph> to <ph id="ph3">`String`</ph> or <ph id="ph4">`Integer`</ph>, it throws an &lt;xref:System.ArgumentException&gt; exception.</source>
          <target state="translated">場合<ph id="ph1">`Item`</ph>に変換できません<ph id="ph2">`Index`</ph>に<ph id="ph3">`String`</ph>または<ph id="ph4">`Integer`</ph>、スロー、&lt;xref:System.ArgumentException&gt;例外です&lt;/xref:System.ArgumentException&gt;。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Item`</ph> property is the default property for a collection.</source>
          <target state="translated"><ph id="ph1">`Item`</ph>プロパティは、コレクションの既定のプロパティです。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Therefore, the following lines of code are equivalent.</source>
          <target state="translated">したがって、次のコード行は等価です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>(A) A numeric expression that specifies the position of an element of the collection.</source>
          <target state="translated">(コレクションの要素の位置を指定します A) の数値式です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Index`</ph> must be a number from 1 through the value of the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt; property.</source>
          <target state="translated"><ph id="ph1">`Index`</ph>コレクションの値を使用して 1 の数値でなければなりません&lt;xref:Microsoft.VisualBasic.Collection.Count*&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Collection.Count*&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Or (B) An <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies the position or key string of an element of the collection.</source>
          <target state="translated">または (B)、 <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コレクションの要素の位置またはキー文字列を指定します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">特定の要素を返し、 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>位置またはキーのいずれかのオブジェクト。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">特定の要素を返し、 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>位置またはキーのいずれかのオブジェクト。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Index`</ph> is of type <ph id="ph2">`Object`</ph>, the <ph id="ph3">`Item`</ph> property attempts to treat it as a <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> array, or integer value.</source>
          <target state="translated">場合<ph id="ph1">`Index`</ph>の種類は<ph id="ph2">`Object`</ph>、<ph id="ph3">`Item`</ph>として処理しようとしているプロパティ、 <ph id="ph4">`String`</ph>、 <ph id="ph5">`Char`</ph>、<ph id="ph6">`Char`</ph>配列、または整数値。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Item`</ph> cannot convert <ph id="ph2">`Index`</ph> to <ph id="ph3">`String`</ph> or <ph id="ph4">`Integer`</ph>, it throws an &lt;xref:System.ArgumentException&gt; exception.</source>
          <target state="translated">場合<ph id="ph1">`Item`</ph>に変換できません<ph id="ph2">`Index`</ph>に<ph id="ph3">`String`</ph>または<ph id="ph4">`Integer`</ph>、スロー、&lt;xref:System.ArgumentException&gt;例外です&lt;/xref:System.ArgumentException&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Item`</ph> property is the default property for a collection.</source>
          <target state="translated"><ph id="ph1">`Item`</ph>プロパティは、コレクションの既定のプロパティです。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Therefore, the following lines of code are equivalent.</source>
          <target state="translated">したがって、次のコード行は等価です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A unique <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</source>
          <target state="translated">一意な<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用できる、位置指定のインデックスではなく、コレクションの要素にアクセスするキー文字列を指定します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Key`</ph> must correspond to the <ph id="ph2">`Key`</ph> argument specified when the element was added to the collection.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>対応する必要があります、<ph id="ph2">`Key`</ph>要素をコレクションに追加したときに引数を指定します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">特定の要素を返し、 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>位置またはキーのいずれかのオブジェクト。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Removes an element from a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要素を削除、 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`Remove`</ph> deletes an element from a collection, it decrements the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt; property by one.</source>
          <target state="translated">ときに<ph id="ph1">`Remove`</ph>、コレクションから要素を削除、デクリメント、コレクションの&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;によって&amp;1; つのプロパティ&lt;/xref:Microsoft.VisualBasic.Collection.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>It also decrements the <ph id="ph1">`Index`</ph> value of every element that formerly followed the deleted element in the collection.</source>
          <target state="translated">これもデクリメント、<ph id="ph1">`Index`</ph>コレクション内で削除された要素の後に続くすべての要素の値。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If an element was added to the collection without a <ph id="ph1">`Key`</ph>, you must use its <ph id="ph2">`Index`</ph> to remove it.</source>
          <target state="translated">要素がなく、コレクションに追加した場合、 <ph id="ph1">`Key`</ph>、使用する必要があります、<ph id="ph2">`Index`</ph>を削除します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A numeric expression that specifies the position of an element of the collection.</source>
          <target state="translated">コレクションの要素の位置を指定する数値式です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Index`</ph> must be a number from 1 through the value of the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt; property.</source>
          <target state="translated"><ph id="ph1">`Index`</ph>コレクションの値を使用して 1 の数値でなければなりません&lt;xref:Microsoft.VisualBasic.Collection.Count*&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Collection.Count*&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Removes an element from a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要素を削除、 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`Remove`</ph> deletes an element from a collection, it decrements the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt; property by one.</source>
          <target state="translated">ときに<ph id="ph1">`Remove`</ph>、コレクションから要素を削除、デクリメント、コレクションの&lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;によって&amp;1; つのプロパティ&lt;/xref:Microsoft.VisualBasic.Collection.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>It also decrements the <ph id="ph1">`Index`</ph> value of every element that formerly followed the deleted element in the collection.</source>
          <target state="translated">これもデクリメント、<ph id="ph1">`Index`</ph>コレクション内で削除された要素の後に続くすべての要素の値。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If an element was added to the collection without a <ph id="ph1">`Key`</ph>, you must use its <ph id="ph2">`Index`</ph> to remove it.</source>
          <target state="translated">要素がなく、コレクションに追加した場合、 <ph id="ph1">`Key`</ph>、使用する必要があります、<ph id="ph2">`Index`</ph>を削除します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A unique <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</source>
          <target state="translated">一意な<bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用できる、位置指定のインデックスではなく、コレクションの要素にアクセスするキー文字列を指定します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Key`</ph> must correspond to the <ph id="ph2">`Key`</ph> argument specified when the element was added to the collection.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>対応する必要があります、<ph id="ph2">`Key`</ph>要素をコレクションに追加したときに引数を指定します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Copies the elements of the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to an &lt;xref:System.Array&gt;, starting at a particular &lt;xref:System.Array&gt; index.</source>
          <target state="translated">要素をコピー、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を&lt;xref:System.Array&gt;特定の開始、&lt;xref:System.Array&gt;インデックス&lt;/xref:System.Array&gt;&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.ICollection&gt; interface.</source>
          <target state="translated">実装して、&lt;xref:System.Collections.ICollection&gt;インターフェイス&lt;/xref:System.Collections.ICollection&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:Microsoft.VisualBasic.Collection&gt; object.</source>
          <target state="translated">要素のコピー先は、&lt;xref:System.Array&gt;を列挙子が反復処理する順序と同じ順序で、&lt;xref:Microsoft.VisualBasic.Collection&gt;オブジェクト&lt;/xref:Microsoft.VisualBasic.Collection&gt;&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is obtained from the &lt;xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count%2A&gt;.&lt;/xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count%2A&gt;から取得されます</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">1 次元&lt;xref:System.Array&gt;からコピーした要素のコピー先は<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0 から始まるインデックス番号が必要です&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">内の&amp;0; から始まるインデックス<ph id="ph1">`array`</ph>コピーの開始位置。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>多次元です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is greater than the available space from <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">- または - ソース内の要素の数<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトがから利用可能な領域よりも大きい<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>変換先の末尾に<ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">ソースの種類<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトは、変換先の型に自動的にキャストすることはできません<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">コレクションを反復処理する列挙子を返します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.ICollection&gt; interface.</source>
          <target state="translated">実装して、&lt;xref:System.Collections.ICollection&gt;インターフェイス&lt;/xref:System.Collections.ICollection&gt;。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic、C# の場合]      <ph id="ph1">`foreach`</ph> C# 言語のステートメント (<ph id="ph2">`for each`</ph> Visual Basic で)、列挙子の複雑さが隠されています。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">したがってを使用して<ph id="ph1">`foreach`</ph>列挙子を直接操作せずにお勧めします。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; method also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;メソッドがこの位置に戻さも、列挙子を表示します&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>At this position, the &lt;xref:System.Collections.IEnumerator.Current%2A&gt; property is undefined.</source>
          <target state="translated">この位置にある、&lt;xref:System.Collections.IEnumerator.Current%2A&gt;プロパティが定義されていません&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Therefore, you must call the &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; method to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">したがって、 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Current%2A&gt;。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;の値を読み取る前に、コレクションの最初の要素に列挙子を進めるメソッド&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;を呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;いずれかのまで同じオブジェクトを返します&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;または&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;と呼びます&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;次の要素にします&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返します<ph id="ph1">`false`</ph>&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;を返すことも<ph id="ph1">`false`</ph>&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">場合は、最後の呼び出し&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返します<ph id="ph1">`false`</ph>、&lt;xref:System.Collections.IEnumerator.Current%2A&gt;が定義されていません&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;再度、コレクションの最初の要素に&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;続けて&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;を呼び出すことができます&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;を設定するには</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能とその動作は未定義です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列挙子はコレクションへの排他アクセスがありません。そのため、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">列挙中にスレッドの安全性を保証するためには、列挙中にコレクションをロックできます。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">読み取りと書き込みの複数のスレッドがアクセスするコレクションを許可するのには、独自に同期を実装する必要があります。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; object that can be used to iterate through the collection.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;コレクションを反復処理するために使用できるオブジェクト&lt;/xref:System.Collections.IEnumerator&gt;。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Adds an item to the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">項目を追加、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">実装して、&lt;xref:System.Collections.IList&gt;インターフェイス&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:Microsoft.VisualBasic.Collection&gt; object.</source>
          <target state="translated">使用することも、&lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt;にキーの値を設定して、新しい要素を追加するプロパティが存在しません、&lt;xref:Microsoft.VisualBasic.Collection&gt;オブジェクト&lt;/xref:Microsoft.VisualBasic.Collection&gt;&lt;/xref:Microsoft.VisualBasic.Collection.Item%2A&gt;。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to add to the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;に追加する、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The position into which the new element was inserted.</source>
          <target state="translated">新しい要素が挿入された位置。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトのサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Removes all items from the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">すべての項目を削除、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">実装して、&lt;xref:System.Collections.IList&gt;インターフェイス&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This method removes all items from the &lt;xref:Microsoft.VisualBasic.Collection&gt; object.</source>
          <target state="translated">このメソッドからすべての項目を削除する、&lt;xref:Microsoft.VisualBasic.Collection&gt;オブジェクト&lt;/xref:Microsoft.VisualBasic.Collection&gt;。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; is read-only.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;は読み取り専用です&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object contains a specific value.</source>
          <target state="translated">指定するかどうか、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトには、特定の値が含まれています。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">実装して、&lt;xref:System.Collections.IList&gt;インターフェイス&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This method determines whether the &lt;xref:Microsoft.VisualBasic.Collection&gt; object contains a specific value.</source>
          <target state="translated">このメソッドを判断するかどうか、&lt;xref:Microsoft.VisualBasic.Collection&gt;オブジェクトには、特定の値が含まれています&lt;/xref:Microsoft.VisualBasic.Collection&gt;。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;内で検索する、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Object&gt; is found in the <bpt id="p2">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返します<bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、&lt;xref:System.Object&gt;で見つかった、 <bpt id="p2">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクトそれ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Determines the index of a specific item in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">内の特定の項目のインデックス番号、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">実装して、&lt;xref:System.Collections.IList&gt;インターフェイス&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This method determines the index of a specific item in the &lt;xref:Microsoft.VisualBasic.Collection&gt; object.</source>
          <target state="translated">このメソッド内の特定の項目のインデックスを決定する、&lt;xref:Microsoft.VisualBasic.Collection&gt;オブジェクト&lt;/xref:Microsoft.VisualBasic.Collection&gt;。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;内で検索する、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> if found in the collection; otherwise, -1.</source>
          <target state="translated">インデックス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>コレクション内で見つかった場合は、-1。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Inserts an item to the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object at the specified index.</source>
          <target state="translated">項目を挿入、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したインデックスにあるオブジェクト。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">実装して、&lt;xref:System.Collections.IList&gt;インターフェイス&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`index`</ph> equals the number of items in the &lt;xref:Microsoft.VisualBasic.Collection&gt; object, then <ph id="ph2">`value`</ph> is appended to the end.</source>
          <target state="translated">場合<ph id="ph1">`index`</ph>内の項目数に等しければ、&lt;xref:Microsoft.VisualBasic.Collection&gt;オブジェクト、<ph id="ph2">`value`</ph>が末尾に追加されます&lt;/xref:Microsoft.VisualBasic.Collection&gt;。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">連続する要素のコレクションでリストなど、カーソル位置の後にある要素を新しい要素に対応します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">場合は、コレクションのインデックスが、移動した要素のインデックスも更新します。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素がハッシュ テーブルなどのバケットにグループ化概念的にはコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <ph id="ph1">`value`</ph> should be inserted.</source>
          <target state="translated">位置の&amp;0; から始まるインデックス<ph id="ph1">`value`</ph>挿入する必要があります。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to insert into the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;に挿入する、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>有効なインデックスではありません、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトのサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is null reference in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>内の null 参照には、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of a specific object from the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">最初に見つかった特定のオブジェクトから削除、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">実装して、&lt;xref:System.Collections.IList&gt;インターフェイス&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションで、削除された要素に続く要素上へ移動繰りにします。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">場合は、コレクションのインデックスが、移動した要素のインデックスも更新します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素がハッシュ テーブルなどのバケットにグループ化概念的にはコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`value`</ph> is not found in the &lt;xref:Microsoft.VisualBasic.Collection&gt; object, the &lt;xref:Microsoft.VisualBasic.Collection&gt; object remains unchanged and no exception is thrown.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>に載っていない、&lt;xref:Microsoft.VisualBasic.Collection&gt;オブジェクト、&lt;xref:Microsoft.VisualBasic.Collection&gt;オブジェクトが変更されないと、例外はスローされません&lt;/xref:Microsoft.VisualBasic.Collection&gt;&lt;/xref:Microsoft.VisualBasic.Collection&gt;。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to remove from the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;から削除する、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトのサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Removes the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object item at the specified index.</source>
          <target state="translated">削除、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの項目を指定したインデックス位置。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">実装して、&lt;xref:System.Collections.IList&gt;インターフェイス&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションで、削除された要素に続く要素上へ移動繰りにします。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">場合は、コレクションのインデックスが、移動した要素のインデックスも更新します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素がハッシュ テーブルなどのバケットにグループ化概念的にはコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item to remove.</source>
          <target state="translated">削除する項目の&amp;0; から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>有効なインデックスではありません、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトのサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Runs after the entire <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object graph has been deserialized.</source>
          <target state="translated">全体の後に実行<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト グラフが逆シリアル化されました。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDeserializationCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">実装して、 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDeserializationCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>This method is called after the entire &lt;xref:Microsoft.VisualBasic.Collection&gt; object graph has been deserialized.</source>
          <target state="translated">このメソッドは、全体の後に呼び出されます&lt;xref:Microsoft.VisualBasic.Collection&gt;オブジェクト グラフが逆シリアル化された&lt;/xref:Microsoft.VisualBasic.Collection&gt;。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The object that initiated the callback.</source>
          <target state="translated">コールバックを開始したオブジェクト。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Returns the data needed to serialize the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">シリアル化するために必要なデータを返す、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">実装して、 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>This method returns the data needed to serialize the &lt;xref:Microsoft.VisualBasic.Collection&gt; object.</source>
          <target state="translated">このメソッドは、シリアル化に必要なデータを返します、&lt;xref:Microsoft.VisualBasic.Collection&gt;オブジェクト&lt;/xref:Microsoft.VisualBasic.Collection&gt;。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the information required to serialize the <bpt id="p2">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトをシリアル化するために必要な情報を含む、 <bpt id="p2">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object containing the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A&lt;xref:System.Runtime.Serialization.StreamingContext&gt;オブジェクト ソースと関連付けられているシリアル化されたストリームの先を含む、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>