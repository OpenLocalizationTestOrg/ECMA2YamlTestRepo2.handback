<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">341d7eb5406814a4dd72c1db3f79fe3fa1764bc6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.ServiceHost.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4315c8bb669e890b861f007430c200637aec3f28</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bce40d12c5d519141bcdb5dfc1c2093d7bea6a49</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a host for services.</source>
          <target state="translated">サービスのホストを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Implements the host used by the <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> service model programming model.</source>
          <target state="translated">使用されるホストを実装して、<ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>サービス モデルのモデルをプログラミングします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use the ServiceHost class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.</source>
          <target state="translated">構成および使用しないインターネット インフォメーション サービス (IIS) または Windows アクティブ化サービス (WAS) サービスを公開するときに、クライアント アプリケーションによって使用するサービスを公開するには、ServiceHost クラスを使用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Both IIS and WAS interact with a ServiceHost object on your behalf.</source>
          <target state="translated">IIS と WAS はどちらも、あなたに代わって ServiceHost オブジェクトと対話します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To expose a service for use by callers, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> requires a complete service description (represented by the &lt;xref:System.ServiceModel.Description.ServiceDescription&gt; class).</source>
          <target state="translated">呼び出し元で使用するためのサービスを公開する<ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph>完全なサービスの説明が必要です (によって表される、&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;クラス).&lt;/xref:System.ServiceModel.Description.ServiceDescription&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The ServiceHost class creates a &lt;xref:System.ServiceModel.Description.ServiceDescription&gt; from the service type and configuration information and then uses that description to create &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; objects for each endpoint in the description.</source>
          <target state="translated">ServiceHost クラスを作成、&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;サービスの種類と構成情報からし、その説明を使用して作成&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;説明内の各エンドポイント用のオブジェクト&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;&lt;/xref:System.ServiceModel.Description.ServiceDescription&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Use a ServiceHost object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.</source>
          <target state="translated">ServiceHost オブジェクトをサービスのロード、エンドポイントの構成、セキュリティ設定を適用および着信要求を処理するリスナーの起動に使用します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>There are two constructors used to create an instance of the &lt;xref:System.ServiceModel.ServiceHost&gt; class.</source>
          <target state="translated">&lt;xref:System.ServiceModel.ServiceHost&gt;クラス&lt;/xref:System.ServiceModel.ServiceHost&gt;のインスタンスを作成するために使用する&amp;2; つのコンス トラクターがあります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>ServiceHost(Type, Uri<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept> constructor which takes the service type as an input parameter, most of the time.</source>
          <target state="translated">使用して、 <bpt id="p1">[</bpt>ServiceHost (型、Uri<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept>を入力パラメーターとして、ほとんどの場合、サービスの種類を取るコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The host can use this to create new services as needed.</source>
          <target state="translated">このホストを使用できます必要に応じて、新しいサービスを作成します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>ServiceHost(Object, Uri<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept> constructor instead only when you want the service host to use a specific singleton instance of the service.</source>
          <target state="translated">使用して、 <bpt id="p1">[</bpt>ServiceHost (オブジェクト、Uri<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept>コンス トラクター サービス ホストが、サービスの特定のシングルトン インスタンスを使用する場合は、代わりにのみです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the instance of the service and its base addresses specified.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスのインスタンス、サービスとそのベース アドレスを指定します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Use this constructor as an alternative to implementing a custom &lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName&gt; when you want to provide a specific object instance for use by a singleton service.</source>
          <target state="translated">このコンス トラクターを使用してカスタムを実装する代わりに&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName&gt;、シングルトン サービスが使用するための特定のオブジェクト インスタンスを提供する場合&lt;/xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).</source>
          <target state="translated">サービス実装の型が (たとえば、パラメーターを持たない既定パブリック コンス トラクターを実装していない) 場合を構築するために困難な場合は、このオーバー ロードを使用することがあります。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that when an object is provided to this overload, some features related to the <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> instancing behavior work differently.</source>
          <target state="translated">このオーバー ロードにオブジェクトが指定した場合、一部の機能に関連することに注意してください、<ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>動作作業を異なる方法でインスタンス化します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, calling &lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName&gt; have no effect when a well-known object instance is provided using this constructor overload.</source>
          <target state="translated">たとえば、呼び出す&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName&gt;がある影響しない既知のオブジェクト インスタンスがこのコンス トラクター オーバー ロードで提供されている場合&lt;/xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Similarly, any other instance release mechanism is ignored.</source>
          <target state="translated">同様に、他のインスタンス解放機構は無視されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.ServiceHost&gt; always behaves as if the &lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName&gt; property is set to &lt;xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName&gt; for all operations.</source>
          <target state="translated">&lt;xref:System.ServiceModel.ServiceHost&gt;常に動作として、&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName&gt;プロパティに設定されている&lt;xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName&gt;すべての操作&lt;/xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName&gt;&lt;/xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName&gt;&lt;/xref:System.ServiceModel.ServiceHost&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The instance of the hosted service.</source>
          <target state="translated">ホステッド サービスのインスタンス。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Array&gt; of type &lt;xref:System.Uri&gt; that contains the base addresses for the hosted service.</source>
          <target state="translated">&lt;xref:System.Array&gt;型の&lt;xref:System.Uri&gt;ホステッド サービスのベース アドレスを格納している&lt;/xref:System.Uri&gt;&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;singletonInstance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;singletonInstance&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the type of service and its base addresses specified.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、サービスの種類とそのベース アドレスを指定します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance.</source>
          <target state="translated">このコンス トラクターを使用して、サービスの種類があり、これが必要な場合でも必要がある場合、シングルトン インスタンスの新しいインスタンスを作成することができます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>ServiceHost(Object, Uri<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept> constructor instead only when you want the service host to use a specific singleton instance of the service.</source>
          <target state="translated">使用して、 <bpt id="p1">[</bpt>ServiceHost (オブジェクト、Uri<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept>コンス トラクター サービス ホストが、サービスの特定のシングルトン インスタンスを使用する場合は、代わりにのみです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The type of hosted service.</source>
          <target state="translated">ホステッド サービスの型。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Uri&gt; that contains the base addresses for the hosted service.</source>
          <target state="translated">型の配列&lt;xref:System.Uri&gt;ホステッド サービスのベース アドレスを格納している&lt;/xref:System.Uri&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</source>
          <target state="translated">指定したコントラクト、バインディング、およびエンドポイント アドレスでホステッド サービスにサービス エンドポイントを追加します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of contract for the endpoint added.</source>
          <target state="translated">&lt;xref:System.Type&gt;追加されたエンドポイントのコントラクトの&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.Binding&gt; for the endpoint added.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.Binding&gt;エンドポイントを追加します&lt;/xref:System.ServiceModel.Channels.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The address for the endpoint added.</source>
          <target state="translated">追加されたエンドポイントのアドレス。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; added to the hosted service.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;ホステッド サービスに追加します&lt;/xref:System.ServiceModel.Description.ServiceEndpoint&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.</source>
          <target state="translated">指定したコントラクト、バインディング、およびエンドポイント アドレスを格納する URI を持つホストされるサービスにサービス エンドポイントを追加します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of contract for the endpoint added.</source>
          <target state="translated">&lt;xref:System.Type&gt;追加されたエンドポイントのコントラクトの&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.Binding&gt; for the endpoint added.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.Binding&gt;エンドポイントを追加します&lt;/xref:System.ServiceModel.Channels.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that contains the address for the endpoint added.</source>
          <target state="translated">&lt;xref:System.Uri&gt;追加されたエンドポイントのアドレスを格納している&lt;/xref:System.Uri&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; added to the hosted service.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;ホステッド サービスに追加します&lt;/xref:System.ServiceModel.Description.ServiceEndpoint&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.</source>
          <target state="translated">指定したコントラクト、バインディング、エンドポイント アドレス、およびサービスがリッスンする URI でホストされるサービスにサービス エンドポイントを追加します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</source>
          <target state="translated">指定された URI を同じ場合は、リッスンする必要がある複数のエンドポイントがある場合は、このバージョンのメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of contract for the endpoint added.</source>
          <target state="translated">&lt;xref:System.Type&gt;追加されたエンドポイントのコントラクトの&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.Binding&gt; for the endpoint added.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.Binding&gt;エンドポイントを追加します&lt;/xref:System.ServiceModel.Channels.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The endpoint address for the service.</source>
          <target state="translated">サービスのエンドポイント アドレス。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; on which the service endpoints can listen.</source>
          <target state="translated">&lt;xref:System.Uri&gt;上のサービス エンドポイントがリッスンできる&lt;/xref:System.Uri&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; added to the hosted service.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;ホステッド サービスに追加します&lt;/xref:System.ServiceModel.Description.ServiceEndpoint&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.</source>
          <target state="translated">指定したコントラクト、バインディング、エンドポイント アドレスを格納する URI をサービスがリッスンする URI とホステッド サービスにサービス エンドポイントを追加します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</source>
          <target state="translated">指定された URI を同じ場合は、リッスンする必要がある複数のエンドポイントがある場合は、このバージョンのメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of contract for the endpoint added.</source>
          <target state="translated">&lt;xref:System.Type&gt;追加されたエンドポイントのコントラクトの&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.Binding&gt; for the endpoint added.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.Binding&gt;エンドポイントを追加します&lt;/xref:System.ServiceModel.Channels.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that contains the address for the endpoint added.</source>
          <target state="translated">&lt;xref:System.Uri&gt;追加されたエンドポイントのアドレスを格納している&lt;/xref:System.Uri&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; on which the service endpoints can listen.</source>
          <target state="translated">&lt;xref:System.Uri&gt;上のサービス エンドポイントがリッスンできる&lt;/xref:System.Uri&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; added to the hosted service.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;ホステッド サービスに追加します&lt;/xref:System.ServiceModel.Description.ServiceEndpoint&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The contracts are not initialized or the contract keys cannot be found.</source>
          <target state="translated">コントラクトが初期化されていませんまたはコントラクト キーが見つかりません。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Loads the service description from the configuration file and applies it to the runtime being constructed.</source>
          <target state="translated">構成ファイルからサービスの説明を読み込み、構築中のランタイムに適用されます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Creates a description of the service hosted.</source>
          <target state="translated">ホストされるサービスの説明を作成します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This method is used to construct contract descriptions from customized programming models.</source>
          <target state="translated">このメソッドは、カスタマイズしたプログラミング モデルからコントラクトの説明を構築するために使用されます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Override the corresponding base class method, &lt;xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29&gt;, to implement the customized model.</source>
          <target state="translated">対応する基本クラス メソッドをオーバーライド&lt;xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29&gt;にカスタマイズされたモデルを実装します&lt;/xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> with key pairs of type (&lt;xref:System.String&gt;, &lt;xref:System.ServiceModel.Description.ContractDescription&gt;) that contains the keyed-contracts of the hosted service that have been implemented.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>Xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph>型のキーの組に (&lt;xref:System.String&gt;、 &lt;xref:System.ServiceModel.Description.ContractDescription&gt;)、キー付きコントラクト ホステッド サービスの実装されていることが含まれています&lt;/xref:System.ServiceModel.Description.ContractDescription&gt;&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ServiceModel.Description.ServiceDescription"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the hosted service.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ServiceModel.Description.ServiceDescription"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ホステッド サービスのです。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The type of service hosted is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ホストされるサービスの種類は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Initializes a description of the service hosted based on its instance and specified base addresses.</source>
          <target state="translated">ホストされるサービスの説明は、そのインスタンスに基づいており、指定された初期化はベース アドレスです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The instance of the hosted service.</source>
          <target state="translated">ホステッド サービスのインスタンス。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.UriSchemeKeyedCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the base addresses for the hosted service.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.UriSchemeKeyedCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ホステッド サービスのベース アドレスを格納します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;singletonInstance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;singletonInstance&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Initializes a description of the service hosted based on its type and specified base addresses.</source>
          <target state="translated">ホストされるサービスの説明は、その型に基づいており、指定された初期化はベース アドレスです。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of service hosted.</source>
          <target state="translated">&lt;xref:System.Type&gt;ホストされるサービスの&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.UriSchemeKeyedCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the base addresses for the hosted service.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.UriSchemeKeyedCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ホステッド サービスのベース アドレスを格納します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Disposes of disposable services that are being hosted when the service host is closed.</source>
          <target state="translated">破棄可能なサービス、サービス ホストが閉じられたときにホストされているを破棄します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When overriding the OnClosed method you must ensure the base.OnClosed method is called, even if an exception occurs.</source>
          <target state="translated">OnClosed メソッドをオーバーライドする場合は、基本を確認する必要があります。例外が発生した場合でも、OnClosed メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to do this.</source>
          <target state="translated">次のコードは、これを行う方法を示しています。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets the singleton instance of the hosted service.</source>
          <target state="translated">ホステッド サービスのシングルトン インスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>ServiceHost(Object, Uri<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.</source>
          <target state="translated">使用して、 <bpt id="p1">[</bpt>ServiceHost (オブジェクト、Uri<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept>コンス トラクターを使用するサービスのインスタンスを制御するときにホストされるサービスのシングルトン インスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The hosted service object.</source>
          <target state="translated">ホストされるサービス オブジェクト。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>