<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4ac62558c0577e175a60eeabe38e09f46fe8d3b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Schema.XmlSchemaValidator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c51a81b344f108aaed03fb0d941e1dcf17c85e2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad40590bbde8a13fd8908f8bb1630a604da696f1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an XML Schema Definition Language (XSD) Schema validation engine.</source>
          <target state="translated">XML スキーマ定義言語 (XSD) スキーマ検証エンジンを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The XmlSchemaValidator class cannot be inherited.</source>
          <target state="translated">XmlSchemaValidator クラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  -   Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt;-場所や不明または信頼できないソースからスキーマを使用しないでください。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">これは、コードのセキュリティが低下します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">&gt;-XML スキーマ (インライン スキーマを含む) を受けます本質的にサービス拒否攻撃です。信頼されていないシナリオでに同意されません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&gt; -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">&gt;-スキーマ検証エラー メッセージと例外が、コンテンツ モデルまたはスキーマ ファイルの URI パスに関する機密情報を公開します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">信頼されていない呼び出し元にこの情報を公開しないように注意します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The XmlSchemaValidator class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner.</source>
          <target state="translated">XmlSchemaValidator クラスでは、プッシュ ベース方式で XML スキーマに対して XML データを検証する、効率的で高性能なメカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, the XmlSchemaValidator class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader.</source>
          <target state="translated">たとえば、XmlSchemaValidator クラスには、XML ドキュメントとしてシリアル化し、検証型 XML リーダーを使用してドキュメントの再解析することがなく、XML infoset で直接を検証することができます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The XmlSchemaValidator class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.</source>
          <target state="translated">XmlSchemaValidator クラスは、検証型 XML ライターを構築する方法としてまたはカスタムの XML データ ソースに対する検証エンジンを構築するも使用できます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about the XmlSchemaValidator class, see the <bpt id="p1">[</bpt>XmlSchemaValidator Push-Based Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> topic.</source>
          <target state="translated">XmlSchemaValidator クラスの詳細については、次を参照してください。、 <bpt id="p1">[</bpt>XmlSchemaValidator のプッシュ ベースの検証<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>トピックです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; and &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation flags of an XmlSchemaValidator object are not set be default.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;、&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;と&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;XmlSchemaValidator オブジェクトのフラグが設定されていない検証するデフォルト&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt; property of an XmlSchemaValidator object is <ph id="ph1">`null`</ph> by default.</source>
          <target state="translated">さらに、 &lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;XmlSchemaValidator オブジェクトのプロパティが<ph id="ph1">`null`</ph>既定&lt;/xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">結果としてで参照されている外部のスキーマは、インポート、または再定義要素により解決されない既定です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the XmlSchemaValidator constructor.</source>
          <target state="translated">XmlSchemaValidator コンス トラクターを使用する際に考慮する重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-   The contents of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; parameter are copied into an internal &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; object when the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; or the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation options are set.</source>
          <target state="translated">-の内容、&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;パラメーターは、内部にコピーする&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;オブジェクトときに、&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;または&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;検証オプションが設定されます&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>As a result, changes to the input &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; object during validation do not affect the outcome of validation.</source>
          <target state="translated">その結果、入力に変更&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;検証中にオブジェクトの検証の結果には影響しません&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; parameter specified is not compiled, its &lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt; method is called.</source>
          <target state="translated">場合、&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;指定されたパラメーターがコンパイルされていないその&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;メソッドが呼び出されます&lt;/xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Xml.IXmlNamespaceResolver&gt; parameter is especially important for validating <ph id="ph1">`xs:QName`</ph> types.</source>
          <target state="translated">-&lt;xref:System.Xml.IXmlNamespaceResolver&gt;パラメーターは検証にとって特に重要<ph id="ph1">`xs:QName`</ph>の種類&lt;/xref:System.Xml.IXmlNamespaceResolver&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; class does not copy the in-scope namespaces from the &lt;xref:System.Xml.IXmlNamespaceResolver&gt; object but instead holds a reference to it.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;クラスは、スコープ内から名前空間、&lt;xref:System.Xml.IXmlNamespaceResolver&gt;オブジェクトが、代わりにそれへの参照を保持&lt;/xref:System.Xml.IXmlNamespaceResolver&gt;はコピーされません&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This allows new namespaces to be added to the &lt;xref:System.Xml.IXmlNamespaceResolver&gt; object during the validation process.</source>
          <target state="translated">これにより、新しい名前空間に追加する、&lt;xref:System.Xml.IXmlNamespaceResolver&gt;検証プロセス中にオブジェクト&lt;/xref:System.Xml.IXmlNamespaceResolver&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; and &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation flags of an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object are not set be default.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;、&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;と&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;の検証フラグ、&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;オブジェクトが設定される既定値です&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt; property of an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object is <ph id="ph1">`null`</ph> by default.</source>
          <target state="translated">さらに、&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;のプロパティ、&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;オブジェクトが<ph id="ph1">`null`</ph>既定&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">結果としてで参照されている外部のスキーマは、インポート、または再定義要素により解決されない既定です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlNameTable&gt; object containing element and attribute names as atomized strings.</source>
          <target state="translated">&lt;xref:System.Xml.XmlNameTable&gt;アトム化された文字列としての要素と属性名を含むオブジェクト&lt;/xref:System.Xml.XmlNameTable&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the XML Schema Definition Language (XSD) schemas used for validation.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>検証に使用する XML スキーマ定義言語 (XSD) スキーマを含むオブジェクト。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.IXmlNamespaceResolver&gt; object used for resolving namespaces encountered during validation.</source>
          <target state="translated">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;オブジェクトの検証中に遭遇する名前空間の解決に使用します&lt;/xref:System.Xml.IXmlNamespaceResolver&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidationFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value specifying schema validation options.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidationFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>スキーマ検証のオプションを指定する値。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定されたパラメーターの&amp;1; つ以上が<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An error occurred while compiling schemas in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter.</source>
          <target state="translated">スキーマのコンパイル中にエラーが発生しました、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>パラメーター。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.</source>
          <target state="translated">検証に使用するスキーマのセットを XML スキーマ定義言語 (XSD) スキーマを追加します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the AddSchema method.</source>
          <target state="translated">AddSchema メソッドの使用時に考慮すべき重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-   The AddSchema method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.</source>
          <target state="translated">-AddSchema メソッドは、検証中の XML ドキュメント内のインライン XML スキーマの検出の効果をシミュレートするために使用できます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-   The target namespace of the &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter cannot match that of any element or attribute already encountered by the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object.</source>
          <target state="translated">-ターゲットの名前空間、&lt;xref:System.Xml.Schema.XmlSchema&gt;パラメーターに一致するすべての要素と属性が既に遭遇したことはできません、&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;オブジェクト&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;&lt;/xref:System.Xml.Schema.XmlSchema&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation option is not set, the AddSchema method does nothing.</source>
          <target state="translated">場合、&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;検証オプションが設定されていない、AddSchema メソッドは、何も行われません&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Schema.XmlSchema&gt; object to add to the set of schemas used for validation.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;検証に使用するスキーマのセットに追加するオブジェクト&lt;/xref:System.Xml.Schema.XmlSchema&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter specified is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;指定されたパラメーターが<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Xml.Schema.XmlSchema&gt; 。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The target namespace of the &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter matches that of any element or attribute already encountered by the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">ターゲットの名前空間、&lt;xref:System.Xml.Schema.XmlSchema&gt;パラメーターと一致するすべての要素と属性が既に遭遇した、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Xml.Schema.XmlSchema&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter is invalid.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;パラメーターが無効です&lt;/xref:System.Xml.Schema.XmlSchema&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Ends validation and checks identity constraints for the entire XML document.</source>
          <target state="translated">検証を終了し、XML ドキュメント全体について id 制約をチェックします。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The EndValidation method ends validation and checks identity constraints for the entire XML document if the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation option is set.</source>
          <target state="translated">EndValidation メソッドは、検証を終了し、場合に、XML ドキュメント全体について id 制約をチェック、&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;検証オプションを設定します&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An identity constraint error was found in the XML document.</source>
          <target state="translated">XML ドキュメントでは、id 制約エラーが見つかりました。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns the expected attributes for the current element context.</source>
          <target state="translated">現在の要素コンテキストに対して予期される属性を返します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the GetExpectedAttributes method.</source>
          <target state="translated">GetExpectedAttributes メソッドを使用する際に考慮する重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-   If the GetExpectedAttributes method is called immediately after the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt; method, all the attributes that could appear in the XML document are returned.</source>
          <target state="translated">-後すぐに GetExpectedAttributes メソッドが呼び出された場合、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;メソッド、XML ドキュメントで使用可能なすべての属性が返されます&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-   If the GetExpectedAttributes method is called after one or more calls to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method, the attributes that haven't yet been validated for the current element are returned.</source>
          <target state="translated">-GetExpectedAttributes メソッドが&amp;1; つまたは複数の呼び出し後に呼び出された場合、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;メソッド、現在の要素にまだ検証されていない属性が返されます&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects or an empty array if there are no expected attributes.</source>
          <target state="translated">配列<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトまたは期待される属性がない場合は空の配列。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns the expected particles in the current element context.</source>
          <target state="translated">現在の要素コンテキストで期待されるパーティクルを返します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The valid particles that can be returned by the GetExpectedParticles method are instances of the &lt;xref:System.Xml.Schema.XmlSchemaElement&gt; and &lt;xref:System.Xml.Schema.XmlSchemaAny&gt; classes.</source>
          <target state="translated">インスタンスである有効なパーティクル GetExpectedParticles メソッドによって返されることができますが、&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;と&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;クラス&lt;/xref:System.Xml.Schema.XmlSchemaAny&gt;&lt;/xref:System.Xml.Schema.XmlSchemaElement&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When the compositor for the content model is an <ph id="ph1">`xs:sequence`</ph>, only the next particle in the sequence is returned.</source>
          <target state="translated">コンテンツ モデルのコンポジターがの場合、<ph id="ph1">`xs:sequence`</ph>シーケンス内の次のパーティクルのみが返されます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the compositor for the content model is an <ph id="ph1">`xs:all`</ph> or an <ph id="ph2">`xs:choice`</ph>, then all valid particles that could follow in the current element context are returned.</source>
          <target state="translated">コンテンツ モデルのコンポジターがある場合、<ph id="ph1">`xs:all`</ph>または<ph id="ph2">`xs:choice`</ph>、現在の要素コンテキストに続くことができる有効なパーティクルすべてが返されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the <ph id="ph1">`book`</ph> element, the <ph id="ph2">`book`</ph> element is the current element context.</source>
          <target state="translated">たとえば、XML スキーマ定義言語 (XSD) スキーマと XML ドキュメントの検証後に続く、<ph id="ph1">`book`</ph>要素、<ph id="ph2">`book`</ph>要素は、現在の要素コンテキスト。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The GetExpectedParticles method returns an array containing a single &lt;xref:System.Xml.Schema.XmlSchemaElement&gt; object representing the <ph id="ph1">`title`</ph> element.</source>
          <target state="translated">GetExpectedParticles メソッドは、1 つを含む配列を返します&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;オブジェクトを表す、<ph id="ph1">`title`</ph>要素&lt;/xref:System.Xml.Schema.XmlSchemaElement&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When the validation context is the <ph id="ph1">`title`</ph> element, the GetExpectedParticles method returns an empty array.</source>
          <target state="translated">検証コンテキストの場合は、<ph id="ph1">`title`</ph>要素、GetExpectedParticles メソッドは、空の配列を返します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the GetExpectedParticles method is called after the <ph id="ph1">`title`</ph> element has been validated but before the <ph id="ph2">`description`</ph> element has been validated, it returns an array containing a single &lt;xref:System.Xml.Schema.XmlSchemaElement&gt; object representing the <ph id="ph3">`description`</ph> element.</source>
          <target state="translated">後に GetExpectedParticles メソッドが呼び出された場合、<ph id="ph1">`title`</ph>要素はその前に検証されて、<ph id="ph2">`description`</ph>要素の検証を&amp;1; つを含む配列を返します&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;オブジェクトを表す、<ph id="ph3">`description`</ph>要素&lt;/xref:System.Xml.Schema.XmlSchemaElement&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the GetExpectedParticles method is called after the <ph id="ph1">`description`</ph> element has been validated then it returns an array containing a single &lt;xref:System.Xml.Schema.XmlSchemaAny&gt; object representing the wildcard.</source>
          <target state="translated">後に、GetExpectedParticles メソッドが呼び出された場合、<ph id="ph1">`description`</ph>要素の検証し、1 つを含む配列を返します&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;ワイルドカードを表すオブジェクト&lt;/xref:System.Xml.Schema.XmlSchemaAny&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```vb#   Dim reader As XmlReader =  XmlReader.Create("input.xml")       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, "schema.xsd")   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement("book", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement("title", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement("description", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement("namespace", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```</ph>      <ph id="ph2">```c#   XmlReader reader = XmlReader.Create("input.xml");      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, "schema.xsd");   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement("book", "", null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement("title", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement("description", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement("namespace", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```</ph>       The example takes the following XML as input.</source>
          <target state="translated"><ph id="ph1">```vb#   Dim reader As XmlReader =  XmlReader.Create("input.xml")       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, "schema.xsd")   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement("book", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement("title", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement("description", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement("namespace", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```</ph>      <ph id="ph2">```c#   XmlReader reader = XmlReader.Create("input.xml");      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, "schema.xsd");   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement("book", "", null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement("title", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement("description", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement("namespace", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```</ph>この例は、次の XML を入力として受け取ります。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;`</ph>       <ph id="ph2">`&lt;xs:element name="book"&gt;`</ph>       <ph id="ph3">`&lt;xs:complexType&gt;`</ph>       <ph id="ph4">`&lt;xs:sequence&gt;`</ph>       <ph id="ph5">`&lt;xs:element name="title" type="xs:string" /&gt;`</ph>       <ph id="ph6">`&lt;xs:element name="description" type="xs:string" /&gt;`</ph>       <ph id="ph7">`&lt;xs:any processContents ="lax"/&gt;`</ph>       <ph id="ph8">`&lt;/xs:sequence&gt;`</ph>       <ph id="ph9">`&lt;/xs:complexType&gt;`</ph>       <ph id="ph10">`&lt;/xs:element&gt;`</ph>       <ph id="ph11">`&lt;/xs:schema&gt;`</ph>       The example takes the following XSD schema as input.</source>
          <target state="translated"><ph id="ph1">`&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;`</ph>       <ph id="ph2">`&lt;xs:element name="book"&gt;`</ph>       <ph id="ph3">`&lt;xs:complexType&gt;`</ph>       <ph id="ph4">`&lt;xs:sequence&gt;`</ph>       <ph id="ph5">`&lt;xs:element name="title" type="xs:string" /&gt;`</ph>       <ph id="ph6">`&lt;xs:element name="description" type="xs:string" /&gt;`</ph>       <ph id="ph7">`&lt;xs:any processContents ="lax"/&gt;`</ph>       <ph id="ph8">`&lt;/xs:sequence&gt;`</ph>       <ph id="ph9">`&lt;/xs:complexType&gt;`</ph>       <ph id="ph10">`&lt;/xs:element&gt;`</ph>       <ph id="ph11">`&lt;/xs:schema&gt;`</ph>この例は、次の XSD スキーマを入力として受け取ります。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;book&gt;`</ph>       <ph id="ph2">`&lt;title&gt;My Book&lt;/title&gt;`</ph>       <ph id="ph3">`&lt;description&gt;My Book's Description&lt;/description&gt;`</ph>       <ph id="ph4">`&lt;namespace&gt;System.Xml.Schema&lt;/namespace&gt;`</ph>       <ph id="ph5">`&lt;/book&gt;`</ph></source>
          <target state="translated"><ph id="ph1">`&lt;book&gt;`</ph>       <ph id="ph2">`&lt;title&gt;My Book&lt;/title&gt;`</ph>       <ph id="ph3">`&lt;description&gt;My Book's Description&lt;/description&gt;`</ph>       <ph id="ph4">`&lt;namespace&gt;System.Xml.Schema&lt;/namespace&gt;`</ph>       <ph id="ph5">`&lt;/book&gt;`</ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaParticle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects or an empty array if there are no expected particles.</source>
          <target state="translated">配列<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaParticle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトまたは期待されるパーティクルが存在しない場合は空の配列。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Validates identity constraints on the default attributes and populates the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified with <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects for any attributes with default values that have not been previously validated using the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt; method in the element context.</source>
          <target state="translated">既定の属性の id 制約を検証し、設定、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で指定された<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>の検証されていない以前を使用して既定値を持つ属性オブジェクト、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;の要素コンテキストでのメソッド&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The GetUnspecifiedDefaultAttributes method must be called after validating all the attributes for the current element with the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method.</source>
          <target state="translated">現在の要素のすべての属性を検証した後、GetUnspecifiedDefaultAttributes メソッドを呼び出す必要があります、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;メソッド&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The GetUnspecifiedDefaultAttributes method should be used to determine what default attributes are to be inserted into the XML document being validated.</source>
          <target state="translated">既定の属性が検証される XML ドキュメントに挿入するかを判断 GetUnspecifiedDefaultAttributes メソッドを使用してください。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to populate with <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects for any attributes not yet encountered during validation in the element context.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の読み込み先と<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>の要素コンテキストでの検証中に検出されていない属性オブジェクトです。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Initializes the state of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">状態を初期化、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The Initialize method is only valid if called immediately after the construction of an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object or after a call to &lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;.</source>
          <target state="translated">Initialize メソッドはのみの構築の直後後に呼び出される場合に有効な&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;オブジェクトまたは&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;への呼び出し後&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Calling the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize<bpt id="p1">*</bpt>&gt; method is valid immediately after the construction of an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object or after a call to &lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation<ept id="p1">*</ept>&gt; only.</source>
          <target state="translated">呼び出す、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、の作成後すぐに有効な<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクトまたは呼び出しの後に&lt;&gt; <ept id="p1">*</ept>&gt; のみです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Initializes the state of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using the <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> specified for partial validation.</source>
          <target state="translated">状態を初期化、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトを使用して、 <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>部分検証を指定します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The Initialize method that takes an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt; as a parameter initializes an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object to its starting state for partial validation.</source>
          <target state="translated">Initialize メソッドを受け取る、&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;ようにパラメーターを初期化、&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;部分検証のための開始状態オブジェクト&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;&lt;/xref:System.Xml.Schema.XmlSchemaObject&gt;。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object used to initialize the validation context of the <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> object for partial validation.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、または<bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>の検証コンテキストを初期化するために使用されるオブジェクト、 <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>部分検証のためのオブジェクト。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Calling the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize<bpt id="p1">*</bpt>&gt; method is valid immediately after the construction of an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object or after a call to &lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation<ept id="p1">*</ept>&gt; only.</source>
          <target state="translated">呼び出す、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、の作成後すぐに有効な<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクトまたは呼び出しの後に&lt;&gt; <ept id="p1">*</ept>&gt; のみです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter is not an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter is not an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter cannot be <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>パラメーターを指定できません<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets or sets the line number information for the XML node being validated.</source>
          <target state="translated">取得または検証する XML ノードの行番号情報を設定します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Line information is reported by any &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; thrown during the validation process.</source>
          <target state="translated">いずれかが行情報が報告された&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;検証プロセス中にスローされます&lt;/xref:System.Xml.Schema.XmlSchemaValidationException&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-   The default &lt;xref:System.Xml.IXmlLineInfo&gt; object returned by the LineInfoProvider property returns 0 for the &lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt; and &lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt; properties.</source>
          <target state="translated">-既定&lt;xref:System.Xml.IXmlLineInfo&gt;プロパティに対して 0 を返します LineInfoProvider によって返されるオブジェクト、&lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;と&lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;プロパティ&lt;/xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;&lt;/xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;&lt;/xref:System.Xml.IXmlLineInfo&gt;。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.IXmlLineInfo&gt; object.</source>
          <target state="translated">&lt;xref:System.Xml.IXmlLineInfo&gt;オブジェクト&lt;/xref:System.Xml.IXmlLineInfo&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Skips validation of the current element content and prepares the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to validate content in the parent element's context.</source>
          <target state="translated">現在の要素のコンテンツの検証をスキップし、準備、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>親要素のコンテキストでコンテンツを検証するオブジェクト。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the SkipToEndElement method.</source>
          <target state="translated">SkipToEndElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-   The SkipToEndElement method skips validation of the current element content and prepares the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method.</source>
          <target state="translated">-SkipToEndElement メソッドが現在の要素のコンテンツの検証をスキップし、準備、&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;を親要素のコンテキストでコンテンツを検証するオブジェクトですこれは、現在の要素のすべての子の検証をスキップし、呼び出すことに相当します&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;メソッド。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt; 。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-   If the current element content is successfully skipped, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.</source>
          <target state="translated">-現在の要素の内容は正常にスキップされた場合、&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;オブジェクトの (場合、指定された)&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;プロパティが&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  No validation errors are reported on skipped content.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; スキップしたコンテンツの検証エラーは報告されません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set if the current element content is successfully skipped.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトのプロパティ設定されている場合は、現在の要素の内容は正常にスキップされます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The SkipToEndElement method was not called in the correct sequence.</source>
          <target state="translated">SkipToEndElement メソッドは、正しい順序で呼び出されませんでした。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For example, calling SkipToEndElement after calling SkipToEndElement.</source>
          <target state="translated">たとえば、呼び出し元 SkipToEndElement SkipToEndElement の呼び出し後にします。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets the source URI for the XML node being validated.</source>
          <target state="translated">取得または検証する XML ノードのソース URI を設定します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The source URI is reported by any &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; thrown during the validation process.</source>
          <target state="translated">URI がいずれかによって報告されたソース&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;検証プロセス中にスローされます&lt;/xref:System.Xml.Schema.XmlSchemaValidationException&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-   If the SourceUri property is not set, the file name for the XML document is &lt;xref:System.String.Empty&gt; in validation error messages.</source>
          <target state="translated">-SourceUri プロパティが設定されていない場合、XML ドキュメントのファイル名は&lt;xref:System.String.Empty&gt;で検証エラー メッセージ&lt;/xref:System.String.Empty&gt;。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; object representing the source URI for the XML node being validated; the default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.Uri&gt;検証する XML ノードのソース URI を表すオブジェクトです既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Uri&gt; 。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">属性名、名前空間 URI、および現在の要素コンテキストで値を検証します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateAttribute method.</source>
          <target state="translated">ValidateAttribute メソッドの使用時に考慮すべき重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt; method must be called after validating all the attributes for the current element with the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method.</source>
          <target state="translated">-&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;と現在の要素のすべての属性を検証した後、メソッドを呼び出す必要があります、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;メソッド&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object was passed to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt; method, the ValidateAttribute method validates the attribute against the &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object.</source>
          <target state="translated">場合、&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;にオブジェクトが渡された、&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;メソッド、ValidateAttribute メソッド属性を検証しますに対して、&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;オブジェクト&lt;/xref:System.Xml.Schema.XmlSchemaAttribute&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-   If the attribute is successfully validated in the current element context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">場合は、属性の現在の要素コンテキストで検証が成功、&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;オブジェクトの (場合、指定された) &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;、 &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;、 &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;、および&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;プロパティが設定されて検証の結果&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">検証する属性のローカル名。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">名前空間 URI 属性を検証します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The value of the attribute to validate.</source>
          <target state="translated">検証する属性の値。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト属性の検証に成功であるプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The validated attribute's value.</source>
          <target state="translated">検証された属性の値です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">現在の要素コンテキストで属性が正しくありません。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<ept id="p1">*</ept>&gt; after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、正しい順序で呼び出されませんでした。たとえば、呼び出す&lt;&gt; <ept id="p1">*</ept>&gt; &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;を呼び出した後</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定されたパラメーターの&amp;1; つ以上が<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">属性名、名前空間 URI、および現在の要素コンテキストで値を検証します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateAttribute method.</source>
          <target state="translated">ValidateAttribute メソッドの使用時に考慮すべき重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt; method must be called after validating all the attributes for the current element with the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method.</source>
          <target state="translated">-&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;と現在の要素のすべての属性を検証した後、メソッドを呼び出す必要があります、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;メソッド&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object was passed to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt; method, the ValidateAttribute method validates the attribute against the &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object.</source>
          <target state="translated">場合、&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;にオブジェクトが渡された、&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;メソッド、ValidateAttribute メソッド属性を検証しますに対して、&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;オブジェクト&lt;/xref:System.Xml.Schema.XmlSchemaAttribute&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-   If the attribute is successfully validated in the current element context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">場合は、属性の現在の要素コンテキストで検証が成功、&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;オブジェクトの (場合、指定された) &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;、 &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;、 &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;、および&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;プロパティが設定されて検証の結果&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">検証する属性のローカル名。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">名前空間 URI 属性を検証します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>属性の XML スキーマ定義言語 (XSD) 型と互換性のある共通言語ランタイム (CLR) 型として属性の値を渡すために使用します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト属性の検証に成功であるプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This parameter and can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The validated attribute's value.</source>
          <target state="translated">検証された属性の値です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">現在の要素コンテキストで属性が正しくありません。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<ept id="p1">*</ept>&gt; after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、正しい順序で呼び出されませんでした。たとえば、呼び出す&lt;&gt; <ept id="p1">*</ept>&gt; &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;を呼び出した後</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定されたパラメーターの&amp;1; つ以上が<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Validates the element in the current context.</source>
          <target state="translated">現在のコンテキスト内の要素を検証します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateElement method.</source>
          <target state="translated">ValidateElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>-   If the element name is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">場合、現在のコンテキストでは、要素名は検証が成功、&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;オブジェクトの (場合、指定された) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;、 &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;、 &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;、および&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;プロパティが設定されて検証の結果&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>-   If the element name or any of its attributes are invalid the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;; otherwise the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.</source>
          <target state="translated">要素名またはその属性のいずれかが有効でない場合、現在のコンテキスト、&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;プロパティに設定されている&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;以外の場合&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt;にプロパティが設定されている&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The local name of the element to validate.</source>
          <target state="translated">検証する要素のローカル名。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">名前空間を検証する要素の URI。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト要素の名前の検証が成功であるプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">現在のコンテキストで要素の名前が正しくありません。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、正しい順序で呼び出されませんでした。たとえば、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;の呼び出し後にメソッドが呼び出されます</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Validates the element in the current context with the <ph id="ph1">`xsi:Type`</ph>, <ph id="ph2">`xsi:Nil`</ph>, <ph id="ph3">`xsi:SchemaLocation`</ph>, and <ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph> attribute values specified.</source>
          <target state="translated">現在のコンテキストで要素を検証、 <ph id="ph1">`xsi:Type`</ph>、 <ph id="ph2">`xsi:Nil`</ph>、 <ph id="ph3">`xsi:SchemaLocation`</ph>、および<ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph>属性の値を指定します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateElement method.</source>
          <target state="translated">ValidateElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-   If the element name is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">場合、現在のコンテキストでは、要素名は検証が成功、&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;オブジェクトの (場合、指定された) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;、 &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;、 &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;、および&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;プロパティが設定されて検証の結果&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>-   If the element name or any of its attributes are invalid in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;; otherwise the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.</source>
          <target state="translated">場合は、要素名の属性のいずれかが無効です現在のコンテキストで、&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;プロパティがに設定されている&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;以外の場合&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;プロパティが&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;。&lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; value was not passed as a parameter to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt; constructor, <ph id="ph1">`xsi:SchemaLocation`</ph> and <ph id="ph2">`xsi:NoNamespaceSchemaLocation`</ph> attribute values are ignored.</source>
          <target state="translated">場合、&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;へのパラメーターとして値が渡されませんでした、&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;コンス トラクター、<ph id="ph1">`xsi:SchemaLocation`</ph>と<ph id="ph2">`xsi:NoNamespaceSchemaLocation`</ph>属性値は無視されます&lt;/xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The local name of the element to validate.</source>
          <target state="translated">検証する要素のローカル名。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">名前空間を検証する要素の URI。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト要素の名前の検証が成功であるプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsi:Type`</ph> attribute value of the element.</source>
          <target state="translated"><ph id="ph1">`xsi:Type`</ph>属性要素の値。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsi:Nil`</ph> attribute value of the element.</source>
          <target state="translated"><ph id="ph1">`xsi:Nil`</ph>属性要素の値。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsi:SchemaLocation`</ph> attribute value of the element.</source>
          <target state="translated"><ph id="ph1">`xsi:SchemaLocation`</ph>属性要素の値。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsi:NoNamespaceSchemaLocation`</ph> attribute value of the element.</source>
          <target state="translated"><ph id="ph1">`xsi:NoNamespaceSchemaLocation`</ph>属性要素の値。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">現在のコンテキストで要素の名前が正しくありません。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、正しい順序で呼び出されませんでした。たとえば、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;の呼び出し後にメソッドが呼び出されます</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</source>
          <target state="translated">要素のテキストの内容は、単純なコンテンツを持つ要素の場合は、そのデータ型に従った有効なかどうかは検証し、現在の要素のコンテンツは複雑なコンテンツを持つ要素の完了します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateEndElement method.</source>
          <target state="translated">ValidateEndElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-   For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">-単純コンテンツを持つ要素には、メソッドあることを確認、要素のテキスト コンテンツがそのデータ型に従った有効では、解析されたを返します ValidateEndElement は、値を入力します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The text content of the element is obtained from the results of previous calls to &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;.</source>
          <target state="translated">要素のテキストの内容は&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;前の呼び出しの結果から取得します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>-   For elements with complex content, the ValidateEndElement method verifies if the content of the current element is complete.</source>
          <target state="translated">要素については、複雑な内容は、ValidateEndElement メソッドは、現在の要素のコンテンツは完了を確認します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>-   If the element has a default value, the value returned from the ValidateEndElement method is the default value for the element.</source>
          <target state="translated">要素に既定値がある場合、ValidateEndElement メソッドから返される値は、要素の既定値です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object was constructed with the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">場合、&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;オブジェクトが構築した、 &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;、ValidateEndElement メソッド id 制約ルール チェック (存在する場合) の要素に適用されている、パラメーターとして値&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>-   If the element is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">場合は、要素の現在のコンテキストで検証が成功、&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;オブジェクトの (場合、指定された) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;、 &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;、および&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;プロパティが設定されて検証の結果&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the element.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト要素の検証に成功であるプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The parsed, typed text value of the element if the element has simple content.</source>
          <target state="translated">解析された、型指定された要素のテキスト値の要素に単純コンテンツがある場合。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The element's content is not valid.</source>
          <target state="translated">要素のコンテンツが正しくありません。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、正しい順序で呼び出されませんでした。たとえば場合、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; &lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;の呼び出し後にメソッドが呼び出されます</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Verifies if the text content of the element specified is valid according to its data type.</source>
          <target state="translated">指定された要素のテキストの内容がそのデータ型に従った有効なかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  If you are validating against the <ph id="ph2">`xs:key`</ph>, <ph id="ph3">`xs:keyref`</ph>, or <ph id="ph4">`xs:unique`</ph> identity constraints, do not use the ValidateEndElement method overload.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; に対して検証する場合、 <ph id="ph2">`xs:key`</ph>、 <ph id="ph3">`xs:keyref`</ph>、または<ph id="ph4">`xs:unique`</ph>id 制約が ValidateEndElement メソッドのオーバー ロードを使用しないでください。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Instead, call the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt; method and pass it the value of the element.</source>
          <target state="translated">代わりに、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;メソッドを要素の値を渡します&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Then call the  &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method overload, which takes &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; as an argument, to verify that the text content of the element is valid according to its data type.</source>
          <target state="translated">まず、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;はメソッドのオーバー ロード&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;要素のテキストの内容がそのデータ型に従った有効であることを確認する、引数として&lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateEndElement method.</source>
          <target state="translated">ValidateEndElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>-   For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">-単純コンテンツを持つ要素には、メソッドあることを確認、要素のテキスト コンテンツがそのデータ型に従った有効では、解析されたを返します ValidateEndElement は、値を入力します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The text content of the element is obtained from the typed content passed as a parameter.</source>
          <target state="translated">要素のテキストの内容は、パラメーターとして渡された型指定されたコンテンツから取得されます。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>-   If calls to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt; method have been previously made, an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">If への呼び出し、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;メソッドは既に行われている、&lt;xref:System.InvalidOperationException&gt;がスローされます&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>-   If the element has complex content an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">要素に複雑なコンテンツがある場合、&lt;xref:System.InvalidOperationException&gt;がスローされます&lt;/xref:System.InvalidOperationException&gt;。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object was constructed with the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">場合、&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;オブジェクトが構築した、 &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;、ValidateEndElement メソッド id 制約ルール チェック (存在する場合) の要素に適用されている、パラメーターとして値&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>-   If the element is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">場合は、要素の現在のコンテキストで検証が成功、&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;オブジェクトの (場合、指定された) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;、 &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;、および&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;プロパティが設定されて検証の結果&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the text content of the element.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト要素のテキスト コンテンツの検証が成功であるプロパティが設定されます。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The typed text content of the element.</source>
          <target state="translated">要素の型指定されたテキストの内容。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The parsed, typed simple content of the element.</source>
          <target state="translated">解析されたの型指定された要素の単純な内容です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The element's text content is not valid.</source>
          <target state="translated">要素のテキスト コンテンツが正しくありません。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence (for example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement<bpt id="p2">*</bpt>&gt;), calls to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<ept id="p2">*</ept>&gt; method have been previously made, or the element has complex content.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、正しい順序で呼び出されませんでした (場合など、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 呼び出した後にメソッドが呼び出された&lt;&gt; <bpt id="p2">*</bpt>&gt;) への呼び出し、 &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt; メソッドまでに作成された、または要素が複合コンテンツ。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The typed text content parameter cannot be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">型指定されたテキスト コンテンツ パラメーターを指定できません<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Verifies whether all the required attributes in the element context are present and prepares the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to validate the child content of the element.</source>
          <target state="translated">すべての要素コンテキスト中の必須の属性が存在かどうかを確認し、準備、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要素の子コンテンツを検証するオブジェクト。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateEndOfAttributes method.</source>
          <target state="translated">ValidateEndOfAttributes メソッドの使用時に考慮すべき重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt; method should always be called before ValidateEndOfAttributes.</source>
          <target state="translated">- &lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;ValidateEndOfAttributes 前にメソッドを呼び出すことが常に必要があります&lt;/xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>-   The ValidateEndOfAttributes method must be called before proceeding with validation of an element's content.</source>
          <target state="translated">-ValidateEndOfAttributes メソッドは、要素のコンテンツの検証を続行する前に呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>-   If all the required attributes in the element context are present, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.</source>
          <target state="translated">要素コンテキストで必要なすべての属性が存在する場合、&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;オブジェクトの (場合、指定された) &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt;にプロパティが設定されている&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful verification that all the required attributes in the element context are present.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの要素コンテキストで必要なすべての属性が存在する検証が成功したであるプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターを指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>One or more of the required attributes in the current element context were not found.</source>
          <target state="translated">現在の要素コンテキスト中の必須の属性の&amp;1; つ以上が見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The ValidateEndOfAttributes method was not called in the correct sequence.</source>
          <target state="translated">ValidateEndOfAttributes メソッドは、正しい順序で呼び出されませんでした。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>For example, calling ValidateEndOfAttributes after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;.</source>
          <target state="translated">たとえば、呼び出し元 ValidateEndOfAttributes &lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;を呼び出した後</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定されたパラメーターの&amp;1; つ以上が<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Validates whether the text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">検証するかどうか、テキスト<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>は現在の要素コンテキストでは使用を指定し、現在の要素に単純コンテンツがある場合は、検証用のテキストを累積します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateText method.</source>
          <target state="translated">ValidateText メソッドを使用する際に考慮する重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>-   If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the ValidateText method until the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called.</source>
          <target state="translated">要素に単純なコンテンツ、テキストがある場合<ph id="ph1">`string`</ph>指定まで ValidateText メソッドを呼び出すたびに連結された、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;メソッドが呼び出されます&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called, all the text is validated.</source>
          <target state="translated">ときに、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;メソッドが呼び出されると、すべてのテキストを検証します&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>-   If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">要素に複雑なコンテンツがある場合、テキスト連結演算子は行われません。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to validate in the current element context.</source>
          <target state="translated">テキスト<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>を現在の要素コンテキストで検証します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is not allowed in the current element context.</source>
          <target state="translated">テキスト<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定は、現在の要素コンテキストでは許可されていません。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、正しい順序で呼び出されませんでした。たとえば、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;の呼び出し後にメソッドが呼び出されます</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter cannot be <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">テキスト<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>パラメーターを指定できません<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Validates whether the text returned by the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">テキストがによって返されるかどうかを検証、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定されたオブジェクトの現在の要素コンテキストで許可され、現在の要素に単純コンテンツがある場合は、検証用のテキストを累積します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateText method.</source>
          <target state="translated">ValidateText メソッドを使用する際に考慮する重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>-   If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the ValidateText method until the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called.</source>
          <target state="translated">要素に単純なコンテンツ、テキストがある場合<ph id="ph1">`string`</ph>指定まで ValidateText メソッドを呼び出すたびに連結された、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;メソッドが呼び出されます&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called, all the text is validated.</source>
          <target state="translated">ときに、&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;メソッドが呼び出されると、すべてのテキストを検証します&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>-   If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">要素に複雑なコンテンツがある場合、テキスト連結演算子は行われません。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>属性の XML スキーマ定義言語 (XSD) 型と互換性のある共通言語ランタイム (CLR) 型として、テキスト値を渡すために使用します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is not allowed in the current element context.</source>
          <target state="translated">テキスト<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定は、現在の要素コンテキストでは許可されていません。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、正しい順序で呼び出されませんでした。たとえば、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;の呼び出し後にメソッドが呼び出されます</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter cannot be <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">テキスト<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>パラメーターを指定できません<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Validates whether the white space in the <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">検証中、白の領域かどうか、 <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は現在の要素コンテキストでは使用を指定し、現在の要素に単純コンテンツがある場合は、検証用の空白を累積します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>A white space <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to validate in the current element context.</source>
          <target state="translated">空白文字<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>を現在の要素コンテキストで検証します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">空白文字は、現在の要素コンテキストでは許可されません。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、正しい順序で呼び出されませんでした。たとえば場合、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;の呼び出し後にメソッドが呼び出されます</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Validates whether the white space returned by the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">空白文字がによって返されるかどうかを検証、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定されたオブジェクトの現在の要素コンテキストで許可され、現在の要素に単純コンテンツがある場合は、検証用の空白を累積します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>属性の XML スキーマ定義言語 (XSD) 型と互換性のある共通言語ランタイム (CLR) 型として空白値を渡すために使用します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">空白文字は、現在の要素コンテキストでは許可されません。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; メソッドは、正しい順序で呼び出されませんでした。たとえば場合、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;の呼び出し後にメソッドが呼び出されます</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that receives schema validation warnings and errors encountered during schema validation.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>スキーマ検証の警告とスキーマの検証中に発生したエラーを受け取る。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>If no &lt;xref:System.Xml.Schema.ValidationEventHandler&gt; is specified, an &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; is thrown for all schema validation errors with an &lt;xref:System.Xml.Schema.XmlSeverityType&gt; value of &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.</source>
          <target state="translated">ない場合は&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;を指定すると&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;、 &lt;xref:System.Xml.Schema.XmlSeverityType&gt; &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.&lt;/xref:System.Xml.Schema.XmlSeverityType&gt;の値&lt;/xref:System.Xml.Schema.XmlSeverityType&gt;を持つすべてのスキーマ検証エラーに対してスローされる&lt;/xref:System.Xml.Schema.XmlSchemaValidationException&gt;&lt;/xref:System.Xml.Schema.ValidationEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; is not thrown for validation warnings with an &lt;xref:System.Xml.Schema.XmlSeverityType&gt; value of &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.</source>
          <target state="translated">の&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;&lt;xref:System.Xml.Schema.XmlSeverityType&gt;&lt;xref:System.Xml.Schema.XmlSeverityType&gt;。&lt;/xref:System.Xml.Schema.XmlSeverityType&gt;の値&lt;/xref:System.Xml.Schema.XmlSeverityType&gt;を持つ検証警告についてはスローされません。&lt;/xref:System.Xml.Schema.XmlSchemaValidationException&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Gets or sets the object sent as the sender object of a validation event.</source>
          <target state="translated">取得または検証イベントの送信元オブジェクトとして送信されたオブジェクトを設定します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt;; the default is this <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;; 既定では、この<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to resolve <ph id="ph1">`xs:import`</ph> and <ph id="ph2">`xs:include`</ph> elements as well as <ph id="ph3">`xsi:schemaLocation`</ph> and <ph id="ph4">`xsi:noNamespaceSchemaLocation`</ph> attributes.</source>
          <target state="translated">セット、 <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>解決に使用されるオブジェクト<ph id="ph1">`xs:import`</ph>と<ph id="ph2">`xs:include`</ph>要素だけでなく<ph id="ph3">`xsi:schemaLocation`</ph>と<ph id="ph4">`xsi:noNamespaceSchemaLocation`</ph>属性。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object; the default is an <bpt id="p2">&lt;xref href="System.Xml.XmlUrlResolver"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト以外の既定値は、 <bpt id="p2">&lt;xref href="System.Xml.XmlUrlResolver"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>