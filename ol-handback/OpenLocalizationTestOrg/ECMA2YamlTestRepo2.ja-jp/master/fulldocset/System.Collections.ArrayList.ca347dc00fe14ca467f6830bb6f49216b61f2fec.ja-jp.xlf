<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2de9fc820be99c670d7619152777dcdaaee6876a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.ArrayList.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e177a63edad1cfd511e6b27b15cbd4fbef94eeed</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">764825ee98e69f44c09e869abcec65ccab26e908</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface using an array whose size is dynamically increased as required.</source>
          <target state="translated">実装して、&lt;xref:System.Collections.IList&gt;インターフェイスのサイズが動的に拡大される配列を使用して必要に応じて&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>.</source>
          <target state="translated">この型の .NET Framework ソース コードを参照するを参照してください。、<bpt id="p1">[</bpt>参照ソース<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt; この型の .NET Framework ソース コードを表示するにはを参照してください、<bpt id="p1">[</bpt>参照ソース<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
          <target state="translated">ソース コードをオンラインで参照、オフラインで表示、リファレンスをダウンロードおよび; デバッグ中にソース (パッチや更新を含む) をステップ参照してください<bpt id="p1">[</bpt>指示<ept id="p1">](http://referencesource.microsoft.com/)</ept>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The ArrayList class is designed to hold heterogeneous collections of objects.</source>
          <target state="translated">ArrayList クラスは、異種オブジェクトのコレクションを保持するために設計されています。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, it does not always offer the best performance.</source>
          <target state="translated">ただし、常に提供しません、最適なパフォーマンスです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Instead, we recommend the following:      -   For a heterogeneous collection of objects, use the <ph id="ph1">`List&lt;Object&gt;`</ph> (in C#) or <ph id="ph2">`List(Of Object)`</ph> (in Visual Basic) type.</source>
          <target state="translated">代わりに、次の推奨:: を使用して、オブジェクトの異種コレクションの<ph id="ph1">`List&lt;Object&gt;`</ph>(C# の場合) または<ph id="ph2">`List(Of Object)`</ph>(Visual Basic で) を入力します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>-   For a homogeneous collection of objects, use the &lt;xref:System.Collections.Generic.List%601&gt; class.</source>
          <target state="translated">-オブジェクトの同種のコレクションを使用して、&lt;xref:System.Collections.Generic.List%601&gt;クラス&lt;/xref:System.Collections.Generic.List%601&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>See the "Performance Considerations" section in the &lt;xref:System.Collections.Generic.List%601&gt; reference topic for a discussion of the relative performance of these classes.</source>
          <target state="translated">「パフォーマンスに関する考慮事項」セクションを参照して、&lt;xref:System.Collections.Generic.List%601&gt;これらクラスの相対的なパフォーマンス ディスカッションのリファレンス トピック。&lt;/xref:System.Collections.Generic.List%601&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ArrayList is not guaranteed to be sorted.</source>
          <target state="translated">ArrayList は、並べ替えは保証されません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You must sort the ArrayList by calling its &lt;xref:System.Collections.ArrayList.Sort%2A&gt; method prior to performing operations (such as &lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;) that require the ArrayList to be sorted.</source>
          <target state="translated">ArrayList を呼び出すことによって並べ替える必要があります、&lt;xref:System.Collections.ArrayList.Sort%2A&gt;操作を実行する前にメソッド (など&lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;) に並べ替えられる ArrayList を必要とします&lt;/xref:System.Collections.ArrayList.BinarySearch%2A&gt;&lt;/xref:System.Collections.ArrayList.Sort%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To maintain a collection that is automatically sorted as new elements are added, you can use the &lt;xref:System.Collections.Generic.SortedSet%601&gt; class.</source>
          <target state="translated">新しい要素が追加されると自動的に並べ替えられるコレクションを維持するために、&lt;xref:System.Collections.Generic.SortedSet%601&gt;クラス&lt;/xref:System.Collections.Generic.SortedSet%601&gt;を使用することができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The capacity of an ArrayList is the number of elements the ArrayList can hold.</source>
          <target state="translated">ArrayList の容量とは、ArrayList を格納できる要素の数です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As elements are added to an ArrayList, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">ArrayList に要素を追加すると、容量を増やすは自動的に再割り当て、必要に応じて。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt; or by setting the &lt;xref:System.Collections.ArrayList.Capacity%2A&gt; property explicitly.</source>
          <target state="translated">呼び出すことによって、容量を削減できる&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;かを設定して、&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;プロパティに明示的にします&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;&lt;/xref:System.Collections.ArrayList.TrimToSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For very large ArrayList objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph1">`enabled`</ph> attribute of the  configuration element to <ph id="ph2">`true`</ph> in the run-time environment.</source>
          <target state="translated">ArrayList オブジェクトの非常に大きい場合は、設定して、64 ビット システム上の 20億要素に最大の容量を増やすことができます、<ph id="ph1">`enabled`</ph>する構成要素の属性<ph id="ph2">`true`</ph>実行時環境でします。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">このコレクション内の要素は、整数インデックスを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">このコレクションのインデックスは&amp;0; から始まります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The ArrayList collection accepts <ph id="ph1">`null`</ph> as a valid value.</source>
          <target state="translated">ArrayList コレクション受け入れる<ph id="ph1">`null`</ph>として有効な値です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It also allows duplicate elements.</source>
          <target state="translated">重複する要素こともできます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Using multidimensional arrays as elements in an ArrayList collection is not supported.</source>
          <target state="translated">ArrayList コレクション内の要素として多次元配列の使用はサポートされていません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty and has the default initial capacity.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が空で、既定の初期量を備えたクラスです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The capacity of an &lt;xref:System.Collections.ArrayList&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can hold.</source>
          <target state="translated">容量、&lt;xref:System.Collections.ArrayList&gt;は要素の数を&lt;xref:System.Collections.ArrayList&gt;を保持できます&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>As elements are added to an &lt;xref:System.Collections.ArrayList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、 &lt;xref:System.Collections.ArrayList&gt;、容量を増やすは自動的に内部の配列を再割り当てによる要求どおり&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">コレクションのサイズを推定できる場合の&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;へ要素を追加中にサイズ変更操作を実行する必要があるの初期量を指定します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">このコンス トラクターは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定されたコレクションからコピーした要素を格納していると、コピーされた要素の数と同じ初期量を持つクラス。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The capacity of an &lt;xref:System.Collections.ArrayList&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can hold.</source>
          <target state="translated">容量、&lt;xref:System.Collections.ArrayList&gt;は要素の数を&lt;xref:System.Collections.ArrayList&gt;を保持できます&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As elements are added to an &lt;xref:System.Collections.ArrayList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、 &lt;xref:System.Collections.ArrayList&gt;、容量を増やすは自動的に内部の配列を再割り当てによる要求どおり&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">コレクションのサイズを推定できる場合の&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;へ要素を追加中にサイズ変更操作を実行する必要があるの初期量を指定します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The elements are copied onto the &lt;xref:System.Collections.ArrayList&gt; in the same order they are read by the &lt;xref:System.Collections.IEnumerator&gt; of the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">、&lt;xref:System.Collections.ArrayList&gt;同じ順序&lt;xref:System.Collections.IEnumerator&gt;&lt;xref:System.Collections.ICollection&gt;。&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.IEnumerator&gt;によって読み取られる順序で&lt;/xref:System.Collections.ArrayList&gt;要素のコピーします。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`c`</ph>.</source>
          <target state="translated">このコンス トラクターは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>内の要素の数は、<ph id="ph3">`c`</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements are copied to the new list.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;新しいリストに要素がコピーされます&lt;/xref:System.Collections.ICollection&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty and has the specified initial capacity.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>空を指定した初期容量を持つクラス。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The capacity of an &lt;xref:System.Collections.ArrayList&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can hold.</source>
          <target state="translated">容量、&lt;xref:System.Collections.ArrayList&gt;は要素の数を&lt;xref:System.Collections.ArrayList&gt;を保持できます&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As elements are added to an &lt;xref:System.Collections.ArrayList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">要素が追加されるにつれて、 &lt;xref:System.Collections.ArrayList&gt;、容量を増やすは自動的に内部の配列を再割り当てによる要求どおり&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">コレクションのサイズを推定できる場合の&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;へ要素を追加中にサイズ変更操作を実行する必要があるの初期量を指定します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">このコンス トラクターは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">`capacity`</ph>します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The number of elements that the new list can initially store.</source>
          <target state="translated">新しいリストに格納できる要素の数。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper for a specific &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>特定&lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;のラッパー</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Adapter does not copy the contents of &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">アダプターが&lt;xref:System.Collections.IList&gt;。&lt;/xref:System.Collections.IList&gt;の内容をコピーできません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Instead, it only creates an &lt;xref:System.Collections.ArrayList&gt; wrapper around &lt;xref:System.Collections.IList&gt;; therefore, changes to the &lt;xref:System.Collections.IList&gt; also affect the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">代わりに、それを作成するだけに&lt;xref:System.Collections.ArrayList&gt;&lt;xref:System.Collections.IList&gt;; &lt;xref:System.Collections.IList&gt; &lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;にも影響&lt;/xref:System.Collections.IList&gt;する変更ではそのため、&lt;/xref:System.Collections.IList&gt;ラッパー&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; class provides generic &lt;xref:System.Collections.ArrayList.Reverse%2A&gt;, &lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt; and &lt;xref:System.Collections.ArrayList.Sort%2A&gt; methods.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;クラスはジェネリック&lt;xref:System.Collections.ArrayList.Reverse%2A&gt;、&lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;と&lt;xref:System.Collections.ArrayList.Sort%2A&gt;メソッド&lt;/xref:System.Collections.ArrayList.Sort%2A&gt;&lt;/xref:System.Collections.ArrayList.BinarySearch%2A&gt;&lt;/xref:System.Collections.ArrayList.Reverse%2A&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This wrapper can be a means to use those methods on &lt;xref:System.Collections.IList&gt;; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">このラッパーは、これらのメソッドを使用する。&lt;xref:System.Collections.IList&gt;ただし、ラッパーを介してこれらの汎用的な操作を実行する場合があります&lt;xref:System.Collections.IList&gt;。&lt;/xref:System.Collections.IList&gt;に直接適用される演算よりも効率が低下&lt;/xref:System.Collections.IList&gt;するための手段を指定できます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Version Compatibility    In the .NET Framework version 1.0 and 1.1, calling the &lt;xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29&gt; method overload on the &lt;xref:System.Collections.ArrayList&gt; wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</source>
          <target state="translated">バージョンの互換性で .NET Framework バージョン 1.0 および 1.1 では、呼び出し、&lt;xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29&gt;メソッド オーバー ロード、&lt;xref:System.Collections.ArrayList&gt;ラッパーにカウントとしてではなく、上限として、2 番目の引数を処理する列挙子が返されます&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph> the second argument is correctly treated as a count.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>&amp;2; 番目の引数は正しくカウントとして扱われます。 します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to wrap.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;をラップします&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper around the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;ラッパー</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Adds an object to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">末尾にオブジェクトを追加、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;受け付ける<ph id="ph1">`null`</ph>有効な値としてでき、重複する要素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; already equals &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">場合&lt;xref:System.Collections.ArrayList.Count%2A&gt;既に等しい&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;の容量、&lt;xref:System.Collections.ArrayList&gt;内部の配列を自動的に再割り当てが増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;&lt;/xref:System.Collections.ArrayList.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; is less than &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, this method is an O(1) operation.</source>
          <target state="translated">場合&lt;xref:System.Collections.ArrayList.Count%2A&gt;はより小さい&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;、このメソッドは、o (1) 操作になります&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;&lt;/xref:System.Collections.ArrayList.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">容量は、新しい要素を格納するためにする必要があります、このメソッドが O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to be added to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;の末尾に追加する、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> index at which the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> has been added.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>位置のインデックス、 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept>が追加されました。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Adds the elements of an &lt;xref:System.Collections.ICollection&gt; to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要素を追加、&lt;xref:System.Collections.ICollection&gt;の末尾に、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Collections.ICollection&gt; 。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;受け付ける<ph id="ph1">`null`</ph>有効な値としてでき、重複する要素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The order of the elements in the &lt;xref:System.Collections.ICollection&gt; is preserved in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt; &lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;内でも維持される&lt;/xref:System.Collections.ICollection&gt;内の要素の順序</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If the new &lt;xref:System.Collections.ArrayList.Count%2A&gt; (the current &lt;xref:System.Collections.ArrayList.Count%2A&gt; plus the size of the collection) will be greater than &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</source>
          <target state="translated">場合、新しい&lt;xref:System.Collections.ArrayList.Count%2A&gt;(現在&lt;xref:System.Collections.ArrayList.Count%2A&gt;さらに、コレクションのサイズ) はより大きくなる&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;の容量、&lt;xref:System.Collections.ArrayList&gt;新しい要素では、それに合わせて内部の配列を自動的に再割り当てが増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;&lt;/xref:System.Collections.ArrayList.Count%2A&gt;&lt;/xref:System.Collections.ArrayList.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; can accommodate the new elements without increasing the &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements to be added.</source>
          <target state="translated">場合、&lt;xref:System.Collections.ArrayList&gt;を増やすことがなく、新しい要素に対応できる、 &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作、場所<ph id="ph2">`n`</ph>を追加する要素の数です&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If the capacity needs to be increased to accommodate the new elements, this method becomes an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements to be added and <ph id="ph5">`m`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">容量は、新しい要素を格納するためにする必要があります、このメソッドが O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) 操作、場所<ph id="ph4">`n`</ph>を追加する要素の数と<ph id="ph5">`m`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;には</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements should be added to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;の末尾に要素を追加する必要があります、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Collections.ICollection&gt; 。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The collection itself cannot be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but it can contain elements that are <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">コレクション自体をすることはできません<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、ある要素を含めることができますが、 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Searches the entire sorted <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an element using the default comparer and returns the zero-based index of the element.</source>
          <target state="translated">並べ替えられた全体を検索<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素の既定の比較子を使用して、要素の&amp;0; から始まるインデックスを返します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`value`</ph> parameter and each element of the &lt;xref:System.Collections.ArrayList&gt; must implement the &lt;xref:System.IComparable&gt; interface, which is used for comparisons.</source>
          <target state="translated"><ph id="ph1">`value`</ph>パラメーターとの各要素、&lt;xref:System.Collections.ArrayList&gt;実装する必要があります、&lt;xref:System.IComparable&gt;比較に使用されるインターフェイス&lt;/xref:System.IComparable&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by the &lt;xref:System.IComparable&gt; implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">要素、&lt;xref:System.Collections.ArrayList&gt;既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、&lt;xref:System.IComparable&gt;実装ですそれ以外の場合、結果できない可能性があります正しい。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.ArrayList&gt; 。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using &lt;xref:System.IComparable&gt;.</source>
          <target state="translated">比較する<ph id="ph1">`null`</ph>任意の型が有効にすることし、 &lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt;を使用する場合は、例外を生成しません</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">ソート時<ph id="ph1">`null`</ph>未満であるその他のオブジェクトと見なされます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">場合、&lt;xref:System.Collections.ArrayList&gt;だけが含まれて、同じ値を持つ複数の要素には返します、出現回数、必ずしも&amp;1; つ目のいずれかを返す、出現してのいずれかの可能性があります&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">場合、 &lt;xref:System.Collections.ArrayList&gt;、指定した値を含まない、メソッドは、負の整数を返します&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">この負の整数値を検索する値を超える最初の要素のインデックスを取得するには、ビットごとの補数演算 (~) を適用できます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When inserting the value into the &lt;xref:System.Collections.ArrayList&gt;, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">値を挿入するときに、 &lt;xref:System.Collections.ArrayList&gt;、このインデックスは、並べ替え順序を維持するために、挿入ポイントとして使用する必要があります&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (ログ<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate.</source>
          <target state="translated">&lt;xref:System.Object&gt;を検索します&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The zero-based index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> in the sorted <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept> or, if there is no larger element, the bitwise complement of &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">0 から始まるインデックス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> 、並べ替えられた<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>場合は、 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p3">&lt;/code&gt;</ept>以外、それ以外の場合は、負の値数、これは、次の要素よりも大きなインデックスのビットごとの補数<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept> &lt;xref:System.Collections.ArrayList.Count*&gt;.&lt;/xref:System.Collections.ArrayList.Count*&gt;のビットごとの補数、大きい要素がない場合や、</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Neither <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> nor the elements of <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implement the &lt;xref:System.IComparable&gt; interface.</source>
          <target state="translated">どちらも<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>の要素も<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>実装、&lt;xref:System.IComparable&gt;インターフェイス&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is not of the same type as the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>要素と同じ型ではありません、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Searches the entire sorted <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">並べ替えられた全体を検索<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素には、指定した比較子を使用して、要素の&amp;0; から始まるインデックスを返します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The comparer customizes how the elements are compared.</source>
          <target state="translated">比較演算子は、要素を比較する方法をカスタマイズします。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For example, you can use a &lt;xref:System.Collections.CaseInsensitiveComparer&gt; instance as the comparer to perform case-insensitive string searches.</source>
          <target state="translated">たとえば、使用することができます、&lt;xref:System.Collections.CaseInsensitiveComparer&gt;大文字と小文字の文字列の検索を実行する比較演算子とインスタンス&lt;/xref:System.Collections.CaseInsensitiveComparer&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the &lt;xref:System.Collections.ArrayList&gt; are compared to the specified value using the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">場合<ph id="ph1">`comparer`</ph>が提供されるの要素、&lt;xref:System.Collections.ArrayList&gt;指定して、指定した値と比較&lt;xref:System.Collections.IComparer&gt;実装&lt;/xref:System.Collections.IComparer&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by <ph id="ph1">`comparer`</ph>; otherwise, the result might be incorrect.</source>
          <target state="translated">要素、&lt;xref:System.Collections.ArrayList&gt;既にによって定義されている並べ替え順序に従って値を増やすことで並べ替える必要があります<ph id="ph1">`comparer`</ph>以外の場合、結果が正しくない可能性があります&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the comparison is done using the &lt;xref:System.IComparable&gt; implementation provided by the element itself or by the specified value.</source>
          <target state="translated">場合<ph id="ph1">`comparer`</ph>は<ph id="ph2">`null`</ph>、比較が行われますを使用して、&lt;xref:System.IComparable&gt;または指定した値によって、要素自体によって提供される実装&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by the &lt;xref:System.IComparable&gt; implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">要素、&lt;xref:System.Collections.ArrayList&gt;既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、&lt;xref:System.IComparable&gt;実装ですそれ以外の場合、結果できない可能性があります正しい。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.ArrayList&gt; 。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using &lt;xref:System.IComparable&gt;.</source>
          <target state="translated">比較する<ph id="ph1">`null`</ph>任意の型が有効にすることし、 &lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt;を使用する場合は、例外を生成しません</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">ソート時<ph id="ph1">`null`</ph>未満であるその他のオブジェクトと見なされます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">場合、&lt;xref:System.Collections.ArrayList&gt;だけが含まれて、同じ値を持つ複数の要素には返します、出現回数、必ずしも&amp;1; つ目のいずれかを返す、出現してのいずれかの可能性があります&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">場合、 &lt;xref:System.Collections.ArrayList&gt;、指定した値を含まない、メソッドは、負の整数を返します&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">この負の整数値を検索する値を超える最初の要素のインデックスを取得するには、ビットごとの補数演算 (~) を適用できます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>When inserting the value into the &lt;xref:System.Collections.ArrayList&gt;, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">値を挿入するときに、 &lt;xref:System.Collections.ArrayList&gt;、このインデックスは、並べ替え順序を維持するために、挿入ポイントとして使用する必要があります&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (ログ<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate.</source>
          <target state="translated">&lt;xref:System.Object&gt;を検索します&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;要素を比較するときに使用する実装&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer that is the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">- または - <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は既定の比較子を使用する、&lt;xref:System.IComparable&gt;の各要素の実装&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The zero-based index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> in the sorted <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept> or, if there is no larger element, the bitwise complement of &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">0 から始まるインデックス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> 、並べ替えられた<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>場合は、 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p3">&lt;/code&gt;</ept>以外、それ以外の場合は、負の値数、これは、次の要素よりも大きなインデックスのビットごとの補数<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept> &lt;xref:System.Collections.ArrayList.Count*&gt;.&lt;/xref:System.Collections.ArrayList.Count*&gt;のビットごとの補数、大きい要素がない場合や、</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and neither <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> nor the elements of <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implement the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>どちらと<ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>の要素も<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>実装、<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is not of the same type as the elements of the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>の要素と同じ型ではありません、 <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Searches a range of elements in the sorted <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">要素の範囲を検索、並べ替えられた<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素には、指定した比較子を使用して、要素の&amp;0; から始まるインデックスを返します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The comparer customizes how the elements are compared.</source>
          <target state="translated">比較演算子は、要素を比較する方法をカスタマイズします。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For example, you can use a &lt;xref:System.Collections.CaseInsensitiveComparer&gt; instance as the comparer to perform case-insensitive string searches.</source>
          <target state="translated">たとえば、使用することができます、&lt;xref:System.Collections.CaseInsensitiveComparer&gt;大文字と小文字の文字列の検索を実行する比較演算子とインスタンス&lt;/xref:System.Collections.CaseInsensitiveComparer&gt;。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the &lt;xref:System.Collections.ArrayList&gt; are compared to the specified value using the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">場合<ph id="ph1">`comparer`</ph>が提供されるの要素、&lt;xref:System.Collections.ArrayList&gt;指定して、指定した値と比較&lt;xref:System.Collections.IComparer&gt;実装&lt;/xref:System.Collections.IComparer&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by <ph id="ph1">`comparer`</ph>; otherwise, the result might be incorrect.</source>
          <target state="translated">要素、&lt;xref:System.Collections.ArrayList&gt;既にによって定義されている並べ替え順序に従って値を増やすことで並べ替える必要があります<ph id="ph1">`comparer`</ph>以外の場合、結果が正しくない可能性があります&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the comparison is done using the &lt;xref:System.IComparable&gt; implementation provided by the element itself or by the specified value.</source>
          <target state="translated">場合<ph id="ph1">`comparer`</ph>は<ph id="ph2">`null`</ph>、比較が行われますを使用して、&lt;xref:System.IComparable&gt;または指定した値によって、要素自体によって提供される実装&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by the &lt;xref:System.IComparable&gt; implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">要素、&lt;xref:System.Collections.ArrayList&gt;既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、&lt;xref:System.IComparable&gt;実装ですそれ以外の場合、結果できない可能性があります正しい。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.ArrayList&gt; 。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using &lt;xref:System.IComparable&gt;.</source>
          <target state="translated">比較する<ph id="ph1">`null`</ph>任意の型が有効にすることし、 &lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt;を使用する場合は、例外を生成しません</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">ソート時<ph id="ph1">`null`</ph>未満であるその他のオブジェクトと見なされます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">場合、&lt;xref:System.Collections.ArrayList&gt;だけが含まれて、同じ値を持つ複数の要素には返します、出現回数、必ずしも&amp;1; つ目のいずれかを返す、出現してのいずれかの可能性があります&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">場合、 &lt;xref:System.Collections.ArrayList&gt;、指定した値を含まない、メソッドは、負の整数を返します&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">この負の整数値を検索する値を超える最初の要素のインデックスを取得するには、ビットごとの補数演算 (~) を適用できます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>When inserting the value into the &lt;xref:System.Collections.ArrayList&gt;, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">値を挿入するときに、 &lt;xref:System.Collections.ArrayList&gt;、このインデックスは、並べ替え順序を維持するために、挿入ポイントとして使用する必要があります&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">このメソッドは、O (ログ<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">`count`</ph>します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range to search.</source>
          <target state="translated">検索する範囲の&amp;0; から始まる開始インデックス。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The length of the range to search.</source>
          <target state="translated">検索する範囲の長さ。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate.</source>
          <target state="translated">&lt;xref:System.Object&gt;を検索します&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;要素を比較するときに使用する実装&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer that is the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">- または - <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は既定の比較子を使用する、&lt;xref:System.IComparable&gt;の各要素の実装&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The zero-based index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> in the sorted <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept> or, if there is no larger element, the bitwise complement of &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">0 から始まるインデックス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> 、並べ替えられた<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>場合は、 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p3">&lt;/code&gt;</ept>以外、それ以外の場合は、負の値数、これは、次の要素よりも大きなインデックスのビットごとの補数<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept> &lt;xref:System.Collections.ArrayList.Count*&gt;.&lt;/xref:System.Collections.ArrayList.Count*&gt;のビットごとの補数、大きい要素がない場合や、</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>および<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>において有効な範囲を表していません、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and neither <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> nor the elements of <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implement the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph>は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>どちらと<ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>の要素も<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>実装、<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is not of the same type as the elements of the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と<ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>の要素と同じ型ではありません、 <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of elements that the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">取得または設定要素の数、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>含めることができます。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Capacity is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can store.</source>
          <target state="translated">容量は、要素の数を&lt;xref:System.Collections.ArrayList&gt;格納できます&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Count%2A&gt; is the number of elements that are actually in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Count%2A&gt;実際に&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;内にある要素の数です。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Capacity is always greater than or equal to &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">容量は、常に&lt;xref:System.Collections.ArrayList.Count%2A&gt;。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;以上</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; exceeds Capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">場合&lt;xref:System.Collections.ArrayList.Count%2A&gt;要素を追加中に容量を超える場合、容量は前の要素をコピーし、新しい要素を追加する前に、内部配列の再割り当てによって自動的に増加します&lt;/xref:System.Collections.ArrayList.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt; or by setting the Capacity property explicitly.</source>
          <target state="translated">呼び出すことによって、容量を削減できる&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;または容量プロパティを明示的に設定します&lt;/xref:System.Collections.ArrayList.TrimToSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>When the value of Capacity is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">容量の値が明示的に設定されている場合、内部配列が指定した容量に合わせても再割り当てされます。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">このプロパティの値を取得する場合は、o (1) 操作です。O は、プロパティの設定 (<ph id="ph1">`n`</ph>) 操作、場所<ph id="ph2">`n`</ph>新しい容量します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The number of elements that the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">要素の数を<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>含めることができます。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Capacity is set to a value that is less than &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">容量が&lt;xref:System.Collections.ArrayList.Count*&gt;。&lt;/xref:System.Collections.ArrayList.Count*&gt;よりも小さい値に設定されています。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">システムでメモリ不足がありません。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Removes all elements from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">すべての要素を削除、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Count%2A&gt;0 に設定し、コレクションの要素から他のオブジェクトへの参照も解放します。&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Capacity%2A&gt; remains unchanged.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;変更されません。&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>To reset the capacity of the &lt;xref:System.Collections.ArrayList&gt;, call &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt; or set the &lt;xref:System.Collections.ArrayList.Capacity%2A&gt; property directly.</source>
          <target state="translated">容量をリセットする、 &lt;xref:System.Collections.ArrayList&gt;、呼び出す&lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;設定や、&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;プロパティを直接&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;&lt;/xref:System.Collections.ArrayList.TrimToSize%2A&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.ArrayList&gt; sets the capacity of the &lt;xref:System.Collections.ArrayList&gt; to the default capacity.</source>
          <target state="translated">空のトリミング&lt;xref:System.Collections.ArrayList&gt;のキャパシティを設定、&lt;xref:System.Collections.ArrayList&gt;を既定の容量&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">簡易コピーを作成、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">コレクションの簡易コピーは、参照型または値の型が参照先のオブジェクトはコピーしないかどうか、コレクションの要素のみをコピーします。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">新しいコレクション内の参照は、元のコレクション内の参照をポイントする同じオブジェクトをポイントします。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">これに対し、コレクションのディープ コピーされた要素をコピーして、要素が直接または間接的に参照するすべてです。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">簡易コピー、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Determines whether an element is in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要素がであるかどうかを判断、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">このメソッドは、 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;を呼び出すことで等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;内で検索する、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Copies the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the beginning of the target array.</source>
          <target state="translated">全体をコピー <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を互換性のある&amp;1; 次元&lt;xref:System.Array&gt;、対象となる配列の先頭から始まります&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">指定された配列は、互換性のある型でなければなりません。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.</source>
          <target state="translated">このメソッドを使用して&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;要素のコピー&lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt; 。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">&lt;xref:System.Array&gt;列挙&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;同じ順序で&lt;/xref:System.Array&gt;要素のコピーします。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">1 次元&lt;xref:System.Array&gt;からコピーした要素のコピー先は<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Array&gt; 。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0 から始まるインデックス番号が必要です&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>多次元です。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the number of elements that the destination <ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> can contain.</source>
          <target state="translated">- または - ソース内の要素の数<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素の数よりも大きいを宛先<ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>含めることができます。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">ソースの種類<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>変換先の型に自動的にキャストすることはできません<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Copies the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the specified index of the target array.</source>
          <target state="translated">全体をコピー <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を互換性のある&amp;1; 次元&lt;xref:System.Array&gt;、対象となる配列の指定したインデックスから始まります&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">指定された配列は、互換性のある型でなければなりません。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.</source>
          <target state="translated">このメソッドを使用して&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;要素のコピー&lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt; 。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">&lt;xref:System.Array&gt;列挙&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;同じ順序で&lt;/xref:System.Array&gt;要素のコピーします。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">1 次元&lt;xref:System.Array&gt;からコピーした要素のコピー先は<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Array&gt; 。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0 から始まるインデックス番号が必要です&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">内の&amp;0; から始まるインデックス<ph id="ph1">`array`</ph>コピーの開始位置。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>多次元です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">- または - ソース内の要素の数<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>から使用可能な領域より大きくなって<ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>変換先の末尾に<ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">ソースの種類<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>変換先の型に自動的にキャストすることはできません<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Copies a range of elements from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the specified index of the target array.</source>
          <target state="translated">要素の範囲をコピー、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を互換性のある&amp;1; 次元&lt;xref:System.Array&gt;、対象となる配列の指定したインデックスから始まります&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">指定された配列は、互換性のある型でなければなりません。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.</source>
          <target state="translated">このメソッドを使用して&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;要素のコピー&lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt; 。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">&lt;xref:System.Array&gt;列挙&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;同じ順序で&lt;/xref:System.Array&gt;要素のコピーします。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">`count`</ph>します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The zero-based index in the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at which copying begins.</source>
          <target state="translated">ソース内の&amp;0; から始まるインデックス<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コピーの開始位置。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">1 次元&lt;xref:System.Array&gt;からコピーした要素のコピー先は<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Array&gt; 。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0 から始まるインデックス番号が必要です&lt;/xref:System.Array&gt;。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">内の&amp;0; から始まるインデックス<ph id="ph1">`array`</ph>コピーの開始位置。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The number of elements to copy.</source>
          <target state="translated">コピーする要素の数。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>多次元です。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph> of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>と等しいかより大きい、 <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph> 、ソースの<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements from <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph2">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">- または - から要素の数<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>ソースの終わりに<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>から使用可能な領域より大きくなって<ph id="ph2">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>変換先の末尾に<ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">ソースの種類<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>変換先の型に自動的にキャストすることはできません<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Gets the number of elements actually contained in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">実際に含まれる要素の数を取得、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Capacity%2A&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can store.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;要素の数を&lt;xref:System.Collections.ArrayList&gt;格納できます&lt;/xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Count is the number of elements that are actually in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">数は実際に&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;内にある要素の数</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList.Capacity%2A&gt; is always greater than or equal to Count.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;大きいか等しい数には常にします。&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>If Count exceeds &lt;xref:System.Collections.ArrayList.Capacity%2A&gt; while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">数を超える場合&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;要素を追加するには、中に容量が前の要素をコピーし、新しい要素を追加する前に、内部配列の再割り当てによって自動的に増加します&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティの値を取得するは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The number of elements actually contained in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">実際に含まれる要素の数、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper with a fixed size.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>固定サイズのラッパー。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>This wrapper can be used to prevent additions to and deletions from the original &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">このラッパーへの追加と&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;元からの削除を防止するために使用できます。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The elements can still be modified or replaced.</source>
          <target state="translated">要素の変更または置き換えができます。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to wrap.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>をラップします。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper with a fixed size.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>固定サイズのラッパー。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IList&gt; wrapper with a fixed size.</source>
          <target state="translated">返します、&lt;xref:System.Collections.IList&gt;固定サイズのラッパー&lt;/xref:System.Collections.IList&gt; 。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>This wrapper can be used to prevent additions to and deletions from the original &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">このラッパーへの追加と&lt;xref:System.Collections.IList&gt;。&lt;/xref:System.Collections.IList&gt;元からの削除を防止するために使用できます。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The elements can still be modified or replaced.</source>
          <target state="translated">要素の変更または置き換えができます。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to wrap.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;をラップします&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; wrapper with a fixed size.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;固定サイズのラッパー&lt;/xref:System.Collections.IList&gt; 。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">全体の列挙子を返します<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 言語のステートメント (<ph id="ph2">`for each`</ph> Visual Basic で)、列挙子の複雑さが隠されています。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">したがってを使用して<ph id="ph1">`foreach`</ph>列挙子を直接操作せずにお勧めします。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;列挙子をこの位置に戻さ点もあります。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">この位置にある&lt;xref:System.Collections.IEnumerator.Current%2A&gt;が定義されていません&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">したがって、 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Current%2A&gt;。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;の値を読み取る前に、コレクションの最初の要素に列挙子を進めるに&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;いずれかのまで同じオブジェクトを返します&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;または&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;と呼びます&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;次の要素にします&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返します<ph id="ph1">`false`</ph>&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;を返すことも<ph id="ph1">`false`</ph>&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">最後の呼び出し場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返される<ph id="ph1">`false`</ph>、&lt;xref:System.Collections.IEnumerator.Current%2A&gt;が定義されていません&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;再度、コレクションの最初の要素に&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;続けて&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;を呼び出すことができます&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;を設定するには</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能とその動作は未定義です。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列挙子はコレクションへの排他アクセスがありません。そのため、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">列挙中にスレッドの安全性を保証するためには、列挙中にコレクションをロックできます。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">読み取りと書き込みの複数のスレッドがアクセスするコレクションを許可するのには、独自に同期を実装する必要があります。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;全体の<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Collections.IEnumerator&gt; 。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for a range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">内の要素の範囲の列挙子を返します、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual C++, <ph id="ph3">`For Each`</ph> Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 言語のステートメント (<ph id="ph2">`for each`</ph> Visual c で<ph id="ph3">`For Each`</ph>Visual Basic) 列挙子の複雑さが隠されています。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">したがってを使用して<ph id="ph1">`foreach`</ph>列挙子を直接操作せずにお勧めします。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;列挙子をこの位置に戻さ点もあります。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">この位置にある&lt;xref:System.Collections.IEnumerator.Current%2A&gt;が定義されていません&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">したがって、 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;xref:System.Collections.IEnumerator.Current%2A&gt;。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;の値を読み取る前に、コレクションの最初の要素に列挙子を進めるに&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;いずれかのまで同じオブジェクトを返します&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;または&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;と呼びます&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;次の要素にします&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返します<ph id="ph1">`false`</ph>&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;を返すことも<ph id="ph1">`false`</ph>&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">最後の呼び出し場合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;返される<ph id="ph1">`false`</ph>、&lt;xref:System.Collections.IEnumerator.Current%2A&gt;が定義されていません&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;再度、コレクションの最初の要素に&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;続けて&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;を呼び出すことができます&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;を設定するには</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能とその動作は未定義です。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列挙子はコレクションへの排他アクセスがありません。そのため、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">列挙中にスレッドの安全性を保証するためには、列挙中にコレクションをロックできます。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">読み取りと書き込みの複数のスレッドがアクセスするコレクションを許可するのには、独自に同期を実装する必要があります。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Version Compatibility    In the .NET Framework versions 1.0 and 1.1, the enumerator for an &lt;xref:System.Collections.ArrayList&gt; wrapper returned by the &lt;xref:System.Collections.ArrayList.Adapter%2A&gt; method treated the second argument as an upper bound rather than as a count.</source>
          <target state="translated">バージョンの互換性に、.NET Framework のバージョン 1.0 および 1.1 では、列挙子の&lt;xref:System.Collections.ArrayList&gt;ラッパーによって返される、&lt;xref:System.Collections.ArrayList.Adapter%2A&gt;カウントではなく、上限として、メソッドが 2 番目の引数を処理します&lt;/xref:System.Collections.ArrayList.Adapter%2A&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph> the second argument is correctly treated as a count.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>&amp;2; 番目の引数は正しくカウントとして扱われます。 します。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section that the enumerator should refer to.</source>
          <target state="translated">0 から始まる開始インデックス、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙子が参照する必要があります。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The number of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section that the enumerator should refer to.</source>
          <target state="translated">内の要素の数、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙子が参照する必要があります。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the specified range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;内の要素の指定した範囲の<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Collections.IEnumerator&gt; 。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid range in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>および<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>において有効な範囲を指定しない、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> which represents a subset of the elements in the source <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、ソース内の要素のサブセットを表す<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>This method does not create copies of the elements.</source>
          <target state="translated">このメソッドは、要素のコピーを作成できません。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Collections.ArrayList&gt; is only a view window into the source &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">新しい&lt;xref:System.Collections.ArrayList&gt;ソース&lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;にビュー ウィンドウのみ&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>However, all subsequent changes to the source &lt;xref:System.Collections.ArrayList&gt; must be done through this view window &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">ただし、&lt;xref:System.Collections.ArrayList&gt;このビュー ウィンドウ&lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;を介して行う必要があります&lt;/xref:System.Collections.ArrayList&gt;ソースすべて後の変更</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>If changes are made directly to the source &lt;xref:System.Collections.ArrayList&gt;, the view window &lt;xref:System.Collections.ArrayList&gt; is invalidated and any operations on it will return an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">変更がソースに直接行われた場合&lt;xref:System.Collections.ArrayList&gt;、表示ウィンドウ&lt;xref:System.Collections.ArrayList&gt;が無効になったに対する操作は&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;を返します&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The zero-based <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> index at which the range starts.</source>
          <target state="translated">0 から始まる<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>範囲が開始する位置のインデックスします。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The number of elements in the range.</source>
          <target state="translated">範囲内の要素の数。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> which represents a subset of the elements in the source <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、ソース内の要素のサブセットを表す<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>および<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>内の要素の有効な範囲を表していません、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the first occurrence within the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定された検索&lt;xref:System.Object&gt;全体内で最初に見つかった位置の&amp;0; から始まるインデックスを返しますと<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched forward starting at the first element and ending at the last element.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;はフォワード最初の要素を起点と最後の要素で終わる検索します&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">このメソッドは、 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;を呼び出すことで等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;内で検索する、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the entire <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">最初に見つかった位置の&amp;0; から始まるインデックス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>全体で<bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、それ以外の場合は、-1。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the first occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that extends from the specified index to the last element.</source>
          <target state="translated">指定された検索&lt;xref:System.Object&gt;内の要素の範囲内で最初に見つかった位置の&amp;0; から始まるインデックスを返します、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定したインデックスから最後の要素までです&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at the last element.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;転送を開始位置として検索<ph id="ph1">`startIndex`</ph>と最後の要素で終了します&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements from <ph id="ph3">`startIndex`</ph> to the end of the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>から要素の数は、 <ph id="ph3">`startIndex`</ph> &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;の末尾に</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">このメソッドは、 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;を呼び出すことで等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;内で検索する、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">検索の&amp;0; から始まる開始インデックス。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (ゼロ) は、空のリストで有効です。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that extends from <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> to the last element, if found; otherwise, -1.</source>
          <target state="translated">最初に見つかった位置の&amp;0; から始まるインデックス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>内の要素の範囲内で、 <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>から自身を拡張する<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">startIndex</ph> <ept id="p3">&lt;/code&gt;</ept>最後の要素が見つかった場合は、-1。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>有効なインデックスの範囲外である、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the first occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">指定された検索&lt;xref:System.Object&gt;内の要素の範囲内で最初に見つかった位置の&amp;0; から始まるインデックスを返します、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定したインデックスから始まり、指定した要素数が含まれています&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph> plus <ph id="ph3">`count`</ph> minus 1, if <ph id="ph4">`count`</ph> is greater than 0.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;転送を開始位置として検索が<ph id="ph1">`startIndex`</ph>で終わる<ph id="ph2">`startIndex`</ph>plus<ph id="ph3">`count`</ph>から 1 を引いた場合<ph id="ph4">`count`</ph>が 0 より大きい&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">`count`</ph>します。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">このメソッドは、 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;を呼び出すことで等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;内で検索する、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">検索の&amp;0; から始まる開始インデックス。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (ゼロ) は、空のリストで有効です。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
          <target state="translated">検索するセクション内の要素の数。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that starts at <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> and contains <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p4">&lt;/code&gt;</ept> number of elements, if found; otherwise, -1.</source>
          <target state="translated">最初に見つかった位置の&amp;0; から始まるインデックス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>内の要素の範囲内で、 <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>位置<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">startIndex</ph> <ept id="p3">&lt;/code&gt;</ept>が含まれています<bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">count</ph> <ept id="p4">&lt;/code&gt;</ept>個の要素、見つかった場合は、-1。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>有効なインデックスの範囲外である、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>と<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>内の正しいセクションを指定しない、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Inserts an element into the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified index.</source>
          <target state="translated">要素を挿入、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したインデックス位置。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;受け付ける<ph id="ph1">`null`</ph>有効な値としてでき、重複する要素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; already equals &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">場合&lt;xref:System.Collections.ArrayList.Count%2A&gt;既に等しい&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;の容量、&lt;xref:System.Collections.ArrayList&gt;内部の配列を自動的に再割り当てが増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;&lt;/xref:System.Collections.ArrayList.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`index`</ph> is equal to &lt;xref:System.Collections.ArrayList.Count%2A&gt;, <ph id="ph2">`value`</ph> is added to the end of &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">場合<ph id="ph1">`index`</ph>と等しい&lt;xref:System.Collections.ArrayList.Count%2A&gt;、 <ph id="ph2">`value`</ph> &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;の末尾に追加された&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">連続する要素のコレクションでリストなど、カーソル位置の後にある要素を新しい要素に対応します。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">場合は、コレクションのインデックスが、移動した要素のインデックスも更新します。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素がハッシュ テーブルなどのバケットにグループ化概念的にはコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <ph id="ph1">`value`</ph> should be inserted.</source>
          <target state="translated">位置の&amp;0; から始まるインデックス<ph id="ph1">`value`</ph>挿入する必要があります。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to insert.</source>
          <target state="translated">&lt;xref:System.Object&gt;を挿入します&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>がより大きい<ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Inserts the elements of a collection into the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified index.</source>
          <target state="translated">コレクションの要素を挿入、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したインデックス位置。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;受け付ける<ph id="ph1">`null`</ph>有効な値としてでき、重複する要素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>If the new &lt;xref:System.Collections.ArrayList.Count%2A&gt; (the current &lt;xref:System.Collections.ArrayList.Count%2A&gt; plus the size of the collection) will be greater than &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</source>
          <target state="translated">場合、新しい&lt;xref:System.Collections.ArrayList.Count%2A&gt;(現在&lt;xref:System.Collections.ArrayList.Count%2A&gt;さらに、コレクションのサイズ) はより大きくなる&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;の容量、&lt;xref:System.Collections.ArrayList&gt;新しい要素では、それに合わせて内部の配列を自動的に再割り当てが増加し、新しい要素が追加される前に、既存の要素が新しい配列にコピーされます&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;&lt;/xref:System.Collections.ArrayList.Count%2A&gt;&lt;/xref:System.Collections.ArrayList.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`index`</ph> is equal to &lt;xref:System.Collections.ArrayList.Count%2A&gt;, the elements are added to the end of &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">場合<ph id="ph1">`index`</ph>と等しい&lt;xref:System.Collections.ArrayList.Count%2A&gt;、 &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;の末尾に要素が追加&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The order of the elements in the &lt;xref:System.Collections.ICollection&gt; is preserved in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt; &lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;内でも維持される&lt;/xref:System.Collections.ICollection&gt;内の要素の順序</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">連続する要素のコレクションでリストなど、カーソル位置の後にある要素を新しい要素に対応します。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">場合は、コレクションのインデックスが、移動した要素のインデックスも更新します。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素がハッシュ テーブルなどのバケットにグループ化概念的にはコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements to be added and <ph id="ph5">`m`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) 操作では、ここで<ph id="ph4">`n`</ph>を追加する要素の数と<ph id="ph5">`m`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">新しい要素を挿入する位置の&amp;0; から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements should be inserted into the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;要素を挿入する、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Collections.ICollection&gt; 。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The collection itself cannot be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but it can contain elements that are <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">コレクション自体をすることはできません<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、ある要素を含めることができますが、 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>がより大きい<ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">固定サイズ コレクションできない追加または削除の要素のコレクションが作成された後で既存の要素は変更できます。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティの値を取得するは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>が固定サイズです。 それ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">読み取り専用であるコレクション追加、削除、または要素の変更後にできません、コレクションを作成します。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">読み取り専用であるコレクションは、コレクションのコレクションの変更を防止するラッパーです。そのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはこの変更を反映します。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">このプロパティの値を取得するは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>は読み取り専用です。 それ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is synchronized (thread safe).</source>
          <target state="translated">アクセスをするかどうかを示す値を取得、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が同期されている (スレッド セーフである)。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.ArrayList&gt;, all operations must be done through the wrapper returned by the &lt;xref:System.Collections.ArrayList.Synchronized%2A&gt; method.</source>
          <target state="translated">スレッド セーフを確保する、 &lt;xref:System.Collections.ArrayList&gt;、によって返されるラッパーを介してすべての操作を行う必要があります、&lt;xref:System.Collections.ArrayList.Synchronized%2A&gt;メソッド&lt;/xref:System.Collections.ArrayList.Synchronized%2A&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフなプロシージャ</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合へのアクセス、 <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>が同期 (スレッド セーフな) です。 それ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">取得または指定したインデックス位置に要素を設定します。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The Item returns an &lt;xref:System.Object&gt;, so you may need to cast the returned value to the original type in order to manipulate it.</source>
          <target state="translated">項目を返します、&lt;xref:System.Object&gt;それを操作するのには、元の型に返される値をキャストする必要がありますので、&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>It is important to note that &lt;xref:System.Collections.ArrayList&gt; is not a strongly-typed collection.</source>
          <target state="translated">重要な点は&lt;xref:System.Collections.ArrayList&gt;厳密に型指定されたコレクションではありません&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>For a strongly-typed alternative, see &lt;xref:System.Collections.Generic.List%601&gt;.</source>
          <target state="translated">厳密に型指定された代替手段は&lt;xref:System.Collections.Generic.List%601&gt;。&lt;/xref:System.Collections.Generic.List%601&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;受け付ける<ph id="ph1">`null`</ph>有効な値としてでき、重複する要素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">このプロパティは、次の構文を使用して、コレクション内の特定の要素にアクセスする機能を提供します。<ph id="ph1">`myCollection[index]`</ph>です。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the Item property.</source>
          <target state="translated">C# 言語では、キーワードを使用して、項目のプロパティを実装する代わりにインデクサーを定義します。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Visual Basic implements Item as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic では、同様のインデックス機能を提供する既定のプロパティとして項目を実装します。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">O (1) 操作は、このプロパティの値を取得します。プロパティの設定は、o (1) 操作ではもです。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">取得または設定する要素の&amp;0; から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The element at the specified index.</source>
          <target state="translated">指定したインデックスにある要素。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>と等しいかより大きい<ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the last occurrence within the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定された検索&lt;xref:System.Object&gt;全体の中で最後に見つかった位置の&amp;0; から始まるインデックスを返しますと<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched backward starting at the last element and ending at the first element.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;後方の最後の要素の最初と最後の最初の要素を検索します&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;内で検索する、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the entire the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">最後に見つかった位置の&amp;0; から始まるインデックス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>全体の中で、 <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、それ以外の場合は、-1。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the last occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that extends from the first element to the specified index.</source>
          <target state="translated">指定された検索&lt;xref:System.Object&gt;内の要素の範囲内で最後に見つかった位置の&amp;0; から始まるインデックスを返します、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>自身を拡張する最初の要素から指定したインデックス&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at the first element.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;検索旧バージョンとを開始位置として、<ph id="ph1">`startIndex`</ph>と最初の要素で終了します&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements from the beginning of the &lt;xref:System.Collections.ArrayList&gt; to <ph id="ph3">`startIndex`</ph>.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作、場所<ph id="ph2">`n`</ph>の先頭から要素の数が、&lt;xref:System.Collections.ArrayList&gt;に<ph id="ph3">`startIndex`</ph>&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">このメソッドは、 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;を呼び出すことで等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;内で検索する、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">後方検索の&amp;0; から始まる開始インデックス。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that extends from the first element to <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">startIndex</ph><ept id="p3">&lt;/code&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">最後に見つかった位置の&amp;0; から始まるインデックス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>内の要素の範囲内で、 <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 、最初の要素から自身を拡張する<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">startIndex</ph> <ept id="p3">&lt;/code&gt;</ept>、それ以外の場合は、-1。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>有効なインデックスの範囲外である、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the last occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">指定された検索&lt;xref:System.Object&gt;内の要素の範囲内で最後に見つかった位置の&amp;0; から始まるインデックスを返します、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要素および指定したインデックスで終わり、指定した数を格納している&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph> minus <ph id="ph3">`count`</ph> plus 1, if <ph id="ph4">`count`</ph> is greater than 0.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;検索旧バージョンとを開始位置として、<ph id="ph1">`startIndex`</ph>で終わる<ph id="ph2">`startIndex`</ph>マイナス<ph id="ph3">`count`</ph>1、さらに場合<ph id="ph4">`count`</ph>が 0 より大きい&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">`count`</ph>します。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">このメソッドは、 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;を呼び出すことで等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;メソッド<ph id="ph1">`item`</ph>項目が存在するかどうかを確認します&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この決定を使用して行われた、&lt;xref:System.Object.Equals%2A&gt;と&lt;xref:System.IComparable.CompareTo%2A&gt;のメソッド、<ph id="ph1">`item`</ph>コレクション内のオブジェクトのパラメーターです&lt;/xref:System.IComparable.CompareTo%2A&gt;&lt;/xref:System.Object.Equals%2A&gt;。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;内で検索する、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">後方検索の&amp;0; から始まる開始インデックス。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
          <target state="translated">検索するセクション内の要素の数。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that contains <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p3">&lt;/code&gt;</ept> number of elements and ends at <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">startIndex</ph><ept id="p4">&lt;/code&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">最後に見つかった位置の&amp;0; から始まるインデックス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>内の要素の範囲内で、 <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>格納している<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p3">&lt;/code&gt;</ept>要素数で終わり、 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">startIndex</ph> <ept id="p4">&lt;/code&gt;</ept>、それ以外の場合は、-1。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>有効なインデックスの範囲外である、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>と<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>内の正しいセクションを指定しない、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Returns a read-only <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper.</source>
          <target state="translated">読み取り専用に返します<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ラッパーです。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>To prevent any modifications to <ph id="ph1">`list`</ph>, expose <ph id="ph2">`list`</ph> only through this wrapper.</source>
          <target state="translated">変更を加えるように<ph id="ph1">`list`</ph>、公開<ph id="ph2">`list`</ph>このラッパーを使用します。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</source>
          <target state="translated">読み取り専用であるコレクションは、単純なコレクションの変更を防止するラッパー コレクションです。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>If changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to wrap.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>をラップします。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>A read-only <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper around <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">list</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">読み取り専用<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ラッパー <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">list</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Returns a read-only &lt;xref:System.Collections.IList&gt; wrapper.</source>
          <target state="translated">読み取り専用に返します&lt;xref:System.Collections.IList&gt;ラッパー&lt;/xref:System.Collections.IList&gt; 。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>To prevent any modifications to <ph id="ph1">`list`</ph>, expose <ph id="ph2">`list`</ph> only through this wrapper.</source>
          <target state="translated">変更を加えるように<ph id="ph1">`list`</ph>、公開<ph id="ph2">`list`</ph>このラッパーを使用します。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</source>
          <target state="translated">読み取り専用であるコレクションは、単純なコレクションの変更を防止するラッパー コレクションです。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>If changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">このメソッドは、o (1) 操作です。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to wrap.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;をラップします&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>A read-only &lt;xref:System.Collections.IList&gt; wrapper around <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">list</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">読み取り専用&lt;xref:System.Collections.IList&gt;ラッパー <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">list</ph> <ept id="p1">&lt;/code&gt;</ept>&lt;/xref:System.Collections.IList&gt; 。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of a specific object from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">最初に見つかった特定のオブジェクトから削除、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified object, the &lt;xref:System.Collections.ArrayList&gt; remains unchanged.</source>
          <target state="translated">場合、&lt;xref:System.Collections.ArrayList&gt;に指定したオブジェクトが含まれていない、&lt;xref:System.Collections.ArrayList&gt;は変更されません&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>No exception is thrown.</source>
          <target state="translated">例外はスローされません。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。そのため、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">このメソッドは、 &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;を呼び出すことで等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションで、削除された要素に続く要素上へ移動繰りにします。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">場合は、コレクションのインデックスが、移動した要素のインデックスも更新します。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素がハッシュ テーブルなどのバケットにグループ化概念的にはコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to remove from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;から削除する、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定したインデックス位置にある要素を削除、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>After the element is removed, the size of the collection is adjusted and the value of the &lt;xref:System.Collections.ArrayList.Count%2A&gt; property is decreased by one.</source>
          <target state="translated">コレクションのサイズが調整されます要素を削除すると後の値、&lt;xref:System.Collections.ArrayList.Count%2A&gt;プロパティが&amp;1; つ減らさ&lt;/xref:System.Collections.ArrayList.Count%2A&gt;。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションで、削除された要素に続く要素上へ移動繰りにします。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">場合は、コレクションのインデックスが、移動した要素のインデックスも更新します。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素がハッシュ テーブルなどのバケットにグループ化概念的にはコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">削除する要素の&amp;0; から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>と等しいかより大きい<ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Removes a range of elements from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要素の範囲を削除、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">リストなどの連続する要素のコレクションで、削除された要素に続く要素上へ移動繰りにします。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">場合は、コレクションのインデックスが、移動した要素のインデックスも更新します。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">この動作は、ここで要素がハッシュ テーブルなどのバケットにグループ化概念的にはコレクションには適用されません。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range of elements to remove.</source>
          <target state="translated">削除する要素の範囲の&amp;0; から始まる開始インデックス。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The number of elements to remove.</source>
          <target state="translated">削除する要素の数。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>および<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>内の要素の有効な範囲を表していません、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose elements are copies of the specified value.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要素を持つ指定した値のコピーであります。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;受け付ける<ph id="ph1">`null`</ph>有効な値としてでき、重複する要素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">`count`</ph>します。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to copy multiple times in the new <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;で複数回、新しいコピーに<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値を指定できます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The number of times <ph id="ph1">`value`</ph> should be copied.</source>
          <target state="translated">回数を超える<ph id="ph1">`value`</ph>コピーする必要があります。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">count</ph><ept id="p2">&lt;/code&gt;</ept> number of elements, all of which are copies of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">count</ph> <ept id="p2">&lt;/code&gt;</ept>のコピーをすべての要素数<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements in the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">全体の要素の順序を反転<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt; to reverse the order of the elements, such that the element at &lt;xref:System.Collections.ArrayList&gt; [i], where i is any index within the range, moves to &lt;xref:System.Collections.ArrayList&gt; [j], where j equals <ph id="ph1">`index`</ph><ph id="ph2"> + </ph><ph id="ph3">`index`</ph><ph id="ph4"> + </ph><ph id="ph5">`count`</ph> - i - 1.</source>
          <target state="translated">このメソッドを使用して&lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt;、要素の順序を逆になるようにある要素&lt;xref:System.Collections.ArrayList&gt;[i]、i は、範囲内の任意のインデックスに移動&lt;xref:System.Collections.ArrayList&gt;[j] j と等しい<ph id="ph1">`index`</ph> <ph id="ph2"> + </ph> <ph id="ph3">`index`</ph> <ph id="ph4"> + </ph> <ph id="ph5">`count`</ph> -i - 1&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Array.Reverse%2A?displayProperty=fullName&gt; 。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements in the specified range.</source>
          <target state="translated">指定した範囲内の要素の順序を反転させます。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt; to reverse the order of the elements, such that the element at &lt;xref:System.Collections.ArrayList&gt; [i], where i is any index within the range, moves to &lt;xref:System.Collections.ArrayList&gt; [j], where j equals <ph id="ph1">`index`</ph><ph id="ph2"> + </ph><ph id="ph3">`index`</ph><ph id="ph4"> + </ph><ph id="ph5">`count`</ph> - i - 1.</source>
          <target state="translated">このメソッドを使用して&lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt;、要素の順序を逆になるようにある要素&lt;xref:System.Collections.ArrayList&gt;[i]、i は、範囲内の任意のインデックスに移動&lt;xref:System.Collections.ArrayList&gt;[j] j と等しい<ph id="ph1">`index`</ph> <ph id="ph2"> + </ph> <ph id="ph3">`index`</ph> <ph id="ph4"> + </ph> <ph id="ph5">`count`</ph> -i - 1&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Array.Reverse%2A?displayProperty=fullName&gt; 。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph>は<ph id="ph3">`count`</ph>します。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range to reverse.</source>
          <target state="translated">反転させる範囲の&amp;0; から始まる開始インデックス。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>The number of elements in the range to reverse.</source>
          <target state="translated">反転させる範囲内の要素の数。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>および<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>内の要素の有効な範囲を表していません、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Copies the elements of a collection over a range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">内の要素の範囲に、コレクションの要素をコピー、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;受け付ける<ph id="ph1">`null`</ph>有効な値としてでき、重複する要素。&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>The order of the elements in the &lt;xref:System.Collections.ICollection&gt; is preserved in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt; &lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;内でも維持される&lt;/xref:System.Collections.ICollection&gt;内の要素の順序</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph> + 1) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph> + 1) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The zero-based <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> index at which to start copying the elements of <ph id="ph1">`c`</ph>.</source>
          <target state="translated">0 から始まる<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素のコピーを開始する位置のインデックス<ph id="ph1">`c`</ph>です。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements to copy to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;にコピーする要素を持つ、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Collections.ICollection&gt; 。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The collection itself cannot be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but it can contain elements that are <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">コレクション自体をすることはできません<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、ある要素を含めることができますが、 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> plus the number of elements in <ph id="ph2">&lt;code&gt;c&lt;/code&gt;</ph> is greater than <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>内の要素の数と<ph id="ph2">&lt;code&gt;c&lt;/code&gt;</ph>がより大きい<ph id="ph3">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>Sorts the elements in the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">全体の要素を並べ替えます<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>This method uses &lt;xref:System.Array.Sort%2A?displayProperty=fullName&gt;, which uses the QuickSort algorithm.</source>
          <target state="translated">このメソッドを使用して&lt;xref:System.Array.Sort%2A?displayProperty=fullName&gt;、クイック ソート アルゴリズムを使用します&lt;/xref:System.Array.Sort%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</source>
          <target state="translated">クイック ソート アルゴリズムは、比較 (不安定な並べ替えとも呼ばれます)、「未満またはと等しい」ことを意味する並べ替え比較操作では、最終的な並べ替えられたリストの最初に現れる必要がありますが&amp;2; つの要素のうちを判断します。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>However, if two elements are equal, their original order might not be preserved.</source>
          <target state="translated">ただし、2 つの要素が等しい場合は、元の順序は保持されません可能性があります。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>To perform a stable sort, you must implement a custom &lt;xref:System.Collections.IComparer&gt; interface to use with the other overloads of this method.</source>
          <target state="translated">安定した並べ替えを実行するのには、カスタムを実装する必要があります&lt;xref:System.Collections.IComparer&gt;でこのメソッドの他のオーバー ロードを使用するインターフェイス&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;; in the worst case it is an O(<ph id="ph4">`n`</ph>^2) operation.</source>
          <target state="translated">平均すると、このメソッドは、O (<ph id="ph1">`n`</ph>ログ<ph id="ph2">`n`</ph>) 操作、場所<ph id="ph3">`n`</ph>は&lt;xref:System.Collections.ArrayList.Count%2A&gt;最悪の場合ですこれは、O (<ph id="ph4">`n`</ph>^&amp;2;) 操作。&lt;/xref:System.Collections.ArrayList.Count%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Sorts the elements in the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified comparer.</source>
          <target state="translated">全体の要素を並べ替えます<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定した比較子を使用します。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Use the Sort method to  sort a list of objects with a custom comparer that implements the &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">実装するカスタムの比較演算子でオブジェクトの一覧を並べ替える並べ替えメソッドを使用して、&lt;xref:System.Collections.IComparer&gt;インターフェイス&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`comparer`</ph>, this method uses the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">渡す場合<ph id="ph1">`null`</ph>の<ph id="ph2">`comparer`</ph>、このメソッドを使用して、&lt;xref:System.IComparable&gt;の各要素の実装&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>In this case, you must make sure that the objects contained in the list implement the &lt;xref:System.Collections.IComparer&gt; interface or an exception will occur.</source>
          <target state="translated">この場合、する必要があります、リストに含まれるオブジェクトを実装することを確認して、&lt;xref:System.Collections.IComparer&gt;インターフェイスまたは例外が発生します&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>In addition, using the &lt;xref:System.IComparable&gt; implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">さらを使用して、&lt;xref:System.IComparable&gt;実装では、リスト (不安定な並べ替えとも呼ばれます) の比較による並べ替えを実行することを意味ですつまり、2 つの要素が等しい場合、その順序可能性がありますが維持されない。&lt;/xref:System.IComparable&gt; 。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>To perform a stable sort, you must implement a custom &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">安定した並べ替えを実行するのには、カスタムを実装する必要があります&lt;xref:System.Collections.IComparer&gt;インターフェイス&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;; in the worst case it is an O(<ph id="ph4">`n`</ph>^2) operation.</source>
          <target state="translated">平均すると、このメソッドは、O (<ph id="ph1">`n`</ph>ログ<ph id="ph2">`n`</ph>) 操作、場所<ph id="ph3">`n`</ph>は&lt;xref:System.Collections.ArrayList.Count%2A&gt;最悪の場合ですこれは、O (<ph id="ph4">`n`</ph>^&amp;2;) 操作。&lt;/xref:System.Collections.ArrayList.Count%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;要素を比較するときに使用する実装&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>-or-       A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) to use the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">または、null 参照 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual Basic で) を使用する、&lt;xref:System.IComparable&gt;の各要素の実装&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>An error occurred while comparing two elements.</source>
          <target state="translated">2 つの要素の比較中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is passed for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">comparer</ph><ept id="p2">&lt;/code&gt;</ept>, and the elements in the list do not implement &lt;xref:System.IComparable&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>渡される<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">comparer</ph> <ept id="p2">&lt;/code&gt;</ept>、リスト内の要素に&lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt;が実装していません</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Sorts the elements in a range of elements in <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified comparer.</source>
          <target state="translated">内の要素の範囲の要素を並べ替えます<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定した比較子を使用します。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`comparer`</ph> is set to <ph id="ph2">`null`</ph>, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">場合<ph id="ph1">`comparer`</ph>に設定されている<ph id="ph2">`null`</ph>、このメソッドは、(不安定な並べ替えとも呼ばれます) の比較による並べ替えを実行します。 つまり、2 つの要素が等しい場合、その順序可能性がありますが維持されません。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>To perform a stable sort, you must implement a custom &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">安定した並べ替えを実行するのには、カスタムを実装する必要があります&lt;xref:System.Collections.IComparer&gt;インターフェイス&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">`count`</ph>; in the worst case it is an O(n^2) operation.</source>
          <target state="translated">平均すると、このメソッドは、O (<ph id="ph1">`n`</ph>ログ<ph id="ph2">`n`</ph>) 操作、場所<ph id="ph3">`n`</ph>は<ph id="ph4">`count`</ph>; 最悪のケースで O(n^2) 操作であります。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range to sort.</source>
          <target state="translated">並べ替える範囲の&amp;0; から始まる開始インデックス。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>The length of the range to sort.</source>
          <target state="translated">並べ替える範囲の長さ。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;要素を比較するときに使用する実装&lt;/xref:System.Collections.IComparer&gt;。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>-or-       A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) to use the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">または、null 参照 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual Basic で) を使用する、&lt;xref:System.IComparable&gt;の各要素の実装&lt;/xref:System.IComparable&gt;。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid range in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>および<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>において有効な範囲を指定しない、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>An error occurred while comparing two elements.</source>
          <target state="translated">2 つの要素の比較中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper that is synchronized (thread safe).</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>同期されている (スレッド セーフである)。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.ArrayList&gt;, all operations must be done through this wrapper.</source>
          <target state="translated">スレッド セーフを確保する、 &lt;xref:System.Collections.ArrayList&gt;、このラッパーを通じて、すべての操作を行う必要があります&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフなプロシージャ</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to synchronize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>同期するためにします。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper that is synchronized (thread safe).</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>同期されている (スレッド セーフである)。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IList&gt; wrapper that is synchronized (thread safe).</source>
          <target state="translated">返します、&lt;xref:System.Collections.IList&gt;同期されている (スレッド セーフである).&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.ArrayList&gt;, all operations must be done through this wrapper.</source>
          <target state="translated">スレッド セーフを確保する、 &lt;xref:System.Collections.ArrayList&gt;、このラッパーを通じて、すべての操作を行う必要があります&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフなプロシージャ</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to synchronize.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;同期するためにします&lt;/xref:System.Collections.IList&gt;。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; wrapper that is synchronized (thread safe).</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;同期されている (スレッド セーフである).&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">アクセスを同期するために使用できるオブジェクトを取得、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>To create a synchronized version of the &lt;xref:System.Collections.ArrayList&gt;, use the &lt;xref:System.Collections.ArrayList.Synchronized%2A&gt; method.</source>
          <target state="translated">同期されたバージョンを作成する、&lt;xref:System.Collections.ArrayList&gt;を使用して、&lt;xref:System.Collections.ArrayList.Synchronized%2A&gt;メソッド&lt;/xref:System.Collections.ArrayList.Synchronized%2A&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>However, derived classes can provide their own synchronized version of the &lt;xref:System.Collections.ArrayList&gt; using the SyncRoot property.</source>
          <target state="translated">ただし、派生クラスは、独自の同期されたバージョンを指定、 &lt;xref:System.Collections.ArrayList&gt;SyncRoot プロパティを使用します&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.ArrayList&gt;, not directly on the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">同期されたコードでの操作を実行する必要があります、 &lt;xref:System.Collections.ArrayList&gt;、 &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;で直接&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">これにより、他のオブジェクトから派生したコレクションを適切に操作します。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.ArrayList&gt; object.</source>
          <target state="translated">具体的には、同時に変更する可能性がある別スレッドとの適切な同期を維持、&lt;xref:System.Collections.ArrayList&gt;オブジェクト&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">コレクションの列挙は本質的にスレッド セーフなプロシージャ</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">アクセスを同期するために使用できるオブジェクト、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Copies the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a new &lt;xref:System.Object&gt; array.</source>
          <target state="translated">要素をコピー、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を新しい&lt;xref:System.Object&gt;配列&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The elements are copied using &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;, which is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">要素のコピーを使用して&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;、これは、O (<ph id="ph1">`n`</ph>) 操作、場所<ph id="ph2">`n`</ph>は&lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt; &lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; array containing copies of the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Object&gt;配列の要素のコピーを格納、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Copies the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a new array of the specified element type.</source>
          <target state="translated">要素をコピー、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定した要素の型の新しい配列にします。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>All of the objects in the &lt;xref:System.Collections.ArrayList&gt; object will be cast to the &lt;xref:System.Type&gt; specified in the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">すべてのオブジェクトの&lt;xref:System.Collections.ArrayList&gt;オブジェクトにキャストされます、&lt;xref:System.Type&gt;で指定されている、<ph id="ph1">`type`</ph>パラメーター&lt;/xref:System.Type&gt; &lt;/xref:System.Collections.ArrayList&gt; 。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>The elements are copied using &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;, which is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">要素のコピーを使用して&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;、これは、O (<ph id="ph1">`n`</ph>) 操作、場所<ph id="ph2">`n`</ph>は&lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt; &lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>The element &lt;xref:System.Type&gt; of the destination array to create and copy elements to.</source>
          <target state="translated">要素&lt;xref:System.Type&gt;のコピー先の配列要素のコピーを作成します&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>An array of the specified element type containing copies of the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要素のコピーを含む指定した要素型の配列、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the specified type.</source>
          <target state="translated">ソースの種類<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定された型に自動的にキャストすることはできません。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>Sets the capacity to the actual number of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">実際の要素数を容量を設定、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">このメソッドは、コレクションのメモリ オーバーヘッドを最小要素がコレクションに追加されない場合に使用できます。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>To reset a &lt;xref:System.Collections.ArrayList&gt; to its initial state, call the &lt;xref:System.Collections.ArrayList.Clear%2A&gt; method before calling TrimToSize.</source>
          <target state="translated">リセットする、&lt;xref:System.Collections.ArrayList&gt;を初期状態を呼び出して、 &lt;xref:System.Collections.ArrayList.Clear%2A&gt;TrimToSize を呼び出す前にメソッド&lt;/xref:System.Collections.ArrayList.Clear%2A&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.ArrayList&gt; sets the capacity of the &lt;xref:System.Collections.ArrayList&gt; to the default capacity.</source>
          <target state="translated">空のトリミング&lt;xref:System.Collections.ArrayList&gt;のキャパシティを設定、&lt;xref:System.Collections.ArrayList&gt;を既定の容量&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">このメソッドは、O (<ph id="ph1">`n`</ph>) 操作では、ここで<ph id="ph2">`n`</ph> &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;は、</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は読み取り専用です。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のサイズが固定されています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>