<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74cb8ecc9e88b99a6f6547ece54a482a0fc03456</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.PresentationSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9d6f75ae768e40f2d3034a6cdd1675bd98d3237</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cd9caf8a80d2810b16dbb747d9443ef39c11c1e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</source>
          <target state="translated">相互運用のシナリオの一部として別のテクノロジからコンテンツを表示するクラスの抽象基本を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</source>
          <target state="translated">さらに、このクラスは、基本的なビジュアル層のプレゼンテーションのアーキテクチャと同様に、これらのソースを操作するための静的メソッドを提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides initialization for base class values when called by the constructor of a derived class.</source>
          <target state="translated">派生クラスのコンス トラクターによって呼び出されたときに、基本クラスの値の初期化を提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class instance to the list of known presentation sources.</source>
          <target state="translated">追加、 <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>既知プレゼンテーション ソースのリストにクラスのインスタンスを派生します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This method should be called by derived classes to indicate that they need to be tracked.</source>
          <target state="translated">このメソッドは、追跡する必要があることを示すために、派生クラスによって呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event to the provided element.</source>
          <target state="translated">ハンドラーを追加、 <bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定した要素にイベント。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Despite what the syntax block for this event states, there is no legitimate <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> attached property usage.</source>
          <target state="translated">このイベントの構文のブロックの状態に関係なくが正当ないいえ<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>添付プロパティの使用法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You should not attempt to add handlers in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, and handlers in code should only be placed on objects that serve as hosts for presentation (&lt;xref:System.Windows.PresentationSource&gt; ) content.</source>
          <target state="translated">ハンドラーを追加しないで<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>、し、コード内のハンドラーは、プレゼンテーション用のホストとして機能するオブジェクトにだけ適用する必要があります (&lt;xref:System.Windows.PresentationSource&gt; ) のコンテンツ&lt;/xref:System.Windows.PresentationSource&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</source>
          <target state="translated">このようなハンドラーは、オブジェクトの初期化中にのみ接続されている必要があり、Dispose メソッドまたは同等のオブジェクトのクリーンアップで明示的に削除する必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">場合でも、ルーティングされたイベントは、このイベントは意識このイベントを処理する一般的なアプリケーション シナリオ内の要素数が比較的小さいため、通常のルーティング イベントの動作とは異なるに特別な制限があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   You cannot use the &lt;xref:System.Windows.UIElement&gt; or &lt;xref:System.Windows.ContentElement&gt; &lt;xref:System.Windows.UIElement.AddHandler%2A&gt; methods to add handlers.</source>
          <target state="translated">使うことはできません、&lt;xref:System.Windows.UIElement&gt;または&lt;xref:System.Windows.ContentElement&gt;&lt;xref:System.Windows.UIElement.AddHandler%2A&gt;ハンドラーを追加する方法&lt;/xref:System.Windows.UIElement.AddHandler%2A&gt;&lt;/xref:System.Windows.ContentElement&gt;&lt;/xref:System.Windows.UIElement&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You must use AddSourceChangedHandler.</source>
          <target state="translated">AddSourceChangedHandler を使用する必要があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> and <ph id="ph3">`-=`</ph> event handler syntaxes, and related language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated">- <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph>と<ph id="ph3">`-=`</ph>イベント ハンドラーの構文、および関連する言語固有のハンドラーの構文はサポートされず、イベント自体がパブリックとして公開されていないためです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Only the &lt;xref:System.Windows.PresentationSource&gt; utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">のみ、&lt;xref:System.Windows.PresentationSource&gt;ユーティリティ メソッドを追加およびサポートは、直接、ハンドラーを削除する&lt;/xref:System.Windows.PresentationSource&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   Class handlers are not allowed.</source>
          <target state="translated">のクラス ハンドラーを指定することはできません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Specifically, you cannot call &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt; against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</source>
          <target state="translated">具体的には、呼び出すことができません&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;クラス コンス トラクターでは、このイベントに対して SourceChanged 用識別子フィールドが存在しますが、識別子は public ではないためです&lt;/xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-   All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</source>
          <target state="translated">-すべての登録済みハンドラー、ハンドラーの&amp;1; つが、引数を処理済みとしてマークする場合でも、SourceChanged イベントが表示されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The element to add the handler to.</source>
          <target state="translated">ハンドラーを追加する要素。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The hander implementation to add.</source>
          <target state="translated">追加するハンドラーの実装です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Sets the list of listeners for the <bpt id="p1">&lt;xref href="System.Windows.PresentationSource.ContentRendered"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">リスナーの一覧を設定、 <bpt id="p1">&lt;xref href="System.Windows.PresentationSource.ContentRendered"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the visual target for the visuals being presented in the source.</source>
          <target state="translated">ソース内に表示されているビジュアルのビジュアルのターゲットを取得します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The return of this property relies on an implementation of &lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;.</source>
          <target state="translated">このプロパティの戻り値は、 &lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;。&lt;/xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;の実装に依存しています</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A visual target (instance of a <bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class).</source>
          <target state="translated">ビジュアルのターゲット (のインスタンス、 <bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>派生クラス)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Occurs when content is rendered and ready for user interaction.</source>
          <target state="translated">コンテンツがレンダリングされ、ユーザーの操作の準備ができているときに発生します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a list of sources.</source>
          <target state="translated">ソースの一覧を返します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with &lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;&lt;/xref:System.Windows.PresentationSource.AddSource%2A&gt;に追加されると、返された一覧がソースの一覧の読み取り専用、スレッド セーフであるコピーに対する列挙子をサポートします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The enumerator skips any dead weak references in the list.</source>
          <target state="translated">列挙子は、一覧のデッド弱い参照をスキップします。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A list of weak references.</source>
          <target state="translated">弱い参照の一覧。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns the source in which a provided <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is presented.</source>
          <target state="translated">これで、ソースを返します、指定された<bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が表示されます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to find the source for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のソースを検索します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in which the dependency object is being presented.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で依存関係オブジェクトが表示されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns the source in which a provided <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is presented.</source>
          <target state="translated">これで、ソースを返します、指定された<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が表示されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to find the source for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のソースを検索します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in which the visual is being presented, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">visual</ph><ept id="p3">&lt;/code&gt;</ept> is disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>をビジュアルが表示されてでまたは<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>場合<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">visual</ph> <ept id="p3">&lt;/code&gt;</ept>が破棄されています。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;visual&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;visual&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns a visual target for the given source.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定したソースのビジュアルのターゲットを返します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is target for rendering the visual.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Windows.Media.CompositionTarget"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ビジュアルを表示するためのターゲットされています。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value that declares whether the object is disposed.</source>
          <target state="translated">派生クラスでオーバーライドされると、オブジェクトが破棄されるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object is disposed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、オブジェクトを破棄するとします。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes a <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived class instance from the list of known presentation sources.</source>
          <target state="translated">削除、 <bpt id="p1">&lt;xref href="System.Windows.PresentationSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>既知プレゼンテーション ソースの一覧から派生したクラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event from the provided element.</source>
          <target state="translated">ハンドラーを削除、 <bpt id="p1">&lt;xref uid="langword_csharp_SourceChanged" name="SourceChanged" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定した要素からのイベントです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">場合でも、ルーティングされたイベントは、このイベントは意識このイベントを処理する一般的なアプリケーション シナリオ内の要素数が比較的小さいため、通常のルーティング イベントの動作とは異なるに特別な制限があります。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-   You cannot use the &lt;xref:System.Windows.UIElement&gt; or &lt;xref:System.Windows.ContentElement&gt; &lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt; methods to remove handlers.</source>
          <target state="translated">使うことはできません、&lt;xref:System.Windows.UIElement&gt;または&lt;xref:System.Windows.ContentElement&gt;&lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt;ハンドラーを削除する方法&lt;/xref:System.Windows.UIElement.RemoveHandler%2A&gt;&lt;/xref:System.Windows.ContentElement&gt;&lt;/xref:System.Windows.UIElement&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You must use RemoveSourceChangedHandler.</source>
          <target state="translated">RemoveSourceChangedHandler を使用する必要があります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> and <ph id="ph3">`-=`</ph> event handler syntaxes, and other language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated">- <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph>と<ph id="ph3">`-=`</ph>イベント ハンドラーの構文、およびその他の言語固有のハンドラーの構文はサポートされず、イベント自体がパブリックとして公開されていないためです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Only the &lt;xref:System.Windows.PresentationSource&gt; utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">のみ、&lt;xref:System.Windows.PresentationSource&gt;ユーティリティ メソッドを追加およびサポートは、直接、ハンドラーを削除する&lt;/xref:System.Windows.PresentationSource&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The element to remove the handler from.</source>
          <target state="translated">ハンドラーを削除する要素。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The handler implementation to remove.</source>
          <target state="translated">削除するハンドラーの実装です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Provides notification that the root <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has changed.</source>
          <target state="translated">通知を提供するルート<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が変更されました。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Derived classes should call this method to indicate that their root &lt;xref:System.Windows.Media.Visual&gt; has changed.</source>
          <target state="translated">派生クラスこのメソッドを呼び出すことを示すルートの&lt;xref:System.Windows.Media.Visual&gt;が変更されました&lt;/xref:System.Windows.Media.Visual&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are &lt;xref:System.Windows.FrameworkElement&gt; derived classes.</source>
          <target state="translated">このメソッドを呼び出すそれらルート ビジュアルは場合にのみ&amp;2; つのオブジェクトの有効期間イベントで、指定したルート ビジュアルに発生すると、&lt;xref:System.Windows.FrameworkElement&gt;派生クラス&lt;/xref:System.Windows.FrameworkElement&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-   The old root visual will raise the &lt;xref:System.Windows.FrameworkElement.Unloaded&gt; event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">-古いルート visual を発生させる、&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;イベント、およびその要素ツリーの下に、各子要素には、このイベントをブロードキャストを処理します&lt;/xref:System.Windows.FrameworkElement.Unloaded&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-   The new root visual will raise the &lt;xref:System.Windows.FrameworkElement.Loaded&gt; event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">-新しいルート visual を発生させる、&lt;xref:System.Windows.FrameworkElement.Loaded&gt;イベント、およびその要素ツリーの下に、各子要素には、このイベントをブロードキャストを処理します&lt;/xref:System.Windows.FrameworkElement.Loaded&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The old root <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">古いルート<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The new root <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいルート<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the root visual being presented in the source.</source>
          <target state="translated">派生クラスでオーバーライドされるを取得またはルートをソースで表示される視覚的に設定します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The root visual.</source>
          <target state="translated">ビジュアルのルートです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>