<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5df3b73944a7d160edbd44b35970e6bd7f93cf90</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.Runtime.Hosting.WorkflowPersistenceService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9355b1266047b945632ee80a6ed12b464f6a244e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f77726f53fd8bc45fbec79dccae467e3296eea89</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The abstract base class from which all persistence services are derived.</source>
          <target state="translated">サービスの派生するすべての永続化ストアから抽象基本クラス。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>特定の条件には、ワークフローの実行中に発生した場合、ワークフロー ランタイム エンジンは、ワークフロー インスタンスに関する状態情報を保持します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls &lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName&gt; on the workflow instance, or when a workflow instance is terminated or finishes.</source>
          <target state="translated">永続化できます行われるなど、アトミック トランザクションが完了したとき、ワークフロー インスタンスがアイドル状態のホストが呼び出したときに&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName&gt;のワークフロー インスタンス、またはワークフロー インスタンスが終了または完了したとき&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance.</source>
          <target state="translated">永続化を実行することは、ワークフロー ランタイム エンジンのセマンティクスで決まると、ワークフロー ランタイム エンジンは、ワークフロー インスタンスに関する状態情報を保存する永続性サービスによって提供されるメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information.</source>
          <target state="translated">同様に、ワークフロー ランタイム エンジンは、以前に永続化されたワークフロー インスタンスを復元する必要がある、この状態情報を読み込む永続性サービスによって提供されるメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine handles all the semantics regarding when to perform persistence.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、永続化を実行するタイミングに関するすべてのセマンティクスを処理します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The persistence service handles actually saving and loading the workflow state information to or from a data store.</source>
          <target state="translated">永続性サービスは、実際に保存およびにまたはデータ ストアからワークフローの状態情報の読み込みを処理します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can create a persistence service by deriving a class from the WorkflowPersistenceService class.</source>
          <target state="translated">永続性サービスを作成するには、WorkflowPersistenceService クラスからクラスを派生します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can add your persistence service to the workflow runtime engine by calling &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; or by making an appropriate entry in the application configuration file.</source>
          <target state="translated">永続性サービスをワークフロー ランタイム エンジンに追加するには呼び出すことによって&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;またはアプリケーション構成ファイルで適切なエントリを行うことによって&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; should only contain one persistence service.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;1 つの永続性サービスのみを含める必要があります&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows Workflow Foundation provides the &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt; class, an out-of-box persistence service, which you can use as is or extend.</source>
          <target state="translated">Windows Workflow foundation、&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;クラスで、既定の永続性サービス、か、拡張を使用することができます&lt;/xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、環境、異なるプロセスで実行される永続性サービスの可能性がありますを&amp;1; つのデータ ストアで使用するためのワークフロー状態情報をロックするためのセマンティクスを持ちます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The WorkflowPersistenceService class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt; to unlock previously locked workflow state information.</source>
          <target state="translated">WorkflowPersistenceService クラスへのパラメーターを提供することによって、ワークフロー ランタイム エンジンのこの機能をサポートする機能を提供する&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;メソッドを提供して、データ ストア内には、ワークフロー インスタンスの状態情報のロックを解除するかどうかを指定する&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;以前ロックを解除するには、ワークフロー状態情報をロックします&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In a persistence service that implements locking, a call to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt; should lock the state information for a workflow instance.</source>
          <target state="translated">呼び出しのロックを実装する永続性サービスに&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;ワークフロー インスタンスの状態情報をロックする必要があります&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Your persistence service should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; if it fails to save state information to its data store or load state information from its data store.</source>
          <target state="translated">永続性サービスをスローする必要があります、&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;をデータ ストアに状態情報を保存または、データ ストアから状態情報を読み込みに失敗した場合&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine expects this behavior.</source>
          <target state="translated">ワークフロー ランタイム エンジンには、この動作が期待しています。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A batching mechanism is provided for services that use a durable store to save workflow state information.</source>
          <target state="translated">バッチ メカニズムは、ワークフロー状態情報を保存する永続的ストアを使用するサービスに対して提供されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine.</source>
          <target state="translated">このような場合、永続性サービスによって使用される永続的ストアとワークフロー ランタイム エンジンの内部状態の間の一貫性を維持する必要があります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can add functionality defined by the &lt;xref:System.Workflow.Runtime.IPendingWork&gt; interface to your service, and then participate in workflow transaction batching provided by the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; by adding changes to your data store as work items to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;.</source>
          <target state="translated">によって&lt;xref:System.Workflow.Runtime.IPendingWork&gt;、サービスへのインターフェイスし&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;変更を作業&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;。&lt;/xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;項目として、データ ストアに追加することで&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;提供するワークフロー トランザクション バッチに参加し、&lt;/xref:System.Workflow.Runtime.IPendingWork&gt;定義されている機能を追加することができます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The durable store itself should implement the &lt;xref:System.Transactions.IEnlistmentNotification&gt; interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback.</source>
          <target state="translated">永続的ストア自体を実装する必要があります、&lt;xref:System.Transactions.IEnlistmentNotification&gt;インターフェイス、トランザクションのロールバックが発生した場合にワークフロー情報が誤って永続いないできるようにします&lt;/xref:System.Transactions.IEnlistmentNotification&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt; or &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;.</source>
          <target state="translated">詳細については、「&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;または&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;の使用」を参照してください。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowPersistenceService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">派生クラスで実装された場合の新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowPersistenceService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retrieves the serialized default form of the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">シリアル化された既定の形式を取得、 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose serialized form is requested.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のシリアル化された形式を要求します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The serialized default form of the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">シリアル化された既定の形式の<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Indicates whether the given activity is blocked.</source>
          <target state="translated">指定したアクティビティがブロックされているかどうかを示します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスのルート アクティビティ。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the given activity is blocked; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、指定されたアクティビティはブロックされます。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Retrieves the termination or suspend information of the given activity.</source>
          <target state="translated">指定したアクティビティの情報を中断または終了を取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスのルート アクティビティ。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the termination or suspend information.</source>
          <target state="translated">A&lt;xref:System.String&gt;を終了または中断の情報&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Retrieves the status of the workflow.</source>
          <target state="translated">ワークフローの状態を取得します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスのルート アクティビティ。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowStatus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value that denotes the status of the workflow.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowStatus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ワークフローの状態を示す列挙値。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, loads the specified completed scope back into memory.</source>
          <target state="translated">派生クラスで実装された場合、指定した完了スコープをメモリに読み込みます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine uses LoadCompletedContextActivity to implement compensation.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、補正を実装するのに LoadCompletedContextActivity を使用します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You must restore an identical copy of the completed scope.</source>
          <target state="translated">完了したスコープの完全なコピーを復元する必要があります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To do this, you must restore a valid &lt;xref:System.IO.Stream&gt; from your representation of the completed scope in the data store.</source>
          <target state="translated">これを行うには、復元する必要あります、有効な&lt;xref:System.IO.Stream&gt;ストアのデータで完了したスコープを表すものからです&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Then you must pass this &lt;xref:System.IO.Stream&gt; to one of the overloaded methods of &lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt; to perform deserialization of the scope.</source>
          <target state="translated">これを渡す必要があります&lt;xref:System.IO.Stream&gt;のオーバー ロードされたメソッドのいずれかに&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;スコープの逆シリアル化を実行する&lt;/xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If your persistence service cannot load the completed scope from its data store, it should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate message.</source>
          <target state="translated">場合は、永続性サービスは、そのデータ ストアから完了したスコープを読み込むことができませんがスローされます、&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;適切なメッセージを使用します&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the completed scope.</source>
          <target state="translated">&lt;xref:System.Guid&gt;完了したスコープの&lt;/xref:System.Guid&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the activity that encloses the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>完了スコープを囲むアクティビティを表すです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>完了スコープを表すです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, loads the specified state of the workflow instance back into memory.</source>
          <target state="translated">派生クラスで実装された場合、メモリに指定したワークフロー インスタンスの状態を読み込みます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You must restore an identical copy of the activity.</source>
          <target state="translated">アクティビティの完全なコピーを復元する必要があります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To do this, you must restore a valid &lt;xref:System.IO.Stream&gt; from your representation of the workflow instance in the data store; then you must pass this &lt;xref:System.IO.Stream&gt; to one of the overloaded &lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt; methods to deserialize the workflow instance state.</source>
          <target state="translated">これを行うには、復元する必要あります、有効な&lt;xref:System.IO.Stream&gt;のデータ ストア内のワークフロー インスタンスを表すものから、渡す必要がありますこれ&lt;xref:System.IO.Stream&gt;オーバー ロードされたいずれかに&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;インスタンス状態のワークフローを逆シリアル化するメソッド&lt;/xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;&lt;/xref:System.IO.Stream&gt;&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If your persistence service cannot load the workflow instance state from its data store, it should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate message.</source>
          <target state="translated">場合は、永続性サービスは、そのデータ ストアからワークフロー インスタンスの状態を読み込むことができませんがスローされます、&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;適切なメッセージを使用します&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store.</source>
          <target state="translated">ワークフロー ランタイム エンジンでは、データ ストアに保存されているワークフロー インスタンス状態へのアクセスを制限するためのロック セマンティクスを実装します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This can be accessed by persistence services that run in multiple processes.</source>
          <target state="translated">これは、複数のプロセスで実行される永続性サービスによってアクセスできます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">ロック セマンティクスは、同じワークフロー インスタンスを同時をメモリに読み込む&amp;2; つの異なるプロセスで実行される永続性サービスを防ぐために設計されています。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality.</source>
          <target state="translated">永続性サービスが対応している環境の種類によってをサポートすることもできますこの機能をサポートするかどうか。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a &lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;.</source>
          <target state="translated">ランタイム ロック セマンティクスをサポートするために選択して、このワークフロー インスタンスの状態は既に別のプロセスによってロックされている場合は、し、必要がありますをスローする&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Otherwise, you should lock access to the workflow instance state in your data store.</source>
          <target state="translated">それ以外の場合、データ ストア内のワークフロー インスタンス状態へのアクセスをロックする必要があります。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The workflow instance state can be unlocked by a call to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt; or a call to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; with the unlock parameter set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">呼び出しによってワークフロー インスタンスの状態のロックを解除することができます&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;への呼び出しまたは&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;ロック解除パラメーターを設定した<ph id="ph1">`true`</ph>&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the root activity of the workflow instance.</source>
          <target state="translated">&lt;xref:System.Guid&gt;ワークフロー インスタンスのルート アクティビティの&lt;/xref:System.Guid&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the root activity of the workflow instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ワークフロー インスタンスのルート アクティビティを表すです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Restores the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from its serialized form.</source>
          <target state="translated">復元、 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>シリアル化された形式からです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The serialized form of <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">シリアル化形式の<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The outer <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, containing the <bpt id="p2">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to restore.</source>
          <target state="translated">外側<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>を含む、 <bpt id="p2">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>を復元します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The restored <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">復元された<bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, saves the specified completed scope to a data store.</source>
          <target state="translated">派生クラスとして実装された場合は、指定した完了スコープをデータ ストアに保存します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine saves the state of completed scope activities in order to implement compensation.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、補正を実装するために完了したスコープのアクティビティの状態を保存します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You must call one of the overloaded &lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt; methods to serialize <ph id="ph1">`activity`</ph> into a &lt;xref:System.IO.Stream&gt;; you may then choose to additionally process the &lt;xref:System.IO.Stream&gt; before writing it to your data store.</source>
          <target state="translated">オーバー ロードされたいずれかを呼び出す必要があります&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;シリアル化するメソッド<ph id="ph1">`activity`</ph>に、 &lt;xref:System.IO.Stream&gt;; にさらに処理し、こともできます、&lt;xref:System.IO.Stream&gt;データ ストアに書き込む前にします&lt;/xref:System.IO.Stream&gt;&lt;/xref:System.IO.Stream&gt;&lt;/xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>However, when the workflow runtime engine calls &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;, you must restore an identical copy of the activity.</source>
          <target state="translated">ただし、ワークフロー ランタイム エンジンを呼び出すと&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;、アクティビティの完全なコピーを復元する必要があります&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated.</source>
          <target state="translated">インスタンスに関連付ける完了したスコープの外側のワークフローにワークフロー インスタンスが完了するかは、データ ストア内のスコープを不要とマークする必要がありますが終了します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Therefore, you should also save the &lt;xref:System.Guid&gt; of the workflow instance that is associated with the completed scope; this can be obtained from the &lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt; property of the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; associated with <ph id="ph1">`activity`</ph>.</source>
          <target state="translated">そのため、保存する必要ありますも、&lt;xref:System.Guid&gt;この、完了したスコープに関連付けられているワークフロー インスタンスから取得できます、&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;のプロパティ、&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;に関連付けられている<ph id="ph1">`activity`</ph>&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt;&lt;/xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;&lt;/xref:System.Guid&gt;。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt; takes the &lt;xref:System.Guid&gt; of the completed scope as a parameter.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;&lt;xref:System.Guid&gt;をパラメーターとして完了したスコープの&lt;/xref:System.Guid&gt;。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Therefore, you must also save the &lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt; property associated with <ph id="ph1">`activity`</ph>.</source>
          <target state="translated">したがって、する必要がありますも保存する、&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;プロパティに関連付けられている<ph id="ph1">`activity`</ph>&lt;/xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This property can be referenced through the &lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt; field of <ph id="ph1">`activity`</ph>.</source>
          <target state="translated">このプロパティはを通じて参照できます、&lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;フィールドの<ph id="ph1">`activity`</ph>&lt;/xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">永続的ストアを使用する永続性サービスを実装している場合、ワークフロー ランタイム エンジンの内部状態と一貫性を維持するためにする必要がありますに参加ワークフロー トランザクション バッチに、永続的ストアへの実際の書き込みをワークフロー コミット ポイントまで延期します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To participate in batching, add a work item to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt; property that represents the pending changes to the database, and implement the &lt;xref:System.Workflow.Runtime.IPendingWork&gt; interface in your persistence service.</source>
          <target state="translated">バッチに参加するを作業項目を追加、&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;プロパティをデータベースに保留中の変更を表し、実装、&lt;xref:System.Workflow.Runtime.IPendingWork&gt;永続性サービスのインターフェイス&lt;/xref:System.Workflow.Runtime.IPendingWork&gt;&lt;/xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you cannot save the completed scope to your data store, you should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate error message.</source>
          <target state="translated">スローする必要がある場合は、データ ストアに完了したスコープを保存することはできません、&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;適切なエラー メッセージを使用します&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>完了スコープを表すです。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, saves the workflow instance state to a data store.</source>
          <target state="translated">派生クラスとして実装された場合は、データ ストアにワークフロー インスタンスの状態を保存します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You must call one of the overloaded &lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt; methods to serialize <ph id="ph1">`rootActivity`</ph> into a &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">オーバー ロードされたいずれかを呼び出す必要があります&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;をシリアル化するメソッド<ph id="ph1">`rootActivity`</ph> &lt;xref:System.IO.Stream&gt;&lt;/xref:System.IO.Stream&gt; &lt;/xref:System.Workflow.ComponentModel.Activity.Save%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can then choose to additionally process the &lt;xref:System.IO.Stream&gt; before writing it to your data store.</source>
          <target state="translated">さらに処理できますし、&lt;xref:System.IO.Stream&gt;データ ストアに書き込む前にします&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>However, when the workflow runtime engine calls &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;, you must restore an identical copy of the root activity.</source>
          <target state="translated">ただし、ワークフロー ランタイム エンジンを呼び出すと&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;、ルート アクティビティの完全なコピーを復元する必要があります&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If you cannot save the workflow instance state to your data store, you should throw a &lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt; with an appropriate error message.</source>
          <target state="translated">スローする必要がある場合は、データ ストアにワークフロー インスタンスの状態を保存することはできません、&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;適切なエラー メッセージを使用します&lt;/xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、データ ストアに保存されているワークフロー インスタンス状態へのアクセスを制限するためのロック セマンティクスを提供します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This can be accessed by the persistence services running in multiple hosts and pointing to the same data store.</source>
          <target state="translated">これは、複数のホストで実行されており、同じデータ ストアへの永続性サービスによってアクセスできます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">ロック セマンティクスは、同時に同じワークフロー インスタンスをメモリに読み込み、2 つの異なるワークフロー ランタイムで実行される永続性サービスを防ぐために設計されています。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality.</source>
          <target state="translated">永続性サービスがサポートするために目的の環境の種類に応じて、この機能をサポートするかどうかを選択できます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a &lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;.</source>
          <target state="translated">ランタイム ロック セマンティクスをサポートする場合は、その後、永続性サービスが、別の永続性サービスによって既にロックされているワークフロー インスタンスの状態を保存しようとしています。 場合必要がありますをスローする&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`unlock`</ph> is <ph id="ph2">`true`</ph>, you should unlock access to the workflow instance state after you save it.</source>
          <target state="translated">場合<ph id="ph1">`unlock`</ph>は<ph id="ph2">`true`</ph>、保存した後、ワークフロー インスタンス状態へのアクセスをロック解除する必要があります。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt; takes the &lt;xref:System.Guid&gt; of the workflow instance as a parameter.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;&lt;xref:System.Guid&gt;をパラメーターとしてワークフロー インスタンスの&lt;/xref:System.Guid&gt;。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Therefore, you should save this &lt;xref:System.Guid&gt;.</source>
          <target state="translated">したがって、この&lt;xref:System.Guid&gt;。&lt;/xref:System.Guid&gt;を保存する必要があります。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can also use this &lt;xref:System.Guid&gt; to associate the workflow instance with the saved states of its completed scopes.</source>
          <target state="translated">これを使用することもできます&lt;xref:System.Guid&gt;その完了スコープの保存された状態を持つワークフロー インスタンスに関連付けます&lt;/xref:System.Guid&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.</source>
          <target state="translated">これを行うときに、不必要なとしてような完了スコープをマークする必要がありますので、ワークフロー インスタンスの完了します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine calls SaveWorkflowInstanceState a final time when the workflow instance is completed or terminated.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、ワークフロー インスタンスが完了または終了したときに最後に SaveWorkflowInstanceState を呼び出します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Therefore, if &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt; is equal to &lt;xref:System.Workflow.Runtime.WorkflowStatus&gt; or &lt;xref:System.Workflow.Runtime.WorkflowStatus&gt;, you can safely delete the workflow instance and all its associated completed scopes from your data store.</source>
          <target state="translated">したがって場合、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;等しく&lt;xref:System.Workflow.Runtime.WorkflowStatus&gt;または&lt;xref:System.Workflow.Runtime.WorkflowStatus&gt;、データ ストアから安全にワークフロー インスタンスとその関連付けられている完了したスコープはすべてを削除することができます&lt;/xref:System.Workflow.Runtime.WorkflowStatus&gt;&lt;/xref:System.Workflow.Runtime.WorkflowStatus&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Alternatively, you can subscribe to the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt; or &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt; events to determine when it is safe to delete records associated with the workflow instance.</source>
          <target state="translated">代わりをサブスクライブすることができます、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;または&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;イベントである場合、ワークフロー インスタンスに関連付けられているレコードを削除しても安全を確認します&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Whether you actually delete the records from your data store depends on your implementation.</source>
          <target state="translated">実際には、データ ストアからレコードを削除するかどうかは、実装によって異なります。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">永続的ストアを使用する永続性サービスを実装する場合に、ワークフロー ランタイム エンジンの内部状態と一貫性を維持するためにする必要があります参加ワークフロー トランザクション バッチをワークフロー コミット ポイントに達するまで、永続的ストアへの実際の書き込みを遅延します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To participate in batching, add a work item that represents the pending changes to your durable store to the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt; property, and implement the &lt;xref:System.Workflow.Runtime.IPendingWork&gt; interface in your persistence service.</source>
          <target state="translated">バッチに参加するに、永続的ストアへの保留中の変更を表す作業項目を追加、&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;プロパティ、および実装、&lt;xref:System.Workflow.Runtime.IPendingWork&gt;永続性サービスのインターフェイス&lt;/xref:System.Workflow.Runtime.IPendingWork&gt;&lt;/xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスのルート アクティビティ。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the workflow instance should not be locked; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the workflow instance should be locked.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ワークフロー インスタンスがロックされていない必要があります。 場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>場合は、ワークフロー インスタンスをロックする必要があります。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Determines whether a workflow should be unloaded when idle.</source>
          <target state="translated">かどうか、ワークフローをアンロードするかアイドル状態のときを判断します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the completed scope.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>完了スコープを表すです。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the workflow runtime engine unloads the specified workflow when it becomes idle.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、アイドル状態になったときに、ワークフロー ランタイム エンジンが指定したワークフローをアンロードします。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, unlocks the workflow instance state.</source>
          <target state="translated">派生クラスでオーバーライドされると、ワークフロー インスタンスの状態のロックを解除します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This method is abstract, so it does not contain a default implementation on locking and unlocking.</source>
          <target state="translated">ロックおよびロック解除に関する既定の実装が含まれていないために、このメソッドは抽象、です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt; method based on the value of the unlock parameter.</source>
          <target state="translated">カスタムの永続性サービスを実装するには、中に場合は、ロック スキームを実装する必要がありますこのメソッドをオーバーライドし、ロック/ロック解除メカニズムを提供する、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;メソッドが、ロック解除パラメーターの値に基づきます&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスのルート アクティビティ。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>