<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1aca81d546fa968073c23d96d32ed689154095b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.HashAlgorithm.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1571f9ccc06cd41850ebf85587d11eabeb9df251</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ea5afdede90d5f935aeed91b67e1b27bcf7bf29</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the base class from which all implementations of cryptographic hash algorithms must derive.</source>
          <target state="translated">すべての実装の暗号ハッシュ アルゴリズムの派生元の基本クラスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Hash functions are fundamental to modern cryptography.</source>
          <target state="translated">ハッシュ関数は、最新の暗号化の基本。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>These functions map binary strings of an arbitrary length to small binary strings of a fixed length, known as hash values.</source>
          <target state="translated">これらの関数は、任意の長さのバイナリ文字列をハッシュ値と呼ばれる、固定長のバイナリ文字列を小規模にマップします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value.</source>
          <target state="translated">暗号ハッシュ関数には、プロパティを同じ値にハッシュされる&amp;2; つの異なる入力を検索可能な負荷の大きい計算されていないことがあります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Hash functions are commonly used with digital signatures and for data integrity.</source>
          <target state="translated">ハッシュ関数は、デジタル署名とは、データの整合性によく使用されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The hash is used as a unique value of fixed size representing a large amount of data.</source>
          <target state="translated">ハッシュは、大量のデータを表す固定サイズの一意の値として使用されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Hashes of two sets of data should match if the corresponding data also matches.</source>
          <target state="translated">対応するデータにも一致する場合、2 組のデータのハッシュが一致する必要があります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Small changes to the data result in large unpredictable changes in the hash.</source>
          <target state="translated">ハッシュで予期しない変更を大規模なデータの結果を少し変更します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">抽象クラスのインスタンスを作成することはできません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Application code creates a new instance of a derived class.</source>
          <target state="translated">アプリケーション コードでは、派生クラスの新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">現在の変換を再利用できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value indicating whether multiple blocks can be transformed.</source>
          <target state="translated">派生クラスでオーバーライドされると、複数のブロックを変換できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if multiple blocks can be transformed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>複数のブロックを変換できる場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">によって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This method is a simple call to the &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">このメソッドは、単純に、&lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; class to be reallocated for other purposes.</source>
          <target state="translated">呼び出す<ph id="ph1">`Dispose`</ph>により、リソースで使用される、&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;を他の目的を再割り当てするクラス&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">`Dispose`</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified byte array.</source>
          <target state="translated">指定したバイト配列のハッシュ値を計算します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">ハッシュ コードを計算する入力。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">計算されたハッシュ コード。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">オブジェクトは既に破棄されています。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified &lt;xref:System.IO.Stream&gt; object.</source>
          <target state="translated">指定したハッシュ値を計算&lt;xref:System.IO.Stream&gt;オブジェクト&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">ハッシュ コードを計算する入力。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">計算されたハッシュ コード。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">オブジェクトは既に破棄されています。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified region of the specified byte array.</source>
          <target state="translated">指定したバイト配列の指定した領域のハッシュ値を計算します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">ハッシュ コードを計算する入力。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">データの使用を開始するバイト配列へのオフセット。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">データとして使用する配列内のバイト数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">計算されたハッシュ コード。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>無効な値です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> length is invalid.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>長さが無効です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>範囲外です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">このパラメーターには、負でない値が必要です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">オブジェクトは既に破棄されています。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Creates an instance of the default implementation of a hash algorithm.</source>
          <target state="translated">ハッシュ アルゴリズムの既定の実装のインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>By default, this overload uses the &lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt; implementation of a hash algorithm.</source>
          <target state="translated">既定では、このオーバー ロードを使用して、&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;ハッシュ アルゴリズムの実装&lt;/xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you want to specify a different implementation, use the &lt;xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt; overload, which lets you specify an algorithm name, instead.</source>
          <target state="translated">別の実装を指定する場合は、使用、&lt;xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt;オーバー ロードの代わりに、アルゴリズムの名前を指定することができます&lt;/xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The cryptography configuration system defines the default implementation of &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.</source>
          <target state="translated">暗号の構成システム&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;。&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;の既定の実装を定義します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Security.Cryptography.SHA1CryptoServiceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, unless the default settings have been changed using the .</source>
          <target state="translated">新しい<bpt id="p1">&lt;xref href="System.Security.Cryptography.SHA1CryptoServiceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>インスタンスを使用して、既定の設定を変更されていない限り、します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates an instance of the specified implementation of a hash algorithm.</source>
          <target state="translated">指定したハッシュ アルゴリズムの実装のインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The hash algorithm implementation to use.</source>
          <target state="translated">使用するハッシュ アルゴリズムの実装です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following table shows the valid values for the <ph id="ph1">`hashName`</ph> parameter and the algorithms they map to.</source>
          <target state="translated">次の表に有効な値を示しています、<ph id="ph1">`hashName`</ph>パラメーターおよびそれらの割り当て先のアルゴリズムです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Parameter value</source>
          <target state="translated">パラメーターの値</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Implements</source>
          <target state="translated">実装</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>SHA</source>
          <target state="translated">SHA</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>SHA1</source>
          <target state="translated">SHA1</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA1</source>
          <target state="translated">System.Security.Cryptography.SHA1</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.HashAlgorithm</source>
          <target state="translated">System.Security.Cryptography.HashAlgorithm</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>MD5</source>
          <target state="translated">MD5</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.MD5</source>
          <target state="translated">System.Security.Cryptography.MD5</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>SHA256</source>
          <target state="translated">SHA256</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>SHA-256</source>
          <target state="translated">SHA-256</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA256</source>
          <target state="translated">System.Security.Cryptography.SHA256</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>SHA384</source>
          <target state="translated">SHA384</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>SHA-384</source>
          <target state="translated">SHA-384</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA384</source>
          <target state="translated">System.Security.Cryptography.SHA384</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>SHA512</source>
          <target state="translated">SHA512</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>SHA-512</source>
          <target state="translated">SHA-512</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA512</source>
          <target state="translated">System.Security.Cryptography.SHA512</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A new instance of the specified hash algorithm, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">hashName</ph><ept id="p2">&lt;/code&gt;</ept> is not a valid hash algorithm.</source>
          <target state="translated">指定したハッシュ アルゴリズムの新しいインスタンスまたは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">hashName</ph> <ept id="p2">&lt;/code&gt;</ept>は有効なハッシュ アルゴリズムではありません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">現在のインスタンスによって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.</source>
          <target state="translated">呼び出す<ph id="ph1">`Dispose`</ph> &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;の使用が終了したときに</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>メソッドによって、&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;使用不可の状態&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; was occupying.</source>
          <target state="translated">呼び出した後に<ph id="ph1">`Dispose`</ph>へのすべての参照を解放する必要があります、&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;ガベージ コレクターがメモリを再利用できるようにする、&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;占有されていた&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 常に呼び出し<ph id="ph2">`Dispose`</ph>&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;の最後の参照を解放する前に。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;オブジェクトの<ph id="ph1">`Finalize`</ph>メソッド&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>し、必要に応じてマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび<ph id="ph2">`Finalize`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターは<ph id="ph2">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;参照。&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt; 。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose()`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets the value of the computed hash code.</source>
          <target state="translated">計算されたハッシュ コードの値を取得します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The Hash property is a byte array; the &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt; property is a value that represent bits.</source>
          <target state="translated">ハッシュ プロパティは、バイト配列です。&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;プロパティは、bits を表す値&lt;/xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Therefore, the number of elements in Hash is one-eighth the size of &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;.</source>
          <target state="translated">したがって、 &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;。&lt;/xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;の&amp;8; 分の&amp;1; のサイズは、ハッシュ内の要素の数</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The current value of the computed hash code.</source>
          <target state="translated">計算されたハッシュ コードの現在の値。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm.HashValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm.HashValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">オブジェクトは既に破棄されています。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, routes data written to the object into the hash algorithm for computing the hash.</source>
          <target state="translated">派生クラスでオーバーライドされると、ハッシュ アルゴリズム、ハッシュを計算するために、オブジェクトに書き込まれたデータをルーティングします。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This method is not called by application code.</source>
          <target state="translated">このメソッドは、アプリケーション コードでは呼び出されません。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This abstract method performs the hash computation.</source>
          <target state="translated">この抽象メソッドでは、ハッシュ計算を実行します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Every write to the cryptographic stream object passes the data through this method.</source>
          <target state="translated">暗号ストリーム オブジェクトに対するすべての書き込みは、このメソッドをデータを通過します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</source>
          <target state="translated">データの各ブロックに対しては、このメソッドは、データ ストリームの末尾に正しいハッシュ値が返されるために、ハッシュ オブジェクトの状態を更新します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">ハッシュ コードを計算する入力。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">データの使用を開始するバイト配列へのオフセット。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">データとして使用するバイト配列内のバイト数。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</source>
          <target state="translated">派生クラスでオーバーライドされると、暗号ストリーム オブジェクトによって最後にデータが処理された後、ハッシュ計算を終了します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This method finalizes any partial computation and returns the correct hash value for the data stream.</source>
          <target state="translated">このメソッドは、任意の部分的な計算を終了し、データ ストリームに対して正しいハッシュ値を返します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">計算されたハッシュ コード。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets the size, in bits, of the computed hash code.</source>
          <target state="translated">計算されたハッシュ コードのビット単位のサイズを取得します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The size, in bits, of the computed hash code.</source>
          <target state="translated">計算されたハッシュ コードのビット単位のサイズ。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Represents the size, in bits, of the computed hash code.</source>
          <target state="translated">サイズをビット単位で計算されたハッシュ コードを表します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The hash algorithm specifies the size of the hash code.</source>
          <target state="translated">ハッシュ アルゴリズムは、ハッシュ コードのサイズを指定します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For example, &lt;xref:System.Security.Cryptography.SHA1&gt; uses a hash size of 160 bits.</source>
          <target state="translated">たとえば、 &lt;xref:System.Security.Cryptography.SHA1&gt;160 ビットのハッシュのサイズを使用します&lt;/xref:System.Security.Cryptography.SHA1&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt; property.</source>
          <target state="translated">このフィールドには、&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Represents the value of the computed hash code.</source>
          <target state="translated">計算されたハッシュ コードの値を表します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt; property.</source>
          <target state="translated">このフィールドには、&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Initializes an implementation of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">実装を初期化、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the input block size.</source>
          <target state="translated">派生クラスでオーバーライドされると、入力ブロック サイズを取得します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Unless overridden, this property returns the value 1.</source>
          <target state="translated">オーバーライドされない限り、このプロパティは、値 1 を返します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The input block size.</source>
          <target state="translated">入力ブロック サイズ。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the output block size.</source>
          <target state="translated">派生クラスでオーバーライドされると、出力ブロック サイズを取得します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Unless overridden, this property returns the value 1.</source>
          <target state="translated">オーバーライドされない限り、このプロパティは、値 1 を返します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The output block size.</source>
          <target state="translated">出力ブロック サイズ。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Represents the state of the hash computation.</source>
          <target state="translated">ハッシュ計算の状態を表します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This field is used to prevent users from changing the key of a keyed hash algorithm during a hash operation.</source>
          <target state="translated">このフィールドをユーザーがハッシュ操作中に、キー付きハッシュ アルゴリズムのキーを変更することを防ぐために使用されます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When a key change is legitimate, the value of this field is zero both before and after a hash operation.</source>
          <target state="translated">キーの変更が正当で、ときに、このフィールドの値が&amp;0; ハッシュ操作の前後を使用します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When a key change is not legitimate, the value of this field is nonzero.</source>
          <target state="translated">キーの変更が正当ではない場合にこのフィールドの値は&amp;0; 以外の値です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified region of the input byte array and copies the specified region of the input byte array to the specified region of the output byte array.</source>
          <target state="translated">入力バイト配列の指定した領域のハッシュ値を計算し、入力バイト配列の指定した領域を出力バイト配列の指定した領域にコピーします。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You must call the TransformBlock method before calling the &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt; method.</source>
          <target state="translated">呼び出しの前に TransformBlock メソッドを呼び出す必要があります、&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;メソッド&lt;/xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You must call both methods before you retrieve the final hash value.</source>
          <target state="translated">最後のハッシュ値を取得する前に、両方のメソッドを呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To retrieve the final hash value after calling the &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt; method, get the byte array contained within the &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt; property.</source>
          <target state="translated">呼び出した後、最後のハッシュ値を取得する、&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;メソッド内に含まれるバイト配列を取得する、&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;&lt;/xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Calling the TransformBlock method with different input and output arrays results in an &lt;xref:System.IO.IOException&gt;.</source>
          <target state="translated">&lt;xref:System.IO.IOException&gt;。&lt;/xref:System.IO.IOException&gt;異なる入力と出力配列 TransformBlock メソッドを呼び出す</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">ハッシュ コードを計算する入力。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The offset into the input byte array from which to begin using data.</source>
          <target state="translated">データの使用を開始位置を示す入力バイト配列へのオフセット。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">データとして使用する入力バイト配列内のバイト数。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A copy of the part of the input array used to compute the hash code.</source>
          <target state="translated">ハッシュ コードを計算するために使用する入力配列の一部のコピー。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The offset into the output byte array from which to begin writing data.</source>
          <target state="translated">データの書き込み開始位置を示す出力バイト配列へのオフセット。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The number of bytes written.</source>
          <target state="translated">書き込まれたバイト数。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph> uses an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph>無効な値を使用します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> has an invalid length.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>が長さが無効です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph>範囲外です。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">このパラメーターには、負でない値が必要です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">オブジェクトは既に破棄されています。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified region of the specified byte array.</source>
          <target state="translated">指定したバイト配列の指定した領域のハッシュ値を計算します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>You must call the TransformFinalBlock method after calling the &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt; method but before you retrieve the final hash value.</source>
          <target state="translated">TransformFinalBlock メソッドを呼び出した後に呼び出す必要があります、&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;メソッドは、最後のハッシュ値を取得する前にします&lt;/xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Note that the return value of this method is not the hash value, but only a copy of the hashed part of the input data.</source>
          <target state="translated">このメソッドの戻り値の値が入力データのハッシュされた一部のコピーだけが、ハッシュ値がないことに注意してください。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To retrieve the final hashed value after calling the TransformFinalBlock method, get the byte array contained in the &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt; property.</source>
          <target state="translated">TransformFinalBlock メソッドを呼び出した後、最後のハッシュ値を取得するに含まれているバイト配列を取得、&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">ハッシュ コードを計算する入力。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">データの使用を開始するバイト配列へのオフセット。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">データとして使用するバイト配列内のバイト数。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>An array that is a copy of the part of the input that is hashed.</source>
          <target state="translated">ハッシュされた入力の一部のコピーである配列。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph> uses an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph>無効な値を使用します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> has an invalid offset length.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>が無効なオフセットの長さ。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph>範囲外です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">このパラメーターには、負でない値が必要です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">オブジェクトは既に破棄されています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>