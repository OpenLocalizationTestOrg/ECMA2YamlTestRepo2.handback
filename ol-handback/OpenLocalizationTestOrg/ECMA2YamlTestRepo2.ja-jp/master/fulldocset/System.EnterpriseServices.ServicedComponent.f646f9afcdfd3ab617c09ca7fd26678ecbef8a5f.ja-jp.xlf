<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01bf4aec7c861a499b01bf4f9c5747fe341480bb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.EnterpriseServices.ServicedComponent.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8af81d4c22f696629d6a4d6c9568ffefb4f5c8b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a7f5066c8d0b6deaee907673ccdac9e5701d590</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the base class of all classes using COM+ services.</source>
          <target state="translated">COM + サービスを使用してすべてのクラスの基本クラスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Under certain conditions, a class that is derived from ServicedComponent that runs in a COM+ application may stop responding.</source>
          <target state="translated">特定の状況は、COM + アプリケーションで実行されている ServicedComponent から派生したクラスが、応答を停止する可能性があります。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This problem is caused by an Activity deadlock.</source>
          <target state="translated">この問題は、アクティビティのデッドロックが原因です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Activities can deadlock on multithreaded applications because of an asynchronous cleanup of component references.</source>
          <target state="translated">アクティビティは、コンポーネント参照の非同期のクリーンアップのためマルチ スレッド アプリケーションでデッドロックことができます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To work around this problem, call the &lt;xref:System.EnterpriseServices.ServicedComponent.Dispose%2A&gt; method when you complete work with objects derived from ServicedComponent.</source>
          <target state="translated">この問題を回避する、 &lt;xref:System.EnterpriseServices.ServicedComponent.Dispose%2A&gt;ServicedComponent から派生したオブジェクトを操作を完了するとメソッド&lt;/xref:System.EnterpriseServices.ServicedComponent.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>http://support.microsoft.com/default.aspx?scid=kb;en-us;327443<ept id="p1">](http://support.microsoft.com/default.aspx?scid=kb;en-us;327443)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>http://support.microsoft.com/default.aspx?scid=kb;en-us;327443<ept id="p1">](http://support.microsoft.com/default.aspx?scid=kb;en-us;327443)</ept>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Client code must call <ph id="ph2">`Dispose`</ph> on serviced components to ensure proper operation.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; クライアント コードを呼び出す必要があります<ph id="ph2">`Dispose`</ph>でを適切に操作を確認するにはコンポーネント サービスを提供します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">このコンス トラクターは、この型の状態を初期化するために、派生クラスのコンス トラクターによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Called by the infrastructure when the object is created or allocated from a pool.</source>
          <target state="translated">オブジェクトが作成またはプールから割り当てられたときに、インフラストラクチャによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Override this method to add custom initialization code to objects.</source>
          <target state="translated">オブジェクトにカスタムの初期化コードを追加するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This method is called by the infrastructure before the object is put back into the pool.</source>
          <target state="translated">オブジェクトは、プールに戻される前に、このメソッドが、インフラストラクチャによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Override this method to vote on whether the object is put back into the pool.</source>
          <target state="translated">かどうか、オブジェクトがプールに戻さ、について投票するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the serviced component can be pooled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>サービス コンポーネントをプールすることができます。 場合、それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Called by the infrastructure just after the constructor is called, passing in the constructor string.</source>
          <target state="translated">コンス トラクターが呼び出されたコンス トラクター文字列に渡す直後後に、インフラストラクチャによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Override this method to make use of the construction string value.</source>
          <target state="translated">作成するには、このメソッドをオーバーライド構築文字列の値を使用します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The construction string.</source>
          <target state="translated">構築文字列。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Called by the infrastructure when the object is about to be deactivated.</source>
          <target state="translated">オブジェクトの非アクティブになるときに、インフラストラクチャによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Override this method to add custom finalization code to objects when just-in-time (JIT) compiled code or object pooling is used.</source>
          <target state="translated">・ イン タイム (JIT) コンパイル コードまたはオブジェクト プールが使用されるときに、オブジェクトにカスタムの終了コードを追加するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">によって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Finalizes the object and removes the associated COM+ context.</source>
          <target state="translated">オブジェクトを終了し、関連付けられている COM + コンテキストを削除します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It is recommended to explicitly release COM+ objects and external resources before the garbage collector frees the object.</source>
          <target state="translated">ガベージ コレクターがオブジェクトを解放する前に明示的に COM + オブジェクトおよび外部リソースを解放することをお勧めします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the external resource is scarce or expensive, better performance can be achieved by explicitly releasing COM+ resources when they are no longer needed.</source>
          <target state="translated">外部のリソースが不足しているか高コストの場合は、不要になったときに、COM + リソースを明示的に解放することによってパフォーマンスが向上を実現できます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Explicit control is provided by the Dispose method.</source>
          <target state="translated">明示的な制御は、Dispose メソッドから提供されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Calling Dispose allows the resources used by the &lt;xref:System.EnterpriseServices.ServicedComponent&gt; to be reallocated for other purposes.</source>
          <target state="translated">Dispose を呼び出すことによりで使用されるリソース、&lt;xref:System.EnterpriseServices.ServicedComponent&gt;を他の目的に再割り当てされます&lt;/xref:System.EnterpriseServices.ServicedComponent&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Dispose の詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>し、必要に応じてマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose`</ph>メソッドおよび&lt;xref:System.Object.Finalize%2A&gt;メソッド&lt;/xref:System.Object.Finalize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;呼び出す<ph id="ph1">`Dispose`</ph>で<ph id="ph2">`disposing`</ph>'éý'<ph id="ph3">`false`</ph>です。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.EnterpriseServices.ServicedComponent&gt; references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターは<ph id="ph2">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.EnterpriseServices.ServicedComponent&gt;参照。&lt;/xref:System.EnterpriseServices.ServicedComponent&gt; 。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Finalizes the object and removes the associated COM+ reference.</source>
          <target state="translated">オブジェクトを終了し、関連付けられている COM + の参照を削除します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It is preferable to use the <ph id="ph1">`Dispose`</ph> design pattern rather than DisposeObject.</source>
          <target state="translated">使用することをお勧め、 <ph id="ph1">`Dispose`</ph> DisposeObject ではなく、パターンをデザインします。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The object to dispose.</source>
          <target state="translated">破棄するオブジェクト。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Ensures that, in the COM+ context, the <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class object's <bpt id="p2">&lt;xref uid="langword_csharp_done" name="done" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> bit is set to <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> after a remote method invocation.</source>
          <target state="translated">確実に、COM + コンテキストで、 <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス オブジェクトの<bpt id="p2">&lt;xref uid="langword_csharp_done" name="done" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>に設定されているビット<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>リモート メソッド呼び出しの後にします。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A&gt; method does not belong to the published interface of the &lt;xref:System.EnterpriseServices.ServicedComponent&gt; class and does not need to be implemented elsewhere.</source>
          <target state="translated">&lt;xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A&gt;の公開されたインターフェイスにメソッドが属していない、&lt;xref:System.EnterpriseServices.ServicedComponent&gt;クラスし、他の場所で実装する必要はありません&lt;/xref:System.EnterpriseServices.ServicedComponent&gt;&lt;/xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A string converted from a response object that implements the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodReturnMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">実装する応答オブジェクトから変換された文字列、 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodReturnMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Does not ensure that, in the COM+ context, the <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class object's <bpt id="p2">&lt;xref uid="langword_csharp_done" name="done" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> bit is set to <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> after a remote method invocation.</source>
          <target state="translated">限りませんが、COM + のコンテキストで、 <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス オブジェクトの<bpt id="p2">&lt;xref uid="langword_csharp_done" name="done" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>に設定されているビット<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>リモート メソッド呼び出しの後にします。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A&gt; method does not belong to the published interface of the &lt;xref:System.EnterpriseServices.ServicedComponent&gt; class and does not need to be implemented elsewhere.</source>
          <target state="translated">&lt;xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A&gt;の公開されたインターフェイスにメソッドが属していない、&lt;xref:System.EnterpriseServices.ServicedComponent&gt;クラスし、他の場所で実装する必要はありません&lt;/xref:System.EnterpriseServices.ServicedComponent&gt;&lt;/xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A string to be converted into a request object that implements the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">実装する要求オブジェクトに変換する文字列、 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A string converted from a response object that implements the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodReturnMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">実装する応答オブジェクトから変換された文字列、 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodReturnMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Obtains certain information about the <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class instance.</source>
          <target state="translated">に関する特定の情報を取得、 <bpt id="p1">&lt;xref href="System.EnterpriseServices.ServicedComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>IServicedComponentInfo.GetComponentInfo(Int32, String<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(System.Int32@,System.String[]@)?qualifyHint=False&amp;autoUpgrade=True)</ept> method does not belong to the published interface of the &lt;xref:System.EnterpriseServices.ServicedComponent&gt; class and does not need to be implemented elsewhere.</source>
          <target state="translated"><bpt id="p1">[</bpt>IServicedComponentInfo.GetComponentInfo (Int32、文字列<ph id="ph1">\[</ph><ph id="ph2">\]</ph>)<ept id="p1">](assetId:///M:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(System.Int32@,System.String[]@)?qualifyHint=False&amp;autoUpgrade=True)</ept>の公開されたインターフェイスにメソッドが属していない、&lt;xref:System.EnterpriseServices.ServicedComponent&gt;クラスし、他の場所で実装する必要はありません&lt;/xref:System.EnterpriseServices.ServicedComponent&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A bitmask where 0x00000001 is a key for the serviced component's process ID, 0x00000002 is a key for the application domain ID, and 0x00000004 is a key for the serviced component's remote URI.</source>
          <target state="translated">ビットマスクが 0x00000001 サービス コンポーネントのプロセス ID のキー、0x00000002 はアプリケーション ドメイン ID のキーであり 0x00000004 がサービス コンポーネントのリモートの URI のキー。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>