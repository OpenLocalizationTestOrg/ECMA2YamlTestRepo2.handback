<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbca6bc3a00ff2171ef895ef841e396e11bc4583</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Printing.PrintQueueStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23571a4140757226a801cf6cf70ed70f58aa7e7e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4bd3d80ffb147e42c882a15b12d164e6774ff59</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A stream that represents a spooled print job in a print queue.</source>
          <target state="translated">印刷キューにスプールされた印刷ジョブを表すストリーム。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use this class to write device specific information to a spool file that is not automatically included by the <ph id="ph1">[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]</ph> spooler.</source>
          <target state="translated">このクラスを使用して、によって自動的に含まれていないスプール ファイルにデバイス固有の情報を書き込む、<ph id="ph1">[!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)]</ph>スプーラーです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Of course, you need to know whether the spool file is <ph id="ph1">[!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)]</ph> or <ph id="ph2">[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]</ph>.</source>
          <target state="translated">もちろん、操作のスプール ファイルかどうかを把握する必要があります<ph id="ph1">[!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)]</ph>または<ph id="ph2">[!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you prefer working with a &lt;xref:System.Byte&gt; array, you can also use two of the overloads of the &lt;xref:System.Printing.PrintQueue.AddJob%2A&gt; method and the &lt;xref:System.Printing.PrintSystemJobInfo.JobStream%2A&gt; property to write to the spool file.</source>
          <target state="translated">操作する場合、&lt;xref:System.Byte&gt;配列を使用することも&amp;2; つのオーバー ロードの&lt;xref:System.Printing.PrintQueue.AddJob%2A&gt;メソッドおよび&lt;xref:System.Printing.PrintSystemJobInfo.JobStream%2A&gt;操作のスプール ファイルに書き込むプロパティ&lt;/xref:System.Printing.PrintSystemJobInfo.JobStream%2A&gt;&lt;/xref:System.Printing.PrintQueue.AddJob%2A&gt;&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Classes within the &lt;xref:System.Printing&gt; namespace are not supported for use within a Windows service or ASP.NET application or service.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; クラス内で、 &lt;xref:System.Printing&gt;Windows サービスや ASP.NET アプリケーションまたはサービス内で使用する名前空間はサポートされていません&lt;/xref:System.Printing&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</source>
          <target state="translated">パフォーマンスと実行時の例外をサービス低下のいずれかのようなアプリケーションからこれらのクラスを使用しようと、予期しない問題が生じる可能性があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you want to print from a Windows Forms application, see the &lt;xref:System.Drawing.Printing&gt; namespace.</source>
          <target state="translated">Windows フォーム アプリケーションから印刷する場合を参照してください、&lt;xref:System.Drawing.Printing&gt;名前空間&lt;/xref:System.Drawing.Printing&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified print job that is hosted in the specified <bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの指定した印刷ジョブでホストされているため、指定した<bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that hosts the print job that provides the content of the stream.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ストリームの内容を提供する印刷ジョブをホストします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The name of the print job that provides the content of the stream.</source>
          <target state="translated">ストリームの内容を提供する印刷ジョブの名前。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified print job that is hosted in the specified <bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, with an indication of whether data in the <bpt id="p3">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> should be committed when the stream is closed.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの指定した印刷ジョブでホストされているため、指定した<bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、かどうかを示す値を内のデータ、 <bpt id="p3">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>ストリームが閉じられたときにコミットする必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that hosts the print job that provides the content of the stream.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ストリームの内容を提供する印刷ジョブをホストします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The name of the print job that provides the content of the stream.</source>
          <target state="translated">ストリームの内容を提供する印刷ジョブの名前。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to commit data in the <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> when the &lt;xref:System.Printing.PrintQueueStream.Close*&gt; method is called; otherwise,<bpt id="p3">&lt;xref uid="langword_csharp_ false" name=" false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>内のデータをコミットする、 <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>ときに、&lt;xref:System.Printing.PrintQueueStream.Close*&gt;メソッドが呼び出される、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_ false" name=" false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>&lt;/xref:System.Printing.PrintQueueStream.Close*&gt; 。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified print job that is hosted in the specified <bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, with the specified settings and an indication of whether data in the <bpt id="p3">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> should be committed when the stream is closed.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの指定した印刷ジョブでホストされているため、指定した<bpt id="p2">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>指定された設定とかどうかを示す値を指定して内のデータ、 <bpt id="p3">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>ストリームが閉じられたときにコミットする必要があります。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that hosts the print job that provides the content of the stream.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Printing.PrintQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ストリームの内容を提供する印刷ジョブをホストします。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The name of the print job that provides the content of the stream.</source>
          <target state="translated">ストリームの内容を提供する印刷ジョブの名前。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to commit data in the <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> when the &lt;xref:System.Printing.PrintQueueStream.Close*&gt; method is called; otherwise,<bpt id="p3">&lt;xref uid="langword_csharp_ false" name=" false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>内のデータをコミットする、 <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>ときに、&lt;xref:System.Printing.PrintQueueStream.Close*&gt;メソッドが呼び出される、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_ false" name=" false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>&lt;/xref:System.Printing.PrintQueueStream.Close*&gt; 。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The settings of the print job.</source>
          <target state="translated">印刷ジョブの設定です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">非同期の書き込み操作を開始します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The buffer from which to write data.</source>
          <target state="translated">元のデータを書き込むバッファー。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The byte offset in the buffer from which to begin writing.</source>
          <target state="translated">バイトの書き込みを開始位置を示すバッファー内のオフセットします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">書き込むバイトの最大数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An asynchronous callback, which is called when the writing operation is complete.</source>
          <target state="translated">書き込み操作の完了時に呼び出される非同期コールバック。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this asynchronous writing request from other requests.</source>
          <target state="translated">この非同期書き込み要求を他の要求と区別するユーザー指定のオブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous write, which might still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;を表す非同期の書き込みは、保留になっている可能性があります&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stream supports reading.</source>
          <target state="translated">ストリームが読み取りをサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if reading is supported; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合読み取りがサポートされています。それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.</source>
          <target state="translated">ストリーム内の新しい位置に読み取り/書き込み位置を移動する、ストリームでは、シークをサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if seeking is supported; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>シークがサポートされている場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stream supports writing.</source>
          <target state="translated">ストリームが書き込みをサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if writing is supported; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>書き込みがサポートされています。 場合、それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.</source>
          <target state="translated">ストリームを閉じるし、ソケットとそれに関連付けられているファイル ハンドルなどのすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources that are used by the <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">によって使用されているアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>し、必要に応じてマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">このメソッドは、&lt;xref:System.Object.Finalize%2A&gt;メソッド&lt;/xref:System.Object.Finalize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the unnamed Boolean parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>に設定された名前のないブール値パラメーターを持つメソッド<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with the unnamed Boolean parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;呼び出す<ph id="ph1">`Dispose`</ph>無名のブール型パラメーターを設定して<ph id="ph2">`false`</ph>です。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When the unnamed Boolean parameter is <ph id="ph1">`true`</ph>, this method releases all resources that are held by any managed objects that this &lt;xref:System.Printing.PrintQueueStream&gt; references.</source>
          <target state="translated">無名のブール型パラメーターがの場合<ph id="ph1">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.Printing.PrintQueueStream&gt;参照。&lt;/xref:System.Printing.PrintQueueStream&gt; 。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose()`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous write operation.</source>
          <target state="translated">非同期の書き込み操作を終了します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>EndWrite must be called exactly once on every &lt;xref:System.IAsyncResult&gt; that is returned from a call to &lt;xref:System.Printing.PrintQueueStream.BeginWrite%2A&gt;.</source>
          <target state="translated">EndWrite は&lt;xref:System.IAsyncResult&gt;&lt;xref:System.Printing.PrintQueueStream.BeginWrite%2A&gt;。&lt;/xref:System.Printing.PrintQueueStream.BeginWrite%2A&gt;への呼び出しから返された&lt;/xref:System.IAsyncResult&gt;ごとに&amp;1; 回だけ呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A reference to the pending asynchronous I/O request.</source>
          <target state="translated">保留中の非同期 I/O 要求への参照。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Enables a <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to attempt to free resources and perform other cleanup operations before the <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is reclaimed by garbage collection.</source>
          <target state="translated">により、 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>リソースを解放し、前に他のクリーンアップ操作を実行しようとする、 <bpt id="p2">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>がガベージ コレクションによって回収されます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">このメソッドは&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;。&lt;/xref:System.Object.Finalize%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A&gt; method.</source>
          <target state="translated">アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの<ph id="ph1">`Finalize`</ph>への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、&lt;xref:System.GC.SuppressFinalize%2A&gt;メソッド&lt;/xref:System.GC.SuppressFinalize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Finalize メソッドおよびデストラクター<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>、<bpt id="p2">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>、および<bpt id="p3">[</bpt>Finalize メソッドをオーバーライドする<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Clears all the buffers for this stream and writes any buffered data to the underlying device.</source>
          <target state="translated">このストリームのすべてのバッファーをクリアし、バッファー内のデータを基になるデバイスに書き込みます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Enables the <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to respond to the packaging progress by handling the <bpt id="p2">&lt;xref href="System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">により、 <bpt id="p1">&lt;xref href="System.Printing.PrintQueueStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>処理によって、パッケージの進行状況に対応する、 <bpt id="p2">&lt;xref href="System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The source of the event.</source>
          <target state="translated">イベントのソース。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The event data.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets the ID number of the print job.</source>
          <target state="translated">印刷ジョブの ID 番号を取得します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; that represents an ID number.</source>
          <target state="translated">&lt;xref:System.Int32&gt;ID 番号を表す&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets the length of the stream in bytes.</source>
          <target state="translated">バイト単位のストリームの長さを取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int64&gt; that represents the length of the stream in bytes.</source>
          <target state="translated">&lt;xref:System.Int64&gt;バイト単位のストリームの長さを表す&lt;/xref:System.Int64&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets the current read/write position in the stream.</source>
          <target state="translated">取得または、ストリームの現在の読み取り/書き込み位置を設定します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int64&gt; that represents the current position in the stream.</source>
          <target state="translated">&lt;xref:System.Int64&gt;ストリーム内の現在位置を表す&lt;/xref:System.Int64&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.</source>
          <target state="translated">ストリームからバイト シーケンスを読み取り、読み取られたバイト数だけストリーム内の読み取り/書き込み位置を進めます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.</source>
          <target state="translated">戻り値である要求されたバイト数よりも少ない場合はバイト数は現在利用できません。または、読み取り/書き込み位置がストリームの末尾にある場合はゼロ (0) に指定できます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When this method returns, <ph id="ph1">`buffer`</ph> contains the specified byte array and the values between <ph id="ph2">`offset`</ph> and (offset + count - 1) are replaced by the bytes that are read from the source.</source>
          <target state="translated">このメソッドが戻るとき<ph id="ph1">`buffer`</ph>指定したバイト配列との間で値を含む<ph id="ph2">`offset`</ph>から (オフセット + 数 - 1) は、ソースから読み取られるバイトに置き換えられます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An array of bytes.</source>
          <target state="translated">バイトの配列。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.</source>
          <target state="translated">ストリームから読み取られるデータの格納を開始するバッファー内の&amp;0; から始まるバイト オフセット。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to be read from the stream.</source>
          <target state="translated">ストリームから読み取られるバイトの最大数。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; that holds the total number of bytes that are read into the buffer.</source>
          <target state="translated">&lt;xref:System.Int32&gt;バッファーに読み取られるバイトの合計数を保持する&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Sets the read/write position within the stream.</source>
          <target state="translated">ストリーム内の読み取り/書き込み位置を設定します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A byte offset that is relative to the origin parameter.</source>
          <target state="translated">元のパラメーターに対応するためのバイト オフセット。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A value of type &lt;xref:System.IO.SeekOrigin&gt; that indicates the reference point that is used to obtain the new position.</source>
          <target state="translated">型の値&lt;xref:System.IO.SeekOrigin&gt;新しい位置を取得するために使用する参照ポイントを示すです&lt;/xref:System.IO.SeekOrigin&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int64&gt; that represents the new read/write position.</source>
          <target state="translated">&lt;xref:System.Int64&gt;新しい読み取り/書き込み位置を表す&lt;/xref:System.Int64&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Sets the length of the stream.</source>
          <target state="translated">ストリームの長さを設定します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A stream must support both writing and seeking for SetLength to work.</source>
          <target state="translated">ストリームには、書き込みとシーク操作 SetLength の両方をサポートする必要があります。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Printing.PrintQueueStream.CanWrite%2A&gt; property to determine whether the current instance supports writing, and use the &lt;xref:System.Printing.PrintQueueStream.CanSeek%2A&gt; property to determine whether seeking is supported.</source>
          <target state="translated">使用して、&lt;xref:System.Printing.PrintQueueStream.CanWrite%2A&gt;プロパティを現在のインスタンスがドキュメントの作成をサポートするかどうかを確認し、使用、&lt;xref:System.Printing.PrintQueueStream.CanSeek%2A&gt;シークがサポートされているかどうかを決定するプロパティ&lt;/xref:System.Printing.PrintQueueStream.CanSeek%2A&gt;&lt;/xref:System.Printing.PrintQueueStream.CanWrite%2A&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The needed length, in bytes, of the current stream.</source>
          <target state="translated">現在のストリームのバイト単位で必要な長さ。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.</source>
          <target state="translated">ストリームにバイトのシーケンスを書き込み、書き込まれるバイト数だけストリーム内の読み取り/書き込み位置を進めます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An array of bytes from which to copy to the stream.</source>
          <target state="translated">ストリームにコピーするバイトの配列。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in the <ph id="ph1">`buffer`</ph> where you want to begin copying bytes to the stream.</source>
          <target state="translated">内の&amp;0; から始まるバイト オフセット、<ph id="ph1">`buffer`</ph>ストリームにバイトのコピーを開始します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The number of bytes to write to the stream.</source>
          <target state="translated">ストリームに書き込むバイト数。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>