<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b7524d9d415d82fd63e272f9700decfeaa2138b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Remoting.MetadataServices.SdlChannelSink.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81f1f05adb0ca07a20933608d59a02dd71b58e7b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2806d3b4176db3a588a9636819c4fc8a3b71453f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the implementation for a server channel sink that generates Web Services Description Language (WSDL) dynamically on the server.</source>
          <target state="translated">サーバーで Web サービス記述言語 (WSDL) を動的に生成するチャネル シンク、サーバーの実装を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The SdlChannelSink is used to create WSDL in situations where the URL ends with the string "?wsdl".</source>
          <target state="translated">URL が文字列で終了する場合に、WSDL を作成する、SdlChannelSink が使用される"? wsdl"です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following table shows the channel configuration properties that can be specified for this channel sink.</source>
          <target state="translated">次の表は、このチャネル シンクに対して指定できる構成プロパティ、チャネルを示します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The first two properties combine to control the WSDL publication of objects published by the application domain.</source>
          <target state="translated">最初の&amp;2; つのプロパティは、アプリケーション ドメインによって発行されたオブジェクトの WSDL パブリケーションが制御を結合します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`false`</ph> is specified for the first property, no WSDL is returned, regardless of the second property.</source>
          <target state="translated">場合<ph id="ph1">`false`</ph>が指定されて、最初のプロパティを WSDL には、2 番目のプロパティに関係なく、返されたはありません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>(The default is <ph id="ph1">`true`</ph>.) Otherwise, the second controls whether the global metadata object URI is permitted to respond.</source>
          <target state="translated">(既定値は<ph id="ph1">`true`</ph>)。それ以外の場合、2 つ目は、グローバルなメタデータ オブジェクトの URI の応答を許可するかどうかを制御します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>(The default is <ph id="ph1">`false`</ph>.)      |Property|Description|   |--------------|-----------------|   |<ph id="ph2">`metadataEnabled`</ph>|A Boolean value that specifies whether to honor requests that end in "?wsdl" if this sink is in the channel sink chain.</source>
          <target state="translated">(既定値は<ph id="ph1">`false`</ph>)。     |プロパティ |説明 |  |--------------|-----------------|  |<ph id="ph2">`metadataEnabled`</ph>|末尾に要求を受け入れるかどうかを指定するブール値"? wsdl"このシンクがチャネル シンク チェーン内にある場合。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The default setting is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">既定の設定は<ph id="ph1">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`false`</ph>, the sink throws an exception in all cases where metadata is requested for any object in the application domain.</source>
          <target state="translated">場合<ph id="ph1">`false`</ph>シンクは、アプリケーション ドメイン内のオブジェクトのメタデータが要求されているすべてのケースで例外をスローします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|   |<ph id="ph1">`remoteApplicationMetadataEnabled`</ph>|A Boolean value that specifies whether to honor requests for the object URI "RemoteApplicationMetadata?wsdl", which returns WSDL that describes all objects that are published by the application domain.</source>
          <target state="translated">このプロパティは、.NET Framework version 1.1、次のプラットフォームでのみサポートされます Windows 98、Windows NT 4.0、Windows Millennium Edition、Windows 2000、Windows XP Home Edition、Windows XP Professional、Windows Server 2003 ファミリです。 |。  |<ph id="ph1">`remoteApplicationMetadataEnabled`</ph>|URI オブジェクトに対する要求を受け入れるかどうかを指定するブール値"RemoteApplicationMetadata? wsdl"をアプリケーション ドメインによって公開されているすべてのオブジェクトを記述する WSDL が返されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`false`</ph>, then any request to "RemoteApplicationMetadata.rem" throws an exception.</source>
          <target state="translated">場合<ph id="ph1">`false`</ph>、"RemoteApplicationMetadata.rem"への要求が例外をスローします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>All other "?wsdl" requests for particular object URIs are honored.</source>
          <target state="translated">他のすべての"? wsdl"特定のオブジェクトの uri に対する要求が受け入れられます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`true`</ph>, the global metadata request is honored.</source>
          <target state="translated">場合<ph id="ph1">`true`</ph>、グローバル メタデータの要求が受け入れられます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The default setting is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定の設定は<ph id="ph1">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|</source>
          <target state="translated">このプロパティは、.NET Framework version 1.1、次のプラットフォームでのみサポートされます Windows 98、Windows NT 4.0、Windows Millennium Edition、Windows 2000、Windows XP Home Edition、Windows XP Professional、Windows Server 2003 ファミリです。 |。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Indicates the channel that will receive the messages serialized by the new instance of <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいインスタンスをシリアル化されたメッセージを受信するチャネルを示す<bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.SdlChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The next sink in the sink chain.</source>
          <target state="translated">シンク チェーン内の次のシンク。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Requests processing from the current sink of the response from a method call that was sent asynchronously.</source>
          <target state="translated">処理が非同期的に送信されたメソッドの呼び出しからの応答の現在のシンクを要求します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A stack of sinks that lead back to the server transport sink.</source>
          <target state="translated">サーバーの転送シンクに戻るまでシンクのスタックです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Information associated with the current sink, generated on the request side, and needed on the response side.</source>
          <target state="translated">情報は、現在のシンクに関連付けられている、要求側で生成されるおよび応答側で必要です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The response message.</source>
          <target state="translated">応答メッセージ。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The headers to add to the return message heading to the client.</source>
          <target state="translated">クライアントに応答メッセージ ヘッダーに追加するヘッダー。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The stream heading back to the transport sink.</source>
          <target state="translated">ストリームの見出しは、転送シンクに戻します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns the &lt;xref:System.IO.Stream&gt; onto which the provided response message is to be serialized.</source>
          <target state="translated">返します、&lt;xref:System.IO.Stream&gt;シリアル化するのには、指定された応答メッセージにします&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The current method is called when a response stream needs to be created.</source>
          <target state="translated">応答ストリームを作成する必要がある場合は、現在のメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A stack of sinks that lead back to the server transport sink.</source>
          <target state="translated">サーバーの転送シンクに戻るまでシンクのスタックです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Information associated with the current sink, generated on the request side, and needed on the response side.</source>
          <target state="translated">情報は、現在のシンクに関連付けられている、要求側で生成されるおよび応答側で必要です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The response message to serialize.</source>
          <target state="translated">シリアル化する応答メッセージ。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The headers to put in the response stream to the client.</source>
          <target state="translated">クライアントへの応答ストリームに記述するヘッダー。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; onto which the provided response message is to be serialized.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;シリアル化するのには、指定された応答メッセージにします&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the next <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the sink chain.</source>
          <target state="translated">次の取得<bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>シンク チェーン内の。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The next <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the sink chain.</source>
          <target state="translated">次<bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.IServerChannelSink"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>シンク チェーン内の。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Requests message processing from the current sink.</source>
          <target state="translated">要求メッセージの現在のシンクから処理します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The proxy's job is to convert a method call that is invoked on it into a message object.</source>
          <target state="translated">プロキシの役割は、メッセージ オブジェクトで呼び出されたメソッドの呼び出しを変換します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The Message object, which implements the &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt; interface, is passed from the client end to the server end by invoking &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt; on message sink objects.</source>
          <target state="translated">実装するメッセージ オブジェクト、&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;インターフェイスでは、クライアント側から呼び出すことによってサーバー側に渡されます&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;メッセージ シンク オブジェクトに対する&lt;/xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;&lt;/xref:System.Runtime.Remoting.Messaging.IMessage&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Message sinks are chained together, which means that every message sink is responsible for calling &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt; on the next message sink after it has performed its work.</source>
          <target state="translated">メッセージのシンクを連結、つまりすべてのメッセージ シンクが通話を担当する&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;シンク上で、[次へ] メッセージの処理が行われた後にします&lt;/xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.</source>
          <target state="translated">たとえば、同期に関連するメッセージ シンクでは、ロックの取得または解放したり、ダウン ストリーム メッセージ シンクに委任可能性があります。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When the formatter channel sink gets a message that needs to be sent over the channel, it calls &lt;xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;, passing the message as a parameter.</source>
          <target state="translated">フォーマッタのチャネル シンクが呼び出して、チャネル経由で送信する必要があるメッセージを取得するときに&lt;xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;、メッセージをパラメーターとして渡す&lt;/xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The formatter sink then creates the transport header array and calls &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt; on the formatter sink.</source>
          <target state="translated">フォーマッタ シンクを作成し、ヘッダー配列のトランスポートと呼び出し&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt;フォーマッタ シンクにします&lt;/xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This call is forwarded down the sink chain, and any sink can create a request stream that is passed back to the formatter sink.</source>
          <target state="translated">この呼び出しは、シンク チェーン転送され、任意のシンクは、フォーマッタ シンクに返される要求のストリームを作成できます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>After this call returns, the message is serialized, &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt; is called on the first chain in the sink chain, and the message is passed to the channel sinks.</source>
          <target state="translated">この後の呼び出しを返します、メッセージをシリアル化すると、&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt;シンク チェーン内の最初のチェーンで呼び出されると、メッセージはチャネル シンクに渡されます&lt;/xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink.</source>
          <target state="translated">チャネル シンクというメッセージが表示、ストリームにデータを書き込む、ヘッダー配列にヘッダーを追加および自体を次のシンクへの呼び出しを転送する前に、シンク スタックに追加することができます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.</source>
          <target state="translated">呼び出しでは、転送シンク チェーンの末尾に達すると、転送シンクは、ヘッダーを送信し、プロセスが逆になっているサーバーにチャネル経由でメッセージをシリアル化します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When the message reaches the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until they reach the formatter sink.</source>
          <target state="translated">メッセージには、サーバー側に達すると、転送シンクのヘッダーを取得し、シリアル化されたストリームからのメッセージと転送シンク チェーンを介してこれらフォーマッタ シンクに到達するまでします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The formatter sink then deserializes the message and forwards it to remoting, where the message is turned into a method call and the server object is called.</source>
          <target state="translated">フォーマッタ シンクは、メッセージを逆シリアル化し、ここで、メッセージがメソッドの呼び出しになっており、サーバー オブジェクトが呼び出されると、リモート処理を転送します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A stack of channel sinks that called the current sink.</source>
          <target state="translated">現在のシンクと呼ばれるチャネルのスタックがシンクします。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The message that contains the request.</source>
          <target state="translated">このメッセージは、要求が含まれています。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The headers that are retrieved from the incoming message from the client.</source>
          <target state="translated">クライアントからの受信メッセージから取得されるヘッダー。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The stream that needs to be processed and passed on to the deserialization sink.</source>
          <target state="translated">処理され、逆シリアル化シンクに渡す必要があるストリーム。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the response message.</source>
          <target state="translated">このメソッドが戻るとき、 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>応答メッセージを保持します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">このパラメーターは初期化せずに渡されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ITransportHeaders"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the headers to add to return message heading to the client.</source>
          <target state="translated">このメソッドが戻るとき、 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ITransportHeaders"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クライアントに返信メッセージに追加するヘッダーを保持します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">このパラメーターは初期化せずに渡されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a &lt;xref:System.IO.Stream&gt; that is heading to the transport sink.</source>
          <target state="translated">このメソッドが戻るとき、&lt;xref:System.IO.Stream&gt;転送シンクに見出しつまり&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">このパラメーターは初期化せずに渡されます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ServerProcessing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> status value that provides information about how the message was processed.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Channels.ServerProcessing"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ステータス値をメッセージの処理方法に関する情報を提供します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Collections.IDictionary&gt; of properties for the current channel sink.</source>
          <target state="translated">取得、&lt;xref:System.Collections.IDictionary&gt;の現在のチャネル シンクのプロパティ&lt;/xref:System.Collections.IDictionary&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.IDictionary&gt; of properties for the current channel sink.</source>
          <target state="translated">A&lt;xref:System.Collections.IDictionary&gt;の現在のチャネル シンクのプロパティ&lt;/xref:System.Collections.IDictionary&gt;。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>