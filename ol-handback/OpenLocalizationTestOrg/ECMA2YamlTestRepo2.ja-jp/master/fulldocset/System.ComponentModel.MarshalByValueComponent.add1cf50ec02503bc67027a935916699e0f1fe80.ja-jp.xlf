<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b963e413235703a0285151334ad096126f40475b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.MarshalByValueComponent.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d38def1e1270fe0c87a8550dc044f44330433483</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f0fe29b5464b388272ab474d6427c236458d22e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and provides the base implementation for remotable components that are marshaled by value (a copy of the serialized object is passed).</source>
          <target state="translated">実装して<bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>し (シリアル化されたオブジェクトのコピーが渡された) 値は、マーシャ リングするリモート化可能コンポーネントの基本実装を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A component can be contained in a container.</source>
          <target state="translated">コンポーネントは、コンテナーに格納できます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For each component in a container, the container creates a site that it uses to manage the component.</source>
          <target state="translated">コンテナー内の各コンポーネントには、コンテナーは、コンポーネントの管理に使用されるサイトを作成します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The component interacts with its container primarily through a container-provided &lt;xref:System.ComponentModel.ISite&gt;, which is a repository of container-specific, per-component information.</source>
          <target state="translated">コンポーネントは、コンテナーで提供されるを通じて、主にコンテナーと対話&lt;xref:System.ComponentModel.ISite&gt;、これは、特定のコンテナー、コンポーネントごとの情報のリポジトリ&lt;/xref:System.ComponentModel.ISite&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A component can be contained in a container.</source>
          <target state="translated">コンポーネントは、コンテナーに格納できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For each component in a container, the container creates a site that it uses to manage the component.</source>
          <target state="translated">コンテナー内の各コンポーネントには、コンテナーは、コンポーネントの管理に使用されるサイトを作成します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The component interacts with its container primarily through a container-provided &lt;xref:System.ComponentModel.ISite&gt;, which is a repository of container-specific, per-component information.</source>
          <target state="translated">コンポーネントは、コンテナーで提供されるを通じて、主にコンテナーと対話&lt;xref:System.ComponentModel.ISite&gt;、これは、特定のコンテナー、コンポーネントごとの情報のリポジトリ&lt;/xref:System.ComponentModel.ISite&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets the container for the component.</source>
          <target state="translated">コンポーネントのコンテナーを取得します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface that represents the component's container, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the component does not have a site.</source>
          <target state="translated">実装するオブジェクト、 <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コンポーネントのコンテナーを表すインターフェイスまたは<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>コンポーネントには、サイトがない場合。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the component is currently in design mode.</source>
          <target state="translated">コンポーネントが現在デザイン モードであるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the component does not have a site, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">かどうか、コンポーネントには、サイトはありません、このメソッドは常<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the component is in design mode; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コンポーネントがデザイン モードである場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">によって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;.</source>
          <target state="translated">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;の使用が終了したときに、Dispose を呼び出す</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; in an unusable state.</source>
          <target state="translated">Dispose メソッドは、&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;使用不可の状態&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; was occupying.</source>
          <target state="translated">Dispose を呼び出した後は、すべての参照を解放する必要があります、&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;ガベージ コレクターがメモリを再利用できるようにする、&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;占有されていた&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;の最後の参照を解放する前に常に呼び出しが破棄。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;オブジェクトの<ph id="ph1">`Finalize`</ph>メソッド&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.ComponentModel.MarshalByValueComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>し、必要に応じてマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび&lt;xref:System.Object.Finalize%2A&gt;メソッド&lt;/xref:System.Object.Finalize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;呼び出す<ph id="ph1">`Dispose`</ph>で<ph id="ph2">`disposing`</ph>'éý'<ph id="ph3">`false`</ph>です。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.MarshalByValueComponent&gt; references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;参照。&lt;/xref:System.ComponentModel.MarshalByValueComponent&gt; 。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose()`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Adds an event handler to listen to the Disposed event on the component.</source>
          <target state="translated">コンポーネントで破棄されたイベントを待機するイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the list of event handlers that are attached to this component.</source>
          <target state="translated">このコンポーネントにアタッチされているイベント ハンドラーの一覧を取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventHandlerList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides the delegates for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventHandlerList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このコンポーネントにデリゲートを提供します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">リソースを解放し、それがガベージ コレクションによって回収される前に、他のクリーンアップ操作を実行しようとするオブジェクトを許可します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the implementer of the &lt;xref:System.IServiceProvider&gt;.</source>
          <target state="translated">&lt;xref:System.IServiceProvider&gt;。&lt;/xref:System.IServiceProvider&gt;の実行者を取得します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information on designer services you can use, see <bpt id="p1">[</bpt>Design-Time Architecture<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">使用できるデザイナーのサービスの詳細については、次を参照してください。<bpt id="p1">[</bpt>デザイン時アーキテクチャ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type of service you want.</source>
          <target state="translated">A&lt;xref:System.Type&gt;サービスの型を表す&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the implementer of the &lt;xref:System.IServiceProvider&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;表す&lt;xref:System.IServiceProvider&gt;。&lt;/xref:System.IServiceProvider&gt;の実行者&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets the site of the component.</source>
          <target state="translated">取得またはコンポーネントのサイトを設定します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A valid value for this property - that is, the value is not <ph id="ph1">`null`</ph>, indicates that the component has been added to a container.</source>
          <target state="translated">有効な値は、このプロパティの値が<ph id="ph1">`null`</ph>コンポーネントがコンテナーに追加されたことを示します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When the value of this property is <ph id="ph1">`null`</ph>, the property indicates that the component is being removed from a container.</source>
          <target state="translated">このプロパティの値が<ph id="ph1">`null`</ph>プロパティは、コンポーネントは、コンテナーから削除されていることを示します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, this property does not remove the component from the container.</source>
          <target state="translated">ただし、このプロパティは、コンテナーからコンポーネントを削除されません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An object implementing the <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface that represents the site of the component.</source>
          <target state="translated">実装するオブジェクト、 <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コンポーネントのサイトを表すインターフェイスです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.String&gt; containing the name of the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if any.</source>
          <target state="translated">返します、&lt;xref:System.String&gt;の名前を含む、 <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、存在する場合&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This method should not be overridden.</source>
          <target state="translated">このメソッドはオーバーライドできません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Component&gt; may or may not have a name.</source>
          <target state="translated">A&lt;xref:System.ComponentModel.Component&gt;可能性がありますまたは名前がない可能性があります&lt;/xref:System.ComponentModel.Component&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.ComponentModel.Component&gt; is given a name, the name is unique among other &lt;xref:System.ComponentModel.Component&gt; objects within its &lt;xref:System.ComponentModel.IContainer&gt;.</source>
          <target state="translated">場合、&lt;xref:System.ComponentModel.Component&gt;は名前を指定するには、名前は他の&lt;xref:System.ComponentModel.Component&gt;その&lt;xref:System.ComponentModel.IContainer&gt;.&lt;/xref:System.ComponentModel.IContainer&gt;内のオブジェクト&lt;/xref:System.ComponentModel.Component&gt;間で一意で&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.ISite&gt; stores the &lt;xref:System.ComponentModel.Component&gt;'s name.</source>
          <target state="translated">&lt;xref:System.ComponentModel.ISite&gt;格納、&lt;xref:System.ComponentModel.Component&gt;の名前&lt;/xref:System.ComponentModel.Component&gt;&lt;/xref:System.ComponentModel.ISite&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Component&gt; can only have a &lt;xref:System.ComponentModel.ISite&gt; if it has been added to an &lt;xref:System.ComponentModel.IContainer&gt; and the &lt;xref:System.ComponentModel.IContainer&gt; assigns an &lt;xref:System.ComponentModel.ISite&gt; to it.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component&gt;には&lt;xref:System.ComponentModel.ISite&gt;&lt;xref:System.ComponentModel.IContainer&gt;&lt;xref:System.ComponentModel.IContainer&gt;割り当て&lt;xref:System.ComponentModel.ISite&gt;を突き止め&lt;/xref:System.ComponentModel.ISite&gt;&lt;/xref:System.ComponentModel.IContainer&gt;、&lt;/xref:System.ComponentModel.IContainer&gt;追加された場合&lt;/xref:System.ComponentModel.ISite&gt;にのみ持つことができます。&lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if any.</source>
          <target state="translated">A&lt;xref:System.String&gt;の名前を含む、 <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>存在する場合、&lt;/xref:System.String&gt; 。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is unnamed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>は名前がありません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>