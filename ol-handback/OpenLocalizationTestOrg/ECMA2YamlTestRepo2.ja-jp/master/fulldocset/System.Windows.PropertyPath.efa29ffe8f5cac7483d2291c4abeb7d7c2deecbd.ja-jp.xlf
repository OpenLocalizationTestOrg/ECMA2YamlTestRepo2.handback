<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2b59314fd7b97bb8d24f8a1bef9aa96abd0eb35</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.PropertyPath.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">faaa48ec1da41d4d296202a444d60da183e474f3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6add39d459bb1aecf2557abb4d497767b9304fb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements a data structure for describing a property as a path below another property, or below an owning type.</source>
          <target state="translated">別のプロパティ、または所有する型の下のパスとして、プロパティを記述するためのデータ構造を実装します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Property paths are used in data binding to objects, and in storyboards and timelines for animations.</source>
          <target state="translated">プロパティ パスは、アニメーション用とストーリー ボードやタイムラインで、オブジェクトへのデータ バインディングに使用されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class contains a string &lt;xref:System.Windows.PropertyPath.Path%2A&gt;, and list of dependency properties that are the &lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt; into the string&lt;xref:System.Windows.PropertyPath.Path%2A&gt;.</source>
          <target state="translated">このクラスには、文字列が含まれています&lt;xref:System.Windows.PropertyPath.Path%2A&gt;、および、 &lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;&lt;xref:System.Windows.PropertyPath.Path%2A&gt;。&lt;/xref:System.Windows.PropertyPath.Path%2A&gt;の文字列に&lt;/xref:System.Windows.PropertyPath.PathParameters%2A&gt;は、依存関係プロパティのリスト&lt;/xref:System.Windows.PropertyPath.Path%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>PropertyPath supports two modes of behavior:       <bpt id="p1">**</bpt>Source mode<ept id="p1">**</ept> describes a path to a property that is used as a source for some other operation.</source>
          <target state="translated">PropertyPath が&amp;2; つの動作モードをサポートしています:<bpt id="p1">**</bpt>ソース モード<ept id="p1">**</ept>他の操作のソースとして使用されるプロパティへのパスをについて説明します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This mode is used by the &lt;xref:System.Windows.Data.Binding&gt; class to support data binding.</source>
          <target state="translated">このモードは使用、&lt;xref:System.Windows.Data.Binding&gt;データ バインディングをサポートするクラス&lt;/xref:System.Windows.Data.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Target mode<ept id="p1">**</ept> describes a path to a property that will be set as a target property.</source>
          <target state="translated"><bpt id="p1">**</bpt>ターゲット モード<ept id="p1">**</ept>対象のプロパティとして設定されるプロパティへのパスをについて説明します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This mode is used by animation in support of storyboard and timeline setters.</source>
          <target state="translated">このモードは、ストーリー ボードおよびタイムラインの setter をサポートするためのアニメーションで使用されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For instance, <ph id="ph1">`Background.Opacity`</ph> is a two-step path.</source>
          <target state="translated">たとえば、 <ph id="ph1">`Background.Opacity`</ph>&amp;2; 段階のパスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This path implies: first, find the <ph id="ph1">`Background`</ph> property of an object, get the value object that the <ph id="ph2">`Background`</ph> property is set to, and then get the value of the <ph id="ph3">`Opacity`</ph> property on that object.</source>
          <target state="translated">このパスは: 最初に、検索、 <ph id="ph1">`Background`</ph> 、オブジェクトのプロパティ オブジェクトを取得する値を<ph id="ph2">`Background`</ph>プロパティに設定されているしの値を取得、<ph id="ph3">`Opacity`</ph>そのオブジェクトのプロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_PropertyPath"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="propertyPath" .../&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_PropertyPath"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>propertyPath<ept id="p3">*</ept>    A string that is evaluated to be either a simple or complex property path.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_PropertyPath"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<ph id="ph1">```   &lt;object property="propertyPath" .../&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_PropertyPath"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## XAML 値<bpt id="p3">*</bpt>propertyPath<ept id="p3">*</ept>単純または複雑なプロパティ パスに評価される文字列。      </target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The syntax for setting a PropertyPath in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> is versatile but complex, and is described in the separate topic <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">PropertyPath を設定するための構文<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>汎用性が複雑では、別のトピックに記載されて<bpt id="p1">[</bpt>PropertyPath 構文は XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.PropertyPath"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.PropertyPath"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This constructor has two completely different usages depending on whether it is being used for a source-mode property path for a binding, or for a target-mode single-step property path for a storyboard target.</source>
          <target state="translated">このコンス トラクターには、バインディング、またはストーリー ボードのターゲットのターゲット モード&amp;1; ステップのプロパティ パスのソース モード プロパティのパスに対して使用されているかどうかに応じて、2 つのまったく異なる用法があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If using this &lt;xref:System.Windows.PropertyPath&gt; in source mode for a binding, <ph id="ph1">`parameter`</ph> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> object model of the object that is being used as the source for a binding.</source>
          <target state="translated">これを使用して場合&lt;xref:System.Windows.PropertyPath&gt;バインディング用のソース モードで<ph id="ph1">`parameter`</ph>はプロパティ名を表す文字列か、「ステップスルー」へのパス内のプロパティを説明する文字列を指定できます、<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>バインディングのソースとして使用されているオブジェクトのオブジェクト モデル&lt;/xref:System.Windows.PropertyPath&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For a binding property path, the character that identifies a "step" is a dot (.).</source>
          <target state="translated">バインディング プロパティのパス"の"ステップを識別する文字は、ドット (.) です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Indexer references (including multiple indexers, and type differentiation) are also supported.</source>
          <target state="translated">インデクサーの参照 (複数のインデクサーと型の区別を含む) はもサポートされます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more details on the syntax of the string as specifically used by the &lt;xref:System.Windows.Data.Binding&gt; object, see &lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">この&lt;xref:System.Windows.Data.Binding&gt;オブジェクトを参照してください&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=fullName&gt;。&lt;/xref:System.Windows.Data.Binding.Path%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Data.Binding&gt;できるだけ具体的に使用する文字列の構文の詳細については</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A property used as a binding source need not be a dependency property.</source>
          <target state="translated">バインディング ソースとして使用されるプロパティの依存関係プロパティではない必要があります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the binding updates two-way, the property referenced must be read-write.</source>
          <target state="translated">双方向のバインドを更新する場合、参照されるプロパティは読み取り/書き込みをする必要があります。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Also note that the binding target does have to be a dependency property.</source>
          <target state="translated">バインディング ターゲットには、依存関係プロパティにも注意してください。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If using this &lt;xref:System.Windows.PropertyPath&gt; in target mode for a single-step path for a storyboard target, <ph id="ph1">`parameter`</ph> is generally provided as type &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">これを使用して場合&lt;xref:System.Windows.PropertyPath&gt;目的のモードで、ストーリー ボードのターゲットの単一ステップ パスの<ph id="ph1">`parameter`</ph> &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;の種類としては、通常指定&lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can also specify a string that is the &lt;xref:System.Windows.DependencyProperty.Name%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyProperty.Name%2A&gt;。&lt;/xref:System.Windows.DependencyProperty.Name%2A&gt;を表す文字列を指定することもできます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Either of these evaluate to the same result, because it is stored internally as a string.</source>
          <target state="translated">これらのいずれかにより、文字列として内部的に保存されているので、結果は同じに評価されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A provided &lt;xref:System.Windows.DependencyProperty&gt; is converted to a string through &lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyProperty&gt; &lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;。&lt;/xref:System.Windows.Markup.DependencyPropertyConverter&gt;を文字列に変換&lt;/xref:System.Windows.DependencyProperty&gt;の指定</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt; supports a qualified naming format for dependency properties, so you can specify a <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept> qualified dependency property name string to the PropertyPath constructor in code.</source>
          <target state="translated">指定できるように、&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;が依存関係プロパティの修飾の名前付け形式をサポートする<bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept>修飾コードで PropertyPath コンス トラクターに依存関係プロパティ名の文字列&lt;/xref:System.Windows.Markup.DependencyPropertyConverter&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The qualified path to the dependency property identifier is a different concept than a complex path.</source>
          <target state="translated">依存関係プロパティの識別子を修飾パスは、複雑なパスとは異なる概念です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A complex-path &lt;xref:System.Windows.PropertyPath&gt; should instead be created with the &lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">複合パス&lt;xref:System.Windows.PropertyPath&gt;で作成する代わりに、&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=fullName&gt;コンス トラクター&lt;/xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.PropertyPath&gt; 。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A property path that either describes a path to a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> property, or a single dependency property.</source>
          <target state="translated">パスを記述するプロパティのパス、<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>プロパティ、または単一の依存関係プロパティです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.PropertyPath"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, with the provided pathing token string and parameters.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.PropertyPath"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、トークン文字列の指定されたパスとパラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This signature is generally only used for target-mode &lt;xref:System.Windows.PropertyPath&gt; usages with complex paths.</source>
          <target state="translated">この署名は通常、に対してのみ使用ターゲット モード&lt;xref:System.Windows.PropertyPath&gt;複合パスを使用します&lt;/xref:System.Windows.PropertyPath&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This constructor supports <ph id="ph1">`params`</ph> for the <ph id="ph2">`pathParameters`</ph> constructor argument.</source>
          <target state="translated">このコンス トラクターは<ph id="ph1">`params`</ph>の<ph id="ph2">`pathParameters`</ph>コンス トラクターの引数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Therefore you can specify the contents of <ph id="ph1">`pathParameters`</ph> as a series of comma-separated constructor arguments that populate the array, rather than needing to dimension an array and then populate it with the <ph id="ph2">`pathParameters`</ph> items.</source>
          <target state="translated">そのための内容を指定できます<ph id="ph1">`pathParameters`</ph>一連のコンマ区切りのコンス トラクター引数を配列の次元し、で設定する必要があるのではなく、配列を設定すると、<ph id="ph2">`pathParameters`</ph>項目。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Each item you specify must be one of the following types: &lt;xref:System.Windows.DependencyProperty&gt;, &lt;xref:System.Reflection.PropertyInfo&gt;, &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.</source>
          <target state="translated">指定する各項目は、次の種類のいずれかを指定する必要があります: &lt;xref:System.Windows.DependencyProperty&gt; &lt;xref:System.Reflection.PropertyInfo&gt; &lt;xref:System.ComponentModel.PropertyDescriptor&gt;&lt;/xref:System.ComponentModel.PropertyDescriptor&gt; &lt;/xref:System.Reflection.PropertyInfo&gt; 、&lt;/xref:System.Windows.DependencyProperty&gt; 。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information on the requirements of the parameters, see &lt;xref:System.Windows.PropertyPath.Path%2A&gt; and &lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;.</source>
          <target state="translated">パラメーターの要件の詳細については、「 &lt;xref:System.Windows.PropertyPath.Path%2A&gt; &lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;。&lt;/xref:System.Windows.PropertyPath.PathParameters%2A&gt;&lt;/xref:System.Windows.PropertyPath.Path%2A&gt;の使用」を参照していますください。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A string that specifies the &lt;xref:System.Windows.PropertyPath.Path*&gt;, in a tokenized format.</source>
          <target state="translated">指定する文字列、 &lt;xref:System.Windows.PropertyPath.Path*&gt;、トークン化された形式&lt;/xref:System.Windows.PropertyPath.Path*&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An array of objects that sets the &lt;xref:System.Windows.PropertyPath.PathParameters*&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.PropertyPath.PathParameters*&gt;。&lt;/xref:System.Windows.PropertyPath.PathParameters*&gt;を設定するオブジェクトの配列</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets the string that describes the path.</source>
          <target state="translated">取得またはパスを表す文字列を設定します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The string that describes the path.</source>
          <target state="translated">パスを説明する文字列。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the list of parameters to use when the path refers to indexed parameters.</source>
          <target state="translated">パスは、インデックス付きのパラメーターを参照するときに使用するパラメーターの一覧を取得します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The properties for a &lt;xref:System.Windows.PropertyPath&gt; are typically established through the constructors.</source>
          <target state="translated">プロパティを&lt;xref:System.Windows.PropertyPath&gt;コンス トラクターを使用して確立通常&lt;/xref:System.Windows.PropertyPath&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For setting PathParameters, the &lt;xref:System.Windows.PropertyPath.%23ctor%2A&gt; constructor is particularly convenient because the <ph id="ph1">`pathParameters`</ph> constructor argument is designated as <ph id="ph2">`params`</ph>, meaning that you do not need to create or dimension an array for construction.</source>
          <target state="translated">PathParameters を設定するため、&lt;xref:System.Windows.PropertyPath.%23ctor%2A&gt;コンス トラクターは、特に便利なので、<ph id="ph1">`pathParameters`</ph>としてコンス トラクターの引数が指定されている<ph id="ph2">`params`</ph>配列を作成するためのディメンションを作成または必要がないことを意味します&lt;/xref:System.Windows.PropertyPath.%23ctor%2A&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You simply specify each member of the array as an additional parameter.</source>
          <target state="translated">追加パラメーターとして、配列の各メンバーを指定するだけです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the final property that is the target is a &lt;xref:System.Windows.Freezable&gt; type, that value will be cloned.</source>
          <target state="translated">最終的なプロパティを対象となっている場合は、&lt;xref:System.Windows.Freezable&gt;型、値を複製することです&lt;/xref:System.Windows.Freezable&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>ストーリー ボードの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The actual evaluation of the property chain is performed by the storyboard animation mechanisms.</source>
          <target state="translated">プロパティのチェーンの実際の評価は、ストーリー ボードのアニメーション メカニズムによって実行されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>At the &lt;xref:System.Windows.PropertyPath&gt; level, no validation is performed to make sure that the steps of the path connect at all.</source>
          <target state="translated">&lt;xref:System.Windows.PropertyPath&gt;レベル、検証は行われません、パスの手順がすべての接続を確認する&lt;/xref:System.Windows.PropertyPath&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For instance, you can construct a property path that has &lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt; as the first step, and &lt;xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=fullName&gt; as the second step.</source>
          <target state="translated">インスタンスを持つプロパティのパスを構築できます&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt;最初の手順として、 &lt;xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=fullName&gt;2 番目の手順として&lt;/xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=fullName&gt;&lt;/xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>But such a property path would fail if actually applied as a target, because the Brush type that fills &lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt; does not have a &lt;xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">このようなプロパティのパスはため、失敗、ターゲットとして実際に適用されている場合、ブラシの種類を送り返す&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt;はありません、&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=fullName&gt;プロパティ&lt;/xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Invalid property paths fail silently.</source>
          <target state="translated">無効なプロパティ パスは、サイレント モードで失敗します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](../Topic/Storyboards%20Overview.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>ストーリー ボードの概要<ept id="p1">](../Topic/Storyboards%20Overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> When you use a &lt;xref:System.Windows.PropertyPath&gt; to describe a property reference in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, as an attribute value, the string that you specify is first handled by a type converter (&lt;xref:System.Windows.PropertyPathConverter&gt;).</source>
          <target state="translated"><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept>を使用する場合、&lt;xref:System.Windows.PropertyPath&gt;プロパティの参照を記述する<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>属性値を指定する文字列が実行する型コンバーターによって処理される最初、(&lt;xref:System.Windows.PropertyPathConverter&gt;).&lt;/xref:System.Windows.PropertyPathConverter&gt; &lt;/xref:System.Windows.PropertyPath&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This type converter then processes the string and based on its syntax will call one of the &lt;xref:System.Windows.PropertyPath&gt; constructor signatures.</source>
          <target state="translated">この型コンバーターは、文字列を処理し、に基づいてその構文は、のいずれかを呼び出しますが、&lt;xref:System.Windows.PropertyPath&gt;コンス トラクター シグネチャ&lt;/xref:System.Windows.PropertyPath&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This indirection through the type converter handling an attribute value is generally how you use &lt;xref:System.Windows.PropertyPath&gt; in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, rather than declaring a &lt;xref:System.Windows.PropertyPath&gt; object element and then applying specific values to attributes such as &lt;xref:System.Windows.PropertyPath.Path%2A&gt; and PathParameters.</source>
          <target state="translated">属性値を処理する型コンバーターをこの間接指定が使用する方法は、通常、&lt;xref:System.Windows.PropertyPath&gt;で<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>、宣言するのではなく、&lt;xref:System.Windows.PropertyPath&gt;オブジェクトの要素などの属性にその特定の値を適用する&lt;xref:System.Windows.PropertyPath.Path%2A&gt;と PathParameters&lt;/xref:System.Windows.PropertyPath.Path%2A&gt; &lt;/xref:System.Windows.PropertyPath&gt; &lt;/xref:System.Windows.PropertyPath&gt; 。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>PropertyPath 構文は XAML<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_PathParameters"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of the &lt;xref:System.Windows.PropertyPath&gt; type are not typically set in a direct <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> syntax.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_PathParameters"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキスト使用状況のメンバー、&lt;xref:System.Windows.PropertyPath&gt;型が、通常、ダイレクトでは設定されていない<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>構文&lt;/xref:System.Windows.PropertyPath&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">「解説」を参照してください。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The parameter list.</source>
          <target state="translated">パラメーターのリスト。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>