<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd2de60957597fc64503ab480c05cdaad433c204</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Text.RegularExpressions.RegexCompilationInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ba722d764fb7f28935ae290d0047183f31718c4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">913e1b9ded78168cfd751f3b1f6aacb961897285</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.</source>
          <target state="translated">スタンドアロンのアセンブリを正規表現のコンパイルに使用される正規表現について説明します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>An array of RegexCompilationInfo objects is passed to the &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method to provide information about each regular expression to be included in the assembly.</source>
          <target state="translated">RegexCompilationInfo オブジェクトの配列が渡される、&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;各正規表現をアセンブリに含まれる情報を提供するメソッド&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Each compiled regular expression that is included in the assembly is represented as a class derived from &lt;xref:System.Text.RegularExpressions.Regex&gt;.</source>
          <target state="translated">アセンブリに含まれているコンパイル済みの各正規表現は、 &lt;xref:System.Text.RegularExpressions.Regex&gt;。&lt;/xref:System.Text.RegularExpressions.Regex&gt;から派生するクラスとして表されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The properties of the RegexCompilationInfo type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.</source>
          <target state="translated">RegexCompilationInfo 型のプロパティは、正規表現のクラス名、完全修飾名 (つまり、その名前空間とその型の名前)、正規表現パターン、(かどうか、正規表現が区別されません) などその他のオプションおよび、正規表現エンジンが一致を検索する必要があります期間で指定されたタイムアウト期間を定義します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can instantiate a RegexCompilationInfo object by calling its overloaded class constructor.</source>
          <target state="translated">クラスのオーバー ロードされたコンス トラクターを呼び出して RegexCompilationInfo オブジェクトをインスタンス化することができます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Text.RegularExpressions.RegexCompilationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains information about a regular expression to be included in an assembly.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Text.RegularExpressions.RegexCompilationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>アセンブリに含まれる正規表現に関する情報を格納するクラス。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Each parameter of the RegexCompilationInfo constructor directly corresponds to a property of the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class.</source>
          <target state="translated">RegexCompilationInfo コンス トラクターの各パラメーターは、&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;クラス&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;のプロパティに直接対応します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Because all properties are read/write, their values can also be assigned directly.</source>
          <target state="translated">すべてのプロパティは読み取り/書き込みであるためは、その値が直接割り当てることもできます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;メソッドには、コンパイルされた正規表現を格納するアセンブリが生成されます&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Therefore, you should not specify &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; as one of the values of <ph id="ph1">`options`</ph>.</source>
          <target state="translated">そのため、指定しないでください&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;の値の&amp;1; つとして<ph id="ph1">`options`</ph>&lt;/xref:System.Text.RegularExpressions.RegexOptions&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`true`</ph>, the compiled regular expression class is given public accessibility.</source>
          <target state="translated">場合<ph id="ph1">`ispublic`</ph>は<ph id="ph2">`true`</ph>、コンパイルされた正規表現クラスは、パブリック アクセシビリティを指定します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>That is, it can be instantiated from code that executes in any assembly.</source>
          <target state="translated">つまり、任意のアセンブリで実行するコードからインスタンス化することができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`false`</ph>, the compiled regular expression class is given <ph id="ph3">`internal`</ph> (in C#) or <ph id="ph4">`Friend`</ph> (in Visual Basic) accessibility.</source>
          <target state="translated">場合<ph id="ph1">`ispublic`</ph>は<ph id="ph2">`false`</ph>、コンパイルされた正規表現クラスが指定された<ph id="ph3">`internal`</ph>(C# の場合) または<ph id="ph4">`Friend`</ph>(Visual Basic) のアクセシビリティ。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</source>
          <target state="translated">つまり、正規表現クラスと同じアセンブリで実行するコードからのみインスタンス化することができます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The regular expression to compile.</source>
          <target state="translated">コンパイルする正規表現。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The regular expression options to use when compiling the regular expression.</source>
          <target state="translated">正規表現をコンパイルするときに使用する正規表現のオプションです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The name of the type that represents the compiled regular expression.</source>
          <target state="translated">コンパイルされた正規表現を表す型の名前です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The namespace to which the new type belongs.</source>
          <target state="translated">新しい型が属する名前空間。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to make the compiled regular expression publicly visible; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コンパイル済みの正規表現をパブリックに表示されるようにするにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pattern&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;pattern&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;fullnamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;fullnamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Text.RegularExpressions.RegexCompilationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains information about a regular expression with a specified time-out value to be included in an assembly.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Text.RegularExpressions.RegexCompilationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>アセンブリに含まれる指定したタイムアウト値を持つ、正規表現に関する情報を格納するクラス。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Each parameter of the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt; constructor directly corresponds to a property of the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class.</source>
          <target state="translated">各パラメーターの&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;直接コンス トラクターは、&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;クラス&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;のプロパティに対応しています&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Because all properties are read/write, their values can also be assigned directly.</source>
          <target state="translated">すべてのプロパティは読み取り/書き込みであるためは、その値が直接割り当てることもできます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;メソッドには、コンパイルされた正規表現を格納するアセンブリが生成されます&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Therefore, you should not specify &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; as one of the values of <ph id="ph1">`options`</ph>.</source>
          <target state="translated">そのため、指定しないでください&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;の値の&amp;1; つとして<ph id="ph1">`options`</ph>&lt;/xref:System.Text.RegularExpressions.RegexOptions&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`true`</ph>, the compiled regular expression class is given public accessibility.</source>
          <target state="translated">場合<ph id="ph1">`ispublic`</ph>は<ph id="ph2">`true`</ph>、コンパイルされた正規表現クラスは、パブリック アクセシビリティを指定します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>That is, it can be instantiated from code that executes in any assembly.</source>
          <target state="translated">つまり、任意のアセンブリで実行するコードからインスタンス化することができます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ispublic`</ph> is <ph id="ph2">`false`</ph>, the compiled regular expression class is given <ph id="ph3">`internal`</ph> (in C#) or <ph id="ph4">`Friend`</ph> (in Visual Basic) accessibility.</source>
          <target state="translated">場合<ph id="ph1">`ispublic`</ph>は<ph id="ph2">`false`</ph>、コンパイルされた正規表現クラスが指定された<ph id="ph3">`internal`</ph>(C# の場合) または<ph id="ph4">`Friend`</ph>(Visual Basic) のアクセシビリティ。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</source>
          <target state="translated">つまり、正規表現クラスと同じアセンブリで実行するコードからのみインスタンス化することができます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`matchTimeout`</ph> parameter defines the default time-out interval for the compiled regular expression.</source>
          <target state="translated"><ph id="ph1">`matchTimeout`</ph>パラメーターは、コンパイルされた正規表現の既定のタイムアウト間隔を定義します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt; exception during its next timing check.</source>
          <target state="translated">この値は概算の操作がタイムアウトになると、正規表現エンジンをスローする前に、コンパイルされた正規表現オブジェクトは&amp;1; つの一致操作を実行する時間を表す、 &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;、次のタイミング チェック中に例外です&lt;/xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For additional information about the time-out value, see the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt; property.</source>
          <target state="translated">タイムアウト値の詳細については、次を参照してください、&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt;プロパティ。&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  We recommend that you always set a default time-out value for a compiled regular expression.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 常にコンパイルされる正規表現の既定のタイムアウト値を設定することをお勧めします。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Consumers of your regular expression library can override that time-out value by passing a &lt;xref:System.TimeSpan&gt; value that represents the new time-out interval to this constructor overload.</source>
          <target state="translated">渡すことによって、正規表現ライブラリのコンシューマーがそのタイムアウト値をオーバーライドできます、&lt;xref:System.TimeSpan&gt;をこのコンス トラクター オーバー ロードに新しいタイムアウト間隔を表す値&lt;/xref:System.TimeSpan&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The regular expression to compile.</source>
          <target state="translated">コンパイルする正規表現。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The regular expression options to use when compiling the regular expression.</source>
          <target state="translated">正規表現をコンパイルするときに使用する正規表現のオプションです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The name of the type that represents the compiled regular expression.</source>
          <target state="translated">コンパイルされた正規表現を表す型の名前です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The namespace to which the new type belongs.</source>
          <target state="translated">新しい型が属する名前空間。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to make the compiled regular expression publicly visible; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コンパイル済みの正規表現をパブリックに表示されるようにするにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The default time-out interval for the regular expression.</source>
          <target state="translated">正規表現の既定のタイムアウト間隔です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph><ph id="ph2">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pattern&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;pattern&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;fullnamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;fullnamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;matchTimeout&lt;/code&gt;</ph> is negative, zero, or greater than approximately 24 days.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;matchTimeout&lt;/code&gt;</ph>負の値、0、または約 24 日より大きい。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the compiled regular expression has public visibility.</source>
          <target state="translated">取得またはコンパイルされた正規表現がパブリックな可視性を持つかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the IsPublic property is <ph id="ph1">`false`</ph>, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class.</source>
          <target state="translated">IsPublic プロパティが場合<ph id="ph1">`false`</ph>、現在のインスタンスで定義された正規表現クラスは、クラスが含まれているアセンブリで実行されているコードでのみインスタンス化できます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>However, because the &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName&gt; method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of <ph id="ph1">`false`</ph>.</source>
          <target state="translated">ただし、ため、&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName&gt;コンパイルされる正規表現のみを含み、追加する追加のコードを許可しないアセンブリを生成するメソッド、通常、このプロパティの値を代入する必要はありません<ph id="ph1">`false`</ph>&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the regular expression has public visibility; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、正規表現があるパブリックな可視性です。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the regular expression's default time-out interval.</source>
          <target state="translated">取得または正規表現の既定のタイムアウト間隔を設定します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The MatchTimeout property defines the default time-out interval for the compiled regular expression.</source>
          <target state="translated">MatchTimeout プロパティでは、コンパイルされた正規表現の既定のタイムアウト間隔を定義します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt; exception during its next timing check.</source>
          <target state="translated">この値は概算の操作がタイムアウトになると、正規表現エンジンをスローする前に、コンパイルされた正規表現は単一の一致操作を実行する時間を表す、 &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;、次のタイミング チェック中に例外です&lt;/xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  We recommend that you always set a default time-out value for a compiled regular expression.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 常にコンパイルされる正規表現の既定のタイムアウト値を設定することをお勧めします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Consumers of your regular expression library can override that time-out value by passing a &lt;xref:System.TimeSpan&gt; value that represents the new time-out interval to the compiled regular expression's class constructor.</source>
          <target state="translated">渡すことによって、正規表現ライブラリのコンシューマーがそのタイムアウト値をオーバーライドできます、&lt;xref:System.TimeSpan&gt;コンパイルされた正規表現のクラスのコンス トラクターへの新しいタイムアウト間隔を表す値&lt;/xref:System.TimeSpan&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can assign a default time-out value to a &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; object in any of the following ways:      -   By calling the &lt;xref:System.AppDomain.SetData%2A?displayProperty=fullName&gt; method and providing the string representation of a &lt;xref:System.TimeSpan&gt; value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</source>
          <target state="translated">既定のタイムアウト値を割り当てることができます、&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;で、次の方法のいずれかのオブジェクト: - を呼び出して、&lt;xref:System.AppDomain.SetData%2A?displayProperty=fullName&gt;メソッドとの文字列表現を提供する、 &lt;xref:System.TimeSpan&gt;"REGEX_DEFAULT_MATCH_TIMEOUT"プロパティの値&lt;/xref:System.TimeSpan&gt;&lt;/xref:System.AppDomain.SetData%2A?displayProperty=fullName&gt;&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-   By calling the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29&gt; constructor and providing a value for the <ph id="ph1">`matchTimeout`</ph> parameter.</source>
          <target state="translated">呼び出して、&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29&gt;コンス トラクターとの値を提供する、<ph id="ph1">`matchTimeout`</ph>パラメーター&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29&gt; 。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-   By setting the value of this property.</source>
          <target state="translated">-によってこのプロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To set a reasonable time-out interval, consider the following factors:      -   The length and complexity of the regular expression pattern.</source>
          <target state="translated">妥当なタイムアウトの間隔を設定するには、次の要因を検討してください:-の長さと複雑さ、正規表現パターンです。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Longer and more complex regular expressions require more time than shorter and simpler ones.</source>
          <target state="translated">時間が長く、複雑な正規表現では、短くてわかりやすいものよりも時間が必要です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-   The expected machine load.</source>
          <target state="translated">予想されるマシン負荷します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Processing takes more time on systems with high CPU and memory utilization.</source>
          <target state="translated">処理では、CPU およびメモリ使用率が高いシステムでより多くの時間がかかります。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default maximum time interval that can elapse in a pattern-matching operation before a &lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt; is thrown, or <ph id="ph1">&amp;lt;</ph>xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> if time-outs are disabled.</source>
          <target state="translated">前に、のパターン マッチング操作で経過できる既定の最大時間間隔、&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;スローされると、または<ph id="ph1">&amp;lt;</ph>xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>タイムアウトが無効になっている場合&lt;/xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the type that represents the compiled regular expression.</source>
          <target state="translated">取得またはコンパイルされた正規表現を表す型の名前を設定します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class is used to define a compiled regular expression, which is represented as a class derived from &lt;xref:System.Text.RegularExpressions.Regex&gt;.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; &lt;xref:System.Text.RegularExpressions.Regex&gt;。&lt;/xref:System.Text.RegularExpressions.Regex&gt;から派生するクラスとして表されますが、コンパイルされた正規表現を定義するクラスを使用&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;する</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The Name property defines the class name of the regular expression type, and the &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt; and Name properties together define its fully qualified name.</source>
          <target state="translated">Name プロパティが、正規表現型のクラス名を定義し、&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;し、名前のプロパティは一緒に、完全修飾名を定義します&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The name of the new type.</source>
          <target state="translated">新しい型の名前です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The value for this property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このプロパティの値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The value for this property is an empty string.</source>
          <target state="translated">このプロパティの値は、空の文字列です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets the namespace to which the new type belongs.</source>
          <target state="translated">取得または新しい型が属する名前空間を設定します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; class is used to define a compiled regular expression, which is represented as a class derived from &lt;xref:System.Text.RegularExpressions.Regex&gt;.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt; &lt;xref:System.Text.RegularExpressions.Regex&gt;。&lt;/xref:System.Text.RegularExpressions.Regex&gt;から派生するクラスとして表されますが、コンパイルされた正規表現を定義するクラスを使用&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;する</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The Namespace property defines the namespace that contains the compiled regular expression type, and the Namespace and &lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt; properties together define its fully qualified name.</source>
          <target state="translated">Namespace プロパティを定義、コンパイルされた正規表現の種類、および、Namespace を含む名前空間と&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;プロパティが同時に、完全修飾名を定義します&lt;/xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A&gt;。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The namespace of the new type.</source>
          <target state="translated">新しい型の名前空間です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The value for this property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このプロパティの値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets or sets the options to use when compiling the regular expression.</source>
          <target state="translated">取得または正規表現をコンパイルするときに使用するオプションを設定します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method generates an assembly that contains compiled regular expressions.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;メソッドには、コンパイルされた正規表現を格納するアセンブリが生成されます&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Therefore, you do not have to specify &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; as one of the values of this property.</source>
          <target state="translated">そのためを指定する必要はいない&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;としてこのプロパティの値のいずれか&lt;/xref:System.Text.RegularExpressions.RegexOptions&gt;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If it is present, the &lt;xref:System.Text.RegularExpressions.RegexOptions&gt; option is ignored.</source>
          <target state="translated">これが存在する場合、&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;オプションは無視されます&lt;/xref:System.Text.RegularExpressions.RegexOptions&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets the regular expression to compile.</source>
          <target state="translated">取得またはコンパイルする正規表現を設定します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The Pattern property can contain any valid regular expression.</source>
          <target state="translated">パターン プロパティは、任意の有効な正規表現を含めることができます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If the value of the Pattern property is not a syntactically correct regular expression pattern, the call to the &lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt; method throws an &lt;xref:System.ArgumentException&gt;.</source>
          <target state="translated">パターンのプロパティの値が正しい構文の正規表現パターンでは、&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;メソッドはスロー &lt;xref:System.ArgumentException&gt;。&lt;/xref:System.ArgumentException&gt;&lt;/xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;への呼び出しではない場合</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The regular expression to compile.</source>
          <target state="translated">コンパイルする正規表現。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The value for this property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このプロパティの値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>