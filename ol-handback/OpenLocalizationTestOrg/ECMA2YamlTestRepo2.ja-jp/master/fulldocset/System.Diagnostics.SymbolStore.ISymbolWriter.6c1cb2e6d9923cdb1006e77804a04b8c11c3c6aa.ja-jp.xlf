<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0103a77356d93f8158426708e8ca0f966229c627</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Diagnostics.SymbolStore.ISymbolWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cf64f25b0a5b015efdd48e8a63f2dae4a85a079</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">147310706fb5b678dfccd385bd659237d07bb07f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a symbol writer for managed code.</source>
          <target state="translated">マネージ コードのシンボル ライターを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ISymbolWriter interface provides methods that define documents, sequence points, lexical scopes, and variables.</source>
          <target state="translated">ISymbolWriter インターフェイスは、ドキュメント、シーケンス ポイント、構文のスコープ、および変数を定義するメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This interface is the managed counterpart of the <ph id="ph2">`ISymUnmanagedWriter`</ph> interface, which is one of the unmanaged symbol store interfaces that provides an alternative way to read and write debug symbol information.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このインターフェイスは、管理対象の<ph id="ph2">`ISymUnmanagedWriter`</ph>インターフェイスで、デバッグ シンボル情報を読み書きする別の方法を提供するアンマネージ シンボル ストアのインターフェイスの&amp;1; つです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Closes <bpt id="p1">&lt;xref href="System.Diagnostics.SymbolStore.ISymbolWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and commits the symbols to the symbol store.</source>
          <target state="translated">閉じる<bpt id="p1">&lt;xref href="System.Diagnostics.SymbolStore.ISymbolWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>シンボルをシンボル ストアにコミットします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>After this call, &lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt; becomes invalid for further updates.</source>
          <target state="translated">この呼び出しの後&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;以降の更新を無効になります&lt;/xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Closes the current method.</source>
          <target state="translated">現在のメソッドを閉じます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>After a method is closed, you cannot define a symbol from within it.</source>
          <target state="translated">メソッドが終了した後は、その内部からシンボルを定義できません。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Closes the most recent namespace.</source>
          <target state="translated">最新の名前空間を閉じます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Closes the current lexical scope.</source>
          <target state="translated">現在の構文のスコープを閉じます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>After a scope is closed, you cannot define a variable from within it.</source>
          <target state="translated">スコープが終了した後は、その内部から変数を定義できません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The points past the last instruction in the scope.</source>
          <target state="translated">過去のスコープ内の最後の命令ポインター。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Defines a source document.</source>
          <target state="translated">ソース ドキュメントを定義します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The URL that identifies the document.</source>
          <target state="translated">ドキュメントを識別する URL です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The document language.</source>
          <target state="translated">ドキュメントの言語。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This parameter can be &lt;xref:System.Guid&gt;.</source>
          <target state="translated">このパラメーターは&lt;xref:System.Guid&gt;。&lt;/xref:System.Guid&gt;を指定できます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The identity of the vendor for the document language.</source>
          <target state="translated">ドキュメントの言語のベンダーの id。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This parameter can be &lt;xref:System.Guid&gt;.</source>
          <target state="translated">このパラメーターは&lt;xref:System.Guid&gt;。&lt;/xref:System.Guid&gt;を指定できます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The type of the document.</source>
          <target state="translated">ドキュメントの種類。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This parameter can be &lt;xref:System.Guid&gt;.</source>
          <target state="translated">このパラメーターは&lt;xref:System.Guid&gt;。&lt;/xref:System.Guid&gt;を指定できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The object that represents the document.</source>
          <target state="translated">ドキュメントを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Defines a field in a type or a global field.</source>
          <target state="translated">型またはグローバル フィールドのフィールドを定義します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The DefineField method defines a single variable that is not within a method by using specified fields in classes, bit fields, and so on.</source>
          <target state="translated">DefineField メソッドでは、クラス、ビット フィールドで指定したフィールドを使用して、メソッド内ではない&amp;1; つの変数を定義します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The metadata type or method token.</source>
          <target state="translated">メタデータ型またはメソッド トークンです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The field name.</source>
          <target state="translated">フィールド名です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the field attributes.</source>
          <target state="translated">フィールドの属性のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The field signature.</source>
          <target state="translated">フィールド シグネチャ。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The address types for <ph id="ph1">`addr1`</ph> and <ph id="ph2">`addr2`</ph>.</source>
          <target state="translated">アドレス型<ph id="ph1">`addr1`</ph>と<ph id="ph2">`addr2`</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The first address for the field specification.</source>
          <target state="translated">フィールド定義の最初のアドレス。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The second address for the field specification.</source>
          <target state="translated">フィールド定義の&amp;2; 番目のアドレス。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The third address for the field specification.</source>
          <target state="translated">フィールドの仕様の&amp;3; 番目のアドレス。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Defines a single global variable.</source>
          <target state="translated">単一のグローバル変数を定義します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The global variable name.</source>
          <target state="translated">グローバル変数の名前。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the global variable attributes.</source>
          <target state="translated">グローバル変数の属性のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The global variable signature.</source>
          <target state="translated">グローバル変数シグネチャ。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The address types for <ph id="ph1">`addr1`</ph>, <ph id="ph2">`addr2`</ph>, and <ph id="ph3">`addr3`</ph>.</source>
          <target state="translated">アドレス型<ph id="ph1">`addr1`</ph>、 <ph id="ph2">`addr2`</ph>、および<ph id="ph3">`addr3`</ph>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first address for the global variable specification.</source>
          <target state="translated">グローバル変数指定の最初のアドレス。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second address for the global variable specification.</source>
          <target state="translated">グローバル変数指定の&amp;2; 番目のアドレス。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The third address for the global variable specification.</source>
          <target state="translated">グローバル変数指定の&amp;3; 番目のアドレス。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Defines a single variable in the current lexical scope.</source>
          <target state="translated">現在の構文のスコープ内には、1 つの変数を定義します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`startOffset`</ph> and <ph id="ph2">`endOffset`</ph> parameters are optional.</source>
          <target state="translated"><ph id="ph1">`startOffset`</ph>と<ph id="ph2">`endOffset`</ph>パラメーターは省略可能です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If their value is zero, they are ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">値が&amp;0; の場合は無視され、変数がスコープ全体で定義されています。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If their value is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">値が&amp;0; 以外の場合は、変数は、現在のスコープのオフセット内にあります。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can call DefineLocalVariable multiple times for a variable of the same name that occurs multiple times in different offset ranges throughout a scope.</source>
          <target state="translated">スコープ全体でさまざまなオフセットの範囲で複数回に発生するのと同じ名前の変数は、DefineLocalVariable を複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>(In this case, start and end offsets must not overlap.)</source>
          <target state="translated">(この場合、開始と終了オフセットは重複できません)。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The local variable name.</source>
          <target state="translated">ローカル変数の名前。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the local variable attributes.</source>
          <target state="translated">ローカル変数の属性のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The local variable signature.</source>
          <target state="translated">ローカル変数シグネチャ。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The address types for <ph id="ph1">`addr1`</ph>, <ph id="ph2">`addr2`</ph>, and <ph id="ph3">`addr3`</ph>.</source>
          <target state="translated">アドレス型<ph id="ph1">`addr1`</ph>、 <ph id="ph2">`addr2`</ph>、および<ph id="ph3">`addr3`</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The first address for the local variable specification.</source>
          <target state="translated">ローカル変数指定の最初のアドレス。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The second address for the local variable specification.</source>
          <target state="translated">ローカル変数指定の&amp;2; 番目のアドレス。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The third address for the local variable specification.</source>
          <target state="translated">ローカル変数指定の&amp;3; 番目のアドレス。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The start offset for the variable.</source>
          <target state="translated">変数の開始オフセット。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If this parameter is zero, it is ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">このパラメーターが&amp;0; の場合は無視され、変数がスコープ全体で定義されています。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the parameter is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">パラメーターが&amp;0; 以外の場合は、変数は、現在のスコープのオフセット内にあります。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The end offset for the variable.</source>
          <target state="translated">変数の終了オフセット。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If this parameter is zero, it is ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">このパラメーターが&amp;0; の場合は無視され、変数がスコープ全体で定義されています。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the parameter is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">パラメーターが&amp;0; 以外の場合は、変数は、現在のスコープのオフセット内にあります。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Defines a single parameter in the current method.</source>
          <target state="translated">現在のメソッドの&amp;1; つのパラメーターを定義します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The type of each parameter is taken from its position within the signature of the method.</source>
          <target state="translated">各パラメーターの型は、メソッドのシグネチャ内の位置から取得されます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If parameters are defined in the metadata for a given method, you do not have to define them again with calls to this method.</source>
          <target state="translated">パラメーターは、特定のメソッドのメタデータで定義されて場合、このメソッドを呼び出すと、それらをもう一度定義するはありません。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Symbol readers need to check for these in the normal metadata first, and then use the symbol store.</source>
          <target state="translated">シンボル リーダーは、最初に、これらは、通常のメタデータで確認し、シンボル ストアを使用する必要があります。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The parameter name.</source>
          <target state="translated">パラメーターの名前。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the parameter attributes.</source>
          <target state="translated">パラメーターの属性のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The parameter signature.</source>
          <target state="translated">パラメーターのシグネチャ。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The address types for <ph id="ph1">`addr1`</ph>, <ph id="ph2">`addr2`</ph>, and <ph id="ph3">`addr3`</ph>.</source>
          <target state="translated">アドレス型<ph id="ph1">`addr1`</ph>、 <ph id="ph2">`addr2`</ph>、および<ph id="ph3">`addr3`</ph>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The first address for the parameter specification.</source>
          <target state="translated">パラメーター指定の最初のアドレス。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The second address for the parameter specification.</source>
          <target state="translated">パラメーター指定の&amp;2; 番目のアドレス。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The third address for the parameter specification.</source>
          <target state="translated">パラメーター指定の&amp;3; 番目のアドレス。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Defines a group of sequence points within the current method.</source>
          <target state="translated">現在のメソッド内のシーケンス ポイントのグループを定義します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Each line and each column defines the start of a statement within a method.</source>
          <target state="translated">各の行および列ごとには、メソッド内のステートメントの開始を定義します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The arrays should be sorted in increasing order of offsets.</source>
          <target state="translated">配列は、オフセットの昇順に並べ替える必要があります。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The offset is always the offset from the start of the method, in bytes.</source>
          <target state="translated">オフセットは、常に、(バイト単位)、メソッドの先頭からのオフセットです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The document object for which the sequence points are being defined.</source>
          <target state="translated">シーケンス ポイントが定義されているドキュメント オブジェクト。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The sequence point offsets measured from the beginning of methods.</source>
          <target state="translated">シーケンス ポイントのオフセットは、メソッドの先頭から測定されます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The document lines for the sequence points.</source>
          <target state="translated">シーケンス ポイント ドキュメント行。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The document positions for the sequence points.</source>
          <target state="translated">シーケンス ポイントのドキュメントの位置。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The document end lines for the sequence points.</source>
          <target state="translated">シーケンス ポイントのドキュメントの最終行。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The document end positions for the sequence points.</source>
          <target state="translated">シーケンス ポイントのドキュメントの終了位置。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Sets the metadata emitter interface to associate with a writer.</source>
          <target state="translated">ライターに関連付けるメタデータ エミッタ インターフェイスを設定します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Initialize also sets the output file name where the debugging symbols are written.</source>
          <target state="translated">セットを初期化もデバッグ シンボルが書き込まれる出力ファイル名。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This method can be called only once and must be called before any other writer methods.</source>
          <target state="translated">このメソッドは、1 回だけ呼び出すことができ、その他のライター メソッドより前に呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The metadata emitter interface.</source>
          <target state="translated">メタデータ エミッタ インターフェイス。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The file name for which the debugging symbols are written.</source>
          <target state="translated">デバッグ シンボルが書き込まれるファイル名。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Some writers require a file name, and others do not.</source>
          <target state="translated">ファイル名が必要なライターとそうでないです。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If a file name is specified for a writer that does not use file names, this parameter is ignored.</source>
          <target state="translated">ファイル名を使用しないライターに対してファイル名を指定すると、このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicates that this is a full rebuild; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> indicates that this is an incremental compilation.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>完全な再構築であることを示します<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>インクリメンタル コンパイルであることを示します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Opens a method to place symbol information into.</source>
          <target state="translated">シンボル情報を配置するためのメソッドが開きます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The specified method becomes the current method for calls to define sequence points, parameters, and lexical scopes.</source>
          <target state="translated">指定されたメソッドでは、シーケンス ポイント、パラメーター、および構文のスコープを定義する呼び出しの現在のメソッドになります。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>There is an implicit lexical scope around the entire method.</source>
          <target state="translated">メソッド全体を囲む暗黙的な構文のスコープがあります。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Reopening a method that has been previously closed erases any previously defined symbols for the method.</source>
          <target state="translated">閉じられているメソッドを再び開くには、メソッドに、以前に定義されたシンボルが消去されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The metadata token for the method to be opened.</source>
          <target state="translated">開かれるメソッドのメタデータ トークン。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Opens a new namespace.</source>
          <target state="translated">新しい名前空間を開きます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Call this method before defining methods or variables that exist within a namespace.</source>
          <target state="translated">メソッドまたは名前空間内に存在する変数を定義する前に、このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Namespaces can be nested.</source>
          <target state="translated">名前空間は、入れ子にすることができます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The name of the new namespace.</source>
          <target state="translated">新しい名前空間の名前。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Opens a new lexical scope in the current method.</source>
          <target state="translated">現在のメソッドでは、新しい構文のスコープを開きます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This scope becomes the new current scope and is pushed onto a stack of scopes.</source>
          <target state="translated">このスコープは、新しい現在のスコープをなり、スコープのスタックにプッシュされます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Scopes must form a hierarchy.</source>
          <target state="translated">スコープは、階層を形成する必要があります。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Siblings are not allowed to overlap.</source>
          <target state="translated">兄弟は、重複は許可されません。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Scope identifiers are valid only in the current method.</source>
          <target state="translated">スコープ識別子は、現在のメソッドでのみ有効です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The offset, in bytes, from the beginning of the method to the first instruction in the lexical scope.</source>
          <target state="translated">構文のスコープ内の最初の命令にメソッドの先頭からのバイト オフセット。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An opaque scope identifier that can be used with &lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange<bpt id="p1">*</bpt>&gt; to define the start and end offsets of a scope at a later time. In this case, the offsets passed to OpenScope and &lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope<ept id="p1">*</ept>&gt; are ignored.</source>
          <target state="translated">使用できる非透過スコープ識別子&lt;&gt; <bpt id="p1">*</bpt>&gt; を後で、スコープの開始と終了オフセットを定義します。この場合、OpenScope に渡したオフセットおよび&lt;&gt; <ept id="p1">*</ept>&gt; は無視されます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A scope identifier is valid only in the current method.</source>
          <target state="translated">スコープ識別子は、現在のメソッドでのみ有効です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Specifies the true start and end of a method within a source file.</source>
          <target state="translated">実際の先頭とソース ファイル内のメソッドの末尾を指定します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Use SetMethodSourceRange to specify the extent of a method, independent of the sequence points that exist within the method.</source>
          <target state="translated">SetMethodSourceRange を使用すると、メソッド、メソッド内に存在するシーケンス ポイントの独立の範囲を指定します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The document that contains the starting position.</source>
          <target state="translated">開始位置を含むドキュメント。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The starting line number.</source>
          <target state="translated">開始行番号。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The starting column.</source>
          <target state="translated">開始列。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The document that contains the ending position.</source>
          <target state="translated">終了位置を含むドキュメント。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The ending line number.</source>
          <target state="translated">終了行番号。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The ending column number.</source>
          <target state="translated">終了列番号。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Defines the offset range for the specified lexical scope.</source>
          <target state="translated">指定した構文のスコープのオフセット範囲を定義します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The identifier of the lexical scope.</source>
          <target state="translated">構文のスコープの識別子です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The byte offset of the beginning of the lexical scope.</source>
          <target state="translated">構文のスコープの先頭のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The byte offset of the end of the lexical scope.</source>
          <target state="translated">構文のスコープの最後のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Defines an attribute when given the attribute name and the attribute value.</source>
          <target state="translated">属性名および属性値を指定するときに、属性を定義します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The SetSymAttribute method is only associated with symbolic information and is not a metadata custom attribute.</source>
          <target state="translated">SetSymAttribute メソッドはのみシンボリック情報に関連付けられているし、メタデータのカスタム属性ではありません。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The metadata token for which the attribute is being defined.</source>
          <target state="translated">属性が定義されているメタデータ トークンです。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The attribute name.</source>
          <target state="translated">属性の名前。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The attribute value.</source>
          <target state="translated">属性の値。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Sets the underlying <bpt id="p1">&lt;xref uid="langword_csharp_ISymUnmanagedWriter" name="ISymUnmanagedWriter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> (the corresponding unmanaged interface) that a managed <bpt id="p2">&lt;xref href="System.Diagnostics.SymbolStore.ISymbolWriter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> uses to emit symbols.</source>
          <target state="translated">基に<bpt id="p1">&lt;xref uid="langword_csharp_ISymUnmanagedWriter" name="ISymUnmanagedWriter" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (インターフェイスで、対応するアンマネージ) をマネージ<bpt id="p2">&lt;xref href="System.Diagnostics.SymbolStore.ISymbolWriter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>を使用してシンボルを生成します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The underlying <ph id="ph1">`ISymUnmanagedWriter`</ph> (the corresponding unmanaged interface) represents a symbol writer for managed code.</source>
          <target state="translated">基になる<ph id="ph1">`ISymUnmanagedWriter`</ph>(対応するアンマネージ インターフェイス) は、マネージ コードのシンボル ライターを表します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The interface provides methods for defining documents, sequence points, lexical scopes, and variables.</source>
          <target state="translated">インターフェイスは、ドキュメント、シーケンス ポイント、構文のスコープ、および変数を定義するためのメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A pointer to code that represents the underlying writer.</source>
          <target state="translated">コードへのポインターでは、基になるライターを表します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Identifies the user-defined method as the entry point for the current module.</source>
          <target state="translated">現在のモジュールのエントリ ポイントとしてユーザー定義メソッドを識別します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This is normally your main method, rather than compiler-generated stubs before the main method.</source>
          <target state="translated">これは通常メイン メソッドの前に、コンパイラによって生成されたスタブではなく、メイン メソッドです。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The metadata token for the method that is the user entry point.</source>
          <target state="translated">ユーザーのエントリであるメソッドのメタデータ トークンをポイントします。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Specifies that the given, fully qualified namespace name is used within the open lexical scope.</source>
          <target state="translated">指定された、完全修飾名前空間の名前が開かれている構文スコープ内で使用されることを指定します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Closing the current scope prevents this scope from using the namespace.</source>
          <target state="translated">現在のスコープを閉じると、このスコープは、名前空間を使用できなくなります。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The namespace remains in use in all scopes that inherit from the current open scope.</source>
          <target state="translated">名前空間は、現在開かれているスコープから継承するすべてのスコープで使用するには残ります。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the namespace.</source>
          <target state="translated">名前空間の完全修飾名。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>