<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cfd1a485c7cd423bac8fc1edeb446bfc906a0ac4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Schema.XmlSchemaComplexType.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">014b46122fe8fd3c452cf63dbb70dd3e9a7be4f2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">702a52072c38fb3df461125f5d44a8c7b43e67e6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element from XML Schema as specified by the World Wide Web Consortium (W3C).</source>
          <target state="translated">表す、 <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> World Wide Web Consortium (W3C) で指定された XML スキーマの要素。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class defines a complex type that determines the set of attributes and content of an element.</source>
          <target state="translated">このクラスは、一連の属性と要素の内容を決定する複合型を定義します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An element can be declared with a type attribute that refers to a <ph id="ph1">`complexType`</ph> element that defines the structure, content, and attributes of that element.</source>
          <target state="translated">参照する型の属性を持つ要素を宣言することができます、<ph id="ph1">`complexType`</ph>構造、コンテンツ、およびその要素の属性を定義する要素。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaComplexType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaComplexType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets the value for the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> component of the complex type.</source>
          <target state="translated">値を取得または設定、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>複合型のコンポーネントです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If this property is not null, the complex type can contain any attributes from the namespaces specified in the &lt;xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;.</source>
          <target state="translated">このプロパティが null でない場合、複合型は&lt;xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;。&lt;/xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;で指定された名前空間からの属性を含めることができます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> component of the complex type.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>複合型のコンポーネントです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets the collection of attributes for the complex type.</source>
          <target state="translated">複合型の属性のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Contains <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttributeGroupRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">含む<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttributeGroupRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the collection of all the complied attributes of this complex type and its base types.</source>
          <target state="translated">この複合型およびその基本型のコンパイル済みのすべての属性のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, a combination of all the attributes from the <ph id="ph1">`Attributes`</ph> property from each type in the hierarchy.</source>
          <target state="translated">たとえばからのすべての属性の組み合わせ、<ph id="ph1">`Attributes`</ph>プロパティを各階層内の型からです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The value of this property is read-only.</source>
          <target state="translated">このプロパティの値は、読み取り専用です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This property has the value after the schema has been successfully compiled to determine the complete attribute set that is allowed in an instance document.</source>
          <target state="translated">このプロパティは、インスタンス ドキュメントで許可されている属性の完全なセットを決定するスキーマが正常にコンパイルされた後に値を持ちます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The collection of all the attributes from this complex type and its base types.</source>
          <target state="translated">この複合型およびその基本型からのすべての属性のコレクションです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_AttributeUses" name="AttributeUses" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">コンパイル後の値、 <bpt id="p1">&lt;xref uid="langword_csharp_AttributeUses" name="AttributeUses" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロパティです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the post-compilation value for <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this complex type and its base type(s).</source>
          <target state="translated">コンパイル後の値を取得<bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>この複合型およびその基本型です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The value of this property is read-only.</source>
          <target state="translated">このプロパティの値は、読み取り専用です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This property has values after the schema has been successfully compiled to determine the complete attribute set of the complex type.</source>
          <target state="translated">このプロパティは、複合型の完全な属性セットを決定するスキーマが正常にコンパイルされた後に値を持ちます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, it might be the <ph id="ph1">`anyAttribute`</ph> element from one of the base types.</source>
          <target state="translated">たとえばである可能性があります、<ph id="ph1">`anyAttribute`</ph>基本型のいずれかの要素。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">コンパイル後の値、 <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要素。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>属性。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Indicates the type of derivation.</source>
          <target state="translated">派生型を示します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This attribute can contain the following values:      |Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`BlockDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph4">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</source>
          <target state="translated">この属性は、次の値を含めることができます |。Enum |説明 |  |----------|-----------------|  |<ph id="ph1">`None`</ph>|によって定義される派生制限を使用して、<ph id="ph2">`BlockDefault`</ph>存在する場合は、スキーマのプロパティです |。  |<ph id="ph3">`Extension`</ph>|この要素は、拡張によって派生した型によって置き換えられることはできません |。  |<ph id="ph4">`Restriction`</ph>|この要素は、制限による派生型によって置き換えられることはできません |。  |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This element cannot be replaced by any type regardless of derivation method.|       The <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not supported by this property.</source>
          <target state="translated">この要素は、派生方法に関係なく任意の型によって置き換えられることはできません |。      <ph id="ph1">`Substitution`</ph>、 <ph id="ph2">`List`</ph>、および<ph id="ph3">`Union`</ph>派生メソッドは、このプロパティによってサポートされていません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute prevents a complex type from being used in the specified type of derivation.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>属性は、複合型が指定した派生型で使用されているがようにします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the value after the type has been compiled to the post-schema-validation information set (infoset).</source>
          <target state="translated">型がスキーマ検証後情報セット (infoset) にコンパイルされた後は、値を取得します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This value indicates how the type is enforced when <bpt id="p1">&lt;xref uid="langword_csharp_xsi:type" name="xsi:type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used in the instance document.</source>
          <target state="translated">この値は、型の適用方法を示すとき<bpt id="p1">&lt;xref uid="langword_csharp_xsi:type" name="xsi:type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>インスタンス ドキュメントで使用します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This value is taken either from the type itself or, if not defined at the type level, it is taken from the <ph id="ph1">`schema`</ph> element.</source>
          <target state="translated">この値が取得されるか、型自体から、または型レベルで定義されていない場合から取得、<ph id="ph1">`schema`</ph>要素。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, if the value is restricted, only the specifically defined type can be used, not types derived from the specifically defined type.</source>
          <target state="translated">たとえば、値が制限されている場合、具体的に定義された型のみを使用できます、具体的には定義済みの型から派生した型ではありません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This attribute can contain the following values:      |Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`BlockDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph4">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</source>
          <target state="translated">この属性は、次の値を含めることができます |。Enum |説明 |  |----------|-----------------|  |<ph id="ph1">`None`</ph>|によって定義される派生制限を使用して、<ph id="ph2">`BlockDefault`</ph>存在する場合は、スキーマのプロパティです |。  |<ph id="ph3">`Extension`</ph>|この要素は、拡張によって派生した型によって置き換えられることはできません |。  |<ph id="ph4">`Restriction`</ph>|この要素は、制限による派生型によって置き換えられることはできません |。  |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This element cannot be replaced by any type regardless of derivation method.|       The <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not supported by this property.</source>
          <target state="translated">この要素は、派生方法に関係なく任意の型によって置き換えられることはできません |。      <ph id="ph1">`Substitution`</ph>、 <ph id="ph2">`List`</ph>、および<ph id="ph3">`Union`</ph>派生メソッドは、このプロパティによってサポートされていません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The post-schema-validated infoset value.</source>
          <target state="translated">ポスト スキーマで検証した infoset 値。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value on the <bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>値を<bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>要素。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the post-compilation <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaContentModel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of this complex type.</source>
          <target state="translated">コンパイル後の設定を取得または<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaContentModel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>この複合型のです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This is mutually exclusive with the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt; property.</source>
          <target state="translated">これで相互に排他的、&lt;xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt;プロパティ&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The content model type that is one of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSimpleContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaComplexContent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">コンテンツ モデルの型の&amp;1; つである、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSimpleContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>または<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaComplexContent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the content model of the complex type which holds the post-compilation value.</source>
          <target state="translated">コンパイル後の値を保持する複合型のコンテンツ モデルを取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This is the content in the post-schema-validation infoset.</source>
          <target state="translated">これは、スキーマ検証後の情報セット内のコンテンツです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`IsMixed`</ph> property is set to <ph id="ph2">`true`</ph> on the <ph id="ph3">`ContentModel`</ph> property that has the type <ph id="ph4">`XmlSchemaComplexContent`</ph>, the value returned is <ph id="ph5">`Mixed`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">`IsMixed`</ph>プロパティに設定されている<ph id="ph2">`true`</ph>上、<ph id="ph3">`ContentModel`</ph>型を持つプロパティ<ph id="ph4">`XmlSchemaComplexContent`</ph>、戻り値は<ph id="ph5">`Mixed`</ph>します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`IsMixed`</ph> property is <ph id="ph2">`false`</ph>, the value is either <ph id="ph3">`Empty`</ph> or <ph id="ph4">`ElementOnly`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">`IsMixed`</ph>プロパティは<ph id="ph2">`false`</ph>、いずれかの値が<ph id="ph3">`Empty`</ph>または<ph id="ph4">`ElementOnly`</ph>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the type on the <ph id="ph1">`ContentModel`</ph> property has the type <ph id="ph2">`XmlSchemaSimpleContent`</ph>, then this value is always <ph id="ph3">`TextOnly`</ph>.</source>
          <target state="translated">場合に、型、<ph id="ph1">`ContentModel`</ph>プロパティ型が含まれます<ph id="ph2">`XmlSchemaSimpleContent`</ph>、この値は常にし、<ph id="ph3">`TextOnly`</ph>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ContentType`</ph> property must have one of the values shown in the following table.</source>
          <target state="translated"><ph id="ph1">`ContentType`</ph>プロパティには、次の表に示すように値のいずれかが必要です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`TextOnly`</ph>|Text-only content.|   |<ph id="ph2">`Empty`</ph>|Empty content.|   |<ph id="ph3">`ElementOnly`</ph>|Element-only content.|   |<ph id="ph4">`Mixed`</ph>|Mixed content model.|</source>
          <target state="translated">|Enum |説明 |  |----------|-----------------|  |<ph id="ph1">`TextOnly`</ph>|テキストだけの内容 |。  |<ph id="ph2">`Empty`</ph>|コンテンツを空にします |。  |<ph id="ph3">`ElementOnly`</ph>|要素のコンテンツのみです |。  |<ph id="ph4">`Mixed`</ph>|混合コンテンツ モデルです |。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the content model for the complex type.</source>
          <target state="translated">複合型のコンテンツ モデルのコンパイル後の値。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets the particle that holds the post-compilation value of the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt; particle.</source>
          <target state="translated">コンパイル後の値を保持する型のパーティクルを取得、&lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;パーティクル&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">`ContentTypeParticle`</ph> is determined after the content models of the most derived types and the base complex type have been resolved according to the rules defined in the W3C XML Schema definition language (XSD) specification.</source>
          <target state="translated">これは、<ph id="ph1">`ContentTypeParticle`</ph>最派生型および基本複合型のコンテンツ モデルが W3C XML スキーマ定義言語 (XSD) の仕様で定義されたルールに従って解決された後に決定されます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The particle for the content type.</source>
          <target state="translated">コンテンツ タイプのパーティクル。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt; particle.</source>
          <target state="translated">コンパイル後の値、&lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;パーティクル&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets the information that determines if the <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element can be used in the instance document.</source>
          <target state="translated">場合を決定する情報取得または設定、 <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要素は、インスタンス ドキュメントで使用できます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, an element cannot use this <bpt id="p2">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element directly and must use a complex type that is derived from this <bpt id="p3">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、要素は、これを使用できません<bpt id="p2">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>要素の直後から派生する複合型を使用する必要があります<bpt id="p3">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>要素。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets information that determines if the complex type has a mixed content model (markup within the content).</source>
          <target state="translated">取得または複合型が混合コンテンツ モデル (コンテンツ内のマークアップ) を持つかどうかを決定する情報を設定します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Indicates if character data can appear between the child elements of this <ph id="ph1">`complexType`</ph>.</source>
          <target state="translated">これの子要素の間で文字データを表示できるかどうかを示します<ph id="ph1">`complexType`</ph>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`simpleContent`</ph> element is a child element, the <ph id="ph2">`mixed`</ph> attribute is not allowed (<ph id="ph3">`false`</ph>).</source>
          <target state="translated">場合、<ph id="ph1">`simpleContent`</ph>要素は、子要素、<ph id="ph2">`mixed`</ph>属性は許可されていません (<ph id="ph3">`false`</ph>)。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`complexContent`</ph> element is a child element, the <ph id="ph2">`mixed`</ph> attribute can be overridden by the <ph id="ph3">`mixed`</ph> attribute on the <ph id="ph4">`complexContent`</ph> element.</source>
          <target state="translated">場合、<ph id="ph1">`complexContent`</ph>要素は、子要素、<ph id="ph2">`mixed`</ph>で属性をオーバーライドすることができます、<ph id="ph3">`mixed`</ph>属性を<ph id="ph4">`complexContent`</ph>要素。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if character data can appear between child elements of this complex type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>、この複合型の子要素の間で文字データが表示される場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets or sets the compositor type as one of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaGroupRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaChoice"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAll"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaSequence"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">として取得または設定のコンポジターの種類のいずれか、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaGroupRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaChoice"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAll"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>、または<bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaSequence"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Particles must be one of the following compositors:      |Element|Description|   |-------------|-----------------|   |<ph id="ph1">`group`</ph>|The complex type contains the elements defined in the referenced group.|   |<ph id="ph2">`sequence`</ph>|The complex type contains the elements defined in the specified sequence.|   |<ph id="ph3">`choice`</ph>|The complex type allows one of the elements specified in the <ph id="ph4">`choice`</ph> element.|   |<ph id="ph5">`all`</ph>|The complex type allows all of the elements specified in the <ph id="ph6">`all`</ph> element to appear once or not at all.|       This is mutually exclusive with the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt; property.</source>
          <target state="translated">パーティクルは、次のコンポジターのいずれかを指定する必要があります: |要素 |説明 |  |-------------|-----------------|  |<ph id="ph1">`group`</ph>|複合型には、参照先のグループで定義された要素が含まれています |。  |<ph id="ph2">`sequence`</ph>|複合型には、指定したシーケンスで定義された要素が含まれています |。  |<ph id="ph3">`choice`</ph>|複合型で指定された要素のいずれかで使用できる、<ph id="ph4">`choice`</ph>要素です |。  |<ph id="ph5">`all`</ph>|複合型ではすべてで指定された要素の<ph id="ph6">`all`</ph>要素を&amp;1; 回またはまったくないを表示します |。      これで相互に排他的、&lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt;プロパティ&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The compositor type.</source>
          <target state="translated">コンポジター型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>