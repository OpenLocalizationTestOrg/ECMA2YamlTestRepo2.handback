<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36a50574a8bc848cb6e403c311e5d38d274bf4ec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Console.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb3608555c45d126696bdaaa6014f3892a678224</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b5c3eba93fc7d55d9c54890396422a3c06add7a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the standard input, output, and error streams for console applications.</source>
          <target state="translated">コンソール アプリケーションの標準入力、出力、およびエラー ストリームを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/console.cs#f907d79481da6ba4)</ept>.</source>
          <target state="translated">この型の .NET Framework ソース コードを参照するを参照してください。、<bpt id="p1">[</bpt>参照ソース<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/console.cs#f907d79481da6ba4)</ept>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Gets or sets the background color of the console.</source>
          <target state="translated">取得またはコンソールの背景色を設定します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A change to the BackgroundColor property affects only output that is written to individual character cells after the background color is changed.</source>
          <target state="translated">BackgroundColor プロパティの変更では、背景色を変更した後に、個々 の文字のセルに書き込まれた出力のみに影響します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To change the background color of the console window as a whole, set the BackgroundColor property and call the &lt;xref:System.Console.Clear%2A&gt; method.</source>
          <target state="translated">全体として、コンソール ウィンドウの背景色を変更するには、BackgroundColor プロパティと呼び出しを設定、&lt;xref:System.Console.Clear%2A&gt;メソッド&lt;/xref:System.Console.Clear%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
          <target state="translated">次の例では、図を提供します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Console.BackgroundColor#1<ept id="p2">](~/add/codesnippet/visualbasic/p-system.console.backgro_1.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Console.BackgroundColor#1<ept id="p4">](~/add/codesnippet/csharp/p-system.console.backgro_1.cs)</ept><ept id="p3">]</ept>       A get operation for a Windows-based application, in which a console does not exist, returns &lt;xref:System.ConsoleColor?displayProperty=fullName&gt;.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.Console.BackgroundColor#1<ept id="p2">](~/add/codesnippet/visualbasic/p-system.console.backgro_1.vb)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Console.BackgroundColor#1<ept id="p4">](~/add/codesnippet/csharp/p-system.console.backgro_1.cs)</ept> <ept id="p3">]</ept>をコンソールが存在しない、Windows ベース アプリケーションの取得操作は&lt;xref:System.ConsoleColor?displayProperty=fullName&gt;.&lt;/xref:System.ConsoleColor?displayProperty=fullName&gt;を返します  </target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A value that specifies the background color of the console; that is, the color that appears behind each character.</source>
          <target state="translated">コンソールの背景色を指定する値各文字の背後に表示される色は、します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The default is black.</source>
          <target state="translated">既定値は黒です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The color specified in a set operation is not a valid member of <bpt id="p1">&lt;xref href="System.ConsoleColor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">設定操作で指定された色は、の有効なメンバーではない<bpt id="p1">&lt;xref href="System.ConsoleColor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Plays the sound of a beep through the console speaker.</source>
          <target state="translated">コンソールのスピーカーからビープ音を出します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>By default, the beep plays at a frequency of 800 hertz for a duration of 200 milliseconds.</source>
          <target state="translated">既定では、200 ミリ秒の期間に 800 ヘルツの頻度でビープ音を再生します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Console.Beep%2A&gt; method is not supported on the 64-bit editions of Windows Vista and Windows XP.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.Console.Beep%2A&gt;メソッドが Windows Vista および Windows XP の 64 ビット エディションでサポートされていません&lt;/xref:System.Console.Beep%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Beep wraps a call to the Windows <bpt id="p1">[</bpt>Beep function<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</source>
          <target state="translated">ビープ音が windows の呼び出しをラップ<bpt id="p1">[</bpt>関数ビープ音を鳴らす<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Whether Beep produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</source>
          <target state="translated">ビープ音が Windows 7 の前に Windows のバージョンで音を鳴らすかどうかは、8254 programmable interval timer チップの有無によって異なります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Starting with Windows 7, it depends on the default sound device.</source>
          <target state="translated">Windows 7 以降では、依存の既定のサウンド デバイス。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</source>
          <target state="translated">このメソッドは、ユーザー インターフェイスへのアクセスを許可しない SQL Server など、サーバーで実行されました。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Plays the sound of a beep of a specified frequency and duration through the console speaker.</source>
          <target state="translated">指定した頻度と時間のコンソールのスピーカーからビープ音を出します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Console.Beep%2A&gt; wraps a call to the Windows <bpt id="p1">[</bpt>Beep function<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</source>
          <target state="translated">&lt;xref:System.Console.Beep%2A&gt;Windows への呼び出しをラップ<bpt id="p1">[</bpt>関数ビープ音を鳴らす<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>です。&lt;/xref:System.Console.Beep%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Whether &lt;xref:System.Console.Beep%2A&gt; produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</source>
          <target state="translated">かどうか&lt;xref:System.Console.Beep%2A&gt;Windows 7 が 8254 programmable interval timer チップの存在に依存する前に、Windows のバージョンで音を鳴らす&lt;/xref:System.Console.Beep%2A&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Starting with Windows 7, it depends on the default sound device.</source>
          <target state="translated">Windows 7 以降では、依存の既定のサウンド デバイス。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Console.Beep%2A&gt; method is not supported on the 64-bit editions of Windows Vista and Windows XP.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.Console.Beep%2A&gt;メソッドが Windows Vista および Windows XP の 64 ビット エディションでサポートされていません&lt;/xref:System.Console.Beep%2A&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The frequency of the beep, ranging from 37 to 32767 hertz.</source>
          <target state="translated">37 から 32767 ヘルツを超えますに至るまで、ビープ音の周波数。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The duration of the beep measured in milliseconds.</source>
          <target state="translated">ビープ音の再生時間は、ミリ秒で指定します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;frequency&lt;/code&gt;</ph> is less than 37 or more than 32767 hertz.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;frequency&lt;/code&gt;</ph>37 未満または 32767 ヘルツを超える。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;duration&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;duration&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This method was executed on a server, such as SQL Server, that does not permit access to the console.</source>
          <target state="translated">このメソッドは、コンソールへのアクセスを許可しない SQL Server など、サーバーで実行されました。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the height of the buffer area.</source>
          <target state="translated">取得またはバッファー領域の高さを設定します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This property defines the number of rows (or lines) stored in the buffer that is accessed by a console mode window.</source>
          <target state="translated">このプロパティは、コンソール モード ウィンドウによってアクセスされるバッファーに格納されている行 (または行) の数を定義します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In contrast, the &lt;xref:System.Console.WindowHeight%2A&gt; property defines the number of rows that are actually displayed in the console window at any particular time.</source>
          <target state="translated">これに対し、&lt;xref:System.Console.WindowHeight%2A&gt;プロパティが実際には、特定の時点に、コンソール ウィンドウに表示されている行の数を定義します&lt;/xref:System.Console.WindowHeight%2A&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the number of rows actually written to the buffer exceeds the number of rows defined by the &lt;xref:System.Console.WindowHeight%2A&gt; property, the window can be scrolled vertically so that it displays a contiguous number of rows that are equal to the &lt;xref:System.Console.WindowHeight%2A&gt; property and are located anywhere in the buffer.</source>
          <target state="translated">バッファーに実際に書き込まれた行の数がによって定義された行の数を超えた場合、&lt;xref:System.Console.WindowHeight%2A&gt;プロパティと等しい行の連続する数値を表示するように、ウィンドウを縦方向にスクロールすることができます、&lt;xref:System.Console.WindowHeight%2A&gt;プロパティでありは、バッファー内の任意の場所にある&lt;/xref:System.Console.WindowHeight%2A&gt;&lt;/xref:System.Console.WindowHeight%2A&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If a set operation decreases the value of the BufferHeight property, the uppermost lines are removed.</source>
          <target state="translated">設定操作では、BufferHeight プロパティの値が低下する場合は、最上位の行が削除されます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, if the number of lines is reduced from 300 to 250, lines 0 through 49 are removed, and the existing lines 50 through 299 become lines 0 through 249.</source>
          <target state="translated">たとえば、250 に 300 から行の数を減らす場合は、0 ~ 49 の行が削除されると、既存の行を 50 ~ 299 になる線の 0 から 249 を実行します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The current height, in rows, of the buffer area.</source>
          <target state="translated">現在の高さのバッファー領域の行。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The value in a set operation is less than or equal to zero.</source>
          <target state="translated">セット操作の値は、0 に等しいまたはそれよりも小さいです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-or-       The value in a set operation is greater than or equal to <ph id="ph1">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- または - セット操作の値がより大きいまたは等しい<ph id="ph1">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-or-       The value in a set operation is less than &lt;xref:System.Console.WindowTop<bpt id="p1">*</bpt>&gt; + &lt;xref:System.Console.WindowHeight<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">- または - セット操作の値がより小さい&lt;&gt; <bpt id="p1">*</bpt>&gt; + &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets or sets the width of the buffer area.</source>
          <target state="translated">取得またはバッファー領域の幅を設定します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If a set operation decreases the value of the BufferWidth property, the rightmost columns are removed.</source>
          <target state="translated">設定操作では、BufferWidth プロパティの値が低下する場合、右端の列は削除されます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, if the number of columns is reduced from 80 to 60, columns 60 through 79 of each row are removed.</source>
          <target state="translated">たとえば、列の数は 60、80 から縮小した場合、60 ~ 79 各行の列は削除されます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The current width, in columns, of the buffer area.</source>
          <target state="translated">現在の幅のバッファー領域の列。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value in a set operation is less than or equal to zero.</source>
          <target state="translated">セット操作の値は、0 に等しいまたはそれよりも小さいです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-or-       The value in a set operation is greater than or equal to <ph id="ph1">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- または - セット操作の値がより大きいまたは等しい<ph id="ph1">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-or-       The value in a set operation is less than &lt;xref:System.Console.WindowLeft<bpt id="p1">*</bpt>&gt; + &lt;xref:System.Console.WindowWidth<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">- または - セット操作の値がより小さい&lt;&gt; <bpt id="p1">*</bpt>&gt; + &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Occurs when the <bpt id="p1">&lt;xref href="System.ConsoleModifiers"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> modifier key (Ctrl) and either the <bpt id="p2">&lt;xref href="System.ConsoleKey"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).</source>
          <target state="translated">発生したときに、 <bpt id="p1">&lt;xref href="System.ConsoleModifiers"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>修飾子キー (Ctrl) と、 <bpt id="p2">&lt;xref href="System.ConsoleKey"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>コンソール キー (C) または中断キーが同時に押された (CTRL + C または Ctrl + break)。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This event is used in conjunction with &lt;xref:System.ConsoleCancelEventHandler?displayProperty=fullName&gt; and &lt;xref:System.ConsoleCancelEventArgs?displayProperty=fullName&gt;.</source>
          <target state="translated">このイベント&lt;xref:System.ConsoleCancelEventHandler?displayProperty=fullName&gt;と&lt;xref:System.ConsoleCancelEventArgs?displayProperty=fullName&gt;。&lt;/xref:System.ConsoleCancelEventArgs?displayProperty=fullName&gt;&lt;/xref:System.ConsoleCancelEventHandler?displayProperty=fullName&gt;と組み合わせて使用します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The CancelKeyPress event enables a console application to intercept the Ctrl+C signal so the event handler can decide whether to continue executing or terminate.</source>
          <target state="translated">CancelKeyPress イベントは、イベント ハンドラーが実行を続行するか終了するかどうかを決定するために CTRL + C シグナルをインターセプトするコンソール アプリケーションを使用します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When the user presses either Ctrl+C or Ctrl+Break, the CancelKeyPress event is fired and the application's &lt;xref:System.ConsoleCancelEventHandler&gt; event handler is executed.</source>
          <target state="translated">CTRL + C または Ctrl + break、イベントが発生した CancelKeyPress およびアプリケーションのキーが押されたとき&lt;xref:System.ConsoleCancelEventHandler&gt;イベント ハンドラーが実行されます&lt;/xref:System.ConsoleCancelEventHandler&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The event handler is passed a &lt;xref:System.ConsoleCancelEventArgs&gt; object that has two useful properties:      -   &lt;xref:System.ConsoleCancelEventArgs.SpecialKey%2A&gt;, which allows you to determine whether the handler was invoked as a result of the user pressing Ctrl+C (the property value is &lt;xref:System.ConsoleSpecialKey?displayProperty=fullName&gt;) or Ctrl+Break (the property value is &lt;xref:System.ConsoleSpecialKey?displayProperty=fullName&gt;).</source>
          <target state="translated">イベント ハンドラーに渡されます、&lt;xref:System.ConsoleCancelEventArgs&gt;を&amp;2; つの便利なプロパティを持つオブジェクト:- &lt;xref:System.ConsoleCancelEventArgs.SpecialKey%2A&gt;、ctrl キーを押しながら C キーを押して、ユーザーの結果として、ハンドラーが呼び出されたかどうかを判断することができます (プロパティの値が&lt;xref:System.ConsoleSpecialKey?displayProperty=fullName&gt;) または Ctrl + Break (プロパティの値が&lt;xref:System.ConsoleSpecialKey?displayProperty=fullName&gt;).&lt;/xref:System.ConsoleSpecialKey?displayProperty=fullName&gt; &lt;/xref:System.ConsoleSpecialKey?displayProperty=fullName&gt; &lt;/xref:System.ConsoleCancelEventArgs.SpecialKey%2A&gt; &lt;/xref:System.ConsoleCancelEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;, which allows you to determine how to your application should respond to the user pressing Ctrl+C or Ctrl+Break.</source>
          <target state="translated">- &lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;、どのアプリケーションにする必要がありますをユーザーには、応答を押すと CTRL + C または Ctrl + break を判断できます&lt;/xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>By default, the &lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt; property is <ph id="ph1">`false`</ph>, which causes program execution to terminate when the event handler exits.</source>
          <target state="translated">既定では、&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;プロパティは<ph id="ph1">`false`</ph>、原因プログラムの終了イベント ハンドラーの終了時に実行する&lt;/xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Changing its property to <ph id="ph1">`true`</ph> specifies that the application should continue to execute.</source>
          <target state="translated">そのプロパティを変更する<ph id="ph1">`true`</ph>を実行するアプリケーションを続行するかを指定します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!TIP]</ph> &gt;  If your application has simple requirements, you can use the &lt;xref:System.Console.TreatControlCAsInput%2A&gt; property instead of this event.</source>
          <target state="translated">&gt; <ph id="ph1">[!TIP]</ph> &gt; アプリに単純な要件がある場合を使えば、&lt;xref:System.Console.TreatControlCAsInput%2A&gt;このイベントではなくプロパティ&lt;/xref:System.Console.TreatControlCAsInput%2A&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>By setting this property to <ph id="ph1">`false`</ph>, you can ensure that your application always exits if the user presses Ctrl+C.</source>
          <target state="translated">このプロパティを設定して<ph id="ph1">`false`</ph>、ctrl キーを押しながら C キーを押した場合に常にアプリケーションを終了することを確認できます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>By setting it to <ph id="ph1">`true`</ph>, you can ensure that pressing Ctrl+C will not terminate the application.</source>
          <target state="translated">設定することによって<ph id="ph1">`true`</ph>、こと、ctrl キーを押しながら C キーを押しても、アプリケーションは終了しないことを確認できます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The event handler for this event is executed on a thread pool thread.</source>
          <target state="translated">このイベントのイベント ハンドラーは、スレッド プールのスレッドで実行されます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.</source>
          <target state="translated">Capslock がオンまたはにするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if CAPS LOCK is turned on; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if CAPS LOCK is turned off.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>CAPSLOCK がオンの場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> CAPSLOCK がになっている場合。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Clears the console buffer and corresponding console window of display information.</source>
          <target state="translated">コンソール バッファーおよび表示情報の対応するコンソール ウィンドウをクリアします。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Using the Clear method is equivalent invoking the MS-DOS <ph id="ph1">`cls`</ph> command in the command prompt window.</source>
          <target state="translated">Clear メソッドは、MS-DOS の呼び出し操作と同じ<ph id="ph1">`cls`</ph>コマンド プロンプト ウィンドウでコマンド。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When the Clear method is called, the cursor automatically scrolls to the top-left corner of the window and the contents of the screen buffer are set to blanks using the current foreground background colors.</source>
          <target state="translated">Clear メソッドが呼び出されると、カーソルがウィンドウの左上隅に自動的にスクロールし、画面バッファーの内容は、現在の前景の背景色を使用した空白に設定されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Attempting to call the Clear method when a console application's output is redirected to a file throws a &lt;xref:System.IO.IOException&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; &lt;xref:System.IO.IOException&gt;.&lt;/xref:System.IO.IOException&gt;をスローするコンソール アプリケーションの出力がファイルにリダイレクトされたときにクリア メソッドを呼び出すしようとしています。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To prevent this, always wrap a call to the Clear method in a <ph id="ph1">`try`</ph>…<ph id="ph2">`catch`</ph></source>
          <target state="translated">これを回避するには、常に Clear メソッドへの呼び出しをラップする<ph id="ph1">`try`</ph>しています.<ph id="ph2">`catch`</ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>block.</source>
          <target state="translated">ブロックです。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets or sets the column position of the cursor within the buffer area.</source>
          <target state="translated">取得またはバッファー領域におけるカーソルの列の位置を設定します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The current position, in columns, of the cursor.</source>
          <target state="translated">列では、カーソルの現在位置。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The value in a set operation is less than zero.</source>
          <target state="translated">セット操作の値が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-or-       The value in a set operation is greater than or equal to &lt;xref:System.Console.BufferWidth*&gt;.</source>
          <target state="translated">- または - セット操作の値がより大きいか等しい&lt;xref:System.Console.BufferWidth*&gt;。&lt;/xref:System.Console.BufferWidth*&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets or sets the height of the cursor within a character cell.</source>
          <target state="translated">取得または文字セル内のカーソルの高さを設定します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The cursor appearance varies, ranging from a horizontal line at the bottom of the cell when the property value is 1, to completely filling the cell when the property value is 100.</source>
          <target state="translated">プロパティの値が完全にいっぱいになるセル プロパティ値が 100 の場合に、1 の場合、セルの下部にある水平行の範囲、カーソルの外観が異なります。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The size of the cursor expressed as a percentage of the height of a character cell.</source>
          <target state="translated">文字セルの高さの割合で表されたカーソルのサイズ。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The property value ranges from 1 to 100.</source>
          <target state="translated">プロパティの値範囲は、1 から 100 にします。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The value specified in a set operation is less than 1 or greater than 100.</source>
          <target state="translated">設定操作で指定された値は、1 より小さいか、100 より大きいです。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets the row position of the cursor within the buffer area.</source>
          <target state="translated">取得またはバッファー領域におけるカーソルの行の位置を設定します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The current position, in rows, of the cursor.</source>
          <target state="translated">行では、カーソルの現在位置。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The value in a set operation is less than zero.</source>
          <target state="translated">セット操作の値が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-or-       The value in a set operation is greater than or equal to &lt;xref:System.Console.BufferHeight*&gt;.</source>
          <target state="translated">- または - セット操作の値がより大きいか等しい&lt;xref:System.Console.BufferHeight*&gt;。&lt;/xref:System.Console.BufferHeight*&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the cursor is visible.</source>
          <target state="translated">取得またはカーソルを表示するかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the cursor is visible; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>カーソルを表示する場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets the standard error output stream.</source>
          <target state="translated">標準エラー出力ストリームを取得します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This standard error stream is set to the console by default.</source>
          <target state="translated">この標準エラー ストリームは、既定では、コンソールに設定されます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>It can be set to another stream with the &lt;xref:System.Console.SetError%2A&gt; method.</source>
          <target state="translated">別のストリームに設定することができます、&lt;xref:System.Console.SetError%2A&gt;メソッド&lt;/xref:System.Console.SetError%2A&gt;。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>After the standard error stream is redirected, it can be reacquired by calling the &lt;xref:System.Console.OpenStandardError%2A&gt; method.</source>
          <target state="translated">標準エラー ストリームをリダイレクトすると、そのことができます再取得するを呼び出して、&lt;xref:System.Console.OpenStandardError%2A&gt;メソッド&lt;/xref:System.Console.OpenStandardError%2A&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In console applications whose informational output is often redirected to a file, the standard error stream available through the Error property can be used to display information to the console even if output is redirected.</source>
          <target state="translated">コンソール アプリケーションでの情報の出力がファイルにリダイレクト多くの場合、情報を表示するコンソールに出力がリダイレクトされる場合でもエラー プロパティを通じて利用可能な標準エラー ストリームを使用できます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The following example displays product tables for 10 numbers at a time starting with 1.</source>
          <target state="translated">次の例では、1 から始まる一度に 10 個の番号の製品テーブルが表示されます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>After every set of 10 numbers, the Error property is used to ask the user whether to display the next set.</source>
          <target state="translated">10 個の番号の各セットの後に、エラー プロパティを使用して、ユーザーに、次のセットを表示するかどうか確認します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If the standard output is redirected to a file, the user is still asked whether the routine should generate the next set of products.</source>
          <target state="translated">場合は、標準の出力は、ファイルにリダイレクトは、ルーチンが次の製品のセットを生成するかどうか、ユーザーがまだ求められます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Console.Error#1<ept id="p2">](~/add/codesnippet/csharp/p-system.console.error_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Console.Error#1<ept id="p4">](~/add/codesnippet/visualbasic/p-system.console.error_1.vb)</ept><ept id="p3">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Console.Error#1<ept id="p2">](~/add/codesnippet/csharp/p-system.console.error_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Console.Error#1  <ept id="p4">](~/add/codesnippet/visualbasic/p-system.console.error_1.vb)</ept><ept id="p3">]</ept></target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; that represents the standard error output stream.</source>
          <target state="translated">A&lt;xref:System.IO.TextWriter&gt;標準エラー出力ストリームを表す&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets or sets the foreground color of the console.</source>
          <target state="translated">取得またはコンソールの前景色を設定します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A get operation for a Windows-based application, in which a console does not exist, returns &lt;xref:System.ConsoleColor&gt;.</source>
          <target state="translated">これは、コンソールに存在しません、Windows ベース アプリケーションの取得操作は&lt;xref:System.ConsoleColor&gt;。&lt;/xref:System.ConsoleColor&gt;を返します</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ConsoleColor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the foreground color of the console; that is, the color of each character that is displayed.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ConsoleColor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コンソールの前景色を指定します。 つまり、各文字の色をが表示されます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The default is gray.</source>
          <target state="translated">既定値は灰色です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The color specified in a set operation is not a valid member of <bpt id="p1">&lt;xref href="System.ConsoleColor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">設定操作で指定された色は、の有効なメンバーではない<bpt id="p1">&lt;xref href="System.ConsoleColor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets the standard input stream.</source>
          <target state="translated">標準入力ストリームを取得します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This property is set to the standard input stream by default.</source>
          <target state="translated">このプロパティが既定で標準入力ストリームに設定します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This property can be set to another stream with the &lt;xref:System.Console.SetIn%2A&gt; method.</source>
          <target state="translated">別のストリームにこのプロパティを設定することができます、&lt;xref:System.Console.SetIn%2A&gt;メソッド&lt;/xref:System.Console.SetIn%2A&gt;。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Read operations on the standard input stream execute synchronously.</source>
          <target state="translated">標準入力ストリームに対して読み取り操作が同期的に実行します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>That is, they block until the specified read operation has completed.</source>
          <target state="translated">つまり、指定された読み取り操作が完了するまで、ブロックします。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This is true even if an asynchronous method, such as &lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;, is called on the &lt;xref:System.IO.TextReader&gt; object returned by the In property.</source>
          <target state="translated">でもは true これは場合、非同期メソッドなど&lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;、で呼び出されると、 &lt;xref:System.IO.TextReader&gt;In プロパティによって返されるオブジェクト。&lt;/xref:System.IO.TextReader&gt; &lt;/xref:System.IO.TextReader.ReadLineAsync%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextReader&gt; that represents the standard input stream.</source>
          <target state="translated">A&lt;xref:System.IO.TextReader&gt;標準入力ストリームを表す&lt;/xref:System.IO.TextReader&gt;。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets or sets the encoding the console uses to read input.</source>
          <target state="translated">取得またはコンソールが入力内容の読み取りに使用するエンコーディングを設定します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The console uses the input encoding to translate keyboard input into a corresponding character.</source>
          <target state="translated">コンソールでは、入力に対応する文字にキーボード入力を変換するエンコーディングを使用します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The input encoding incorporates a code page that maps 256 keyboard character codes to individual characters.</source>
          <target state="translated">入力のエンコードには、256 個のキーボード文字コードを個々 の文字にマップされているコード ページが組み込まれています。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Different code pages include different special characters, typically customized for a language or a group of languages.</source>
          <target state="translated">異なるコード ページには、言語または言語グループ用にカスタマイズされた通常の異なる特殊文字が含まれます。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>, a property get operation may return a cached value instead of the console's current input encoding.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>プロパティの get 操作は、コンソールの現在入力エンコーディングの代わりにキャッシュされた値を返す可能性があります。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This can occur if the value of the InputEncoding property is modified by some means other than an assignment to the InputEncoding property, such as calling the Windows <ph id="ph1">`SetConsoleCP`</ph> function or using the <ph id="ph2">`chcp`</ph> command from a PowerShell script.</source>
          <target state="translated">これは、InputEncoding プロパティの値は、Windows の呼び出しなど、InputEncoding プロパティへの代入以外のいくつかの方法で変更された場合に発生することができます<ph id="ph1">`SetConsoleCP`</ph>関数またはを使用して、 <ph id="ph2">`chcp`</ph> PowerShell スクリプトからコマンド。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The encoding used to read console input.</source>
          <target state="translated">コンソールの入力内容の読み取りに使用するエンコーディングします。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The property value in a set operation is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">セット操作のプロパティの値が<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">この操作の実行中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Your application does not have permission to perform this operation.</source>
          <target state="translated">アプリケーションには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the error output stream has been redirected from the standard error stream.</source>
          <target state="translated">エラー出力ストリームが標準エラー ストリームからリダイレクトされているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if error output is redirected; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合はエラー出力をリダイレクトします。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether input has been redirected from the standard input stream.</source>
          <target state="translated">入力が標準入力ストリームからリダイレクトされているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if input is redirected; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>入力がリダイレクト; 場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether output has been redirected from the standard output stream.</source>
          <target state="translated">出力が標準出力ストリームからリダイレクトされているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if output is redirected; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>出力がリダイレクトされます。 場合、それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a key press is available in the input stream.</source>
          <target state="translated">入力ストリーム内のキーを押すが使用するかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The property value is returned immediately; that is, the KeyAvailable property does not block input until a key press is available.</source>
          <target state="translated">プロパティの値が直ちに返されますつまり、キーを押すが利用可能になるまで、KeyAvailable プロパティは入力をブロックされません。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Use the KeyAvailable property in conjunction with only the &lt;xref:System.Console.ReadKey%2A&gt; method, not the &lt;xref:System.Console.Read%2A&gt; or &lt;xref:System.Console.ReadLine%2A&gt; methods.</source>
          <target state="translated">KeyAvailable プロパティを使用するのみと組み合わせて、&lt;xref:System.Console.ReadKey%2A&gt;メソッド、されません、&lt;xref:System.Console.Read%2A&gt;または&lt;xref:System.Console.ReadLine%2A&gt;メソッド&lt;/xref:System.Console.ReadLine%2A&gt;&lt;/xref:System.Console.Read%2A&gt;&lt;/xref:System.Console.ReadKey%2A&gt;。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a key press is available; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>キーを押すがある場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Standard input is redirected to a file instead of the keyboard.</source>
          <target state="translated">標準入力は、キーボードの代わりにファイルにリダイレクトされます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Gets the largest possible number of console window rows, based on the current font and screen resolution.</source>
          <target state="translated">コンソールの最大数を現在のフォントおよび画面解像度に基づいて、ウィンドウの行を取得します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The height of the largest possible console window measured in rows.</source>
          <target state="translated">行で指定された最大の可能なコンソール ウィンドウの高さ。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets the largest possible number of console window columns, based on the current font and screen resolution.</source>
          <target state="translated">コンソールの最大数を現在のフォントおよび画面解像度に基づいて、ウィンドウの列を取得します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The width of the largest possible console window measured in columns.</source>
          <target state="translated">最大の可能なコンソール ウィンドウの幅は、列で測定されます。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Copies a specified source area of the screen buffer to a specified destination area.</source>
          <target state="translated">指定した領域に、画面バッファーの指定した特定の領域をコピーします。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If the destination and source parameters specify a position located outside the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</source>
          <target state="translated">送信先と送信元のパラメーターは、現在の画面バッファーの境界の外にある位置を指定する場合は、コピー先領域に適合するコピー元領域の部分だけがコピーされます。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>That is, the source area is clipped to fit the current screen buffer.</source>
          <target state="translated">つまり、コピー元領域は、現在の画面バッファーに合わせてクリッピングされます。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The MoveBufferArea method copies the source area to the destination area.</source>
          <target state="translated">MoveBufferArea メソッドは、コピー先領域にコピー元領域をコピーします。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>If the destination area does not intersect the source area, the source area is filled with blanks using the current foreground and background colors.</source>
          <target state="translated">コピー元領域をコピー先領域から共通部分がない場合、コピー元領域は、現在の前景色と背景色を使用して空白で埋められます。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Otherwise, the intersected portion of the source area is not filled.</source>
          <target state="translated">それ以外の場合、コピー元領域の交差部分が指定されていません。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The leftmost column of the source area.</source>
          <target state="translated">コピー元領域の左端の列です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The topmost row of the source area.</source>
          <target state="translated">コピー元領域の最上行。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The number of columns in the source area.</source>
          <target state="translated">コピー元領域内の列の数。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The number of rows in the source area.</source>
          <target state="translated">コピー元領域内の行の数。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The leftmost column of the destination area.</source>
          <target state="translated">コピー先領域の左端の列です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The topmost row of the destination area.</source>
          <target state="translated">コピー先領域の最上行。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>One or more of the parameters is less than zero.</source>
          <target state="translated">1 つまたは複数のパラメーターが&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceLeft</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">targetLeft</ph><ept id="p2">&lt;/code&gt;</ept> is greater than or equal to &lt;xref:System.Console.BufferWidth<bpt id="p3">*</bpt>&gt;.       -or-       <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">sourceTop</ph><ept id="p4">&lt;/code&gt;</ept> or <bpt id="p5">&lt;code&gt;</bpt><ph id="ph4">targetTop</ph><ept id="p5">&lt;/code&gt;</ept> is greater than or equal to &lt;xref:System.Console.BufferHeight<ept id="p3">*</ept>&gt;.</source>
          <target state="translated">-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceLeft</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">targetLeft</ph><ept id="p2">&lt;/code&gt;</ept> is greater than or equal to &lt;&gt;<bpt id="p3">*</bpt>&gt;.      -or-       <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">sourceTop</ph><ept id="p4">&lt;/code&gt;</ept> or <bpt id="p5">&lt;code&gt;</bpt><ph id="ph4">targetTop</ph><ept id="p5">&lt;/code&gt;</ept> is greater than or equal to &lt;&gt;<ept id="p3">*</ept>&gt;.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceTop</ph><ept id="p1">&lt;/code&gt;</ept><ph id="ph2"> + </ph><bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">sourceHeight</ph><ept id="p2">&lt;/code&gt;</ept> is greater than or equal to &lt;xref:System.Console.BufferHeight<bpt id="p3">*</bpt>&gt;.       -or-       <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">sourceLeft</ph><ept id="p4">&lt;/code&gt;</ept><ph id="ph5"> + </ph><bpt id="p5">&lt;code&gt;</bpt><ph id="ph6">sourceWidth</ph><ept id="p5">&lt;/code&gt;</ept> is greater than or equal to &lt;xref:System.Console.BufferWidth<ept id="p3">*</ept>&gt;.</source>
          <target state="translated">-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceTop</ph><ept id="p1">&lt;/code&gt;</ept><ph id="ph2"> + </ph><bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">sourceHeight</ph><ept id="p2">&lt;/code&gt;</ept> is greater than or equal to &lt;&gt;<bpt id="p3">*</bpt>&gt;.      -or-       <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">sourceLeft</ph><ept id="p4">&lt;/code&gt;</ept><ph id="ph5"> + </ph><bpt id="p5">&lt;code&gt;</bpt><ph id="ph6">sourceWidth</ph><ept id="p5">&lt;/code&gt;</ept> is greater than or equal to &lt;&gt;<ept id="p3">*</ept>&gt;.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Copies a specified source area of the screen buffer to a specified destination area.</source>
          <target state="translated">指定した領域に、画面バッファーの指定した特定の領域をコピーします。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If the destination and source parameters specify a position located beyond the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</source>
          <target state="translated">送信先と送信元のパラメーターは、現在の画面バッファーの境界を越える位置を指定する場合は、コピー先領域に適合するコピー元領域の部分のみがコピーされます。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>That is, the source area is clipped to fit the current screen buffer.</source>
          <target state="translated">つまり、コピー元領域は、現在の画面バッファーに合わせてクリッピングされます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Console.MoveBufferArea%2A&gt; method copies the source area to the destination area.</source>
          <target state="translated">&lt;xref:System.Console.MoveBufferArea%2A&gt;メソッドは、コピー先領域にコピー元領域をコピーします&lt;/xref:System.Console.MoveBufferArea%2A&gt;。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>If the destination area does not intersect the source area, the source area is filled with the character specified by <ph id="ph1">`sourceChar`</ph>, using the colors specified by <ph id="ph2">`sourceForeColor`</ph> and <ph id="ph3">`sourceBackColor`</ph>.</source>
          <target state="translated">コピー元領域をコピー先領域から共通部分がない場合で指定された文字でコピー元領域が塗りつぶされます。 <ph id="ph1">`sourceChar`</ph>、で指定された色を使用して<ph id="ph2">`sourceForeColor`</ph>と<ph id="ph3">`sourceBackColor`</ph>です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Otherwise, the intersected portion of the source area is not filled.</source>
          <target state="translated">それ以外の場合、コピー元領域の交差部分が指定されていません。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Console.MoveBufferArea%2A&gt; method performs no operation if <ph id="ph1">`sourceWidth`</ph> or <ph id="ph2">`sourceHeight`</ph> is zero.</source>
          <target state="translated">&lt;xref:System.Console.MoveBufferArea%2A&gt;メソッド操作も行いません場合<ph id="ph1">`sourceWidth`</ph>または<ph id="ph2">`sourceHeight`</ph>ゼロします&lt;/xref:System.Console.MoveBufferArea%2A&gt;。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The leftmost column of the source area.</source>
          <target state="translated">コピー元領域の左端の列です。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The topmost row of the source area.</source>
          <target state="translated">コピー元領域の最上行。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The number of columns in the source area.</source>
          <target state="translated">コピー元領域内の列の数。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The number of rows in the source area.</source>
          <target state="translated">コピー元領域内の行の数。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The leftmost column of the destination area.</source>
          <target state="translated">コピー先領域の左端の列です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The topmost row of the destination area.</source>
          <target state="translated">コピー先領域の最上行。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The character used to fill the source area.</source>
          <target state="translated">コピー元領域を埋めるために使用する文字。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The foreground color used to fill the source area.</source>
          <target state="translated">コピー元領域を埋めるために使用する前景色です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The background color used to fill the source area.</source>
          <target state="translated">コピー元領域を埋めるために使用する背景色です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>One or more of the parameters is less than zero.</source>
          <target state="translated">1 つまたは複数のパラメーターが&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceLeft</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">targetLeft</ph><ept id="p2">&lt;/code&gt;</ept> is greater than or equal to &lt;xref:System.Console.BufferWidth<bpt id="p3">*</bpt>&gt;.       -or-       <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">sourceTop</ph><ept id="p4">&lt;/code&gt;</ept> or <bpt id="p5">&lt;code&gt;</bpt><ph id="ph4">targetTop</ph><ept id="p5">&lt;/code&gt;</ept> is greater than or equal to &lt;xref:System.Console.BufferHeight<ept id="p3">*</ept>&gt;.</source>
          <target state="translated">-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceLeft</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">targetLeft</ph><ept id="p2">&lt;/code&gt;</ept> is greater than or equal to &lt;&gt;<bpt id="p3">*</bpt>&gt;.      -or-       <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">sourceTop</ph><ept id="p4">&lt;/code&gt;</ept> or <bpt id="p5">&lt;code&gt;</bpt><ph id="ph4">targetTop</ph><ept id="p5">&lt;/code&gt;</ept> is greater than or equal to &lt;&gt;<ept id="p3">*</ept>&gt;.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceTop</ph><ept id="p1">&lt;/code&gt;</ept><ph id="ph2"> + </ph><bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">sourceHeight</ph><ept id="p2">&lt;/code&gt;</ept> is greater than or equal to &lt;xref:System.Console.BufferHeight<bpt id="p3">*</bpt>&gt;.       -or-       <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">sourceLeft</ph><ept id="p4">&lt;/code&gt;</ept><ph id="ph5"> + </ph><bpt id="p5">&lt;code&gt;</bpt><ph id="ph6">sourceWidth</ph><ept id="p5">&lt;/code&gt;</ept> is greater than or equal to &lt;xref:System.Console.BufferWidth<ept id="p3">*</ept>&gt;.</source>
          <target state="translated">-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceTop</ph><ept id="p1">&lt;/code&gt;</ept><ph id="ph2"> + </ph><bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">sourceHeight</ph><ept id="p2">&lt;/code&gt;</ept> is greater than or equal to &lt;&gt;<bpt id="p3">*</bpt>&gt;.      -or-       <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">sourceLeft</ph><ept id="p4">&lt;/code&gt;</ept><ph id="ph5"> + </ph><bpt id="p5">&lt;code&gt;</bpt><ph id="ph6">sourceWidth</ph><ept id="p5">&lt;/code&gt;</ept> is greater than or equal to &lt;&gt;<ept id="p3">*</ept>&gt;.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>One or both of the color parameters is not a member of the <bpt id="p1">&lt;xref href="System.ConsoleColor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">色パラメーターの一方または両方のメンバーではない、 <bpt id="p1">&lt;xref href="System.ConsoleColor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.</source>
          <target state="translated">Numlock がオンまたはにするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if NUM LOCK is turned on; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if NUM LOCK is turned off.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>NUMLOCK がオンの場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> NUMLOCK がになっている場合。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Acquires the standard error stream.</source>
          <target state="translated">標準エラー ストリームを取得します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This method can be used to reacquire the standard error stream after it has been changed by the &lt;xref:System.Console.SetError%2A&gt; method.</source>
          <target state="translated">このメソッドは、によって変更された後に標準エラー ストリームを再取得に使用できます、&lt;xref:System.Console.SetError%2A&gt;メソッド&lt;/xref:System.Console.SetError%2A&gt;。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The standard error stream.</source>
          <target state="translated">標準エラー ストリーム。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Acquires the standard error stream, which is set to a specified buffer size.</source>
          <target state="translated">指定したバッファー サイズに設定されている標準エラー ストリームを取得します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This method can be used to reacquire the standard error stream after it has been changed by the &lt;xref:System.Console.SetError%2A&gt; method.</source>
          <target state="translated">このメソッドは、によって変更された後に標準エラー ストリームを再取得に使用できます、&lt;xref:System.Console.SetError%2A&gt;メソッド&lt;/xref:System.Console.SetError%2A&gt;。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The internal stream buffer size.</source>
          <target state="translated">内部ストリーム バッファー サイズ。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The standard error stream.</source>
          <target state="translated">標準エラー ストリーム。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>0 に等しいまたはそれよりも未満です。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Acquires the standard input stream.</source>
          <target state="translated">標準入力ストリームを取得します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>This method can be used to reacquire the standard input stream after it has been changed by the &lt;xref:System.Console.SetIn%2A&gt; method.</source>
          <target state="translated">このメソッドは、によって変更された後は、標準入力ストリームを再取得に使用できます、&lt;xref:System.Console.SetIn%2A&gt;メソッド&lt;/xref:System.Console.SetIn%2A&gt;。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The standard input stream.</source>
          <target state="translated">標準入力ストリーム。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Acquires the standard input stream, which is set to a specified buffer size.</source>
          <target state="translated">指定したバッファー サイズに設定された標準入力ストリームを取得します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the &lt;xref:System.Console.SetIn%2A&gt; method.</source>
          <target state="translated">このメソッドは、によって変更された後は、標準出力ストリームを再取得に使用できます、&lt;xref:System.Console.SetIn%2A&gt;メソッド&lt;/xref:System.Console.SetIn%2A&gt;。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The internal stream buffer size.</source>
          <target state="translated">内部ストリーム バッファー サイズ。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The standard input stream.</source>
          <target state="translated">標準入力ストリーム。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>0 に等しいまたはそれよりも未満です。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Acquires the standard output stream.</source>
          <target state="translated">標準出力ストリームを取得します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the &lt;xref:System.Console.SetOut%2A&gt; method.</source>
          <target state="translated">このメソッドは、によって変更された後は、標準出力ストリームを再取得に使用できます、&lt;xref:System.Console.SetOut%2A&gt;メソッド&lt;/xref:System.Console.SetOut%2A&gt;。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The standard output stream.</source>
          <target state="translated">標準出力ストリーム。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Acquires the standard output stream, which is set to a specified buffer size.</source>
          <target state="translated">指定したバッファー サイズに設定されている標準出力ストリームを取得します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the &lt;xref:System.Console.SetOut%2A&gt; method.</source>
          <target state="translated">このメソッドは、によって変更された後は、標準出力ストリームを再取得に使用できます、&lt;xref:System.Console.SetOut%2A&gt;メソッド&lt;/xref:System.Console.SetOut%2A&gt;。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The internal stream buffer size.</source>
          <target state="translated">内部ストリーム バッファー サイズ。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The standard output stream.</source>
          <target state="translated">標準出力ストリーム。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>0 に等しいまたはそれよりも未満です。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Gets the standard output stream.</source>
          <target state="translated">標準出力ストリームを取得します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This property is set to the standard output stream by default.</source>
          <target state="translated">このプロパティが既定では標準出力ストリームに設定します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>This property can be set to another stream with the &lt;xref:System.Console.SetOut%2A&gt; method.</source>
          <target state="translated">別のストリームにこのプロパティを設定することができます、&lt;xref:System.Console.SetOut%2A&gt;メソッド&lt;/xref:System.Console.SetOut%2A&gt;。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Note that calls to <ph id="ph1">`Console.Out.WriteLine`</ph> methods are equivalent to calls to the corresponding &lt;xref:System.Console.WriteLine%2A&gt; methods.</source>
          <target state="translated">呼び出す<ph id="ph1">`Console.Out.WriteLine`</ph>メソッドは、対応する呼び出しに相当する&lt;xref:System.Console.WriteLine%2A&gt;メソッド&lt;/xref:System.Console.WriteLine%2A&gt;。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; that represents the standard output stream.</source>
          <target state="translated">A&lt;xref:System.IO.TextWriter&gt;標準出力ストリームを表す&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Gets or sets the encoding the console uses to write output.</source>
          <target state="translated">取得またはコンソールが出力を書き込むために使用するエンコーディングを設定します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The console uses the output encoding to translate characters written by an application into corresponding console display characters.</source>
          <target state="translated">コンソールは、出力のエンコードを使用に対応する文字のコンソール表示にアプリケーションによって書き込まれた文字を変換します。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The default code page that the console uses is determined by the system locale.</source>
          <target state="translated">コンソールを使用する既定のコード ページは、システムのロケールによって決まります。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>, a property get operation may return a cached value instead of the console's current output encoding.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>プロパティの get 操作は、現在の出力エンコードをコンソールの代わりにキャッシュされた値を返す可能性があります。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This can occur if the value of the OutputEncoding property is modified by some means other than an assignment to the OutputEncoding property, such as calling the Windows <ph id="ph1">`SetConsoleOutputCP`</ph> function.</source>
          <target state="translated">これは、OutputEncoding プロパティの値は、Windows の呼び出しなど、OutputEncoding プロパティへの代入以外のいくつかの方法で変更された場合に発生することができます<ph id="ph1">`SetConsoleOutputCP`</ph>関数。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The encoding used to write console output.</source>
          <target state="translated">コンソール出力の書き込みに使用するエンコーディングします。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The property value in a set operation is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">セット操作のプロパティの値が<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">この操作の実行中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Your application does not have permission to perform this operation.</source>
          <target state="translated">アプリケーションには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Reads the next character from the standard input stream.</source>
          <target state="translated">標準入力ストリームから次の文字を読み取ります。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The Read method blocks its return while you type input characters; it terminates when you press the &lt;xref:System.ConsoleKey&gt; key.</source>
          <target state="translated">入力文字を入力する場合に、Read メソッドは、戻り値をブロックします。キーを押すと終了、&lt;xref:System.ConsoleKey&gt;キー&lt;/xref:System.ConsoleKey&gt; 。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Pressing Enter appends a platform-dependent line termination sequence to your input (for example, Windows appends a carriage return-linefeed sequence).</source>
          <target state="translated">プラットフォームに依存する行の終了シーケンスを入力に追加 Enter キーを押して (たとえば、Windows がキャリッジ リターンとライン フィードのシーケンスを追加する)。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Subsequent calls to the Read method retrieve your input one character at a time.</source>
          <target state="translated">Read メソッドへの後続の呼び出しは、一度に、入力の&amp;1; つの文字を取得します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>After the final character is retrieved, Read blocks its return again and the cycle repeats.</source>
          <target state="translated">読み取りが、戻り値をブロックの最後の文字を取得すると、後にもう一度とサイクルを繰り返します。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Console.ReadLine%2A&gt; method, or the &lt;xref:System.Console.KeyAvailable%2A&gt; property and &lt;xref:System.Console.ReadKey%2A&gt; method are preferable to using the Read method.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;、&lt;xref:System.Console.ReadLine%2A&gt;メソッド、または&lt;xref:System.Console.KeyAvailable%2A&gt;プロパティおよび&lt;xref:System.Console.ReadKey%2A&gt;メソッドは、Read メソッドを使用することをお勧めします&lt;/xref:System.Console.ReadKey%2A&gt;&lt;/xref:System.Console.KeyAvailable%2A&gt;&lt;/xref:System.Console.ReadLine%2A&gt;。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Note that the method does not return -1 unless you perform one of the following actions:      -   Simultaneously press the &lt;xref:System.ConsoleModifiers&gt; modifier key and &lt;xref:System.ConsoleKey&gt; console key (Ctrl+Z), which signals the end-of-file condition.</source>
          <target state="translated">エントリの次の操作のいずれかを実行しない限り、メソッドは-1 が返されませんに注意してください: - 同時にキーを押して、&lt;xref:System.ConsoleModifiers&gt;修飾子キーと&lt;xref:System.ConsoleKey&gt;コンソール キー (Ctrl + Z)、ファイル末尾の条件に通知します&lt;/xref:System.ConsoleKey&gt;&lt;/xref:System.ConsoleModifiers&gt;。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>-   Press an equivalent key that signals the end-of-file condition, such as the F6 function key in Windows.</source>
          <target state="translated">-Windows F6 キーなど、ファイル末尾の条件のことを通知する、同じキーを押します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>-   Redirect the input stream to a source, such as a text file, that has an actual end-of-file character.</source>
          <target state="translated">実際のファイルの終端文字が含まれるテキスト ファイルなどのソースに、入力ストリームをリダイレクトします。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</source>
          <target state="translated">次の入力ストリームから文字します。 または現在いる読み取る文字がない場合は負の&amp;1; (-1)。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Obtains the next character or function key pressed by the user.</source>
          <target state="translated">ユーザーによって押された次の文字または関数のキーを取得します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The pressed key is displayed in the console window.</source>
          <target state="translated">押されたキーは、コンソール ウィンドウに表示されます。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The ReadKey method waits, that is, blocks on the thread issuing the ReadKey method, until a character or function key is pressed.</source>
          <target state="translated">ReadKey メソッドに、文字キーまたはファンクション キーが押下されるまで ReadKey メソッドを発行するスレッド上のメモリ ブロックを待機します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</source>
          <target state="translated">1 つまたは複数の alt キーを押し、ctrl キーまたは shift キーを押し修飾子キーの組み合わせで、文字キーまたはファンクション キーを押すこともできます。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>However, pressing a modifier key by itself will not cause the ReadKey method to return.</source>
          <target state="translated">ただし、修飾子キーを押すと、それ自体では発生しません、ReadKey メソッドを返します。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Depending on your application, you might want to use the ReadKey method in conjunction with the &lt;xref:System.Console.KeyAvailable%2A&gt; property.</source>
          <target state="translated">アプリケーションによっては、メソッドを使用して、ReadKey と併用する可能性があります、&lt;xref:System.Console.KeyAvailable%2A&gt;プロパティ&lt;/xref:System.Console.KeyAvailable%2A&gt;。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The ReadKey method reads from the keyboard even if the standard input is redirected to a file with the &lt;xref:System.Console.SetIn%2A&gt; method.</source>
          <target state="translated">ReadKey メソッドを持つファイルに標準の入力がリダイレクトされる場合でも、キーボードから読み取り、&lt;xref:System.Console.SetIn%2A&gt;メソッド&lt;/xref:System.Console.SetIn%2A&gt;。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>An object that describes the <bpt id="p1">&lt;xref href="System.ConsoleKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant and Unicode character, if any, that correspond to the pressed console key.</source>
          <target state="translated">記述するオブジェクト、 <bpt id="p1">&lt;xref href="System.ConsoleKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>定数と Unicode 文字、存在する場合、対応する押されたコンソール キーにします。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ConsoleKeyInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object also describes, in a bitwise combination of <bpt id="p2">&lt;xref href="System.ConsoleModifiers"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ConsoleKeyInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトについても説明します、ビットごとの組み合わせで<bpt id="p2">&lt;xref href="System.ConsoleModifiers"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>値、1 つ以上の Shift、alt キーを押し、または ctrl キーを押し修飾子キーがコンソール キーと同時に押されたかどうか。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Console.In*&gt; property is redirected from some stream other than the console.</source>
          <target state="translated">&lt;xref:System.Console.In*&gt;プロパティは、コンソール以外のストリームからリダイレクトされます&lt;/xref:System.Console.In*&gt;。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Obtains the next character or function key pressed by the user.</source>
          <target state="translated">ユーザーによって押された次の文字または関数のキーを取得します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The pressed key is optionally displayed in the console window.</source>
          <target state="translated">押されたキーは必要に応じて、コンソール ウィンドウに表示されます。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Console.ReadKey%2A&gt; method waits, that is, blocks on the thread issuing the &lt;xref:System.Console.ReadKey%2A&gt; method, until a character or function key is pressed.</source>
          <target state="translated">&lt;xref:System.Console.ReadKey%2A&gt;メソッドは、待機、つまり、発行元のスレッド上のメモリ ブロック、&lt;xref:System.Console.ReadKey%2A&gt;メソッドを文字キーまたはファンクション キーが押下されるまで&lt;/xref:System.Console.ReadKey%2A&gt;&lt;/xref:System.Console.ReadKey%2A&gt;。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</source>
          <target state="translated">1 つまたは複数の alt キーを押し、ctrl キーまたは shift キーを押し修飾子キーの組み合わせで、文字キーまたはファンクション キーを押すこともできます。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>However, pressing a modifier key by itself will not cause the &lt;xref:System.Console.ReadKey%2A&gt; method to return.</source>
          <target state="translated">ただし、修飾子キーを押すと、それ自体では発生しません、&lt;xref:System.Console.ReadKey%2A&gt;を返すメソッド&lt;/xref:System.Console.ReadKey%2A&gt;。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`intercept`</ph> parameter is <ph id="ph2">`true`</ph>, the pressed key is intercepted and not displayed in the console window; otherwise, the pressed key is displayed.</source>
          <target state="translated">場合、<ph id="ph1">`intercept`</ph>パラメーターは<ph id="ph2">`true`</ph>、押されたキーが傍受および押されたキーが表示されていない、コンソール ウィンドウに表示されている以外の場合はそれ以外の場合、します。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Depending on your application, you might want to use the &lt;xref:System.Console.ReadKey%2A&gt; method in conjunction with the &lt;xref:System.Console.KeyAvailable%2A&gt; property.</source>
          <target state="translated">アプリケーションによっては、使用する場合があります、&lt;xref:System.Console.ReadKey%2A&gt;メソッドと組み合わせて、&lt;xref:System.Console.KeyAvailable%2A&gt;プロパティ&lt;/xref:System.Console.KeyAvailable%2A&gt;&lt;/xref:System.Console.ReadKey%2A&gt;。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Console.ReadKey%2A&gt; method reads from the keyboard even if the standard input is redirected to a file with the &lt;xref:System.Console.SetIn%2A&gt; method.</source>
          <target state="translated">&lt;xref:System.Console.ReadKey%2A&gt;メソッドを持つファイルに標準の入力がリダイレクトされる場合でも、キーボードから読み取り、&lt;xref:System.Console.SetIn%2A&gt;メソッド&lt;/xref:System.Console.SetIn%2A&gt;&lt;/xref:System.Console.ReadKey%2A&gt;。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Determines whether to display the pressed key in the console window.</source>
          <target state="translated">押されたキーをコンソール ウィンドウに表示するかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to not display the pressed key; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>押されたキーを表示しません。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>An object that describes the <bpt id="p1">&lt;xref href="System.ConsoleKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant and Unicode character, if any, that correspond to the pressed console key.</source>
          <target state="translated">記述するオブジェクト、 <bpt id="p1">&lt;xref href="System.ConsoleKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>定数と Unicode 文字、存在する場合、対応する押されたコンソール キーにします。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ConsoleKeyInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object also describes, in a bitwise combination of <bpt id="p2">&lt;xref href="System.ConsoleModifiers"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ConsoleKeyInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトについても説明します、ビットごとの組み合わせで<bpt id="p2">&lt;xref href="System.ConsoleModifiers"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>値、1 つ以上の Shift、alt キーを押し、または ctrl キーを押し修飾子キーがコンソール キーと同時に押されたかどうか。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Console.In*&gt; property is redirected from some stream other than the console.</source>
          <target state="translated">&lt;xref:System.Console.In*&gt;プロパティは、コンソール以外のストリームからリダイレクトされます&lt;/xref:System.Console.In*&gt;。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Reads the next line of characters from the standard input stream.</source>
          <target state="translated">標準入力ストリームから文字の次の行を読み取ります。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The ReadLine method reads a line from the standard input stream.</source>
          <target state="translated">ReadLine メソッドは、標準入力ストリームから行を読み取ります。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>(For the definition of a line, see the paragraph after the following list.) This means that:      -   If the standard input device is the keyboard, the ReadLine method blocks until the user presses the <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept> key.</source>
          <target state="translated">(行の定義、次のリストの後に、段落を参照してください)。つまり、:: 標準的な入力デバイスが、キーボード、ユーザーが押すまで ReadLine メソッド ブロックの場合、 <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept>キー。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>One of the most common uses of the ReadLine method is to pause program execution before clearing the console and displaying new information to it, or to prompt the user to press the Enter key before terminating the application.</source>
          <target state="translated">メソッドは、コンソールをクリアして、新しい情報を表示する前に、プログラム実行を一時停止するか、またはアプリケーションを終了する前に、Enter キーを押すようにユーザーに促す ReadLine の最も一般的なのいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The following example illustrates this.</source>
          <target state="translated">次の例を示します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Console.ReadLine#6<ept id="p2">](~/add/codesnippet/cpp/m-system.console.readline_1.cpp)</ept><ept id="p1">]</ept>      <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Console.ReadLine#6<ept id="p4">](~/add/codesnippet/visualbasic/m-system.console.readline_1.vb)</ept><ept id="p3">]</ept>      <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>System.Console.ReadLine#6<ept id="p6">](~/add/codesnippet/csharp/m-system.console.readline_1.cs)</ept><ept id="p5">]</ept>      -   If standard input is redirected to a file, the ReadLine method reads a line of text from a file.</source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Console.ReadLine#6<ept id="p2">](~/add/codesnippet/cpp/m-system.console.readline_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Console.ReadLine#6<ept id="p4">](~/add/codesnippet/visualbasic/m-system.console.readline_1.vb)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>System.Console.ReadLine#6<ept id="p6">](~/add/codesnippet/csharp/m-system.console.readline_1.cs)</ept> <ept id="p5">]</ept>の場合は、ファイルに標準の入力がリダイレクトされると、ReadLine メソッド、行のテキスト ファイルから読み取ります。            </target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>For example, the following is a text file named ReadLine1.txt:          <ph id="ph1">```          This is the first line.       This is the second line.       This is the third line.       This is the fourth line.          ```</ph>           The following example uses the ReadLine method to read input that is redirected from a file.</source>
          <target state="translated">たとえば、次に示します ReadLine1.txt をという名前のテキスト ファイル:<ph id="ph1">```          This is the first line.       This is the second line.       This is the third line.       This is the fourth line.          ```</ph>次の例では、ReadLine メソッドを使用して、ファイルからリダイレクトが入力内容の読み取り。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The read operation terminates when the  method returns <ph id="ph1">`null`</ph>, which indicates that no lines remain to be read.</source>
          <target state="translated">メソッドが戻るときに、読み取り操作が終了する<ph id="ph1">`null`</ph>、読み取られる行が残っていないことを示します。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Console.ReadLine#3<ept id="p2">](~/add/codesnippet/csharp/m-system.console.readline_2.cs)</ept><ept id="p1">]</ept>      <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Console.ReadLine#3<ept id="p4">](~/add/codesnippet/visualbasic/m-system.console.readline_2.vb)</ept><ept id="p3">]</ept>           After compiling the example to an executable named ReadLine1.exe, you can run it from the command line with the syntax          <ph id="ph1">```       ReadLine1 &lt; ReadLine1.txt       ```</ph>           to read the contents of the file and display them to the console.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Console.ReadLine#3<ept id="p2">](~/add/codesnippet/csharp/m-system.console.readline_2.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Console.ReadLine#3<ept id="p4">](~/add/codesnippet/visualbasic/m-system.console.readline_2.vb)</ept> <ept id="p3">]</ept> ReadLine1.exe を名前付き実行可能ファイルに例をコンパイルすた後には、実行できます構文を使用してコマンドラインから<ph id="ph1">```       ReadLine1 &lt; ReadLine1.txt       ```</ph>をファイルの内容を読み取り、それらをコンソールに表示します。      </target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>A line is defined as a sequence of characters followed by a carriage return (hexadecimal 0x000d), a line feed (hexadecimal 0x000a), or the value of the &lt;xref:System.Environment.NewLine%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">行が文字の後にキャリッジ リターン (16 進 0x000d)、ライン フィード (16 進 0x000a)、またはの値のシーケンスとして定義されている、&lt;xref:System.Environment.NewLine%2A?displayProperty=fullName&gt;プロパティ&lt;/xref:System.Environment.NewLine%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The returned string does not contain the terminating character(s).</source>
          <target state="translated">返される文字列に終端文字が含まれていません。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>By default, the method reads input from a 256-character input buffer.</source>
          <target state="translated">既定では、このメソッドは、256 文字の入力バッファーからの入力を読み取ります。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Because this includes the &lt;xref:System.Environment.NewLine%2A?displayProperty=fullName&gt; character(s), the method can read lines that contain up to 254 characters.</source>
          <target state="translated">これに含まれているため、&lt;xref:System.Environment.NewLine%2A?displayProperty=fullName&gt;文字、このメソッドは最大 254 文字を含む行を読み取ることができます&lt;/xref:System.Environment.NewLine%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>To read longer lines, call the &lt;xref:System.Console.OpenStandardInput%28System.Int32%29&gt; method.</source>
          <target state="translated">長い行を読み取りを呼び出して、&lt;xref:System.Console.OpenStandardInput%28System.Int32%29&gt;メソッド&lt;/xref:System.Console.OpenStandardInput%28System.Int32%29&gt;。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The ReadLine method executes synchronously.</source>
          <target state="translated">ReadLine メソッドは同期的に実行します。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>That is, it blocks until a line is read or the Ctrl+Z keyboard combination is pressed.</source>
          <target state="translated">つまり、行が読み取られるか、ctrl キーを押しながら Z キーの組み合わせが押されるまでブロックします。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Console.In%2A&gt; property returns a &lt;xref:System.IO.TextReader&gt; object that represents the standard input stream and that has both a synchronous &lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName&gt; method and an asynchronous &lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">&lt;xref:System.Console.In%2A&gt;プロパティから返される、&lt;xref:System.IO.TextReader&gt;オブジェクトを表す標準入力ストリームとを両方同期&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName&gt;メソッドおよび非同期&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName&gt;&lt;/xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName&gt;&lt;/xref:System.IO.TextReader&gt;&lt;/xref:System.Console.In%2A&gt;。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>However, when used as the console's standard input stream, the &lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName&gt; executes synchronously rather than asynchronously and returns a <ph id="ph1">`Task&lt;String&gt;`</ph> only after the read operation has completed.</source>
          <target state="translated">ただし、コンソールの標準入力ストリームとして使用すると、&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName&gt;非同期的にではなく同期的に処理を実行し、返します、<ph id="ph1">`Task&lt;String&gt;`</ph>読み取り操作が完了した後のみです&lt;/xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>If this method throws an &lt;xref:System.OutOfMemoryException&gt; exception, the reader's position in the underlying &lt;xref:System.IO.Stream&gt; object is advanced by the number of characters the method was able to read, but the characters already read into the internal ReadLine buffer are discarded.</source>
          <target state="translated">このメソッドがスローされた場合、&lt;xref:System.OutOfMemoryException&gt;例外、基になるリーダーの位置&lt;xref:System.IO.Stream&gt;はこのメソッドは、読み込むことが文字数による高度なオブジェクトしますが、既に内部 ReadLine バッファーに読み取られた文字は破棄されます&lt;/xref:System.IO.Stream&gt;&lt;/xref:System.OutOfMemoryException&gt;。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Since the position of the reader in the stream cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the &lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">既に読み取られた文字が回復することはできず、 &lt;xref:System.IO.TextReader&gt;。&lt;/xref:System.IO.TextReader&gt;を再初期化してのみアクセスできるストリーム内のリーダーの位置は変更することはできませんので</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>If the initial position within the stream is unknown or the stream does not support seeking, the underlying &lt;xref:System.IO.Stream&gt; also needs to be reinitialized.</source>
          <target state="translated">ストリーム内の最初の位置が不明か、ストリームがシークを基になるをサポートしていない場合&lt;xref:System.IO.Stream&gt;も再初期化する必要があります&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>To avoid such a situation and to produce robust code, you should use the &lt;xref:System.Console.KeyAvailable%2A&gt; property and &lt;xref:System.Console.ReadKey%2A&gt; method and store the read characters in a pre-allocated buffer.</source>
          <target state="translated">このような状況を回避し、堅牢なコードを生成するには、する必要がありますを使用する、&lt;xref:System.Console.KeyAvailable%2A&gt;プロパティおよび&lt;xref:System.Console.ReadKey%2A&gt;読み取りが事前に割り当てられたバッファーの文字メソッドとストアです&lt;/xref:System.Console.ReadKey%2A&gt;&lt;/xref:System.Console.KeyAvailable%2A&gt;。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>If the Ctrl+Z character is pressed when the method is reading input from the console, the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">このメソッドを返しますのかどうか、ctrl キーを押しながら Z キーを押すと、メソッドは、コンソールからの入力を読み取るときに、<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>This enables the user to prevent further keyboard input when the ReadLine method is called in a loop.</source>
          <target state="translated">これにより、ループで ReadLine メソッドが呼び出されると、さらにキーボード入力をできないようにできます。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The following example illustrates this scenario.</source>
          <target state="translated">次の例では、このシナリオを示します。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Console.ReadLine#1<ept id="p2">](~/add/codesnippet/cpp/m-system.console.readline_3.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Console.ReadLine#1<ept id="p4">](~/add/codesnippet/csharp/m-system.console.readline_3.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Console.ReadLine#1<ept id="p6">](~/add/codesnippet/visualbasic/m-system.console.readline_3.vb)</ept><ept id="p5">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Console.ReadLine#1<ept id="p2">](~/add/codesnippet/cpp/m-system.console.readline_3.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Console.ReadLine#1<ept id="p4">](~/add/codesnippet/csharp/m-system.console.readline_3.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Console.ReadLine#1    <ept id="p6">](~/add/codesnippet/visualbasic/m-system.console.readline_3.vb)</ept><ept id="p5">]</ept></target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The next line of characters from the input stream, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no more lines are available.</source>
          <target state="translated">入力ストリームから文字の次の行または<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>行がない使用可能な場合です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>There is insufficient memory to allocate a buffer for the returned string.</source>
          <target state="translated">返される文字列のバッファーを割り当てることが不足しているメモリがあります。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The number of characters in the next line of characters is greater than <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">文字の次の行の文字数がより大きい<ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Sets the foreground and background console colors to their defaults.</source>
          <target state="translated">既定値をフォア グラウンドとバック グラウンド コンソール色を設定します。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The foreground and background colors are restored to the colors that existed when the current process began.</source>
          <target state="translated">前景色と背景色は、現在のプロセスを開始したときに存在していた色に復元されます。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;xref:System.Console.ForegroundColor%2A&gt; and &lt;xref:System.Console.BackgroundColor%2A&gt; properties.</source>
          <target state="translated">詳細については、次を参照してください、&lt;xref:System.Console.ForegroundColor%2A&gt;と&lt;xref:System.Console.BackgroundColor%2A&gt;プロパティ。&lt;/xref:System.Console.BackgroundColor%2A&gt; &lt;/xref:System.Console.ForegroundColor%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Sets the height and width of the screen buffer area to the specified values.</source>
          <target state="translated">画面バッファー領域の幅と高さを指定された値に設定します。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The width of the buffer area measured in columns.</source>
          <target state="translated">バッファー領域の幅は、列で測定されます。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The height of the buffer area measured in rows.</source>
          <target state="translated">行で指定されたバッファー領域の高さ。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;height&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;width&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;height&lt;/code&gt;</ph>または<ph id="ph2">&lt;code&gt;width&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;height&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;width&lt;/code&gt;</ph> is greater than or equal to <ph id="ph3">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;height&lt;/code&gt;</ph>または<ph id="ph2">&lt;code&gt;width&lt;/code&gt;</ph>がより大きいまたは等しい<ph id="ph3">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;width&lt;/code&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Console.WindowLeft*&gt;</ph><ph id="ph3"> + &lt;xref:System.Console.WindowWidth*&gt;</ph>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;width&lt;/code&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Console.WindowLeft*&gt;</ph><ph id="ph3"> + &lt;xref:System.Console.WindowWidth*&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;height&lt;/code&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Console.WindowTop*&gt;</ph><ph id="ph3"> + &lt;xref:System.Console.WindowHeight*&gt;</ph>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;height&lt;/code&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Console.WindowTop*&gt;</ph><ph id="ph3"> + &lt;xref:System.Console.WindowHeight*&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Sets the position of the cursor.</source>
          <target state="translated">カーソルの位置を設定します。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Use the SetCursorPosition method to specify where the next write operation in the console window is to begin.</source>
          <target state="translated">SetCursorPosition メソッドを使用すると、コンソール ウィンドウに次の書き込み操作の開始を指定できます。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>If the specified cursor position is outside the area that is currently visible in the console window, the window origin changes automatically to make the cursor visible.</source>
          <target state="translated">指定したカーソル位置が、コンソール ウィンドウに現在表示されている領域の外側にある場合は、カーソルを表示するウィンドウの原点を自動的に変更します。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The cursor automatically moves to the next character position each time a character is written to the console window.</source>
          <target state="translated">カーソルは自動的に毎回、文字は、コンソール ウィンドウに書き込まれます。 次の文字位置に移動します。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>If the cursor is at the bottom right character position of the console window, the next write operation causes the console window to scroll so the cursor remains visible.</source>
          <target state="translated">カーソルが、コンソール ウィンドウの下部にある右の文字位置にある場合は、次への書き込み操作時、コンソール ウィンドウをスクロール カーソルが表示されるようにします。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>If you want to write a character to the bottom right character position without causing the console window to scroll, use the &lt;xref:System.Console.MoveBufferArea%2A&gt; method to move a character to that position.</source>
          <target state="translated">させずにスクロールして、使用するには、コンソール ウィンドウの下部右の文字位置に文字を書き込む場合、&lt;xref:System.Console.MoveBufferArea%2A&gt;文字をその位置に移動するメソッド&lt;/xref:System.Console.MoveBufferArea%2A&gt;。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The column position of the cursor.</source>
          <target state="translated">カーソルの列の位置。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Columns are numbered from left to right starting at 0.</source>
          <target state="translated">列は左から右から開始する番号 0 です。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The row position of the cursor.</source>
          <target state="translated">カーソルの行の位置。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Rows are numbered from top to bottom starting at 0.</source>
          <target state="translated">行は、上から下の 0 から始まる番号が付けられます。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;top&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;left&lt;/code&gt;</ph>または<ph id="ph2">&lt;code&gt;top&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;left&lt;/code&gt;</ph> is greater than or equal to <ph id="ph2">&lt;xref:System.Console.BufferWidth*&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;left&lt;/code&gt;</ph>がより大きいまたは等しい<ph id="ph2">&lt;xref:System.Console.BufferWidth*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;top&lt;/code&gt;</ph> is greater than or equal to <ph id="ph2">&lt;xref:System.Console.BufferHeight*&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;top&lt;/code&gt;</ph>がより大きいまたは等しい<ph id="ph2">&lt;xref:System.Console.BufferHeight*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Sets the &lt;xref:System.Console.Error*&gt; property to the specified &lt;xref:System.IO.TextWriter&gt; object.</source>
          <target state="translated">セット、&lt;xref:System.Console.Error*&gt;プロパティを指定した&lt;xref:System.IO.TextWriter&gt;オブジェクト&lt;/xref:System.IO.TextWriter&gt;&lt;/xref:System.Console.Error*&gt;。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>By default, the &lt;xref:System.Console.Error%2A&gt; property is set to the standard error output stream.</source>
          <target state="translated">既定では、&lt;xref:System.Console.Error%2A&gt;プロパティが標準エラー出力ストリームに設定します&lt;/xref:System.Console.Error%2A&gt;。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.StreamWriter&gt; that encapsulates a &lt;xref:System.IO.FileStream&gt; can be used to send error messages to a file.</source>
          <target state="translated">A&lt;xref:System.IO.StreamWriter&gt;をカプセル化する、&lt;xref:System.IO.FileStream&gt;をファイルにエラー メッセージを送信に使用することができます&lt;/xref:System.IO.FileStream&gt;&lt;/xref:System.IO.StreamWriter&gt;。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>A stream that is the new standard error output.</source>
          <target state="translated">新しい標準エラー出力であるストリーム。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newError&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;newError&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元には、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Sets the &lt;xref:System.Console.In*&gt; property to the specified &lt;xref:System.IO.TextReader&gt; object.</source>
          <target state="translated">セット、&lt;xref:System.Console.In*&gt;プロパティを指定した&lt;xref:System.IO.TextReader&gt;オブジェクト&lt;/xref:System.IO.TextReader&gt;&lt;/xref:System.Console.In*&gt;。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>By default, the &lt;xref:System.Console.In%2A&gt; property is set to the standard input stream.</source>
          <target state="translated">既定では、&lt;xref:System.Console.In%2A&gt;プロパティが標準入力ストリームに設定します&lt;/xref:System.Console.In%2A&gt;。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.StreamReader&gt; that encapsulates a &lt;xref:System.IO.FileStream&gt; can be used to receive input from a file.</source>
          <target state="translated">A&lt;xref:System.IO.StreamReader&gt;をカプセル化する、&lt;xref:System.IO.FileStream&gt;ファイルからの入力を受信するために使用できます&lt;/xref:System.IO.FileStream&gt;&lt;/xref:System.IO.StreamReader&gt;。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>A stream that is the new standard input.</source>
          <target state="translated">新しい標準入力であるストリーム。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newIn&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;newIn&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元には、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Sets the &lt;xref:System.Console.Out*&gt; property to the specified &lt;xref:System.IO.TextWriter&gt; object.</source>
          <target state="translated">セット、&lt;xref:System.Console.Out*&gt;プロパティを指定した&lt;xref:System.IO.TextWriter&gt;オブジェクト&lt;/xref:System.IO.TextWriter&gt;&lt;/xref:System.Console.Out*&gt;。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>By default, the &lt;xref:System.Console.Out%2A&gt; property is set to the standard output stream.</source>
          <target state="translated">既定では、&lt;xref:System.Console.Out%2A&gt;プロパティが標準出力ストリームに設定します&lt;/xref:System.Console.Out%2A&gt;。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.StreamWriter&gt; that encapsulates a &lt;xref:System.IO.FileStream&gt; can be used to send output to a file.</source>
          <target state="translated">A&lt;xref:System.IO.StreamWriter&gt;をカプセル化する、&lt;xref:System.IO.FileStream&gt;をファイルに出力を送信に使用することができます&lt;/xref:System.IO.FileStream&gt;&lt;/xref:System.IO.StreamWriter&gt;。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>For example:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Console.SetOut#1<ept id="p2">](~/add/codesnippet/csharp/m-system.console.setout-_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Console.SetOut#1<ept id="p4">](~/add/codesnippet/visualbasic/m-system.console.setout-_1.vb)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cpp</bpt><bpt id="p6">[</bpt>System.Console.SetOut#1<ept id="p6">](~/add/codesnippet/cpp/m-system.console.setout-_1.cpp)</ept><ept id="p5">]</ept></source>
          <target state="translated">例: <bpt id="p1">[!code-cs</bpt> <bpt id="p2">[</bpt>System.Console.SetOut#1<ept id="p2">](~/add/codesnippet/csharp/m-system.console.setout-_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Console.SetOut#1<ept id="p4">](~/add/codesnippet/visualbasic/m-system.console.setout-_1.vb)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cpp</bpt><bpt id="p6">[</bpt>System.Console.SetOut#1    <ept id="p6">](~/add/codesnippet/cpp/m-system.console.setout-_1.cpp)</ept><ept id="p5">]</ept></target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>A stream that is the new standard output.</source>
          <target state="translated">新しい標準出力ストリーム。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newOut&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;newOut&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元には、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Sets the position of the console window relative to the screen buffer.</source>
          <target state="translated">画面バッファーに対するコンソール ウィンドウの位置を設定します。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The operating system window displays the console window, and the console window displays a portion of the screen buffer.</source>
          <target state="translated">オペレーティング システム ウィンドウ、コンソール ウィンドウを表示し、コンソール ウィンドウは、画面バッファーの一部を表示します。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The SetWindowPosition method affects the position of the console window relative to the screen buffer, but does not affect the position of the operating system window relative to the desktop.</source>
          <target state="translated">SetWindowPosition メソッドでは、画面バッファーに対するコンソール ウィンドウの位置に影響しますが、デスクトップの基準としたオペレーティング システムのウィンドウの位置には影響しません。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The console and operating system windows generally do not affect each other.</source>
          <target state="translated">コンソールとオペレーティング システムの windows、通常は互いに影響しません。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>However, if the screen buffer cannot be displayed in the current boundaries of the console window, the operating system automatically appends scroll bars to the operating system window.</source>
          <target state="translated">ただし、画面バッファーをコンソール ウィンドウの境界の現在表示できない場合、オペレーティング システムに自動的にスクロール バーを追加オペレーティング システムのウィンドウします。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>In that case, moving the operating system window scroll bars affects the position of the console window, and moving the console window with the SetWindowPosition method affects the position of the operating system window scroll bars.</source>
          <target state="translated">その場合は、コンソール ウィンドウの位置に影響を与えるオペレーティング システムのウィンドウのスクロール バーを移動し、オペレーティング システムのウィンドウのスクロール バーの位置に影響 SetWindowPosition メソッドを使用して、コンソール ウィンドウを移動します。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The column position of the upper left  corner of the console window.</source>
          <target state="translated">コンソール ウィンドウの左上隅の列の位置。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The row position of the upper left corner of the console window.</source>
          <target state="translated">コンソール ウィンドウの左上隅の行の位置。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;top&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;left&lt;/code&gt;</ph>または<ph id="ph2">&lt;code&gt;top&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;left&lt;/code&gt;</ph><ph id="ph2"> + &lt;xref:System.Console.WindowWidth*&gt;</ph> is greater than <ph id="ph3">&lt;xref:System.Console.BufferWidth*&gt;</ph>.</source>
          <target state="translated">- または - <ph id="ph1">&lt;code&gt;left&lt;/code&gt;</ph> <ph id="ph2"> + &lt;xref:System.Console.WindowWidth*&gt;</ph>がより大きい<ph id="ph3">&lt;xref:System.Console.BufferWidth*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;top&lt;/code&gt;</ph><ph id="ph2"> + &lt;xref:System.Console.WindowHeight*&gt;</ph> is greater than <ph id="ph3">&lt;xref:System.Console.BufferHeight*&gt;</ph>.</source>
          <target state="translated">- または - <ph id="ph1">&lt;code&gt;top&lt;/code&gt;</ph> <ph id="ph2"> + &lt;xref:System.Console.WindowHeight*&gt;</ph>がより大きい<ph id="ph3">&lt;xref:System.Console.BufferHeight*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Sets the height and width of the console window to the specified values.</source>
          <target state="translated">指定された値をコンソール ウィンドウの幅と高さを設定します。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The width of the console window measured in columns.</source>
          <target state="translated">コンソール ウィンドウの幅は、列で測定されます。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The height of the console window measured in rows.</source>
          <target state="translated">行で指定されたコンソール ウィンドウの高さ。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;width&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;height&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;width&lt;/code&gt;</ph>または<ph id="ph2">&lt;code&gt;height&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;width&lt;/code&gt;</ph> plus <ph id="ph2">&lt;xref:System.Console.WindowLeft*&gt;</ph> or <ph id="ph3">&lt;code&gt;height&lt;/code&gt;</ph> plus <ph id="ph4">&lt;xref:System.Console.WindowTop*&gt;</ph> is greater than or equal to <ph id="ph5">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph6">&amp;gt;</ph>.</source>
          <target state="translated">- または - <ph id="ph1">&lt;code&gt;width&lt;/code&gt;</ph> plus<ph id="ph2">&lt;xref:System.Console.WindowLeft*&gt;</ph>または<ph id="ph3">&lt;code&gt;height&lt;/code&gt;</ph>plus<ph id="ph4">&lt;xref:System.Console.WindowTop*&gt;</ph>がより大きいまたは等しい<ph id="ph5">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph6">&amp;gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;width&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;height&lt;/code&gt;</ph> is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;width&lt;/code&gt;</ph>または<ph id="ph2">&lt;code&gt;height&lt;/code&gt;</ph>が利用可能なウィンドウの最大幅または現在の画面解像度とコンソールのフォントの高さを超えています。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">ユーザーには、この操作を実行するアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Gets or sets the title to display in the console title bar.</source>
          <target state="translated">取得またはコンソールのタイトル バーに表示するタイトルを設定します。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The string to be displayed in the title bar of the console.</source>
          <target state="translated">コンソールのタイトル バーに表示される文字列。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The maximum length of the title string is 24500 characters.</source>
          <target state="translated">タイトル文字列の最大長は、24500 文字です。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>In a get operation, the retrieved title is longer than 24500 characters.</source>
          <target state="translated">Get 操作では、取得したタイトルが 24500 文字を超えています。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>In a set operation, the specified title is longer than 24500 characters.</source>
          <target state="translated">設定操作では、指定したタイトルが 24500 文字を超えています。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>In a set operation, the specified title is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">設定操作では、指定されたタイトルは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the combination of the <bpt id="p1">&lt;xref href="System.ConsoleModifiers"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> modifier key and <bpt id="p2">&lt;xref href="System.ConsoleKey"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.</source>
          <target state="translated">取得または設定を示す値かどうかの組み合わせ、 <bpt id="p1">&lt;xref href="System.ConsoleModifiers"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>修飾子キーと<bpt id="p2">&lt;xref href="System.ConsoleKey"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>コンソール キー (Ctrl + C) は、通常の入力として、またはオペレーティング システムによって処理される割り込みとして扱われます。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>If the value of the TreatControlCAsInput property is <ph id="ph1">`false`</ph> and Ctrl+C is pressed, the pressed keys are not stored in the input buffer and the operating system terminates the currently executing process.</source>
          <target state="translated">TreatControlCAsInput プロパティの値が場合<ph id="ph1">`false`</ph>Ctrl + C キーを押すと、押されたキーが入力バッファーに格納されませんし、オペレーティング システムが現在実行中のプロセスを終了します。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>This is the default value.</source>
          <target state="translated">これは既定値です。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Use this property judiciously because setting it to <ph id="ph2">`true`</ph> has such a dramatic effect.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; に設定するために、このプロパティを注意深く使用<ph id="ph2">`true`</ph>大幅このような影響を与えます。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Most users expect Ctrl+C to terminate a console application.</source>
          <target state="translated">ほとんどのユーザーは、コンソール アプリケーションを終了するには、Ctrl + C を期待します。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>If you disable the effect of Ctrl+C, the user must remember to use Ctrl+Break to terminate the application, which is a less familiar key combination.</source>
          <target state="translated">Ctrl + C の効果を無効にした場合、ユーザーはあまり知られていないキーの組み合わせであると、アプリケーションを終了する Ctrl + Break を使用することを忘れないでください。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if Ctrl+C is treated as ordinary input; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Ctrl + C が通常の入力として扱う場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Unable to get or set the input mode of the console input buffer.</source>
          <target state="translated">取得またはコンソール入力バッファーの入力モードを設定できません。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Gets or sets the height of the console window area.</source>
          <target state="translated">取得またはコンソール ウィンドウ領域の高さを設定します。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Attempting to set the value of the WindowHeight property when output is redirected throws either an &lt;xref:System.ArgumentOutOfRangeException&gt; or an &lt;xref:System.IO.IOException&gt; exception.</source>
          <target state="translated">いずれかの出力がリダイレクトされたときに、WindowHeight プロパティの値を設定しようとしていますスロー、&lt;xref:System.ArgumentOutOfRangeException&gt;または&lt;xref:System.IO.IOException&gt;例外です。&lt;/xref:System.IO.IOException&gt; &lt;/xref:System.ArgumentOutOfRangeException&gt; 。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>To prevent an exception, you can set the value of this property only if the &lt;xref:System.Console.IsOutputRedirected%2A&gt; property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">例外を防ぐためには、場合にのみ、このプロパティの値を設定することができます、&lt;xref:System.Console.IsOutputRedirected%2A&gt;プロパティから返される<ph id="ph1">`false`</ph>&lt;/xref:System.Console.IsOutputRedirected%2A&gt;。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The height of the console window measured in rows.</source>
          <target state="translated">行で指定されたコンソール ウィンドウの高さ。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The value of the &lt;xref:System.Console.WindowWidth<bpt id="p1">*</bpt>&gt; property or the value of the WindowHeight property is less than or equal to 0.       -or-       The value of the WindowHeight property plus the value of the &lt;xref:System.Console.WindowTop<ept id="p1">*</ept>&gt; property is greater than or equal to <ph id="ph1">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">値、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; プロパティまたは WindowHeight プロパティの値が 0 未満です。      - または - の値の合計 WindowHeight プロパティの値、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; プロパティがより大きいか等しい<ph id="ph1">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>-or-       The value of the &lt;xref:System.Console.WindowWidth*&gt; property or the value of the WindowHeight property is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated">- または - の値、&lt;xref:System.Console.WindowWidth*&gt;プロパティまたは WindowHeight プロパティの値が、利用可能なウィンドウの最大幅または現在の画面解像度とコンソールのフォントの高さの値より大きい&lt;/xref:System.Console.WindowWidth*&gt;。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Error reading or writing information.</source>
          <target state="translated">エラーの読み取りまたは書き込み情報。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Gets or sets the leftmost position of the console window area relative to the screen buffer.</source>
          <target state="translated">取得または画面バッファーに対するコンソール ウィンドウ領域の左端の位置を設定します。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The console represents a rectangular window into a larger rectangular buffer area.</source>
          <target state="translated">コンソールより大きな四角形のバッファー領域に四角形のウィンドウを表します。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</source>
          <target state="translated">行の数、および水平方向に列の番号では、ウィンドウと、バッファーの両方が垂直方向に測定されます。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The dimensions of the buffer area are defined by the &lt;xref:System.Console.BufferHeight%2A&gt; and &lt;xref:System.Console.BufferWidth%2A&gt; properties.</source>
          <target state="translated">バッファー領域の大きさがによって定義された、&lt;xref:System.Console.BufferHeight%2A&gt;と&lt;xref:System.Console.BufferWidth%2A&gt;プロパティ&lt;/xref:System.Console.BufferWidth%2A&gt;&lt;/xref:System.Console.BufferHeight%2A&gt;。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The dimensions of the console area are defined by the &lt;xref:System.Console.WindowHeight%2A&gt; and &lt;xref:System.Console.WindowWidth%2A&gt; properties.</source>
          <target state="translated">コンソールの領域の大きさがによって定義された、&lt;xref:System.Console.WindowHeight%2A&gt;と&lt;xref:System.Console.WindowWidth%2A&gt;プロパティ&lt;/xref:System.Console.WindowWidth%2A&gt;&lt;/xref:System.Console.WindowHeight%2A&gt;。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The WindowLeft property determines which column of the buffer area is displayed in the first column of the console window.</source>
          <target state="translated">WindowLeft プロパティは、バッファー領域の列は、コンソール ウィンドウの最初の列で表示を決定します。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The value of the WindowLeft property can range from 0 to &lt;xref:System.Console.BufferWidth%2A&gt; - &lt;xref:System.Console.WindowWidth%2A&gt;.</source>
          <target state="translated">WindowLeft プロパティの値の範囲は 0 ~ &lt;xref:System.Console.BufferWidth%2A&gt;- &lt;xref:System.Console.WindowWidth%2A&gt;.&lt;/xref:System.Console.WindowWidth%2A&gt; &lt;/xref:System.Console.BufferWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Attempting to set it to a value outside that range throws an &lt;xref:System.ArgumentOutOfRangeException&gt;.</source>
          <target state="translated">スロー &lt;xref:System.ArgumentOutOfRangeException&gt;。&lt;/xref:System.ArgumentOutOfRangeException&gt;の範囲外の値に設定しようとしています。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>When a console window first opens, the default value of the WindowLeft property is zero, which indicates that the first column shown by the console corresponds to the first column (the column at position zero) in the buffer area.</source>
          <target state="translated">コンソール ウィンドウを初めて開いたときに WindowLeft プロパティの既定値は、0 で、コンソールで表示される最初の列がバッファー領域の最初の列 (ゼロの位置にある列) に対応していることを示します。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The default width of both the console window and the buffer area is 80 columns.</source>
          <target state="translated">コンソール ウィンドウとバッファー領域の両方の既定の幅は、80 列です。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>This means that the WindowLeft property can be modified only if the console window is made narrower or the buffer area is made wider.</source>
          <target state="translated">これは、コンソール ウィンドウの幅の狭いが行われたか、バッファー領域を広く場合にのみ、WindowLeft プロパティを変更できることを意味します。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Note that if the width of the buffer area exceeds the width of the console window, the value of the WindowLeft property is automatically adjusted when the user uses the horizontal scroll bar to define the window's relationship to the buffer area.</source>
          <target state="translated">バッファー領域の幅は、コンソール ウィンドウの幅を超えている場合 WindowLeft プロパティの値が自動的に調整すること、ユーザーは、リレーションシップを定義ウィンドウのバッファー領域を水平スクロール バーを使用する場合に注意してください。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Attempting to set the value of the WindowLeft property when output is redirected throws an &lt;xref:System.IO.IOException&gt; exception.</source>
          <target state="translated">出力がリダイレクトされたスロー WindowLeft プロパティの値を設定すると、&lt;xref:System.IO.IOException&gt;例外です&lt;/xref:System.IO.IOException&gt;。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>To prevent the exception, you can set the value of this property only if the &lt;xref:System.Console.IsOutputRedirected%2A&gt; property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">例外を防ぐためには、場合にのみ、このプロパティの値を設定することができます、&lt;xref:System.Console.IsOutputRedirected%2A&gt;プロパティから返される<ph id="ph1">`false`</ph>&lt;/xref:System.Console.IsOutputRedirected%2A&gt;。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The leftmost console window position measured in columns.</source>
          <target state="translated">左端のコンソール ウィンドウの位置は、列で測定されます。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>In a set operation, the value to be assigned is less than zero.</source>
          <target state="translated">設定操作で割り当てられる値が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>-or-       As a result of the assignment, WindowLeft plus &lt;xref:System.Console.WindowWidth<bpt id="p1">*</bpt>&gt; would exceed &lt;xref:System.Console.BufferWidth<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">または、プラス WindowLeft、割り当ての結果として&lt;&gt; <bpt id="p1">*</bpt>&gt; を超えます&lt;&gt; <ept id="p1">*</ept>&gt; です。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Error reading or writing information.</source>
          <target state="translated">エラーの読み取りまたは書き込み情報。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Gets or sets the top position of the console window area relative to the screen buffer.</source>
          <target state="translated">取得または画面バッファーに対するコンソール ウィンドウ領域の上端の位置を設定します。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The console represents a rectangular window into a larger rectangular buffer area.</source>
          <target state="translated">コンソールより大きな四角形のバッファー領域に四角形のウィンドウを表します。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</source>
          <target state="translated">行の数、および水平方向に列の番号では、ウィンドウと、バッファーの両方が垂直方向に測定されます。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The dimensions of the buffer area are defined by the &lt;xref:System.Console.BufferHeight%2A&gt; and &lt;xref:System.Console.BufferWidth%2A&gt; properties.</source>
          <target state="translated">バッファー領域の大きさがによって定義された、&lt;xref:System.Console.BufferHeight%2A&gt;と&lt;xref:System.Console.BufferWidth%2A&gt;プロパティ&lt;/xref:System.Console.BufferWidth%2A&gt;&lt;/xref:System.Console.BufferHeight%2A&gt;。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The dimensions of the console area are defined by the &lt;xref:System.Console.WindowHeight%2A&gt; and &lt;xref:System.Console.WindowWidth%2A&gt; properties.</source>
          <target state="translated">コンソールの領域の大きさがによって定義された、&lt;xref:System.Console.WindowHeight%2A&gt;と&lt;xref:System.Console.WindowWidth%2A&gt;プロパティ&lt;/xref:System.Console.WindowWidth%2A&gt;&lt;/xref:System.Console.WindowHeight%2A&gt;。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The WindowTop property determines which row of the buffer area is displayed in the first column of the console window.</source>
          <target state="translated">WindowTop プロパティは、バッファー領域のどの行が、コンソール ウィンドウの最初の列に表示を決定します。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The value of the WindowTop property can range from 0 to &lt;xref:System.Console.BufferHeight%2A&gt; - &lt;xref:System.Console.WindowHeight%2A&gt;.</source>
          <target state="translated">WindowTop プロパティの値の範囲は 0 ~ &lt;xref:System.Console.BufferHeight%2A&gt;- &lt;xref:System.Console.WindowHeight%2A&gt;.&lt;/xref:System.Console.WindowHeight%2A&gt; &lt;/xref:System.Console.BufferHeight%2A&gt;</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Attempting to set it to a value outside that range throws an &lt;xref:System.ArgumentOutOfRangeException&gt;.</source>
          <target state="translated">スロー &lt;xref:System.ArgumentOutOfRangeException&gt;。&lt;/xref:System.ArgumentOutOfRangeException&gt;の範囲外の値に設定しようとしています。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Attempting to set the value of the WindowTop property when output is redirected throws an &lt;xref:System.IO.IOException&gt; exception.</source>
          <target state="translated">出力がリダイレクトされたスロー WindowTop プロパティの値を設定すると、&lt;xref:System.IO.IOException&gt;例外です&lt;/xref:System.IO.IOException&gt;。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>To prevent the exception, you can set the value of this property only if the &lt;xref:System.Console.IsOutputRedirected%2A&gt; property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">例外を防ぐためには、場合にのみ、このプロパティの値を設定することができます、&lt;xref:System.Console.IsOutputRedirected%2A&gt;プロパティから返される<ph id="ph1">`false`</ph>&lt;/xref:System.Console.IsOutputRedirected%2A&gt;。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The uppermost console window position measured in rows.</source>
          <target state="translated">最上位のコンソール ウィンドウの位置は、行で測定されます。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>In a set operation, the value to be assigned is less than zero.</source>
          <target state="translated">設定操作で割り当てられる値が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>-or-       As a result of the assignment, WindowTop plus &lt;xref:System.Console.WindowHeight<bpt id="p1">*</bpt>&gt; would exceed &lt;xref:System.Console.BufferHeight<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">または、プラス WindowTop、割り当ての結果として&lt;&gt; <bpt id="p1">*</bpt>&gt; を超えます&lt;&gt; <ept id="p1">*</ept>&gt; です。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Error reading or writing information.</source>
          <target state="translated">エラーの読み取りまたは書き込み情報。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Gets or sets the width of the console window.</source>
          <target state="translated">取得またはコンソール ウィンドウの幅を設定します。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Attempting to set the value of the WindowWidth property when output is redirected throws either an &lt;xref:System.ArgumentOutOfRangeException&gt; or an &lt;xref:System.IO.IOException&gt; exception.</source>
          <target state="translated">いずれかの出力がリダイレクトされたときに、WindowWidth プロパティの値を設定しようとしていますスロー、&lt;xref:System.ArgumentOutOfRangeException&gt;または&lt;xref:System.IO.IOException&gt;例外です。&lt;/xref:System.IO.IOException&gt; &lt;/xref:System.ArgumentOutOfRangeException&gt; 。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>To prevent an exception, you can set the value of this property only if the &lt;xref:System.Console.IsOutputRedirected%2A&gt; property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">例外を防ぐためには、場合にのみ、このプロパティの値を設定することができます、&lt;xref:System.Console.IsOutputRedirected%2A&gt;プロパティから返される<ph id="ph1">`false`</ph>&lt;/xref:System.Console.IsOutputRedirected%2A&gt;。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The width of the console window measured in columns.</source>
          <target state="translated">コンソール ウィンドウの幅は、列で測定されます。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The value of the WindowWidth property or the value of the &lt;xref:System.Console.WindowHeight<bpt id="p1">*</bpt>&gt; property is less than or equal to 0.       -or-       The value of the &lt;xref:System.Console.WindowHeight<ept id="p1">*</ept>&gt; property plus the value of the &lt;xref:System.Console.WindowTop<bpt id="p2">*</bpt>&gt; property is greater than or equal to <ph id="ph1">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.       -or-       The value of the WindowWidth property or the value of the &lt;xref:System.Console.WindowHeight<ept id="p2">*</ept>&gt; property is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated">WindowWidth プロパティまたはの値の値、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; プロパティが 0 未満です。      - または - の値、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; プロパティの値の合計、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; プロパティがより大きいか等しい<ph id="ph1">&amp;lt;</ph>xref:System.Int16.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>です。      - または - WindowWidth プロパティの値またはの値、 &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt; プロパティは、利用可能なウィンドウの最大幅または現在の画面解像度とコンソールのフォントの高さを超えています。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Error reading or writing information.</source>
          <target state="translated">エラーの読み取りまたは書き込み情報。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified Boolean value to the standard output stream.</source>
          <target state="translated">指定したブール値のテキスト表現を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling &lt;xref:System.Boolean.ToString%2A?displayProperty=fullName&gt;, which outputs either &lt;xref:System.Boolean.TrueString?displayProperty=fullName&gt; or &lt;xref:System.Boolean.FalseString?displayProperty=fullName&gt;.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>&lt;xref:System.Boolean.ToString%2A?displayProperty=fullName&gt;いずれか&lt;xref:System.Boolean.TrueString?displayProperty=fullName&gt;または&lt;xref:System.Boolean.FalseString?displayProperty=fullName&gt;.&lt;/xref:System.Boolean.FalseString?displayProperty=fullName&gt;&lt;/xref:System.Boolean.TrueString?displayProperty=fullName&gt;を出力する&lt;/xref:System.Boolean.ToString%2A?displayProperty=fullName&gt;を呼び出すことによって生成されます。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Writes the specified Unicode character value to the standard output stream.</source>
          <target state="translated">指定した Unicode 文字値を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Writes the specified array of Unicode characters to the standard output stream.</source>
          <target state="translated">指定された Unicode 文字の配列を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>A Unicode character array.</source>
          <target state="translated">Unicode 文字配列。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified &lt;xref:System.Decimal&gt; value to the standard output stream.</source>
          <target state="translated">指定したテキスト表現を書き込みます&lt;xref:System.Decimal&gt;を標準出力ストリームの値&lt;/xref:System.Decimal&gt;。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling &lt;xref:System.Decimal.ToString%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph> &lt;xref:System.Decimal.ToString%2A?displayProperty=fullName&gt;.&lt;/xref:System.Decimal.ToString%2A?displayProperty=fullName&gt;を呼び出すことによって生成されます。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified double-precision floating-point value to the standard output stream.</source>
          <target state="translated">指定した倍精度浮動小数点値のテキスト表現を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.Double.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.Double.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Double.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified 32-bit signed integer value to the standard output stream.</source>
          <target state="translated">指定した 32 ビット符号付き整数値のテキスト表現を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.Int32.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.Int32.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Int32.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified 64-bit signed integer value to the standard output stream.</source>
          <target state="translated">指定した 64 ビット符号付き整数値のテキスト表現を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.Int64.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.Int64.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Int64.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified object to the standard output stream.</source>
          <target state="translated">指定したオブジェクトのテキスト表現を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, nothing is written and no exception is thrown.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>は<ph id="ph2">`null`</ph>、何が書き込まれ、例外はスローされません。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Otherwise, the <ph id="ph1">`ToString`</ph> method of <ph id="ph2">`value`</ph> is called to produce its string representation, and the resulting string is written to the standard output stream.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">`ToString`</ph>メソッドの<ph id="ph2">`value`</ph>は、文字列形式を生成するために呼び出され、結果の文字列が標準出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>The value to write, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">書き込む値または<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified single-precision floating-point value to the standard output stream.</source>
          <target state="translated">指定した単精度浮動小数点値のテキスト表現を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.Single.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.Single.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Single.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Writes the specified string value to the standard output stream.</source>
          <target state="translated">指定した文字列値を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>If value is <ph id="ph1">`null`</ph>, nothing is written to the standard output stream.</source>
          <target state="translated">値が場合<ph id="ph1">`null`</ph>、標準出力ストリームに何も書き込まれません。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.</source>
          <target state="translated">指定した 32 ビット符号なし整数値のテキスト表現を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.UInt32.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.UInt32.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.UInt32.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.</source>
          <target state="translated">指定した 64 ビット符号なし整数値のテキスト表現を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.UInt64.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.UInt64.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.UInt64.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified object to the standard output stream using the specified format information.</source>
          <target state="translated">指定したオブジェクトのテキスト表現を指定した書式情報を使用して、標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>をテキスト形式のオブジェクトの値を変換し、その表現を文字列に埋め込むには、.NET Framework のです。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">結果の文字列は、出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または&amp;1; つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">書式設定のプロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">書式指定項目の構文は<ph id="ph1">`{`</ph><bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>配置<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>必須インデックス オプションの長さ、フォーマットされたテキストの配置を指定して、オプションの対応する値のオブジェクトを制御する書式指定子文字の文字列の形式が、します。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>-   For more information about the composite formatting feature supported by methods such as &lt;xref:System.String.Format%2A&gt;, &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;, and some overloads of &lt;xref:System.Console.WriteLine%2A&gt;, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>.</source>
          <target state="translated">、などのメソッドでサポートされている複合書式指定機能の詳細については&lt;xref:System.String.Format%2A&gt;、 &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;、および一部のオーバー ロードの&lt;xref:System.Console.WriteLine%2A&gt;を参照してください<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>&lt;/xref:System.Console.WriteLine%2A&gt;&lt;/xref:System.Text.StringBuilder.AppendFormat%2A&gt;&lt;/xref:System.String.Format%2A&gt;。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>-   For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>-   For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-についての日付と時刻の書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>-   For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-列挙型書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>-   For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細についてを参照してください<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>A composite format string (see Remarks).</source>
          <target state="translated">複合書式指定文字列 (「解説」を参照してください)。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>An object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">使用して書き込むオブジェクト<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The format specification in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">書式指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">format</ph> <ept id="p1">&lt;/code&gt;</ept>が無効です。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified array of objects to the standard output stream using the specified format information.</source>
          <target state="translated">指定されたオブジェクトの配列のテキスト形式を指定した書式情報を使用して、標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>This method uses the  <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>をテキスト形式のオブジェクトの値を変換し、その表現を文字列に埋め込むには、.NET Framework のです。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">結果の文字列は、出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または&amp;1; つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">書式設定のプロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">書式指定項目の構文は<ph id="ph1">`{`</ph><bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>配置<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>必須インデックス オプションの長さ、フォーマットされたテキストの配置を指定して、オプションの対応する値のオブジェクトを制御する書式指定子文字の文字列の形式が、します。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>-   For more information about the composite formatting feature supported by methods such as &lt;xref:System.String.Format%2A&gt;, &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;, and some overloads of &lt;xref:System.Console.WriteLine%2A&gt;, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>.</source>
          <target state="translated">、などのメソッドでサポートされている複合書式指定機能の詳細については&lt;xref:System.String.Format%2A&gt;、 &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;、および一部のオーバー ロードの&lt;xref:System.Console.WriteLine%2A&gt;を参照してください<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>&lt;/xref:System.Console.WriteLine%2A&gt;&lt;/xref:System.Text.StringBuilder.AppendFormat%2A&gt;&lt;/xref:System.String.Format%2A&gt;。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>-   For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>-   For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-についての日付と時刻の書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>-   For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-列挙型書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>-   For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細についてを参照してください<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`arg`</ph> parameter is a parameter array.</source>
          <target state="translated"><ph id="ph1">`arg`</ph>パラメーターはパラメーターの配列。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Arguments  can be passed to the method either as an array or as list of five or more items.</source>
          <target state="translated">引数は、配列、または&amp;5; つまたは複数の項目の一覧としてメソッドに渡すことができます。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>The examples illustrate both forms of method call.</source>
          <target state="translated">例では、メソッドの呼び出しの両方の形式を示します。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>A composite format string (see Remarks).</source>
          <target state="translated">複合書式指定文字列 (「解説」を参照してください)。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>An array of objects to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">使用して書き込むオブジェクトの配列<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;arg&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;arg&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>The format specification in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">書式指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">format</ph> <ept id="p1">&lt;/code&gt;</ept>が無効です。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Writes the specified subarray of Unicode characters to the standard output stream.</source>
          <target state="translated">Unicode 文字の指定した部分配列を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>This method writes <ph id="ph1">`count`</ph> characters starting at position <ph id="ph2">`index`</ph> of <ph id="ph3">`buffer`</ph> to the standard output stream.</source>
          <target state="translated">このメソッドは書き込みます<ph id="ph1">`count`</ph>位置から始まる文字<ph id="ph2">`index`</ph>の<ph id="ph3">`buffer`</ph>を標準出力ストリームにします。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>An array of Unicode characters.</source>
          <target state="translated">Unicode 文字の配列。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>The starting position in <ph id="ph1">`buffer`</ph>.</source>
          <target state="translated">内の開始位置<ph id="ph1">`buffer`</ph>です。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The number of characters to write.</source>
          <target state="translated">書き込む文字の数。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>または<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> plus <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> specify a position that is not within <ph id="ph3">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>plus<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>内ではない位置を指定する<ph id="ph3">&lt;code&gt;buffer&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified objects to the standard output stream using the specified format information.</source>
          <target state="translated">指定したオブジェクトのテキスト形式を指定した書式情報を使用して、標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>をテキスト形式のオブジェクトの値を変換し、その表現を文字列に埋め込むには、.NET Framework のです。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">結果の文字列は、出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または&amp;1; つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">書式設定のプロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">書式指定項目の構文は<ph id="ph1">`{`</ph><bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>配置<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>必須インデックス オプションの長さ、フォーマットされたテキストの配置を指定して、オプションの対応する値のオブジェクトを制御する書式指定子文字の文字列の形式が、します。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>-   For more information about the composite formatting feature supported by methods such as &lt;xref:System.String.Format%2A&gt;, &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;, and some overloads of &lt;xref:System.Console.WriteLine%2A&gt;, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>.</source>
          <target state="translated">、などのメソッドでサポートされている複合書式指定機能の詳細については&lt;xref:System.String.Format%2A&gt;、 &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;、および一部のオーバー ロードの&lt;xref:System.Console.WriteLine%2A&gt;を参照してください<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>&lt;/xref:System.Console.WriteLine%2A&gt;&lt;/xref:System.Text.StringBuilder.AppendFormat%2A&gt;&lt;/xref:System.String.Format%2A&gt;。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>-   For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>-   For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-についての日付と時刻の書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>-   For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-列挙型書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>-   For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細についてを参照してください<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>A composite format string (see Remarks).</source>
          <target state="translated">複合書式指定文字列 (「解説」を参照してください)。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The first object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">最初のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>The second object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">2 番目のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>The format specification in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">書式指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">format</ph> <ept id="p1">&lt;/code&gt;</ept>が無効です。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified objects to the standard output stream using the specified format information.</source>
          <target state="translated">指定したオブジェクトのテキスト形式を指定した書式情報を使用して、標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>をテキスト形式のオブジェクトの値を変換し、その表現を文字列に埋め込むには、.NET Framework のです。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">結果の文字列は、出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または&amp;1; つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">書式設定のプロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">書式指定項目の構文は<ph id="ph1">`{`</ph><bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>配置<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>必須インデックス オプションの長さ、フォーマットされたテキストの配置を指定して、オプションの対応する値のオブジェクトを制御する書式指定子文字の文字列の形式が、します。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>-   For more information about the composite formatting feature supported by methods such as &lt;xref:System.String.Format%2A&gt;, &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;, and some overloads of &lt;xref:System.Console.WriteLine%2A&gt;, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>.</source>
          <target state="translated">、などのメソッドでサポートされている複合書式指定機能の詳細については&lt;xref:System.String.Format%2A&gt;、 &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;、および一部のオーバー ロードの&lt;xref:System.Console.WriteLine%2A&gt;を参照してください<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>&lt;/xref:System.Console.WriteLine%2A&gt;&lt;/xref:System.Text.StringBuilder.AppendFormat%2A&gt;&lt;/xref:System.String.Format%2A&gt;。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>-   For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>-   For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-についての日付と時刻の書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>-   For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-列挙型書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>-   For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細についてを参照してください<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>A composite format string (see Remarks).</source>
          <target state="translated">複合書式指定文字列 (「解説」を参照してください)。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The first object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">最初のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The second object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">2 番目のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>The third object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">使用して書き込む&amp;3; 番目のオブジェクト<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>The format specification in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">書式指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">format</ph> <ept id="p1">&lt;/code&gt;</ept>が無効です。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified objects and variable-length parameter list to the standard output stream using the specified format information.</source>
          <target state="translated">指定したオブジェクトと可変長パラメーター リストのテキスト形式を指定した書式情報を使用して、標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>A composite format string (see Remarks).</source>
          <target state="translated">複合書式指定文字列 (「解説」を参照してください)。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>The first object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">最初のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>The second object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">2 番目のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>The third object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">使用して書き込む&amp;3; 番目のオブジェクト<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The fourth object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">使用して書き込む&amp;4; 番目のオブジェクト<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>The format specification in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">書式指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">format</ph> <ept id="p1">&lt;/code&gt;</ept>が無効です。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Writes the current line terminator to the standard output stream.</source>
          <target state="translated">現在の行終端記号を標準出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>The default line terminator is a string whose value is a carriage return followed by a line feed ("\r " in C#, or <ph id="ph1">`vbCrLf`</ph> in Visual Basic).</source>
          <target state="translated">既定の行終端記号がキャリッジ リターンとライン フィードの値の文字列 (C# の場合、"\r"、または<ph id="ph1">`vbCrLf`</ph>Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>You can change the line terminator by setting the &lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName&gt; property of the &lt;xref:System.Console.Out%2A&gt; property to another string.</source>
          <target state="translated">設定して、行終端記号を変更することができます、&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName&gt;のプロパティ、&lt;xref:System.Console.Out%2A&gt;を別の文字列プロパティです&lt;/xref:System.Console.Out%2A&gt;&lt;/xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>The example provides an illustration.</source>
          <target state="translated">この例では、具体的なを示します。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">現在の行終端記号を標準出力ストリームの後に、指定したブール値のテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.Boolean.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.Boolean.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Boolean.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.</source>
          <target state="translated">現在の行終端記号を標準出力ストリームに値の後に、指定した Unicode 文字を書き込みます。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">指定された Unicode 文字が、現在の行終端記号を標準出力ストリームに続くの配列を書き込みます。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>A Unicode character array.</source>
          <target state="translated">Unicode 文字配列。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified &lt;xref:System.Decimal&gt; value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">指定したテキスト表現を書き込みます&lt;xref:System.Decimal&gt;値を現在の行終端記号を標準出力ストリームに続く&lt;/xref:System.Decimal&gt;。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.Decimal.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.Decimal.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Decimal.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">指定した倍精度浮動小数点値の、現在の行終端記号を標準出力ストリームに続くテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.Double.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.Double.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Double.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">指定した 32 ビット符号付き整数値の現在の行終端記号を標準出力ストリームに後のテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.Int32.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.Int32.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Int32.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">指定した 64 ビット符号付き整数値の現在の行終端記号を標準出力ストリームに後のテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.Int64.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.Int64.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Int64.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">現在の行終端記号を標準出力ストリームの後に、指定したオブジェクトのテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, only the line terminator is written.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>は<ph id="ph2">`null`</ph>、行終端記号だけが書き込まれます。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>Otherwise, the <ph id="ph1">`ToString`</ph> method of <ph id="ph2">`value`</ph> is called to produce its string representation, and the resulting string is written to the standard output stream.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">`ToString`</ph>メソッドの<ph id="ph2">`value`</ph>は、文字列形式を生成するために呼び出され、結果の文字列が標準出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">指定した単精度浮動小数点値の、現在の行終端記号を標準出力ストリームに続くテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.Single.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.Single.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Single.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>Writes the specified string value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">現在の行終端記号を標準出力ストリームの後に、指定した文字列値を書き込みます。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>If value is <ph id="ph1">`null`</ph>, only the line terminator is written to the standard output stream.</source>
          <target state="translated">値が場合<ph id="ph1">`null`</ph>、行終端記号だけが標準出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine&gt; method.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine&gt;メソッド&lt;/xref:System.Console.WriteLine&gt;。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">指定した 32 ビット符号なし整数値の現在の行終端記号を標準出力ストリームに後のテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.UInt32.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.UInt32.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.UInt32.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">指定した 64 ビット符号なし整数値の現在の行終端記号を標準出力ストリームに後のテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the &lt;xref:System.UInt64.ToString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">テキスト表現<ph id="ph1">`value`</ph>呼び出しによって生成された、&lt;xref:System.UInt64.ToString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.UInt64.ToString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">書き込む値。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">指定した書式情報を使用して、標準出力ストリームに、現在行終端記号を指定したオブジェクトのテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>をテキスト形式のオブジェクトの値を変換し、その表現を文字列に埋め込むには、.NET Framework のです。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">結果の文字列は、出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または&amp;1; つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">書式設定のプロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">書式指定項目の構文は<ph id="ph1">`{`</ph><bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>配置<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>必須インデックス オプションの長さ、フォーマットされたテキストの配置を指定して、オプションの対応する値のオブジェクトを制御する書式指定子文字の文字列の形式が、します。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>-   For more information about the composite formatting feature supported by methods such as &lt;xref:System.String.Format%2A&gt;, &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;, and some overloads of &lt;xref:System.Console.WriteLine%2A&gt;, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>.</source>
          <target state="translated">、などのメソッドでサポートされている複合書式指定機能の詳細については&lt;xref:System.String.Format%2A&gt;、 &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;、および一部のオーバー ロードの&lt;xref:System.Console.WriteLine%2A&gt;を参照してください<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>&lt;/xref:System.Console.WriteLine%2A&gt;&lt;/xref:System.Text.StringBuilder.AppendFormat%2A&gt;&lt;/xref:System.String.Format%2A&gt;。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>-   For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>-   For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-についての日付と時刻の書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>-   For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-列挙型書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>-   For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細についてを参照してください<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>A composite format string (see Remarks).</source>
          <target state="translated">複合書式指定文字列 (「解説」を参照してください)。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>An object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">使用して書き込むオブジェクト<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>The format specification in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">書式指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">format</ph> <ept id="p1">&lt;/code&gt;</ept>が無効です。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">指定された、現在の行終端記号を指定した書式情報を使用して、標準出力ストリームに続いてオブジェクトの配列のテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>This method uses the  <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>をテキスト形式のオブジェクトの値を変換し、その表現を文字列に埋め込むには、.NET Framework のです。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">結果の文字列は、出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または&amp;1; つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">書式設定のプロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">書式指定項目の構文は<ph id="ph1">`{`</ph><bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>配置<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>必須インデックス オプションの長さ、フォーマットされたテキストの配置を指定して、オプションの対応する値のオブジェクトを制御する書式指定子文字の文字列の形式が、します。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>-   For more information about the composite formatting feature supported by methods such as &lt;xref:System.String.Format%2A&gt;, &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;, and some overloads of &lt;xref:System.Console.WriteLine%2A&gt;, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>.</source>
          <target state="translated">、などのメソッドでサポートされている複合書式指定機能の詳細については&lt;xref:System.String.Format%2A&gt;、 &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;、および一部のオーバー ロードの&lt;xref:System.Console.WriteLine%2A&gt;を参照してください<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>&lt;/xref:System.Console.WriteLine%2A&gt;&lt;/xref:System.Text.StringBuilder.AppendFormat%2A&gt;&lt;/xref:System.String.Format%2A&gt;。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>-   For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>-   For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-についての日付と時刻の書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>-   For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-列挙型書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>-   For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細についてを参照してください<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>A composite format string (see Remarks).</source>
          <target state="translated">複合書式指定文字列 (「解説」を参照してください)。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>An array of objects to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">使用して書き込むオブジェクトの配列<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;arg&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;arg&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>The format specification in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">書式指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">format</ph> <ept id="p1">&lt;/code&gt;</ept>が無効です。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">Unicode 文字が、現在の行終端記号を標準出力ストリームに続くの指定した部分配列を書き込みます。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>This method writes <ph id="ph1">`count`</ph> characters starting at position <ph id="ph2">`index`</ph> of <ph id="ph3">`buffer`</ph> to the standard output stream.</source>
          <target state="translated">このメソッドは書き込みます<ph id="ph1">`count`</ph>位置から始まる文字<ph id="ph2">`index`</ph>の<ph id="ph3">`buffer`</ph>を標準出力ストリームにします。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>An array of Unicode characters.</source>
          <target state="translated">Unicode 文字の配列。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>The starting position in <ph id="ph1">`buffer`</ph>.</source>
          <target state="translated">内の開始位置<ph id="ph1">`buffer`</ph>です。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>The number of characters to write.</source>
          <target state="translated">書き込む文字の数。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>または<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>が&amp;0; 未満です。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> plus <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> specify a position that is not within <ph id="ph3">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>plus<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>内ではない位置を指定する<ph id="ph3">&lt;code&gt;buffer&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">指定した書式情報を使用して、標準出力ストリームに、現在行終端記号を指定したオブジェクトのテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>をテキスト形式のオブジェクトの値を変換し、その表現を文字列に埋め込むには、.NET Framework のです。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">結果の文字列は、出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または&amp;1; つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">書式設定のプロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">書式指定項目の構文は<ph id="ph1">`{`</ph><bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>配置<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>必須インデックス オプションの長さ、フォーマットされたテキストの配置を指定して、オプションの対応する値のオブジェクトを制御する書式指定子文字の文字列の形式が、します。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>-   For more information about the composite formatting feature supported by methods such as &lt;xref:System.String.Format%2A&gt;, &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;, and some overloads of &lt;xref:System.Console.WriteLine%2A&gt;, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>.</source>
          <target state="translated">、などのメソッドでサポートされている複合書式指定機能の詳細については&lt;xref:System.String.Format%2A&gt;、 &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;、および一部のオーバー ロードの&lt;xref:System.Console.WriteLine%2A&gt;を参照してください<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>&lt;/xref:System.Console.WriteLine%2A&gt;&lt;/xref:System.Text.StringBuilder.AppendFormat%2A&gt;&lt;/xref:System.String.Format%2A&gt;。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>-   For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>-   For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-についての日付と時刻の書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>-   For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-列挙型書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>-   For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細についてを参照してください<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>A composite format string (see Remarks).</source>
          <target state="translated">複合書式指定文字列 (「解説」を参照してください)。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>The first object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">最初のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>The second object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">2 番目のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>The format specification in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">書式指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">format</ph> <ept id="p1">&lt;/code&gt;</ept>が無効です。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">指定した書式情報を使用して、標準出力ストリームに、現在行終端記号を指定したオブジェクトのテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>をテキスト形式のオブジェクトの値を変換し、その表現を文字列に埋め込むには、.NET Framework のです。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">結果の文字列は、出力ストリームに書き込まれます。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または&amp;1; つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">書式設定のプロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">書式指定項目の構文は<ph id="ph1">`{`</ph><bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>配置<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>必須インデックス オプションの長さ、フォーマットされたテキストの配置を指定して、オプションの対応する値のオブジェクトを制御する書式指定子文字の文字列の形式が、します。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>-   For more information about the composite formatting feature supported by methods such as &lt;xref:System.String.Format%2A&gt;, &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;, and some overloads of &lt;xref:System.Console.WriteLine%2A&gt;, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>.</source>
          <target state="translated">、などのメソッドでサポートされている複合書式指定機能の詳細については&lt;xref:System.String.Format%2A&gt;、 &lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;、および一部のオーバー ロードの&lt;xref:System.Console.WriteLine%2A&gt;を参照してください<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](../Topic/Composite%20Formatting.md)</ept>&lt;/xref:System.Console.WriteLine%2A&gt;&lt;/xref:System.Text.StringBuilder.AppendFormat%2A&gt;&lt;/xref:System.String.Format%2A&gt;。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>-   For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>-   For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-についての日付と時刻の書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>-   For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-列挙型書式指定子の詳細についてを参照してください<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>-   For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細についてを参照してください<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>For more information about the line terminator, see the Remarks section of the &lt;xref:System.Console.WriteLine%2A&gt; method that takes no parameters.</source>
          <target state="translated">行終端記号の詳細については、の「解説」セクションを参照してください、&lt;xref:System.Console.WriteLine%2A&gt;パラメーターをとらないメソッド。&lt;/xref:System.Console.WriteLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>A composite format string (see Remarks).</source>
          <target state="translated">複合書式指定文字列 (「解説」を参照してください)。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>The first object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">最初のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>The second object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">2 番目のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>The third object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">使用して書き込む&amp;3; 番目のオブジェクト<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>The format specification in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">書式指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">format</ph> <ept id="p1">&lt;/code&gt;</ept>が無効です。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>Writes the text representation of the specified objects and variable-length parameter list, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">指定したオブジェクトと、現在の行終端記号を指定した書式情報を使用して、標準出力ストリームに続けて、可変長パラメーター リストのテキスト表現を書き込みます。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>A composite format string (see Remarks).</source>
          <target state="translated">複合書式指定文字列 (「解説」を参照してください)。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>The first object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">最初のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>The second object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">2 番目のオブジェクトを使用して書き込む<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>The third object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">使用して書き込む&amp;3; 番目のオブジェクト<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>The fourth object to write using <ph id="ph1">`format`</ph>.</source>
          <target state="translated">使用して書き込む&amp;4; 番目のオブジェクト<ph id="ph1">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>The format specification in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">書式指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">format</ph> <ept id="p1">&lt;/code&gt;</ept>が無効です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>