<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c04b341308ea15e47bf2e860371c3815324366e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Resources.ResourceWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa1d1788b616757d3a9d4e4dd0c896f7ec109fb2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3763fba3ef4977382e00f546fb7947fee233cd31</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Writes resources in the system-default format to an output file or an output stream.</source>
          <target state="translated">システム既定の形式でリソースを出力ファイルまたは出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ResourceWriter provides a default implementation of the &lt;xref:System.Resources.IResourceWriter&gt; interface.</source>
          <target state="translated">付けての既定の実装を提供する、&lt;xref:System.Resources.IResourceWriter&gt;インターフェイス&lt;/xref:System.Resources.IResourceWriter&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It enables you to programmatically create a binary resource (.resources) file.</source>
          <target state="translated">バイナリ リソース (.resources) ファイルをプログラムで作成することができます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Resources are specified as name and value pairs using the &lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt; method.</source>
          <target state="translated">リソースが使用する名前と値のペアとして指定された、&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;メソッド&lt;/xref:System.Resources.ResourceWriter.AddResource%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Resource names are case-sensitive when used for lookups, but to more easily support authoring tools and help eliminate bugs, ResourceWriter will not allow a .resources file to have names that vary only by case.</source>
          <target state="translated">リソース名が参照については、使用すると大文字小文字を区別がより簡単に作成ツールをサポートし、バグを排除できます、付けて、ケースのみが異なる名前を持つことの .resources ファイルです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The ResourceWriter class enables you to create string, object, and binary resources.</source>
          <target state="translated">付けてクラスでは、文字列、オブジェクト、およびバイナリのリソースを作成することができます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Binary resources can be written to the resource file as a byte array or a stream.</source>
          <target state="translated">バイナリのリソースは、バイト配列またはストリームとしてリソース ファイルに書き込むことができます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; この型は、&lt;xref:System.IDisposable&gt;インターフェイス&lt;/xref:System.IDisposable&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">型の直接 dispose を呼び出す、&lt;xref:System.IDisposable.Dispose%2A&gt;メソッドで、 <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph>ブロック&lt;/xref:System.IDisposable.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">直接ことのない破棄する場合など、言語コンストラクトを使用して<ph id="ph1">`using`</ph>(C# の場合) または<ph id="ph2">`Using`</ph>(Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、&lt;xref:System.IDisposable&gt;インターフェイスに関するトピック&lt;/xref:System.IDisposable&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To create a resources file, create a ResourceWriter with a unique file name, call &lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt; at least once, call &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; to write the resources file to disk, and then call &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; to close the file.</source>
          <target state="translated">リソース ファイルを作成するには、一意のファイル名、呼び出しで、付けてを作成&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;を少なくとも&amp;1; 回呼び出す&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;リソース ファイルをディスクに書き込むし、呼び出す&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;ファイルを閉じます&lt;/xref:System.Resources.ResourceWriter.Close%2A&gt;&lt;/xref:System.Resources.ResourceWriter.Generate%2A&gt;&lt;/xref:System.Resources.ResourceWriter.AddResource%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Calling &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; will implicitly call &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; if you do not explicitly call &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;.</source>
          <target state="translated">呼び出す&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;。&lt;/xref:System.Resources.ResourceWriter.Generate%2A&gt;明示的に呼び出す場合&lt;/xref:System.Resources.ResourceWriter.Generate%2A&gt;は暗黙的に呼び出します&lt;/xref:System.Resources.ResourceWriter.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The resources will not necessarily be written in the same order they were added.</source>
          <target state="translated">リソースはない追加されたのと同じ順序で記述とは限りません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To retrieve resources from a binary .resources file created by the ResourceWriter class, you can use the &lt;xref:System.Resources.ResourceManager&gt; class, which lets you retrieve named resources, or the &lt;xref:System.Resources.ResourceReader&gt; class, which lets you enumerate all the resources in the file.</source>
          <target state="translated">使用することができますを付けてクラスによって作成されたバイナリの .resources ファイルからリソースを取得する、&lt;xref:System.Resources.ResourceManager&gt;クラスは、名前付きリソースを取得することができます、または&lt;xref:System.Resources.ResourceReader&gt;クラスは、ファイル内のすべてのリソースを列挙することができます&lt;/xref:System.Resources.ResourceReader&gt;&lt;/xref:System.Resources.ResourceManager&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to the provided stream.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス リソースを指定されたストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The output stream.</source>
          <target state="translated">出力ストリーム。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not writable.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">stream</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが書き込み可能ではありません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to the specified file.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス リソースを指定したファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The output file name.</source>
          <target state="translated">出力ファイル名。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as a byte array to the list of resources to be written.</source>
          <target state="translated">書き込むリソースの一覧に、バイト配列として指定された名前付きリソースを追加します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The resource is not written until &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; is called.</source>
          <target state="translated">リソースはまで書き込まれません&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;と呼びます&lt;/xref:System.Resources.ResourceWriter.Generate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">呼び出して AddResource メソッドによって記述されたリソースを取得することができます、&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Value of the resource as an 8-bit unsigned integer array.</source>
          <target state="translated">8 ビット符号なし整数の配列として、リソースの値です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>(または大文字と小文字によってのみ変化する名) に既に追加されて<bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.</source>
          <target state="translated">これは、 <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は閉じられて、そのハッシュ テーブルは使用できません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as a stream to the list of resources to be written.</source>
          <target state="translated">書き込むリソースの一覧に、ストリームとして指定された名前付きリソースを追加します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can specify any stream that supports the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property for <ph id="ph1">`value`</ph>.</source>
          <target state="translated">サポートするすべてのストリームを指定することができます、&lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt;プロパティ<ph id="ph1">`value`</ph>&lt;/xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">呼び出して AddResource メソッドによって記述されたリソースを取得することができます、&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The name of the resource to add.</source>
          <target state="translated">追加するリソースの名前。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The value of the resource to add.</source>
          <target state="translated">追加するリソースの値。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The resource must support the <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property.</source>
          <target state="translated">リソースをサポートする必要があります、 <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>(または大文字と小文字によってのみ変化する名) に既に追加されて<bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-or-       The stream does not support the <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property.</source>
          <target state="translated">- または -、ストリームをサポートしません、 <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed.</source>
          <target state="translated">これは、 <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が閉じられました。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as an object to the list of resources to be written.</source>
          <target state="translated">書き込むリソースの一覧に、オブジェクトとして指定された名前付きリソースを追加します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`value`</ph> must be serializable.</source>
          <target state="translated"><ph id="ph1">`value`</ph>シリアル化可能である必要があります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The resource is not written until the &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; method is called.</source>
          <target state="translated">リソースはまで書き込まれません、&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;メソッドが呼び出されます&lt;/xref:System.Resources.ResourceWriter.Generate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">呼び出して AddResource メソッドによって記述されたリソースを取得することができます、&lt;xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The value of the resource.</source>
          <target state="translated">リソースの値です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>(または大文字と小文字によってのみ変化する名) に既に追加されて<bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.</source>
          <target state="translated">これは、 <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は閉じられて、そのハッシュ テーブルは使用できません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Adds a string resource to the list of resources to be written.</source>
          <target state="translated">書き込むリソースの一覧には、文字列リソースを追加します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The resource is not written until &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; is called.</source>
          <target state="translated">リソースはまで書き込まれません&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;と呼びます&lt;/xref:System.Resources.ResourceWriter.Generate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">呼び出して AddResource メソッドによって記述されたリソースを取得することができます、&lt;xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The value of the resource.</source>
          <target state="translated">リソースの値です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this ResourceWriter.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>(または大文字と小文字によってのみ変化する名) は、この付けてに既に追加されています。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.</source>
          <target state="translated">これは、 <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は閉じられて、そのハッシュ テーブルは使用できません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as a stream to the list of resources to be written, and specifies whether the stream should be closed after the &lt;xref:System.Resources.ResourceWriter.Generate*&gt; method is called.</source>
          <target state="translated">書き込まれるリソースの一覧に、ストリームとして指定された名前付きリソースの追加後にストリームを閉じる必要があるかどうかを指定し、&lt;xref:System.Resources.ResourceWriter.Generate*&gt;メソッドが呼び出されます&lt;/xref:System.Resources.ResourceWriter.Generate*&gt;。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can specify any stream that supports the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property for <ph id="ph1">`value`</ph>.</source>
          <target state="translated">サポートするすべてのストリームを指定することができます、&lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt;プロパティ<ph id="ph1">`value`</ph>&lt;/xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can retrieve the resources written by the AddResource method by calling the &lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">呼び出して AddResource メソッドによって記述されたリソースを取得することができます、&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The name of the resource to add.</source>
          <target state="translated">追加するリソースの名前。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The value of the resource to add.</source>
          <target state="translated">追加するリソースの値。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The resource must support the <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property.</source>
          <target state="translated">リソースをサポートする必要があります、 <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to close the stream after the &lt;xref:System.Resources.ResourceWriter.Generate*&gt; method is called; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>後にストリームを閉じない、&lt;xref:System.Resources.ResourceWriter.Generate*&gt;メソッドが呼び出される、それ以外の<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Resources.ResourceWriter.Generate*&gt; 。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>(または大文字と小文字によってのみ変化する名) に既に追加されて<bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-or-       The stream does not support the <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property.</source>
          <target state="translated">- または -、ストリームをサポートしません、 <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.Length%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed.</source>
          <target state="translated">これは、 <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が閉じられました。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Adds a unit of data as a resource to the list of resources to be written.</source>
          <target state="translated">書き込むリソースの一覧にリソースとしてデータの単位を追加します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Use the AddResourceData method to add a resource in binary form (that is, as an array of bytes) to the list of resources to be written.</source>
          <target state="translated">AddResourceData メソッドを使用して、バイナリ形式のリソースを追加する (つまり、バイト配列として) 書き込むリソースの一覧にします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You must specify the name of the resource, the type name of the data contained in the resource, and the binary representation of the data itself.</source>
          <target state="translated">リソース、リソース、およびデータ自体のバイナリ表現に含まれるデータの型名の名前を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>After you have added each resource you require, use the &lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; method to write the list of resources to the resources file or stream that was specified in the &lt;xref:System.Resources.ResourceWriter.%23ctor%2A&gt; constructor.</source>
          <target state="translated">必要な各リソースを追加した後を使用して、&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;で指定されたリソース ファイルにリソースの一覧を書き込んだり、ストリームをメソッド、&lt;xref:System.Resources.ResourceWriter.%23ctor%2A&gt;コンス トラクター&lt;/xref:System.Resources.ResourceWriter.%23ctor%2A&gt; &lt;/xref:System.Resources.ResourceWriter.Generate%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`typeName`</ph> is a string that represents the data type of the resource.</source>
          <target state="translated"><ph id="ph1">`typeName`</ph>リソースのデータ型を表す文字列です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>It can be any of the following values:      -   The string representation of a <ph id="ph1">`ResourceTypeCode`</ph> enumeration member that indicates the data type of the resource.</source>
          <target state="translated">次の値のいずれかのことができます:-の文字列形式を、<ph id="ph1">`ResourceTypeCode`</ph>リソースのデータ型を示す列挙メンバー。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ResourceTypeCode`</ph> is a private enumeration that is used by  to indicate that a special binary format is used to store one of 19 common data types.</source>
          <target state="translated"><ph id="ph1">`ResourceTypeCode`</ph>19 の一般的なデータ型のいずれかの格納に特殊なバイナリ形式を使用することを示すために使用されるプライベート列挙です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>These include the .NET Framework primitive data types (&lt;xref:System.Boolean&gt;, &lt;xref:System.Byte&gt;, &lt;xref:System.Char&gt;, &lt;xref:System.Decimal&gt;, &lt;xref:System.Double&gt;, &lt;xref:System.Int16&gt;, &lt;xref:System.Int32&gt;, &lt;xref:System.Int64&gt;, &lt;xref:System.Single&gt;, &lt;xref:System.SByte&gt;, &lt;xref:System.UInt16&gt;, &lt;xref:System.UInt32&gt;, &lt;xref:System.UInt64&gt;), as well as &lt;xref:System.String&gt;, &lt;xref:System.DateTime&gt;, and &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">.NET Framework のプリミティブ データ型が含まれます (&lt;xref:System.Boolean&gt;、 &lt;xref:System.Byte&gt;、 &lt;xref:System.Char&gt;、 &lt;xref:System.Decimal&gt;、 &lt;xref:System.Double&gt;、 &lt;xref:System.Int16&gt;、 &lt;xref:System.Int32&gt;、 &lt;xref:System.Int64&gt;、 &lt;xref:System.Single&gt;、 &lt;xref:System.SByte&gt;、 &lt;xref:System.UInt16&gt;、 &lt;xref:System.UInt32&gt;、 &lt;xref:System.UInt64&gt;)、だけでなく&lt;xref:System.String&gt;、 &lt;xref:System.DateTime&gt;、 &lt;xref:System.TimeSpan&gt;&lt;/xref:System.TimeSpan&gt; &lt;/xref:System.DateTime&gt; &lt;/xref:System.String&gt; &lt;/xref:System.UInt64&gt; &lt;/xref:System.UInt32&gt; &lt;/xref:System.UInt16&gt; &lt;/xref:System.SByte&gt; &lt;/xref:System.Single&gt; &lt;/xref:System.Int64&gt; &lt;/xref:System.Int32&gt; &lt;/xref:System.Int16&gt; &lt;/xref:System.Double&gt; &lt;/xref:System.Decimal&gt; &lt;/xref:System.Char&gt; &lt;/xref:System.Byte&gt; &lt;/xref:System.Boolean&gt; 。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In addition, the <ph id="ph1">`ResourceTypeCode`</ph> enumeration includes the values shown in the following table.</source>
          <target state="translated">さらに、<ph id="ph1">`ResourceTypeCode`</ph>列挙には、次の表に示すように値が含まれています。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>|<ph id="ph1">`ResourceTypeCode`</ph> value|Description|       |------------------------------|-----------------|       |<ph id="ph2">`ResourceTypeCode.ByteArray`</ph>|The data is a byte array.|       |<ph id="ph3">`ResourceTypeCode.Null`</ph>|The data is a null reference.|       |<ph id="ph4">`ResourceTypeCode.Stream`</ph>|The data is stored in a stream.|      -   A string that contains the fully qualified name of the type whose binary data is assigned to the <ph id="ph5">`serializedData`</ph> argument (for example, <ph id="ph6">`System.String`</ph>).</source>
          <target state="translated">|<ph id="ph1">`ResourceTypeCode`</ph>値 |説明 |      |------------------------------|-----------------|      |<ph id="ph2">`ResourceTypeCode.ByteArray`</ph>|このデータはバイト配列です |。      |<ph id="ph3">`ResourceTypeCode.Null`</ph>|データが null 参照 |。      |<ph id="ph4">`ResourceTypeCode.Stream`</ph>|ストリーム内のデータが格納されている |。     -バイナリ データを含むに割り当てられた型の完全修飾名を含む文字列、<ph id="ph5">`serializedData`</ph>引数 (たとえば、 <ph id="ph6">`System.String`</ph>)。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</source>
          <target state="translated">さらに、.NET Framework クラス ライブラリの一部ではない型、文字列が含まれます名前、バージョン、カルチャ、および種類を含むアセンブリの公開キー。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example, the following string indicates that the serialized data represents an instance of the <ph id="ph1">`Person`</ph> type in the <ph id="ph2">`Extensions`</ph> namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</source>
          <target state="translated">たとえば、次の文字列を示します、シリアル化データがのインスタンスを表すこと、<ph id="ph1">`Person`</ph>に入力、<ph id="ph2">`Extensions`</ph>ない公開キーとなしの指定されたカルチャを持つユーティリティをという名前のアセンブリのバージョン 1.0 である名前空間。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`</ph>       A parallel method for reading resource data written with the AddResourceData method is &lt;xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName&gt;.</source>
          <target state="translated"><ph id="ph1">`Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`</ph>並列 AddResourceData メソッドを使用して書き込まれたデータはリソースを読み取るメソッドが&lt;xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName&gt;。&lt;/xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A name that identifies the resource that contains the added data.</source>
          <target state="translated">追加するデータが含まれるリソースを識別する名前。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The type name of the added data.</source>
          <target state="translated">追加するデータの型名。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section.</source>
          <target state="translated">詳細については、「解説」セクションを参照してください。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A byte array that contains the binary representation of the added data.</source>
          <target state="translated">追加するデータのバイナリ表現を含むバイト配列。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;typeName&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;serializedData&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;typeName&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;serializedData&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> (or a name that varies only by capitalization) has already been added to this <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>(または大文字と小文字によってのみ変化する名) に既に追加されて<bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is not initialized.</source>
          <target state="translated">現在<bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトが初期化されていません。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The probable cause is that the <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is closed.</source>
          <target state="translated">考えられる原因は、 <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが閉じられています。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Saves the resources to the output stream and then closes it.</source>
          <target state="translated">出力ストリームにリソースを保存してから閉じます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt; is called implicitly by Close, if required.</source>
          <target state="translated">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;によって呼び出されます暗黙的に閉じるのために必要な場合。&lt;/xref:System.Resources.ResourceWriter.Generate%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An I/O error has occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An error has occurred during serialization of the object.</source>
          <target state="translated">オブジェクトのシリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Allows users to close the resource file or stream, explicitly releasing resources.</source>
          <target state="translated">リソース ファイルまたはリソースを明示的に解放するストリームを閉じることができます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The implementation of this method is the same as &lt;xref:System.Resources.ResourceWriter.Close%2A&gt;.</source>
          <target state="translated">このメソッドの実装は&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;。&lt;/xref:System.Resources.ResourceWriter.Close%2A&gt;と同じ</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An I/O error has occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An error has occurred during serialization of the object.</source>
          <target state="translated">オブジェクトのシリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Saves all resources to the output stream in the system default format.</source>
          <target state="translated">システム既定の形式で出力ストリームにすべてのリソースを保存します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The Generate method is called implicitly by the &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; method if it is not called by your application code.</source>
          <target state="translated">生成するメソッドはによって暗黙的に呼び出されます、&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;メソッドの場合は、アプリケーション コードからは呼び出されません&lt;/xref:System.Resources.ResourceWriter.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Generate can only be called once, after all calls to &lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt; and &lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt; have been made.</source>
          <target state="translated">生成できる&amp;1; 回しか呼べません、すべての呼び出し後に&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;と&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;が加えられました&lt;/xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;&lt;/xref:System.Resources.ResourceWriter.AddResource%2A&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If an exception occurs while writing the resources, the output stream will be closed to prevent writing invalid information.</source>
          <target state="translated">リソースの書き込み中に例外が発生する場合は、無効な情報の書き込みを防ぐために出力ストリームが閉じられます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Generate does not close the output stream in normal cases.</source>
          <target state="translated">生成する通常の出力ストリームを閉じられません。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call &lt;xref:System.Resources.ResourceWriter.Close%2A&gt; after calling Generate, or simply call &lt;xref:System.Resources.ResourceWriter.Close%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;呼び出し元を生成する、または単に呼び出し&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;。&lt;/xref:System.Resources.ResourceWriter.Close%2A&gt;後に&lt;/xref:System.Resources.ResourceWriter.Close%2A&gt;呼び出す必要は .resources ファイルに余分なデータの結合はした場合、またはストリームへのアクセスをその後必要がありますしない限り、</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An error occurred during serialization of the object.</source>
          <target state="translated">オブジェクトのシリアル化中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been closed and its hash table is unavailable.</source>
          <target state="translated">これは、 <bpt id="p1">&lt;xref href="System.Resources.ResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は閉じられて、そのハッシュ テーブルは使用できません。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework prior to the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">リソース アセンブリの書き込みを可能にするデリゲートを対象とするより前のバージョンの .NET Framework のバージョンを取得または設定、<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>アセンブリの修飾名を使用しています。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]</ph> and MSBuild set this property if you target an earlier version of the .NET Framework.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]</ph>MSBuild は、.NET Framework の以前のバージョンを対象とする場合にこのプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The type that is encapsulated by the delegate.</source>
          <target state="translated">デリゲートによってカプセル化される型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>