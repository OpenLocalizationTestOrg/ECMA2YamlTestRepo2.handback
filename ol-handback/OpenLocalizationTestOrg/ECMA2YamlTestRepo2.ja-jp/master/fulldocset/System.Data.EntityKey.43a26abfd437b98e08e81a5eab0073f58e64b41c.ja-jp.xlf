<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">efbac770e5bdcf84c32eb66640f923cd965fb3d5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.EntityKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7fc8600da8f67451b4eb4a72f614b843a1d6514</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6db16fbb9916488371908d739f4d0e57f66cf452</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a durable reference to an object that is an instance of an entity type.</source>
          <target state="translated">エンティティ型のインスタンスであるオブジェクトへの永続的な参照を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The EntityKey objects are immutable; that is, after they are constructed they cannot be modified.</source>
          <target state="translated">EntityKey オブジェクトは変更できません。つまり、構築後それらを変更できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Entity Keys<ept id="p1">](http://msdn.microsoft.com/en-us/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>エンティティ キーの使用<ept id="p1">](http://msdn.microsoft.com/en-us/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)</ept>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an entity set name and a generic &lt;xref:System.Collections.Generic.KeyValuePair&gt; collection.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>エンティティ セット名およびジェネリック型を持つクラス&lt;xref:System.Collections.Generic.KeyValuePair&gt;コレクションです&lt;/xref:System.Collections.Generic.KeyValuePair&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that is the entity set name qualified by the entity container name.</source>
          <target state="translated">A&lt;xref:System.String&gt;エンティティ コンテナー名で修飾されたエンティティ セットの名前です&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A generic &lt;xref:System.Collections.Generic.KeyValuePair&gt; collection.</source>
          <target state="translated">汎用的な&lt;xref:System.Collections.Generic.KeyValuePair&gt;コレクションです&lt;/xref:System.Collections.Generic.KeyValuePair&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Each key/value pair has a property name as the key and the value of that property as the value.</source>
          <target state="translated">キー/値の各ペアは、キーと値としてそのプロパティの値としてプロパティ名を持ちます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>There should be one pair for each property that is part of the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">1 組の各プロパティの一部である必要があります、 <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The order of the key/value pairs is not important, but each key property should be included.</source>
          <target state="translated">キー/値ペアの順序は重要ではありませんが、各キー プロパティを含める必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The property names are simple names that are not qualified with an entity type name or the schema name.</source>
          <target state="translated">プロパティ名は、エンティティ型の名前またはスキーマ名で修飾されていない単純な名前です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an entity set name and an <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph> collection of <bpt id="p2">&lt;xref href="System.Data.EntityKeyMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>エンティティ セット名を持つクラスと<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph>のコレクション<bpt id="p2">&lt;xref href="System.Data.EntityKeyMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that is the entity set name qualified by the entity container name.</source>
          <target state="translated">A&lt;xref:System.String&gt;エンティティ コンテナー名で修飾されたエンティティ セットの名前です&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph> collection of <bpt id="p1">&lt;xref href="System.Data.EntityKeyMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects with which to initialize the key.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>Xref:System.Collections.Generic.IEnumerable%601<ph id="ph2">&amp;gt;</ph>のコレクション<bpt id="p1">&lt;xref href="System.Data.EntityKeyMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>キーの初期化に使用するオブジェクト。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an entity set name and specific entity key pair.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>エンティティ セット名および特定のエンティティ キーのペアを持つクラス。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that is the entity set name qualified by the entity container name.</source>
          <target state="translated">A&lt;xref:System.String&gt;エンティティ コンテナー名で修飾されたエンティティ セットの名前です&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that is the name of the key.</source>
          <target state="translated">A&lt;xref:System.String&gt;のキーの名前&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is the key value.</source>
          <target state="translated">&lt;xref:System.Object&gt;キー値である&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the entity container.</source>
          <target state="translated">取得またはエンティティ コンテナーの名前を設定します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; value that is the name of the entity container for the entity to which the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> belongs.</source>
          <target state="translated">A&lt;xref:System.String&gt;するエンティティのエンティティ コンテナーの名前を指定する値、 <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が属している&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets the key values associated with this <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これに関連付けられているキーの値の設定を取得または<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.EntityKey&gt; class contains a copy of the values that make up the logical key that is specified for this type of entity.</source>
          <target state="translated">&lt;xref:System.Data.EntityKey&gt;クラスには、この種類のエンティティが指定されている論理キーを構成する値のコピーが含まれています&lt;/xref:System.Data.EntityKey&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The members of the &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; each have a property name and a value in a &lt;xref:System.Collections.Generic.KeyValuePair%602&gt;, where the key is the property name and the value is the actual value of that property on the object.</source>
          <target state="translated">メンバー、&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;プロパティの名前と値がある各、&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;キーは、プロパティ名、値がそのオブジェクトのプロパティの実際の値&lt;/xref:System.Collections.Generic.KeyValuePair%602&gt;&lt;/xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of key values for this <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph>キーの値の<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A simple <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifying an entity that resulted from a failed <bpt id="p2">[</bpt>TREAT<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept> operation.</source>
          <target state="translated">単純な<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>失敗した原因となったエンティティを識別する<bpt id="p2">[</bpt>扱う<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>操作します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>There are various ways to get an invalid entity.</source>
          <target state="translated">無効なエンティティを取得するさまざまな方法はあります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The most common scenario is when an <ph id="ph1">[!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)]</ph> query uses the <bpt id="p1">[</bpt>TREAT<ept id="p1">](../Topic/TREAT%20\(Entity%20SQL\).md)</ept> operator to interpret an instance of a polymorphic type as a particular type, and the instance in question does not match.</source>
          <target state="translated">最も一般的なシナリオは、ときに、<ph id="ph1">[!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)]</ph>のクエリは、<bpt id="p1">[</bpt>扱う<ept id="p1">](../Topic/TREAT%20\(Entity%20SQL\).md)</ept>を特定の型としてポリモーフィックな型のインスタンスと対象のインスタンスを解釈する演算子と一致しません。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>(<bpt id="p1">[</bpt>TREAT<ept id="p1">](../Topic/TREAT%20\(Entity%20SQL\).md)</ept> is similar to the C# <ph id="ph1">`as`</ph> operator).</source>
          <target state="translated">(<bpt id="p1">[</bpt>扱う<ept id="p1">](../Topic/TREAT%20\(Entity%20SQL\).md)</ept>c# のような<ph id="ph1">`as`</ph>演算子)。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this case, the query returns an entity that is not valid, and the entity key of the resulting entity is set to EntityNotValidKey.</source>
          <target state="translated">この場合、クエリが無効な場合は、エンティティを返す EntityNotValidKey に結果として得られるエンティティのエンティティ キーが設定されています。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the entity set.</source>
          <target state="translated">取得またはエンティティ セットの名前を設定します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; value that is the name of the entity set for the entity to which the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> belongs.</source>
          <target state="translated">A&lt;xref:System.String&gt;するエンティティのエンティティの名前を指定する値を設定、 <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が属している&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this instance is equal to a specified <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このインスタンスが、指定したのと同じかどうかを示す値を返します<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Temporary keys have different comparison semantics than permanent keys:      -   Temporary keys use reference equality.</source>
          <target state="translated">一時キーは、永久キー別々 の比較セマンティクスを持つ:-一時キーは、参照の等価性を使用します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>That is, two references to the exact same temporary &lt;xref:System.Data.EntityKey&gt; instance are equal but no other &lt;xref:System.Data.EntityKey&gt; instances are equal.</source>
          <target state="translated">つまり、2 つの参照、正確に同じ一時&lt;xref:System.Data.EntityKey&gt;インスタンスが同一の他の&lt;xref:System.Data.EntityKey&gt;インスタンスが等しい&lt;/xref:System.Data.EntityKey&gt;&lt;/xref:System.Data.EntityKey&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-   Permanent keys determine equality based on the values of the contained key properties and the &lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.</source>
          <target state="translated">-永続的なキーが含まれているキー プロパティと&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;。&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;の値に基づく等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>That is, you can have two separate &lt;xref:System.Data.EntityKey&gt; instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">つまり、2 つを持つことができます&lt;xref:System.Data.EntityKey&gt;そのエンティティ セットが同じで、キーの値が等しい場合は、インスタンスが等しい&lt;/xref:System.Data.EntityKey&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In addition, temporary keys have no &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; or key values, but permanent keys do.</source>
          <target state="translated">さらに、一時キーがあるいない&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;か、キーの値が永久キーか&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to compare with this instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this instance and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">other</ph><ept id="p2">&lt;/code&gt;</ept> have equal values; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合はこのインスタンスと<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">other</ph> <ept id="p2">&lt;/code&gt;</ept>同じ値を持つ、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">このインスタンスが指定したオブジェクトと等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Temporary keys have different comparison semantics than permanent keys:      -   Temporary keys use reference equality.</source>
          <target state="translated">一時キーは、永久キー別々 の比較セマンティクスを持つ:-一時キーは、参照の等価性を使用します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>That is, two references to the exact same temporary &lt;xref:System.Data.EntityKey&gt; instance are equal but no other &lt;xref:System.Data.EntityKey&gt; instances are equal.</source>
          <target state="translated">つまり、2 つの参照、正確に同じ一時&lt;xref:System.Data.EntityKey&gt;インスタンスが同一の他の&lt;xref:System.Data.EntityKey&gt;インスタンスが等しい&lt;/xref:System.Data.EntityKey&gt;&lt;/xref:System.Data.EntityKey&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-   Permanent keys determine equality based on the values of the contained key properties and the &lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.</source>
          <target state="translated">-永続的なキーが含まれているキー プロパティと&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;。&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;の値に基づく等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>That is, you can have two separate &lt;xref:System.Data.EntityKey&gt; instances that are equal if their &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; objects are the same and their key values are equal.</source>
          <target state="translated">つまり、2 つの異なるを持つことができます&lt;xref:System.Data.EntityKey&gt;場合は、インスタンスが等しく、&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;オブジェクトが同一で、キーの値が等しい&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;&lt;/xref:System.Data.EntityKey&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In addition, temporary keys have no &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; or key values, but permanent keys do.</source>
          <target state="translated">さらに、一時キーがあるいない&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;か、キーの値が永久キーか&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; to compare with this instance.</source>
          <target state="translated">&lt;xref:System.Object&gt;このインスタンスと比較する&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this instance and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> have equal values; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合はこのインスタンスと<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p2">&lt;/code&gt;</ept>同じ値を持つ、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the entity set for this entity key from the given metadata workspace.</source>
          <target state="translated">指定されたメタデータ ワークスペースからこのエンティティ キーの設定、エンティティを取得します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The entity set is accessed based on the entity container name and entity set name of the key.</source>
          <target state="translated">エンティティ コンテナー名に基づいてエンティティ セットにアクセスし、エンティティが、キーの名前を設定します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The metadata workspace that contains the entity.</source>
          <target state="translated">このエンティティを含むメタデータ ワークスペース。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.EntitySet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the entity key.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.EntitySet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>エンティティ キーにします。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The entity set could not be located in the specified metadata workspace.</source>
          <target state="translated">エンティティ セットが指定されたメタデータ ワークスペースで見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Serves as a hash function for the current <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">現在のハッシュ関数として機能<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>GetHashCode is suitable for hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">GetHashCode は、ハッシュ アルゴリズムやハッシュ テーブルなどのデータ構造に適しています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A hash code for the current <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">現在のハッシュ コード<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is temporary.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は一時的なものです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When a new entity is created, the <ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph> defines temporary key and sets the IsTemporary property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">新しいエンティティを作成するときに、<ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph>一時キーが定義され、IsTemporary プロパティを設定<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When you call the &lt;xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt; method, the <ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph> assigns a permanent key and sets the IsTemporary property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">呼び出すと、 &lt;xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt;、メソッド、<ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph>永続的なキーの割り当てし、IsTemporary プロパティを設定<ph id="ph2">`false`</ph>&lt;/xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Temporary keys are constructed automatically by the framework; they cannot be constructed directly by a user.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 一時キーは、フレームワークによって自動的に構築されている以外の場合は、ユーザーが直接を構築できません。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Temporary keys have different comparison semantics than permanent keys:      -   Temporary keys use reference equality.</source>
          <target state="translated">一時キーは、永久キー別々 の比較セマンティクスを持つ:-一時キーは、参照の等価性を使用します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>That is, two references to the exact same temporary &lt;xref:System.Data.EntityKey&gt; instance are equal but no other &lt;xref:System.Data.EntityKey&gt; instances are equal.</source>
          <target state="translated">つまり、2 つの参照、正確に同じ一時&lt;xref:System.Data.EntityKey&gt;インスタンスが同一の他の&lt;xref:System.Data.EntityKey&gt;インスタンスが等しい&lt;/xref:System.Data.EntityKey&gt;&lt;/xref:System.Data.EntityKey&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-   Permanent keys determine equality based on the values of the contained key properties and the &lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.</source>
          <target state="translated">-永続的なキーが含まれているキー プロパティと&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;。&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;の値に基づく等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>That is, you can have two separate &lt;xref:System.Data.EntityKey&gt; instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">つまり、2 つを持つことができます&lt;xref:System.Data.EntityKey&gt;そのエンティティ セットが同じで、キーの値が等しい場合は、インスタンスが等しい&lt;/xref:System.Data.EntityKey&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In addition, temporary keys have no &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; or key values, but permanent keys do.</source>
          <target state="translated">さらに、一時キーがあるいない&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;か、キーの値が永久キーか&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A&gt; method is called on an entity's &lt;xref:System.Data.Objects.ObjectStateEntry&gt; and the entity transitions from the &lt;xref:System.Data.EntityState&gt; state to &lt;xref:System.Data.EntityState&gt; state, the <ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph> automatically computes a new permanent key for the entity and synchronizes all temporary key references.</source>
          <target state="translated">ときに、&lt;xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A&gt;メソッドは、エンティティの&lt;xref:System.Data.Objects.ObjectStateEntry&gt;からエンティティの遷移と、&lt;xref:System.Data.EntityState&gt;状態&lt;xref:System.Data.EntityState&gt;状態、<ph id="ph1">[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</ph>自動的に、新しい永続的なエンティティのキーを計算し、一時キーのすべての参照を同期します&lt;/xref:System.Data.EntityState&gt;&lt;/xref:System.Data.EntityState&gt;&lt;/xref:System.Data.Objects.ObjectStateEntry&gt;&lt;/xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A&gt;。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is temporary; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 、それ以外の一時的な<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A singleton <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> by which a read-only entity is identified.</source>
          <target state="translated">シングルトン<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>で読み取り専用エンティティが識別されます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A read-only entity identifies an entity that is valid in every way, except that it is not associated with an actual entity set.</source>
          <target state="translated">読み取り専用エンティティでは、実際のエンティティ セットに関連付けられていないする点を除いて、すべての方法で有効なエンティティを識別します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This can occur as part of the result of an <ph id="ph1">[!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)]</ph> query that constructs and returns an entity instance specified within the text of the query (as opposed to an entity that was retrieved from a database table).</source>
          <target state="translated">これは、結果の一部として発生する、<ph id="ph1">[!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)]</ph>クエリを構築し、(データベース テーブルから取得されたエンティティ) ではなく、クエリのテキスト内で指定されたエンティティ インスタンスを返します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An entity that does not have an entity set cannot be persisted to the database until it is associated with some entity set.</source>
          <target state="translated">エンティティ セットがないエンティティは、いくつかのエンティティ セットに関連付けられるまで、データベースに保存できません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Therefore, the object materializer will treat this kind of entity as if the &lt;xref:System.Data.Objects.MergeOption&gt; merge option was specified, regardless of the actual merge option that was specified.</source>
          <target state="translated">オブジェクト materializer がこの種類のエンティティを処理するため、として、&lt;xref:System.Data.Objects.MergeOption&gt;が指定されている実際のマージ オプションに関係なく、マージ オプションが指定されました&lt;/xref:System.Data.Objects.MergeOption&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An entity object will be created, but its identity will not be resolved and it will not be added to the state manager as part of the materialization process.</source>
          <target state="translated">、エンティティ オブジェクトを作成、その id は解決されず、には追加されません、状態マネージャーに実体化プロセスの一部として。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Helper method that is used to deserialize an <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">逆シリアル化に使用されるヘルパー メソッド、 <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>OnDeserialized is used by Object Services when deserializing an &lt;xref:System.Data.EntityKey&gt;.</source>
          <target state="translated">OnDeserialized は&lt;xref:System.Data.EntityKey&gt;。&lt;/xref:System.Data.EntityKey&gt;を逆シリアル化時に、Object Services によって使用します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Serializing Objects<ept id="p1">](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>オブジェクトのシリアル化<ept id="p1">](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</source>
          <target state="translated">ソースと指定したシリアル化されたストリームの転送先について説明し、追加の呼び出し元が定義のコンテキストを提供します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Helper method that is used to deserialize an <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">逆シリアル化に使用されるヘルパー メソッド、 <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>OnDeserializing is used by Object Services when deserializing an &lt;xref:System.Data.EntityKey&gt;.</source>
          <target state="translated">OnDeserializing は&lt;xref:System.Data.EntityKey&gt;。&lt;/xref:System.Data.EntityKey&gt;を逆シリアル化時に、Object Services によって使用します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Serializing Objects<ept id="p1">](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>オブジェクトのシリアル化<ept id="p1">](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</source>
          <target state="translated">ソースと、指定したシリアル化ストリームの宛先を記述し、追加の呼び出し元が定義のコンテキストを提供します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">比較する&amp;2; つ<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Temporary keys have different comparison semantics than permanent keys:      -   Temporary keys use reference equality.</source>
          <target state="translated">一時キーは、永久キー別々 の比較セマンティクスを持つ:-一時キーは、参照の等価性を使用します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>That is, two references to the exact same temporary &lt;xref:System.Data.EntityKey&gt; instance are equal but no other &lt;xref:System.Data.EntityKey&gt; instances are equal.</source>
          <target state="translated">つまり、2 つの参照、正確に同じ一時&lt;xref:System.Data.EntityKey&gt;インスタンスが同一の他の&lt;xref:System.Data.EntityKey&gt;インスタンスが等しい&lt;/xref:System.Data.EntityKey&gt;&lt;/xref:System.Data.EntityKey&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-   Permanent keys determine equality based on the values of the contained key properties and the &lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.</source>
          <target state="translated">-永続的なキーが含まれているキー プロパティと&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;。&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;の値に基づく等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>That is, you can have two separate &lt;xref:System.Data.EntityKey&gt; instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">つまり、2 つを持つことができます&lt;xref:System.Data.EntityKey&gt;そのエンティティ セットが同じで、キーの値が等しい場合は、インスタンスが等しい&lt;/xref:System.Data.EntityKey&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In addition, temporary keys have no &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; or key values, but permanent keys do.</source>
          <target state="translated">さらに、一時キーがあるいない&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;か、キーの値が永久キーか&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と比較します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と比較します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key1</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key2</ph><ept id="p3">&lt;/code&gt;</ept> values are equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key1</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key2</ph><ept id="p3">&lt;/code&gt;</ept> values are equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">比較する&amp;2; つ<bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Temporary keys have different comparison semantics than permanent keys:      -   Temporary keys use reference equality.</source>
          <target state="translated">一時キーは、永久キー別々 の比較セマンティクスを持つ:-一時キーは、参照の等価性を使用します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>That is, two references to the exact same temporary &lt;xref:System.Data.EntityKey&gt; instance are equal but no other &lt;xref:System.Data.EntityKey&gt; instances are equal.</source>
          <target state="translated">つまり、2 つの参照、正確に同じ一時&lt;xref:System.Data.EntityKey&gt;インスタンスが同一の他の&lt;xref:System.Data.EntityKey&gt;インスタンスが等しい&lt;/xref:System.Data.EntityKey&gt;&lt;/xref:System.Data.EntityKey&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-   Permanent keys determine equality based on the values of the contained key properties and the &lt;xref:System.Data.Metadata.Edm.EntitySet&gt;.</source>
          <target state="translated">-永続的なキーが含まれているキー プロパティと&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;。&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;の値に基づく等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>That is, you can have two separate &lt;xref:System.Data.EntityKey&gt; instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">つまり、2 つを持つことができます&lt;xref:System.Data.EntityKey&gt;そのエンティティ セットが同じで、キーの値が等しい場合は、インスタンスが等しい&lt;/xref:System.Data.EntityKey&gt;。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>In addition, temporary keys have no &lt;xref:System.Data.Metadata.Edm.EntitySet&gt; or key values, but regular keys do.</source>
          <target state="translated">さらに、一時キーがあるいない&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;か、キーの値が通常のキー操作&lt;/xref:System.Data.Metadata.Edm.EntitySet&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と比較します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.EntityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と比較します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key1</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key2</ph><ept id="p3">&lt;/code&gt;</ept> values are not equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key1</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key2</ph><ept id="p3">&lt;/code&gt;</ept> values are not equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>