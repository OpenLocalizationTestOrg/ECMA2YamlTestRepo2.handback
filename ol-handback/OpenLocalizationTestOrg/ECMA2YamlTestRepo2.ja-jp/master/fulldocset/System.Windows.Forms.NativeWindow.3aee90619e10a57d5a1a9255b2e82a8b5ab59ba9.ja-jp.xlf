<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da3f5e768d7b79b86950d81fdcfab1f93b1ef198</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.NativeWindow.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d918613cbc30ebe4b658446b504a86cb511684c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7e18895f06f339bfde3bd4084de4643a9542e8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a low-level encapsulation of a window handle and a window procedure.</source>
          <target state="translated">ウィンドウ ハンドルと、ウィンドウ プロシージャの低レベルのカプセル化を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class automatically manages window class creation and registration.</source>
          <target state="translated">このクラスは、ウィンドウ クラスの作成と登録を自動的に管理します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A window is not eligible for garbage collection when it is associated with a window handle.</source>
          <target state="translated">ウィンドウ ハンドルに関連付けられている場合、ウィンドウはガベージ コレクションの対象ではできません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To ensure proper garbage collection, handles must either be destroyed manually using &lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt; or released using &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;.</source>
          <target state="translated">適切なガベージ コレクション ハンドルか、破棄されなければなりません&lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;。&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;を使用して解放または&lt;/xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;を使用して手動で</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt; method is called when the WM_NCDESTROY message is processed.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;へのメッセージが処理されるときに、メソッドが呼び出されます&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This means there are cases in which when you do not need to manually call &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;, but it is good practice to do so.</source>
          <target state="translated">つまり、どの場合にする必要はありませんを手動で呼び出す場合があります&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;、切らないでを行うことをお勧めは&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The NativeWindow class provides the following properties and methods to manage handles: &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;, &lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;, &lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;, &lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;, and &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;.</source>
          <target state="translated">NativeWindow クラスには、次のプロパティとハンドルを管理する方法が用意されています: &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;、 &lt;xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt;、 &lt;xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt;、 &lt;xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt;、 &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.AssignHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.CreateHandle%2A&gt; &lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes an instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">インスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is the default NativeWindow constructor provided by the compiler.</source>
          <target state="translated">これは、コンパイラによって提供される既定の NativeWindow コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.NativeWindow&gt; class also has a static constructor that initializes application domain-wide message handlers and hash tables.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.NativeWindow&gt;クラスにも、ドメイン全体のメッセージ ハンドラーにアプリケーションとハッシュ テーブルを初期化する静的コンス トラクターがあります&lt;/xref:System.Windows.Forms.NativeWindow&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Assigns a handle to this window.</source>
          <target state="translated">このウィンドウに、ハンドルを割り当てます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt; intercepts window messages sent to the <ph id="ph1">`handle`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;送信されたウィンドウ メッセージを途中受信、<ph id="ph1">`handle`</ph>パラメーター。&lt;/xref:System.Windows.Forms.NativeWindow.WndProc%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt; to reset the handle's window procedure to the default window procedure.</source>
          <target state="translated">使用して&lt;xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;ハンドルのウィンドウ プロシージャを既定のウィンドウ プロシージャにリセットする&lt;/xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The AssignHandle method calls the &lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; method to indicate that the value of the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property has changed.</source>
          <target state="translated">AssignHandle メソッドの呼び出し、&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;ことを示すメソッドの値、&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;プロパティが変更された&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;&lt;/xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The handle to assign cannot be in a different application process.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、ハンドルを割り当てるには、別のアプリケーション プロセスですることはできません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The handle to assign to this window.</source>
          <target state="translated">このウィンドウに代入するハンドル。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This window already has a handle.</source>
          <target state="translated">このウィンドウは、ハンドルを既に持っています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The windows procedure for the associated native window could not be retrieved.</source>
          <target state="translated">関連付けられているネイティブ ウィンドウのウィンドウ プロシージャを取得できませんでした。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creates a window and its handle with the specified creation parameters.</source>
          <target state="translated">指定された作成パラメーターをウィンドウとそのハンドルを作成します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`cp`</ph> parameter specifies the values that are passed to the native Win32 <ph id="ph2">`CreateWindowEx`</ph> method to create a window and its handle.</source>
          <target state="translated"><ph id="ph1">`cp`</ph>パラメーターは、ネイティブ Win32 に渡される値を指定<ph id="ph2">`CreateWindowEx`</ph>ウィンドウとそのハンドルを作成します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt; field is not <ph id="ph1">`null`</ph>, the newly created window handle inherits from the specified class.</source>
          <target state="translated">ときに、&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;フィールドではありません<ph id="ph1">`null`</ph>、新しく作成したウィンドウ ハンドルを指定したクラスから継承&lt;/xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, if &lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt; is set to <ph id="ph1">`BUTTON`</ph>, the newly created window is based on the Win32 <ph id="ph2">`BUTTON`</ph> window class.</source>
          <target state="translated">たとえば場合、&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;に設定されている<ph id="ph1">`BUTTON`</ph>、新しく作成されたウィンドウは、Win32 に基づいて<ph id="ph2">`BUTTON`</ph>ウィンドウ クラス&lt;/xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.CreateParams.Param%2A&gt; property of the &lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt; object must either be <ph id="ph1">`null`</ph> or reference an instance of a class that was declared as a structure.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.CreateParams.Param%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;オブジェクトがある必要がありますか、<ph id="ph1">`null`</ph>または構造体として宣言されたクラスのインスタンスを参照します&lt;/xref:System.Windows.Forms.CreateParams.ClassName%2A&gt;&lt;/xref:System.Windows.Forms.CreateParams.Param%2A&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This code is an excerpt from the example shown in the &lt;xref:System.Windows.Forms.NativeWindow&gt; class overview.</source>
          <target state="translated">このコードに示した例からの抜粋、&lt;xref:System.Windows.Forms.NativeWindow&gt;クラスの概要&lt;/xref:System.Windows.Forms.NativeWindow&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">一部のコードは、簡潔さを優先するためには表示されません。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Forms.NativeWindow&gt; for the whole code listing.</source>
          <target state="translated">参照してください&lt;xref:System.Windows.Forms.NativeWindow&gt;コード全体の&lt;/xref:System.Windows.Forms.NativeWindow&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The class name provided is registered with the operating system.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; オペレーティング システムで提供されるクラス名を登録します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.CreateParams"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the creation parameters for this window.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.CreateParams"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このウィンドウの作成パラメーターを指定します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The operating system ran out of resources when trying to create the native window.</source>
          <target state="translated">オペレーティング システムは、ネイティブのウィンドウを作成しようとしているときにリソース不足になりました。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The native Win32 API could not create the specified window.</source>
          <target state="translated">ネイティブの Win32 API は、指定されたウィンドウを作成できませんでした。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The handle of the current native window is already assigned; in explanation, the &lt;xref:System.Windows.Forms.NativeWindow.Handle*&gt; property is not equal to &lt;xref:System.IntPtr.Zero&gt;.</source>
          <target state="translated">現在のネイティブ ウィンドウのハンドルが既に割り当てられています。詳細については、&lt;xref:System.Windows.Forms.NativeWindow.Handle*&gt;プロパティが等しくない&lt;xref:System.IntPtr.Zero&gt;。&lt;/xref:System.IntPtr.Zero&gt;&lt;/xref:System.Windows.Forms.NativeWindow.Handle*&gt;で</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Invokes the default window procedure associated with this window.</source>
          <target state="translated">このウィンドウに関連付けられている既定のウィンドウ プロシージャを呼び出します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Typically, you only call the DefWndProc method when you are intercepting window messages and would like the default window procedure to handle the message.</source>
          <target state="translated">通常、のみメソッドを呼び出す DefWndProc ウィンドウ メッセージを受け取り、メッセージを処理する既定のウィンドウ プロシージャを希望するとします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>DefWndProc should not be called to send a window message to the window; call the Win32 <ph id="ph1">`SendMessage`</ph> function instead.</source>
          <target state="translated">ウィンドウをウィンドウ メッセージを送信する DefWndProc を呼び出すことはできません。Win32 を呼び出す<ph id="ph1">`SendMessage`</ph>関数を使用します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It is an error to call DefWndProc when the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property is 0.</source>
          <target state="translated">DefWndProc を呼び出すとエラーがあるときに、&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;プロパティが 0 にします&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The message that is currently being processed.</source>
          <target state="translated">メッセージは現在処理中です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Destroys the window and its handle.</source>
          <target state="translated">ウィンドウとそのハンドルを破棄します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This method destroys the window associated with the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;, sets the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property to 0, and calls the &lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; method to reflect the change.</source>
          <target state="translated">このメソッドに関連付けられているウィンドウの破棄、 &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;、設定、&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;プロパティを 0 であり、呼び出し、&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;変更を反映するようにメソッド&lt;/xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Typically, you only call DestroyHandle when you are done with the native window.</source>
          <target state="translated">一般的に、ネイティブのウィンドウが完了したときに DestroyHandle のみ呼び出します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.NativeWindow&gt; class automatically will destroy the associated window and release its resources in response to a WM_DESTROY message.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.Windows.Forms.NativeWindow&gt;クラスに自動的には関連付けられているウィンドウを破棄し、WM_DESTROY メッセージへの応答でそのリソースを解放します&lt;/xref:System.Windows.Forms.NativeWindow&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Releases the resources associated with this window.</source>
          <target state="translated">このウィンドウに関連付けられているリソースを解放します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The Finalize method removes the Win32 derived class associated with the current &lt;xref:System.Windows.Forms.NativeWindow&gt; instance, releases the handle, and posts a WM_CLOSE message to the associated window.</source>
          <target state="translated">Finalize メソッドに現在関連付けられている Win32 派生クラスを削除する&lt;xref:System.Windows.Forms.NativeWindow&gt;インスタンス ハンドルを解放する、関連付けられたウィンドウに WM_CLOSE メッセージをポストします&lt;/xref:System.Windows.Forms.NativeWindow&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Retrieves the window associated with the specified handle.</source>
          <target state="translated">指定したハンドルに関連付けられたウィンドウを取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you receive a handle from another method, use this method to retrieve the window associated with the handle.</source>
          <target state="translated">別のメソッドからハンドルを受信する場合は、このメソッドを使用したハンドルに関連付けられているウィンドウを取得します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The handle must already be owned by another &lt;xref:System.Windows.Forms.NativeWindow&gt; in the current process; otherwise, <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">別のハンドルを所有する必要があります既に&lt;xref:System.Windows.Forms.NativeWindow&gt;、現在のプロセスですそれ以外の場合、<ph id="ph1">`null`</ph>が返されます。&lt;/xref:System.Windows.Forms.NativeWindow&gt; 。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A handle to a window.</source>
          <target state="translated">ウィンドウのハンドル。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the specified handle.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.NativeWindow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したハンドルに関連付けられています。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This method returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the handle does not have an associated window.</source>
          <target state="translated">このメソッドが戻る<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ハンドルがいないとき、関連付けられたウィンドウです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the handle for this window.</source>
          <target state="translated">このウィンドウのハンドルを取得します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Use this method when calling Windows API methods that require a handle for a window or control.</source>
          <target state="translated">ウィンドウまたはコントロールのハンドルを必要とする Windows API のメソッドを呼び出すときは、このメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If successful, an &lt;xref:System.IntPtr&gt; representing the handle to the associated native Win32 window; otherwise, 0 if no handle is associated with the window.</source>
          <target state="translated">成功した場合、&lt;xref:System.IntPtr&gt;に関連したネイティブな Win32 ウィンドウへのハンドルを表す、ウィンドウに関連付けられたハンドルがない場合は 0 です&lt;/xref:System.IntPtr&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Specifies a notification method that is called when the handle for a window is changed.</source>
          <target state="translated">ウィンドウのハンドルが変更されたときに呼び出される通知方法を指定します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This method is invoked when the value of the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property has changed.</source>
          <target state="translated">このメソッドが呼び出されたときの値、&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;プロパティが変更された&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, manages an unhandled thread exception.</source>
          <target state="translated">派生クラスでオーバーライドされると、スレッドのハンドルされない例外を管理します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Typically, &lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt; handles thread exceptions.</source>
          <target state="translated">通常、&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;スレッドの例外を処理します&lt;/xref:System.Windows.Forms.Application.OnThreadException%2A&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Exception&gt; that specifies the unhandled thread exception.</source>
          <target state="translated">&lt;xref:System.Exception&gt;未処理スレッドの例外を指定します&lt;/xref:System.Exception&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Releases the handle associated with this window.</source>
          <target state="translated">このウィンドウに関連付けられたハンドルを解放します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This method does not destroy the window handle.</source>
          <target state="translated">このメソッドは、ウィンドウ ハンドルを破棄しません。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Instead, it sets the handle's window procedure to the default window procedure.</source>
          <target state="translated">代わりに、既定のウィンドウ プロシージャをハンドルのウィンドウ プロシージャを設定します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It sets the &lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt; property to 0 and calls &lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt; to reflect the change.</source>
          <target state="translated">設定、&lt;xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;プロパティを 0 と呼び出し&lt;xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;変更を反映するようにします&lt;/xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A&gt;&lt;/xref:System.Windows.Forms.NativeWindow.Handle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A window automatically calls this method if it receives a native Win32 WM_NCDESTROY message, indicating that Windows has destroyed the handle.</source>
          <target state="translated">Windows のハンドルが破棄されることを示す、ネイティブ Win32 へメッセージを受信した場合、ウィンドウは自動的にこのメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Invokes the default window procedure associated with this window.</source>
          <target state="translated">このウィンドウに関連付けられている既定のウィンドウ プロシージャを呼び出します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This method is called when a window message is sent to the handle of the window.</source>
          <target state="translated">このメソッドは、ウィンドウのハンドルをウィンドウ メッセージを送信するときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is associated with the current Windows message.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Windows の現在のメッセージに関連付けられています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>