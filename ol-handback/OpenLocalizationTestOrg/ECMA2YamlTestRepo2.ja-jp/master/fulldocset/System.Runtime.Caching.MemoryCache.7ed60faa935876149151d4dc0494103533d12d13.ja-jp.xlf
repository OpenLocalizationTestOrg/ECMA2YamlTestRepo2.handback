<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d17d2c1422d4263de7e2b5a836c22102a1eb53f8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Caching.MemoryCache.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6a9d3c266160199ed2d16d5ebb03289451cbb47</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8affb44efd57fa8aa982356fff7f479008735c96</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the type that implements an in-memory cache.</source>
          <target state="translated">メモリ内キャッシュを実装する型を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The MemoryCache class is a concrete implementation of the abstract &lt;xref:System.Runtime.Caching.ObjectCache&gt; class.</source>
          <target state="translated">MemoryCache クラスは抽象&lt;xref:System.Runtime.Caching.ObjectCache&gt;クラス&lt;/xref:System.Runtime.Caching.ObjectCache&gt;の具象実装です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The MemoryCache class is similar to the ASP.NET &lt;xref:System.Web.Caching.Cache&gt; class.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、MemoryCache クラスは ASP.NET&lt;xref:System.Web.Caching.Cache&gt;クラス&lt;/xref:System.Web.Caching.Cache&gt;に似ています</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The MemoryCache class has many properties and methods for accessing the cache that will be familiar to you if you have used the ASP.NET &lt;xref:System.Web.Caching.Cache&gt; class.</source>
          <target state="translated">MemoryCache クラスには多数のプロパティと、よく使われる ASP.NET&lt;xref:System.Web.Caching.Cache&gt;クラス&lt;/xref:System.Web.Caching.Cache&gt;を使用している場合、キャッシュにアクセスする方法</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The main differences between the &lt;xref:System.Web.Caching.Cache&gt; and MemoryCache classes are that the MemoryCache class has been changed to make it usable by <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> applications that are not ASP.NET applications.</source>
          <target state="translated">主な違い、 &lt;xref:System.Web.Caching.Cache&gt;MemoryCache クラスで使用できるように、MemoryCache クラスが変更されていると<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>ASP.NET アプリケーションではないアプリケーションです&lt;/xref:System.Web.Caching.Cache&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, the MemoryCache class has no dependencies on the <ph id="ph1">`System.Web`</ph> assembly.</source>
          <target state="translated">たとえば、MemoryCache クラスに依存関係、<ph id="ph1">`System.Web`</ph>アセンブリ。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Another difference is that you can create multiple instances of the MemoryCache class for use in the same application and in the same &lt;xref:System.AppDomain&gt; instance.</source>
          <target state="translated">別の相違点は、同じアプリケーションであり、同じ MemoryCache クラス使用するための複数のインスタンスを作成することができます&lt;xref:System.AppDomain&gt;インスタンス&lt;/xref:System.AppDomain&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The MemoryCache class does not allow <ph id="ph1">`null`</ph> as a value in the cache.</source>
          <target state="translated">MemoryCache クラスは許可されません<ph id="ph1">`null`</ph>キャッシュ内の値として。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Any attempt to add or change a cache entry with a value of <ph id="ph1">`null`</ph> will fail.</source>
          <target state="translated">追加またはの値を持つキャッシュ エントリを変更しようとすると<ph id="ph1">`null`</ph>は失敗します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The MemoryCache type does not implement <bpt id="p1">*</bpt>cache regions<ept id="p1">*</ept>.</source>
          <target state="translated">MemoryCache 型が実装していない<bpt id="p1">*</bpt>キャッシュ領域<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Therefore, when you call MemoryCache methods that implement base methods that contain a parameter for regions, do not pass a value for the parameter.</source>
          <target state="translated">したがって、地域のパラメーターが含まれている基本メソッドを実装する MemoryCache メソッドを呼び出すときに渡さないでくださいパラメーターの値。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The methods that use the region parameter all supply a default <ph id="ph1">`null`</ph> value.</source>
          <target state="translated">すべての地域のパラメーターを使用するメソッドは、既定値を指定<ph id="ph1">`null`</ph>値。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A?displayProperty=fullName&gt; method overload has a <ph id="ph1">`regionName`</ph> parameter whose default value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">たとえば、&lt;xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A?displayProperty=fullName&gt;メソッドのオーバー ロードは、<ph id="ph1">`regionName`</ph>パラメーターの既定値は<ph id="ph2">`null`</ph>&lt;/xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Caching.MemoryCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Runtime.Caching.MemoryCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Runtime.Caching.MemoryCache&gt; class is initialized, it checks for configuration entries that might have been overridden by using the optional <ph id="ph1">`config`</ph> parameter in the constructor.</source>
          <target state="translated">ときに、&lt;xref:System.Runtime.Caching.MemoryCache&gt;クラスを初期化すると、オプションを使用してオーバーライドされる可能性がある構成エントリを調べた<ph id="ph1">`config`</ph>コンス トラクターのパラメーターです&lt;/xref:System.Runtime.Caching.MemoryCache&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can pass the following parameters in the <ph id="ph1">`config`</ph> parameter.</source>
          <target state="translated">次のパラメーターを渡すことができます、<ph id="ph1">`config`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>All values can be passed as integers.</source>
          <target state="translated">すべての値は、整数値として渡すことができます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes%2A&gt;      -   &lt;xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage%2A&gt;      -   &lt;xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval%2A&gt;       When this constructor is invoked, configuration settings are first retrieved from application configuration files.</source>
          <target state="translated">- &lt;xref:System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes%2A&gt;- &lt;xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage%2A&gt;-&lt;xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval%2A&gt;アプリケーション構成ファイルから構成設定を取得は、まずこのコンス トラクターが呼び出されたときにします&lt;/xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval%2A&gt;&lt;/xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage%2A&gt;&lt;/xref:System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If no configuration entries exist in the application configuration file, only the settings provided in <ph id="ph1">`config`</ph> are applied.</source>
          <target state="translated">設定のみがで提供される場合は、アプリケーション構成ファイルでは、構成エントリが存在しない、<ph id="ph1">`config`</ph>適用されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the configuration entries in the application configuration exist, and if information is also passed in <ph id="ph1">`config`</ph>, the information in the <ph id="ph2">`config`</ph> overrides the information that is read from the configuration file.</source>
          <target state="translated">アプリケーション構成で、構成エントリが存在する場合、および情報が渡されたも<ph id="ph1">`config`</ph>、内の情報、<ph id="ph2">`config`</ph>構成ファイルから読み取られた情報をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The name value that is assigned to a cache instance is used in two ways:      -   To help you keep track of multiple cache instances when more than one instance exists.</source>
          <target state="translated">キャッシュ インスタンスに割り当てられている名前の値が&amp;2; つの方法で使用される: - を追跡する複数のキャッシュ インスタンス&amp;1; つ以上のインスタンスが存在する場合に役立ちます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-   To reference settings in the configuration file when the &lt;xref:System.Runtime.Caching.MemoryCache&gt; instance is initialized.</source>
          <target state="translated">、参照するには構成の設定ファイルの場合、&lt;xref:System.Runtime.Caching.MemoryCache&gt;インスタンスを初期化します&lt;/xref:System.Runtime.Caching.MemoryCache&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  There is no mechanism to enforce unique names for cache instances.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; キャッシュ インスタンスの一意の名前を適用するメカニズムはありません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Therefore, it is possible to have multiple cache instances with the same name.</source>
          <target state="translated">したがって、可能であれば同じ名前の複数のキャッシュ インスタンスを持ちます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph>     &gt;  Do not create &lt;xref:System.Runtime.Caching.MemoryCache&gt; instances unless it is required.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; を作成しない&lt;xref:System.Runtime.Caching.MemoryCache&gt;ことが必要ない場合をインスタンス化します&lt;/xref:System.Runtime.Caching.MemoryCache&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you create cache instances in client and Web applications, the &lt;xref:System.Runtime.Caching.MemoryCache&gt; instances should be created early in the application life cycle.</source>
          <target state="translated">クライアントと Web アプリケーションでキャッシュ インスタンスを作成する場合、&lt;xref:System.Runtime.Caching.MemoryCache&gt;アプリケーションのライフ サイクルの早い段階でインスタンスを作成する必要があります&lt;/xref:System.Runtime.Caching.MemoryCache&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You must create only the number of cache instances that will be used in your application, and store references to the cache instances in variables that can be accessed globally.</source>
          <target state="translated">アプリケーションで使用され、キャッシュ インスタンスへの参照をグローバルにアクセスできる変数に格納されるキャッシュ インスタンスの数のみを作成する必要があります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, in ASP.NET applications, you can store the references in application state.</source>
          <target state="translated">たとえば、ASP.NET アプリケーションでは、アプリケーション状態の参照を格納できます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you create only a single cache instance in your application, use the default cache and get a reference to it from the &lt;xref:System.Runtime.Caching.MemoryCache.Default%2A&gt; property when you need to access the cache.</source>
          <target state="translated">既定のキャッシュを使用して、アプリケーションで&amp;1; つのキャッシュ インスタンスのみを作成する場合からへの参照を取得、&lt;xref:System.Runtime.Caching.MemoryCache.Default%2A&gt;プロパティ キャッシュにアクセスする必要がある場合&lt;/xref:System.Runtime.Caching.MemoryCache.Default%2A&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The name to use to look up configuration information.</source>
          <target state="translated">使用して構成情報を検索する名前です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Note`</ph> It is not required for configuration information to exist for every name.</source>
          <target state="translated"><ph id="ph1">`Note`</ph>構成については、すべての名前が存在する必要はありません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If a matching configuration entry exists, the configuration information is used to configure the <bpt id="p1">&lt;xref href="System.Runtime.Caching.MemoryCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">構成情報は構成に使用されている一致する構成エントリが存在する場合、 <bpt id="p1">&lt;xref href="System.Runtime.Caching.MemoryCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インスタンス。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If a matching configuration entry does not exist, the name can be accessed through the &lt;xref:System.Runtime.Caching.MemoryCache.Name*&gt; property, because the specified name is associated with the <bpt id="p1">&lt;xref href="System.Runtime.Caching.MemoryCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">名前をを介してアクセスできる一致する構成エントリが存在しない場合、&lt;xref:System.Runtime.Caching.MemoryCache.Name*&gt;プロパティ、指定した名前に関連付けられているため、 <bpt id="p1">&lt;xref href="System.Runtime.Caching.MemoryCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インスタンス&lt;/xref:System.Runtime.Caching.MemoryCache.Name*&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For information about memory cache configuration, see <bpt id="p1">&lt;xref href="System.Runtime.Caching.Configuration.MemoryCacheElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">メモリ キャッシュの構成については、次を参照してください。 <bpt id="p1">&lt;xref href="System.Runtime.Caching.Configuration.MemoryCacheElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A collection of name/value pairs of configuration information to use for configuring the cache.</source>
          <target state="translated">キャッシュを構成するのに使用する構成情報の名前/値ペアのコレクション。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A name or value in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">config</ph><ept id="p1">&lt;/code&gt;</ept> parameter could not be parsed.</source>
          <target state="translated">名前または値で、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">config</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターを解析できませんでした。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A value in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">config</ph><ept id="p1">&lt;/code&gt;</ept> collection is invalid.</source>
          <target state="translated">値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">config</ph> <ept id="p1">&lt;/code&gt;</ept>コレクションが有効ではありません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Inserts a cache entry into the cache as a <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, and adds details about how the entry should be evicted.</source>
          <target state="translated">キャッシュ エントリとしてキャッシュに挿入、 <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インスタンスし、エントリを削除する方法の詳細を追加します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!WARNING]</ph> &gt;  The &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; and &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; method overloads do not support the &lt;xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">&gt; [!WARNING]</ph>&gt;、&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;と&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;メソッドのオーバー ロードがサポートしていない、&lt;xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A&gt;プロパティ&lt;/xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A&gt;&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;&lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Therefore, to set the &lt;xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A&gt; property for a cache entry, use the &lt;xref:System.Runtime.Caching.MemoryCache.Set%2A&gt; method overloads instead.</source>
          <target state="translated">そのため、設定、&lt;xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A&gt;プロパティを使用して、キャッシュ エントリを&lt;xref:System.Runtime.Caching.MemoryCache.Set%2A&gt;メソッドを代わりにオーバー ロードします&lt;/xref:System.Runtime.Caching.MemoryCache.Set%2A&gt;&lt;/xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The object to add.</source>
          <target state="translated">追加するオブジェクト。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">キャッシュ エントリの削除の詳細を格納するオブジェクト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>