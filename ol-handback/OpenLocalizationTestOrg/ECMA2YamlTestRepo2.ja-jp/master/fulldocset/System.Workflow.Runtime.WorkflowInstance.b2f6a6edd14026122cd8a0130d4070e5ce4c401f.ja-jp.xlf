<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b8d65760219a0ce4bd4424a9b83e641e47605a0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.Runtime.WorkflowInstance.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8c8bde96130afdaffe9b7bb8fbfbdafcaff78bb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5a51cd59410f67f181cb908bc3ac707224cdd07</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a workflow instance.</source>
          <target state="translated">ワークフロー インスタンスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       The WorkflowInstance class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>WorkflowInstance クラス メソッドと、ワークフロー インスタンスの実行を制御するために使用するプロパティを公開します。ワークフロー ランタイム エンジンによって使用される実際のワークフロー インスタンスのプロキシ本質的にすることをお勧めします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the WorkflowInstance class.</source>
          <target state="translated">ホストまたはサービスは、WorkflowInstance クラスに含まれている適切なメソッドを呼び出すことによって、ワークフロー インスタンスで操作を行うとき、ワークフロー ランタイム エンジンに指示できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the requested action is not valid, for example, if the host calls &lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt; on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</source>
          <target state="translated">要求された操作が無効な場合、たとえば、ホストが呼び出した場合&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;で既に完了しているワークフロー インスタンス、ワークフロー ランタイム エンジンで適切な例外が発生します&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; インスタンスを修復する唯一の方法は、ランタイムを再起動する場合は、ホスト アプリケーションで呼び出しても返されないために、ワークフロー インスタンスが応答しなくなった、します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the &lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">ただし場合は、インスタンスが強制的にアンロードされました、中止、または中断すると、それを続行できますを呼び出して、&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Aborts the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスを中止します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</source>
          <target state="translated">同期的にワークフロー インスタンスが中止されましたつまり、このメソッドは、ワークフロー インスタンスが中止された後を返します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine invalidates the workflow instance in memory and clears the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、メモリ内のワークフロー インスタンスを無効にし、 &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;。&lt;/xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;をクリア</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</source>
          <target state="translated">永続性サービスが、ワークフロー インスタンスによって使用された場合は、最後の永続化ポイントが破棄後にすべての作業が行わします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>After it aborts the workflow instance, the workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt; event.</source>
          <target state="translated">ワークフロー ランタイム エンジンが発生したワークフロー インスタンスが中止された後、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;イベント&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can call &lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt; to reload the workflow instance and start from its last persistence point.</source>
          <target state="translated">呼び出すことができます&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;をワークフロー インスタンスを再読み込みしてその最後の永続性ポイントから開始します&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Abort`</ph> is different from &lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt; in that while <ph id="ph2">`Abort`</ph> simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated"><ph id="ph1">`Abort`</ph>異なる&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;で<ph id="ph2">`Abort`</ph>単にメモリ内のワークフロー インスタンスをクリアし、再開できる、最後の永続性ポイントから Terminate はメモリ内のワークフロー インスタンスをクリアし、永続性サービス インスタンスがメモリからクリアされたことが通知されます&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For the &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;、つまりそのワークフロー インスタンスのすべての状態情報は、終了時にデータベースから削除します&lt;/xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">以前に保存された永続性ポイントからワークフロー インスタンスを再度読み込んでできなきます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Applies changes to the workflow instance specified by the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.WorkflowChanges"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定したワークフロー インスタンスに変更を適用、 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.WorkflowChanges"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</source>
          <target state="translated">ワークフロー インスタンスが既に中断されていない場合、ワークフロー ランタイム エンジンは、変更を適用する前にインスタンスを一時的に中断します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.WorkflowChanges"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifying dynamic updates for the workflow instance.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.WorkflowChanges"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ワークフロー インスタンスの動的更新を指定します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Posts a message to the specified workflow queue synchronously.</source>
          <target state="translated">指定したワークフロー キューへのメッセージを同期的に送信します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Sends the <ph id="ph1">`item`</ph> to the specified &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;.</source>
          <target state="translated">送信、<ph id="ph1">`item`</ph>指定&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;&lt;/xref:System.Workflow.Runtime.WorkflowQueue&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you want to be notified when the message is delivered, you can implement &lt;xref:System.Workflow.Runtime.IPendingWork&gt; in your service and pass a <ph id="ph1">`workItem`</ph> and an &lt;xref:System.Workflow.Runtime.IPendingWork&gt; object to EnqueueItem.</source>
          <target state="translated">メッセージが配信されたときに通知する場合は、実装&lt;xref:System.Workflow.Runtime.IPendingWork&gt;サービスおよびパスで、<ph id="ph1">`workItem`</ph>と&lt;xref:System.Workflow.Runtime.IPendingWork&gt;EnqueueItem するオブジェクト&lt;/xref:System.Workflow.Runtime.IPendingWork&gt;&lt;/xref:System.Workflow.Runtime.IPendingWork&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">このような通知したくない場合は、null 参照を渡すことができます (<ph id="ph1">`Nothing`</ph> Visual Basic で) の<ph id="ph2">`pendingWork`</ph>と<ph id="ph3">`workItem`</ph>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</source>
          <target state="translated">このメソッドをステート マシン ワークフローを使用する場合は、メッセージで「キュー '&amp;0;'} は無効です」例外をする可能性があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This happens when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">これは、ステート マシンの現在の状態が特定のイベントを処理する方法を認識していない場合に発生します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, when some state other than the current state contains the &lt;xref:System.Workflow.Activities.EventDrivenActivity&gt; that contains the &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt; that is represented by the queue '{0}'.</source>
          <target state="translated">たとえば、現在の状態以外の状態が含まれる場合、&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;を格納している、 &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;'&amp;0;'} キューによって表される&lt;/xref:System.Workflow.Activities.HandleExternalEventActivity&gt;&lt;/xref:System.Workflow.Activities.EventDrivenActivity&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; メッセージが送信された順序でワークフロー インスタンスによって受信される保証はありません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</source>
          <target state="translated">たとえば、既存のメッセージの受信キュー (キュー A) の原因として、別のメッセージをリッスンしている別のキュー (キュー B) を作成するためのワークフローが最初のメッセージの後に送信されたが場合、可能性&amp;2; 番目のメッセージが届きます。 最初に、そのキューがまだ作成されていないためが受信されずです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using &lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;.)</source>
          <target state="translated">この問題を防ぐためには、2 番目のメッセージは送信されません&amp;2; 番目のキューの存在を確認するまで (を使用して&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;.)&lt;/xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">名前、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The object to enqueue.</source>
          <target state="translated">エンキューするオブジェクト。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that allows the sender to be notified when <ph id="ph1">`item`</ph> is delivered.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>送信者をできるようにするときに通知する<ph id="ph1">`item`</ph>配信されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An object to be passed to the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> methods.</source>
          <target state="translated">渡されるオブジェクトの<bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>メソッドです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;queueName&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;queueName&lt;/code&gt;</ph>null 参照 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">queueName</ph><ept id="p2">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>によって指定された<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">queueName</ph> <ept id="p2">&lt;/code&gt;</ept>存在しません。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">queueName</ph><ept id="p2">&lt;/code&gt;</ept> is not enabled.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>によって指定された<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">queueName</ph> <ept id="p2">&lt;/code&gt;</ept>有効ではありません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Posts a message to the specified workflow queue when the workflow is idle.</source>
          <target state="translated">ワークフローがアイドル状態のときは、指定したワークフロー キューへのメッセージをポストします。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>EnqueueItemOnIdle waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</source>
          <target state="translated">EnqueueItemOnIdle、ワークフローがワークフローのスケジューラがアイドル状態であることを確認したら、アイドル ポイントとのキューに入れますに到達するまでの待機 (つまり、アクティブな操作が実行されていない)。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Waits for the workflow instance to become idle and then sends the <ph id="ph1">`item`</ph> to the specified &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;.</source>
          <target state="translated">ワークフロー インスタンスをアイドル状態になるを待機し、送信、<ph id="ph1">`item`</ph>指定&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;&lt;/xref:System.Workflow.Runtime.WorkflowQueue&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you call EnqueueItemOnIdle while the workflow instance is suspended, the workflow runtime engine will throw an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">EnqueueItemOnIdle を呼び出すと、ワークフロー インスタンスが中断されている間、ワークフロー ランタイム エンジンが&lt;xref:System.InvalidOperationException&gt;。&lt;/xref:System.InvalidOperationException&gt;スローされます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you want to be notified when the message is delivered, you can implement &lt;xref:System.Workflow.Runtime.IPendingWork&gt; in your service and pass a <ph id="ph1">`workItem`</ph> and an &lt;xref:System.Workflow.Runtime.IPendingWork&gt; object to &lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;.</source>
          <target state="translated">メッセージが配信されたときに通知する場合は、実装&lt;xref:System.Workflow.Runtime.IPendingWork&gt;サービスおよびパスで、<ph id="ph1">`workItem`</ph>と&lt;xref:System.Workflow.Runtime.IPendingWork&gt;&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;&lt;/xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;オブジェクト&lt;/xref:System.Workflow.Runtime.IPendingWork&gt;&lt;/xref:System.Workflow.Runtime.IPendingWork&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">このような通知したくない場合は、null 参照を渡すことができます (<ph id="ph1">`Nothing`</ph> Visual Basic で) の<ph id="ph2">`pendingWork`</ph>と<ph id="ph3">`workItem`</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</source>
          <target state="translated">このメソッドをステート マシン ワークフローを使用しているときに、「キュー '&amp;0;'} は無効です」メッセージを含む例外を取得する可能性があります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This occurs when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">これは、ステート マシンの現在の状態が特定のイベントを処理する方法を認識していない場合に発生します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, when some state other than the current state contains the &lt;xref:System.Workflow.Activities.EventDrivenActivity&gt; that contains the &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt; that is represented by the queue '{0}'.</source>
          <target state="translated">たとえば、現在の状態以外の状態が含まれる場合、&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;を格納している、 &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;'&amp;0;'} キューによって表される&lt;/xref:System.Workflow.Activities.HandleExternalEventActivity&gt;&lt;/xref:System.Workflow.Activities.EventDrivenActivity&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">名前、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The object to enqueue.</source>
          <target state="translated">エンキューするオブジェクト。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that allows the sender to be notified when <ph id="ph1">`item`</ph> is delivered.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>送信者をできるようにするときに通知する<ph id="ph1">`item`</ph>配信されます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An object to be passed to the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> methods.</source>
          <target state="translated">渡されるオブジェクトの<bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>メソッドです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;queueName&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;queueName&lt;/code&gt;</ph>null 参照 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-or-       The workflow instance is suspended.</source>
          <target state="translated">または、ワークフロー インスタンスを中断します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">queueName</ph><ept id="p2">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>によって指定された<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">queueName</ph> <ept id="p2">&lt;/code&gt;</ept>存在しません。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">queueName</ph><ept id="p2">&lt;/code&gt;</ept> is not enabled.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>によって指定された<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">queueName</ph> <ept id="p2">&lt;/code&gt;</ept>有効ではありません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified object is equal to the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定したオブジェクトが等しいかどうかを示す値を返します、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The object must be an instance of the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; class and have the same &lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt; as this &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;.</source>
          <target state="translated">オブジェクトの&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;クラスし同じ&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;。&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt;&lt;/xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;がある&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt;インスタンスでなければなりません</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The object to compare.</source>
          <target state="translated">比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified object is equal to this <bpt id="p2">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定したオブジェクトがこれに等しい場合<bpt id="p2">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this workflow instance.</source>
          <target state="translated">このワークフロー インスタンスのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>GetHashCode returns a hash code based on the value of &lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;.</source>
          <target state="translated">GetHashCode は&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;。&lt;/xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;値に基づいてハッシュ コードを返します</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The hash code for this <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ハッシュ コードをこの<bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Retrieves the root activity for this workflow instance.</source>
          <target state="translated">このワークフロー インスタンスのルート アクティビティを取得します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can use the root activity to navigate the activity hierarchy of the workflow.</source>
          <target state="translated">ルート アクティビティを使用すると、ワークフローのアクティビティ階層を移動します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This method is not thread safe, so the host should synchronize its calls to this method.</source>
          <target state="translated">このメソッドはスレッド セーフである、ホストはこのメソッドの呼び出しを同期するためです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns the next point in time that this <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is scheduled to be delivered a timer message.</source>
          <target state="translated">次の特定時点を返します。 時刻のこの<bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>タイマー メッセージを配信するようにスケジュールします。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A DateTime value that represents the next &lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt*&gt; time this <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> will be delivered a timer message.</source>
          <target state="translated">次を表す DateTime 値&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt*&gt;この時間を計測<bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>タイマー メッセージを配信する&lt;/xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt*&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets a collection of <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueueInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</source>
          <target state="translated">コレクションを取得<bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueueInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>で保留中の項目を含み、ワークフロー キューの活動がサブスクライブしているオブジェクトは、このワークフロー インスタンスに関連付けられています。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>GetWorkflowQueueData returns a collection of &lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt; objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</source>
          <target state="translated">GetWorkflowQueueData がのコレクションを返します&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;オブジェクト、それぞれがこのワークフロー インスタンスに関連付けられたワークフロー キューのいずれかの状態に関する情報が含まれています&lt;/xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=fullName&gt; contains the pending items for a &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt; and &lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=fullName&gt; contains a list of the activities that are subscribed for item delivery on a &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=fullName&gt;&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt; &lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=fullName&gt; &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;。&lt;/xref:System.Workflow.Runtime.WorkflowQueue&gt;項目配信のサブスクライブされたをアクティビティのリスト&lt;/xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=fullName&gt;が含まれる&lt;/xref:System.Workflow.Runtime.WorkflowQueue&gt;保留中の項目が含まれています&lt;/xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueueInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph>の<bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueueInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets the unique identifier for the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスの一意の識別子を取得します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can use InstanceId to reference the workflow instance.</source>
          <target state="translated">InstanceId を使用して、ワークフロー インスタンスを参照することができます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the workflow instance.</source>
          <target state="translated">&lt;xref:System.Guid&gt;ワークフロー インスタンスの&lt;/xref:System.Guid&gt;。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Loads a previously unloaded workflow instance.</source>
          <target state="translated">以前にアンロードされたワークフロー インスタンスを読み込みます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Load is synchronous; if the workflow instance can be loaded, Load will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</source>
          <target state="translated">負荷が同期的です。ワークフロー インスタンスを読み込むことができるの負荷では、ワークフロー インスタンスがメモリに読み込まれてワークフロー ランタイム エンジンによってスケジュールされた後に返します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The runtime raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt; event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</source>
          <target state="translated">ランタイムを発生させる、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;永続性サービスが、メモリ内のワークフロー インスタンスに復元が、ワークフローの前にランタイム エンジン インスタンスをスケジュールし、後で、イベント&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Reload the tracking profiles for this workflow instance.</source>
          <target state="translated">このワークフロー インスタンスの追跡プロファイルを再読み込みされます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The runtime tracking infrastructure will reload each &lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt; for this workflow instance associated with its tracking channels.</source>
          <target state="translated">各ランタイム追跡インフラストラクチャは再読み込み&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;追跡チャネルに関連付けられているこのワークフロー インスタンスに関して&lt;/xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</source>
          <target state="translated">そうでない既に中断状態の場合、ランタイム追跡インフラストラクチャが追跡プロファイルが再度読み込まれるときに、ワークフローが一時的に中断します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Resumes execution of a previously suspended workflow instance.</source>
          <target state="translated">以前に中断されたワークフロー インスタンスの実行を再開します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The host can call Resume to resume execution of a workflow instance that has been previously suspended.</source>
          <target state="translated">ホストは、以前に中断するワークフロー インスタンスの実行を再開する Resume を呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the workflow instance is not in the suspended state, no action is taken.</source>
          <target state="translated">ワークフロー インスタンスが中断状態にない場合は、処理は行われません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The runtime raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt; event just before execution of the workflow instance is resumed.</source>
          <target state="translated">ランタイムを発生させる、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;イベント、ワークフロー インスタンスの実行を再開する前にします&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Starts the execution of the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスの実行を開始します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Start calls &lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt; on the root activity of this workflow instance.</source>
          <target state="translated">呼び出しを開始&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;このワークフロー インスタンスのルート アクティビティ上&lt;/xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If Start encounters an exception, it terminates the workflow instance by calling &lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt; with the &lt;xref:System.Exception.Message%2A&gt; property of the exception passed as the reason for the termination.</source>
          <target state="translated">開始には、例外が発生すると、呼び出すことによって、ワークフロー インスタンスを終了&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;で、&lt;xref:System.Exception.Message%2A&gt;は終了の理由として渡された例外のプロパティ&lt;/xref:System.Exception.Message%2A&gt;&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-or-       The workflow instance has already been started.</source>
          <target state="translated">または、ワークフロー インスタンスが既に開始されています。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Suspends the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスを中断します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The workflow instance is suspended in a synchronous manner.</source>
          <target state="translated">ワークフロー インスタンスは同期式で中断します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt; event and passes <ph id="ph1">`reason`</ph> in a &lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;.</source>
          <target state="translated">ワークフロー インスタンスが既に中断されている場合、アクションは実行されません。それ以外の場合、ワークフロー ランタイム エンジンが発生し、ワークフロー インスタンスを中断、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;イベントおよびパス<ph id="ph1">`reason`</ph> &lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;&lt;/xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt; 。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Suspend does not unload the workflow instance.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 中断では、ワークフロー インスタンスはアンロードされません。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A description of the reason for suspending the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスを中断する理由の説明です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Terminates the workflow instance in a synchronous manner.</source>
          <target state="translated">ワークフロー インスタンスを同期式で終了します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The workflow instance is terminated in a synchronous manner.</source>
          <target state="translated">ワークフロー インスタンスは同期式で終了します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The host calls Terminate to terminate the workflow instance.</source>
          <target state="translated">ホストが呼び出したワークフロー インスタンスを終了する終了します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、メモリ内のワークフロー インスタンスをクリアし、インスタンスがメモリからクリアされたことを永続性サービスに通知します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For the &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;、つまりそのワークフロー インスタンスのすべての状態情報は、終了時にデータベースから削除します&lt;/xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">以前に保存された永続性ポイントからワークフロー インスタンスを再度読み込んでできなきます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the <ph id="ph1">`Terminate`</ph> method raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt; event and passes <ph id="ph2">`reason`</ph> in the &lt;xref:System.Exception.Message%2A&gt; property of a &lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt; contained in the &lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;.</source>
          <target state="translated">メモリ内のワークフロー インスタンスがクリアされ、永続性サービスは、終了の通知後、<ph id="ph1">`Terminate`</ph>メソッドが発生し、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;イベントを渡します<ph id="ph2">`reason`</ph> &lt;xref:System.Exception.Message%2A&gt; &lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt; &lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;内&lt;/xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt;のプロパティ&lt;/xref:System.Exception.Message%2A&gt;で&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Terminate`</ph> is different from &lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt; in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, <ph id="ph2">`Abort`</ph> simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</source>
          <target state="translated"><ph id="ph1">`Terminate`</ph>異なる&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;を終了することで、メモリ内のワークフロー インスタンスをクリアし、終了の永続性サービスに通知<ph id="ph2">`Abort`</ph>最後の永続性ポイントから再開することができますし、メモリ内のワークフローのインスタンスをクリアするだけです&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A description of the reason for terminating the workflow instance.</source>
          <target state="translated">ワークフロー インスタンスを終了する理由の説明です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">ワークフロー ランタイム エンジンが実行されていません。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</source>
          <target state="translated">インスタンスが中断状態またはアイドル状態のときは、ワークフロー インスタンスをメモリから永続化ストアをアンロードします。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If the workflow instance is idle or suspended, TryUnload uses the persistence service to remove the workflow instance from memory and persist it to a data store.</source>
          <target state="translated">ワークフロー インスタンスがアイドル状態または中断された場合、TryUnload はメモリからワークフロー インスタンスを削除し、データ ストアに保持できる永続性サービスを使用します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If there is no persistence service registered with the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;, TryUnload throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">この&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;、TryUnload スロー &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;に登録されている永続性サービスがないかどうか</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If the workflow instance is successfully persisted, the runtime raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt; event, and returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">ランタイムを発生させる場合は、ワークフロー インスタンスが正常に永続化、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;イベント、および返します<ph id="ph1">`true`</ph>&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt; returns <ph id="ph1">`false`</ph> if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;返します<ph id="ph1">`false`</ph>が終了した場合は、ワークフロー インスタンスが既にアンロードされてが中止されました。 または、既に完了します。&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The host can use TryUnload to reclaim system resources from an idle workflow.</source>
          <target state="translated">ホストは、システム リソースがアイドル状態のワークフローを再利用を TryUnload を使用できます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the workflow instance was unloaded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ワークフロー インスタンスが読み込まれた場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">ワークフロー ランタイム エンジンに登録されている永続性サービスはありません。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Unloads the workflow instance from memory to the persistence store.</source>
          <target state="translated">永続化ストアにメモリからワークフロー インスタンスをアンロードします。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</source>
          <target state="translated">現在のスケジュール済み作業が完了したら、までこの呼び出しをブロックまたはトランザクション スコープの最後。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Unload is synchronous; that is, it returns after completing any action that it performs.</source>
          <target state="translated">Unload は同期式です。つまりを実行するアクションが完了した後を返します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</source>
          <target state="translated">ワークフロー インスタンスがアイドル状態でない場合、ランタイムは、インスタンスを中断できるまで待機します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its &lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt; method.</source>
          <target state="translated">現在のスケジュール済み作業項目の完了後に、インスタンスを中断できることができますのみこれは、通常、現在実行中のアクティビティがから返されるときにその&lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;メソッド&lt;/xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>However, if the instance is executing a &lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;, the transaction scope must complete execution before the instance can be interrupted.</source>
          <target state="translated">ただし、インスタンスが実行されている場合、 &lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;、インスタンスを中断する前に、トランザクション スコープが実行を完了する必要があります&lt;/xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</source>
          <target state="translated">アンロードは、永続性サービスを使用して、ワークフロー インスタンスをメモリから削除し、データ ストアに永続化します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If there is no persistence service registered with the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;, Unload throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">この&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;、アンロード スロー &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;に登録されている永続性サービスがないかどうか</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If the workflow instance is successfully persisted, the runtime raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt; event.</source>
          <target state="translated">ランタイムを発生させる場合は、ワークフロー インスタンスが正常に永続化、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;イベント&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The host can use Unload to reclaim system resources from an idle workflow.</source>
          <target state="translated">ホストは、アンロードを使用して、システム リソースがアイドル状態のワークフローを再利用できます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">ワークフロー ランタイム エンジンに登録されている永続性サービスはありません。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this workflow instance.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このワークフロー インスタンスのです。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the execution environment in which this workflow instance is running.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このワークフロー インスタンスが実行されている実行環境を表すです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>