<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65db54b6aded2204767c5f002b421546038b5b64</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31c5a82e6d5ea18c7f8f7eb469d195ef427114ad</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8c4fbe60444b9def5d8dca3adee4c1ed087fba5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enumerates the elements of a collection of <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">コレクションの要素を列挙<bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>At this position, the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.</source>
          <target state="translated">この位置での戻り値&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;は定義されていません&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before calling &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;.</source>
          <target state="translated">したがって、 &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;。&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;を呼び出す前に、コレクションの最初の要素に列挙子を進めるに&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; returns the same object until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;まで同じオブジェクトを返します&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;と呼びます&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;。&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; sets the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;戻り値の設定&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;に次の要素&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;。&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">場合&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;コレクション内の最後の要素の後に、列挙子をコレクションの末尾が配置されているパスと&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;返します<ph id="ph1">`false`</ph>&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">列挙子がこの位置では、後続の呼び出しの場合&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;を返すことも<ph id="ph1">`false`</ph>&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.</source>
          <target state="translated">場合は、最後の呼び出し&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;返される<ph id="ph1">`false`</ph>の戻り値&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;が定義されていません&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能とその動作は未定義です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the collection at the current position of the enumerator.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で列挙子の現在位置にあるコレクション。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The return value of GetCurrent is undefined under any of the following conditions:      -   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; is called.</source>
          <target state="translated">できる、GetCurrent の戻り値は、次の条件のいずれかで定義されていない:-列挙子が作成された直後に、コレクション内の最初の要素の前に、列挙子が配置されているまたは&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;と呼びます&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before calling GetCurrent.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;列挙子をできる、GetCurrent を呼び出す前に、コレクションの最初の要素に進める呼び出す必要があります。&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-   The last call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">-を最後に呼び出した&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;返される<ph id="ph1">`false`</ph>コレクションの末尾を示します&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-   The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</source>
          <target state="translated">列挙子は追加、変更、または削除する要素など、コレクションで行った変更により無効になります。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>GetCurrent returns the same object until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; is called.</source>
          <target state="translated">できる、GetCurrent まで同じオブジェクトを返します&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;と呼びます&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; sets the return value of GetCurrent to the next element.</source>
          <target state="translated">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;次の要素にできる、GetCurrent の戻り値を設定します。&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the collection at the current position of the enumerator.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で列挙子の現在位置にあるコレクション。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">列挙子をコレクションの次の要素に進めます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>After an enumerator is created or after the &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; method is called, an enumerator is positioned before the first element of the collection.</source>
          <target state="translated">列挙子を作成した後、または後に、&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;メソッドが呼び出されると、列挙子がコレクションの最初の要素の前に位置付けられます&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The first call to the MoveNext method moves the enumerator to the first element of the collection.</source>
          <target state="translated">MoveNext メソッドの最初の呼び出しは、列挙子をコレクションの最初の要素に移動します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">MoveNext はコレクションの末尾を渡すかどうか、列挙子がコレクション内の最後の要素の後に配置し、MoveNext 返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to MoveNext also return <ph id="ph1">`false`</ph> until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; is called.</source>
          <target state="translated">列挙子は、この位置にあるが、MoveNext を後続の呼び出しを返すことも<ph id="ph1">`false`</ph>まで&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;と呼びます&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to MoveNext or &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能な無効なり、次を MoveNext または&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;&lt;xref:System.InvalidOperationException&gt;。&lt;/xref:System.InvalidOperationException&gt;がスローされます。&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列挙子が次の要素に正常に進んだ場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>列挙子がコレクションの末尾を越えた場合。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">コレクションは、列挙子が作成された後に変更されました。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">初期位置、つまりコレクションの最初の要素の前に、列挙子を設定します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>After you call Reset, the value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.</source>
          <target state="translated">値のリセットを呼び出した後&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;は定義されていません&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; method to move the enumerator to the first element of the collection.</source>
          <target state="translated">呼び出す、&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;列挙子をコレクションの最初の要素に移動するメソッド&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; or Reset throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">場合は、コレクションには、変更が加えられた、追加、変更、やなどの要素を削除すると、列挙子は回復不可能なり、次を&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;リセット スロー &lt;xref:System.InvalidOperationException&gt;。&lt;/xref:System.InvalidOperationException&gt;または&lt;/xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">コレクションは、列挙子が作成された後に変更されました。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>