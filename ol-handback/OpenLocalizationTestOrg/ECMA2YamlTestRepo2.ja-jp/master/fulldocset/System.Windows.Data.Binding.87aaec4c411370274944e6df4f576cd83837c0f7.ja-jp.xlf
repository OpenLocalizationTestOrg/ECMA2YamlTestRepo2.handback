<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f93ce7e9b2a0f9b0985803f63e6c190a6b0214f3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Data.Binding.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">061010c4528d07f4adb8351b37a257c152cf4c71</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17459f3f91ae940db9d8aabd12cd8d467a3666fd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> elements), and any data source (for example, a database, an <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> file, or any object that contains data).</source>
          <target state="translated">バインド ターゲット オブジェクトのプロパティを接続するバインディングの定義に高レベルのアクセスを提供 (通常、<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>要素)、および任意のデータ ソース (たとえば、データベース、<ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>ファイル、またはデータを含む任意のオブジェクト)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> data binding provides a simple and consistent way for applications to present and interact with data.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>データ バインディングは、アプリケーションが存在し、データと対話するためのシンプルかつ一貫した方法を提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Data binding enables you to synchronize the values of the properties of two different objects.</source>
          <target state="translated">データ バインディングでは、2 つのオブジェクトのプロパティの値を同期することができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To establish a binding, use the Binding class or one of the other classes that inherit &lt;xref:System.Windows.Data.BindingBase&gt;.</source>
          <target state="translated">バインドを確立するために、バインディング クラスまたは他の&lt;xref:System.Windows.Data.BindingBase&gt;。&lt;/xref:System.Windows.Data.BindingBase&gt;を継承するクラスのいずれかを使用してください。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</source>
          <target state="translated">どのようなオブジェクトに関係なくをバインドして、データ ソースの種類、各バインディングに依存して次の図に示されているモデル。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Basic data binding diagram<ept id="p1">]</ept><bpt id="p2">(~/add/media/databindingmostbasic.png "</bpt>Basic data binding diagram<ept id="p2">")</ept>       The figure demonstrates the following fundamental <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> data binding concepts.</source>
          <target state="translated"><bpt id="p1">![</bpt>基本的なデータ バインディング ダイアグラム<ept id="p1">]</ept><bpt id="p2">(~/add/media/databindingmostbasic.png "</bpt>基本的なデータ バインディング ダイアグラム<ept id="p2">")</ept>図で次の基本型を示します<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>データ バインディングの概念です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>-   Each binding typically has these four components: a binding target object, a target property, a binding source, and a &lt;xref:System.Windows.Data.Binding.Path%2A&gt; to the value in the binding source to use.</source>
          <target state="translated">-各バインディングは、通常これら&amp;4; つのコンポーネントを: バインディング ターゲット オブジェクト、ターゲット プロパティ、バインディング ソースと&lt;xref:System.Windows.Data.Binding.Path%2A&gt;で使用するバインディング ソースの値にします&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, if you want to bind the content of a &lt;xref:System.Windows.Controls.TextBox&gt; to the Name property of an Employee object, your target object is the &lt;xref:System.Windows.Controls.TextBox&gt;, the target property is the &lt;xref:System.Windows.Controls.TextBox.Text%2A&gt; property, the value to use is Name, and the source object is the Employee object.</source>
          <target state="translated">内容をバインドする場合など、 &lt;xref:System.Windows.Controls.TextBox&gt;、ターゲット オブジェクトは、従業員のオブジェクトのプロパティの名前、 &lt;xref:System.Windows.Controls.TextBox&gt;、target プロパティが、&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;プロパティを使用する値は、名とソース オブジェクトは、従業員オブジェクト&lt;/xref:System.Windows.Controls.TextBox.Text%2A&gt;&lt;/xref:System.Windows.Controls.TextBox&gt;&lt;/xref:System.Windows.Controls.TextBox&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   The target property must be a dependency property.</source>
          <target state="translated">-ターゲット プロパティには、依存関係プロパティをする必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This also means that you cannot bind a field.</source>
          <target state="translated">また、フィールドを連結することはできません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Most properties of &lt;xref:System.Windows.UIElement&gt; objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</source>
          <target state="translated">ほとんどのプロパティの&lt;xref:System.Windows.UIElement&gt;オブジェクトが依存関係プロパティと読み取り専用のものを除く、ほとんどの依存関係プロパティが既定ではデータ バインディングをサポートします&lt;/xref:System.Windows.UIElement&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>(Only &lt;xref:System.Windows.DependencyObject&gt; types can define dependency properties and all &lt;xref:System.Windows.UIElement&gt; objects derive from &lt;xref:System.Windows.DependencyObject&gt;.)      -   Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> object.</source>
          <target state="translated">(&lt;xref:System.Windows.DependencyObject&gt;型のみが依存関係プロパティを定義および&lt;xref:System.Windows.UIElement&gt;のすべてのオブジェクトが&lt;xref:System.Windows.DependencyObject&gt;から派生します。)     -がの図で指定されていない、注意してくださいバインド ソース オブジェクトがカスタムになるように制限されていない<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>オブジェクト&lt;/xref:System.Windows.DependencyObject&gt;&lt;/xref:System.Windows.UIElement&gt;&lt;/xref:System.Windows.DependencyObject&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> data binding supports data in the form of <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> objects and <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>データ バインディングの形式でデータをサポートしている<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>オブジェクトおよび<ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To provide some examples, your binding source may be a &lt;xref:System.Windows.UIElement&gt;, any list object, a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> object that is associated with <ph id="ph2">[!INCLUDE[TLA#tla_adonet](~/add/includes/tlasharptla-adonet-md.md)]</ph> data or Web Services, or an XmlNode that contains your <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> data.</source>
          <target state="translated">いくつかの例を提供する場合、バインディング ソースがあります、 &lt;xref:System.Windows.UIElement&gt;、任意のリスト オブジェクト、<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>オブジェクトに関連付けられている<ph id="ph2">[!INCLUDE[TLA#tla_adonet](~/add/includes/tlasharptla-adonet-md.md)]</ph>データまたは Web サービス、またはを含む XmlNode、<ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>データ&lt;/xref:System.Windows.UIElement&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Windows.Data.Binding.Mode%2A&gt; property to specify the direction of the data flow.</source>
          <target state="translated">使用して、&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;データ フローの方向を指定するプロパティ&lt;/xref:System.Windows.Data.Binding.Mode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.</source>
          <target state="translated">ソースの変更を検出するには一方向または双方向のバインドで、ソースが&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;。&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt;などの適切なプロパティ変更通知のメカニズムを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Implement Property Change Notification<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">例については、次を参照してください。<bpt id="p1">[</bpt>する方法: 実装プロパティの変更通知<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; property specifies the timing of source updates.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;プロパティは、ソースの更新のタイミングを指定します&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see "Basic Data Binding Concepts" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、「基本的なデータ バインディング概念」を参照してください<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_PriorityBinding"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object property="{Binding  declaration}"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_PriorityBinding"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>declaration<ept id="p3">*</ept>    Zero or more attribute-assignment clauses separated by commas (,).</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_PriorityBinding"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<ph id="ph1">```   &lt;object property="{Binding  declaration}"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_PriorityBinding"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## XAML 値<bpt id="p3">*</bpt>宣言<ept id="p3">*</ept>コンマ (,) で区切られた&amp;0; 個以上の属性割り当て句。      </target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>Binding Declarations Overview<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>マークアップ拡張機能のバインド<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>または<bpt id="p2">[</bpt>バインディング宣言の概要<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with an initial path.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス パスを使用します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The initial &lt;xref:System.Windows.Data.Binding.Path*&gt; for the binding.</source>
          <target state="translated">初期&lt;xref:System.Windows.Data.Binding.Path*&gt;バインディングに対する&lt;/xref:System.Windows.Data.Binding.Path*&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Adds a handler for the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; attached event.</source>
          <target state="translated">ハンドラーを追加、&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;アタッチされるイベント&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">このメソッドはサポートで添付イベントの使用状況<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>または<bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>イベントをリッスンします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The handler to add.</source>
          <target state="translated">追加するハンドラー。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Adds a handler for the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; attached event.</source>
          <target state="translated">ハンドラーを追加、&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;アタッチされるイベント&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">このメソッドはサポートで添付イベントの使用状況<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>または<bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>イベントをリッスンします。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The handler to add.</source>
          <target state="translated">追加するハンドラー。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets opaque data passed to the asynchronous data dispatcher.</source>
          <target state="translated">取得または非同期データ ディスパッチャーに渡される非透過データを設定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Data passed to the asynchronous data dispatcher.</source>
          <target state="translated">データに非同期データ ディスパッチャーに渡されます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to evaluate the &lt;xref:System.Windows.Data.Binding.Path*&gt; relative to the data item or the <bpt id="p1">&lt;xref href="System.Windows.Data.DataSourceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得または設定を評価するかどうかを示す値、&lt;xref:System.Windows.Data.Binding.Path*&gt;データ項目を基準または<bpt id="p1">&lt;xref href="System.Windows.Data.DataSourceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Windows.Data.Binding.Path*&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The normal behavior (when this property is <ph id="ph1">`false`</ph>) includes special treatment for &lt;xref:System.Windows.Data.DataSourceProvider&gt; objects.</source>
          <target state="translated">通常の動作 (ときに、このプロパティは<ph id="ph1">`false`</ph>) 用の特別な処理が含まれています&lt;xref:System.Windows.Data.DataSourceProvider&gt;オブジェクト&lt;/xref:System.Windows.Data.DataSourceProvider&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In this case, the binding engine evaluates the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; relative to the object obtained from the &lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt; property.</source>
          <target state="translated">この例では、バインディング エンジンが評価される、&lt;xref:System.Windows.Data.Binding.Path%2A&gt;から取得したオブジェクトを基準とした、&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;プロパティ&lt;/xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In addition, the binding listens for the &lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt; event and reacts accordingly.</source>
          <target state="translated">バインドをさらに、リッスン、&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;イベントし、それに従って動作します&lt;/xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Setting this property to <ph id="ph1">`true`</ph> overrides this behavior and gives the binding access to properties of the &lt;xref:System.Windows.Data.DataSourceProvider&gt; object itself.</source>
          <target state="translated">このプロパティを設定<ph id="ph1">`true`</ph>この動作をオーバーライドしのプロパティへのバインドのアクセスを提供、&lt;xref:System.Windows.Data.DataSourceProvider&gt;オブジェクト自体です&lt;/xref:System.Windows.Data.DataSourceProvider&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to evaluate the path relative to the data item itself; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データ項目自体の相対パスを評価するにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets or sets the converter to use.</source>
          <target state="translated">取得または使用するコンバーターを設定します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</source>
          <target state="translated">バインディングは、元の値とターゲット値の間の型変換を実行しようとする既定のコンバーターを暗黙的に使用します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If a conversion cannot be made, the default converter returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">変換を実行できないかどうか、既定のコンバーターを返します<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you want to associate a custom value converter with a binding, you should create a class that implements the &lt;xref:System.Windows.Data.IValueConverter&gt; interface and supply implementations for the &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; methods.</source>
          <target state="translated">バインディングにカスタム値コンバーターを関連付ける場合を実装するクラスを作成する必要があります、&lt;xref:System.Windows.Data.IValueConverter&gt;インターフェイスし、実装を提供、&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;と&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;メソッド&lt;/xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;&lt;/xref:System.Windows.Data.IValueConverter.Convert%2A&gt;&lt;/xref:System.Windows.Data.IValueConverter&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</source>
          <target state="translated">値コンバーターでは、1 つの型からのデータの変更、文字セットなど、カルチャの詳細の間の変換、または、プレゼンテーションの他の側面を変更できます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For examples of typical conversion scenarios, see "Data Conversion" in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">変換の一般的なシナリオの例については、「データの変換」を参照してください、<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Converter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Converter="myConverter"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Converter"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>myConverter<ept id="p3">*</ept>    A resource reference to a class that implements the &lt;xref:System.Windows.Data.IValueConverter&gt; interface, which includes implementations of the &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; methods.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Converter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<ph id="ph1">```   &lt;object Converter="myConverter"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Converter"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## XAML 値<bpt id="p3">*</bpt>myConverter<ept id="p3">*</ept>を実装するクラスにリソース参照、&lt;xref:System.Windows.Data.IValueConverter&gt;インターフェイスの実装が含まれています、&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;と&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;メソッド&lt;/xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;&lt;/xref:System.Windows.Data.IValueConverter.Convert%2A&gt;&lt;/xref:System.Windows.Data.IValueConverter&gt;。      </target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To refer to a value converter, use the <bpt id="p1">[</bpt>StaticResource Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">値コンバーター、参照を使用して、 <bpt id="p1">[</bpt>StaticResource マークアップ拡張機能<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A value of type <bpt id="p1">&lt;xref href="System.Windows.Data.IValueConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">型の値<bpt id="p1">&lt;xref href="System.Windows.Data.IValueConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the culture in which to evaluate the converter.</source>
          <target state="translated">取得またはコンバーターを評価するカルチャを設定します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you do not set this property, the binding engine uses the <ph id="ph1">`Language`</ph> property of the binding target object.</source>
          <target state="translated">バインディング エンジンを使用してこのプロパティを設定しない場合、<ph id="ph1">`Language`</ph>バインディング ターゲット オブジェクトのプロパティです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>この既定値は"EN-US"または明示的に設定されている場合、ページのルート要素 (または任意の要素) から値を継承します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For information about data conversion, see the Data Conversion section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">データ変換については、データ変換のセクションを参照してください、<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the parameter to pass to the &lt;xref:System.Windows.Data.Binding.Converter*&gt;.</source>
          <target state="translated">取得または&lt;xref:System.Windows.Data.Binding.Converter*&gt;。&lt;/xref:System.Windows.Data.Binding.Converter*&gt;へ渡すパラメーターの設定</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can use the ConverterParameter property to specify how an object is converted.</source>
          <target state="translated">ConverterParameter プロパティを使用して、オブジェクトを変換する方法を指定することができます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This property passes additional information to a converter that you use on a binding.</source>
          <target state="translated">このプロパティは、追加の情報をバインディングで使用するコンバーターを渡します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When you specify a ConverterParameter, the value is passed to the &lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt; and &lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; methods as the <ph id="ph1">`parameter`</ph> parameter.</source>
          <target state="translated">ConverterParameter を指定する場合、値は、&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;と&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;メソッドとして、<ph id="ph1">`parameter`</ph>パラメーター&lt;/xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt; &lt;/xref:System.Windows.Data.IValueConverter.Convert%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Produce a Value Based on a List of Bound Items<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">例については、次を参照してください。<bpt id="p1">[</bpt>する方法: 値を基にしたバインド品目の一覧を生成<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>That example shows an implementation of an &lt;xref:System.Windows.Data.IMultiValueConverter&gt; but the usage still applies.</source>
          <target state="translated">実装の例を&lt;xref:System.Windows.Data.IMultiValueConverter&gt;が、使用状況が引き続き適用されます&lt;/xref:System.Windows.Data.IMultiValueConverter&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The parameter to pass to the &lt;xref:System.Windows.Data.Binding.Converter*&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.Converter*&gt;。&lt;/xref:System.Windows.Data.Binding.Converter*&gt;に渡すパラメーター</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Used as a returned value to instruct the binding engine not to perform any action.</source>
          <target state="translated">バインディング エンジンを任意のアクションを実行しないよう指示するため、戻り値として使用されます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A binding source property or a converter can return DoNothing to instruct the binding engine not to perform any action.</source>
          <target state="translated">バインディング ソース プロパティまたはコンバーターは、バインド エンジンを任意のアクションを実行しないように指示する DoNothing を返すことができます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next &lt;xref:System.Windows.Data.Binding&gt; in a &lt;xref:System.Windows.Data.PriorityBinding&gt;, or not to use the <ph id="ph1">`FallBackValue`</ph> or default value.</source>
          <target state="translated">例については、値を次に移動しますが、バインディング ターゲットに転送していないバインディング エンジンに指示する&lt;xref:System.Windows.Data.Binding&gt;で、 &lt;xref:System.Windows.Data.PriorityBinding&gt;、使用しないか、<ph id="ph1">`FallBackValue`</ph>または既定値です&lt;/xref:System.Windows.Data.PriorityBinding&gt;&lt;/xref:System.Windows.Data.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the element to use as the binding source object.</source>
          <target state="translated">取得またはバインド ソース オブジェクトとして使用する要素の名前を設定します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This property is useful when you want to bind to the property of another element in your application.</source>
          <target state="translated">このプロパティは、アプリケーションで別の要素のプロパティにバインドするときに便利です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, if you want to use a &lt;xref:System.Windows.Controls.Slider&gt; to control the height of another control in your application, or if you want to bind the &lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt; of your control to the &lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt; property of your &lt;xref:System.Windows.Controls.ListBox&gt; control.</source>
          <target state="translated">使用する場合など、 &lt;xref:System.Windows.Controls.Slider&gt;、アプリケーションの他のコントロールの高さを制御する、またはバインドする場合、 &lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;、コントロールを&lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt;のプロパティ、&lt;xref:System.Windows.Controls.ListBox&gt;コントロール&lt;/xref:System.Windows.Controls.ListBox&gt;&lt;/xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt;&lt;/xref:System.Windows.Controls.ContentControl.Content%2A&gt;&lt;/xref:System.Windows.Controls.Slider&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">既定では、バインドがで指定されたデータ コンテキストを継承、<ph id="ph1">`DataContext`</ph>いずれかが設定されている場合は、プロパティです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>However, the ElementName property is one of the ways you can explicitly set the source of a &lt;xref:System.Windows.Data.Binding&gt; and override the inherited data context.</source>
          <target state="translated">ただし、ElementName プロパティでは、いずれかのソースを明示的に設定することができます、&lt;xref:System.Windows.Data.Binding&gt;し、継承されたデータ コンテキストをオーバーライドします&lt;/xref:System.Windows.Data.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: バインド ソースを指定して<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Data.Binding.Source%2A&gt; and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt; properties of the &lt;xref:System.Windows.Data.Binding&gt; class also enable you to set the source of the binding explicitly.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;と&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;のプロパティ、&lt;xref:System.Windows.Data.Binding&gt;クラスも有効にするバインディングのソースの設定を明示的にします&lt;/xref:System.Windows.Data.Binding&gt;&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A&gt;&lt;/xref:System.Windows.Data.Binding.Source%2A&gt;。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>However, only one of the three properties, ElementName, &lt;xref:System.Windows.Data.Binding.Source%2A&gt;, and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;, should be set for each binding, or a conflict might occur.</source>
          <target state="translated">ただし、3 つのプロパティでは、ElementName のいずれかのみ&lt;xref:System.Windows.Data.Binding.Source%2A&gt;、および&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;、する必要がありますセットごとにバインドする、または競合が発生する可能性があります&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A&gt;&lt;/xref:System.Windows.Data.Binding.Source%2A&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;xref uid="langword_csharp_Name" name="Name" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property or <bpt id="p2">[</bpt>x:Name Directive<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept> of the element of interest.</source>
          <target state="translated">値、 <bpt id="p1">&lt;xref uid="langword_csharp_Name" name="Name" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロパティまたは<bpt id="p2">[</bpt>X:name ディレクティブ<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>の関心のある要素。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can refer to elements in code only if they are registered to the appropriate &lt;xref:System.Windows.NameScope&gt; through <bpt id="p1">&lt;xref uid="langword_csharp_RegisterName" name="RegisterName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">適切な登録されている場合にのみ、コード内の要素を参照することができます&lt;xref:System.Windows.NameScope&gt;を通じて<bpt id="p1">&lt;xref uid="langword_csharp_RegisterName" name="RegisterName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Windows.NameScope&gt; 。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>WPF XAML 名前スコープ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> namespace manager object used by the binding attached to the specified object.</source>
          <target state="translated">返します、<ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph>指定したオブジェクトにアタッチされているバインドによって使用される名前空間マネージャー オブジェクトです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This method supports attached property usage for the &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt; attached property.</source>
          <target state="translated">このメソッドの添付プロパティの使用をサポートする、&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;添付プロパティ&lt;/xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> namespace managers are relevant only if the data in the binding came from an <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> binding source (&lt;xref:System.Windows.Data.XmlDataProvider&gt; object).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>名前空間マネージャーが、バインドでデータの出所場合にのみ、<ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>バインディング ソース (&lt;xref:System.Windows.Data.XmlDataProvider&gt;オブジェクト).&lt;/xref:System.Windows.Data.XmlDataProvider&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling &lt;xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt; on the binding, then this method will return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">名前空間マネージャーが具体的には適用されていない場合、元のデータ ソースを作成または、後で呼び出すことによって&lt;xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt;バインドで、このメソッドは<ph id="ph1">`null`</ph>&lt;/xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This method will always return <ph id="ph1">`null`</ph> if the data behind the binding is not <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated">このメソッドは常に返します<ph id="ph1">`null`</ph>バインドの背後にデータがない場合<ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The object from which to get namespace information.</source>
          <target state="translated">名前空間の情報を取得するオブジェクト。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A returned object used for viewing <ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph> namespaces that relate to the binding on the passed object element.</source>
          <target state="translated">表示するために使用されるオブジェクトを返します<ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]</ph>渡されたオブジェクト要素に対するバインディングに関連する名前空間。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This object should be cast as <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">このオブジェクトとしてキャストする必要があります<ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter cannot be <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターを指定できません<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Used as the &lt;xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*&gt; of <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.PropertyChangedEventArgs?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> to indicate that an indexer property has changed.</source>
          <target state="translated">として使用される、&lt;xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*&gt;の<ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.PropertyChangedEventArgs?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>をインデクサー プロパティが変更されたことを示します&lt;/xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should get and set values asynchronously.</source>
          <target state="translated">取得またはを示す値を設定するかどうか、 <bpt id="p1">&lt;xref href="System.Windows.Data.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>取得および非同期的に値を設定する必要があります。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Use the IsAsync property when the <ph id="ph1">`get`</ph> accessor of your binding source property might take a long time.</source>
          <target state="translated">IsAsync プロパティを使用するときに、<ph id="ph1">`get`</ph>バインディング ソースのプロパティのアクセサー時間がかかる可能性があります。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>One example is an image property with a <ph id="ph1">`get`</ph> accessor that downloads from the Web.</source>
          <target state="translated">1 つの例は、イメージのプロパティで、 <ph id="ph1">`get`</ph> Web からダウンロードするアクセサー。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Setting IsAsync to <ph id="ph1">`true`</ph> avoids blocking the <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> while the download occurs.</source>
          <target state="translated">設定 IsAsync<ph id="ph1">`true`</ph>ブロッキングを回避できます、<ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>ダウンロードが実行中にします。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>While waiting for the value to arrive, the binding reports the &lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;, if one is available, or the default value of the binding target property.</source>
          <target state="translated">バインディングがレポートに到達する値を待っている間に、 &lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;、いずれかが使用可能なまたは、バインディングの既定値はターゲット プロパティ&lt;/xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>However, there should not be many scenarios where you need to use the IsAsync property.</source>
          <target state="translated">ただし、あるできません IsAsync プロパティを使用する必要がある多くのシナリオ。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph> guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)]</ph>ガイドライン推奨桁違いフィールド セットよりも低速であるプロパティを定義します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When you are creating your class, consider handling extremely slow operations outside of the <ph id="ph1">`get`</ph> accessor and caching the result.</source>
          <target state="translated">クラスを作成する場合は、処理以外の操作を非常に遅いことを検討してください、<ph id="ph1">`get`</ph>アクセサー、結果をキャッシュします。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Choosing Between Properties and Methods<ept id="p1">](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: プロパティとの間の選択とメソッド<ept id="p1">](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)</ept>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the direction of the data flow in the binding.</source>
          <target state="translated">取得またはバインドのデータ フローの方向を示す値を設定します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To support &lt;xref:System.Windows.Data.BindingMode&gt; and &lt;xref:System.Windows.Data.BindingMode&gt; bindings, the underlying data must implement &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Data.BindingMode&gt;&lt;xref:System.Windows.Data.BindingMode&gt;基になるデータのバインドが&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;。&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt;を実装する必要があります&lt;/xref:System.Windows.Data.BindingMode&gt;と&lt;/xref:System.Windows.Data.BindingMode&gt;をサポートするには</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>How to: Implement Property Change Notification<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>する方法: 実装プロパティの変更通知<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For &lt;xref:System.Windows.Data.BindingMode&gt; or &lt;xref:System.Windows.Data.BindingMode&gt; bindings, you can control the target-to-source updates by setting the &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Windows.Data.BindingMode&gt;または&lt;xref:System.Windows.Data.BindingMode&gt;バインドを設定して、ターゲットからソースへの更新プログラムを制御することができます、&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;プロパティ&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;&lt;/xref:System.Windows.Data.BindingMode&gt;&lt;/xref:System.Windows.Data.BindingMode&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;.</source>
          <target state="translated">詳細については、 &lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;。&lt;/xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For more information on the different binding modes, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">異なるバインディング モードの詳細については、次を参照してください。<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which returns the default binding mode value of the target dependency property.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="System.Windows.Data.BindingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、ターゲット依存関係プロパティの既定のバインド モード値が返されます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>However, the default value varies for each dependency property.</source>
          <target state="translated">ただし、既定値は、各依存関係プロパティによって異なります。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</source>
          <target state="translated">テキスト ボックスやチェック ボックスなどのユーザーが編集できるプロパティは一般に、その他のほとんどのプロパティは既定で一方向のバインドが双方向のバインディングを既定です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using &lt;xref:System.Windows.DependencyProperty.GetMetadata<bpt id="p1">*</bpt>&gt; and then check the Boolean value of the &lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault<ept id="p1">*</ept>&gt; property.</source>
          <target state="translated">依存関係プロパティが既定では、一方向または双方向をバインドするかどうかを決定するプログラムによる方法のプロパティを使用して、プロパティ メタデータを取得する&lt;&gt; <bpt id="p1">*</bpt>&gt; のブール値を確認し、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; プロパティです。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; event when a value is transferred from the binding target to the binding source.</source>
          <target state="translated">取得または生成するかどうかを示す値を設定、&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;バインディング ターゲットからバインディング ソースへ値が転送されるときにイベント&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; event should be raised when the binding source value is updated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;バインディング ソースの値が更新された、それ以外の場合は、イベントを発生させるか<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt; 。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; event when a value is transferred from the binding source to the binding target.</source>
          <target state="translated">取得または生成するかどうかを示す値を設定、&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;バインディング ソースからバインディング ターゲットへ値が転送されるときにイベント&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; event should be raised when the binding target value is updated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;バインディング ターゲットの値が更新された、それ以外の場合は、イベントを発生させるか<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt; 。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to raise the &lt;xref:System.Windows.Controls.Validation.Error&gt; attached event on the bound object.</source>
          <target state="translated">取得または生成するかどうかを示す値を設定、&lt;xref:System.Windows.Controls.Validation.Error&gt;バインドされたオブジェクトに対してイベントをアタッチします&lt;/xref:System.Windows.Controls.Validation.Error&gt;。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If the binding has &lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt; associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</source>
          <target state="translated">バインディングの場合&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;関連付けられているバインディング エンジンを確認のたびに各規則は、ソース プロパティにターゲット プロパティの値を転送します&lt;/xref:System.Windows.Data.Binding.ValidationRules%2A&gt;。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If a rule invalidates a value, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; object and adds it to the &lt;xref:System.Windows.Controls.Validation&gt;.&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt; collection of the bound object.</source>
          <target state="translated">ルールには、値が無効になります、バインド エンジンを作成します、&lt;xref:System.Windows.Controls.ValidationError&gt;オブジェクトを追加して、 &lt;xref:System.Windows.Controls.Validation&gt;.&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt;バインドされたオブジェクトのコレクション&lt;/xref:System.Windows.Controls.Validation.Errors%2A&gt;&lt;/xref:System.Windows.Controls.Validation&gt;&lt;/xref:System.Windows.Controls.ValidationError&gt;。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; property is not empty, the &lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt; attached property of the object is set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">ときに、&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;プロパティは空でなく、&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt;アタッチされたオブジェクトのプロパティが<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If the NotifyOnValidationError property of the &lt;xref:System.Windows.Data.Binding&gt; is set to <ph id="ph1">`true`</ph>, then the binding engine raises the &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; attached event on the object.</source>
          <target state="translated">場合の NotifyOnValidationError プロパティ、&lt;xref:System.Windows.Data.Binding&gt;に設定されている<ph id="ph1">`true`</ph>、バインディング エンジンが発生し、&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt;オブジェクトのイベントをアタッチします&lt;/xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt;&lt;/xref:System.Windows.Data.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For a detailed discussion of the validation process, see the Data Validation section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">検証プロセスの詳細については、データの検証」セクションを参照してください、<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.Validation.Error&gt; attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、&lt;xref:System.Windows.Controls.Validation.Error&gt;添付イベントが、それ以外のソースの更新中に検証エラーがあるときにバインドされたオブジェクトに対して発生する必要があります<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Windows.Controls.Validation.Error&gt; 。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets or sets the path to the binding source property.</source>
          <target state="translated">取得または、バインディング ソース プロパティへのパスを設定します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</source>
          <target state="translated">各バインドは通常これら&amp;4; つのコンポーネントを持つ: バインディング ターゲット オブジェクト、ターゲット プロパティ、バインディング ソース、およびで使用するバインディング ソースの値へのパス。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For more information about these data binding concepts, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">これらのデータ バインディング概念の詳細については、次を参照してください。<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Use the Path property to specify the source value you want to bind to:      -   In the simplest case, the Path property value is the name of the property of the source object to use for the binding, such as <ph id="ph1">`Path=PropertyName`</ph>.</source>
          <target state="translated">バインドするソースの値を指定するパス プロパティを使用して: - 最も簡単な場合は、プロパティの値などを使用して、バインディングのソース オブジェクトのプロパティの名前は、パス<ph id="ph1">`Path=PropertyName`</ph>です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-   Subproperties of a property can be specified by a syntax similar to that used in <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph>.</source>
          <target state="translated">の使用されるような構文で指定できるプロパティのサブプロパティ<ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]</ph>します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For instance, the clause <ph id="ph1">`Path=ShoppingCart.Order`</ph> sets the binding to the subproperty <ph id="ph2">`Order`</ph> of the object or property <ph id="ph3">`ShoppingCart`</ph>.</source>
          <target state="translated">句のインスタンス、<ph id="ph1">`Path=ShoppingCart.Order`</ph>サブプロパティにバインディングを設定<ph id="ph2">`Order`</ph>オブジェクトまたはプロパティの<ph id="ph3">`ShoppingCart`</ph>します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-   To bind to an attached property, place parentheses around the attached property.</source>
          <target state="translated">添付プロパティをバインドするには、添付プロパティを囲むかっこを配置します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For example, to bind to the attached property &lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;, the syntax is <ph id="ph1">`Path=(DockPanel.Dock)`</ph>.</source>
          <target state="translated">例については、添付プロパティをバインドする&lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;、構文は<ph id="ph1">`Path=(DockPanel.Dock)`</ph>&lt;/xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>-   Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</source>
          <target state="translated">にプロパティのインデクサーは、インデクサーが適用されているプロパティ名の後ろに角かっこ内で指定できます。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>For instance, the clause <ph id="ph1">`Path=ShoppingCart[0]`</ph> sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</source>
          <target state="translated">句のインスタンス、<ph id="ph1">`Path=ShoppingCart[0]`</ph>リテラル文字列「0」を処理するプロパティの内部インデックスの作成方法に対応するインデックスにバインディングを設定します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Multiple indexers are also supported.</source>
          <target state="translated">複数のインデクサーもサポートされます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>-   Indexers and subproperties can be mixed in a <ph id="ph1">`Path`</ph> clause; for example, <ph id="ph2">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</ph>      -   Inside indexers you can have multiple indexer parameters separated by commas (,).</source>
          <target state="translated">インデクサーとサブプロパティを混在させることができます、<ph id="ph1">`Path`</ph>句。 たとえば、 <ph id="ph2">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</ph> - 内部インデクサー コンマ (,) で区切られた複数のインデクサー パラメーターを持つことができます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The type of each parameter can be specified with parentheses.</source>
          <target state="translated">各パラメーターの型は、かっこで指定できます。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>For example, you can have <ph id="ph1">`Path="[(sys:Int32)42,(sys:Int32)24]"`</ph>, where <ph id="ph2">`sys`</ph> is mapped to the <ph id="ph3">`System`</ph> namespace.</source>
          <target state="translated">たとえば、ことが<ph id="ph1">`Path="[(sys:Int32)42,(sys:Int32)24]"`</ph>ここで、<ph id="ph2">`sys`</ph>にマップされて、<ph id="ph3">`System`</ph>名前空間。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>-   When the source is a collection view, the current item can be specified with a slash (/).</source>
          <target state="translated">-ソースがコレクション ビューの場合、現在の項目は、スラッシュ (/) を指定できます。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For example, the clause <ph id="ph1">`Path=/`</ph> sets the binding to the current item in the view.</source>
          <target state="translated">たとえば、この句<ph id="ph1">`Path=/`</ph>ビューの現在のアイテムにバインディングを設定します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>When the source is a collection, this syntax specifies the current item of the default collection view.</source>
          <target state="translated">ソースがコレクションである場合は、この構文は、既定のコレクション ビューの現在の項目を指定します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-   Property names and slashes can be combined to traverse properties that are collections.</source>
          <target state="translated">のプロパティは、コレクションを走査するプロパティ名前とスラッシュを結合できます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Path=/Offices/ManagerName`</ph> specifies the current item of the source collection, which contains an <ph id="ph2">`Offices`</ph> property that is also a collection.</source>
          <target state="translated">たとえば、<ph id="ph1">`Path=/Offices/ManagerName`</ph>を含むソース コレクションの現在の項目を指定します、<ph id="ph2">`Offices`</ph>コレクションであるプロパティ。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Its current item is an object that contains a <ph id="ph1">`ManagerName`</ph> property.</source>
          <target state="translated">現在のアイテムが格納しているオブジェクト、<ph id="ph1">`ManagerName`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-   Optionally, a period (.) path can be used to bind to the current source.</source>
          <target state="translated">-必要に応じて、現在のソースにバインドする、ピリオド (.) のパスを使用できます。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Text="{Binding}"`</ph> is equivalent to <ph id="ph2">`Text="{Binding Path=.}"`</ph>.</source>
          <target state="translated">たとえば、<ph id="ph1">`Text="{Binding}"`</ph>は等価<ph id="ph2">`Text="{Binding Path=.}"`</ph>です。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For information about path syntax, see <bpt id="p1">[</bpt>Binding Declarations Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>PropertyPath XAML Syntax<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">パスの構文については、次を参照してください。<bpt id="p1">[</bpt>バインディング宣言の概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>または<bpt id="p2">[</bpt>PropertyPath 構文は XAML<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> bindings, see the &lt;xref:System.Windows.Data.Binding.XPath%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph>バインド」を参照してください、&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;プロパティ&lt;/xref:System.Windows.Data.Binding.XPath%2A&gt;。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>To bind to an entire object, you do not need to specify the Path property.</source>
          <target state="translated">オブジェクト全体にバインドするには、パス プロパティを指定する必要はありません。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>For more information, see "Specifying the Path to the Value" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](../Topic/Data%20Binding%20Overview.md)</ept>.</source>
          <target state="translated">詳細についてを参照してください「を指定する、パスに、値」<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](../Topic/Data%20Binding%20Overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The path to the binding source.</source>
          <target state="translated">バインディング ソースへのパス。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets or sets the binding source by specifying its location relative to the position of the binding target.</source>
          <target state="translated">取得またはバインディング ターゲットの位置を基準には、その場所を指定して、バインディング ソースを設定します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</source>
          <target state="translated">オブジェクトの&amp;1; つのプロパティを同一のオブジェクトの別のプロパティにバインドするか、バインディング、スタイルまたはテンプレートで定義する、このプロパティは使用一般的です。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">既定では、バインドがで指定されたデータ コンテキストを継承、<ph id="ph1">`DataContext`</ph>いずれかが設定されている場合は、プロパティです。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>However, the RelativeSource property is one of the ways you can explicitly set the source of a &lt;xref:System.Windows.Data.Binding&gt; and override the inherited data context.</source>
          <target state="translated">ただし、RelativeSource プロパティでは、いずれかのソースを明示的に設定することができます、&lt;xref:System.Windows.Data.Binding&gt;し、継承されたデータ コンテキストをオーバーライドします&lt;/xref:System.Windows.Data.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: バインド ソースを指定して<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName&gt; properties also enable you to set the source of the binding explicitly.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;と&lt;xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName&gt;プロパティも有効にするバインディングのソースの設定を明示的にします&lt;/xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>However, only one of the three properties, &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;, &lt;xref:System.Windows.Data.Binding.Source%2A&gt;, and RelativeSource, should be set for each binding, or a conflict can occur.</source>
          <target state="translated">ただし、3 つのプロパティの&amp;1; つだけ&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;、 &lt;xref:System.Windows.Data.Binding.Source%2A&gt;、RelativeSource は、各バインディングの設定や、競合が発生することができます&lt;/xref:System.Windows.Data.Binding.Source%2A&gt;&lt;/xref:System.Windows.Data.Binding.ElementName%2A&gt;。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>RelativeSource MarkupExtension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>についてを参照してください<bpt id="p1">[</bpt>RelativeSource MarkupExtension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_RelativeSource"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_RelativeSource"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Data.RelativeSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object specifying the relative location of the binding source to use.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Data.RelativeSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトを使用するバインディング ソースの相対的な位置を指定します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Removes a handler for the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; attached event.</source>
          <target state="translated">ハンドラーを削除、&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;アタッチされるイベント&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">このメソッドはサポートで添付イベントの使用状況<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>または<bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>イベントをリッスンします。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The handler to remove.</source>
          <target state="translated">削除するハンドラー。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Removes a handler for the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; attached event.</source>
          <target state="translated">ハンドラーを削除、&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;アタッチされるイベント&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">このメソッドはサポートで添付イベントの使用状況<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to the event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>または<bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>イベントをリッスンします。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The handler to remove.</source>
          <target state="translated">削除するハンドラー。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Sets a namespace manager object used by the binding attached to the provided element.</source>
          <target state="translated">指定した要素にアタッチされているバインドによって使用される名前空間マネージャー オブジェクトを設定します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This method supports attached property usage for the &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt; attached property.</source>
          <target state="translated">このメソッドの添付プロパティの使用をサポートする、&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;添付プロパティ&lt;/xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The object from which to get namespace information.</source>
          <target state="translated">名前空間の情報を取得するオブジェクト。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> to use for namespace evaluation in the passed element.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>Xref:System.Xml.XmlNamespaceManager?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>渡された要素で名前空間の評価に使用します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.Binding.Path*&gt; property should be persisted.</source>
          <target state="translated">示すかどうか、&lt;xref:System.Windows.Data.Binding.Path*&gt;プロパティを永続化する必要があります&lt;/xref:System.Windows.Data.Binding.Path*&gt;。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; property does not have a simple default value.</source>
          <target state="translated">これは、<ph id="ph1">`ShouldSerialize`</ph>ためメソッドが用意されて、&lt;xref:System.Windows.Data.Binding.Path%2A&gt;プロパティには、単純な既定値にありません&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">このメソッドは、既定値から、プロパティが変更されたかどうかを示します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.Binding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.Binding&gt;.</source>
          <target state="translated">か、&lt;xref:System.Windows.Data.Binding&gt;または&lt;xref:System.Windows.Data.Binding&gt;。&lt;/xref:System.Windows.Data.Binding&gt;を組み込む独自の開発コントロール&lt;/xref:System.Windows.Data.Binding&gt;をデザイナーを開発している場合に通常、このメソッドが呼び出す</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>プロパティの値が既定から変更された場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.Binding.Source*&gt; property should be persisted.</source>
          <target state="translated">示すかどうか、&lt;xref:System.Windows.Data.Binding.Source*&gt;プロパティを永続化する必要があります&lt;/xref:System.Windows.Data.Binding.Source*&gt;。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.Binding.Source%2A&gt; property does not have a simple default value.</source>
          <target state="translated">これは、<ph id="ph1">`ShouldSerialize`</ph>ためメソッドが用意されて、&lt;xref:System.Windows.Data.Binding.Source%2A&gt;プロパティには、単純な既定値にありません&lt;/xref:System.Windows.Data.Binding.Source%2A&gt;。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">このメソッドは、既定値から、プロパティが変更されたかどうかを示します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.Binding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.Binding&gt;.</source>
          <target state="translated">か、&lt;xref:System.Windows.Data.Binding&gt;または&lt;xref:System.Windows.Data.Binding&gt;。&lt;/xref:System.Windows.Data.Binding&gt;を組み込む独自の開発コントロール&lt;/xref:System.Windows.Data.Binding&gt;をデザイナーを開発している場合に通常、このメソッドが呼び出す</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>プロパティの値が既定から変更された場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;xref:System.Windows.Data.Binding.ValidationRules*&gt; property should be persisted.</source>
          <target state="translated">示すかどうか、&lt;xref:System.Windows.Data.Binding.ValidationRules*&gt;プロパティを永続化する必要があります&lt;/xref:System.Windows.Data.Binding.ValidationRules*&gt;。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt; property does not have a simple default value.</source>
          <target state="translated">これは、<ph id="ph1">`ShouldSerialize`</ph>ためメソッドが用意されて、&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;プロパティには、単純な既定値にありません&lt;/xref:System.Windows.Data.Binding.ValidationRules%2A&gt;。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">このメソッドは、既定値から、プロパティが変更されたかどうかを示します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>You typically invoke this method if you are either developing a designer for the &lt;xref:System.Windows.Data.Binding&gt; or developing your own control incorporating the &lt;xref:System.Windows.Data.Binding&gt;.</source>
          <target state="translated">か、&lt;xref:System.Windows.Data.Binding&gt;または&lt;xref:System.Windows.Data.Binding&gt;。&lt;/xref:System.Windows.Data.Binding&gt;を組み込む独自の開発コントロール&lt;/xref:System.Windows.Data.Binding&gt;をデザイナーを開発している場合に通常、このメソッドが呼び出す</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has changed from its default; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>プロパティの値が既定から変更された場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Gets or sets the object to use as the binding source.</source>
          <target state="translated">取得または、バインディング ソースとして使用するオブジェクトを設定します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">既定では、バインドがで指定されたデータ コンテキストを継承、<ph id="ph1">`DataContext`</ph>いずれかが設定されている場合は、プロパティです。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>However, the Source property is one of the ways you can explicitly set the source of a &lt;xref:System.Windows.Data.Binding&gt; and override the inherited data context.</source>
          <target state="translated">ただし、ソース プロパティでは、いずれかのソースを明示的に設定することができます、&lt;xref:System.Windows.Data.Binding&gt;し、継承されたデータ コンテキストをオーバーライドします&lt;/xref:System.Windows.Data.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the Source property instead of the <ph id="ph1">`DataContext`</ph> property.</source>
          <target state="translated">いくつかのプロパティが、同じデータ コンテキストを継承するスコープを確立するの機能を必要がない場合の代わりに、ソース プロパティを使用することができます、<ph id="ph1">`DataContext`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName&gt; properties also enable you to set the source of the binding explicitly.</source>
          <target state="translated">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;と&lt;xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName&gt;プロパティも有効にするバインディングのソースの設定を明示的にします&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>However, only one of the three properties, &lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;, Source, and &lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;, should be set for each binding, or a conflict can occur.</source>
          <target state="translated">ただし、3 つのプロパティの&amp;1; つだけ&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;、ソース、および&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;、くださいセットごとにバインドする、または競合が発生することができます&lt;/xref:System.Windows.Data.Binding.RelativeSource%2A&gt;&lt;/xref:System.Windows.Data.Binding.ElementName%2A&gt;。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">このプロパティは、バインディング ソースの競合がある場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>To clear this property, set it to &lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;.</source>
          <target state="translated">このプロパティをクリアするには、設定&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;。&lt;/xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Source"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Source="object"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Source"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>object<ept id="p3">*</ept>    An existing object.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Source"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<ph id="ph1">```   &lt;object Source="object"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Source"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## XAML 値<bpt id="p3">*</bpt>オブジェクト<ept id="p3">*</ept>既存のオブジェクト。      </target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>To refer to an existing object, use the <bpt id="p1">[</bpt>StaticResource Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept></source>
          <target state="translated">既存のオブジェクトを参照を使用して、 <bpt id="p1">[</bpt>StaticResource マークアップ拡張機能<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept></target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The object to use as the binding source.</source>
          <target state="translated">バインディング ソースとして使用するオブジェクト。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; attached event.</source>
          <target state="translated">識別、&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;アタッチされるイベント&lt;/xref:System.Windows.Data.Binding.SourceUpdated&gt;。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; attached event.</source>
          <target state="translated">識別、&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;アタッチされるイベント&lt;/xref:System.Windows.Data.Binding.TargetUpdated&gt;。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">取得または、バインディング ソースの値の更新中にバインディング エンジンが検出した例外を処理するためのカスタム ロジックの提供に使用できるハンドラーを設定します。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>This is only applicable if you have associated an <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with your binding.</source>
          <target state="translated">これは該当するは、関連付けられている場合のみ、 <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>バインディングを使用します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;バインディング ソース プロパティの更新中にスローされる例外をチェックする組み込みの検証規則が&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>If you have associated the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; with your &lt;xref:System.Windows.Data.Binding&gt; object, you can use this property to set a handler to provide custom logic for handling these exceptions.</source>
          <target state="translated">関連付けられている場合、&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;で、&lt;xref:System.Windows.Data.Binding&gt;オブジェクト、このプロパティを使用してこれらの例外を処理するためのカスタム ロジックを提供するハンドラーを設定することができます&lt;/xref:System.Windows.Data.Binding&gt;&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>If an UpdateSourceExceptionFilter is not specified on the &lt;xref:System.Windows.Data.Binding&gt;, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the exception and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
          <target state="translated">UpdateSourceExceptionFilter がで指定されていない場合、 &lt;xref:System.Windows.Data.Binding&gt;、バインド エンジンによって作成、&lt;xref:System.Windows.Controls.ValidationError&gt;例外を使用し、それを追加、&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;バインドされている要素のコレクション&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Controls.ValidationError&gt;&lt;/xref:System.Windows.Data.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">バインディング ソースの値の更新中にバインディング エンジンが検出した例外を処理するためのカスタム ロジックを提供するメソッド。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines the timing of binding source updates.</source>
          <target state="translated">取得または、バインディング ソースを更新するタイミングを決定する値を設定します。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Bindings that are &lt;xref:System.Windows.Data.BindingMode&gt; or &lt;xref:System.Windows.Data.BindingMode&gt; listen for changes in the target property and propagate them back to the source.</source>
          <target state="translated">バインドを&lt;xref:System.Windows.Data.BindingMode&gt;または&lt;xref:System.Windows.Data.BindingMode&gt;ターゲット プロパティの変更をリッスンし、それらをソースに反映されます&lt;/xref:System.Windows.Data.BindingMode&gt;&lt;/xref:System.Windows.Data.BindingMode&gt;。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>This is known as updating the source.</source>
          <target state="translated">これは、ソースの更新と呼ばれます。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Usually, these updates happen whenever the target property changes.</source>
          <target state="translated">通常、これらの更新プログラムは、ターゲット プロパティが変更されるたびに発生します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</source>
          <target state="translated">これは、チェック ボックスおよびその他の単純なコントロールの問題が、通常ありませんテキスト フィールドに対する適切です。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</source>
          <target state="translated">すべてキーストロークにパフォーマンスが低下することができ、backspace キーし、新しい値をコミットする前に入力ミスを修正する通常の営業案件のユーザーを拒否に更新しています。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Therefore, the default UpdateSourceTrigger value of the &lt;xref:System.Windows.Controls.TextBox.Text%2A&gt; property is &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt; and not &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;.</source>
          <target state="translated">したがって、UpdateSourceTrigger の既定値、&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;プロパティは&lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;および not &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;.&lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt; &lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt; &lt;/xref:System.Windows.Controls.TextBox.Text%2A&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>If you set the UpdateSourceTrigger value to &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;, you must call the &lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt; method or the changes will not propagate back to the source.</source>
          <target state="translated">UpdateSourceTrigger 値を設定する場合&lt;xref:System.Windows.Data.UpdateSourceTrigger&gt;、呼び出す必要があります、&lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt;メソッドまたは変更がソースに反映されません&lt;/xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt;&lt;/xref:System.Windows.Data.UpdateSourceTrigger&gt;。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which returns the default <bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value of the target dependency property.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、既定値が返されます<bpt id="p2">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>ターゲット依存関係プロパティの値。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>However, the default value for most dependency properties is <bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, while the &lt;xref:System.Windows.Controls.TextBox.Text<bpt id="p2">*</bpt>&gt; property has a default value of <bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.       A programmatic way to determine the default UpdateSourceTrigger value of a dependency property is to get the property metadata of the property using &lt;xref:System.Windows.DependencyProperty.GetMetadata<ept id="p2">*</ept>&gt; and then check the value of the &lt;xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*&gt; property.</source>
          <target state="translated">ただし、ほとんどの依存関係プロパティの既定値は<bpt id="p1">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>中、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; プロパティの既定値を持つ<bpt id="p3">&lt;xref href="System.Windows.Data.UpdateSourceTrigger"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。     依存関係プロパティの既定 UpdateSourceTrigger 値を決定するプログラムによる方法のプロパティを使用して、プロパティ メタデータを取得する&lt;&gt; <ept id="p2">*</ept>&gt; の値を確認し、&lt;xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*&gt;プロパティ&lt;/xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*&gt;。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定を含めるかどうかを示す値、 <bpt id="p1">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Setting this property provides an alternative to using the &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt; element explicitly.</source>
          <target state="translated">このプロパティを設定すると、使用する代わりに、&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;要素に明示的にします&lt;/xref:System.Windows.Controls.DataErrorValidationRule&gt;。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.DataErrorValidationRule&gt; is a built-in validation rule that checks for errors that are raised by the &lt;xref:System.ComponentModel.IDataErrorInfo&gt; implementation of the source object.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;によって発生するエラーをチェックする組み込みの検証規則は、&lt;xref:System.ComponentModel.IDataErrorInfo&gt;ソース オブジェクトの実装&lt;/xref:System.ComponentModel.IDataErrorInfo&gt;&lt;/xref:System.Windows.Controls.DataErrorValidationRule&gt;。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>If an error is raised, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the error and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
          <target state="translated">バインディング エンジンが作成する場合は、エラーが発生すると、 &lt;xref:System.Windows.Controls.ValidationError&gt;、エラーのために追加し、&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;バインドされている要素のコレクション&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Controls.ValidationError&gt;。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">エラーがないことを別のルールが検証の問題が発生しない限り、この検証フィードバックを消去します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>ValidatesOnDataErrors is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">ValidatesOnDataErrors は、.NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のバージョンとの依存関係<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>含める、 <bpt id="p2">&lt;xref href="System.Windows.Controls.DataErrorValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定を含めるかどうかを示す値、 <bpt id="p1">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Setting this property provides an alternative to using the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; element explicitly.</source>
          <target state="translated">このプロパティを設定すると、使用する代わりに、&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;要素に明示的にします&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;ソース プロパティの更新中にスローされる例外をチェックする組み込みの検証ルールです&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>If an exception is thrown, the binding engine creates a &lt;xref:System.Windows.Controls.ValidationError&gt; with the exception and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</source>
          <target state="translated">バインディング エンジンが作成、例外がスローされた場合、&lt;xref:System.Windows.Controls.ValidationError&gt;例外を使用し、それを追加、&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;バインドされている要素のコレクション&lt;/xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Controls.ValidationError&gt;。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">エラーがないことを別のルールが検証の問題が発生しない限り、この検証フィードバックを消去します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>ValidatesOnExceptions is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">ValidatesOnExceptions は、.NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のバージョンとの依存関係<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>含める、 <bpt id="p2">&lt;xref href="System.Windows.Controls.ExceptionValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <bpt id="p1">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定を含めるかどうかを示す値、 <bpt id="p1">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>When ValidatesOnNotifyDataErrors is <ph id="ph1">`true`</ph>, the binding checks for and reports errors that are raised by a data source that implements &lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;.</source>
          <target state="translated">ValidatesOnNotifyDataErrors が場合<ph id="ph1">`true`</ph>、バインディングが確認され、 &lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;.&lt;/xref:System.ComponentModel.INotifyDataErrorInfo&gt;を実装するデータ ソースで発生したエラーが報告されました</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include the <bpt id="p2">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>含める、 <bpt id="p2">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Gets a collection of rules that check the validity of the user input.</source>
          <target state="translated">ユーザー入力の有効性をチェックする規則のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> data binding model enables you to associate ValidationRules with your &lt;xref:System.Windows.Data.Binding&gt; or &lt;xref:System.Windows.Data.MultiBinding&gt; object.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>データ バインディング モデルを関連付けることができますを ValidationRules、&lt;xref:System.Windows.Data.Binding&gt;または&lt;xref:System.Windows.Data.MultiBinding&gt;オブジェクト&lt;/xref:System.Windows.Data.MultiBinding&gt;&lt;/xref:System.Windows.Data.Binding&gt;。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You can create custom rules by deriving from the &lt;xref:System.Windows.Controls.ValidationRule&gt; class and implementing the &lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt; method, or you can use the built-in &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;, which invalidates a value if there are exceptions during source updates.</source>
          <target state="translated">派生することによってカスタム ルールを作成することができます、&lt;xref:System.Windows.Controls.ValidationRule&gt;クラスと実装、&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;メソッドを使用するか、組み込み&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;、ソースの更新中に例外がある場合、値が無効になります&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;&lt;/xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;&lt;/xref:System.Windows.Controls.ValidationRule&gt;。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The binding engine checks each &lt;xref:System.Windows.Controls.ValidationRule&gt; associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</source>
          <target state="translated">バインディング エンジンは、それぞれチェック&lt;xref:System.Windows.Controls.ValidationRule&gt;たびに、入力値 (バインディング ターゲット プロパティの値) が転送されるバインディング ソース プロパティへのバインドに関連付けられている&lt;/xref:System.Windows.Controls.ValidationRule&gt;。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>For a detailed discussion of the validation process, see the Data Validation section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">検証プロセスの詳細については、データの検証」セクションを参照してください、<bpt id="p1">[</bpt>データ バインディングの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property can be set in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; でこのプロパティを設定できます<ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>に示すコレクション構文を使用してのみか、コレクション オブジェクトにアクセスしてなどのさまざまなメソッドを使用して<ph id="ph3">`Add`</ph>です。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The property to access the collection object is read-only, whereas the collection itself is read-write.</source>
          <target state="translated">コレクション オブジェクトにアクセスするプロパティは、コレクション自体は読み取り/書き込みは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ValidationRules"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id="ph1">```   &lt;object&gt;     &lt;object.ValidationRules&gt;       oneOrMoreValidationRules     &lt;/object.ValidationRules&gt;   &lt;/object&gt;      ```</ph>      <bpt id="p2">&lt;a name="xamlValues_ValidationRules"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>oneOrMoreValidationRules<ept id="p3">*</ept>    One or more &lt;xref:System.Windows.Controls.ValidationRule&gt; objects.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlPropertyElementUsage_ValidationRules"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML プロパティ要素の使用<ph id="ph1">```   &lt;object&gt;     &lt;object.ValidationRules&gt;       oneOrMoreValidationRules     &lt;/object.ValidationRules&gt;   &lt;/object&gt;      ```</ph> <bpt id="p2">&lt;a name="xamlValues_ValidationRules"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## XAML 値<bpt id="p3">*</bpt>oneOrMoreValidationRules<ept id="p3">*</ept>&amp;1; つまたは複数&lt;xref:System.Windows.Controls.ValidationRule&gt;オブジェクト&lt;/xref:System.Windows.Controls.ValidationRule&gt;。      </target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Windows.Controls.ExceptionValidationRule&gt; class or create custom rules by subclassing the &lt;xref:System.Windows.Controls.ValidationRule&gt; class.</source>
          <target state="translated">を使用できます、&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;クラスまたは&lt;xref:System.Windows.Controls.ValidationRule&gt;クラス&lt;/xref:System.Windows.Controls.ValidationRule&gt;をサブクラス化してカスタム規則を作成&lt;/xref:System.Windows.Controls.ExceptionValidationRule&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A collection of <bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">コレクション<bpt id="p1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager*&gt; attached property.</source>
          <target state="translated">識別、&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager*&gt;添付プロパティ&lt;/xref:System.Windows.Data.Binding.XmlNamespaceManager*&gt;。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> query that returns the value on the <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> binding source to use.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>に値を返すクエリを<ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph>を使用するソースをバインドします。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>When the binding source is <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph> data instead of a <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> object, the XPath property is used instead of the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; property to indicate the path to the value on the binding source to use.</source>
          <target state="translated">バインディング ソースの場合は<ph id="ph1">[!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)]</ph>の代わりにデータ、<ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>オブジェクトの XPath プロパティがの代わりに使用される、&lt;xref:System.Windows.Data.Binding.Path%2A&gt;を使用するバインディング ソースの値にパスを示すプロパティです&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>By setting the XPath property, you are creating an <ph id="ph1">`XPath`</ph> query to select a node or a collection of nodes (&lt;xref:System.Xml.XmlElement?displayProperty=fullName&gt; and &lt;xref:System.Xml.XmlAttribute?displayProperty=fullName&gt; both derive from &lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt;).</source>
          <target state="translated">XPath プロパティを設定を作成する、<ph id="ph1">`XPath`</ph>ノードまたはノードのコレクションを選択するクエリ (&lt;xref:System.Xml.XmlElement?displayProperty=fullName&gt;と&lt;xref:System.Xml.XmlAttribute?displayProperty=fullName&gt;から派生両方&lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt;).&lt;/xref:System.Xml.XmlNode?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlAttribute?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlElement?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt; is a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> object, which means you can bind to its properties using the &lt;xref:System.Windows.Data.Binding.Path%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt;<ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph>オブジェクトを使用してそのプロパティにバインドすることができます、&lt;xref:System.Windows.Data.Binding.Path%2A&gt;プロパティ&lt;/xref:System.Windows.Data.Binding.Path%2A&gt;。&lt;/xref:System.Xml.XmlNode?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt; method handles the <ph id="ph1">`XPath`</ph> expressions from the XPath property.</source>
          <target state="translated">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;メソッド ハンドル、<ph id="ph1">`XPath`</ph>式を XPath プロパティから&lt;/xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`XPath`</ph> functions are not supported.</source>
          <target state="translated"><ph id="ph1">`XPath`</ph>関数はサポートされていません。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`XPath`</ph> expression information, see the &lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt; documentation and some examples provided in the Example section.</source>
          <target state="translated"><ph id="ph1">`XPath`</ph>式についてを参照してください、&lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt;ドキュメントと例」のセクションで提供されるいくつかの例です&lt;/xref:System.Xml.XmlNode.SelectNodes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>LINQ to XML objects &lt;xref:System.Xml.Linq.XDocument&gt; and &lt;xref:System.Xml.Linq.XElement&gt; do not use <ph id="ph1">`XPath`</ph>.</source>
          <target state="translated">LINQ to XML オブジェクト&lt;xref:System.Xml.Linq.XDocument&gt;と&lt;xref:System.Xml.Linq.XElement&gt;使用しない<ph id="ph1">`XPath`</ph>&lt;/xref:System.Xml.Linq.XElement&gt;&lt;/xref:System.Xml.Linq.XDocument&gt;。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>How to: Bind to XDocument, XElement, or LINQ for XML Query Results<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>する方法: XML クエリ結果を XDocument XElement、または LINQ バインド<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> query.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XPath" name="XPath" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クエリ。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>