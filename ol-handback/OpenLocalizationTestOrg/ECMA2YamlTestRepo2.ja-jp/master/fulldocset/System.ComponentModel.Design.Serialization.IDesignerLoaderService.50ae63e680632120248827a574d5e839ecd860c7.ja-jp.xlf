<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d491a4cb6036a4c7716df25279936d32ae71dc42</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.IDesignerLoaderService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d693bc6abb190988b9af7be5f237e014f810cf9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a007a8e18afcaaefa9697dba57d731f153c4398</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an interface that can extend a designer loader to support asynchronous loading of external components.</source>
          <target state="translated">外部コンポーネントの非同期読み込みをサポートするためにデザイナー ローダーを拡張できるインターフェイスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt; can implement this interface to manage designer loading that involves external components.</source>
          <target state="translated">A&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;外部コンポーネントは、デザイナーの読み込みを管理するには、このインターフェイスを実装することができます&lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This interface also allows external components to initiate a reload of the design surface by calling &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A&gt;.</source>
          <target state="translated">このインターフェイスでは、外部コンポーネント&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A&gt;。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A&gt;を呼び出すことによって、デザイン画面の再読み込みを開始することもできます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A designer loader does not have to implement this interface if it does not require support for asynchronous loading.</source>
          <target state="translated">デザイナー ローダーは、非同期の読み込みのためのサポートは必要ない場合は、このインターフェイスを実装する必要はありません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Designer loading using a custom implementation of the IDesignerLoaderService can occur in a variety of ways.</source>
          <target state="translated">デザイナーを使用して読み込む、IDesignerLoaderService のカスタム実装にさまざまな方法で発生します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Sometimes external components are involved in the loading process.</source>
          <target state="translated">外部コンポーネントは、読み込みプロセスに関係しています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed.</source>
          <target state="translated">外部の依存関係と読み込みを容易には、デザイナー ローダー サービス インターフェイスは、読み込みが完了し、各部分の読み込みが完了したことを通知を決定するメカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The IDesignerLoaderService typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining.</source>
          <target state="translated">通常は、IDesignerLoaderService 読み込みが完了すると残りの読み込みの依存関係の数を追跡するカウンターをテストすることによって決まります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When each portion of the load completes, &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt; is called, and the service decrements the counter.</source>
          <target state="translated">各部分の読み込みが完了したら、&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;が呼び出されると、およびサービス デクリメント カウンター&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To set the number of dependent load processes, call &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt; once for each load process that calls &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt; when its loading is complete.</source>
          <target state="translated">依存読み込みプロセスの数を設定するには、呼び出す&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;を呼び出す負荷プロセスごとに&amp;1; 回&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;の読み込みが完了するとします&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When the final loading is complete, the service calls &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt; on the loader host.</source>
          <target state="translated">最終の読み込みが完了すると、サービスの呼び出し&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt;ローダー ホスト上&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Registers an external component as part of the load process managed by this interface.</source>
          <target state="translated">このインターフェイスで管理されている、読み込みプロセスの一部として、外部コンポーネントを登録します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Call AddLoadDependency once for each external object participating in the load process.</source>
          <target state="translated">読み込みプロセスに参加している外部オブジェクトごとに&amp;1; 回 AddLoadDependency を呼び出します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt; is called when the work of the load process is done.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;読み込みプロセスの作業が終わったときに呼び出されます。&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Signals that a dependent load has finished.</source>
          <target state="translated">依存の読み込みが完了したことを通知します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This method is called to signal that a dependent loading operation has completed.</source>
          <target state="translated">このメソッドは、依存読み込み操作が完了したことを通知します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Call DependentLoadComplete once for every process that was registered by calling &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;, which has already completed.</source>
          <target state="translated">DependentLoadComplete を呼び出すことによって登録されたすべてのプロセスの&amp;1; 回呼び出す&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;、既に完了している&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the dependent load succeeds, the caller sets the <ph id="ph1">`successful`</ph> parameter to <ph id="ph2">`true`</ph> and passes either an empty collection or <ph id="ph3">`null`</ph> to the <ph id="ph4">`errorCollection`</ph> parameter.</source>
          <target state="translated">かどうか、依存する読み込みが成功した、呼び出し元のセット、<ph id="ph1">`successful`</ph>パラメーターを<ph id="ph2">`true`</ph>か空のコレクションを渡すとまたは<ph id="ph3">`null`</ph>を<ph id="ph4">`errorCollection`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the dependent load encounters errors, the caller sets the <ph id="ph1">`successful`</ph> parameter to <ph id="ph2">`false`</ph> and passes a collection of exceptions that indicate the reason or reasons for failure to the <ph id="ph3">`errorCollection`</ph> parameter.</source>
          <target state="translated">依存の読み込みには、エラーが発生すると、呼び出し元の設定、<ph id="ph1">`successful`</ph>パラメーターを<ph id="ph2">`false`</ph>理由などへのエラーの理由を示す例外のコレクションを渡すと、<ph id="ph3">`errorCollection`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the load of the designer is successful; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if errors prevented the load from finishing.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>デザイナーの読み込みが成功した場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>エラーからの負荷を持たない場合に終了します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A collection of errors that occurred during the load, if any.</source>
          <target state="translated">存在する場合、読み込み中に発生したエラーのコレクション。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If no errors occurred, pass either an empty collection or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">エラーが発生しなかった場合は、いずれか、空のコレクションを渡すまたは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Reloads the design document.</source>
          <target state="translated">デザイン ドキュメントを再読み込みします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Any object can call this method to request that the loader reload the design document.</source>
          <target state="translated">任意のオブジェクトは、設計ドキュメント ローダーの再読み込みを要求するには、このメソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the loader supports reloading and complies with the reload, the designer loader can return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">デザイナー ローダーを返すことができるかどうか、ローダー読み込みをサポートして、再読み込みに準拠している<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns <ph id="ph1">`false`</ph>, indicating that the reload will not occur.</source>
          <target state="translated">返しますそれ以外の場合、<ph id="ph1">`false`</ph>の再読み込みが実行されないことを示します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.</source>
          <target state="translated">呼び出し元が直ちに行われている再読み込みに依存できません。デザイナー ローダー、他の時間をスケジュールするか、すぐに再読み込みを試みることができます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The caller can display a message to the user if the designer cannot be reloaded.</source>
          <target state="translated">呼び出し元は、デザイナーを再読み込みすることはできない場合、ユーザーにメッセージを表示できます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the reload request is accepted, or <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the loader does not allow the reload.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>再読み込み要求が受け入れられた場合、または<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>ローダーは、再読み込みを許可していない場合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>