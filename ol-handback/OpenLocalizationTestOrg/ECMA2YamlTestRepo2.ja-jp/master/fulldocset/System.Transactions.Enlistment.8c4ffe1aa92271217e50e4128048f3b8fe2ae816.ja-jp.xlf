<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da391c9aa45e2027310a9e336ad16a700507517f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Transactions.Enlistment.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71f07e526266c57db4a147e4680d6db3b61b0e86</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54d0bb115a84606af08497fc06255c6601c27fae</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Facilitates communication between an enlisted transaction participant and the transaction manager during the final phase of the transaction.</source>
          <target state="translated">トランザクションの最後のフェーズ中に、登録済みのトランザクション参加要素と、トランザクション マネージャー間の通信を容易になります。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt; and &lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt; methods of the &lt;xref:System.Transactions.Transaction&gt; object are invoked to enlist a participant in a transaction, they return this object describing the enlistment.</source>
          <target state="translated">ときに、&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;と&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;のメソッド、&lt;xref:System.Transactions.Transaction&gt;オブジェクトが起動され、トランザクション内の参加者を参加させる、参加リストを記述するこのオブジェクトを返します&lt;/xref:System.Transactions.Transaction&gt;&lt;/xref:System.Transactions.Transaction.EnlistDurable%2A&gt;&lt;/xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>During the final phase of the transaction commit, the transaction manager passes this object to a resource manager implementing the &lt;xref:System.Transactions.IEnlistmentNotification&gt; interface that has enlisted in a transaction.</source>
          <target state="translated">トランザクションのコミットの最終フェーズでは、トランザクション マネージャーは、リソース マネージャーの実装にこのオブジェクトを渡します、&lt;xref:System.Transactions.IEnlistmentNotification&gt;トランザクションに参加しているインターフェイス&lt;/xref:System.Transactions.IEnlistmentNotification&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Specifically, the transaction manager calls either the &lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt; or the &lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt; method of the participant, depending on whether the latter has decided to commit or roll back the transaction.</source>
          <target state="translated">具体的には、トランザクション マネージャーを呼び出すか、&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;または&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;かどうか、後者を決定したがコミットまたはロールバック、トランザクションによって、参加要素のメソッド&lt;/xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;&lt;/xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The participant should call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method of this object to let the transaction manager know that it has completed its work.</source>
          <target state="translated">参加要素を呼び出す必要があります、&lt;xref:System.Transactions.Enlistment.Done%2A&gt;トランザクション マネージャーがその作業が完了したことを確認できるようにするには、このオブジェクトのメソッド&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An enlistment can call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method at anytime before it has called &lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt; in the prepare phase.</source>
          <target state="translated">参加リストが呼び出すことができます、&lt;xref:System.Transactions.Enlistment.Done%2A&gt;呼び出したメソッドの前にいつでもで&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;が準備フェーズにします&lt;/xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>By doing so, the enlistment is casting a read only vote, meaning that it votes commit on the transaction but does not need to receive the final outcome.</source>
          <target state="translated">これにより、参加リストをキャスト、読み取り専用の決定、つまりことは、トランザクションのコミットの投票なく最終結果を受信する必要はありません。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Note that, after the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method is called, the enlisted participant receives no further notifications from the transaction manager.</source>
          <target state="translated">なお、後に、&lt;xref:System.Transactions.Enlistment.Done%2A&gt;メソッドが呼び出されると、参加要素を受け取るトランザクション マネージャーからさらに通知されません&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Indicates that the transaction participant has completed its work.</source>
          <target state="translated">トランザクションの参加者がその作業を完了したことを示します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>During the final phase of the transaction commit, the transaction manager calls either the &lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;, &lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt; or &lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt; method of the participant, depending on whether the transaction is to be committed or rolled back.</source>
          <target state="translated">トランザクションのコミットの最終フェーズでは、トランザクション マネージャーを呼び出すか、 &lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;、&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;または&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;トランザクションがコミットまたはロールバックするかどうかに応じて、参加要素のメソッド&lt;/xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;&lt;/xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;&lt;/xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The resource manager should perform any work necessary to finish the transaction and then inform the transaction manager that it has finished by calling the Done method on the <ph id="ph1">`enlistment`</ph> parameter.</source>
          <target state="translated">リソース マネージャーがトランザクションを終了しで Done メソッドを呼び出すことによりこれが完了したこと、トランザクション マネージャーに通知し、必要な作業を実行する必要があります、<ph id="ph1">`enlistment`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the resource manager has enlisted durably, but does not respond by calling Done method, the transaction manager is unsure that the resource manager has received the respective notification call.</source>
          <target state="translated">リソース マネージャーが永続的に、参加しているメソッドの完了を呼び出すことによって応答しない場合は、トランザクション マネージャーは、リソース マネージャーが、それぞれの通知呼び出しを受信したことを確認します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</source>
          <target state="translated">そのため、トランザクション マネージャーでは、応答を待機中は保持し、このトランザクションに関連する情報を保持します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If Done is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</source>
          <target state="translated">場合は決して呼び出されると、この特定の情報はの周囲は無期限に保持メモリやシステム全体のリソースにします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This results in resources not being able to be reclaimed.</source>
          <target state="translated">これは、結果、リソースの再利用することはできません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</source>
          <target state="translated">分散トランザクションの場合このでした MSDTC プロセスが中断される MSDTC のログをいっぱいになってしまいます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the case of a transaction managed by &lt;xref:System.Transactions&gt;, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</source>
          <target state="translated">によって管理されるトランザクションの場合&lt;xref:System.Transactions&gt;、この結果、リソース マネージャーのプロセスのメモリの消費量が段階的なと継続的な増加します&lt;/xref:System.Transactions&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Therefore, it is crucial that you call the Done method once your resource manager is done with your prepare work.</source>
          <target state="translated">したがって、非常に重要で、リソース マネージャーが完了したら、Done メソッドを呼び出すことは、作業を準備します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An enlistment can call the Done method at anytime before it has called &lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt; in the prepare phase.</source>
          <target state="translated">参加リストは、これが呼び出される前はいつでもの Done メソッドを呼び出すことができます&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;が準備フェーズにします&lt;/xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>By doing so, the enlistment is casting a read only vote, meaning that it votes commit on the transaction but does not need to receive the final outcome.</source>
          <target state="translated">これにより、参加リストをキャスト、読み取り専用の決定、つまりことは、トランザクションのコミットの投票なく最終結果を受信する必要はありません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Note that, after this method is called, the enlisted participant receives no further notifications from the transaction manager.</source>
          <target state="translated">このメソッドが呼び出されると、参加要素なしさらにから通知を受け取る、トランザクション マネージャーに注意してください。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>