<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fbb4c9330849896b576e34e91d06489d762a57f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.AddIn.Pipeline.ContractHandle.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94a574e29a48dbc75fe7f9b2e66b8953c086eecf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c6109f130925d52b144884b25d41278898989d0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods that control the lifetime of an add-in.</source>
          <target state="translated">アドインの有効期間を制御するメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Because the add-in model provides the ability for add-ins to communicate between application domains and between processes, it cannot rely on the garbage collector to reclaim them.</source>
          <target state="translated">アドイン モデルでは、アプリケーション ドメイン間、およびプロセス間の通信には、アドインの機能を提供するためは、それらを解放するガベージ コレクターを使用できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class provides a reference counting mechanism for the add-in by obtaining a lifetime token to its contract.</source>
          <target state="translated">このクラスは、そのコントラクトの有効期間トークンを取得することによって、アドインのメカニズムをカウントの参照を提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When a ContractHandle object is constructed, it calls the &lt;xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A&gt; method on the contract that is passed to the constructor.</source>
          <target state="translated">呼び出す ContractHandle オブジェクトを作成するとき、&lt;xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A&gt;メソッドをコンス トラクターに渡されるコントラクト&lt;/xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When the ContractHandle object is disposed or finalized, it calls the &lt;xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A&gt; method on the contract, which removes its hold on the contract.</source>
          <target state="translated">ContractHandle オブジェクトを破棄または終了すると、呼び出し、&lt;xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A&gt;コントラクトでの保留中の削除がされたコントラクトのメソッド&lt;/xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Adapters implement the contract.</source>
          <target state="translated">アダプターは、コントラクトを実装します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The ContractHandle class is designed to be used in a contract-to-view adapter to help pipeline developers manage the lifetime of the contract that is being adapted.</source>
          <target state="translated">ContractHandle クラスは、パイプラインの開発者が適合しているコントラクトの有効期間を管理するのに役立つ、コントラクトのビューへのアダプターで使用するよう設計されています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Typically, an instance of this class is instantiated during the construction of the adapter class and is stored in an instance field of the adapter.</source>
          <target state="translated">通常、このクラスのインスタンスは、アダプター クラスの構築時にインスタンス化され、アダプターのインスタンスのフィールドに格納されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When the adapter class is garbage-collected, the ContractHandle object will also be collected and the ContractHandle object will revoke the lifetime token on the contract.</source>
          <target state="translated">アダプター クラスは、ガベージ コレクションと ContractHandle オブジェクトが収集される場合も ContractHandle オブジェクトは、契約の有効期間トークンを取り消します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It is recommended that your view-to-contract adapters inherit from the &lt;xref:System.AddIn.Pipeline.ContractBase&gt; class.</source>
          <target state="translated">ビューからコントラクトのアダプターが、&lt;xref:System.AddIn.Pipeline.ContractBase&gt;クラス&lt;/xref:System.AddIn.Pipeline.ContractBase&gt;から継承することをお勧め</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can then use a default implementation for the members of &lt;xref:System.AddIn.Contract.IContract&gt;, which means you need to implement only the members of your specific contract.</source>
          <target state="translated">メンバーの既定の実装を使用することができますし、 &lt;xref:System.AddIn.Contract.IContract&gt;、つまり、特定のコントラクトのメンバーのみを実装する必要があります&lt;/xref:System.AddIn.Contract.IContract&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AddIn.Pipeline.ContractHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.AddIn.Pipeline.ContractHandle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The contract to use in the pipeline.</source>
          <target state="translated">パイプラインで使用されるコントラクト。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;contract&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;contract&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets the instance of the add-in-side adapter when the application domain was created.</source>
          <target state="translated">アプリケーション ドメインが作成されたときに、追加側アダプターのインスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The add-in-side adapters are typed as &lt;xref:System.AddIn.Contract.IContract&gt;.</source>
          <target state="translated">アドイン側アダプターは&lt;xref:System.AddIn.Contract.IContract&gt;。&lt;/xref:System.AddIn.Contract.IContract&gt;として型指定します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the application domain was previously created by a user, there is no owner.</source>
          <target state="translated">場合は、アプリケーション ドメインは、ユーザーが既に作成されました、所有者はありません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The application domain to check.</source>
          <target state="translated">アプリケーション ドメインを確認します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.AddIn.Contract.IContract"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the owner of the application domain.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.AddIn.Contract.IContract"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>をアプリケーション ドメインの所有者を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;domain&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;domain&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the contract used by a pipeline.</source>
          <target state="translated">パイプラインで使用するコントラクトを取得します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The contract, which is derived from <bpt id="p1">&lt;xref href="System.AddIn.Contract.IContract"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生したコントラクト、 <bpt id="p1">&lt;xref href="System.AddIn.Contract.IContract"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Determines whether an application domain is owned by the specified contract.</source>
          <target state="translated">アプリケーション ドメインが指定されたコントラクトを所有するかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The contract to check.</source>
          <target state="translated">確認するためのコントラクト。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The application domain to check.</source>
          <target state="translated">アプリケーション ドメインを確認します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the contract owns the application domain; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コントラクトは、アプリケーション ドメインを所有している場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;contract&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;domain&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;contract&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;domain&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Revokes the lifetime token on a contract, regardless of input.</source>
          <target state="translated">入力に関係なく、契約の有効期間トークンを取り消します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Revokes the lifetime token on the contract regardless of input and optionally releases the managed resources.</source>
          <target state="translated">入力に関係なく、コントラクトの有効期間トークンを失効させ、マネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Releases the resources associated with the <bpt id="p1">&lt;xref href="System.AddIn.Pipeline.ContractHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">関連付けられているリソースを解放、 <bpt id="p1">&lt;xref href="System.AddIn.Pipeline.ContractHandle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インスタンス。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">このメソッドは&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;。&lt;/xref:System.Object.Finalize%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Application code should not call this method; an object's Finalize method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの Finalize メソッドは自動的に呼び出される、ガベージ コレクション中にへの呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When called by the garbage collector, this method calls the &lt;xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29&gt; method.</source>
          <target state="translated">ガベージ コレクターによって呼び出されると、このメソッドを呼び出す、&lt;xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29&gt;メソッド&lt;/xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29&gt;。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>