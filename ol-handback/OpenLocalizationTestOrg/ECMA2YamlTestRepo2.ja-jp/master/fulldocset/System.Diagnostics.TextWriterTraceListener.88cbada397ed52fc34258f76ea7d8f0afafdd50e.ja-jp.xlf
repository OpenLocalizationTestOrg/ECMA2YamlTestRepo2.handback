<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c62c8e77406c54ef7b21b6f3c3362fb00c3d7a38</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Diagnostics.TextWriterTraceListener.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff37c3a932c07e3cd24ea2650bb76dc951b34ad9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">131ea90c43bd653b429e295a27cae4b8eeffa2ea</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Directs tracing or debugging output to a &lt;xref:System.IO.TextWriter&gt; or to a &lt;xref:System.IO.Stream&gt;, such as <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">トレース出力またはデバッグ出力を転送する&lt;xref:System.IO.TextWriter&gt;または、&lt;xref:System.IO.Stream&gt;など<bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.IO.Stream&gt; &lt;/xref:System.IO.TextWriter&gt; 。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The TextWriterTraceListener class provides the &lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt; property to get or set the text writer that receives the tracing or debugging output.</source>
          <target state="translated">TextWriterTraceListener クラスは、提供、&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;を取得またはテキスト ライターの設定のプロパティは、トレース出力またはデバッグ出力を受け取ります&lt;/xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; この型は、&lt;xref:System.IDisposable&gt;インターフェイス&lt;/xref:System.IDisposable&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">型の直接 dispose を呼び出す、&lt;xref:System.IDisposable.Dispose%2A&gt;メソッドで、 <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph>ブロック&lt;/xref:System.IDisposable.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">直接ことのない破棄する場合など、言語コンストラクトを使用して<ph id="ph1">`using`</ph>(C# の場合) または<ph id="ph2">`Using`</ph>(Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、&lt;xref:System.IDisposable&gt;インターフェイスに関するトピック&lt;/xref:System.IDisposable&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This class also provides methods to &lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt; the &lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt; so that it no longer receives tracing or debugging output, to &lt;xref:System.Diagnostics.TextWriterTraceListener.Flush%2A&gt; the output buffer for the &lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;, and to &lt;xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt; a message to the &lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;.</source>
          <target state="translated">このクラスは、メソッドも用意されています&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;、&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;トレース出力またはデバッグ出力、がを受信しないように&lt;xref:System.Diagnostics.TextWriterTraceListener.Flush%2A&gt;の出力バッファーに、 &lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;、および&lt;xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt;&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;。&lt;/xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;のメッセージ&lt;/xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt;を&lt;/xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;&lt;/xref:System.Diagnostics.TextWriterTraceListener.Flush%2A&gt;&lt;/xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;&lt;/xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">トレースまたはトレース リスナーを使用してデバッグを有効にする必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">次の構文は、コンパイラに固有です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">以外は、c# または Visual Basic コンパイラを使用する場合は、コンパイラのドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-   To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">-C# でのデバッグを有効にするには、<ph id="ph1">`/d:DEBUG`</ph>するを追加したり、コードをコンパイルするときに、コンパイラのコマンドラインにフラグ<ph id="ph2">`#define DEBUG`</ph>ファイルの先頭にします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Visual basic では、追加、<ph id="ph1">`/d:DEBUG=True`</ph>フラグをコンパイラ コマンドライン。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-   To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">-C# でのトレースを有効にするには、<ph id="ph1">`/d:TRACE`</ph>フラグを追加したり、コードをコンパイルすると、コンパイラのコマンドライン<ph id="ph2">`#define TRACE`</ph>ファイルの先頭にします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">Visual basic では、追加、<ph id="ph1">`/d:TRACE=True`</ph>フラグをコンパイラ コマンドライン。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To add a trace listener, edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">トレース リスナーを追加するには、アプリケーションの名前に対応する構成ファイルを編集します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">このファイル内でことができます、リスナーを追加、その型およびパラメーターの設定、リスナーの削除またはオフにするアプリケーションで設定したすべてのリスナーです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The configuration file should be formatted like the following example.</source>
          <target state="translated">構成ファイルは、次の例のようにフォーマットされている必要があります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace autoflush="false" indentsize="4"&gt;         &lt;listeners&gt;           &lt;add name="myListener"              type="System.Diagnostics.TextWriterTraceListener"              initializeData="TextWriterOutput.log" /&gt;           &lt;remove name="Default" /&gt;         &lt;/listeners&gt;       &lt;/trace&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</source>
          <target state="translated"><ph id="ph1">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace autoflush="false" indentsize="4"&gt;         &lt;listeners&gt;           &lt;add name="myListener"              type="System.Diagnostics.TextWriterTraceListener"              initializeData="TextWriterOutput.log" /&gt;           &lt;remove name="Default" /&gt;         &lt;/listeners&gt;       &lt;/trace&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; か使用されているファイルへの書き込みしようとしましたが利用できない、ファイル名を自動的に付けた GUID。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with &lt;xref:System.IO.TextWriter&gt; as the output recipient.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス&lt;xref:System.IO.TextWriter&gt;出力宛先として&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This constructor uses the &lt;xref:System.IO.TextWriter&gt; stream as the recipient of the tracing or debugging output.</source>
          <target state="translated">このコンス トラクターを使用して、&lt;xref:System.IO.TextWriter&gt;トレース出力またはデバッグ出力の受信者としてのストリーム&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Its &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property is initialized to an empty string ("", or &lt;xref:System.String.Empty?displayProperty=fullName&gt;).</source>
          <target state="translated">その&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;プロパティは、空の文字列に初期化 (""、または&lt;xref:System.String.Empty?displayProperty=fullName&gt;).&lt;/xref:System.String.Empty?displayProperty=fullName&gt; &lt;/xref:System.Diagnostics.TraceListener.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, using the stream as the recipient of the debugging and tracing output.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、デバッグ出力およびトレース出力の受信者としてのストリームを使用します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This constructor initializes the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property to an empty string ("").</source>
          <target state="translated">このコンス トラクター、&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;プロパティを空の文字列 ("").&lt;/xref:System.Diagnostics.TraceListener.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; that represents the stream the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> writes to.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;ストリームを表す、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を書き込みます&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The stream is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ストリームが<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified writer as recipient of the tracing or debugging output.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、トレース出力またはデバッグ出力の受信者として指定したライターを使用します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This constructor initializes the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property to an empty string ("").</source>
          <target state="translated">このコンス トラクター、&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;プロパティを空の文字列 ("").&lt;/xref:System.Diagnostics.TraceListener.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; that receives the output from the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.IO.TextWriter&gt;からの出力を受け取る、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.IO.TextWriter&gt; 。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The writer is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ライターが<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, using the file as the recipient of the debugging and tracing output.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、デバッグ出力およびトレース出力の受信者としてファイルを使用します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This constructor initializes the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property to an empty string ("").</source>
          <target state="translated">このコンス トラクター、&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;プロパティを空の文字列 ("").&lt;/xref:System.Diagnostics.TraceListener.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The name of the file the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> writes to.</source>
          <target state="translated">ファイルの名前、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を書き込みます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The file is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ファイルが<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified name, using the stream as the recipient of the debugging and tracing output.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ストリームを使用して、デバッグの受信者として出力およびトレース出力は、指定した名前のクラスです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This constructor initializes the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property to the <ph id="ph1">`name`</ph> parameter or to an empty string (""), if the <ph id="ph2">`name`</ph> parameter is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">このコンス トラクターを初期化します、&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;プロパティを<ph id="ph1">`name`</ph>パラメーターまたは空の文字列 ("") 場合は、<ph id="ph2">`name`</ph>パラメーターは<ph id="ph3">`null`</ph>&lt;/xref:System.Diagnostics.TraceListener.Name%2A&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; that represents the stream the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> writes to.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;ストリームを表す、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を書き込みます&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The name of the new instance.</source>
          <target state="translated">新しいインスタンスの名前。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The stream is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ストリームが<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified name, using the specified writer as recipient of the tracing or debugging output.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トレースの受信者として指定したライターを使用して出力またはデバッグ出力は、指定した名前のクラスです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; that receives the output from the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.IO.TextWriter&gt;からの出力を受け取る、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.IO.TextWriter&gt; 。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The name of the new instance.</source>
          <target state="translated">新しいインスタンスの名前。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The writer is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ライターが<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified name, using the file as the recipient of the debugging and tracing output.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>デバッグの受信者としてファイルを使用して出力およびトレース出力は、指定した名前のクラスです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This constructor initializes the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property to the <ph id="ph1">`name`</ph> parameter or to an empty string (""), if the <ph id="ph2">`name`</ph> parameter is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">このコンス トラクターを初期化します、&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;プロパティを<ph id="ph1">`name`</ph>パラメーターまたは空の文字列 ("") 場合は、<ph id="ph2">`name`</ph>パラメーターは<ph id="ph3">`null`</ph>&lt;/xref:System.Diagnostics.TraceListener.Name%2A&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name of the file the <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> writes to.</source>
          <target state="translated">ファイルの名前、 <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を書き込みます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The name of the new instance.</source>
          <target state="translated">新しいインスタンスの名前。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The stream is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ストリームが<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Closes the &lt;xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt; so that it no longer receives tracing or debugging output.</source>
          <target state="translated">閉じる、&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt;トレース出力またはデバッグ出力を受信しないようにします&lt;/xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Calling a &lt;xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt; or &lt;xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A&gt; method after calling Close automatically reopens the stream.</source>
          <target state="translated">呼び出す、&lt;xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt;または&lt;xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A&gt;ストリームを再び自動的に閉じるの呼び出し後にします&lt;/xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A&gt;&lt;/xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Disposes this <bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">これを破棄する<bpt id="p1">&lt;xref href="System.Diagnostics.TextWriterTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt; method of the &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; class to release the managed resources of a &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; object.</source>
          <target state="translated">使用して、&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;のメソッド、&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;のマネージ リソースを解放するクラス、&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;オブジェクト&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt;&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt;&lt;/xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release managed resources; if <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, Dispose has no effect.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ リソースを解放するには場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>Dispose が影響を与えません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Flushes the output buffer for the &lt;xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt;.</source>
          <target state="translated">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt;。&lt;/xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt;出力バッファーをフラッシュします。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Writes a message to this instance's &lt;xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt;.</source>
          <target state="translated">このインスタンスの&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt;。&lt;/xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt;にメッセージを書き込みます</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Writes a message to this instance's &lt;xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt; followed by a line terminator.</source>
          <target state="translated">このインスタンスのメッセージを書き込みます&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt;続けて行終端記号&lt;/xref:System.Diagnostics.TextWriterTraceListener.Writer*&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The default line terminator is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">既定の行終端記号は、キャリッジ リターンとライン フィード (\r) です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the text writer that receives the tracing or debugging output.</source>
          <target state="translated">取得または設定をトレース出力またはデバッグ出力を受け取るテキスト ライター。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; that represents the writer that receives the tracing or debugging output.</source>
          <target state="translated">A&lt;xref:System.IO.TextWriter&gt;トレース出力またはデバッグ出力を受信するライターを表す&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>