<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">155867c4670ef09fb3a1269cd217b6a09eb340b3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Media.Visual.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8062cb0595329d6124947912227aed37a6bfb970</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca2857412345171c3d3f27b740ecd4adebfed0f0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides rendering support in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, which includes hit testing, coordinate transformation, and bounding box calculations.</source>
          <target state="translated">使用できるようにレンダリング<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>が含まれている、ヒット テスト、座標の変換、および境界ボックス計算します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The Visual class is the basic abstraction from which every &lt;xref:System.Windows.FrameworkElement&gt; object derives.</source>
          <target state="translated">ビジュアルのクラスは、元の基本抽象化すべて&lt;xref:System.Windows.FrameworkElement&gt;オブジェクトの派生元します&lt;/xref:System.Windows.FrameworkElement&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It also serves as the entry point for writing new controls in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, and in many ways can be thought of as an equivalent of a window handle (HWND) in the <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> application model.</source>
          <target state="translated">新しいコントロールを作成するためのエントリ ポイントとしても機能している<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>、し、さまざまな方法ではようなもののウィンドウ ハンドル (HWND) と同等で、<ph id="ph2">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>アプリケーション モデルです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Visual object is a core <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> object, whose primary role is to provide rendering support.</source>
          <target state="translated">ビジュアル オブジェクトは、コア<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>プライマリ ロールがあるレンダリング サポートを提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>User interface controls, such as &lt;xref:System.Windows.Controls.Button&gt; and &lt;xref:System.Windows.Controls.TextBox&gt;, derive from the Visual class, and use the Visual defined properties for persisting their rendering data.</source>
          <target state="translated">などのユーザー インターフェイス コントロール&lt;xref:System.Windows.Controls.Button&gt;と&lt;xref:System.Windows.Controls.TextBox&gt;Visual のクラスから派生しをレンダリング データを保持するため Visual の定義済みプロパティを使用して、&lt;/xref:System.Windows.Controls.TextBox&gt; &lt;/xref:System.Windows.Controls.Button&gt; 。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The Visual object provides support for the following:      -   Output display: Rendering the persisted, serialized drawing content of a visual.</source>
          <target state="translated">ビジュアル オブジェクトは、次のサポートを提供します。-出力の表示: ビジュアルの描画コンテンツをシリアル化、永続的なレンダリングします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>-   Transformations: Performing transformations on a visual.</source>
          <target state="translated">-変換: は、ビジュアルで変換を実行します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>-   Clipping: Providing clipping region support for a visual.</source>
          <target state="translated">クリップ: は、ビジュアルのクリッピング領域のサポートを提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   Hit testing: Determining whether a specified coordinate (point) or geometry is contained within the bounds of a visual.</source>
          <target state="translated">-ヒット テスト: 指定された座標 (ポイント) またはジオメトリがビジュアルの境界内に含まれるかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-   Bounding box calculations: Determining the bounding rectangle of a visual.</source>
          <target state="translated">-境界ボックス計算: ビジュアルの外接する四角形を決定します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Architecturally, the Visual object does not include support for other application development requirements / <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> features that are not immediately related to its rendering, such as the following:      -   Event handling      -   Layout      -   Styles      -   Data binding      -   Globalization       Visual is provided as a public abstract class from which further classes can be derived.</source>
          <target state="translated">アーキテクチャ上、ビジュアル オブジェクトを含まない他のアプリケーションの開発要件のサポート/<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>のレンダリングでは、次のようにすぐに関連付けられていない機能: - イベント処理のレイアウト スタイルのデータ バインディングのグローバリゼーション Visual をさらにクラスを導出するパブリックの抽象クラスとして提供されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following illustration shows the hierarchy of the existing visual objects that are defined in the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> architecture.</source>
          <target state="translated">次の図は、既存の visual オブジェクトで定義されている階層、<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>アーキテクチャ。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Diagram of classes derived from the Visual object<ept id="p1">]</ept><bpt id="p2">(~/add/media/visualclass01.png "</bpt>Diagram of classes derived from the Visual object<ept id="p2">")</ept>   Visual class hierarchy       In some cases, members that are defined as protected in Visual are exposed as more readily accessible members with similar names in the derived &lt;xref:System.Windows.UIElement&gt; class.</source>
          <target state="translated"><bpt id="p1">![</bpt>Visual オブジェクトから派生したクラスのダイアグラム<ept id="p1">]</ept><bpt id="p2">(~/add/media/visualclass01.png "</bpt>Visual オブジェクトから派生したクラスのダイアグラム<ept id="p2">")</ept>場合によっては、保護対象として Visual に定義されているメンバーに視覚的クラス階層は、類似した名前、派生&lt;xref:System.Windows.UIElement&gt;クラス&lt;/xref:System.Windows.UIElement&gt;でより簡単にアクセス可能なメンバーとして公開されます</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>WPF Graphics Rendering Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>WPF グラフィックス レンダリングの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A Visual has a limited number of levels.</source>
          <target state="translated">ビジュアルには、限られた数のレベルがあります。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In previous versions of the .NET Framework, this maximum depth was 255.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、この最大の深さは、255 をでした。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This limit is inadequate for some layouts that have many levels in the visual tree.</source>
          <target state="translated">この制限は、ビジュアル ツリー内の多くのレベルがあるいくつかのレイアウトで適切ではありません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, the maximum depth of a Visual is 2047, which enables much deeper visual trees.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>ビジュアルの最大の深さは、値の 2047 より深くのビジュアル ツリーを有効にします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In most applications, there is not enough stack space to traverse so many levels, and the result is a &lt;xref:System.StackOverflowException&gt; during layout.</source>
          <target state="translated">ほとんどのアプリケーションで十分なスタック領域が非常に多くのレベルを走査して、結果は、&lt;xref:System.StackOverflowException&gt;レイアウト中に&lt;/xref:System.StackOverflowException&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For the default stack size, this exception is usually thrown when the tree depth is approximately 800, which corresponds to about 190 nested &lt;xref:System.Windows.Controls.TreeViewItem&gt; objects.</source>
          <target state="translated">既定のスタック サイズのツリーの深さが約 800、入れ子になった 190 約に対応する場合にこの例外はスロー通常&lt;xref:System.Windows.Controls.TreeViewItem&gt;オブジェクト&lt;/xref:System.Windows.Controls.TreeViewItem&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If this exception is thrown by your application and you need to have a deeper visual tree, you can increase the application's stack size.</source>
          <target state="translated">この例外は、アプリケーションと、ビジュアル ツリーを深くしておく必要は、アプリケーションのスタック サイズを増やすことができます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can increase the size of the stack by using the /STACK option at compile time or by using the EDITBIN utility.</source>
          <target state="translated">コンパイル時に/STACK オプションを使用して、または EDITBIN ユーティリティを使用してスタックのサイズを増やすことができます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Increasing the stack size may affect your application's performance.</source>
          <target state="translated">スタック サイズを増やすと、アプリケーションのパフォーマンスに影響します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Stack Allocations<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=165510)</ept> and <bpt id="p2">[</bpt>EDITBIN Options<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=165511)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>スタック割り当て<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=165510)</ept>と<bpt id="p2">[</bpt>EDITBIN オプション<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=165511)</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Provides the base initialization for objects derived from the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">派生したオブジェクトの基本の初期化を提供、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Defines the parent-child relationship between two visuals.</source>
          <target state="translated">2 つのビジュアル間の親子リレーションシップを定義します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The AddVisualChild method sets up the parent-child relationship between two visual objects.</source>
          <target state="translated">AddVisualChild メソッドは、次の&amp;2; つのビジュアル オブジェクト間の親子関係を設定します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</source>
          <target state="translated">詳細な低レベルの visual の子オブジェクトの基になる記憶域実装制御する必要がある場合、このメソッドを使用する必要があります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Media.VisualCollection&gt; can be used as a default implementation for storing child objects.</source>
          <target state="translated">&lt;xref:System.Windows.Media.VisualCollection&gt;子オブジェクトを格納するため、既定の実装として使用できます。&lt;/xref:System.Windows.Media.VisualCollection&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The child visual object to add to parent visual.</source>
          <target state="translated">親 visual に追加する子ビジュアル オブジェクトです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns the common ancestor of two visual objects.</source>
          <target state="translated">2 つのビジュアル オブジェクトの共通の先祖を返します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>2D and 3D objects can have common visual ancestors, so it is possible to pass a &lt;xref:System.Windows.Media.Media3D.Visual3D&gt; for <ph id="ph1">`otherVisual`</ph>.</source>
          <target state="translated">2D および 3D 保持できるオブジェクトが共通の visual の先祖を渡すことであるため、&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;の<ph id="ph1">`otherVisual`</ph>&lt;/xref:System.Windows.Media.Media3D.Visual3D&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A visual object of type <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">型のビジュアル オブジェクト<bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The common ancestor of the visual object and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">otherVisual</ph><ept id="p1">&lt;/code&gt;</ept> if one exists; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ビジュアル オブジェクトの共通の先祖と<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">otherVisual</ph> <ept id="p1">&lt;/code&gt;</ept> ; が存在する場合は、それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns the specified <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the parent <bpt id="p2">&lt;xref href="System.Windows.Media.VisualCollection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定したを返します<bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>親<bpt id="p2">&lt;xref href="System.Windows.Media.VisualCollection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>By default, a &lt;xref:System.Windows.Media.Visual&gt; has no children.</source>
          <target state="translated">既定では、&lt;xref:System.Windows.Media.Visual&gt;子を持っていない&lt;/xref:System.Windows.Media.Visual&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Therefore, the default implementation always throws an &lt;xref:System.ArgumentOutOfRangeException&gt;.</source>
          <target state="translated">そのため、常に既定の実装が&lt;xref:System.ArgumentOutOfRangeException&gt;。&lt;/xref:System.ArgumentOutOfRangeException&gt;がスローされます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The index of the visual object in the <bpt id="p1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ビジュアル オブジェクトのインデックス、 <bpt id="p1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The child in the <bpt id="p1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p2">&lt;/code&gt;</ept> value.</source>
          <target state="translated">内の子、 <bpt id="p1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>内の指定した<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">index</ph> <ept id="p2">&lt;/code&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Determines whether a geometry value is within the bounds of the visual object.</source>
          <target state="translated">ジオメトリ値がビジュアル オブジェクトの境界内にあるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can override default hit testing support for a visual object by overriding the &lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt; method.</source>
          <target state="translated">既定のヒットしてビジュアル オブジェクトのサポートをオーバーライドすることでテストをオーバーライドすることができます、&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;メソッド&lt;/xref:System.Windows.Media.Visual.HitTestCore%2A&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This means that when you invoke the &lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt; method, your overridden implementation of &lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt; is called.</source>
          <target state="translated">つまりを呼び出すときは、&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;メソッドは、のオーバーライドされた実装&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;と呼びます&lt;/xref:System.Windows.Media.Visual.HitTestCore%2A&gt;&lt;/xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</source>
          <target state="translated">ビジュアル オブジェクトのジオメトリの座標が含まれていない場合でも、ビジュアル オブジェクトの外接する四角形内でヒット テストが実行されると、オーバーライドされたメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Media.GeometryHitTestParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that specifies the <bpt id="p2">&lt;xref href="System.Windows.Media.Geometry"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to hit test against.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Media.GeometryHitTestParameters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定するオブジェクト、 <bpt id="p2">&lt;xref href="System.Windows.Media.Geometry"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>ヒット テストの対象にします。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Media.GeometryHitTestResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the result of the hit test.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Media.GeometryHitTestResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ヒット テストの結果を表すです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Determines whether a point coordinate value is within the bounds of the visual object.</source>
          <target state="translated">ポイント座標の値がビジュアル オブジェクトの境界内にあるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can override the default hit testing support on visual objects by overriding the &lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt; method.</source>
          <target state="translated">既定のヒットをオーバーライドすることによってビジュアル オブジェクトに対するサポートをテストをオーバーライドすることができます、&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;メソッド&lt;/xref:System.Windows.Media.Visual.HitTestCore%2A&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This means that when you invoke the &lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt; method, your overridden implementation of &lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt; is called.</source>
          <target state="translated">つまりを呼び出すときは、&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;メソッドは、のオーバーライドされた実装&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;と呼びます&lt;/xref:System.Windows.Media.Visual.HitTestCore%2A&gt;&lt;/xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</source>
          <target state="translated">ビジュアル オブジェクトのジオメトリの座標が含まれていない場合でも、ビジュアル オブジェクトの外接する四角形内でヒット テストが実行されると、オーバーライドされたメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Media.PointHitTestParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that specifies the <bpt id="p2">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to hit test against.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Media.PointHitTestParameters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定するオブジェクト、 <bpt id="p2">&lt;xref href="System.Windows.Point"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>ヒット テストの対象にします。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Media.HitTestResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that is returned from a hit test.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Media.HitTestResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を表す、 <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>ヒット テストから返されます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Determines whether the visual object is an ancestor of the descendant visual object.</source>
          <target state="translated">ビジュアル オブジェクトが子孫のビジュアル オブジェクトの先祖であるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A value of type <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">型の値<bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the visual object is an ancestor of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">descendant</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ビジュアル オブジェクトの先祖であるが、する場合<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">descendant</ph> <ept id="p2">&lt;/code&gt;</ept>、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Determines whether the visual object is a descendant of the ancestor visual object.</source>
          <target state="translated">ビジュアル オブジェクトが先祖ビジュアル オブジェクトの子孫であるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A value of type <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">型の値<bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the visual object is a descendant of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">ancestor</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ビジュアル オブジェクトの子孫である場合<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">ancestor</ph> <ept id="p2">&lt;/code&gt;</ept>、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Called when the DPI at which this View is rendered changes.</source>
          <target state="translated">ときに呼び出されますをこのビューの変更が表示される DPI。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The previous DPI scale setting.</source>
          <target state="translated">設定前の DPI スケールします。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The new DPI scale setting.</source>
          <target state="translated">新しい DPI スケールを設定します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Called when the <bpt id="p1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the visual object is modified.</source>
          <target state="translated">ときに呼び出されます、 <bpt id="p1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のビジュアル オブジェクトを変更します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that was added to the collection</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>をコレクションに追加されました。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that was removed from the collection</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ですが、コレクションから削除されました。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Called when the parent of the visual object is changed.</source>
          <target state="translated">ビジュアル オブジェクトの親が変更されたときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A class that derives from &lt;xref:System.Windows.Media.Visual&gt; can choose to override this method.</source>
          <target state="translated">派生したクラス&lt;xref:System.Windows.Media.Visual&gt;このメソッドをオーバーライドすることもできます&lt;/xref:System.Windows.Media.Visual&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>There is no "VisualParentChanged" event provided that reports this change to instances.</source>
          <target state="translated">インスタンスにこの変更を報告する指定された"VisualParentChanged"のイベントはありません。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Therefore, you must override this method to handle notification scenarios and provide an instance version of the notification if that is part of your scenario.</source>
          <target state="translated">したがって、通知シナリオを処理し、シナリオの一部である場合は、通知のインスタンスのバージョンを提供するには、このメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A value of type <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the previous parent of the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">型の値<bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>の以前の親を表す、 <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object did not have a previous parent, the value of the parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">場合、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは以前の親がありません、パラメーターの値は<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Converts a <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in screen coordinates into a <bpt id="p2">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that represents the current coordinate system of the <bpt id="p3">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">変換、 <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を画面座標で、 <bpt id="p2">&lt;xref href="System.Windows.Point"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>の現在の座標システムを表す、 <bpt id="p3">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Windows.Media.Visual.PointToScreen%2A&gt; method to convert a &lt;xref:System.Windows.Point&gt; that represents the current coordinate system of the &lt;xref:System.Windows.Media.Visual&gt; into a &lt;xref:System.Windows.Point&gt; in screen coordinates.</source>
          <target state="translated">使用して、&lt;xref:System.Windows.Media.Visual.PointToScreen%2A&gt;に変換する方法、&lt;xref:System.Windows.Point&gt;の現在の座標システムを表す、&lt;xref:System.Windows.Media.Visual&gt;に、&lt;xref:System.Windows.Point&gt;画面座標で表した&lt;/xref:System.Windows.Point&gt;&lt;/xref:System.Windows.Media.Visual&gt;&lt;/xref:System.Windows.Point&gt;&lt;/xref:System.Windows.Media.Visual.PointToScreen%2A&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value in screen coordinates.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>画面座標の値。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The converted <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents the current coordinate system of the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">変換された<bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>の現在の座標システムを表す値、 <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Converts a <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the current coordinate system of the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> into a <bpt id="p3">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> in screen coordinates.</source>
          <target state="translated">変換、 <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の現在の座標システムを表す、 <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>に、 <bpt id="p3">&lt;xref href="System.Windows.Point"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>画面座標でします。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Windows.Media.Visual.PointFromScreen%2A&gt; method to convert a &lt;xref:System.Windows.Point&gt; in screen coordinates into a &lt;xref:System.Windows.Point&gt; that represents the current coordinate system of the &lt;xref:System.Windows.Media.Visual&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Media.Visual.PointFromScreen%2A&gt;は、&lt;xref:System.Windows.Point&gt;画面の座標&lt;xref:System.Windows.Point&gt;を表す&lt;xref:System.Windows.Media.Visual&gt;。&lt;/xref:System.Windows.Media.Visual&gt;の現在の座標系&lt;/xref:System.Windows.Point&gt;に&lt;/xref:System.Windows.Point&gt;変換するメソッド&lt;/xref:System.Windows.Media.Visual.PointFromScreen%2A&gt;を使用します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents the current coordinate system of the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の現在の座標システムを表す値、 <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The converted <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value in screen coordinates.</source>
          <target state="translated">変換された<bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>画面座標の値。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Removes the parent-child relationship between two visuals.</source>
          <target state="translated">2 つのビジュアル間の親子リレーションシップを削除します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The RemoveVisualChild method removes the parent-child relationship between two visuals.</source>
          <target state="translated">RemoveVisualChild メソッドでは、2 つのビジュアル間の親子リレーションシップを削除します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This method, along with the &lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt; method, must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</source>
          <target state="translated">このメソッドと共に、 &lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;visual の子オブジェクトの基になる記憶域実装低レベルより詳細に制御する必要がある場合、メソッドを使用する必要があります&lt;/xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Media.VisualCollection&gt; can be used as a default implementation for storing child objects.</source>
          <target state="translated">&lt;xref:System.Windows.Media.VisualCollection&gt;子オブジェクトを格納するため、既定の実装として使用できます。&lt;/xref:System.Windows.Media.VisualCollection&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The child visual object to remove from the parent visual.</source>
          <target state="translated">ビジュアルの親から削除する子ビジュアル オブジェクト。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Returns a transform that can be used to transform coordinates from the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified <bpt id="p2">&lt;xref href="System.Windows.Media.Media3D.Visual3D"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> ancestor of the visual object.</source>
          <target state="translated">座標に変換するために使用する変換を返します、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定した<bpt id="p2">&lt;xref href="System.Windows.Media.Media3D.Visual3D"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>ビジュアル オブジェクトの先祖です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Media3D.Visual3D"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the coordinates are transformed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Media3D.Visual3D"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>座標が変換されます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A transform that can be used to transform coordinates from the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified <bpt id="p2">&lt;xref href="System.Windows.Media.Media3D.Visual3D"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> ancestor of the visual object.</source>
          <target state="translated">座標に変換するために使用する変換、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定した<bpt id="p2">&lt;xref href="System.Windows.Media.Media3D.Visual3D"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>ビジュアル オブジェクトの先祖です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Returns a transform that can be used to transform coordinates from the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> ancestor of the visual object.</source>
          <target state="translated">座標に変換するために使用する変換を返します、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定した<bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>ビジュアル オブジェクトの先祖です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=fullName&gt; method to retrieve the offset of a visual object relative to its parent.</source>
          <target state="translated">また、使用することができます、&lt;xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=fullName&gt;をその親のビジュアル オブジェクトのオフセットを取得する方法&lt;/xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The offset values are contained within the returned &lt;xref:System.Windows.Vector&gt; value.</source>
          <target state="translated">オフセット値が含まれている、返された内&lt;xref:System.Windows.Vector&gt;値&lt;/xref:System.Windows.Vector&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VisualSnippets#VisualSnippet2<ept id="p2">](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet2)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>VisualSnippets#VisualSnippet2<ept id="p4">](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet2)</ept><ept id="p3">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VisualSnippets #VisualSnippet2<ept id="p2">](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet2)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>VisualSnippets #VisualSnippet2  <ept id="p4">](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet2)</ept><ept id="p3">]</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the coordinates are transformed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>座標が変換されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A value of type <bpt id="p1">&lt;xref href="System.Windows.Media.GeneralTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">型の値<bpt id="p1">&lt;xref href="System.Windows.Media.GeneralTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ancestor&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;ancestor&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ancestor&lt;/code&gt;</ph> is not an ancestor of the visual.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;ancestor&lt;/code&gt;</ph>visual の先祖ではありません。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The visual objects are not related.</source>
          <target state="translated">視覚的なオブジェクトが関連付けられていません。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Returns a transform that can be used to transform coordinates from the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified visual object descendant.</source>
          <target state="translated">座標に変換するために使用する変換を返します、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したビジュアル オブジェクトの子にします。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the coordinates are transformed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>座標が変換されます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A value of type <bpt id="p1">&lt;xref href="System.Windows.Media.GeneralTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">型の値<bpt id="p1">&lt;xref href="System.Windows.Media.GeneralTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;descendant&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;descendant&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The visual is not an ancestor of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">descendant</ph><ept id="p1">&lt;/code&gt;</ept> visual.</source>
          <target state="translated">ビジュアルがの親ではない、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">descendant</ph> <ept id="p1">&lt;/code&gt;</ept> visual です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The visual objects are not related.</source>
          <target state="translated">視覚的なオブジェクトが関連付けられていません。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Returns a transform that can be used to transform coordinates from the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified visual object.</source>
          <target state="translated">座標に変換するために使用する変換を返します、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定された visual オブジェクト。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt; and &lt;xref:System.Windows.Media.Visual.TransformToDescendant%2A&gt; methods can also be used to return a transform for a visual object.</source>
          <target state="translated">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;と&lt;xref:System.Windows.Media.Visual.TransformToDescendant%2A&gt;方法は、ビジュアル オブジェクトの変換を返すにも使用できます&lt;/xref:System.Windows.Media.Visual.TransformToDescendant%2A&gt;&lt;/xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the coordinates are transformed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>座標が変換されます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A value of type <bpt id="p1">&lt;xref href="System.Windows.Media.GeneralTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">型の値<bpt id="p1">&lt;xref href="System.Windows.Media.GeneralTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;visual&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;visual&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The visual objects are not related.</source>
          <target state="translated">視覚的なオブジェクトが関連付けられていません。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Media.Effects.BitmapEffect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Media.Effects.BitmapEffect"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値を<bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The bitmap effect for this visual object.</source>
          <target state="translated">このビジュアル オブジェクトのビットマップ効果。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Media.Effects.BitmapEffectInput"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Media.Effects.BitmapEffectInput"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値を<bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The bitmap effect input value for this visual object.</source>
          <target state="translated">ビットマップ効果は、このビジュアル オブジェクトの値を入力します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Media.BitmapScalingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Media.BitmapScalingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の<bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.BitmapScalingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Windows.Media.BitmapScalingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets or sets a cached representation of the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定のキャッシュされた表現、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Set the VisualCacheMode property when you need to increase performance for content that is time-consuming to render.</source>
          <target state="translated">表示するために時間がかかる場合がコンテンツのパフォーマンスを向上させる必要がある場合は、VisualCacheMode プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Windows.Media.BitmapCache&gt;.</source>
          <target state="translated">詳細については、 &lt;xref:System.Windows.Media.BitmapCache&gt;。&lt;/xref:System.Windows.Media.BitmapCache&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Media.CacheMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds a cached representation of the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Media.CacheMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のキャッシュされた表現を保持する、 <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets the number of child elements for the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">子要素の数を取得、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>By default, a &lt;xref:System.Windows.Media.Visual&gt; has no children.</source>
          <target state="translated">既定では、&lt;xref:System.Windows.Media.Visual&gt;子を持っていない&lt;/xref:System.Windows.Media.Visual&gt;。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Therefore, the default implementation always returns 0.</source>
          <target state="translated">したがって、既定の実装を常に 0 を返します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The number of child elements.</source>
          <target state="translated">子要素の数。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Media.ClearTypeHint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that determines how ClearType is rendered in the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Media.ClearTypeHint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で ClearType がどのように表示されるかを決定する、 <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Media.ClearTypeHint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Media.ClearTypeHint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets or sets the clip region of the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as a <bpt id="p2">&lt;xref href="System.Windows.Media.Geometry"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">取得または設定のクリップ領域、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>として、 <bpt id="p2">&lt;xref href="System.Windows.Media.Geometry"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The clip region value of the visual as a <bpt id="p1">&lt;xref href="System.Windows.Media.Geometry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> type.</source>
          <target state="translated">されたビジュアルのクリップ領域の値、 <bpt id="p1">&lt;xref href="System.Windows.Media.Geometry"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>型です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets or sets the edge mode of the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an <bpt id="p2">&lt;xref href="System.Windows.Media.EdgeMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">エッジ モードの取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>として、 <bpt id="p2">&lt;xref href="System.Windows.Media.EdgeMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.EdgeMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value of the visual.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.EdgeMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ビジュアルの値。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets or sets the bitmap effect to apply to the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定を適用するビットマップ効果、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Media.Effects.Effect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the bitmap effect.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Effects.Effect"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を表すビットマップ効果。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets or sets the offset value of the visual object.</source>
          <target state="translated">取得またはビジュアル オブジェクトのオフセット値を設定します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Vector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the offset value.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Vector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オフセット値を指定します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets or sets the opacity of the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定の不透明度、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The value of the opacity of the &lt;xref:System.Windows.Media.Visual&gt; is expressed as a value between 0 and 1.</source>
          <target state="translated">不透明度の値、 &lt;xref:System.Windows.Media.Visual&gt;0 ~ 1 の値として表されます&lt;/xref:System.Windows.Media.Visual&gt;。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A value of 0 indicates that the element is completely transparent, whereas a value of 1 indicates that the element is completely opaque.</source>
          <target state="translated">値 0 は、要素が 1 の値は、要素が完全に不透明であることを示しますが、完全に透明であることを示します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A value of 0.5 indicates that the element is 50 percent opaque.</source>
          <target state="translated">値 0.5 の要素が 50% 不透明であることを示します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Values that are less than 0 are treated as 0; values that are greater than 1 are treated as 1.</source>
          <target state="translated">0 より小さい値は 0 として扱われます1 より大きい値は 1 として扱われます。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The opacity value of the visual.</source>
          <target state="translated">ビジュアルの不透明度の値。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents the opacity mask of the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の不透明度マスクを表す値、 <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The opacity mask is a &lt;xref:System.Windows.Media.Brush&gt; that is applied to any alpha-channel masking for the rendered content of this visual.</source>
          <target state="translated">不透明度マスクは、&lt;xref:System.Windows.Media.Brush&gt;このビジュアルの描画された内容の任意のアルファ チャンネル マスクに適用されている&lt;/xref:System.Windows.Media.Brush&gt;。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the opacity mask value of the visual.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ビジュアルの不透明度マスクの値を表すです。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets the visual tree parent of the visual object.</source>
          <target state="translated">ビジュアル オブジェクトのビジュアル ツリーの親を取得します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parent.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>親。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Gets or sets a clipped scrollable area for the <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定の場合は、クリップされたスクロール可能な領域、 <bpt id="p1">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Set the VisualScrollableAreaClip property to enable accelerated scrolling when rendering in software.</source>
          <target state="translated">ソフトウェアでレンダリングするときに、高速スクロールを有効にする VisualScrollableAreaClip プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This is useful in remote rendering scenarios, such as running over Remote Desktop or running in a virtual machine.</source>
          <target state="translated">これは、リモート デスクトップを実行しているか、仮想マシンで実行するなど、リモートのレンダリングのシナリオで役に立ちます。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Set this property on the parent element whose children will be scrolled.</source>
          <target state="translated">親要素の子がスクロール可能では、このプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Setting the VisualScrollableAreaClip property has no effect when rendering is hardware accelerated.</source>
          <target state="translated">VisualScrollableAreaClip プロパティの設定も何も起こりませんがハードウェア アクセラレータをレンダリングします。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The VisualScrollableAreaClip property enables specific, advanced scenarios.</source>
          <target state="translated">VisualScrollableAreaClip プロパティは、特定の高度なシナリオを実現できます。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The following list shows the caveats that apply when you use the VisualScrollableAreaClip property.</source>
          <target state="translated">VisualScrollableAreaClip プロパティを使用するときに適用される際の注意点を次に示します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>-   The background of the scrolled area must be opaque, or scrolling artifacts will occur.</source>
          <target state="translated">-スクロール領域の背景が不透明である必要があります。 または成果物のスクロールが発生します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-   The VisualScrollableAreaClip property accelerates scrolling only when WPF is rendering in software.</source>
          <target state="translated">-VisualScrollableAreaClip プロパティは、のみと WPF レンダリング ソフトウェアでスクロールを促進します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For example, this situation occurs when the application is running over Remote Desktop or running locally in a virtual machine.</source>
          <target state="translated">たとえば、アプリケーションがリモート デスクトップを実行している、または仮想マシン上でローカルで実行すると、このような状況が発生します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>-   The scrolling behavior is unchanged when rendering in hardware.</source>
          <target state="translated">-ハードウェアでレンダリングするときに、、スクロール動作は変更されません。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>To prevent differences in scrolling behavior, you should keep the VisualScrollableAreaClip property enabled for both hardware and software.</source>
          <target state="translated">スクロール動作の相違を防ぐためには、ハードウェアとソフトウェアの両方を有効になっている VisualScrollableAreaClip プロパティを保持する必要があります。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>-   Rotate and skew transforms disable accelerated scrolling.</source>
          <target state="translated">回転と傾斜の変換は、高速スクロールを無効にします。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Scale transforms and horizontal or vertical translations above the scrolled region work correctly and do not disable scrolling acceleration.</source>
          <target state="translated">スケールの変換およびスクロール領域上の水平または垂直の翻訳正常に動作し、スクロール アクセラレータを無効にしません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>-   Changing the subtree or triggering parts of the scrollable area to redraw via animation behave as expected, but lose the benefit of accelerated scrolling for the redrawn area.</source>
          <target state="translated">サブツリーを変更するか、アニメーションを使用して再描画するスクロール可能な領域の部分をトリガーする、期待どおりに動作しますが、再描画領域を高速スクロールの利点が失われます。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Any animation that invalidates the scrolled area during the same frame in which scrolling occurs eliminates the benefit of this optimization.</source>
          <target state="translated">同じフレームの間に、スクロール領域を無効にするすべてのアニメーションでスクロールするには、この最適化の利点がなくなりますが発生します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>-   The VisualScrollableAreaClip rectangle snaps inward to pixels.</source>
          <target state="translated">-VisualScrollableAreaClip 四角形は、ピクセルに達するまで内側に向かってスナップされます。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Therefore, the snapped size of the scrolling rectangle is always less than or equal to the size you have set.</source>
          <target state="translated">そのため、スクロールされる四角形の簡単な例のサイズは常に設定したサイズ以下です。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>-   Offsets snap downward.</source>
          <target state="translated">にスナップを下オフセットします。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This means that the difference of the previous snapped offset and current snapped offset is always an integer number of pixels.</source>
          <target state="translated">これは、前の相違点のオフセットのスナップ、スナップの現在のオフセットは、ピクセル数は整数では常にことを意味します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>-   Hit tests can be off by up to a pixel.</source>
          <target state="translated">-ヒット テストは、ピクセルまででオフにできます。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>-   Layout rounding should be turned on, because it ensures that the edges of scrollable areas and the boundary window client area are snapped to pixel boundaries, resulting in correct alignment.</source>
          <target state="translated">-レイアウトの丸めをオンに、これにより、スクロール可能な領域との境界 ウィンドウのクライアント領域のエッジが、正しい配置ピクセルの境界にスナップされていること。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>-   Scrolling acceleration does not work on layered windows.</source>
          <target state="translated">アクセラレータをスクロールしてもレイヤード ウィンドウでは機能しません。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This means windows in which AllowTransparency == true, window.windowstyle == none, and so on.</source>
          <target state="translated">つまり、どの AllowTransparency で windows = = true の場合、window.windowstyle なし、= = し、などです。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>-   Scrolling acceleration does not occur during full-window rendering.</source>
          <target state="translated">アクセラレータをスクロールしてもフル ウィンドウのレンダリング中には発生しません。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>-   Scrolling acceleration does not work when the window straddles two monitors.</source>
          <target state="translated">アクセラレータをスクロールしても、ウィンドウが&amp;2; つのモニターをまたがっている場合は機能しません。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>-   Scrolling acceleration does not work in the presence of intermediate render targets in the parent chain of the scrolled element.</source>
          <target state="translated">スクロール アクセラレータは、スクロールした要素の親チェーン内の中間レンダー ターゲットが存在する場合は機能しません。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The following list shows some of these intermediate render targets.</source>
          <target state="translated">これらのいくつかの中間レンダー ターゲットを次に示します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>-   Clips          -   Effects          -   DrawingBrushes          -   VisualBrushes          -   OpacityMasks          -   Opacity      -   Only one accelerated scroll can happen per frame.</source>
          <target state="translated">-高速化された&amp;1; つだけのスクロールをフレームごとに発生する可能性が影響 - DrawingBrushes - VisualBrushes - OpacityMasks の不透明度 - をクリップします。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>There can be multiple accelerated scroll areas, but only one of them can perform an accelerated scroll during a frame.</source>
          <target state="translated">複数の高速化されたスクロール領域があることができますが、それらの&amp;1; つのみが、フレームの間に高速化されたスクロールを実行できます。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Which area is scrolled is indeterminate.</source>
          <target state="translated">のどの領域がスクロールされる基準が不定になります。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>-   Scrolling acceleration supports content above the scrolling region (in z-order) that is not scrolled with the rest of the content.</source>
          <target state="translated">アクセラレータをスクロールすると、他のコンテンツのスクロールされていません (z オーダー) 内のスクロール領域上のコンテンツがサポートしています。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The system calculates all necessary dirty regions and completes the accelerated scroll, but it sends several additional bitmaps over the wire to move the unintentionally scrolled portion back to its correct position on screen.</source>
          <target state="translated">必要なすべてのダーティ領域が計算され、高速のスクロールが完了したが、画面上の正しい位置に意図せずにスクロールした部分に移動する、ネットワーク経由で追加のビットマップをいくつかのバックアップを送信します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the scrollable clipping area, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if no clipping area is assigned.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>スクロール可能なクリッピング領域を表すまたは<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>のクリッピング領域が割り当てられていない場合。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Media.TextHintingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Media.TextHintingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の<bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.TextHintingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Windows.Media.TextHintingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Media.TextRenderingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Media.TextRenderingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の<bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Media.TextRenderingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Windows.Media.TextRenderingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> applied to the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Media.Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for the <bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Media.Transform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値を<bpt id="p2">&lt;xref href="System.Windows.Media.Visual"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The transform value of the visual.</source>
          <target state="translated">ビジュアルの変換の値。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Gets or sets the x-coordinate (vertical) guideline collection.</source>
          <target state="translated">取得または x 座標 (垂直) ガイドライン コレクションを設定します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</source>
          <target state="translated">ピクセル スナップは、プロセス オブジェクトのエッジがデバイスに固有のピクセル単位で表示できるようにのコンテンツのレイアウトは固定です。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>グラフィックス システムでは、デバイスに依存しない単位を使用して、解像度とデバイスの独立性を有効にします。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Each device independent pixel automatically scales with the system's <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]</ph> setting.</source>
          <target state="translated">システムのされた各デバイスに依存しないピクセルが自動的に拡大縮小<ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]</ph>設定します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This provides <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph>-aware.</source>
          <target state="translated">これにより、<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>アプリケーションの適切なスケーリングの異なる<ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph>設定して、アプリケーションを自動的に<ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph>-注意してください。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>However, this <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.</source>
          <target state="translated">ただし、この<ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph>の独立性がアンチ エイリアス処理のための不規則なエッジ表示を作成できます。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>These artifacts, commonly seen as blurry or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</source>
          <target state="translated">これらの成果物がぼやけて、または「ソフト」のエッジとしても表示は、エッジ場所がデバイス ピクセルの間ではなく、デバイス ピクセル中央にあるときに発生します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>To address this issue, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</source>
          <target state="translated">この問題に対処<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>オブジェクト「スナップ」デバイス (ピクセル単位) をアンチ エイリアス処理によって生成される、ぼかしを排除するビジュアル ツリーの端を方法を提供します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The x-coordinate guideline collection of the visual.</source>
          <target state="translated">ビジュアルの x 座標ガイドライン コレクション。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Gets or sets the y-coordinate (horizontal) guideline collection.</source>
          <target state="translated">取得または y 座標 (水平) ガイドライン コレクションを設定します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</source>
          <target state="translated">ピクセル スナップは、プロセス オブジェクトのエッジがデバイスに固有のピクセル単位で表示できるようにのコンテンツのレイアウトは固定です。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>グラフィックス システムでは、デバイスに依存しない単位を使用して、解像度とデバイスの独立性を有効にします。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Each device independent pixel automatically scales with the system's <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]</ph> setting.</source>
          <target state="translated">システムのされた各デバイスに依存しないピクセルが自動的に拡大縮小<ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]</ph>設定します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This provides <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph>-aware.</source>
          <target state="translated">これにより、<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>アプリケーションの適切なスケーリングの異なる<ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph>設定して、アプリケーションを自動的に<ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph>-注意してください。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>However, this <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.</source>
          <target state="translated">ただし、この<ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]</ph>の独立性がアンチ エイリアス処理のための不規則なエッジ表示を作成できます。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</source>
          <target state="translated">これらの成果物がぼやけていたり、か「ソフト」のエッジとしても表示は、エッジの場所がデバイス ピクセルの間ではなく、デバイスのピクセルの中央にあるときに発生します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>To address this issue, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</source>
          <target state="translated">この問題に対処<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>オブジェクト「スナップ」デバイス (ピクセル単位) をアンチ エイリアス処理によって生成される、ぼかしを排除するビジュアル ツリーの端を方法を提供します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The y-coordinate guideline collection of the visual.</source>
          <target state="translated">ビジュアルの y 座標ガイドライン コレクション。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>