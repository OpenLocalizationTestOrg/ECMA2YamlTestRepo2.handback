<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47ff7f8a28dfdf2f570424ba56ee0b83c1afa6c1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Resources.ResXResourceWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33ea2e021def7a8c8529d9ccd5ff800cc8d95f70</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6be1bb336d98d4cad909c85a108551cd7042c185</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Writes resources in an XML resource (.resx) file or an output stream.</source>
          <target state="translated">XML リソース (.resx) ファイルまたは出力ストリームにリソースを書き込みます。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ResXResourceWriter writes resources in XML format.</source>
          <target state="translated">付けては、XML 形式でリソースを書き込みます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To write a binary resource file, use &lt;xref:System.Resources.ResourceWriter&gt;.</source>
          <target state="translated">バイナリ リソース ファイルを作成するには、 &lt;xref:System.Resources.ResourceWriter&gt;。&lt;/xref:System.Resources.ResourceWriter&gt;を使用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Resources are specified as name/value pairs using the &lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt; method.</source>
          <target state="translated">リソースが使用する名前/値ペアとして指定されて、&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;メソッド&lt;/xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Resource names are case-sensitive when used for lookups; but to more easily support authoring tools and help eliminate bugs, ResXResourceWriter does not allow a.resx file to have names that vary only by case.</source>
          <target state="translated">リソース名は検索に使用されるときに区別されます。より簡単に作成ツールのサポート、バグを排除できますを付けては許可されていません a.resx ファイル ケースのみが異なる名前を持つことです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To create a.resx file, create a ResXResourceWriter with a unique file name, call &lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt; at least once, call &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; to write the resources file to disk, and then call &lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt; to close the file.</source>
          <target state="translated">A.resx ファイルを作成するには、一意のファイル名、呼び出しを付けてを作成&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;を少なくとも&amp;1; 回呼び出す&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;リソース ファイルをディスクに書き込むし、呼び出す&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;ファイルを閉じます&lt;/xref:System.Resources.ResXResourceWriter.Close%2A&gt;&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;&lt;/xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Calling &lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt; will implicitly &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; the file if required.</source>
          <target state="translated">呼び出す&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;を暗黙的に&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;ファイルが必要な場合&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;&lt;/xref:System.Resources.ResXResourceWriter.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The resources are not necessarily written in the same order they were added.</source>
          <target state="translated">リソースは、追加されたのと同じ順序で必ずしもは書き込まれません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information on the format of a.resx file, see <bpt id="p1">[</bpt>Working with .resx Files Programmatically<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">A.resx ファイルの形式の詳細については、次を参照してください。 <bpt id="p1">[</bpt>.resx ファイルをプログラムで扱う<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このクラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.SecurityException&gt; is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A&lt;xref:System.Security.SecurityException&gt;直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可がない場合にスローされます&lt;/xref:System.Security.SecurityException&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to the specified stream object.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス リソースを書き込み、指定したストリーム オブジェクトにします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The output stream.</source>
          <target state="translated">出力ストリーム。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes to the specified &lt;xref:System.IO.TextWriter&gt; object.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定した書き込みを行う&lt;xref:System.IO.TextWriter&gt;オブジェクト&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; object to send the output to.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;への出力を送信するオブジェクト&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to the specified file.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス リソースを指定したファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This constructor creates <ph id="ph1">`filename`</ph> if it does not exist and overwrites it if it does.</source>
          <target state="translated">このコンス トラクターを作成<ph id="ph1">`filename`</ph>場合は、存在しないため、その場合は、それを上書きします。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`filename`</ph> includes a directory path, the full path must exist or the constructor throws a &lt;xref:System.IO.DirectoryNotFoundException&gt; exception.</source>
          <target state="translated">場合<ph id="ph1">`filename`</ph>ディレクトリ パスを含む完全なパスが存在する必要がありますか、コンス トラクターをスロー、&lt;xref:System.IO.DirectoryNotFoundException&gt;例外&lt;/xref:System.IO.DirectoryNotFoundException&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The output file name.</source>
          <target state="translated">出力ファイル名。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The directory specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filename</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">指定されたディレクトリ<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">filename</ph> <ept id="p1">&lt;/code&gt;</ept>がありません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to a specified stream object and sets a converter delegate.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>リソースを指定したストリーム オブジェクトに書き込みますでコンバーターのデリゲートを設定します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This delegate enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">このデリゲートをターゲットに書き込まれるリソース アセンブリを有効にする前に .NET Framework のバージョン、<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>アセンブリの修飾名を使用しています。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">前に .NET Framework のバージョンを対象とするアプリケーションのリソースを作成するときにこのコンス トラクターを使用して、visual Studio および MSBuild の<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The stream to send the output to.</source>
          <target state="translated">出力を送信するストリーム。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          <target state="translated">.NET Framework の以前のバージョンをターゲットに使用されるデリゲート。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to a specified &lt;xref:System.IO.TextWriter&gt; object and sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>リソースを書き込み、指定されたクラス&lt;xref:System.IO.TextWriter&gt;オブジェクトおよびリソース アセンブリの書き込みを可能にするデリゲートは、前に .NET Framework のバージョンを対象セット、<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>アセンブリの修飾名を使用しています&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">前に .NET Framework のバージョンを対象とするアプリケーションのリソースを作成するときにこのコンス トラクターを使用して、visual Studio および MSBuild の<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The object to send output to.</source>
          <target state="translated">出力を送信するオブジェクト。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          <target state="translated">.NET Framework の以前のバージョンをターゲットに使用されるデリゲート。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that writes the resources to a specified file and sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス リソースを書き込み、指定したファイルとリソース アセンブリの書き込みを可能にするデリゲートは、前に .NET Framework のバージョンを対象セットを<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>アセンブリの修飾名を使用しています。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">前に .NET Framework のバージョンを対象とするアプリケーションのリソースを作成するときにこのコンス トラクターを使用して、visual Studio および MSBuild の<ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The file to send output to.</source>
          <target state="translated">出力を送信するファイルです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          <target state="translated">.NET Framework の以前のバージョンをターゲットに使用されるデリゲート。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The directory specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filename</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">指定されたディレクトリ<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">filename</ph> <ept id="p1">&lt;/code&gt;</ept>がありません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Adds the specified alias to a list of aliases.</source>
          <target state="translated">エイリアスの一覧を指定したエイリアスを追加します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Resources whose values are from an aliased assembly are automatically added to the list of aliases.</source>
          <target state="translated">エイリアスを持つアセンブリからの値を持つリソースは、エイリアスの一覧に自動的に追加されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The resource is not written until &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; is called.</source>
          <target state="translated">リソースはまで書き込まれません&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;と呼びます&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The name of the alias.</source>
          <target state="translated">エイリアスの名前。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The name of the assembly represented by <ph id="ph1">`aliasName`</ph>.</source>
          <target state="translated">によって表されるアセンブリの名前<ph id="ph1">`aliasName`</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Adds a design-time property whose value is specifed as a byte array to the list of resources to write.</source>
          <target state="translated">書き込むリソースの一覧に、バイト配列として指定されたの値、デザイン時プロパティを追加します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The name of a property.</source>
          <target state="translated">プロパティの名前。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A byte array containing the value of the property to add.</source>
          <target state="translated">追加するプロパティの値を含むバイト配列。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The resource specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter has already been added.</source>
          <target state="translated">指定されたリソース、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターは既に追加されています。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Adds a design-time property whose value is specified as an object to the list of resources to write.</source>
          <target state="translated">書き込むリソースの一覧に、オブジェクトとして指定する値を持つデザイン時のプロパティを追加します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name of a property.</source>
          <target state="translated">プロパティの名前。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An object that is the value of the property to add.</source>
          <target state="translated">追加するプロパティの値であるオブジェクトです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The resource specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter has already been added.</source>
          <target state="translated">指定されたリソース、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターは既に追加されています。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Adds a design-time property whose value is specified as a string to the list of resources to write.</source>
          <target state="translated">書き込むリソースの一覧に、文字列として指定する値を持つデザイン時のプロパティを追加します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The name of a property.</source>
          <target state="translated">プロパティの名前。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A string that is the value of the property to add.</source>
          <target state="translated">追加するプロパティの値を示す文字列。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The resource specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> property has already been added.</source>
          <target state="translated">指定されたリソース、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>プロパティは既に追加されています。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the list of resources to write.</source>
          <target state="translated">指定された名前付きリソースを追加、 <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>書き込むリソースのリストにオブジェクト。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains a resource name/value pair.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>リソースの名前/値ペアを含むオブジェクトです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as a byte array to the list of resources to write.</source>
          <target state="translated">書き込むリソースの一覧に、バイト配列として指定された名前付きリソースを追加します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The resource is not written until &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; is called.</source>
          <target state="translated">リソースはまで書き込まれません&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;と呼びます&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The resource is serialized and stored in a binary format.</source>
          <target state="translated">リソースがシリアル化され、バイナリ形式で格納します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value of the resource to add as an 8-bit unsigned integer array.</source>
          <target state="translated">8 ビット符号なし整数の配列として追加するリソースの値。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Adds a named resource specified as an object to the list of resources to write.</source>
          <target state="translated">書き込むリソースの一覧に、オブジェクトとして指定された名前付きリソースを追加します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The resource is not written until &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; is called.</source>
          <target state="translated">リソースはまで書き込まれません&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;と呼びます&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The resource that was added must be serializable.</source>
          <target state="translated">追加されたリソースは、シリアル化する必要があります。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If the resource being added is a string, it is written as a string; otherwise, the resource is serialized and stored in a binary format.</source>
          <target state="translated">文字列を追加するリソースには、文字列として書き込まれますそれ以外の場合、リソースがシリアル化され、バイナリ形式で格納します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value of the resource.</source>
          <target state="translated">リソースの値です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Adds a string resource to the resources.</source>
          <target state="translated">文字列リソースをリソースに追加します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The resource is not written until &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; is called.</source>
          <target state="translated">リソースはまで書き込まれません&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;と呼びます&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The value of the resource.</source>
          <target state="translated">リソースの値です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets or sets the base path for the relative file path specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得または設定で指定された相対ファイル パスのベース パス、 <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A path that, if prepended to the relative file path specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, yields an absolute path to an XML resource file.</source>
          <target state="translated">パス、先頭に追加する場合、相対ファイル パスで指定、 <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト、XML リソース ファイルへの絶対パスを生成します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Specifies the default content type for a binary object.</source>
          <target state="translated">バイナリ オブジェクトの既定コンテンツ タイプを指定します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">このフィールドは、読み取り専用です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Specifies the default content type for a byte array object.</source>
          <target state="translated">バイト配列オブジェクトの既定コンテンツ タイプを指定します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">このフィールドは、読み取り専用です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">によって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Calling this method is the equivalent of calling &lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;.</source>
          <target state="translated">このメソッドの呼び出しは&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;。&lt;/xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;を呼び出すのと同じ</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the default content type for an object.</source>
          <target state="translated">オブジェクトの既定コンテンツ タイプを指定します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">このフィールドは、読み取り専用です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">によって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The Dispose method calls the &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; method, if necessary, before releasing managed and unmanaged system resources.</source>
          <target state="translated">Dispose メソッドの呼び出し、&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;メソッド、マネージし、アンマネージ システム リソースを解放する前に、必要に応じて&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Calling Dispose allows the system resources used by the &lt;xref:System.Resources.ResXResourceWriter&gt; to be reallocated for other purposes.</source>
          <target state="translated">Dispose を呼び出すことによりで使用されるシステム リソース、&lt;xref:System.Resources.ResXResourceWriter&gt;を他の目的に再割り当てされます&lt;/xref:System.Resources.ResXResourceWriter&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Dispose の詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>し、必要に応じてマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The Dispose method calls the &lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt; method, if necessary, before releasing managed and unmanaged system resources.</source>
          <target state="translated">Dispose メソッドの呼び出し、&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;メソッド、マネージし、アンマネージ システム リソースを解放する前に、必要に応じて&lt;/xref:System.Resources.ResXResourceWriter.Generate%2A&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">このメソッドは、パブリック&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;メソッドおよび&lt;xref:System.Object.Finalize%2A&gt;メソッド&lt;/xref:System.Object.Finalize%2A&gt;&lt;/xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;呼び出す<ph id="ph1">`Dispose`</ph>で<ph id="ph2">`disposing`</ph>'éý'<ph id="ph3">`false`</ph>です。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Resources.ResXResourceWriter&gt; references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターは<ph id="ph2">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.Resources.ResXResourceWriter&gt;参照。&lt;/xref:System.Resources.ResXResourceWriter&gt; 。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose()`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This member overrides the &lt;xref:System.Object.Finalize*&gt; method.</source>
          <target state="translated">このメンバーは、&lt;xref:System.Object.Finalize*&gt;メソッド&lt;/xref:System.Object.Finalize*&gt;。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Writes all resources added by the &lt;xref:System.Resources.ResXResourceWriter.AddResource*&gt; method to the output file or stream.</source>
          <target state="translated">によって追加されたすべてのリソースを書き込み、&lt;xref:System.Resources.ResXResourceWriter.AddResource*&gt;出力ファイルまたはストリームする方法&lt;/xref:System.Resources.ResXResourceWriter.AddResource*&gt;。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The Generate method writes the resources to the output file or stream.</source>
          <target state="translated">生成するメソッドでは、リソースを出力ファイルまたはストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If you want to write the resources as well as close the output file or stream, call the &lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt; method.</source>
          <target state="translated">近くにも、出力ファイルまたはストリームにリソースを記述する場合は、呼び出し、&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;メソッド&lt;/xref:System.Resources.ResXResourceWriter.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The Generate method can be called only once.</source>
          <target state="translated">生成するメソッドは、一度だけ呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>After calling the Generate method, all &lt;xref:System.Resources.IResourceWriter&gt; methods other than &lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt; will throw an exception.</source>
          <target state="translated">生成するメソッドを呼び出した後すべて&lt;xref:System.Resources.IResourceWriter&gt;以外のメソッド&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;例外がスローされます&lt;/xref:System.Resources.ResXResourceWriter.Close%2A&gt;&lt;/xref:System.Resources.IResourceWriter&gt;。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The resource has already been saved.</source>
          <target state="translated">リソースは既に保存されています。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Specifies the content type of an XML resource.</source>
          <target state="translated">XML リソースのコンテンツの種類を指定します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">このフィールドは、読み取り専用です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies the schema to use in writing the XML file.</source>
          <target state="translated">XML ファイルの書き込みに使用するスキーマを指定します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">このフィールドは、読み取り専用です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The schema provides details on how to encode the resources based on the type of resource being written.</source>
          <target state="translated">スキーマは、書き込まれるリソースの種類に基づいて、リソースをエンコードする方法の詳細を説明します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Specifies the content type for a SOAP object.</source>
          <target state="translated">SOAP オブジェクトのコンテンツの種類を指定します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">このフィールドは、読み取り専用です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Specifies the version of the schema that the XML output conforms to.</source>
          <target state="translated">XML 出力に準拠するスキーマのバージョンを指定します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
          <target state="translated">このフィールドは、読み取り専用です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>