<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6aba421ce472b830ca16b029ad753886c3348d81</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.EnvelopedSignatureReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20c54a357f79b5a7f27a4d82fcfbe0e5f63464af</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89654bb752b99e070c86d1c3efb1a61029a55648</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Wraps a reader that is pointing to enveloped signed XML to provide a reader that can be used to read the content without having to process the signature.</source>
          <target state="translated">エンベロープの署名付き XML コンテンツを読み取る、署名を処理することがなく使用できるリーダーを提供する をポイントするリーダーをラップします。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The signature is automatically validated when the last element of the envelope is read.</source>
          <target state="translated">署名が、エンベロープの最後の要素が読み取られるときに自動的に検証します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.EnvelopedSignatureReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified reader and security token serializer.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.IdentityModel.EnvelopedSignatureReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスを指定したリーダーとセキュリティ トークン シリアライザーを使用します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt; constructor is invoked with the following additional parameters:      |Parameter Name|Value|   |--------------------|-----------|   |<ph id="ph1">`signingTokenResolver`</ph><ph id="ph2">|</ph><ph id="ph3">`null`</ph>|   |<ph id="ph4">`requireSignature`</ph><ph id="ph5">|</ph><ph id="ph6">`true`</ph>|   |<ph id="ph7">`automaticallyReadSignature`</ph><ph id="ph8">|</ph><ph id="ph9">`true`</ph>|   |<ph id="ph10">`resolveIntrinsicSigningKeys`</ph><ph id="ph11">|</ph><ph id="ph12">`true`</ph><ph id="ph13">|</ph></source>
          <target state="translated">次の追加パラメーター&lt;xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt;コンス トラクターが呼び出されます |。パラメーター名 |値 |  |--------------------|-----------|  |<ph id="ph1">`signingTokenResolver`</ph><ph id="ph2">|</ph><ph id="ph3">`null`</ph>|  |<ph id="ph4">`requireSignature`</ph><ph id="ph5">|</ph><ph id="ph6">`true`</ph>|  |<ph id="ph7">`automaticallyReadSignature`</ph><ph id="ph8">|</ph><ph id="ph9">`true`</ph>|  |<ph id="ph10">`resolveIntrinsicSigningKeys`</ph><ph id="ph11">|</ph><ph id="ph12">`true`</ph><ph id="ph13">|</ph>&lt;/xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A reader that is pointing to the enveloped signed XML.</source>
          <target state="translated">署名付きの XML リーダーが、エンベロープを指しているをします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The token serializer to be used to deserialize the <bpt id="p1">&lt;xref href="System.Security.Cryptography.Xml.KeyInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the signature.</source>
          <target state="translated">トークン シリアライザーを逆シリアル化するために使用する、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.Xml.KeyInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の署名。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;securityTokenSerializer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;securityTokenSerializer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.EnvelopedSignatureReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified reader, security token serializer, and token resolver.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.IdentityModel.EnvelopedSignatureReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスを指定したリーダー、セキュリティ トークン シリアライザー、およびトークン リゾルバーを使用します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt; constructor is invoked with the following additional parameters:      |Parameter Name|Value|   |--------------------|-----------|   |<ph id="ph1">`requireSignature`</ph><ph id="ph2">|</ph><ph id="ph3">`true`</ph>|   |<ph id="ph4">`automaticallyReadSignature`</ph><ph id="ph5">|</ph><ph id="ph6">`true`</ph>|   |<ph id="ph7">`resolveIntrinsicSigningKeys`</ph><ph id="ph8">|</ph><ph id="ph9">`true`</ph><ph id="ph10">|</ph></source>
          <target state="translated">次の追加パラメーター&lt;xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt;コンス トラクターが呼び出されます |。パラメーター名 |値 |  |--------------------|-----------|  |<ph id="ph1">`requireSignature`</ph><ph id="ph2">|</ph><ph id="ph3">`true`</ph>|  |<ph id="ph4">`automaticallyReadSignature`</ph><ph id="ph5">|</ph><ph id="ph6">`true`</ph>|  |<ph id="ph7">`resolveIntrinsicSigningKeys`</ph><ph id="ph8">|</ph><ph id="ph9">`true`</ph><ph id="ph10">|</ph>&lt;/xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A reader that is pointing to the enveloped signed XML.</source>
          <target state="translated">署名付きの XML リーダーが、エンベロープを指しているをします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The token serializer to be used to deserialize the <bpt id="p1">&lt;xref href="System.Security.Cryptography.Xml.KeyInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the signature.</source>
          <target state="translated">トークン シリアライザーを逆シリアル化するために使用する、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.Xml.KeyInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の署名。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The token resolver to be used to resolve the signing token.</source>
          <target state="translated">署名トークンの解決に使用されるトークン リゾルバー。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifies that a default security token resolver should be used.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>既定のセキュリティ トークン リゾルバーを使用することを指定します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;securityTokenSerializer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;securityTokenSerializer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.EnvelopedSignatureReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified reader, security token serializer, token resolver, and behavior.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.IdentityModel.EnvelopedSignatureReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスを指定したリーダー、セキュリティ トークン シリアライザー、トークン リゾルバー、および動作を使用します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A reader that is pointing to the enveloped signed XML.</source>
          <target state="translated">署名付きの XML リーダーが、エンベロープを指しているをします。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The token serializer to be used to deserialize the <bpt id="p1">&lt;xref href="System.Security.Cryptography.Xml.KeyInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the signature.</source>
          <target state="translated">トークン シリアライザーを逆シリアル化するために使用する、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.Xml.KeyInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の署名。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The token resolver to be used to resolve the signing token.</source>
          <target state="translated">署名トークンの解決に使用されるトークン リゾルバー。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifies that a default security token resolver should be used.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>既定のセキュリティ トークン リゾルバーを使用することを指定します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the signature is required; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>署名が必要な場合です。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the signature should be read; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、署名を読み取る必要があります。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if intrinsic signing keys should be resolved; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>組み込みの署名キーを解決する必要があります。 場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;securityTokenSerializer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;securityTokenSerializer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Reads the next node from the stream.</source>
          <target state="translated">ストリームから次のノードを読み取ります。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Checks whether the end of the envelope is reached and validates the signature if the <ph id="ph1">`requireSignature`</ph> parameter was specified <ph id="ph2">`true`</ph> in the constructor.</source>
          <target state="translated">エンベロープの末尾に達したかどうかを確認署名を検証する場合は、<ph id="ph1">`requireSignature`</ph>パラメーターが指定されました<ph id="ph2">`true`</ph>コンス トラクターでします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the reader gets positioned on a <ph id="ph1">`&lt;Signature&gt;`</ph> element, the whole signature is read in if the <ph id="ph2">`automaticallyReadSignature`</ph> parameter was specified <ph id="ph3">`true`</ph> in the constructor.</source>
          <target state="translated">リーダーを取得する場合、<ph id="ph1">`&lt;Signature&gt;`</ph>要素、全体の署名が読み込まれた場合、<ph id="ph2">`automaticallyReadSignature`</ph>パラメーターが指定されました<ph id="ph3">`true`</ph>コンス トラクターでします。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the next node was read successfully; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no more nodes.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>次のノードが正常に読み取られた場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>ありませんより多くのノードがある場合。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the signing credentials that are used in the signature, after the envelope is consumed and when the signature is validated.</source>
          <target state="translated">エンベロープが消費されると、署名を検証するときに、署名に使用される署名資格情報を取得します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The signing credentials.</source>
          <target state="translated">署名資格情報です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Reads the signature if the reader is currently positioned at a <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;Signature&amp;gt;" name="&amp;lt;Signature&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">リーダーが現在に配置されている場合、署名を読み取り、 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;Signature&amp;gt;" name="&amp;lt;Signature&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要素。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the reader is currently positioned on a <ph id="ph1">`&lt;Signature&gt;`</ph> element, invokes the &lt;xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A&gt;method to read the signature.</source>
          <target state="translated">場合は、リーダーの現在位置に、<ph id="ph1">`&lt;Signature&gt;`</ph>要素を呼び出す、&lt;xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A&gt;メソッド署名を読み取れません&lt;/xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the signature was successfully read; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、署名は正常に読み取られました。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>