<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1756cb392cf75827aed67a2c1411f494a569f96f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Net.Http.HttpContent.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b49f29763b01507532b0e6945245afc8e3acb2f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc619630c315d2d1226d2fb6d7dc287de871321e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A base class representing an HTTP entity body and content headers.</source>
          <target state="translated">HTTP エンティティ本体およびコンテンツ ヘッダーを表す基本クラス。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">HTTP コンテンツのバイト数とコピーとして指定されたストリーム オブジェクトにストリームにシリアル化、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">stream</ph> <ept id="p1">&lt;/code&gt;</ept>のパラメーターです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been written to the stream object passed as the <ph id="ph1">`stream`</ph> parameter.</source>
          <target state="translated">返された&lt;xref:System.Threading.Tasks.Task%601&gt;オブジェクトは、すべてのコンテンツとして渡されるストリーム オブジェクトに書き込まれた後、完了、<ph id="ph1">`stream`</ph>パラメーター&lt;/xref:System.Threading.Tasks.Task%601&gt; 。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The target stream.</source>
          <target state="translated">対象のストリーム。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">HTTP コンテンツのバイト数とコピーとして指定されたストリーム オブジェクトにストリームにシリアル化、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">stream</ph> <ept id="p1">&lt;/code&gt;</ept>のパラメーターです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been written to the stream object passed as the <ph id="ph1">`stream`</ph> parameter.</source>
          <target state="translated">返された&lt;xref:System.Threading.Tasks.Task%601&gt;オブジェクトは、すべてのコンテンツとして渡されるストリーム オブジェクトに書き込まれた後、完了、<ph id="ph1">`stream`</ph>パラメーター&lt;/xref:System.Threading.Tasks.Task%601&gt; 。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The target stream.</source>
          <target state="translated">対象のストリーム。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Information about the transport (channel binding token, for example).</source>
          <target state="translated">トランスポート (チャネル バインド トークンなど) について説明します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This parameter may be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターがあります<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a memory stream as an asynchronous operation.</source>
          <target state="translated">非同期操作として HTTP コンテンツをメモリ ストリームにシリアル化します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been written to the memory stream.</source>
          <target state="translated">返された&lt;xref:System.Threading.Tasks.Task%601&gt;オブジェクトは、すべてのコンテンツがメモリ ストリームに書き込まれた後に完了します&lt;/xref:System.Threading.Tasks.Task%601&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Once the operation completes, the  &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the returned task object contains the memory stream that that represents the HTTP content.</source>
          <target state="translated">操作の完了後、&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;返されたタスク オブジェクトのプロパティには、HTTP コンテンツを表すメモリ ストリームが含まれています&lt;/xref:System.Threading.Tasks.Task%601.Result%2A&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The returned stream can then be used to read the content using various stream APIs.</source>
          <target state="translated">返されたストリームは、さまざまなストリーム Api を使用して、コンテンツの読み取りに使用できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The CreateContentReadStreamAsync method buffers the content to a memory stream.</source>
          <target state="translated">CreateContentReadStreamAsync メソッドは、メモリ ストリームにコンテンツをバッファーします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Derived classes can override this behavior if there is a better way to retrieve the content as stream.</source>
          <target state="translated">派生クラスは、内容をストリームとして取得する優れた方法がある場合、この動作をオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, a byte array or a string could use a more efficient method way such as wrapping a read-only &lt;xref:System.IO.MemoryStream&gt; around the bytes or string.)</source>
          <target state="translated">たとえば、バイト配列または文字列でしたを使用して読み取り専用の折り返しなどメソッド方法がより効率的&lt;xref:System.IO.MemoryStream&gt;バイトまたは文字列の周り)&lt;/xref:System.IO.MemoryStream&gt; 。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources and disposes of the managed resources used by the <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">リリースで使用されるアンマネージ リソースおよびマネージ リソースを破棄、 <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally disposes of the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オプションでマネージ リソースを破棄します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび&lt;xref:System.Object.Finalize%2A&gt;メソッド&lt;/xref:System.Object.Finalize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.When the <ph id="ph4">`disposing`</ph> parameter is <ph id="ph5">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Net.Http.HttpContent&gt; references.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;呼び出す<ph id="ph1">`Dispose`</ph>で<ph id="ph2">`disposing`</ph>'éý'<ph id="ph3">`false`</ph>です。ときに、<ph id="ph4">`disposing`</ph>パラメーターは<ph id="ph5">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.Net.Http.HttpContent&gt;参照。&lt;/xref:System.Net.Http.HttpContent&gt; 。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose()`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to releases only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the HTTP content headers as defined in RFC 2616.</source>
          <target state="translated">RFC 2616 で定義されている HTTP コンテンツ ヘッダーを取得します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The content headers as defined in RFC 2616.</source>
          <target state="translated">RFC 2616 で定義されているコンテンツ ヘッダー。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a memory buffer as an asynchronous operation.</source>
          <target state="translated">非同期操作として HTTP コンテンツをメモリ バッファーにシリアル化します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Threading.Tasks.Task&gt; object will complete after all of the content has been serialized to the memory buffer.</source>
          <target state="translated">返された&lt;xref:System.Threading.Tasks.Task&gt;オブジェクトは、すべてのコンテンツは、メモリ バッファーにシリアル化された後に完了します&lt;/xref:System.Threading.Tasks.Task&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>After content is serialized to a memory buffer, calls to one of the  &lt;xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt; methods will copy the content of the memory buffer to the target stream.</source>
          <target state="translated">コンテンツがメモリ バッファーにシリアル化された後に呼び出しのいずれか、&lt;xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt;メソッドは、対象のストリームにメモリ バッファーの内容をコピーします&lt;/xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a memory buffer as an asynchronous operation.</source>
          <target state="translated">非同期操作として HTTP コンテンツをメモリ バッファーにシリアル化します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Threading.Tasks.Task&gt; object will complete after all of the content has been serialized to the memory buffer.</source>
          <target state="translated">返された&lt;xref:System.Threading.Tasks.Task&gt;オブジェクトは、すべてのコンテンツは、メモリ バッファーにシリアル化された後に完了します&lt;/xref:System.Threading.Tasks.Task&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>After content is serialized to a memory buffer, calls to one of the  &lt;xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt; methods will copy the content of the memory buffer to the target stream.</source>
          <target state="translated">コンテンツがメモリ バッファーにシリアル化された後に呼び出しのいずれか、&lt;xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt;メソッドは、対象のストリームにメモリ バッファーの内容をコピーします&lt;/xref:System.Net.Http.HttpContent.CopyToAsync%2A&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the content exceeds the value  passed in the <ph id="ph1">`maxBufferSize`</ph> parameter , an exception is thrown.</source>
          <target state="translated">コンテンツに渡された値を超える場合、<ph id="ph1">`maxBufferSize`</ph>パラメーター、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, of the buffer to use.</source>
          <target state="translated">(バイト単位) を使用するバッファーの最大サイズ。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a byte array as an asynchronous operation.</source>
          <target state="translated">非同期操作として HTTP コンテンツをバイト配列にシリアル化します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been written as a byte array.</source>
          <target state="translated">返された&lt;xref:System.Threading.Tasks.Task%601&gt;オブジェクトは、すべてのコンテンツをバイト配列として書き込まれた後に完了します&lt;/xref:System.Threading.Tasks.Task%601&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Once the operation completes, the  &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the returned task object contains the byte array with the HTTP content.</source>
          <target state="translated">操作の完了後、 &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;HTTP コンテンツを含むバイト配列が返されたタスク オブジェクトのプロパティに含まれています&lt;/xref:System.Threading.Tasks.Task%601.Result%2A&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.</source>
          <target state="translated">HTTP コンテンツをシリアル化し、非同期操作としてコンテンツを表すストリームを返します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the stream that represents content has been read.</source>
          <target state="translated">返された&lt;xref:System.Threading.Tasks.Task%601&gt;オブジェクトは、完了後にすべてのストリームを表すコンテンツが読み取られたこと&lt;/xref:System.Threading.Tasks.Task%601&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Once the operation completes, the  &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the returned task object contains the stream that that represents the HTTP content.</source>
          <target state="translated">操作の完了後、&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;返されたタスク オブジェクトのプロパティには、HTTP コンテンツを表すストリームが含まれています&lt;/xref:System.Threading.Tasks.Task%601.Result%2A&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The returned stream can then be used to read the content using various stream APIs.</source>
          <target state="translated">返されたストリームは、さまざまなストリーム Api を使用して、コンテンツの読み取りに使用できます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a string as an asynchronous operation.</source>
          <target state="translated">非同期操作として HTTP コンテンツを文字列にシリアル化します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been written as a string.</source>
          <target state="translated">返された&lt;xref:System.Threading.Tasks.Task%601&gt;オブジェクトは、すべてのコンテンツを文字列として書き込まれた後に完了します&lt;/xref:System.Threading.Tasks.Task%601&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Once the operation completes, the  &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; property on the returned task object contains the string with the HTTP content.</source>
          <target state="translated">操作の完了後、&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;返されたタスク オブジェクトのプロパティには、HTTP コンテンツを含む文字列が含まれています&lt;/xref:System.Threading.Tasks.Task%601.Result%2A&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Serialize the HTTP content to a stream as an asynchronous operation.</source>
          <target state="translated">非同期操作として HTTP コンテンツ ストリームにシリアル化します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been serialized to the stream object passed in the <ph id="ph1">`stream`</ph> parameter.</source>
          <target state="translated">返された&lt;xref:System.Threading.Tasks.Task%601&gt;オブジェクトは、すべてのコンテンツは、渡されたストリーム オブジェクトにシリアル化された後に、完了、<ph id="ph1">`stream`</ph>パラメーター&lt;/xref:System.Threading.Tasks.Task%601&gt; 。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The target stream.</source>
          <target state="translated">対象のストリーム。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Information about the transport (channel binding token, for example).</source>
          <target state="translated">トランスポート (チャネル バインド トークンなど) について説明します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This parameter may be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターがあります<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Determines whether the HTTP content has a valid length in bytes.</source>
          <target state="translated">HTTP コンテンツがバイト単位で有効な長さを持つかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The TryComputeLength method gives a HTTP content the ability to calculate the content length.</source>
          <target state="translated">TryComputeLength メソッドは、HTTP コンテンツをコンテンツの長さを計算することを示します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This is useful for content types which are able to easily calculate the content length.</source>
          <target state="translated">これは、コンテンツ タイプを簡単にコンテンツの長さを計算することがあるに役立ちます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">コンテンツの長さが可能でないか、高価な (は必要なシリアル化高価なや、大量のメモリを割り当てることが必要に、コンテンツ全体をバッファーに書き込むシステム) を計算するには、このメソッドは返す<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If this method returns <ph id="ph1">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</source>
          <target state="translated">このメソッドが戻る場合<ph id="ph1">`false`</ph>、つまり、チャンク転送が必要かあるコンテンツをサーバーに送信される前にバッファーを取得する必要があります。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The length in bytes of the HTTP content.</source>
          <target state="translated">HTTP コンテンツの長さをバイト単位です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">length</ph><ept id="p2">&lt;/code&gt;</ept> is a valid length; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">length</ph> <ept id="p2">&lt;/code&gt;</ept>有効な長さが、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>