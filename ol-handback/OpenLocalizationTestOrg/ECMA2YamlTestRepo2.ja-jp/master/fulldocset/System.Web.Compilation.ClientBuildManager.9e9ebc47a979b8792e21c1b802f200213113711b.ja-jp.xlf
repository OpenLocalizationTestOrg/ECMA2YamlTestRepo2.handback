<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">740b118c4a91a6f7abc89628967f5fb01d6c2ed5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Compilation.ClientBuildManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68f15970f4b3b182ec7551918c4f71a02dcf3355</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65aaedd70277deb0e6ac687f72d41b723c0af11d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides compilation services for ASP.NET applications.</source>
          <target state="translated">ASP.NET アプリケーションのコンパイル サービスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ClientBuildManager class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code.</source>
          <target state="translated">ClientBuildManager クラスの ASP.NET Web アプリケーションをコンパイルし、生成されたアセンブリを取得するメソッドおよびプロパティが用意されていますか、ソース コードを生成します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS).</source>
          <target state="translated">クラスのインスタンスはクライアントのアプリケーション ドメインで確立され、ASP.NET ビルド システムの外部で Microsoft インターネット インフォメーション サービス (IIS) へのアクセスを提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The class can be used to develop customized tools for compiling Web applications.</source>
          <target state="translated">クラスは、Web アプリケーションをコンパイルするためのカスタマイズしたツールの開発に使用できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The command-line tool <ph id="ph1">`aspnet_compiler`</ph> uses the ClientBuildManager class.</source>
          <target state="translated">コマンド ライン ツールの<ph id="ph1">`aspnet_compiler`</ph>ClientBuildManager クラスを使用します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class without a specified target directory or precompilation flags.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスは、指定したターゲット ディレクトリやプリコンパイル フラグなし。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The virtual path to the application root.</source>
          <target state="translated">アプリケーション ルートの仮想パス。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The physical path to the application root.</source>
          <target state="translated">アプリケーション ルートへの物理パス。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified target directory.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ターゲット ディレクトリを指定しています。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.</source>
          <target state="translated">コンス トラクターのこのフォームは、プリコンパイル ターゲット ディレクトリを指定する、プリコンパイルに通常使用されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The virtual path to the application root.</source>
          <target state="translated">アプリケーション ルートの仮想パス。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The physical path to the application root.</source>
          <target state="translated">アプリケーション ルートへの物理パス。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The target directory for precompilation.</source>
          <target state="translated">プリコンパイルのターゲット ディレクトリです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified target directory and compilation parameter.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したターゲット ディレクトリ、コンパイル パラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.</source>
          <target state="translated">コンス トラクターのこのフォームはプリコンパイルのターゲット ディレクトリとプリコンパイル フラグを指定すると、通常プリコンパイルに使用します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The virtual path to the application root.</source>
          <target state="translated">アプリケーション ルートの仮想パス。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The physical path to the application root.</source>
          <target state="translated">アプリケーション ルートへの物理パス。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The target directory for precompilation.</source>
          <target state="translated">プリコンパイルのターゲット ディレクトリです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Values that determine the precompilation behavior.</source>
          <target state="translated">プリコンパイル動作を決定する値。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスは、指定された仮想ディレクトリ、ソース ディレクトリ、ターゲット ディレクトリ、コンパイル パラメーター、および型記述プロバイダーを使用しています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The virtual path of the application root.</source>
          <target state="translated">アプリケーション ルートの仮想パス。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The physical path of the application root.</source>
          <target state="translated">アプリケーションのルートの物理パス。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The target directory for precompilation.</source>
          <target state="translated">プリコンパイルのターゲット ディレクトリです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Values that determine the precompilation behavior.</source>
          <target state="translated">プリコンパイル動作を決定する値。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The type-description provider to use.</source>
          <target state="translated">使用する型説明のプロバイダー。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio.</source>
          <target state="translated">このパラメーターは、主に Visual Studio のマルチ ターゲット インフラストラクチャをサポートするために使用します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.</source>
          <target state="translated">.NET Framework の特定のバージョンのフィルターは、その型に関するメタデータを取得するために使用されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Occurs when an application domain is shut down.</source>
          <target state="translated">アプリケーション ドメインがシャット ダウンするときに発生します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Occurs when an application domain is started.</source>
          <target state="translated">アプリケーション ドメインが起動したときに発生します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Occurs when an application domain is unloaded.</source>
          <target state="translated">アプリケーション ドメインがアンロードされるときに発生します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the physical path to the directory used for code generation.</source>
          <target state="translated">コードの生成に使用するディレクトリへの物理パスを取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The directory for code generation is typically in the temporary ASP.NET files directory.</source>
          <target state="translated">コード生成用のディレクトリは、通常一時 ASP.NET ファイル ディレクトリにします。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the directory path used for code generation.</source>
          <target state="translated">A&lt;xref:System.String&gt;コードの生成に使用するディレクトリのパスを格納します&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.</source>
          <target state="translated">App_Code ディレクトリ内のファイル、Global.asax ファイル、リソース ファイル、および Web 参照などのアプリケーションに依存するファイルをコンパイルします。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The CompileApplicationDependencies method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.</source>
          <target state="translated">CompileApplicationDependencies メソッドでは、リソース、Web 参照、App_Code ディレクトリ内のファイルの App_Browsers ディレクトリ内の .browser ファイル、Global.asax ファイルがコンパイルされたことを確認します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Compiles the file represented by the virtual path.</source>
          <target state="translated">仮想パスで表されるファイルをコンパイルします。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The path to the file to be compiled.</source>
          <target state="translated">コンパイルするファイルへのパス。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.</source>
          <target state="translated">仮想パスで表されるファイルをコンパイルし、ビルドに関するステータス情報を取得するコールバック クラスを提供します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The path to the file to be compiled.</source>
          <target state="translated">コンパイルするファイルへのパス。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The object to receive status information from compilation.</source>
          <target state="translated">コンパイルのステータス情報を取得するオブジェクト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates an object in the application domain of the ASP.NET runtime.</source>
          <target state="translated">ASP.NET ランタイムのアプリケーション ドメインでオブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The type of object to be created.</source>
          <target state="translated">作成されるオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトは、ASP.NET ランタイムのアプリケーション ドメインで既に作成されている場合に例外をスローするにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An object in the application domain of the ASP.NET runtime.</source>
          <target state="translated">ASP.NET ランタイムのアプリケーション ドメイン内のオブジェクト。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The object already exists in the application domain and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">failIfExists</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">オブジェクトは、アプリケーション ドメインに既に存在し、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">failIfExists</ph> <ept id="p1">&lt;/code&gt;</ept> 、 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Generates code from the contents of a file.</source>
          <target state="translated">ファイルの内容からコードを生成します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">ファイルへの仮想パス。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The contents of the file.</source>
          <target state="translated">ファイルの内容です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">このメソッドから制御が戻るときに、行プラグマの辞書が含まれています。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the generated code.</source>
          <target state="translated">A&lt;xref:System.String&gt;生成されたコードが含まれている&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</source>
          <target state="translated">CodeDOM ツリー、コンパイラ タイプ、およびファイルの仮想パスで表される、コンパイラ パラメーターを返します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The GenerateCodeCompileUnit method retrieves information needed to compile a file.</source>
          <target state="translated">GenerateCodeCompileUnit メソッドは、ファイルをコンパイルするために必要な情報を取得します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In addition to a &lt;xref:System.CodeDom.CodeCompileUnit&gt; object as a return value, it returns three <ph id="ph1">`out`</ph> parameters.</source>
          <target state="translated">加え、 &lt;xref:System.CodeDom.CodeCompileUnit&gt;3 台、戻り値としてオブジェクトの<ph id="ph1">`out`</ph>のパラメーターです&lt;/xref:System.CodeDom.CodeCompileUnit&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the file.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph>パラメーターを生成すると、ファイルをコンパイルするプロバイダーの種類を返します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph>パラメーターには、コンパイル動作を決定するプロパティが含まれています。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`linePragmasTable`</ph> parameter contains a dictionary of line pragmas.</source>
          <target state="translated"><ph id="ph1">`linePragmasTable`</ph>パラメーターには、行プラグマの辞書が含まれています。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">ファイルへの仮想パス。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the codeDOM provider type used for code generation and compilation.</source>
          <target state="translated">このメソッドから制御が戻るときに、コード生成とコンパイルに使用される codeDOM プロバイダーの種類が含まれています。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">このメソッドから制御が戻るときに、ファイルのコンパイル方法を定義するプロパティが含まれています。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">このメソッドから制御が戻るときに、行プラグマの辞書が含まれています。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the given file.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定されたファイルです。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</source>
          <target state="translated">内容、codeDOM ツリー、コンパイラ タイプ、およびファイルの仮想パスで表される、コンパイラ パラメーターを返します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The GenerateCodeCompileUnit method retrieves information needed to compile a file.</source>
          <target state="translated">GenerateCodeCompileUnit メソッドは、ファイルをコンパイルするために必要な情報を取得します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In addition to a &lt;xref:System.CodeDom.CodeCompileUnit&gt; object as a return value, it returns three <ph id="ph1">`out`</ph> parameters.</source>
          <target state="translated">加え、 &lt;xref:System.CodeDom.CodeCompileUnit&gt;3 台、戻り値としてオブジェクトの<ph id="ph1">`out`</ph>のパラメーターです&lt;/xref:System.CodeDom.CodeCompileUnit&gt;。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the file.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph>パラメーターを生成すると、ファイルをコンパイルするプロバイダーの種類を返します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph>パラメーターには、コンパイル動作を決定するプロパティが含まれています。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`linePragmasTable`</ph> parameter contains a dictionary of line pragmas.</source>
          <target state="translated"><ph id="ph1">`linePragmasTable`</ph>パラメーターには、行プラグマの辞書が含まれています。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">ファイルへの仮想パス。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The contents of the file represented by the <ph id="ph1">`virtualPath`</ph> parameter.</source>
          <target state="translated">表されるファイルの内容、<ph id="ph1">`virtualPath`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the codeDOM provider type used for code generation and compilation.</source>
          <target state="translated">このメソッドから制御が戻るときに、コード生成とコンパイルに使用される codeDOM プロバイダーの種類が含まれています。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file represented by the <ph id="ph1">`virtualPath`</ph> parameter will be compiled.</source>
          <target state="translated">このメソッドから制御が戻るときにファイルがによって表される方法を定義するプロパティが含まれています、<ph id="ph1">`virtualPath`</ph>パラメーターはコンパイルされます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">このメソッドから制御が戻るときに、行プラグマの辞書が含まれています。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the given file.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定されたファイルです。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets the directories with files that, when changed, cause the application domain to shut down.</source>
          <target state="translated">辞書を取得ファイルを変更した場合、アプリケーション ドメインがシャット ダウンが発生します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Changes to files in specific top-level directories cause the application domain to shut down.</source>
          <target state="translated">特定の最上位ディレクトリのファイルへの変更が発生するアプリケーション ドメインをシャット ダウンします。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes.</source>
          <target state="translated">箱、App_Code、Global_Resources、Web 参照、および App_Browsers ディレクトリ内のファイルがすべての変更を検出するために監視されます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When changes are detected, the application domain is shut down.</source>
          <target state="translated">変更が検出されると、アプリケーション ドメインをシャット ダウンします。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array containing the top-level directory names.</source>
          <target state="translated">A&lt;xref:System.String&gt;最上位のディレクトリ名を含む配列です&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets a collection of browser elements.</source>
          <target state="translated">ブラウザー要素のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object contains browser names for the keys and &lt;xref:System.Web.UI.Triplet&gt; objects for the values.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;オブジェクトには、ブラウザーの名前キーにはが含まれていて、&lt;xref:System.Web.UI.Triplet&gt;オブジェクトの値&lt;/xref:System.Web.UI.Triplet&gt;&lt;/xref:System.Collections.IDictionary&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.Triplet&gt; objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.</source>
          <target state="translated">&lt;xref:System.Web.UI.Triplet&gt;各オブジェクトには、親ブラウザー要素、説明、および、ブラウザー内の要素のツリーの深さの名前が含まれています&lt;/xref:System.Web.UI.Triplet&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; containing browser elements.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;ブラウザーの要素が含まれている&lt;/xref:System.Collections.IDictionary&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.</source>
          <target state="translated">コンパイラ タイプ、コンパイラ パラメーター、および .wsdl ファイルなどの非コード ファイルから生成されたコード ファイルを格納するディレクトリに関する情報を取得します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The GetCodeDirectoryInformation method retrieves information needed to build a code directory.</source>
          <target state="translated">GetCodeDirectoryInformation メソッドは、コード ディレクトリのビルドに必要な情報を取得します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>It returns this information through three <ph id="ph1">`out`</ph> parameters.</source>
          <target state="translated">3 つを使用してこの情報を返します<ph id="ph1">`out`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the files in the code directory.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph>パラメーターは、生成およびコード ディレクトリ内のファイルをコンパイルするため、プロバイダーの種類を返します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph>パラメーターには、コンパイル動作を決定するプロパティが含まれています。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`generatedFilesDir`</ph> parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.</source>
          <target state="translated"><ph id="ph1">`generatedFilesDir`</ph>パラメーターは、.wsdl ファイルなど、コード ディレクトリ内の非コード ファイルから生成されたすべてのコード ファイルを含むディレクトリのパスを格納します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The directory about which to retrieve information.</source>
          <target state="translated">情報を取得する対象のディレクトリです。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the provider type used for code generation and compilation.</source>
          <target state="translated">このメソッドから制御が戻るときに、コード生成とコンパイルに使用されるプロバイダーの種類が含まれています。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">このメソッドから制御が戻るときに、ファイルのコンパイル方法を定義するプロパティが含まれています。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the directory for files generated from non-code files.</source>
          <target state="translated">このメソッドから制御が戻るときに、非コード ファイルから生成されたファイルのディレクトリが含まれています。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualCodeDir&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualCodeDir&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Compiles the file represented by the virtual path and returns its compiled type.</source>
          <target state="translated">仮想パスで表されるファイルをコンパイルし、コンパイルされた型を返します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The virtual path of the file to compile.</source>
          <target state="translated">コンパイルするファイルの仮想パス。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the compiled file.</source>
          <target state="translated">&lt;xref:System.Type&gt;のコンパイル済みのファイルです&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Returns the compiler type and parameters that are used to build a file represented by a virtual path.</source>
          <target state="translated">コンパイラ タイプ、および仮想パスで表されるファイルのビルドに使用されるパラメーターを返します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The virtual path to the file.</source>
          <target state="translated">ファイルへの仮想パス。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the provider type used for code generation and compilation.</source>
          <target state="translated">このメソッドから制御が戻るときに、コード生成とコンパイルに使用されるプロバイダーの種類が含まれています。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">このメソッドから制御が戻るときに、ファイルのコンパイル方法を定義するプロパティが含まれています。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Returns the virtual path of a generated file.</source>
          <target state="translated">生成されたファイルの仮想パスを返します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The full physical path to a generated file.</source>
          <target state="translated">生成されたファイルへの完全物理パス。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the virtual path for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filePath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.String&gt;の仮想パスが含まれている<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">filePath</ph><ept id="p1">&lt;/code&gt;</ept>です&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filePath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;filePath&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets the physical path to the generated file for a virtual path.</source>
          <target state="translated">仮想パスの生成ファイルへの物理パスを取得します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The virtual path of the file to retrieve.</source>
          <target state="translated">取得するファイルの仮想パス。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; that contains the physical path to the generated file.</source>
          <target state="translated">A&lt;xref:System.String&gt;を含む、生成されたファイルへの物理パスです&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns an array of the assemblies defined in the Bin directory and the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section of the Web configuration file.</source>
          <target state="translated">Bin ディレクトリで定義されているアセンブリの配列を返すと、 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Web 構成ファイルのセクション。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The configuration name and path.</source>
          <target state="translated">構成の名前とパス。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array containing paths to code bases in the Bin directory and the <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section of the Web configuration file.</source>
          <target state="translated">A&lt;xref:System.String&gt;コードへのパスを含む配列が Bin ディレクトリに基づくと、 <bpt id="p1">&lt;xref uid="langword_csharp_&amp;lt;assembly&amp;gt;" name="&amp;lt;assembly&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Web 構成ファイルのセクション&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.</source>
          <target state="translated">App_Code ディレクトリとそのサブディレクトリを ASP.NET アプリケーションで仮想パスを返します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; array containing all the virtual paths to code directories in an application.</source>
          <target state="translated">A&lt;xref:System.String&gt;アプリケーションのコード ディレクトリへのすべての仮想パスを含む配列です&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Gives the application domain an infinite lifetime by preventing a lease from being created.</source>
          <target state="translated">アプリケーション ドメインは、無限の有効期間リースが作成されることを防ぐことで。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>This method overrides the &lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt; method in its base class.</source>
          <target state="translated">このメソッドは、&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;その基本クラスのメソッド&lt;/xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>It always returns <ph id="ph1">`null`</ph> and thereby prevents a lease from being created that would limit the application domain's lifetime.</source>
          <target state="translated">常に<ph id="ph1">`null`</ph>し、それによって作られるリースであり、アプリケーション ドメインの有効期間が制限されることを防止します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Indicates whether an assembly is a code assembly.</source>
          <target state="translated">アセンブリがコード アセンブリかどうかを示します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The name of the assembly to be identified as a code assembly.</source>
          <target state="translated">コード アセンブリを識別するアセンブリの名前。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">assemblyName</ph><ept id="p2">&lt;/code&gt;</ept> parameter matches one of the generated code assemblies; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">assemblyName</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーターでは、生成されたコード アセンブリの&amp;1; つと一致する; それ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;assemblyName&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.</source>
          <target state="translated">ASP.NET Web アプリケーションをコンパイルするためのアプリケーション ドメインが作成されているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain for compiling ASP.NET Web applications has been created; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ASP.NET Web アプリケーションをコンパイルするためのアプリケーション ドメインが作成されている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Precompiles an ASP.NET application.</source>
          <target state="translated">ASP.NET アプリケーションをプリコンパイルします。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET には、次の&amp;3; つの形式のプリコンパイルがサポートされています。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">1 つのフォームは、ASP.NET アプリケーションの埋め込み先プリコンパイルできます。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">このフォームで、サイトは、実働環境に展開し、プリコンパイルし、ユーザーが初めてアクセスしたときにサイトを動的にコンパイルする必要があります。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">サイトの最初のユーザーでは、動的にコンパイルされるサイトに正常に到達した遅延は発生しません。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">配置用プリコンパイルの他の&amp;2; つの形式が使用されます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">サイトのレイアウトを生成するか、フォームでは、運用コンピューターに配置できるようにします。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">これらのフォームのいずれかすると、コンパイル済みのサイトにある程度の更新を実行できるように、マークアップ ページが含まれています。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">その他のフォームでは、マークアップ ページが含まれていないと、元のサイトを再コンパイルしなくても更新することはできません。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">どのプリコンパイル形式のいずれかで対象となる環境には、ソース コードは配置されません。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The application to precompile is defined through the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; constructor.</source>
          <target state="translated">プリコンパイルするアプリケーションが定義されている、&lt;xref:System.Web.Compilation.ClientBuildManager&gt;のコンス トラクターです&lt;/xref:System.Web.Compilation.ClientBuildManager&gt;。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt; object of the &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;オブジェクトの&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;のプリコンパイルを実行する&amp;3; つの形式のコンス トラクターを定義します&lt;/xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;&lt;/xref:System.Web.Compilation.ClientBuildManagerParameter&gt;。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the PrecompileApplication method.</source>
          <target state="translated">開発者の Web サイトをプリコンパイルすること、<ph id="ph1">`aspnet_compiler`</ph>コマンド ライン ツールまたは PrecompileApplication メソッドを呼び出すことによって。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Precompiles an ASP.NET application and provides a callback method to receive status information about the build.</source>
          <target state="translated">ASP.NET アプリケーションをプリコンパイルし、ビルドに関するステータス情報を受信するコールバック メソッドを提供します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET には、次の&amp;3; つの形式のプリコンパイルがサポートされています。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">1 つのフォームは、ASP.NET アプリケーションの埋め込み先プリコンパイルできます。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">このフォームで、サイトは、実働環境に展開し、プリコンパイルし、ユーザーが初めてアクセスしたときにサイトを動的にコンパイルする必要があります。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">サイトの最初のユーザーでは、動的にコンパイルされるサイトに正常に到達した遅延は発生しません。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`callback`</ph> parameter contains the method to call when reporting the result of compilation.</source>
          <target state="translated"><ph id="ph1">`callback`</ph>パラメーターには、コンパイルの結果を報告するときに呼び出すメソッドが含まれています。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">配置用プリコンパイルの他の&amp;2; つの形式が使用されます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">サイトのレイアウトを生成するか、フォームでは、運用コンピューターに配置できるようにします。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">これらのフォームのいずれかすると、コンパイル済みのサイトにある程度の更新を実行できるように、マークアップ ページが含まれています。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">その他のフォームでは、マークアップ ページが含まれていないと、元のサイトを再コンパイルしなくても更新することはできません。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">どのプリコンパイル形式のいずれかで対象となる環境には、ソース コードは配置されません。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The application to precompile is defined through the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; constructor.</source>
          <target state="translated">プリコンパイルするアプリケーションが定義されている、&lt;xref:System.Web.Compilation.ClientBuildManager&gt;のコンス トラクターです&lt;/xref:System.Web.Compilation.ClientBuildManager&gt;。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt; object of the &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;オブジェクトの&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;のプリコンパイルを実行する&amp;3; つの形式のコンス トラクターを定義します&lt;/xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;&lt;/xref:System.Web.Compilation.ClientBuildManagerParameter&gt;。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the PrecompileApplication method.</source>
          <target state="translated">開発者の Web サイトをプリコンパイルすること、<ph id="ph1">`aspnet_compiler`</ph>コマンド ライン ツールまたは PrecompileApplication メソッドを呼び出すことによって。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the method to call when reporting the result of compilation.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コンパイルの結果を報告するときに呼び出すメソッドが含まれています。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.</source>
          <target state="translated">ASP.NET アプリケーションをプリコンパイル、ビルドに関するステータス情報を受信するコールバック メソッドを提供し、クリーン ビルドを作成するかどうかを示します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET には、次の&amp;3; つの形式のプリコンパイルがサポートされています。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">1 つのフォームは、ASP.NET アプリケーションの埋め込み先プリコンパイルできます。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">このフォームで、サイトは、実働環境に展開し、プリコンパイルし、ユーザーが初めてアクセスしたときにサイトを動的にコンパイルする必要があります。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">サイトの最初のユーザーでは、動的にコンパイルされるサイトに正常に到達した遅延は発生しません。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`callback`</ph> parameter contains the method to call when reporting the result of compilation.</source>
          <target state="translated"><ph id="ph1">`callback`</ph>パラメーターには、コンパイルの結果を報告するときに呼び出すメソッドが含まれています。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">配置用プリコンパイルの他の&amp;2; つの形式が使用されます。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">サイトのレイアウトを生成するか、フォームでは、運用コンピューターに配置できるようにします。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">これらのフォームのいずれかすると、コンパイル済みのサイトにある程度の更新を実行できるように、マークアップ ページが含まれています。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">その他のフォームでは、マークアップ ページが含まれていないと、元のサイトを再コンパイルしなくても更新することはできません。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">どのプリコンパイル形式のいずれかで対象となる環境には、ソース コードは配置されません。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The application to precompile is defined through the &lt;xref:System.Web.Compilation.ClientBuildManager&gt; constructor.</source>
          <target state="translated">プリコンパイルするアプリケーションが定義されている、&lt;xref:System.Web.Compilation.ClientBuildManager&gt;のコンス トラクターです&lt;/xref:System.Web.Compilation.ClientBuildManager&gt;。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt; object of the &lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt; constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;オブジェクトの&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;のプリコンパイルを実行する&amp;3; つの形式のコンス トラクターを定義します&lt;/xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;&lt;/xref:System.Web.Compilation.ClientBuildManagerParameter&gt;。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the &lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt; method.</source>
          <target state="translated">開発者の Web サイトをプリコンパイルすること、<ph id="ph1">`aspnet_compiler`</ph>コマンド ライン ツールを呼び出すことによって、または、&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;メソッドです&lt;/xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the method to call when reporting the result of compilation.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Compilation.ClientBuildManagerCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コンパイルの結果を報告するときに呼び出すメソッドが含まれています。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to perform a clean build, which will first delete all object and intermediate files; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to rebuild only those files that have changed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>最初にすべてのオブジェクトと中間ファイルを削除するクリーン ビルドを実行するのには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>に変更されたファイルだけを再構築します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Set to true if there is a chance that a dependency might not be picked up by the build environment.</source>
          <target state="translated">ビルド環境によって依存関係が検出されない可能性がある場合は、true に設定します。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Terminates the current ASP.NET application.</source>
          <target state="translated">現在の ASP.NET アプリケーションを終了します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Unloads the application domain for compiling ASP.NET Web applications.</source>
          <target state="translated">ASP.NET Web アプリケーションをコンパイルするためのアプリケーション ドメインをアンロードします。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain is unloaded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、アプリケーション ドメインがアンロードされます。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>