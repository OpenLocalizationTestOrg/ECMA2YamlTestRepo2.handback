<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c0af1c59b9db4806475c1f99407ebd69f4d070a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.FrameworkElementFactory.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a285e585c25fbcc26fd119edea1a8f1b25198149</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db9633333df4326a1bf00e363460ecdf3fd2649c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports the creation of templates.</source>
          <target state="translated">テンプレートの作成をサポートしています。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is a deprecated way to programmatically create templates, which are subclasses of &lt;xref:System.Windows.FrameworkTemplate&gt; such as &lt;xref:System.Windows.Controls.ControlTemplate&gt; or &lt;xref:System.Windows.DataTemplate&gt;; not all of the template functionality is available when you create a template using this class.</source>
          <target state="translated">このクラスは、プログラムで&lt;xref:System.Windows.FrameworkTemplate&gt;&lt;xref:System.Windows.Controls.ControlTemplate&gt;&lt;xref:System.Windows.DataTemplate&gt;はこのクラスを使用してテンプレートを作成するときに使用可能なすべてのテンプレート機能以外の場合&lt;/xref:System.Windows.DataTemplate&gt;&lt;/xref:System.Windows.Controls.ControlTemplate&gt;など&lt;/xref:System.Windows.FrameworkTemplate&gt;のサブクラスはテンプレートを作成する非推奨の方法</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The recommended way to programmatically create a template is to load <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> from a string or a memory stream using the &lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt; method of the &lt;xref:System.Windows.Markup.XamlReader&gt; class.</source>
          <target state="translated">読み込みには、プログラムでテンプレートを作成することをお勧め<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>文字列または&lt;xref:System.Windows.Markup.XamlReader.Load%2A&gt;&lt;xref:System.Windows.Markup.XamlReader&gt;クラス&lt;/xref:System.Windows.Markup.XamlReader&gt;のメソッド&lt;/xref:System.Windows.Markup.XamlReader.Load%2A&gt;を使用してメモリ ストリームから</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified text to produce.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスを生成するために指定されたテキストでします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The text string to produce.</source>
          <target state="translated">生成するためにテキスト文字列。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified &lt;xref:System.Type&gt;.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>に指定された&lt;xref:System.Type&gt;&lt;/xref:System.Type&gt;クラス</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The type of instance to create.</source>
          <target state="translated">作成するインスタンスの型。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified &lt;xref:System.Type&gt; and name.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定したクラス&lt;xref:System.Type&gt;と名前&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The type of instance to create.</source>
          <target state="translated">作成するインスタンスの型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The style identifier.</source>
          <target state="translated">スタイルの識別子です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Adds an event handler for the given routed event to the instances created by this factory.</source>
          <target state="translated">このファクトリによって作成されたインスタンスを指定したルーティング イベントのイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Identifier object for the routed event being handled.</source>
          <target state="translated">処理されるルーティング イベントの識別子オブジェクト。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A reference to the handler implementation.</source>
          <target state="translated">ハンドラーの実装への参照。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Adds an event handler for the given routed event to the instances created by this factory, with the option of having the provided handler be invoked even in cases of routed events that had already been marked as handled by another element along the route.</source>
          <target state="translated">経路上の別の要素によって処理されるように既にマークされているルーティング イベントの場合でも呼び出される、指定したハンドラーを持つのオプションを使用してこのファクトリによって作成されたインスタンスを指定したルーティング イベントのイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Identifier object for the routed event being handled.</source>
          <target state="translated">処理されるルーティング イベントの識別子オブジェクト。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A reference to the handler implementation.</source>
          <target state="translated">ハンドラーの実装への参照。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Whether to invoke the handler in cases where the routed event has already been marked as handled in its arguments object.</source>
          <target state="translated">ここでルーティング イベントが既に指定されている場合にハンドラーを呼び出すかどうかは、その引数オブジェクトで処理されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to invoke the handler even when the routed event is marked handled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>処理するのにはさらに、ハンドラーを呼び出しますルーティング イベントがマークされている場合です。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Asking to handle already-handled routed events is not common.</source>
          <target state="translated">既にで処理されるルーティング イベントを処理するよう求めるは一般的ではありません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Adds a child factory to this factory.</source>
          <target state="translated">このファクトリに子のファクトリを追加します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to add as a child.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>子として追加するオブジェクト。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets the first child factory.</source>
          <target state="translated">最初の子のファクトリを取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_FirstChild"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_FirstChild"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> the first child factory.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>最初の子のファクトリです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this object is in an immutable state.</source>
          <target state="translated">このオブジェクトが不変の状態であるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_IsSealed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_IsSealed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this object is in an immutable state; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>このオブジェクトが、不変の状態の場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of a template item.</source>
          <target state="translated">取得またはテンプレート アイテムの名前を設定します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_Name"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_Name"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A string that is the template identifier.</source>
          <target state="translated">テンプレート識別子を指定する文字列。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the next sibling factory.</source>
          <target state="translated">次の兄弟ファクトリを取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_NextSibling"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_NextSibling"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the next sibling factory.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>つまりの次の兄弟ファクトリ。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the parent <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">親を取得します<bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_Parent"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_Parent"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the parent factory.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.FrameworkElementFactory"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>親ファクトリはします。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Removes an event handler from the given routed event.</source>
          <target state="translated">指定したルーティング イベントからイベント ハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This applies to the instances created by this factory.</source>
          <target state="translated">これは、このファクトリによって作成されたインスタンスに適用されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Identifier object for the routed event.</source>
          <target state="translated">ルーティング イベントの識別子のオブジェクト。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The handler to remove.</source>
          <target state="translated">削除するハンドラー。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Sets up data binding on a property.</source>
          <target state="translated">プロパティのデータ バインディングを設定します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Identifies the property where the binding should be established.</source>
          <target state="translated">バインドを確立する必要があるプロパティを識別します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Description of the binding.</source>
          <target state="translated">バインディングの説明です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Set up a dynamic resource reference on a child property.</source>
          <target state="translated">子プロパティで動的リソース参照を設定します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The property to which the resource is bound.</source>
          <target state="translated">リソースがバインドされているプロパティです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Sets the value of a dependency property.</source>
          <target state="translated">依存関係プロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The dependency property identifier of the property to set.</source>
          <target state="translated">設定するプロパティの依存関係プロパティの識別子。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The new value.</source>
          <target state="translated">新しい値。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the text string to produce.</source>
          <target state="translated">取得または生成するテキスト文字列を設定します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_Text"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_Text"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The text string to produce.</source>
          <target state="translated">生成するためにテキスト文字列。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of the objects this factory produces.</source>
          <target state="translated">取得またはこのファクトリが生成するオブジェクトの種類を設定します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_Type"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_Type"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The type of the objects this factory produces.</source>
          <target state="translated">このファクトリが生成するオブジェクトの型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>