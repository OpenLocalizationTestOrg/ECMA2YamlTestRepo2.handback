<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">824d6bbe4db3ddefe122535058ed1477cd3d5569</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Resources.ResXDataNode.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8cd8e792f32ea1979fdf3668a4bb33582a1b19a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">560e9f82e40c855a724c5e8ae2ee28abb57ff4eb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an element in an XML resource (.resx) file.</source>
          <target state="translated">XML リソース (.resx) ファイル内の要素を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ResXDataNode class supports the representation of rich data types within a resource file.</source>
          <target state="translated">ResXDataNode クラスでは、リソース ファイル内の豊富なデータ型の表現をサポートします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It can support the storage of any object in a resource file, so long as the object supports serialization and type editors.</source>
          <target state="translated">オブジェクトがシリアル化と型のエディターをサポートしている限り、リソース ファイルに任意のオブジェクトのストレージをサポートできます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can create a ResXDataNode object by calling one of its overloaded class constructors.</source>
          <target state="translated">ResXDataNode オブジェクトを作成するには、そのクラスのオーバー ロードされたコンス トラクターのいずれかを呼び出します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can then add the resource item or element to a resource file by calling the &lt;xref:System.Resources.ResXResourceWriter.AddResource%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">できますし、または追加するリソース アイテム要素のリソース ファイルを呼び出すことによって、&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Resources.ResXResourceWriter.AddResource%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To retrieve an existing ResXDataNode object, you must enumerate the ResXDataNode objects in an XML resource file by instantiating a &lt;xref:System.Resources.ResXResourceReader&gt; object, setting the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A?displayProperty=fullName&gt; property to <ph id="ph1">`true`</ph>, and calling the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; method to get an enumerator.</source>
          <target state="translated">ResXDataNode の既存のオブジェクトを取得するは、インスタンス化して、XML リソース ファイル内 ResXDataNode オブジェクトを列挙する必要があります、&lt;xref:System.Resources.ResXResourceReader&gt;オブジェクト、設定、&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A?displayProperty=fullName&gt;プロパティを<ph id="ph1">`true`</ph>を呼び出すと、&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;列挙子を取得するメソッド&lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;&lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A?displayProperty=fullName&gt;&lt;/xref:System.Resources.ResXResourceReader&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The example provides an illustration.</source>
          <target state="translated">この例では、具体的なを示します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The resource to store.</source>
          <target state="translated">格納するリソースです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The resource named in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> does not support serialization.</source>
          <target state="translated">リソース名前<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>はシリアル化をサポートしていません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is a string of zero length.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>長さ&amp;0; の文字列です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a reference to a resource file.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>リソース ファイルへの参照を持つクラス。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The file reference to use as the resource.</source>
          <target state="translated">リソースとして使用するファイルの参照。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;code&gt;fileRef&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;code&gt;fileRef&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is a string of zero length.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>長さ&amp;0; の文字列です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The resource to store.</source>
          <target state="translated">格納するリソースです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A reference to a method that takes a &lt;xref:System.Type&gt; and returns a string containing the &lt;xref:System.Type&gt; name.</source>
          <target state="translated">受け取るメソッドへの参照、&lt;xref:System.Type&gt;を含む文字列を返します、&lt;xref:System.Type&gt;名&lt;/xref:System.Type&gt;&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The resource named in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> does not support serialization.</source>
          <target state="translated">リソース名前<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>はシリアル化をサポートしていません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is a string of zero length.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>長さ&amp;0; の文字列です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a reference to a resource file.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>リソース ファイルへの参照を持つクラス。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The file reference to use as the resource.</source>
          <target state="translated">リソースとして使用するファイルの参照。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A reference to a method that takes a &lt;xref:System.Type&gt; and returns a string containing the &lt;xref:System.Type&gt; name.</source>
          <target state="translated">受け取るメソッドへの参照、&lt;xref:System.Type&gt;を含む文字列を返します、&lt;xref:System.Type&gt;名&lt;/xref:System.Type&gt;&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;code&gt;fileRef&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;code&gt;fileRef&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is a string of zero length.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>長さ&amp;0; の文字列です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets an arbitrary comment regarding this resource.</source>
          <target state="translated">取得またはこのリソースに関する任意のコメントを設定します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If a comment has not been assigned to the resource item, the value of the Comment property is &lt;xref:System.String?displayProperty=fullName&gt;.</source>
          <target state="translated">コメント プロパティの値は、 &lt;xref:System.String?displayProperty=fullName&gt;。&lt;/xref:System.String?displayProperty=fullName&gt;コメントがリソースの項目に割り当てられていない場合</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You access the Comment property of an data node in an existing XML resource file by instantiating a &lt;xref:System.Resources.ResXResourceReader&gt; object, setting the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A?displayProperty=fullName&gt; property to <ph id="ph1">`true`</ph>, and calling the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; method to retrieve an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that you use to enumerate the items in the XML resource file.</source>
          <target state="translated">インスタンス化して、既存の XML リソース ファイル内のデータ ノードのコメント プロパティにアクセスする、&lt;xref:System.Resources.ResXResourceReader&gt;オブジェクト、設定、&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A?displayProperty=fullName&gt;プロパティを<ph id="ph1">`true`</ph>を呼び出すと、&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;を取得する方法、&lt;xref:System.Collections.IDictionaryEnumerator&gt;オブジェクトの XML リソース ファイル内の項目を列挙に使用することです&lt;/xref:System.Collections.IDictionaryEnumerator&gt;&lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;&lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A?displayProperty=fullName&gt;&lt;/xref:System.Resources.ResXResourceReader&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt; property returns the &lt;xref:System.Resources.ResXDataNode&gt; object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt;プロパティから返される、&lt;xref:System.Resources.ResXDataNode&gt;オブジェクト&lt;/xref:System.Resources.ResXDataNode&gt;&lt;/xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A string that represents the comment.</source>
          <target state="translated">コメントを表す文字列。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the file reference for this resource.</source>
          <target state="translated">このリソースのファイル参照を取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The file reference, if this resource uses one.</source>
          <target state="translated">このリソースは&amp;1; つを使用している場合のファイル参照。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If this resource stores its value as an &lt;xref:System.Object&gt;, this property will return <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このリソースとその値を格納する場合、 &lt;xref:System.Object&gt;、このプロパティは返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Retrieves the position of the resource in the resource file.</source>
          <target state="translated">リソースのリソース ファイル内の位置を取得します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A structure that specifies the location of this resource in the resource file as a line position (&lt;xref:System.Drawing.Point.X<bpt id="p1">*</bpt>&gt;) and a column position (&lt;xref:System.Drawing.Point.Y<ept id="p1">*</ept>&gt;).</source>
          <target state="translated">行の位置として、リソース ファイルでこのリソースの場所を指定する構造体 (&lt;&gt;<bpt id="p1">*</bpt>&gt;) と列の位置 (&lt;&gt;<ept id="p1">*</ept>&gt;)。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If this resource is not part of a resource file, this method returns a structure that has an &lt;xref:System.Drawing.Point.X<bpt id="p1">*</bpt>&gt; of 0 and a &lt;xref:System.Drawing.Point.Y<ept id="p1">*</ept>&gt; of 0.</source>
          <target state="translated">このリソースがリソース ファイルの一部でない場合は、このメソッドを持つ構造体を返します、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 0 と&lt;&gt; <ept id="p1">*</ept>&gt; は 0 です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Retrieves the object that is stored by this node by using the specified type resolution service.</source>
          <target state="translated">指定した型解決サービスを使用して、このノードに格納されているオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the stored value currently exists in memory, it is returned directly.</source>
          <target state="translated">メモリに格納されている値が現在存在する場合、直接返されます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If it is stored in the resource file and it is not a file reference, &lt;xref:System.Resources.ResXDataNode.GetValue%2A&gt; looks for a &lt;xref:System.ComponentModel.TypeConverter&gt; by using the specified type resolution service that can convert from a string to the appropriate object.</source>
          <target state="translated">リソース ファイルに格納されていて、ファイル参照ではない場合&lt;xref:System.Resources.ResXDataNode.GetValue%2A&gt;は検索、&lt;xref:System.ComponentModel.TypeConverter&gt;文字列から適切なオブジェクトに変換できる、指定した型解決サービスを使用しています&lt;/xref:System.ComponentModel.TypeConverter&gt;&lt;/xref:System.Resources.ResXDataNode.GetValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If the resource is a file reference, &lt;xref:System.Resources.ResXDataNode.GetValue%2A&gt; tries to de-serialize it.</source>
          <target state="translated">リソースがファイル参照で、&lt;xref:System.Resources.ResXDataNode.GetValue%2A&gt;それを逆シリアル化しようとしています。&lt;/xref:System.Resources.ResXDataNode.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The type resolution service to use when looking for a type converter.</source>
          <target state="translated">型コンバーターの検索時に使用する型解決サービスです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The object that corresponds to the stored value.</source>
          <target state="translated">格納されている値に対応するオブジェクト。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The corresponding type could not be found, or an appropriate type converter is not available.</source>
          <target state="translated">対応する型が見つかりません、または適切な型コンバーターは使用できません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Retrieves the object that is stored by this node by searching the specified assemblies.</source>
          <target state="translated">指定したアセンブリを検索することでこのノードに格納されているオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If the stored value currently exists in memory, it is returned directly.</source>
          <target state="translated">メモリに格納されている値が現在存在する場合、直接返されます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If it is stored in the resource file and it is not a file reference, GetValue looks in the assemblies identified by names to find the object's corresponding type, and then looks for a &lt;xref:System.ComponentModel.TypeConverter&gt; that can convert from a string to the appropriate object.</source>
          <target state="translated">場合は、リソース ファイルに格納されていて、ファイル参照ではありません、GetValue は、オブジェクトの対応する型を検索する名前で識別されるアセンブリの検索を検索、&lt;xref:System.ComponentModel.TypeConverter&gt;文字列から適切なオブジェクトに変換することができます&lt;/xref:System.ComponentModel.TypeConverter&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If the resource is a file reference, GetValue tries to deserialize it.</source>
          <target state="translated">リソースがファイルの参照の場合は、GetValue は、逆シリアル化しようとします。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The list of assemblies to search for the type of the object.</source>
          <target state="translated">オブジェクトの種類を検索するアセンブリの一覧です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The object that corresponds to the stored value.</source>
          <target state="translated">格納されている値に対応するオブジェクト。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The corresponding type could not be found, or an appropriate type converter is not available.</source>
          <target state="translated">対応する型が見つかりません、または適切な型コンバーターは使用できません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Retrieves the type name for the value by using the specified type resolution service.</source>
          <target state="translated">指定した型解決サービスを使用して、値の型名を取得します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The type resolution service to use to locate a converter for this type.</source>
          <target state="translated">型解決サービスを使用してこの型のコンバーターを検索します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A string that represents the fully qualified name of the type.</source>
          <target state="translated">型の完全修飾名を表す文字列。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The corresponding type could not be found.</source>
          <target state="translated">対応する型が見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Retrieves the type name for the value by examining the specified assemblies.</source>
          <target state="translated">指定したアセンブリを調べることで、値の型名を取得します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The assemblies to examine for the type.</source>
          <target state="translated">型をチェックするアセンブリ。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A string that represents the fully qualified name of the type.</source>
          <target state="translated">型の完全修飾名を表す文字列。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The corresponding type could not be found.</source>
          <target state="translated">対応する型が見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of this resource.</source>
          <target state="translated">取得またはこのリソースの名前を設定します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A string that corresponds to the resource name.</source>
          <target state="translated">リソース名に対応する文字列。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If no name is assigned, this property returns a zero-length string.</source>
          <target state="translated">名前が割り当てられていない場合、このプロパティは、長さ&amp;0; の文字列を返します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The name property is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Name プロパティに設定<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The name property is set to a string of zero length.</source>
          <target state="translated">Name プロパティは長さがゼロの文字列に設定します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Populates a <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with the data needed to serialize the target object.</source>
          <target state="translated">追加、 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ターゲット オブジェクトをシリアル化に必要なデータを持つオブジェクト。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Resources.ResXDataNode&gt; instance is cast to an &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface.</source>
          <target state="translated">使用する場合にのみ、&lt;xref:System.Resources.ResXDataNode&gt;にインスタンスをキャスト、&lt;xref:System.Runtime.Serialization.ISerializable&gt;インターフェイス&lt;/xref:System.Runtime.Serialization.ISerializable&gt;&lt;/xref:System.Resources.ResXDataNode&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An  object to populate with data.</source>
          <target state="translated">データを読み込む先のオブジェクト。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The destination for this serialization.</source>
          <target state="translated">このシリアル化のシリアル化先。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>