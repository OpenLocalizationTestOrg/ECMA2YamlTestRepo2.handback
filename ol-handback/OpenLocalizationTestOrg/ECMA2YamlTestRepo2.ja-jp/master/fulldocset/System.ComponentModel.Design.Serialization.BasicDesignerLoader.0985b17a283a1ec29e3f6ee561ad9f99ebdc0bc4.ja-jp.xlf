<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">414ae757991da71715a8f5575dedee1c0d6b2c93</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.BasicDesignerLoader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55ded42f948d25327c2838396f762a3d60d6c6c3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c154751e563b903d5bf944a9660ed6a02f5e9705</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an implementation of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">実装を提供、 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A BasicDesignerLoader is a complete implementation of a designer loader without anything relating to a persistence format.</source>
          <target state="translated">BasicDesignerLoader は、何も保存形式に関連するデザイナー ローダーの完全な実装です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A BasicDesignerLoader does not dictate either a text or binary persistence, but it does support the following features:      -   Multiple load dependencies.</source>
          <target state="translated">テキストまたはバイナリの永続化、BasicDesignerLoader は定められていませんが、次の機能をサポートして: - 複数の依存関係を読み込めません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>-   Tracking changes within the designer.</source>
          <target state="translated">デザイナー内での変更を追跡します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>-   Deferred idle-time reloading.</source>
          <target state="translated">アイドル時間の再読み込み遅延します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A BasicDesignerLoader adds two kinds of services to the designer host’s service container: replaceable services and irreplaceable services.</source>
          <target state="translated">BasicDesignerLoader デザイナー ホストのサービス コンテナーに&amp;2; つの種類のサービスを追加します: 置き換え可能サービスと置き換えることができないサービス。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can replace a replaceable service by changing the value of the protected &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A&gt; property.</source>
          <target state="translated">置き換え可能なサービスを置換するには、保護対象の値を変更することによって&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A&gt;プロパティ&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You cannot replace irreplaceable services because their implementations depend on each other.</source>
          <target state="translated">実装が互いに依存しているために、置き換えることができないサービスを置き換えることはできません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following table describes the services that are provided by default.</source>
          <target state="translated">次の表では、既定で提供されるサービスについて説明します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>|Default Service|Description|   |---------------------|-----------------|   |&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;|Allows objects to request that the designer reload itself when it is idle.</source>
          <target state="translated">|既定のサービス |説明 |  |---------------------|-----------------|  |&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;|オブジェクトをデザイナーを再読み込み自体アイドル状態のときに要求することができます&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is a replaceable service.|   |&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;|Used to serialize and deserialize objects.</source>
          <target state="translated">置き換え可能なサービスです |。  |&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;|およびオブジェクトを逆シリアル化するために使用します&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The serialization manager is added as a service so objects that need to perform serialization can utilize any serialization providers that were added to the serialization manager.</source>
          <target state="translated">シリアル化マネージャーは、シリアル化を実行する必要があるオブジェクトがシリアル化マネージャーに追加された任意のシリアル化プロバイダーを使用できるように、サービスとして追加されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is an irreplaceable service.|</source>
          <target state="translated">これは、置き換えることができないサービスです |。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.BasicDesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.BasicDesignerLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Starts the loading process.</source>
          <target state="translated">読み込みプロセスを開始します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is an implementation of the abstract &lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">これは、抽象の実装&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You do not need to override this method in your own class.</source>
          <target state="translated">独自のクラスには、このメソッドをオーバーライドする必要はありません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The BeginLoad method performs the following actions:      -   It verifies that the design surface has not already loaded.</source>
          <target state="translated">BeginLoad メソッドは、次の操作を実行します:-デザイン サーフェイスは既に読み込まれていないことを確認します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-   On the first call, it adds relevant services and calls the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A&gt; method.</source>
          <target state="translated">最初の呼び出しでは、関連するサービスとの呼び出しが追加されます、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A&gt;メソッド&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   It calls the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt;, &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A&gt;, and &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt; methods.</source>
          <target state="translated">呼び出し、 &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt;、 &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A&gt;、および&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;メソッド&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the designer loader service has not been removed from the service container, BeginLoad will call the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A&gt; and &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt; methods instead of the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt; and &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt; methods.</source>
          <target state="translated">デザイナー ローダー サービスがサービス コンテナーから削除されていない BeginLoad が呼び出され、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A&gt;と&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt;メソッドの代わりに、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt;と&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;メソッド&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In this situation, it is the responsibility of the designer loader service to call &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt; and &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;.</source>
          <target state="translated">このような状況でを呼び出す&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt;と&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;。&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt;デザイナー ローダー サービスの責任</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The designer loader host to load.</source>
          <target state="translated">読み込むデザイナー ローダー ホストします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;host&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;host&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The designer is already loaded, or BeginLoad has been called with a different designer loader host.</source>
          <target state="translated">デザイナーは既に読み込まれて、または別のデザイナー ローダー ホストで BeginLoad が呼び出されました。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;host&lt;/code&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;host&lt;/code&gt;</ph>破棄されました。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.BasicDesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">によって使用されるリソースを解放、 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.BasicDesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Calling the Dispose method does not flush changes to the designer loader.</source>
          <target state="translated">Dispose メソッドを呼び出すことも、変更はデザイナー ローダーにフラッシュしません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you want changes to be saved, call &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt; before calling Dispose.</source>
          <target state="translated">変更を保存する場合は、呼び出す&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt;Dispose を呼び出す前にします&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;。&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;の使用が終了したときに、Dispose を呼び出す</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt; in an unusable state.</source>
          <target state="translated">Dispose メソッドは、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;使用不可の状態&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt; was occupying.</source>
          <target state="translated">Dispose を呼び出した後は、すべての参照を解放する必要があります、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;ガベージ コレクターがメモリを再利用できるようにする、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;占有されていた&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;の最後の参照を解放する前に常に呼び出しが破棄。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;オブジェクトの<ph id="ph1">`Finalize`</ph>メソッド&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Enables or disables component notification with the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">有効または無効にコンポーネントを使用した通知、 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to enable component notification by the <bpt id="p2">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerLoader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to disable component notification by the <bpt id="p4">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerLoader"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>によってコンポーネントの通知を有効にする、 <bpt id="p2">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerLoader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>によってコンポーネントの通知を無効にする、 <bpt id="p4">&lt;xref href="System.ComponentModel.Design.Serialization.DesignerLoader"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the component notification was enabled prior to this call; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>この呼び出しの前にコンポーネントの通知が有効になっている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Flushes pending changes to the designer loader.</source>
          <target state="translated">保留中の変更、デザイナー ローダーをフラッシュします。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the designer loader has not been loaded or has not been marked as modified, the Flush method returns immediately.</source>
          <target state="translated">デザイナー ローダーは読み込まれていませんか変更済みとしてマークされていない、すぐには Flush メソッドを返します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Otherwise, Flush asks the serialization manager to create a serialization session and then calls &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A&gt;.</source>
          <target state="translated">それ以外の場合、フラッシュをシリアル化セッションを作成するシリアル化マネージャーを確認してから&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A&gt;。&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets the requested service.</source>
          <target state="translated">要求されたサービスを取得します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>GetService is a helper method that allows classes deriving from &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt; to access services offered by the designer loader host.</source>
          <target state="translated">派生するクラスを許可するヘルパー メソッドは、GetService&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;デザイナー ローダー ホストによって提供されるサービスへのアクセス&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the service.</source>
          <target state="translated">&lt;xref:System.Type&gt;サービス&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The requested service, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the requested service cannot be found.</source>
          <target state="translated">要求したサービスまたは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要求されたサービスが見つからない場合。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Initializes services.</source>
          <target state="translated">サービスを初期化します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The Initialize method is called the first time &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt; is invoked.</source>
          <target state="translated">Initialize メソッドが初めて&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;が呼び出されます&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can add any services necessary to the designer loader host at this time.</source>
          <target state="translated">この時点でデザイナー ローダー ホストに必要なサービスを追加することができます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The base implementation adds services that &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt; provides, so after calling the base implementation you may replace existing services.</source>
          <target state="translated">基底の実装に追加されるサービスは、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;を提供するため、基底の実装を呼び出した後は、既存のサービスを置き換えることができます&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You must remove any custom services you add here by overriding &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A&gt;.</source>
          <target state="translated">ここで&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A&gt;。&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A&gt;をオーバーライドすることで追加するカスタム サービスを削除する必要があります。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has not been initialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が初期化されていません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は破棄されました。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Indicates whether the designer should be reloaded.</source>
          <target state="translated">デザイナーを再読み込みするかどうかを示します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The IsReloadNeeded method is used by some designer loaders to optimize reloading.</source>
          <target state="translated">IsReloadNeeded メソッドは、再読み込みを最適化するために一部のデザイナー ローダーによって使用されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This method can be overridden if your designer loader supports intelligent reloading.</source>
          <target state="translated">デザイナー ローダーは、インテリジェントな再読み込みをサポートしている場合、このメソッドをオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Some designer loaders can detect changes made to their underlying document and determine if a reload of the designer is actually necessary.</source>
          <target state="translated">一部のデザイナー ローダーでは、その基になるドキュメントに加えられた変更を検出でき、デザイナーの再読み込みが実際に必要なかどうかを判断することができます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If not, they should return <ph id="ph1">`false`</ph> from this method.</source>
          <target state="translated">返す必要がありますが、場合<ph id="ph1">`false`</ph>このメソッドからです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`true`</ph>, indicating that any call to &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A&gt; will succeed.</source>
          <target state="translated">既定の実装を常に返します<ph id="ph1">`true`</ph>、すべての呼び出しにことを示す&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A&gt;は成功します&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the designer should be reloaded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、デザイナーを再読み込みする必要があります。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定の実装を常に返します<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets the loader host.</source>
          <target state="translated">ローダーのホストを取得します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This method returns the loader host that was given to this designer loader.</source>
          <target state="translated">このメソッドは、このデザイナー ローダーに指定されたローダー ホストを返します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This can be <ph id="ph1">`null`</ph> if &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt; has not been called yet, or if this designer loader has been disposed.</source>
          <target state="translated">これは、<ph id="ph1">`null`</ph>場合&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;がまだ呼び出されていないか、このデザイナー ローダーが破棄されている場合&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that was passed to the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad*&gt; method.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>に渡された、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad*&gt;メソッド&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad*&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has not been initialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が初期化されていません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は破棄されました。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the designer loader is loading the design surface.</source>
          <target state="translated">デザイナー ローダーがデザイン サーフェイスを読み込んでいるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt; class provides the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;, which supports load dependencies.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;クラスを提供、 &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;、負荷の依存関係をサポートします&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This property takes load dependencies into account and will return <ph id="ph1">`true`</ph> if there are any outstanding load dependencies.</source>
          <target state="translated">このプロパティでは、戻り値のアカウントとは、読み込みの依存関係が受け取る<ph id="ph1">`true`</ph>保留状態の読み込みの依存関係がある場合。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the designer loader is currently loading the design surface; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>デザイナー ローダーは現在、デザイン サーフェイスを読み込んでいる場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the designer has been modified.</source>
          <target state="translated">取得またはデザイナーが変更されたかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Determines if the designer loader has detected that the designer has been modified.</source>
          <target state="translated">デザイナー ローダーが、デザイナーが変更されたことを検出したかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If this property is <ph id="ph1">`true`</ph> when the designer loader’s &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt; method is called, the designer loader will call the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A&gt; method.</source>
          <target state="translated">場合は、このプロパティは<ph id="ph1">`true`</ph>ときに、デザイナー ローダーの&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt;メソッドが呼び出されると、デザイナー ローダーが呼び出す、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A&gt;メソッド&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt;。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the designer has been modified; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>,</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>デザイナーが変更された場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Notifies the designer loader that loading is about to begin.</source>
          <target state="translated">読み込みが開始することをデザイナー ローダーに通知します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The OnBeginLoad method is invoked to start the loading process.</source>
          <target state="translated">OnBeginLoad メソッドは、読み込みプロセスを開始します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You should perform any necessary initialization for loading at this time.</source>
          <target state="translated">この時点で、読み込みに必要な初期化を行う必要があります。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This method should not be used to perform the actual load.</source>
          <target state="translated">このメソッドは、実際の読み込みを実行するは使用できません。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The default implementation disables change notifications and sets up the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt; for loading.</source>
          <target state="translated">既定の実装は、変更通知を無効にし、設定、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;読み込み&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If you implement &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt; to provide dependent load support, you should call OnBeginLoad when the first dependent load occurs.</source>
          <target state="translated">実装する場合&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;依存読み込みをサポートするには、最初の依存の読み込みが発生すると、OnBeginLoad を呼び出す必要があります&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt; method after the last call to the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt; method.</source>
          <target state="translated">呼び出す、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;メソッドを最後に呼び出した後、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt;メソッド&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>By default, &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt; implements &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt; and does this for you.</source>
          <target state="translated">既定では、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;実装&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;このと&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt; is not available when &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt; is called, &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt; will directly call OnBeginLoad.</source>
          <target state="translated">場合&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;場合は使用できません&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;が呼び出されると、 &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;OnBeginLoad を直接呼び出す&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If you provide your own loader service, or if you choose not to provide a loader service, you are responsible for calling this method.</source>
          <target state="translated">独自のローダー サービスを提供する場合、またはローダーのサービス提供にしない場合は、ユーザーは、このメソッドを呼び出す担当します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt; method will automatically call this, either indirectly by calling &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A&gt; if &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt; is available, or directly if it is not.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;メソッドで自動的に呼び出すこのいずれかの呼び出しによって直接は&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A&gt;場合&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;が利用可能なまたは直接されていない場合&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Notifies the designer loader that unloading is about to begin.</source>
          <target state="translated">デザイナー ローダーをアンロード通知を開始しようとします。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The OnBeginUnload method is invoked when the designer loader is about to unload the document.</source>
          <target state="translated">デザイナー ローダーは、ドキュメントをアンロードするときに、OnBeginUnload メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The document may be unloaded in preparation for reloading, or if the document failed to load.</source>
          <target state="translated">ドキュメントを準備するため、再読み込みするためにアンロードされる可能性がありますか、ドキュメントの読み込みに失敗しました。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If you added document-specific services in &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt; or &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;, remove them here.</source>
          <target state="translated">ドキュメントに固有のサービスを追加した場合は&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt;または&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;、ここでそれらを削除します&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Notifies the designer loader that loading is complete.</source>
          <target state="translated">読み込みが完了したことをデザイナー ローダーに通知します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The OnEndLoad method is invoked when loading is finished.</source>
          <target state="translated">読み込みが完了すると、OnEndLoad メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>It is always called, even if an exception is thrown during loading.</source>
          <target state="translated">常に呼び出されます、場合でも、読み込み中に例外がスローされます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`successful`</ph> will be set to <ph id="ph2">`true`</ph> if the load succeeded, or <ph id="ph3">`false`</ph> if a fatal error occurred.</source>
          <target state="translated">値<ph id="ph1">`successful`</ph>に設定されます<ph id="ph2">`true`</ph>、読み込みが成功した場合または<ph id="ph3">`false`</ph>致命的なエラーが発生した場合。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`errors`</ph> collection will contain objects that were reported as errors.</source>
          <target state="translated"><ph id="ph1">`errors`</ph>コレクションには、エラーとして報告されたオブジェクトにが含まれます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Usually, these objects are exceptions.</source>
          <target state="translated">通常、これらのオブジェクトは例外です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If you implement &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt; to provide dependent load support, you should call the OnEndLoad method after the last call to the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt; method.</source>
          <target state="translated">実装する場合&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;依存読み込みのサポートを提供するには、最後の呼び出し後 OnEndLoad メソッドを呼び出す必要があります、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt;メソッド&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>By default, &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt; implements &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt; and does this for you.</source>
          <target state="translated">既定では、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;実装&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;このと&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader&gt;。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt; is not available when &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt; is called, &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt; will directly call OnEndLoad after calling &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A&gt;.</source>
          <target state="translated">場合&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;場合は使用できません&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;が呼び出されると、 &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt; &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A&gt;を呼び出した後 OnEndLoad を直接呼び出す&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This method should be called by the designer loader service when all dependent loads have been completed.</source>
          <target state="translated">このメソッドは、依存するすべての読み込みが完了したときに、デザイナー ローダー サービスによって呼び出さ必要があります。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This stops the loading process that was initiated by the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt; method.</source>
          <target state="translated">これによって、読み込みプロセスによって開始された、停止、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;メソッド&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If you provide your own loader service, or if you choose not to provide a loader service, you are responsible for calling this method.</source>
          <target state="translated">独自のローダー サービスを提供する場合、またはローダーのサービス提供にしない場合は、ユーザーは、このメソッドを呼び出す担当します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt; method will automatically call this, either indirectly by calling the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt; method if &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt; is available, or directly if it is not.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;メソッドが自動的に呼び出さこれには、いずれかの呼び出しによって直接、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt;メソッド場合&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;が利用可能なまたは直接されていない場合&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the load completed successfully; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>負荷が正常に完了した場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; containing objects (usually exceptions) that were reported as errors.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;エラーとして報告されたオブジェクト (通常は例外) を含むします&lt;/xref:System.Collections.ICollection&gt;。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has not been initialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が初期化されていません。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は破棄されました。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Notifies the designer loader that the state of the document is about to be modified.</source>
          <target state="translated">ドキュメントの状態が変更されようとしてあるデザイナー ローダーに通知します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The OnModifying method is called in response to a component changing, adding, or removing event which indicates that the designer is about to be modified.</source>
          <target state="translated">変更しようとしていますが、デザイナーにあることを示すイベントを削除または追加すると、コンポーネントの変更に応答 OnModifying メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can implement source code control by overriding this method.</source>
          <target state="translated">ソース コード管理を実装するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A call to OnModifying does not mean that the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A&gt; property will later be set to <ph id="ph1">`true`</ph>; it merely indicates an intention to do so.</source>
          <target state="translated">OnModifying への呼び出しがあることを意味、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A&gt;プロパティに後で設定する<ph id="ph1">`true`</ph>;、単に示すに&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Flushes all changes to the designer.</source>
          <target state="translated">デザイナーには、すべての変更をフラッシュします。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The PerformFlush method is invoked when the designer loader needs to flush to persistence any changes made to the designers.</source>
          <target state="translated">デザイナー ローダーは、デザイナーに加えられた変更を永続化にフラッシュする必要がある場合、PerformFlush メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>It is invoked in response to a call to the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt; method.</source>
          <target state="translated">呼び出しに応答でメソッドが呼び出された、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt;メソッド&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt;。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for persisting the state of loaded designers.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>読み込むデザイナーの状態を永続化するのに使用します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Loads a designer from persistence.</source>
          <target state="translated">永続化ストアから、デザイナーを読み込みます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The PerformLoad method is invoked when the designer loader needs to load its state.</source>
          <target state="translated">デザイナー ローダーは、その状態を読み込む必要がある場合、PerformLoad メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>PerformLoad is called before the &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt; method.</source>
          <target state="translated">PerformLoad が前に呼び出されます、&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt;メソッド&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A&gt;。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>You must implement this method to load the designer contents.</source>
          <target state="translated">デザイナーの内容を読み込むには、このメソッドを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for loading state for the designers.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>デザイナーの状態を読み込みに使用します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets or sets the property provider for the serialization manager being used by the loader.</source>
          <target state="translated">取得またはローダーによって使用されているシリアル化マネージャーのプロパティのプロバイダーを設定します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The serialization manager provides a <ph id="ph1">`Properties`</ph> property on its primary interface that can be read by serializers to customize their serialization to specific needs.</source>
          <target state="translated">シリアル化マネージャーは、提供、<ph id="ph1">`Properties`</ph>特定のニーズに合わせて、シリアル化をカスタマイズするシリアライザーが読み取ることができるプライマリ インターフェイスのプロパティです。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The properties that are examined by the serializers vary depending on the type of serializer used.</source>
          <target state="translated">シリアライザーによって検査されるプロパティは、使用するシリアライザーの型によって異なります。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>An object whose properties are to be provided to the serialization manager.</source>
          <target state="translated">プロパティを持つプロパティがシリアル化マネージャーに提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has not been initialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が初期化されていません。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a reload has been queued.</source>
          <target state="translated">再読み込みがキューに登録されているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if a call to &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload*&gt; has queued a reload request; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>、への呼び出し&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload*&gt;再読み込み要求がキューに、それ以外の<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload*&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Reports errors that occurred while flushing changes.</source>
          <target state="translated">変更のフラッシュ中に発生したエラーを報告します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The ReportFlushErrors method is called during &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt; if one or more errors occurred while flushing changes.</source>
          <target state="translated">ReportFlushErrors メソッド中に&lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt;変更のフラッシュ中に&amp;1; つまたは複数のエラーが発生した場合&lt;/xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A&gt;。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The values in the <ph id="ph1">`errors`</ph> collection can be exceptions or objects with &lt;xref:System.Object.ToString%2A&gt; values that describe the error.</source>
          <target state="translated">内の値、<ph id="ph1">`errors`</ph>例外やオブジェクトをコレクションでできます&lt;xref:System.Object.ToString%2A&gt;エラーを記述する値&lt;/xref:System.Object.ToString%2A&gt;。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The default implementation of ReportFlushErrors raises the last exception in the collection.</source>
          <target state="translated">ReportFlushErrors の既定の実装では、コレクション内の最後の例外を発生させます。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; containing error objects, usually exceptions.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;エラー オブジェクト、通常は例外を含むします&lt;/xref:System.Collections.ICollection&gt;。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>One or more errors occurred while flushing changes.</source>
          <target state="translated">変更をフラッシュ中に&amp;1; つまたは複数のエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Sets the full class name of the base component.</source>
          <target state="translated">ベース コンポーネントの完全クラス名を設定します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The SetBaseComponentClassName method should be called during loading to establish the full name of the component a designer is designing.</source>
          <target state="translated">SetBaseComponentClassName メソッドは、デザイナーがデザイン コンポーネントの完全な名前を確立するために読み込み中に呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A string representing the full name of the component to be designed.</source>
          <target state="translated">設計するコンポーネントの完全な名前を表す文字列。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Registers an external component as part of the load process managed by <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">によって管理される、読み込みプロセスの一部として、外部コンポーネントを登録<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt; method once for each external object participating in the load process.</source>
          <target state="translated">呼び出す、&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;読み込みプロセスに参加している外部オブジェクトごとに&amp;1; 回のメソッド&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt; method is called when the work of the load process is done.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;読み込みプロセスの作業が終わったときに、メソッドが呼び出されます&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has not been initialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が初期化されていません。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Signals that a dependent load has finished.</source>
          <target state="translated">依存の読み込みが完了したことを通知します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The IDesignerLoaderService.DependentLoadComplete method is called to signal that a dependent loading operation has completed.</source>
          <target state="translated">IDesignerLoaderService.DependentLoadComplete メソッドは、依存読み込み操作が完了したことを通知に呼び出されます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt; method once for every process that was registered by calling the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt; method, which has already completed.</source>
          <target state="translated">呼び出す、&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;メソッドを呼び出すことによって登録されたすべてのプロセスに対して&amp;1; 回、&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;メソッドで、既に完了しています&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>If the dependent load succeeds, the caller sets the <ph id="ph1">`successful`</ph> parameter to <ph id="ph2">`true`</ph> and passes either an empty collection or <ph id="ph3">`null`</ph> to the <ph id="ph4">`errorCollection`</ph> parameter.</source>
          <target state="translated">かどうか、依存する読み込みが成功した、呼び出し元のセット、<ph id="ph1">`successful`</ph>パラメーターを<ph id="ph2">`true`</ph>か空のコレクションを渡すとまたは<ph id="ph3">`null`</ph>を<ph id="ph4">`errorCollection`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If the dependent load encounters errors, the caller sets the <ph id="ph1">`successful`</ph> parameter to <ph id="ph2">`false`</ph> and passes a collection of exceptions that indicate the reason or reasons for failure to the <ph id="ph3">`errorCollection`</ph> parameter.</source>
          <target state="translated">依存の読み込みには、エラーが発生すると、呼び出し元の設定、<ph id="ph1">`successful`</ph>にパラメーター<ph id="ph2">`false`</ph>理由などへのエラーの理由を示す例外のコレクションを渡すと、<ph id="ph3">`errorCollection`</ph>のパラメーターです。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to load successfully; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>正常に読み込むそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; containing errors that occurred during the load.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;読み込み中に発生したエラーを含むします&lt;/xref:System.Collections.ICollection&gt;。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>No load dependencies have been added by <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A<ph id="ph2">&amp;gt;</ph>, or the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has not been initialized.</source>
          <target state="translated">負荷の依存関係が追加されていない<ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A<ph id="ph2">&amp;gt;</ph>、または<bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が初期化されていません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は破棄されました。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Reloads the design document.</source>
          <target state="translated">デザイン ドキュメントを再読み込みします。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Any object can call the IDesignerLoaderService.Reload method to request that the loader reload the design document.</source>
          <target state="translated">任意のオブジェクトは、設計ドキュメント ローダーの再読み込みを要求できる IDesignerLoaderService.Reload メソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If the loader supports reloading and complies with the reload, the designer loader can return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">デザイナー ローダーを返すことができるかどうか、ローダー読み込みをサポートして、再読み込みに準拠している<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns <ph id="ph1">`false`</ph>, indicating that the reload will not occur.</source>
          <target state="translated">返しますそれ以外の場合、<ph id="ph1">`false`</ph>の再読み込みが実行されないことを示します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload the designer at once.</source>
          <target state="translated">呼び出し元が直ちに行われている再読み込みに依存できません。デザイナー ローダー、他の時間をスケジュールするか、すぐに、デザイナーを再読み込みを試みることができます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The caller can display a message to the user if the designer cannot be reloaded.</source>
          <target state="translated">呼び出し元は、デザイナーを再読み込みすることはできない場合、ユーザーにメッセージを表示できます。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the reload request is accepted; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the loader does not allow the reload.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>再読み込み要求が受け入れられた場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>ローダーは、再読み込みを許可していない場合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>