<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d63b16f80b92a1ff497dab13475e9e4459cd50f1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Controls.Primitives.ButtonBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9425498632b140836b70730da6fddaa9ce48b4b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">211281097dc73dd531adb448a6507a781f664273</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the base class for all <bpt id="p1">&lt;xref href="System.Windows.Controls.Button"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> controls.</source>
          <target state="translated">すべての基本クラスを表します<bpt id="p1">&lt;xref href="System.Windows.Controls.Button"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コントロール。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Handle the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event to respond when the user clicks a ButtonBase.</source>
          <target state="translated">処理、 &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;、ButtonBase をユーザーがクリックしたときに応答するイベントです&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The user can raise the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event by using an &lt;xref:System.Windows.Controls.AccessText&gt; or by pressing ENTER or the SPACEBAR when the control has focus.</source>
          <target state="translated">ユーザーを発生させることができます、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;イベントを使用して、&lt;xref:System.Windows.Controls.AccessText&gt;またはをコントロールにフォーカスがあるときに、ENTER キーまたは space キーを押してします&lt;/xref:System.Windows.Controls.AccessText&gt;&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When the user presses the SPACEBAR, the control sets &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; to <ph id="ph1">`true`</ph> and captures the mouse.</source>
          <target state="translated">ユーザーがコントロールのセット、space キーを押したとき&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;を<ph id="ph1">`true`</ph>し、マウスをキャプチャします&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>As a result, the control will raise mouse events such as &lt;xref:System.Windows.UIElement.MouseEnter&gt; and &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;.</source>
          <target state="translated">コントロールが&lt;xref:System.Windows.UIElement.MouseEnter&gt;や&lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;。&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;&lt;/xref:System.Windows.UIElement.MouseEnter&gt;などのマウス イベントを発生させるため、</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Note that using the &lt;xref:System.Windows.Controls.AccessText&gt; or ENTER does not change &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; or capture the mouse, but it does raise the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.</source>
          <target state="translated">使用して、 &lt;xref:System.Windows.Controls.AccessText&gt;ENTER が変わらないまたは&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;または、マウスをキャプチャが大きく、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;イベント&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;&lt;/xref:System.Windows.Controls.AccessText&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The ButtonBase sets the &lt;xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt; attached property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">ButtonBase セット、&lt;xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt;添付プロパティ<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The ButtonBase sets the &lt;xref:System.Windows.UIElement.IsInputMethodEnabled%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">ButtonBase セット、&lt;xref:System.Windows.UIElement.IsInputMethodEnabled%2A&gt;プロパティを<ph id="ph1">`false`</ph>&lt;/xref:System.Windows.UIElement.IsInputMethodEnabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A ButtonBase is a &lt;xref:System.Windows.Controls.ContentControl&gt;, which means that it can contain a single object of any type (such as a string, an image, or a panel).</source>
          <target state="translated">ButtonBase は、 &lt;xref:System.Windows.Controls.ContentControl&gt;、任意の型 (文字列、画像、パネルなど) の&amp;1; つのオブジェクトに含めることを意味します&lt;/xref:System.Windows.Controls.ContentControl&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;xref:System.Windows.Controls.ContentControl&gt; class.</source>
          <target state="translated">詳細については、&lt;xref:System.Windows.Controls.ContentControl&gt;クラス&lt;/xref:System.Windows.Controls.ContentControl&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Occurs when a <bpt id="p1">&lt;xref href="System.Windows.Controls.Button"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is clicked.</source>
          <target state="translated">発生したときに、 <bpt id="p1">&lt;xref href="System.Windows.Controls.Button"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>をクリックします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The user can raise the Click event by using an &lt;xref:System.Windows.Controls.AccessText&gt; or by pressing ENTER or the SPACEBAR when the control has focus.</source>
          <target state="translated">ユーザーは、クリック イベントを発生させるを使用して、&lt;xref:System.Windows.Controls.AccessText&gt;またはをコントロールにフォーカスがあるときに、ENTER キーまたは space キーを押してします&lt;/xref:System.Windows.Controls.AccessText&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When the user presses the SPACEBAR, the control sets &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; to <ph id="ph1">`true`</ph> and captures the mouse.</source>
          <target state="translated">ユーザーがコントロールのセット、space キーを押したとき&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;を<ph id="ph1">`true`</ph>し、マウスをキャプチャします&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>As a result, the control will raise mouse events such as &lt;xref:System.Windows.UIElement.MouseEnter&gt; and &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;.</source>
          <target state="translated">コントロールが&lt;xref:System.Windows.UIElement.MouseEnter&gt;や&lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;。&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;&lt;/xref:System.Windows.UIElement.MouseEnter&gt;などのマウス イベントを発生させるため、</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that using the &lt;xref:System.Windows.Controls.AccessText&gt; or ENTER does not change &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; or capture the mouse, but it does raise the Click event.</source>
          <target state="translated">使用して、 &lt;xref:System.Windows.Controls.AccessText&gt;ENTER が変わらないまたは&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;または、マウスをキャプチャするが、クリック イベントによって発生することです&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;&lt;/xref:System.Windows.Controls.AccessText&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt; marks the &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event as handled in the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt; method and raises the Click event.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;マーク、&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;イベントの処理済みとして、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt;メソッドし、クリック イベントを発生させます&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt;&lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;&lt;/xref:System.Windows.Controls.Primitives.ButtonBase&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Hence, the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt; event will never occur for a control that inherits from &lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;.</source>
          <target state="translated">そのため、 &lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt; &lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;.&lt;/xref:System.Windows.Controls.Primitives.ButtonBase&gt;から継承するコントロールのイベントが発生することはありません&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Instead, attach an event handler to the &lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt; event, or call &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; with <ph id="ph1">`handledEventsToo`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">代わりに、イベント ハンドラーをアタッチ、&lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt;イベント、または呼び出し&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;で<ph id="ph1">`handledEventsToo`</ph>'éý' <ph id="ph2">`true`</ph>&lt;/xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; &lt;/xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt; 。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="routedEventInfo_Click"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_Click"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent&gt;|  |ルーティング方法 |バブル |  |デリゲート |&lt;xref:System.Windows.RoutedEventHandler&gt;|&lt;/xref:System.Windows.RoutedEventHandler&gt;&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase.Click"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">識別、 <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase.Click"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ルーティングされたイベント。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This event corresponds to a left mouse button click.</source>
          <target state="translated">このイベントは、マウスの左ボタン クリックに対応します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets or sets when the <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase.Click"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">取得または設定するときに、 <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase.Click"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ClickMode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ClickMode"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty&gt;|  |メタデータ プロパティに設定<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase.Click"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">ときに、 <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase.Click"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.Controls.ClickMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="System.Windows.Controls.ClickMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*&gt; dependency property.</source>
          <target state="translated">識別、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*&gt;依存関係プロパティ&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the command to invoke when this button is pressed.</source>
          <target state="translated">取得または設定は、このボタンが押されたときに呼び出されるコマンド。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This property is used to associate a command with a particular button instance.</source>
          <target state="translated">このプロパティは、インスタンスに関連付けるコマンド、特定のボタンは使用されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, this property is most often set to be a static command value from one of the existing command libraries, such as &lt;xref:System.Windows.Input.ApplicationCommands&gt; or &lt;xref:System.Windows.Input.NavigationCommands&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>、&lt;xref:System.Windows.Input.ApplicationCommands&gt;または&lt;xref:System.Windows.Input.NavigationCommands&gt;.&lt;/xref:System.Windows.Input.NavigationCommands&gt;&lt;/xref:System.Windows.Input.ApplicationCommands&gt;などの既存コマンドのライブラリのいずれかの静的なコマンド値にするのにはこのプロパティが設定ほとんどの場合</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or &lt;xref:System.Windows.Input.ICommand&gt;.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>コマンド実行の概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>または&lt;xref:System.Windows.Input.ICommand&gt;&lt;/xref:System.Windows.Input.ICommand&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Command"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object Command="commandName"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_Command"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>commandName<ept id="p3">*</ept>    The command to invoke when this button is pressed.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Command"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<ph id="ph1">```   &lt;object Command="commandName"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_Command"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## XAML 値<bpt id="p3">*</bpt>commandName<ept id="p3">*</ept>このボタンが押されたときに呼び出されるコマンド。      </target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Command"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Command"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty&gt;|  |メタデータ プロパティに設定<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A command to invoke when this button is pressed.</source>
          <target state="translated">このボタンが押されたときに呼び出されるコマンド。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the parameter to pass to the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt; property.</source>
          <target state="translated">取得または設定に渡すパラメーター、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt;プロパティ&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Most existing commands from the command libraries do not use a command parameter.</source>
          <target state="translated">コマンドのライブラリから既存のほとんどのコマンドは、コマンド パラメーターを使用できません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string.</source>
          <target state="translated">コマンド パラメーターを使用して、コマンドは、これらのほとんどは、整数や文字列などの何らかのプリミティブ型の値がパラメーターを受け取ります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter.</source>
          <target state="translated">ただし、これはカスタム コマンドを作成することを想定するコマンド パラメーターとしてプリミティブ型です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For a custom command case like this, setting CommandParameter in code might require a new or existing object instance.</source>
          <target state="translated">次のようにカスタム コマンドの場合は、CommandParameter をコードで設定すると、新規または既存のオブジェクト インスタンスが必要です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Setting CommandParameter in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command.</source>
          <target state="translated">マークアップで CommandParameter を設定すると、プロパティ要素構文、プロパティ要素構文を入力オブジェクトの要素がそのコマンドが予期される型の新しい要素をする必要があります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with <bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> or <bpt id="p2">[</bpt>StaticResource Markup Extension<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">代わりに、マークアップで設定がマークアップ拡張機能によって、既存のオブジェクトへの参照を必要可能性があります (これらの参照が通常で行われます<bpt id="p1">[</bpt>マークアップ拡張機能のバインド<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>または<bpt id="p2">[</bpt>StaticResource マークアップ拡張機能<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_CommandParameter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;object CommandParameter="commandParameter" /&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_CommandParameter"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>commandParameter<ept id="p3">*</ept>    A value of the same type as the particular command specified in the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A&gt; property expects.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_CommandParameter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<ph id="ph1">```   &lt;object CommandParameter="commandParameter" /&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_CommandParameter"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## XAML 値<bpt id="p3">*</bpt>commandParameter<ept id="p3">*</ept>で指定された特定のコマンドと同じ型の値、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A&gt;プロパティが必要です&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A&gt;。      </target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you use an existing command library command, see that command library's documentation for <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> usage information, including which type of CommandParameter the command expects.</source>
          <target state="translated">既存のコマンド ライブラリ コマンドを使用する場合は、そのコマンドのライブラリのドキュメントを参照して<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>使用状況情報などのコマンドが必要です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you use a custom command, see Remarks.</source>
          <target state="translated">カスタム コマンドを使用する場合は、「解説」を参照してください。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_CommandParameter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_CommandParameter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty&gt;|  |メタデータ プロパティに設定<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Parameter to pass to the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt; property.</source>
          <target state="translated">渡すパラメーターを&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt;プロパティ&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter*&gt; dependency property.</source>
          <target state="translated">識別、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter*&gt;依存関係プロパティ&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter*&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Identifies the routed &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt; dependency property.</source>
          <target state="translated">ルーティングされた識別&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt;依存関係プロパティ&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Command*&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets the element on which to raise the specified command.</source>
          <target state="translated">取得または指定されたコマンドが実行される上にある要素を設定します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The CommandTarget property cannot be used to define a &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement&gt;。&lt;/xref:System.Windows.UIElement&gt;を定義する CommandTarget プロパティを使用することはできません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The CommandTarget property provides a reference to an element that is already defined somewhere in your application.</source>
          <target state="translated">CommandTarget プロパティでは、既に定義されている場所に、アプリケーションの要素への参照を提供します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Target"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id="ph1">```   &lt;ButtonBase CommandTarget="{Binding ElementName= elementName }"/&gt;   ```</ph>      <bpt id="p2">&lt;a name="xamlValues_CommandTarget"&gt;</bpt><ept id="p2">&lt;/a&gt;</ept>    ## XAML Values    <bpt id="p3">*</bpt>elementName<ept id="p3">*</ept>    The name of &lt;xref:System.Windows.IInputElement&gt; that receives the command.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Target"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<ph id="ph1">```   &lt;ButtonBase CommandTarget="{Binding ElementName= elementName }"/&gt;   ```</ph> <bpt id="p2">&lt;a name="xamlValues_CommandTarget"&gt;</bpt> <ept id="p2">&lt;/a&gt;</ept> ## XAML 値<bpt id="p3">*</bpt>elementName<ept id="p3">*</ept>の名前&lt;xref:System.Windows.IInputElement&gt;するコマンドを受信します&lt;/xref:System.Windows.IInputElement&gt;。      </target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_CommandTarget"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_CommandTarget"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty&gt;|  |メタデータ プロパティに設定<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Element on which to raise a command.</source>
          <target state="translated">コマンドが実行する対象の要素。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget*&gt; dependency property.</source>
          <target state="translated">識別、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget*&gt;依存関係プロパティ&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget*&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;xref:System.Windows.ContentElement.IsEnabled*&gt; property.</source>
          <target state="translated">値を取得、&lt;xref:System.Windows.ContentElement.IsEnabled*&gt;プロパティ&lt;/xref:System.Windows.ContentElement.IsEnabled*&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you choose to override this implementation, make certain that you call the base method.</source>
          <target state="translated">この実装をオーバーライドすることを確認する場合は、基本メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コントロールが有効である場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is currently activated.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在アクティブになっています。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>IsPressed is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button.</source>
          <target state="translated">IsPressed がマウスの左ボタンを示すボタンの状態の場合、space キーが押されたボタンの上またはします。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When IsPressed is <ph id="ph1">`true`</ph>, the control captures the mouse.</source>
          <target state="translated">IsPressed が場合<ph id="ph1">`true`</ph>コントロールがマウスをキャプチャします。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>As a result, the control will raise mouse events such as &lt;xref:System.Windows.UIElement.MouseEnter&gt; and &lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;.</source>
          <target state="translated">コントロールが&lt;xref:System.Windows.UIElement.MouseEnter&gt;や&lt;xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;。&lt;/xref:System.Windows.UIElement.IsMouseDirectlyOverChanged&gt;&lt;/xref:System.Windows.UIElement.MouseEnter&gt;などのマウス イベントを発生させるため、</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Note that using the &lt;xref:System.Windows.Controls.AccessText&gt; or ENTER does not change IsPressed or capture the mouse, but is does raise the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.</source>
          <target state="translated">使用して、 &lt;xref:System.Windows.Controls.AccessText&gt;ENTER は IsPressed を変更したり、マウスをキャプチャまたはが生成されますが、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;イベント&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;&lt;/xref:System.Windows.Controls.AccessText&gt;。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework version 3.0 Service Pack 1, IsPressed has a protected setter.</source>
          <target state="translated">.NET Framework バージョン 3.0 以降の Service Pack 1、IsPressed は保護されている set アクセス操作子を持ちます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To use this functionality, your application should target the .NET Framework version 3.5.</source>
          <target state="translated">この機能を使用するのには、アプリケーションが .NET Framework version 3.5 を対象する必要があります。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>バージョンおよび依存関係<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsPressed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsPressed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty&gt;|  |メタデータ プロパティに設定<ph id="ph1">`true`</ph>|None |&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is activated; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>それ以外のアクティブ化された<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*&gt; dependency property.</source>
          <target state="translated">識別、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*&gt;依存関係プロパティ&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*&gt;。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Responds when the &lt;xref:System.Windows.Controls.AccessText.AccessKey*&gt; for this control is called.</source>
          <target state="translated">応答するときに、&lt;xref:System.Windows.Controls.AccessText.AccessKey*&gt;のこのコントロールが呼び出されます&lt;/xref:System.Windows.Controls.AccessText.AccessKey*&gt;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A&gt; is <ph id="ph1">`true`</ph>, this method calls the base implementation, which gives this control focus.</source>
          <target state="translated">場合&lt;xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A&gt;は<ph id="ph1">`true`</ph>、このメソッドは基底の実装は、このコントロールにフォーカスが移動します&lt;/xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Otherwise, this method raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.</source>
          <target state="translated">それ以外の場合、このメソッドを発生させる、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;イベント&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The event data for the &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt; event.</source>
          <target state="translated">イベント データを&lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt;イベント&lt;/xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase.Click"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">発生させる、 <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase.Click"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ルーティングされたイベント。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The control raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event by calling &lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;.</source>
          <target state="translated">コントロールは、 &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; &lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;。&lt;/xref:System.Windows.UIElement.RaiseEvent%2A&gt;を呼び出すことでイベント&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;を発生させます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Routed Events Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>ルーティング イベントの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Called when the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*&gt; property changes.</source>
          <target state="translated">ときに呼び出されます、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*&gt;プロパティが変更された&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed*&gt;。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The data for <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">データを<bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when the user presses a key while this control has focus.</source>
          <target state="translated">クラス処理を提供、 <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このコントロールにフォーカスがあるときに、ユーザーが、キーを押したときに発生するイベントをルーティングします。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This implementation marks the &lt;xref:System.Windows.UIElement.KeyDown&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id="ph1">`true`</ph> when &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is not set to &lt;xref:System.Windows.Controls.ClickMode&gt; and one of the following cases are true:      -   The user presses the SPACEBAR.</source>
          <target state="translated">この実装を示します、&lt;xref:System.Windows.UIElement.KeyDown&gt;イベントを処理するには、&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;にイベント データのプロパティ<ph id="ph1">`true`</ph>とき&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;に設定されていない&lt;xref:System.Windows.Controls.ClickMode&gt;と次のいずれかが当てはまる:-space キーを押す&lt;/xref:System.Windows.Controls.ClickMode&gt;&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;&lt;/xref:System.Windows.UIElement.KeyDown&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-   The user presses ENTER and &lt;xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt; is <ph id="ph1">`true`</ph> for this control.</source>
          <target state="translated">-ユーザーが ENTER を押すと&lt;xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt;は<ph id="ph1">`true`</ph>このコントロール&lt;/xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A&gt;。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In all other cases, this implementation does not change the handled state (the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property) of the &lt;xref:System.Windows.UIElement.KeyDown&gt; event data.</source>
          <target state="translated">その他の場合は、この実装は変わりません処理済みの状態 (、&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;プロパティ) の&lt;xref:System.Windows.UIElement.KeyDown&gt;イベント データ&lt;/xref:System.Windows.UIElement.KeyDown&gt;&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The event data.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when the user releases a key while this control has focus.</source>
          <target state="translated">クラス処理を提供、 <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このコントロールにフォーカスがあるときにキーを離したときに発生するイベントをルーティングします。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This implementation marks the &lt;xref:System.Windows.UIElement.KeyUp&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id="ph1">`true`</ph> when the user releases the SPACEBAR.</source>
          <target state="translated">この実装を示します、&lt;xref:System.Windows.UIElement.KeyUp&gt;イベントを処理するには、&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;イベント データのプロパティ<ph id="ph1">`true`</ph>space キーを離したときにします&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;&lt;/xref:System.Windows.UIElement.KeyUp&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Otherwise, this implementation does not change the handled state (the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property) of the &lt;xref:System.Windows.UIElement.KeyUp&gt; event data.</source>
          <target state="translated">それ以外の場合、この実装には、処理済みの状態は変わりません (、&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;プロパティ) の&lt;xref:System.Windows.UIElement.KeyUp&gt;イベント データ&lt;/xref:System.Windows.UIElement.KeyUp&gt;&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">イベント データを<bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Called when an element loses keyboard focus.</source>
          <target state="translated">要素がキーボード フォーカスを失ったときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.IInputElement.LostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">イベント データを<bpt id="p1">&lt;xref href="System.Windows.IInputElement.LostKeyboardFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostMouseCapture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when this control is no longer receiving mouse event messages.</source>
          <target state="translated">クラスの処理を提供、 <bpt id="p1">&lt;xref href="System.Windows.UIElement.LostMouseCapture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このコントロールがマウスのイベント メッセージを受信して不要になったときに発生するイベントをルーティングします。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This implementation does not change the handled state (the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property) of the &lt;xref:System.Windows.UIElement.LostMouseCapture&gt; event data.</source>
          <target state="translated">この実装では、処理済みの状態は変更されません (、&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;プロパティ) の&lt;xref:System.Windows.UIElement.LostMouseCapture&gt;イベント データ&lt;/xref:System.Windows.UIElement.LostMouseCapture&gt;&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The event data for the &lt;xref:System.Windows.Input.Mouse.LostMouseCapture&gt; event.</source>
          <target state="translated">イベント データを&lt;xref:System.Windows.Input.Mouse.LostMouseCapture&gt;イベント&lt;/xref:System.Windows.Input.Mouse.LostMouseCapture&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Provides class handling for the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*&gt; routed event that occurs when the mouse enters this control.</source>
          <target state="translated">クラスの処理を提供、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*&gt;マウスがこのコントロールに入ったときに発生するルーティング イベント&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode*&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is set to &lt;xref:System.Windows.Controls.ClickMode&gt;, this implementation marks the &lt;xref:System.Windows.UIElement.MouseEnter&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id="ph1">`true`</ph> and raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.</source>
          <target state="translated">ときに&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;に設定されている&lt;xref:System.Windows.Controls.ClickMode&gt;、この実装を示します、&lt;xref:System.Windows.UIElement.MouseEnter&gt;イベントを処理するには、&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;にイベント データのプロパティ<ph id="ph1">`true`</ph>を発生させると、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;イベント&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;&lt;/xref:System.Windows.UIElement.MouseEnter&gt;&lt;/xref:System.Windows.Controls.ClickMode&gt;&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The event data for the &lt;xref:System.Windows.Input.Mouse.MouseEnter&gt; event.</source>
          <target state="translated">イベント データを&lt;xref:System.Windows.Input.Mouse.MouseEnter&gt;イベント&lt;/xref:System.Windows.Input.Mouse.MouseEnter&gt;。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeave"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when the mouse leaves an element.</source>
          <target state="translated">クラス処理を提供、 <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeave"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要素からマウスを移動するときに発生するイベントをルーティングします。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This implementation marks the &lt;xref:System.Windows.UIElement.MouseLeave&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id="ph1">`true`</ph> when &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is set to &lt;xref:System.Windows.Controls.ClickMode&gt;.</source>
          <target state="translated">この実装を示します、&lt;xref:System.Windows.UIElement.MouseLeave&gt;イベントを処理するには、&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;にイベント データのプロパティ<ph id="ph1">`true`</ph>とき&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;&lt;xref:System.Windows.Controls.ClickMode&gt;.&lt;/xref:System.Windows.Controls.ClickMode&gt;に設定されている&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;&lt;/xref:System.Windows.UIElement.MouseLeave&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The event data for the &lt;xref:System.Windows.Input.Mouse.MouseLeave&gt; event.</source>
          <target state="translated">イベント データを&lt;xref:System.Windows.Input.Mouse.MouseLeave&gt;イベント&lt;/xref:System.Windows.Input.Mouse.MouseLeave&gt;。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</source>
          <target state="translated">クラス処理を提供、 <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このコントロールの上にマウス ポインターがマウスの左ボタンが押されたときに発生するイベントをルーティングします。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This implementation marks the &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id="ph1">`true`</ph> when &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is not set to &lt;xref:System.Windows.Controls.ClickMode&gt;.</source>
          <target state="translated">この実装を示します、&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;イベントを処理するには、&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;イベント データのプロパティ<ph id="ph1">`true`</ph>とき&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;&lt;xref:System.Windows.Controls.ClickMode&gt;&lt;/xref:System.Windows.Controls.ClickMode&gt;が設定されていない&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;&lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt;。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>To respond to the &lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt; event, attach an event handler to the &lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt; event, or call &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; with <ph id="ph1">`handledEventsToo`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">応答する、&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;イベント、イベント ハンドラーをアタッチ、&lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt;イベント、または呼び出し&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;で<ph id="ph1">`handledEventsToo`</ph>'éý' <ph id="ph2">`true`</ph>&lt;/xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; &lt;/xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonDown&gt; 。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is set to &lt;xref:System.Windows.Controls.ClickMode&gt;, this method raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.</source>
          <target state="translated">ときに&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;に設定されている&lt;xref:System.Windows.Controls.ClickMode&gt;、このメソッドを発生させる、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;イベント&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;&lt;/xref:System.Windows.Controls.ClickMode&gt;&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The event data.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</source>
          <target state="translated">クラスの処理を提供、 <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ルーティング イベントにこのコントロールの上にマウス ポインターがマウスの左ボタンが離されると発生します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This implementation marks the &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id="ph1">`true`</ph> when &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is not set to &lt;xref:System.Windows.Controls.ClickMode&gt;.</source>
          <target state="translated">この実装を示します、&lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;イベントを処理するには、&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;にイベント データのプロパティ<ph id="ph1">`true`</ph>とき&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;&lt;xref:System.Windows.Controls.ClickMode&gt;.&lt;/xref:System.Windows.Controls.ClickMode&gt;に設定されていない&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;&lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>To respond to the &lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt; event, attach an event handler to the &lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp&gt; event, or call &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; with <ph id="ph1">`handledEventsToo`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">応答する、&lt;xref:System.Windows.UIElement.MouseLeftButtonUp&gt;イベント、イベント ハンドラーをアタッチ、&lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp&gt;イベント、または呼び出し&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;で<ph id="ph1">`handledEventsToo`</ph>'éý' <ph id="ph2">`true`</ph>&lt;/xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; &lt;/xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp&gt; &lt;/xref:System.Windows.UIElement.MouseLeftButtonUp&gt; 。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is set to &lt;xref:System.Windows.Controls.ClickMode&gt; is &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; is <ph id="ph1">`true`</ph>, this method raises the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.</source>
          <target state="translated">ときに&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;に設定されている&lt;xref:System.Windows.Controls.ClickMode&gt;は&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;は<ph id="ph1">`true`</ph>、このメソッドを発生させる、&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;イベント&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;&lt;/xref:System.Windows.Controls.ClickMode&gt;&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The event data.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Provides class handling for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseMove"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event that occurs when the mouse pointer moves while over this element.</source>
          <target state="translated">クラスの処理を提供、 <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseMove"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>この要素上でマウス ポインターを動かしたときに発生するイベントをルーティングします。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This implementation marks the &lt;xref:System.Windows.UIElement.MouseMove&gt; event as handled by setting the &lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt; property of the event data to <ph id="ph1">`true`</ph> when &lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt; is not set to &lt;xref:System.Windows.Controls.ClickMode&gt; and &lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt; is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">この実装を示します、&lt;xref:System.Windows.UIElement.MouseMove&gt;イベントを処理するには、&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;にイベント データのプロパティ<ph id="ph1">`true`</ph>とき&lt;xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;に設定されていない&lt;xref:System.Windows.Controls.ClickMode&gt;と&lt;xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;は<ph id="ph2">`true`</ph>&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A&gt;&lt;/xref:System.Windows.Controls.ClickMode&gt;&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A&gt;&lt;/xref:System.Windows.RoutedEventArgs.Handled%2A&gt;&lt;/xref:System.Windows.UIElement.MouseMove&gt;。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To respond to the &lt;xref:System.Windows.UIElement.MouseMove&gt; event, attach an event handler to the &lt;xref:System.Windows.ContentElement.PreviewMouseMove&gt; event, or call &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; with <ph id="ph1">`handledEventsToo`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">応答する、&lt;xref:System.Windows.UIElement.MouseMove&gt;イベント、イベント ハンドラーをアタッチ、&lt;xref:System.Windows.ContentElement.PreviewMouseMove&gt;イベント、または呼び出し&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;で<ph id="ph1">`handledEventsToo`</ph>'éý' <ph id="ph2">`true`</ph>&lt;/xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; &lt;/xref:System.Windows.ContentElement.PreviewMouseMove&gt; &lt;/xref:System.Windows.UIElement.MouseMove&gt; 。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The event data.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Called when the rendered size of a control changes.</source>
          <target state="translated">コントロールの描画のサイズが変更されたときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Overrides the OnRenderSizeChanged method of the &lt;xref:System.Windows.UIElement&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.UIElement&gt;。&lt;/xref:System.Windows.UIElement&gt; OnRenderSizeChanged メソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Specifies the size changes.</source>
          <target state="translated">サイズの変更を指定します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>