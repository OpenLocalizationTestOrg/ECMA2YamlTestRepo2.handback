<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">456404cc887844e1e8f71ec73aad24765cc3c94f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.SecurityTokenService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee8df1194e1beffc1c5752b26cbda42433e00c53</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8b3ed043909c4e884226058fcb219031c2a5321</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The abstract base class that defines the properties and methods of a security token service (STS).</source>
          <target state="translated">보안 토큰 서비스 (STS)의 메서드와 속성을 정의 하는 추상 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create an STS you must derive from the SecurityTokenService class.</source>
          <target state="translated">STS를 만들려면 SecurityTokenService 클래스에서 파생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In your custom class you must, at a minimum, override the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; and &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; methods.</source>
          <target state="translated">사용자 지정 클래스의, 여기에 최소한 재정의 해야는 &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;및 &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>With these overrides, the STS created using the default implementation of all the other methods defined in the class is capable of issuing security tokens in response to security token requests (RST).</source>
          <target state="translated">이러한 재정의 기본 구현의 클래스에 정의 된 다른 모든 메서드를 사용 하 여 만든 STS는 토큰 요청 (RST) 보안에 대 한 응답의 보안 토큰을 발급할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the Issue binding defined in the WS-Trust specification is implemented.</source>
          <target state="translated">즉, Ws-trust 사양에 정의 된 문제 바인딩 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This binding is implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">이 바인딩은에서 구현 되는 &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>None of the other WS-Trust bindings (Renew, Cancel, and Validate) are implemented in the default case and an appropriate fault is returned to the caller if an RST that corresponds to one of these bindings is encountered.</source>
          <target state="translated">기본적으로 구현 됩니다 (갱신, 취소 및 유효성 검사) 다른 WS-트러스트 바인딩이 및 이러한 바인딩 중 하나에 해당 하는 RST 발견 되 면 호출자에 게는 적절 한 오류가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can, of course, override the appropriate methods (&lt;xref:System.IdentityModel.SecurityTokenService.Renew%2A&gt;, &lt;xref:System.IdentityModel.SecurityTokenService.Cancel%2A&gt;, and &lt;xref:System.IdentityModel.SecurityTokenService.Validate%2A&gt;) to implement these bindings in your STS.</source>
          <target state="translated">물론, 적절 한 메서드를 재정의할 수 있습니다 (&lt;xref:System.IdentityModel.SecurityTokenService.Renew%2A&gt;, &lt;xref:System.IdentityModel.SecurityTokenService.Cancel%2A&gt;, 및 &lt;xref:System.IdentityModel.SecurityTokenService.Validate%2A&gt;) STS. 프로그램에서 이러한 바인딩을 구현 하&lt;/xref:System.IdentityModel.SecurityTokenService.Validate%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.Cancel%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.Renew%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Implementing a production-ready STS entails careful planning and considerable resources to mitigate the potential security risks inherent in exposing such a service.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 신중 하 게 계획 하 고 이러한 서비스를 노출에 내재 된 잠재적인 보안 위험을 완화 하기 위해 상당한 리소스 STS 수반 프로덕션 지원 구현 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most developers using Windows Identity Foundation (WIF) will be developing applications that outsource identity management to an STS, rather than developing an STS itself.</source>
          <target state="translated">Windows Identity Foundation (WIF)를 사용 하 여 대부분의 개발자는 id 관리는 STS 아웃소싱하는 응용 프로그램 개발 되지 않고 자체 STS를 개발 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>WIF provides a Visual Studio extension, the Identity and Access Tool for Visual Studio 2012, to help developers test solutions in the development environment.</source>
          <target state="translated">WIF는 개발자가 개발 환경에서 솔루션을 테스트할 수 있도록 Id 및 액세스 도구 Visual Studio 2012 용 Visual Studio 확장을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This tool includes an STS, <ph id="ph1">`LocalSTS`</ph>, that you can configure to serve specific claims to the application that you are developing.</source>
          <target state="translated">이 도구에는 STS <ph id="ph1">`LocalSTS`</ph>, 개발 중인 응용 프로그램에 대 한 특정 클레임을 제공 하도록 구성할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the Identity and Access tool, see <bpt id="p1">[</bpt>Identity and Access Tool for Visual Studio 2012<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Id 및 액세스 도구에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Id 및 액세스 도구 Visual Studio 2012 용<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some scenarios, <ph id="ph1">`LocalSTS`</ph> may not provide the functionality necessary to adequately test your application; for example, in a scenario that involves developing a custom token handler for use by an application.</source>
          <target state="translated">일부 시나리오에서는 <ph id="ph1">`LocalSTS`</ph> 적절 하 게 응용 프로그램을 테스트 하는 데 필요한 기능을 제공 하지 않을 수 있습니다; 예를 들어 관련 된 시나리오를 응용 프로그램에서 사용 하기 위해 사용자 지정 토큰 처리기를 개발 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these cases, you can derive from SecurityTokenService to create one or more simple STSs that can be deployed in your development environment and that can be used to test such features in your application.</source>
          <target state="translated">이러한 경우 개발 환경에서 배포할 수 있는 응용 프로그램에서 이러한 기능을 테스트 하는 데 사용 하 고 같은 하나 이상의 간단한 Sts를 만들려는 SecurityTokenService에서 파생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rest of this section focuses on the methods exposed by the SecurityTokenService class that enable you to implement a simple STS and extend the token issuance pipeline.</source>
          <target state="translated">이 섹션의 나머지 부분 SecurityTokenService 클래스에 의해 노출 하는 간단한 STS를 구현 하 고 토큰 발급 파이프라인 확장할 수 있도록 하는 방법에 중점을 둡니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following list provides a brief overview of the methods of primary importance to the developer for use in a test or development environment.</source>
          <target state="translated">다음 목록에는 테스트 또는 개발 환경에서 사용 하기 위해 개발자에 게 기본 중요도의 메서드에 대 한 간략 한 개요를 제공합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; method.</source>
          <target state="translated">- &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns a &lt;xref:System.IdentityModel.Scope&gt; object that contains information about the RP.</source>
          <target state="translated">이 메서드는 반환 된 &lt;xref:System.IdentityModel.Scope&gt;RP에 대 한 정보를 포함 하는 개체입니다.&lt;/xref:System.IdentityModel.Scope&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This object is used in the rest of the token issuance pipeline and includes information about the signing and encrypting credentials to use in the response, as well as the <ph id="ph1">`AppliesTo`</ph> and <ph id="ph2">`ReplyTo`</ph> (if required) addresses.</source>
          <target state="translated">이 개체 토큰 발급 파이프라인의 나머지 부분에 사용 되 고 응답에 사용 하는 서명 및 자격 증명을 암호화 하는 방법에 대 한 정보를 제공으로 <ph id="ph1">`AppliesTo`</ph> 및 <ph id="ph2">`ReplyTo`</ph> (필요한 경우) 주소입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must override this method.</source>
          <target state="translated">이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; method.</source>
          <target state="translated">- &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns an &lt;xref:System.Security.Claims.ClaimsIdentity&gt; object that contains the claims to return to the RP.</source>
          <target state="translated">이 메서드는 반환 된 &lt;xref:System.Security.Claims.ClaimsIdentity&gt;RP로 반환 하는 클레임을 포함 하는 개체입니다.&lt;/xref:System.Security.Claims.ClaimsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must override this method.</source>
          <target state="translated">이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">- &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method implements the token request pipeline, which processes an incoming security token request (RST) and returns a response (RSTR) to the caller that contains a token that can be used to authenticate with an RP.</source>
          <target state="translated">이 메서드는 들어오는 보안 토큰 요청 (RST)를 처리 하 고 인증 RP 하는 데 사용할 수 있는 토큰을 포함 하 고 호출자에 게 응답 (RSTR)를 반환 하는 토큰 요청 파이프라인을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of the other methods defined in the SecurityTokenService class are called from this method, including the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; and &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; methods.</source>
          <target state="translated">이 메서드에서 호출는 다양 한 SecurityTokenService 클래스에 정의 된 다른 방법을 포함 하는 &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;및 &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to override this method, but an understanding of the token request pipeline it implements may be helpful.</source>
          <target state="translated">이 메서드를 재정의할 필요는 없지만 구현 하는 토큰 요청 파이프라인의 이해에 도움이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>An STS is configured through the &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&gt; class.</source>
          <target state="translated">STS는 &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&gt;클래스&lt;/xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&gt; 를 통해 구성</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Called from derived classes to initialize the <bpt id="p1">&lt;xref href="System.IdentityModel.SecurityTokenService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified configuration settings.</source>
          <target state="translated">초기화 하는 파생된 클래스에서 호출 된 <bpt id="p1">&lt;xref href="System.IdentityModel.SecurityTokenService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정된 된 구성 설정을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to initialize scope provider and token issuer certificate.</source>
          <target state="translated">이 생성자를 사용 하 여 범위 공급자 및 토큰 발급자 인증서를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the settings for the STS.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> STS에 대 한 설정을 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;securityTokenServiceConfiguration&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;securityTokenServiceConfiguration&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous WS-Trust Cancel request.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 비동기 취소 WS-트러스트 요청을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 요청자의 id를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">여기에 요청 메시지 뿐만 아니라 다른 클라이언트 관련 권한 부여 컨텍스트와 같은 정보입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous cancel operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;비동기 취소 작업의 완료에 대 한 알림을 수신 하는 대리자입니다.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous cancel operation.</source>
          <target state="translated">비동기 취소 작업과 연결 된 상태 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous cancel operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;비동기 취소 작업을 참조 하는.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous call to the &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*&gt; method.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 비동기 호출이 시작 된 &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현에 &lt;xref:System.NotImplementedException&gt;.&lt;/xref:System.NotImplementedException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 요청자의 id를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">여기에 요청 메시지 뿐만 아니라 다른 클라이언트 관련 권한 부여 컨텍스트와 같은 정보입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains information about the relying party associated with the request.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요청과 관련 된 신뢰 당사자에 대 한 정보가 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;비동기 작업의 완료에 대 한 알림을 수신 하는 대리자입니다.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous operation.</source>
          <target state="translated">비동기 작업과 연결 된 상태 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;비동기 작업을 참조 하는.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous call for the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope*&gt; method.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 시작에 대 한 비동기 호출의 &lt;xref:System.IdentityModel.SecurityTokenService.GetScope*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.GetScope*&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현에 &lt;xref:System.NotImplementedException&gt;.&lt;/xref:System.NotImplementedException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 요청자의 id를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">여기에 요청 메시지 뿐만 아니라 다른 클라이언트 관련 권한 부여 컨텍스트와 같은 정보입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;비동기 작업의 완료에 대 한 알림을 수신 하는 대리자입니다.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous operation.</source>
          <target state="translated">비동기 작업과 연결 된 상태 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous cancel operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;비동기 취소 작업을 참조 하는.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous WS-Trust Issue request.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 비동기 WS-트러스트 문제 요청을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 요청자의 id를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">여기에 요청 메시지 뿐만 아니라 다른 클라이언트 관련 권한 부여 컨텍스트와 같은 정보입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous issue operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;문제 비동기 작업의 완료에 대 한 알림을 수신 하는 대리자입니다.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous issue operation.</source>
          <target state="translated">비동기 문제 작업과 연결 된 상태 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous issue operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;문제 비동기 작업을 참조 하는.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous WS-Trust Renew request.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 비동기 Ws-trust 갱신 요청을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 요청자의 id를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">여기에 요청 메시지 뿐만 아니라 다른 클라이언트 관련 권한 부여 컨텍스트와 같은 정보입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous renew operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;갱신 작업의 비동기 완료에 대 한 알림을 수신 하는 대리자입니다.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous renew operation.</source>
          <target state="translated">연결 된 비동기 상태 정보를 포함 하는 개체는 작업을 갱신 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous renew operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;비동기 참조 갱신 작업.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous WS-Trust Validate request.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 비동기 Ws-trust 유효성 검사 요청을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 요청자의 id를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">여기에 요청 메시지 뿐만 아니라 다른 클라이언트 관련 권한 부여 컨텍스트와 같은 정보입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous validate operation.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;유효성 검사 작업의 비동기 완료에 대 한 알림을 수신 하는 대리자입니다.&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An object that contains state information associated with the asynchronous validate operation.</source>
          <target state="translated">연결 된 비동기 상태 정보를 포함 하는 개체는 작업의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous validate operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;참조 비동기 작업의 유효성을 검사 합니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, processes a WS-Trust Cancel request.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 WS-트러스트 취소 요청을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 요청자의 id를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">여기에 요청 메시지 뿐만 아니라 다른 클라이언트 관련 권한 부여 컨텍스트와 같은 정보입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출자에 게 반환할 RSTR을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Creates an instance of a &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;.</source>
          <target state="translated">에 &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;.&lt;/xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt; 의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoked during token issuance after &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;.&lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; 후 토큰 발급 하는 동안 호출</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The incoming token request.</source>
          <target state="translated">들어오는 토큰 요청 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.Scope<bpt id="p1">*</bpt>&gt; object returned from &lt;xref:System.IdentityModel.SecurityTokenService.GetScope<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;에서 반환 된 개체 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;.&lt;/xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;scope&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;scope&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous WS-Trust Cancel request.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 비동기 WS-트러스트 취소 요청을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginCancel*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;에 대 한 호출에서 반환 하는 &lt;xref:System.IdentityModel.SecurityTokenService.BeginCancel*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.BeginCancel*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출자에 게 반환할 RSTR을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt; method.</source>
          <target state="translated">비동기 호출을 완료 하는 파생된 클래스에서 재정의 되 면는 &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현에 &lt;xref:System.NotImplementedException&gt;.&lt;/xref:System.NotImplementedException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;에 대 한 호출에서 반환 하는 &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the collection of claims that will be placed in the issued security token.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 발급 된 보안 토큰에 배치 하는 클레임의 컬렉션을 포함 하는 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt; method.</source>
          <target state="translated">비동기 호출을 완료 하는 파생된 클래스에서 재정의 되 면는 &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws a &lt;xref:System.NotImplementedException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현에 &lt;xref:System.NotImplementedException&gt;.&lt;/xref:System.NotImplementedException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;에 대 한 호출에서 반환 하는 &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that encapsulates the relying party (RP) information associated with the request (RST) specified in the call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt; method.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (RST)에 대 한 호출에 지정 된 요청과 관련 된 신뢰 당사자 (RP) 정보를 캡슐화 하는 &lt;xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.BeginGetScope*&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous WS-Trust Issue request.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 비동기 WS-트러스트 발행 요청을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginIssue*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;에 대 한 호출에서 반환 하는 &lt;xref:System.IdentityModel.SecurityTokenService.BeginIssue*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.BeginIssue*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출자에 게 반환할 RSTR을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous WS-Trust Renew request.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 비동기 Ws-trust 갱신 요청을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginRenew*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;에 대 한 호출에서 반환 하는 &lt;xref:System.IdentityModel.SecurityTokenService.BeginRenew*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.BeginRenew*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출자에 게 반환할 RSTR을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, completes the asynchronous WS-Trust Validate request.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 비동기 Ws-trust 유효성 검사 요청을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.SecurityTokenService.BeginValidate*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;에 대 한 호출에서 반환 하는 &lt;xref:System.IdentityModel.SecurityTokenService.BeginValidate*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.BeginValidate*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출자에 게 반환할 RSTR을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets the name of the security token service (STS).</source>
          <target state="translated">보안 토큰 서비스 (STS)의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">이 메서드는 기본에서 토큰 발급 파이프라인 구현에서 호출 됩니다는 &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns the &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A&gt; property from configuration accessed through the &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt; property.</source>
          <target state="translated">기본 구현은 반환 하는 &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A&gt;를 통해 액세스 하는 구성에서 속성의 &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt;속성.&lt;/xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt; &lt;/xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The issuer name.</source>
          <target state="translated">발급자 이름입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, this method returns a collection of output subjects to be included in the issued token.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면이 메서드는 발급 된 토큰에 포함 될 출력 주제의 컬렉션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetOutputClaimsIdentity method is called from the token issuance pipeline, which is implemented by the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">구현 하는 토큰 발급 파이프라인에서 GetOutputClaimsIdentity 메서드가 호출 되는 &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>It returns an &lt;xref:System.Security.Claims.ClaimsIdentity&gt; that contains the claims to include in the issued security token based on the requestor of the token (the <ph id="ph1">`principal`</ph> parameter), the incoming RST (the <ph id="ph2">`request`</ph> parameter), and the relying party for which the token is intended (the <ph id="ph3">`scope`</ph> parameter).</source>
          <target state="translated">반환는 &lt;xref:System.Security.Claims.ClaimsIdentity&gt;토큰에서 요청자를 기반으로 발급 된 보안 토큰에 포함 시킬 클레임을 포함 하는 (의 <ph id="ph1">`principal`</ph> 매개 변수), 들어오는 RST (는 <ph id="ph2">`request`</ph> 매개 변수), 토큰을 사용 하는 것에 대 한 파티에서 신뢰 하 고 (는 <ph id="ph3">`scope`</ph> 매개 변수).&lt;/xref:System.Security.Claims.ClaimsIdentity&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The logic in this method is primarily concerned with answering the following questions:      -   <bpt id="p1">**</bpt>Which claim types should be included in the response based on the RP for which it is intended?<ept id="p1">**</ept></source>
          <target state="translated">이 메서드의 논리는 다음 질문에 대답 주로:- <bpt id="p1">**</bpt>있는 클레임 유형 기반 의도 한 RP로 응답에 포함 되어야 합니다.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically this is decided on a per-RP basis from lists of claim types required for each RP or on a per-request basis by examining the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A&gt; property of the request.</source>
          <target state="translated">일반적으로이 결정 요청 별로 컴퓨터나 RP 당 별로 각 RP에 대 한 필요한 클레임 형식의 목록에서 검사 하 여는 &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A&gt;은 요청의.&lt;/xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the logic and details for determining the claims to include in the response is completely up to your implementation.</source>
          <target state="translated">그러나 논리 및 응답에 포함할 클레임을 결정 하기 위한 정보 전적으로 결정 구현 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   <bpt id="p1">**</bpt>Which claim values should be assigned to the claims in the response?<ept id="p1">**</ept></source>
          <target state="translated">- <bpt id="p1">**</bpt>는 클레임 값을 클레임으로 응답에 할당 해야?<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an Identity Provider (IP-STS) this typically means using one or more claims in the requestor’s &lt;xref:System.Security.Claims.ClaimsPrincipal&gt; (provided by the <ph id="ph1">`principal`</ph> parameter) to access a store (or other entity) to return values for the required claim types.</source>
          <target state="translated">Id 공급자 (IP STS)에 대해 일반적으로 즉, 하나 이상의 클레임을 사용 하 여 요청자의에서 &lt;xref:System.Security.Claims.ClaimsPrincipal&gt;(에서 제공 되는 <ph id="ph1">`principal`</ph> 매개 변수)는 필수 클레임 형식 값을 반환 하는 저장소 (또는 다른 엔터티)에 액세스할 수.&lt;/xref:System.Security.Claims.ClaimsPrincipal&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a Federation Provider (R-STS) this typically means performing some kind of processing on the requestor’s incoming claims to fulfill the request; perhaps performing filtering or transformation on some claims presented by the requestor, while passing others through unmodified.</source>
          <target state="translated">페더레이션 공급자 (R STS)에 대 한 일반적으로 즉; 요청을 충족 하는 요청자의 들어오는 클레임에서 몇 가지 종류의 처리가 수행 아마도 수정 되지 않은 다른 사용자가 통해 전달 하는 동안는 요청자에 의해 일부 클레임에서 필터링 또는 변환을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Of course, as in the case of deciding which claims to include in the response, the details and logic of how to determine the values of these claims is up to your implementation.</source>
          <target state="translated">물론, 클레임 응답에 포함을 결정 하는 경우 처럼 세부 정보 및 이러한 클레임의 값을 결정 하는 방법의 논리는 구현까지 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 요청자의 id를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">여기에 요청 메시지 뿐만 아니라 다른 클라이언트 관련 권한 부여 컨텍스트와 같은 정보입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains information about the relying party associated with the request.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요청과 관련 된 신뢰 당사자에 대 한 정보가 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This is the <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that was returned by the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope*&gt; method.</source>
          <target state="translated">이는 <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 반환 된 개체는 &lt;xref:System.IdentityModel.SecurityTokenService.GetScope*&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.GetScope*&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the collection of claims that will be placed in the issued security token.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsIdentity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 발급 된 보안 토큰에 배치 하는 클레임의 컬렉션을 포함 하는 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets the proof token to be included in the response (RSTR).</source>
          <target state="translated">응답 (RSTR)에 포함 되도록 증명 토큰을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">이 메서드는 기본에서 토큰 발급 파이프라인 구현에서 호출 됩니다는 &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a proof descriptor or throws an appropriate exception.</source>
          <target state="translated">기본 구현은 증명 설명자를 반환 하거나 해당 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the incoming token request (RST).</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 들어오는 토큰 요청 (RST)를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance that encapsulates information about the relying party.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 신뢰 당사자에 대 한 정보를 캡슐화 하는 인스턴스.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.ProofDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the newly created proof descriptor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.ProofDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 새로 만든된 증명 설명자를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the bearer token case.</source>
          <target state="translated">증명 설명자 비대칭 증명 설명자 대칭 증명 설명자가 될 수 있습니다 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 전달자 토큰의 경우에서.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;scope&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;scope&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets the requestor's proof encrypting credentials.</source>
          <target state="translated">자격 증명을 암호화 하는 요청자의 증명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called from the &lt;xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt; method.</source>
          <target state="translated">이 메서드는 &lt;xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation does the following.</source>
          <target state="translated">기본 구현에서는 다음 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns <ph id="ph1">`null`</ph> if there is no encryption token specified in the request (the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName&gt; property is <ph id="ph2">`null`</ph>).</source>
          <target state="translated">반환 <ph id="ph1">`null`</ph> 요청에 지정 된 암호화 토큰이 없는 경우 (의 &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName&gt;속성은 <ph id="ph2">`null`</ph>).&lt;/xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, if it can get the token as an &lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;, it returns credentials based on that token.</source>
          <target state="translated">그렇지 않은 경우 토큰을 가져올 수는 &lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;, 해당 토큰을 기반으로 자격 증명을 반환 합니다.&lt;/xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it cannot resolve the token as an &lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;, a &lt;xref:System.IdentityModel.RequestFailedException&gt; is thrown.</source>
          <target state="translated">토큰으로 확인할 수 없는 경우는 &lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;, &lt;xref:System.IdentityModel.RequestFailedException&gt;throw 됩니다.&lt;/xref:System.IdentityModel.RequestFailedException&gt; &lt;/xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the incoming token request (RST).</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 들어오는 토큰 요청 (RST)를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.EncryptingCredentials"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the requestor’s encrypting credentials.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.EncryptingCredentials"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요청자를 나타내는 개체의 자격 증명을 암호화 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Creates the response (RSTR) that contains the issued token by using the specified request (RST) and security token descriptor.</source>
          <target state="translated">지정 된 요청 (RST) 및 보안 토큰 설명자를 사용 하 여 발급 된 토큰을 포함 하는 응답 (RSTR)을 만듭니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetResponse method is called as the last step from the token issuance pipeline, which is implemented by the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">구현 하는 토큰 발급 파이프라인에서 마지막 단계로 GetResponse 메서드가 호출 되는 &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>It creates and returns the response (RSTR) by using the original incoming request (RST) and the token descriptor that was built up during previous steps in the token issuance pipeline.</source>
          <target state="translated">만들고 원래 들어오는 요청 (RST) 및 기본 제공 되었던 토큰 발급 파이프라인의 단계를 수행 하는 동안 토큰 설명자를 사용 하 여 (RSTR) 응답을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation creates the RSTR by passing the RST specified in the request parameter to the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName&gt; constructor, invoking the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName&gt; method on the token descriptor passed into GetResponse to apply its properties to the newly created RSTR, setting the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A&gt; property on the RSTR by using the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A&gt; property on the token descriptor, and finally setting the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A&gt; property on the RSTR according to the following table:      |<ph id="ph1">`RST.ReplyTo`</ph> property|&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt; property.|<ph id="ph2">`RSTR.ReplyTo`</ph> property|   |----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|   |Set|Not Set|Not Set|   |Set|Set|&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt;|   |Not Set|Set|Not Set|   |Not Set|Not Set|Not Set|</source>
          <target state="translated">기본 구현은 토큰 설명자에 &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A&gt;속성을 사용 하 고 마지막으로 다음 표에 설명 된 내용과 RSTR에 &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A&gt;속성을 설정 하 여 RSTR에 &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A&gt;속성을 설정 하는 새로 만든된 RSTR에 해당 속성을 적용할 GetResponse로 전달 된 토큰 설명자에 &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName&gt;메서드를 호출 하는 요청 매개 변수를 &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName&gt;생성자에 지정 된 RST를 전달 하 여 RSTR을 만듭니다. :      | <ph id="ph1">`RST.ReplyTo`</ph> 속성 | &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt;속성입니다. | <ph id="ph2">`RSTR.ReplyTo`</ph> 속성 |   |----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|   | 설정 | 설정 되지 | 설정 되지 |   | 설정 | 설정 | &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt;|   | 설정 되지 | 설정 | 설정 되지 |   | 설정 되지 | 설정 되지 | Not Set|&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt;&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName&gt;&lt;/xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName&gt;&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName&gt;&lt;/xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A&gt;&lt;/xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A&gt;&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The RST that contains the token request.</source>
          <target state="translated">토큰 요청을 포함 하는 RST 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The token descriptor that contains the information to use for the issued token.</source>
          <target state="translated">발급된 된 토큰에 사용할 정보를 포함 하는 토큰 설명자입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The response (RSTR) or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a response cannot be created from the specified request and token descriptor.</source>
          <target state="translated">응답 (RSTR) 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 설명자 고 지정 된 요청에서 응답을 만들 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The default implementation returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">tokenDescriptor</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본 구현은 반환 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 경우는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">tokenDescriptor</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수는 <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains information about the relying party (RP) associated with the specified request (RST).</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 요청 (RST)와 연결 된 신뢰 당사자 (RP)에 대 한 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>You must override this method in your implementation of the <bpt id="p1">&lt;xref href="System.IdentityModel.SecurityTokenService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">구현에서이 메서드를 재정의 해야 합니다는 <bpt id="p1">&lt;xref href="System.IdentityModel.SecurityTokenService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetScope method is called from the token issuance pipeline after the &lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt; method and should return a &lt;xref:System.IdentityModel.Scope&gt; object configured for the incoming request.</source>
          <target state="translated">GetScope 메서드 후 토큰 발급 파이프라인에서 호출 되는 &lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt;메서드 반환 해야 하 고는 &lt;xref:System.IdentityModel.Scope&gt;들어오는 요청에 대해 구성 된 개체입니다.&lt;/xref:System.IdentityModel.Scope&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>(The token issuance pipeline is implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.) The &lt;xref:System.IdentityModel.Scope&gt; object encapsulates information about the RP associated with the security token request (RST).</source>
          <target state="translated">(토큰 발급 파이프라인에서 구현 되는 &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;메서드.)&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; &lt;xref:System.IdentityModel.Scope&gt;개체에 연결 된 보안 토큰 요청 (RST) RP에 대 한 정보를 캡슐화 합니다.&lt;/xref:System.IdentityModel.Scope&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes information about the encrypting and signing credentials to be used with the RP and whether or not to encrypt any issued tokens and/or symmetric keys in the response.</source>
          <target state="translated">RP 모든 발급 된 토큰 및/또는 응답에 대칭 키 암호화를 제거할지 여부와 사용할 암호화 및 서명 자격 증명에 대 한 정보가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some typical tasks performed in the GetScope method are:      -   Determine whether the RP for which the token is intended is a recognized RP.</source>
          <target state="translated">GetScope 메서드에서 수행 하는 몇 가지 일반적인 작업은:-토큰을 사용 하는 RP 인식된 RP 인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>How this is accomplished depends on your implementation.</source>
          <target state="translated">구현에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the intended RP is not a valid RP for this STS, then the method should throw an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">의도 한 RP이이 STS에 대 한 유효한 RP 없으면 다음 메서드가 throw 해야 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Determine the signing credentials to be used in the response (RSTR) and set the &lt;xref:System.IdentityModel.Scope.SigningCredentials%2A&gt; property accordingly.</source>
          <target state="translated">-응답 (RSTR)에 사용 되 고 설정 하는 서명 자격 증명 결정는 &lt;xref:System.IdentityModel.Scope.SigningCredentials%2A&gt;속성 적절 하 게.&lt;/xref:System.IdentityModel.Scope.SigningCredentials%2A&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Determine whether the response and/or any included symmetrical keys should be encrypted and the credentials to be used for encryption.</source>
          <target state="translated">-포함 된 모든 대칭 키 및/또는 응답을 암호화 해야 하는지 여부 및 암호화에 사용할 자격 증명을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;, &lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;, and &lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt; properties accordingly.</source>
          <target state="translated">설정의 &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;, &lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;, 및 &lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt;속성 적절 하 게.&lt;/xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt; &lt;/xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt; &lt;/xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph>     &gt;  By default, the &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt; and &lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt; properties are set <ph id="ph2">`true`</ph> to prevent the STS from issuing tokens that are not secure.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 기본적으로는 &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;및 &lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;속성이 설정 되어 <ph id="ph2">`true`</ph> STS가 보안 되지 않은 토큰을 발급 하지 못하도록 합니다.&lt;/xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt; &lt;/xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that these properties never be set to <ph id="ph1">`false`</ph> in a production environment.</source>
          <target state="translated">이러한 속성을 설정 하지 않는 것이 좋습니다. <ph id="ph1">`false`</ph> 프로덕션 환경에서 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Determine the address to which the response should be returned.</source>
          <target state="translated">-응답 반환 될 주소를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set either the &lt;xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt; or &lt;xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt; property accordingly.</source>
          <target state="translated">설정 된 &lt;xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt;또는 &lt;xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt;속성 적절 하 게.&lt;/xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt; &lt;/xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the client making the request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요청을 하는 클라이언트를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the incoming request (RST).</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (RST) 들어오는 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that encapsulates the RP information associated with the request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요청과 관련 된 RP 정보를 캡슐화 하는 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Gets the appropriate security token handler for issuing a security token of the specified type.</source>
          <target state="translated">지정 된 형식의 보안 토큰을 발급 하는 데 적절 한 보안 토큰 처리기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the default implementation if <ph id="ph1">`requestedTokenType`</ph> is <ph id="ph2">`null`</ph> or an empty string, the default token type from configuration is used.</source>
          <target state="translated">기본 구현에서 경우 <ph id="ph1">`requestedTokenType`</ph> 은 <ph id="ph2">`null`</ph> 또는 빈 문자열인 경우 기본 토큰 유형이 구성에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is specified by the &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A&gt; property of the STS configuration object accessed through the &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt; property.</source>
          <target state="translated">이것은 &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A&gt;를 통해 액세스 하는 STS 구성 개체의 속성은 &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt;속성.&lt;/xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A&gt; &lt;/xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">이 메서드는 기본에서 토큰 발급 파이프라인 구현에서 호출 됩니다는 &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A string that contains the requested token type URI.</source>
          <target state="translated">요청 된 토큰 형식 URI를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the token handler to be used for creating the issued security token.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 발급 된 보안 토큰을 만드는 데 사용할 토큰 처리기를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the requested token type is not supported (there is no handler configured for the specified token type).</source>
          <target state="translated">반환 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요청 된 토큰 유형이 지원 되지 않는 경우 (지정된 된 토큰 형식에 대해 구성 된 처리기가 없는).</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Gets the lifetime for the issued token.</source>
          <target state="translated">발급 된 토큰에 대 한 수명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is normally called with the lifetime that arrived in the RST.</source>
          <target state="translated">이 메서드는 일반적으로 RST에 도착 하는 수명 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the default implementation, the token lifetime is calculated according to the following table.</source>
          <target state="translated">기본 구현에서 토큰 수명 다음 표에 따라 계산 됩니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Created (in)|Expires (in)|Created (in)|Expires (out)|   |--------------------|--------------------|--------------------|---------------------|   |<ph id="ph1">`null`</ph><ph id="ph2">|</ph><ph id="ph3">`null`</ph>|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt; + &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt;|   |C|<ph id="ph4">`null`</ph>|C|C + &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt;|   |<ph id="ph5">`null`</ph>|E|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;|E|   |C|E|C|E|       This method is called from the default token issuance pipeline implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method.</source>
          <target state="translated">| 만든 (in) | (In) 만료 | 만든 (in) | (Out) 만료 |   |--------------------|--------------------|--------------------|---------------------|   | <ph id="ph1">`null`</ph><ph id="ph2">|</ph><ph id="ph3">`null`</ph>|&lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;| &lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt; + &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt;|   | C | <ph id="ph4">`null`</ph>| C | C + &lt;xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt;|   | <ph id="ph5">`null`</ph>| E | &lt;xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;| E |   | C | E | C | E |       이 메서드는 기본에서 토큰 발급 파이프라인 구현에서 호출 됩니다는 &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; &lt;/xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt; &lt;/xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt; &lt;/xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName&gt; &lt;/xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt; &lt;/xref:System.DateTime.UtcNow%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.Lifetime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the requested lifetime.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.Lifetime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요청한 수명을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.Lifetime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the granted lifetime.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.Lifetime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 부여한 수명을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Issues a security token.</source>
          <target state="translated">보안 토큰을 발급 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method implements the Issue binding defined in the WS-Trust specification.</source>
          <target state="translated">이 메서드는 Ws-trust 사양에 정의 된 문제 바인딩을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of the Issue method processes the incoming request (RST) through a token issuance (claims issuance) pipeline and returns either a response (RSTR) that contains a security token with the appropriate claims to authenticate the requestor with the RP or an appropriate exception.</source>
          <target state="translated">문제 메서드의 기본 구현 (RST) 토큰 발급 (클레임 발급) 파이프라인을 통해 들어오는 요청을 처리 하 고 보안 토큰을 RP에 요청 자가 인증을 적절 한 클레임을 포함 하는 응답 (RSTR) 또는 해당 예외를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The token issuance pipeline in the default implementation consists of calls to the following methods (of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class).</source>
          <target state="translated">다음 방법에 대 한 호출의 기본 구현에서 토큰 발급 파이프라인으로 구성 됩니다 (의 &lt;xref:System.IdentityModel.SecurityTokenService&gt;클래스).&lt;/xref:System.IdentityModel.SecurityTokenService&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt; method to validate the request (RST).</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt;메서드 (RST) 요청 유효성 검사를.&lt;/xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; method to get a &lt;xref:System.IdentityModel.Scope&gt; object that contains information about the relying party (RP) associated with the request.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;가져올 메서드를 한 &lt;xref:System.IdentityModel.Scope&gt;요청과 관련 된 신뢰 당사자 (RP)에 대 한 정보를 포함 하는 개체입니다.&lt;/xref:System.IdentityModel.Scope&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must override this method.</source>
          <target state="translated">이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; returns <ph id="ph1">`null`</ph>, a &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">경우 &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;반환 <ph id="ph1">`null`</ph>, &lt;xref:System.InvalidOperationException&gt;throw 됩니다.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A&gt; method to return a security token descriptor based on the RST and the &lt;xref:System.IdentityModel.Scope&gt; object returned in the previous step.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A&gt;RST를 기반으로 보안 토큰 설명자를 반환 하는 메서드 및 &lt;xref:System.IdentityModel.Scope&gt;이전 단계에서 반환 된 개체입니다.&lt;/xref:System.IdentityModel.Scope&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The security token descriptor (&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor&gt;) contains information about the request in a form that can be used by a token handler.</source>
          <target state="translated">보안 토큰 설명자 (&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor&gt;) 토큰 처리기에서 사용할 수 있는 형태로 요청에 대 한 정보를 포함 합니다.&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName&gt; property is set to the descriptor returned by the call.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName&gt;호출에 의해 반환 된 설명자 속성이.&lt;/xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`null`</ph> is returned or if the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A&gt; property of the descriptor is <ph id="ph2">`null`</ph>, an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">경우 <ph id="ph1">`null`</ph> 반환 됩니다 또는 경우에는 &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A&gt;설명자의 속성은 <ph id="ph2">`null`</ph>, &lt;xref:System.InvalidOperationException&gt;throw 됩니다.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception is also thrown if the &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName&gt; property is <ph id="ph1">`true`</ph> but the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A&gt; property on the returned descriptor is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">경우에 예외가 throw 됩니다는 &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName&gt;속성은 <ph id="ph1">`true`</ph> 되지만 &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A&gt;반환 된 설명자의 속성은 <ph id="ph2">`null`</ph>.&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A&gt; &lt;/xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A&gt; method to get the appropriate token handler based on the kind of token requested.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A&gt;적절 한 토큰 처리기를 가져올 메서드를 요청 하는 토큰의 종류에 따라.&lt;/xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`null`</ph> is returned, a &lt;xref:System.NotImplementedException&gt; is thrown.</source>
          <target state="translated">경우 <ph id="ph1">`null`</ph> 반환 되는 &lt;xref:System.NotImplementedException&gt;throw 됩니다.&lt;/xref:System.NotImplementedException&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A&gt; method to get the issuer name for the token.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A&gt;메서드는 토큰에 대 한 발급자 이름을 가져오지 못했습니다.&lt;/xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>Throws an &lt;xref:System.InvalidOperationException&gt; if the name is <ph id="ph1">`null`</ph> or empty; otherwise sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A&gt; property on the descriptor.</source>
          <target state="translated">throw 한 &lt;xref:System.InvalidOperationException&gt;이름이 <ph id="ph1">`null`</ph> 빈, 그렇지 않으면 설정 또는 &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A&gt;속성 설명자에.&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A&gt; method to get the lifetime for the token and sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A&gt; property on the descriptor.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A&gt;토큰 및 설정에 대 한 수명 가져올 메서드를는 &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A&gt;속성 설명자에.&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt; method to get the proof token to include in the issued token and sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A&gt; property on the descriptor.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt;메서드는 발급 된 토큰 및 집합에 포함할 증명 토큰을 가져오지는 &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A&gt;속성 설명자에.&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>8.</source>
          <target state="translated">8.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; method to get the claims to include in the issued token and sets the &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A&gt; property on the descriptor.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;는 발급 된 토큰 및 집합에 포함할 클레임을 가져와야 하는 메서드는 &lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A&gt;속성 설명자에.&lt;/xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must override this method.</source>
          <target state="translated">이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>9.</source>
          <target state="translated">9.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.SecurityTokenService.GetResponse%2A&gt; method to create a response (RSTR) that contains the issued token.</source>
          <target state="translated">&lt;xref:System.IdentityModel.SecurityTokenService.GetResponse%2A&gt;발급된 된 토큰을 포함 하는 응답 (RSTR)를 만드는 메서드를.&lt;/xref:System.IdentityModel.SecurityTokenService.GetResponse%2A&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override the Issue method to implement a custom token issuance pipeline; however this is typically not necessary in the development and test environments for which most custom implementations of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class are intended.</source>
          <target state="translated">사용자 지정 토큰 발급 파이프라인; 구현 하려면 문제 메서드를 재정의할 수 있습니다. 그러나 일반적으로 필요 하지 않습니다는 대부분의 사용자 지정 구현에 대 한 개발 및 테스트 환경에는 &lt;xref:System.IdentityModel.SecurityTokenService&gt;클래스 사용 됩니다.&lt;/xref:System.IdentityModel.SecurityTokenService&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>In many of these cases you override the &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt; and &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; methods and optionally override the &lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt; method  to provide a serviceable STS for your environment.</source>
          <target state="translated">재정의 이러한 많은 경우에는 &lt;xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;및 &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt;메서드 및 필요에 따라 재정의 &lt;xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt;사용자 환경에 대 한 서비스 가능 STS를 제공 하려면 메서드.&lt;/xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>If further customization is necessary you can often provide it by overriding the methods that implement each stage of the default token issuance pipeline listed above.</source>
          <target state="translated">추가 사용자 지정이 필요한 경우에 기본 위에 나열 된 토큰 발급 파이프라인의 각 단계를 구현 하는 메서드를 재정의 하 여 자주 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 요청자의 id를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">여기에 요청 메시지 뿐만 아니라 다른 클라이언트 관련 권한 부여 컨텍스트와 같은 정보입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the issued security token.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 발급 된 보안 토큰을 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Gets or sets the principal associated with the current instance.</source>
          <target state="translated">현재 인스턴스와 관련 된 보안 주체를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the current principal.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 보안 주체를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, processes a WS-Trust Renew request.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 WS-트러스트 갱신 요청을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 요청자의 id를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">여기에 요청 메시지 뿐만 아니라 다른 클라이언트 관련 권한 부여 컨텍스트와 같은 정보입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출자에 게 반환할 RSTR을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets or sets the security token request (RST) associated with the current instance.</source>
          <target state="translated">현재 인스턴스와 관련 된 보안 토큰 요청 (RST)을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요청을 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Gets or sets the scope associated with the current instance.</source>
          <target state="translated">현재 인스턴스와 관련 된 범위를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the configuration for the token issuance request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Scope"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 발급 요청에 대 한 구성을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the current instance.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityTokenDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 인스턴스와 관련 된 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The security token descriptor that is associated with the current instance.</source>
          <target state="translated">현재 인스턴스와 연결 된 보안 토큰 설명자입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>An attempt to set the property to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> occurs.</source>
          <target state="translated">속성을 설정 하려고 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 발생 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Gets the owner configuration instance.</source>
          <target state="translated">구성 인스턴스를 소유자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the configuration for the current instance.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 인스턴스에 대 한 구성을 포함 하는 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, processes a WS-Trust Validate request.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 Ws-trust 유효성 검사 요청을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method throws an &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt;.&lt;/xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException&gt; 를 throw합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the identity of the token requestor.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 토큰 요청자의 id를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the security token request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>This includes the request message as well as other client related information such as authorization context.</source>
          <target state="translated">여기에 요청 메시지 뿐만 아니라 다른 클라이언트 관련 권한 부여 컨텍스트와 같은 정보입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the RSTR to return to the caller.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출자에 게 반환할 RSTR을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Validates the security token request (RST) encapsulated by this instance.</source>
          <target state="translated">이 인스턴스에서 캡슐화 된 보안 토큰 요청 (RST)의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ValidateRequest method is called from the token issuance pipeline (the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method) to validate the incoming RST.</source>
          <target state="translated">토큰 발급 파이프라인에서 ValidateRequest 메서드는 (의 &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;메서드) 유효성을 검사할 들어오는 RST.&lt;/xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RST is validated against the requirements (policy) of the STS and an appropriate exception is thrown if it is not valid.</source>
          <target state="translated">RST STS의 (정책) 요구 사항에 대해 유효성을 검사 하 고 유효 하지 않을 경우 해당 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A&gt; property of the request must be set to &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName&gt;).</source>
          <target state="translated">기본 구현은 &lt;xref:System.IdentityModel.SecurityTokenService&gt;클래스 RST RSTR 패턴만 및 Ws-trust 사양의 문제 바인딩만 지원 (의 &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A&gt;요청의 속성 설정 해야 &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName&gt;).&lt;/xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName&gt; &lt;/xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A&gt; &lt;/xref:System.IdentityModel.SecurityTokenService&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method enforces these requirements (and others noted in the exceptions section).</source>
          <target state="translated">이 메서드의 기본 구현에는 이러한 요구 사항을 적용 합니다 (및 예외 섹션에서 설명 하는 다른 사용자).</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override this method if you must enforce different validation requirements for your custom STS.</source>
          <target state="translated">사용자 지정 STS에 대 한 서로 다른 유효성 검사 요구 사항을 적용 해야 하는 경우이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요청을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;request&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>-or-       The <ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*&gt;</ph> property of the request is not set to <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*&gt;</ph> 속성이 요청 설정 되어 있지 <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>-or-       The <ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*&gt;</ph> property of the request is not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or one of the constants defined in the <bpt id="p2">&lt;xref href="System.IdentityModel.Protocols.WSTrust.KeyTypes"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*&gt;</ph> 요청의 속성이 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는에 정의 된 상수 중 하나는 <bpt id="p2">&lt;xref href="System.IdentityModel.Protocols.WSTrust.KeyTypes"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>-or-       The <ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*&gt;</ph> of the request is <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the <bpt id="p2">&lt;xref uid="langword_csharp_KeySize" name="KeySize" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element is present, but its value is not equal to zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*&gt;</ph> 요청은 <bpt id="p1">&lt;xref href="System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 및 <bpt id="p2">&lt;xref uid="langword_csharp_KeySize" name="KeySize" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 요소는 있지만 해당 값이&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The STS does not support the request token type (based on the value of the &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*&gt; property of the request).</source>
          <target state="translated">STS 요청 토큰 형식을 지원 하지 않습니다 (의 값에 따라는 &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*&gt;요청의 속성).&lt;/xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>