<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34d146d0bdf33ba1354fc2b71587d66750fc1cfc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Description.IPolicyImportExtension.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db46a385d4d9b0297c88d16e67a1493314aa0659</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6246464533c809bc6e15d973eda670c5e6dc2ab</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a method for objects that import custom policy assertions about bindings.</source>
          <target state="translated">바인딩에 대 한 사용자 지정 정책 어설션을 가져오는 개체에 대 한 메서드를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the IPolicyImportExtension interface to search WSDL information exposed by a particular endpoint for custom policy assertions about endpoint capabilities or requirements.</source>
          <target state="translated">한 끝점 기능 또는 요구 사항에 대 한 사용자 지정 정책 어설션의 특정 끝점에서 공개한 WSDL 정보를 검색 하려면 IPolicyImportExtension 인터페이스를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a policy importer searches for a specific assertion and either inserts a binding element, configures a binding element, or modifies the contract to support the requirements of the assertion.</source>
          <target state="translated">일반적으로 정책 가져오기는 바인딩 요소에서는 특정 어설션 및 삽입에 대 한 검색 바인딩 요소를 구성 하거나 후 어설션 요구 사항을 지원 하기 위해 계약을 수정 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike its counterpart, &lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;, IPolicyImportExtension does not require implementation by a &lt;xref:System.ServiceModel.Channels.BindingElement&gt; object; you can load it using the client configuration section shown in the Examples section or programmatically by adding it to the &lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; constructor.</source>
          <target state="translated">이 대응 달리 &lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;, IPolicyImportExtension 구현으로 필요 하지 않습니다는 &lt;xref:System.ServiceModel.Channels.BindingElement&gt;개체; "예" 섹션 또는 추가 하 여 프로그래밍 방식으로 표시 된 클라이언트 구성 섹션을 사용 하 여 로드할 수 있습니다는 &lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt;생성자.&lt;/xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Channels.BindingElement&gt; &lt;/xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> passes two objects to the &lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt; method, a &lt;xref:System.ServiceModel.Description.MetadataImporter&gt; and a &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>&lt;xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt;메서드는 &lt;xref:System.ServiceModel.Description.MetadataImporter&gt;및에 &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;.&lt;/xref:System.ServiceModel.Description.PolicyConversionContext&gt; &lt;/xref:System.ServiceModel.Description.MetadataImporter&gt; ,&lt;/xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A&gt; 두 개체를 전달합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically the &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt; object already contains the policy assertions for each binding scope.</source>
          <target state="translated">일반적으로 &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;개체에 각 바인딩 범위에 대 한 정책 어설션이 이미 포함 되어 있습니다.&lt;/xref:System.ServiceModel.Description.PolicyConversionContext&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>An IPolicyImportExtension implementation performs the following steps:      1.</source>
          <target state="translated">다음 단계를 수행 하는 IPolicyImportExtension 구현: 1입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Locates the custom policy assertion for which it is responsible by calling either the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;, &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;, or &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt; methods, depending upon the scope.</source>
          <target state="translated">담당 하 고 호출 하 여 사용자 지정 정책 어설션을 찾습니다는 &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;, &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;, 또는 &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;메서드 범위에 따라.&lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Removes the policy assertion from the assertion collection.</source>
          <target state="translated">어설션 컬렉션에서 정책 어설션을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt; method locates, returns, and removes the assertion in one step.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt;메서드 찾고 반환 하 고&amp;1; 단계에는 어설션을 제거 합니다.&lt;/xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modify the binding stack or the contract by either adding a required custom &lt;xref:System.ServiceModel.Channels.BindingElement&gt; to the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt; property or by modifying the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">필요한 사용자 지정 하거나 추가 하 여 바인딩 스택 또는 계약 수정 &lt;xref:System.ServiceModel.Channels.BindingElement&gt;에 &lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;속성 또는 수정 하 여는 &lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt; &lt;/xref:System.ServiceModel.Channels.BindingElement&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Step 2 is important.</source>
          <target state="translated">2 단계는 중요 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>After all policy importers have been called, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> checks for the existence of any policy assertions that remain.</source>
          <target state="translated">모든 정책 가져오기를 호출 된 후 <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> 남아 있는 정책 어설션이 있는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one exists, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> assumes that the policy import was unsuccessful and does not import the associated binding.</source>
          <target state="translated">있는 경우 <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> 간주 정책 가져오기가 실패 했습니다. 하 고 관련된 바인딩을 가져오지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A malicious metadata supplier can attempt to send malformed XML as part of metadata in an attempt to exploit a policy importer.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 악의적인 메타 데이터 공급자가 정책 가져오기를 악용 하기 위해 잘못 된 형식의 XML 메타 데이터의 일부로 보낼 하려고 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is strongly recommended that custom policy importers be robust to all forms of XML that can be passed to it.</source>
          <target state="translated">해당 사용자 지정 정책 가져오기가 모든 형태의 XML 전달 될 수 있는 강력 할 가장 좋습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom &lt;xref:System.ServiceModel.Description.MetadataImporter&gt; implementations must implement their own &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt; object to extract the policy assertions attached to the custom metadata format.</source>
          <target state="translated">사용자 지정 &lt;xref:System.ServiceModel.Description.MetadataImporter&gt;구현은 구현 해야 자신의 &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;정책 어설션을 개체 사용자 지정 메타 데이터 형식에 연결 합니다.&lt;/xref:System.ServiceModel.Description.PolicyConversionContext&gt; &lt;/xref:System.ServiceModel.Description.MetadataImporter&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to export and import custom WSDL elements that are not policy assertions, see &lt;xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName&gt; and &lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt;.</source>
          <target state="translated">정책 어설션이 아닌 사용자 지정 WSDL 요소를 내보내고 하려면 참조 &lt;xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName&gt;및 &lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt;.&lt;/xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can use custom policy importers and exporters with the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> by using the same configuration elements in a configuration file and the <ph id="ph2">`/svcutilConfig:&lt;configFile&gt;`</ph> option.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 사용자 지정 정책 가져오기 및 내보내기를 사용할 수는 <bpt id="p1">[</bpt>ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 구성 파일에서 동일한 구성 요소를 사용 하 여 및 <ph id="ph2">`/svcutilConfig:&lt;configFile&gt;`</ph> 옵션입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Defines a method that can import custom policy assertions and add implementing binding elements.</source>
          <target state="translated">사용자 지정 정책 어설션의 가져오고 구현 바인딩 요소를 추가할 수 있는 메서드를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">`ImportPolicy`</ph> method to obtain policy assertions and perform some modification of the imported contract or binding to support the assertion.</source>
          <target state="translated">구현 된 <ph id="ph1">`ImportPolicy`</ph> 메서드를 정책 어설션을 가져온 해당 어설션을 지원 하도록 가져온된 계약 또는 바인딩을 수정 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a policy importer responds to finding a custom policy assertion by configuring or inserting a binding element into the binding being imported.</source>
          <target state="translated">일반적으로 정책 가져오기는 구성 하거나 바인딩 요소를 가져올 바인딩에 삽입 함으로써 사용자 지정 정책 어설션 검색에 응답 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> passes two objects to the ImportPolicy method, a &lt;xref:System.ServiceModel.Description.MetadataImporter&gt; and a &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>두 개체는 &lt;xref:System.ServiceModel.Description.MetadataImporter&gt;및에 &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;.&lt;/xref:System.ServiceModel.Description.PolicyConversionContext&gt; &lt;/xref:System.ServiceModel.Description.MetadataImporter&gt; ImportPolicy 메서드에 전달합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically the &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt; object already contains the policy assertions for each binding scope.</source>
          <target state="translated">일반적으로 &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;개체에 각 바인딩 범위에 대 한 정책 어설션이 이미 포함 되어 있습니다.&lt;/xref:System.ServiceModel.Description.PolicyConversionContext&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>An &lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt; implementation performs the following steps:      1.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;구현에서는 다음 단계를 수행 합니다. 1.&lt;/xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Locates the custom policy assertion for which it is responsible by calling either the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;, &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;, or &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt; methods, depending upon the scope.</source>
          <target state="translated">담당 하 고 호출 하 여 사용자 지정 정책 어설션을 찾습니다는 &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;, &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;, 또는 &lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;메서드 범위에 따라.&lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Removes the policy assertion from the assertion collection.</source>
          <target state="translated">어설션 컬렉션에서 정책 어설션을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt; method locates, returns, and removes the assertion in one step.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt;메서드 찾고 반환 하 고&amp;1; 단계에는 어설션을 제거 합니다.&lt;/xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modifies the binding stack or the contract by either adding a required custom &lt;xref:System.ServiceModel.Channels.BindingElement&gt; to the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt; property or by modifying the &lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">필요한 사용자 지정을 추가 하거나 바인딩 스택 또는 계약을 수정 &lt;xref:System.ServiceModel.Channels.BindingElement&gt;에 &lt;xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt;속성 또는 수정 하 여는 &lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName&gt; &lt;/xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A&gt; &lt;/xref:System.ServiceModel.Channels.BindingElement&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Step 2 is important.</source>
          <target state="translated">2 단계는 중요 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>After all policy importers have been called, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> checks for the existence of any policy assertions that remain.</source>
          <target state="translated">모든 정책 가져오기를 호출 된 후 <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> 남아 있는 정책 어설션이 있는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one exists, <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> assumes that the policy import was unsuccessful and does not import the associated binding.</source>
          <target state="translated">있는 경우 <ph id="ph1">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> 간주 정책 가져오기가 실패 했습니다. 하 고 관련된 바인딩을 가져오지 않습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.Description.MetadataImporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object in use.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.Description.MetadataImporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 사용에서 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.Description.PolicyConversionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains both the policy assertions that can be imported and the collections of binding elements to which implementing binding elements can be added.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.Description.PolicyConversionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 모두 가져올 수 있는 정책 어설션 컬렉션 포함 바인딩 요소는 구현 바인딩 요소를 추가할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>