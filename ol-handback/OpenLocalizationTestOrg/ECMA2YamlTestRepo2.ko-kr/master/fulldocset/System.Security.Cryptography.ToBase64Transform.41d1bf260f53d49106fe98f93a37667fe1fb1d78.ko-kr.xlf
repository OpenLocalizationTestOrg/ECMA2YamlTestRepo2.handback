<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81fc58a4ff23bd34cb72d9918378368340de66d0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.ToBase64Transform.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b56e3d49dfb9e865019f041f822db5702e0a01d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">21a3da21cba2922dc92d5f8ea312be18b6241a3a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Converts a <bpt id="p1">&lt;xref href="System.Security.Cryptography.CryptoStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to base 64.</source>
          <target state="translated">변환 된 <bpt id="p1">&lt;xref href="System.Security.Cryptography.CryptoStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> base 64로 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</source>
          <target state="translated">사용자는 양식 임의의 비트 시퀀스를 나타내는 base 64 콘텐츠 전송 인코딩 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">현재 변형을 다시 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether multiple blocks can be transformed.</source>
          <target state="translated">여러 개의 블록을 변형할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the current implementation, only one block can be transformed at a time, so this property is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">현재 구현에서는 블록을 하나만 수 변환할 한 번에 있으므로이 속성은 항상 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a simple call to &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 메서드는 간단한 &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;.&lt;/xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; 호출</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the &lt;xref:System.Security.Cryptography.ToBase64Transform&gt; to be reallocated for other purposes.</source>
          <target state="translated">호출 <ph id="ph1">`Dispose`</ph> 에서 사용 하는 리소스는 &lt;xref:System.Security.Cryptography.ToBase64Transform&gt;다른 용도에 다시 할당 됩니다.&lt;/xref:System.Security.Cryptography.ToBase64Transform&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`Dispose`</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">현재 인스턴스에서 사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.Cryptography.ToBase64Transform&gt;.</source>
          <target state="translated">호출 <ph id="ph1">`Dispose`</ph> &lt;xref:System.Security.Cryptography.ToBase64Transform&gt;.&lt;/xref:System.Security.Cryptography.ToBase64Transform&gt; 를 사용 하 여 작업을 마쳤으면</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Security.Cryptography.ToBase64Transform&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 메서드는 &lt;xref:System.Security.Cryptography.ToBase64Transform&gt;불안정 한 상태가.&lt;/xref:System.Security.Cryptography.ToBase64Transform&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.Cryptography.ToBase64Transform&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.ToBase64Transform&gt; was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">`Dispose`</ph>에 대 한 모든 참조를 해제 해야는 &lt;xref:System.Security.Cryptography.ToBase64Transform&gt;가비지 수집기는 메모리를 회수할 수 있도록 하는 &lt;xref:System.Security.Cryptography.ToBase64Transform&gt;차지한.&lt;/xref:System.Security.Cryptography.ToBase64Transform&gt; &lt;/xref:System.Security.Cryptography.ToBase64Transform&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.Cryptography.ToBase64Transform&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 항상 호출 <ph id="ph2">`Dispose`</ph> &lt;xref:System.Security.Cryptography.ToBase64Transform&gt;.&lt;/xref:System.Security.Cryptography.ToBase64Transform&gt; 에 대 한 마지막 참조를 해제 하기 전에</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Cryptography.ToBase64Transform&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 &lt;xref:System.Security.Cryptography.ToBase64Transform&gt;개체의 <ph id="ph1">`Finalize`</ph> 메서드.&lt;/xref:System.Security.Cryptography.ToBase64Transform&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">`Finalize`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 로 설정 disposing 매개 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with disposing set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>호출 <ph id="ph2">`Dispose`</ph> 삭제로 설정 된 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.ToBase64Transform&gt; references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수는 <ph id="ph2">`true`</ph>,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 &lt;xref:System.Security.Cryptography.ToBase64Transform&gt;참조.&lt;/xref:System.Security.Cryptography.ToBase64Transform&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드 호출에서 <ph id="ph1">`Dispose()`</ph> 각 참조 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the input block size.</source>
          <target state="translated">입력된 블록 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input block size for this transformation is 3 bytes.</source>
          <target state="translated">이 변환의 입력된 블록 크기는 3 바이트입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The size of the input data blocks in bytes.</source>
          <target state="translated">입력된 데이터의 크기 (바이트)를 차단합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the output block size.</source>
          <target state="translated">출력 블록 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output block size for this transformation is 4 bytes.</source>
          <target state="translated">이 변환에 대 한 출력 블록 크기는 4 바이트입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The size of the output data blocks in bytes.</source>
          <target state="translated">출력 데이터의 크기 (바이트)를 차단합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</source>
          <target state="translated">Base 64로 입력된 바이트 배열의 지정된 된 영역으로 변환한 결과 출력 바이트 배열의 지정된 된 영역에 복사 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Security.Cryptography.ToBase64Transform&gt; class is a block algorithm that processes input blocks of 3 bytes and creates output blocks of 4 bytes.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;클래스는 4 바이트의 출력 블록을 만들고 3 바이트의 입력된 블록을 처리 하는 블록 알고리즘.&lt;/xref:System.Security.Cryptography.ToBase64Transform&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TransformBlock method transforms an input block of 24 bits into 32 bits of character data.</source>
          <target state="translated">Transformblock은 메서드 문자 데이터의 32 비트도 24 비트의 입력된 블록을 변환합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must maintain 3 byte input boundaries to 4 byte output boundaries in order to match the block transform.</source>
          <target state="translated">블록 변환을 일치 시키기 위해 3 바이트의 입력된 경계는 4 바이트 출력 경계를 유지 관리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The input to compute to base 64.</source>
          <target state="translated">Base 64로 계산할 입력입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The offset into the input byte array from which to begin using data.</source>
          <target state="translated">데이터 사용을 시작할 입력된 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">데이터로 사용할 입력된 바이트 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The output to which to write the result.</source>
          <target state="translated">결과 쓸 대상의 출력입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The offset into the output byte array from which to begin writing data.</source>
          <target state="translated">데이터 쓰기를 시작할 출력 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The number of bytes written.</source>
          <target state="translated">쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has already been disposed.</source>
          <target state="translated">현재 <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 이미 삭제 되었습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The data size is not valid.</source>
          <target state="translated">데이터 크기가 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains an invalid offset length.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">inputBuffer</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수에서 잘못 된 오프셋된 길이 포함 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputCount</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains an invalid value.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">inputCount</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수에 잘못 된 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter requires a non-negative number.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">inputBuffer</ph> <ept id="p1">&lt;/code&gt;</ept> 음수가 아닌 숫자 매개 변수에 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Converts the specified region of the specified byte array to base 64.</source>
          <target state="translated">Base 64로 지정 된 바이트 배열의 지정된 된 영역으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The input to convert to base 64.</source>
          <target state="translated">Base 64로 변환할 입력입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">데이터 사용을 시작할 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">데이터로 사용할 바이트 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The computed base 64 conversion.</source>
          <target state="translated">계산 된 base 64 변환 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has already been disposed.</source>
          <target state="translated">현재 <bpt id="p1">&lt;xref href="System.Security.Cryptography.ToBase64Transform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 이미 삭제 되었습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains an invalid offset length.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">inputBuffer</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수에서 잘못 된 오프셋된 길이 포함 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputCount</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains an invalid value.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">inputCount</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수에 잘못 된 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputBuffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter requires a non-negative number.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">inputBuffer</ph> <ept id="p1">&lt;/code&gt;</ept> 음수가 아닌 숫자 매개 변수에 지정 해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>