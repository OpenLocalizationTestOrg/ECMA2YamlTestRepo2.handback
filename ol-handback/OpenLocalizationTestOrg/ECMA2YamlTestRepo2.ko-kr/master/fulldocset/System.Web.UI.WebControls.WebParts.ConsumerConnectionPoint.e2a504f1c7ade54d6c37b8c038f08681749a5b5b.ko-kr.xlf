<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67918dc525bfbcd675508d197c42b3f57a721e48</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff521578c20cf51de832f4911f8e533360661b4a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e25f0da82404cfdce94a97208dbecc5d97c05d7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a connection point object that enables a server control acting as a consumer to form a connection with a provider.</source>
          <target state="translated">소비자는 공급자와의 연결을 구성 하기 위해 역할을 하는 서버 컨트롤 수 있도록 하는 연결 지점 개체를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection.</source>
          <target state="translated">두 개의 서버 컨트롤 간의 모든 웹 파트 연결에서 각 컨트롤은 다른 컨트롤에 연결 하 고 제공 하거나 공급자 또는 소비자 연결에 대 한 컨트롤 지정 된 여부에 따라 데이터를 사용할 수 있도록 하는 관련 된 연결 지점 개체 (다른 요구 사항) 간에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; object in general contains the details for how a control can connect to another control and the type of data it can share.</source>
          <target state="translated">A &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;개체 일반적 공유할 수 있는 데이터의 형식과 다른 컨트롤에 컨트롤 연결 방법에 대 한 세부 정보를 포함 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a control acting as the consumer in a connection, its connection point must be a ConsumerConnectionPoint object.</source>
          <target state="translated">연결에서 소비자 역할을 하는 컨트롤의 경우 연결 지점은 ConsumerConnectionPoint 개체 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details on Web Parts connections and connection points, read the topics listed in the See Also section below.</source>
          <target state="translated">웹 파트 연결 및 연결 지점에 대 한 자세한 내용은 아래 참고 항목 섹션에 나열 된 항목을 참조 하세요.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a ConsumerConnectionPoint object, several steps are required:      1.</source>
          <target state="translated">몇 가지 단계는 필요 ConsumerConnectionPoint 개체를 만들려면: 1입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enable a consumer control to reference an interface instance.</source>
          <target state="translated">인터페이스 인스턴스를 참조 하는 소비자 컨트롤을 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; or other server control (any type of server control that will be added to a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt; zone can be used) must be able to consume data from a specific interface instance.</source>
          <target state="translated">A &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;또는 기타 서버 컨트롤 (모든 형식의 서버 컨트롤에 추가 되는 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;영역을 사용할 수 있습니다) 데이터는 특정 인터페이스 인스턴스를 사용할 수 있어야 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control need not implement the interface; only the provider must implement it.</source>
          <target state="translated">컨트롤; 인터페이스를 구현 하지 필요 공급자를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The consumer can either work with the exact interface type served by a provider or, if it does not, a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt; object can be used to transform data from a provider's interface type to a type understood by the consumer.</source>
          <target state="translated">소비자는 공급자가 제공 하 고 정확한 인터페이스 형식과 하거나 사용할 수 또는 존재 하지 않는 한 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;소비자가 인식할 수 있는 형식에 데이터 공급자의 인터페이스 형식에서 변환할 개체를 사용할 수 있습니다.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical way to enable a consumer is to declare a private field to contain a reference to the desired interface type.</source>
          <target state="translated">소비자를 사용 하도록 설정 하려면 원하는 인터페이스 형식에 대 한 참조를 포함 하도록 전용 필드를 선언 하는 일반적인 방법은입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identify a callback method.</source>
          <target state="translated">콜백 메서드를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A method in the consumer must be identified as the callback method to establish a connection with the provider.</source>
          <target state="translated">소비자의 메서드는 공급자와 연결할 콜백 메서드로 식별 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves an instance of the interface that the provider implements, and assigns it to (for example) the private field created in the first step.</source>
          <target state="translated">이 메서드는 공급자 구현 및 할당 (예) private 필드에 단계에서 만든 첫 번째 인터페이스의 인스턴스를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Web Parts approach for identifying a callback method in the consumer is to add a <ph id="ph1">`ConnectionConsumer`</ph> metadata attribute (defined by the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute&gt; class) to the method that receives the interface instance.</source>
          <target state="translated">소비자의 콜백 메서드를 식별 하는 데 웹 파트 방법은 추가 하는 <ph id="ph1">`ConnectionConsumer`</ph> 메타 데이터 특성 (정의한는 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute&gt;클래스) 인터페이스 인스턴스가 수신 하는 메서드를.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the attribute is added, the only required parameter is a display name to use for the consumer connection point.</source>
          <target state="translated">특성이 추가 되 면 필요한 유일한 매개 변수는 소비자 연결 지점에 사용할 표시 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Optional parameters can also be added, such as an ID.</source>
          <target state="translated">선택적 매개 변수를 추가할 수도 있습니다, ID 등</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Process and output the data from the interface instance.</source>
          <target state="translated">처리 하 고 데이터 인터페이스 인스턴스를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Perform any internal processing as needed on the data, and then typically a consumer control will render the data to the page.</source>
          <target state="translated">데이터에 대해 필요에 따라 내부 처리를 수행 하 고 일반적으로 소비자 컨트롤 데이터를 렌더링 합니다 페이지.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>A common way of doing this is to override the control's &lt;xref:System.Web.UI.Control.OnPreRender%2A&gt; method.</source>
          <target state="translated">이 작업의 일반적으로 컨트롤의 재정의 하는 &lt;xref:System.Web.UI.Control.OnPreRender%2A&gt;메서드.&lt;/xref:System.Web.UI.Control.OnPreRender%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  During a synchronous request, a consumer should request data directly from the provider during or immediately after the &lt;xref:System.Web.UI.Control.PreRender&gt; event.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 동기 요청 하는 동안 소비자 데이터를 요청 해야 공급자에서 직접 중 이나 직후는 &lt;xref:System.Web.UI.Control.PreRender&gt;이벤트.&lt;/xref:System.Web.UI.Control.PreRender&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>During an asynchronous request, if the provider's callback method is not called at any point during rendering, the developer can assume that no data was sent to the consumer.</source>
          <target state="translated">비동기 요청 하는 동안 공급자의 콜백 메서드에서 렌더링 하는 동안 언제 든 지 호출 되지 않으면 개발자 가정할 수 데이터가 없는 소비자에 게 전송 되었습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a control has been equipped to act as a consumer, the control can participate in connections (assuming that a provider control is also equipped and available).</source>
          <target state="translated">컨트롤 소비자 역할을 하도록 설정 된 후 컨트롤 (구비 하 고 사용 가능한 공급자 컨트롤도 라고 가정함) 연결에 참여할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a static, declarative connection in the markup of a Web page, developers can use the <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> element.</source>
          <target state="translated">웹 페이지의 태그에는 정적 선언적 연결을 만들려면 개발자가 사용할 수는 <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`ConnectionConsumer`</ph> attribute in the consumer source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the <ph id="ph2">`ConsumerConnectionPointID`</ph> attribute in the <ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph> element on a page.</source>
          <target state="translated">경우는 <ph id="ph1">`ConnectionConsumer`</ph> 연결 지점에 대 한 ID를 지정 하는 콜백 메서드를 식별 하는 소비자 소스 코드에서 해당 값에 할당 되어야 합니다는 <ph id="ph2">`ConsumerConnectionPointID`</ph> 특성에 <ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph> 는 페이지입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>A reason that a developer might specify an ID for a consumer connection point is if there are multiple connection points defined in the consumer control.</source>
          <target state="translated">개발자가 소비자 연결 지점에 대 한 ID를 지정할 수 있습니다 이유 소비자 컨트롤에 정의 된 연결 지점이 여러 개 있기 때문입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an ID is not specified for the consumer connection point in the consumer control, a value does not have to be assigned to the <ph id="ph1">`ConsumerConnectionPointID`</ph> attribute in the page either, because the connection will be created using a default value obtained from the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt; field.</source>
          <target state="translated">소비자 컨트롤에 있는 소비자 연결 지점에 대 한 ID를 지정 하지 않으면, 값에 할당할 않아도 <ph id="ph1">`ConsumerConnectionPointID`</ph> 페이지에서, 가져온에서 기본값을 사용 하 여 연결을 만들 수는 때문에 특성의 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;필드.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a connection in code, developers must create a new ConsumerConnectionPoint object by calling the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt; method and passing to it the ID of the consumer control, along with the ID or index of the defined ConsumerConnectionPoint object in the consumer control.</source>
          <target state="translated">코드에 대 한 연결을 만들려면 개발자 만들어야 새 ConsumerConnectionPoint 개체를 호출 하 여는 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;메서드와 소비자 컨트롤 ID 또는 소비자 컨트롤에 정의 된 형식은 ConsumerConnectionPoint 개체의 인덱스와 함께 ID를 전달 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned ConsumerConnectionPoint object, along with a reference to the consumer control, a reference to the provider control, and a corresponding &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; object, are all passed to the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt; method to create a new &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; object.</source>
          <target state="translated">소비자 컨트롤에 대 한 참조, 해당 공급자 컨트롤에 대 한 참조와 함께 반환된 형식은 ConsumerConnectionPoint 개체 &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;개체를 모두에 전달 되는 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt;만드는 새 메서드를 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;개체입니다.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although developers can use consumer connection points as part of establishing connections either declaratively or programmatically, users can also interact with consumer connection points to establish connections through the user interface (UI).</source>
          <target state="translated">개발자를 사용할 수 있지만 소비자 연결 지점 선언적으로 또는 프로그래밍 방식으로 연결 설정의 일부로 사용자가 사용자 인터페이스 (UI)를 통해 연결을 설정할 수 있는 소비자 연결 지점의 상호 작용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If developers declare a &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt; control on a Web page, it provides a run-time UI for users to create connections.</source>
          <target state="translated">개발자가 선언 하는 경우는 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;컨트롤이 웹 페이지에서 연결을 생성 하는 사용자를 위해 런타임에 UI를 제공 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If users choose the provider control as the starting point for establishing the connection by clicking its connect verb (they could also choose the consumer; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display names of the available consumer connection point (or points if there are multiple ones) that the provider can send the data to.</source>
          <target state="translated">사용자가 클릭 하 여 연결을 설정 하기 위한 시작 지점으로 공급자 컨트롤을 선택 하는 경우 해당 연결 동사 (소비자를 선택할 수도; 동일한 차이점이), UI에는 사용할 수 있는 소비자 연결 지점 (또는 여러 세션에 있는 경우 지점)의 표시 이름으로 드롭다운 목록 컨트롤이 나타납니다 공급자가 데이터를 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users must select a consumer connection point to establish a connection.</source>
          <target state="translated">사용자가 연결을 설정 하는 소비자 연결 지점을 선택 해야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>A ConsumerConnectionPoint object associates directly with a specific consumer control, and stores details about a connection in the properties it inherits from the base &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; class.</source>
          <target state="translated">특정 소비자 컨트롤 직접 연결 하 고 기본 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;클래스&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; 에서 상속 된 속성에 대 한 연결에 대 한 세부 정보를 저장 하는 형식은 ConsumerConnectionPoint 개체</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the inherited &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; property, a consumer connection point keeps the type of interface it uses.</source>
          <target state="translated">상속 된 예를 들어 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;소비자 연결 지점 속성을 사용 하 여 인터페이스의 형식을 유지 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the provider and consumer in a connection both understand the interface type, the controls are compatible and capable of forming a direct connection.</source>
          <target state="translated">공급자와 소비자 연결에서 모두 이해 인터페이스 형식, 해당 컨트롤은 호환 되며 직접 연결을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the provider and consumer cannot work with the same interface type, they are incompatible and must use a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt; object to translate the provider connection point's &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; property into a type that the consumer can work with.</source>
          <target state="translated">공급자 및 소비자 같은 인터페이스 형식을 사용할 수 없는, 경우 호환 되지 않는 하며 사용 해야 합니다는 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;공급자 연결 지점 변환할 개체 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;소비자가 사용할 수 있는 형식으로 속성.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another important inherited property is the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt; property, which provides a friendly name to display in the UI for users to choose a consumer connection point when creating connections.</source>
          <target state="translated">또 다른 중요 한 상속 된 속성은는 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;연결을 만들 때 소비자 연결을 선택 하는 사용자를 위해 UI에 표시 하는 식별 이름을 제공 하는 속성을 가리킵니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The display name is the required parameter when developers add a <ph id="ph1">`ConnectionConsumer`</ph> attribute to the callback method in a consumer control.</source>
          <target state="translated">개발자는 추가 하는 경우 표시 이름은 필수 매개 변수를입니다는 <ph id="ph1">`ConnectionConsumer`</ph> 소비자 컨트롤의 콜백 메서드에 특성입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The inherited &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt; property is also useful, as indicated above, because it provides a unique identifier for a consumer connection point in the event that a consumer has multiple connection points.</source>
          <target state="translated">상속 된 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;소비자에 여러 연결 지점이 소비자 연결 지점에 대 한 고유 식별자를 제공 하기 때문에, 위에 표시 된 대로 속성은 유용 하 게도.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>A consumer can have multiple ConsumerConnectionPoint objects defined in it, and in this case, when developers add the <ph id="ph1">`ConnectionConsumer`</ph> attribute to a method, they should specify an ID value to distinguish each connection point.</source>
          <target state="translated">소비자는 정의 되어,이 경우 개발자가 추가 하는 여러 ConsumerConnectionPoint 개체를 유지할 수는 <ph id="ph1">`ConnectionConsumer`</ph> 특성 메서드에 각 연결점을 구별 하는 ID 값을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>One other notable inherited property is the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt; property, which indicates whether a consumer connection point can connect simultaneously to multiple providers.</source>
          <target state="translated">다른 주목할 만한 상속 된 속성 중 하나는 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;소비자 연결 지점에서 동시에 여러 공급자에 연결할 수 있는지 여부를 나타내는 속성도.&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property value is <ph id="ph1">`false`</ph> by default for consumer connection points (whereas it defaults to <ph id="ph2">`true`</ph> for provider connection points).</source>
          <target state="translated">이 속성 값은 <ph id="ph1">`false`</ph> 소비자 연결 지점에 대해 기본적으로 (기본적으로 반면 <ph id="ph2">`true`</ph> 공급자 연결 지점에 대 한).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ConsumerConnectionPoint class adds several unique methods to the members it inherits from the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; class.</source>
          <target state="translated">몇 가지 고유한 메서드를 추가 하는 형식은 ConsumerConnectionPoint 클래스 멤버에 필요한 &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;클래스&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; 에서 상속</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A&gt; method invokes the consumer's own defined callback method to retrieve the interface instance from the provider.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A&gt;메서드는 공급자에서 인터페이스 인스턴스를 검색 하려면 소비자의 사용자 정의 된 콜백 메서드를 호출 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt; method returns a Boolean value that indicates whether the connection point is able to establish connections, based on the current state of the associated consumer control.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;메서드 연결점 연결된 소비자 컨트롤의 현재 상태에 따라 연결을 설정할 수 있는지 여부를 나타내는 부울 값을 반환 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ConsumerConnectionPoint constructor for the &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; class simply calls the base constructor, passing to it the various parameters and initializing the base class.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;클래스는 기본 클래스를 초기화 하는 다양 한 매개 변수를 전달, 기본 생성자를 호출&lt;/xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; 하는 것에 대 한 형식은 ConsumerConnectionPoint 생성자</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base class constructor checks a number of the parameters for a connection point and can throw several exceptions.</source>
          <target state="translated">기본 클래스 생성자는 연결 지점에 대 한 매개 변수 개수를 확인 하 고 몇 가지 예외를 throw 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of possible exceptions, see the Exceptions section.</source>
          <target state="translated">가능한 예외 목록은 예외 섹션을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call the ConsumerConnectionPoint constructor to create your own instance of the &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; class.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;클래스&lt;/xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; 의 인스턴스를 직접 만들려는 ConsumerConnectionPoint 생성자를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, in cases where you are simply establishing a connection and not extending the class, you should call the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt; method to return a connection point object from a provider.</source>
          <target state="translated">그러나 단순히 연결을 설정 하 고 클래스를 확장 하지 않는 경우에 호출 해야는 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;공급자에서 연결 지점 개체를 반환 하는 메서드.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The method in the consumer control that returns an interface instance to consumers to establish a connection.</source>
          <target state="translated">연결을 설정 하는 소비자에 게 인터페이스 인스턴스를 반환 하는 소비자 컨트롤에 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the interface that the consumer receives from a provider.</source>
          <target state="translated">&lt;xref:System.Type&gt;소비자는 공급자에서 수신 하는 인터페이스입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the consumer control with which the consumer connection point is associated.</source>
          <target state="translated">&lt;xref:System.Type&gt;소비자 연결 지점에 연결 된 소비자 컨트롤의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A friendly display name for the consumer connection point that appears to users in the connection user interface (UI).</source>
          <target state="translated">연결 사용자 인터페이스 (UI)에 사용자에 게 표시 되는 소비자 연결 지점에 대 한 표시 이름.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A unique identifier for the consumer connection point.</source>
          <target state="translated">소비자 연결 지점에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A Boolean value indicating whether the consumer connection point can have multiple simultaneous connections with providers.</source>
          <target state="translated">소비자 연결 지점 공급자와 함께 여러 개의 동시 연결을 사용할 수 있는지 여부를 나타내는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;controlType &lt;/code&gt;</ph>is not the same type as the consumer control (or a valid class derived from it).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;controlType &lt;/code&gt;</ph>소비자 컨트롤로 동일한 형식이 아닙니다 (또는 잘못 된 클래스에서 파생 된).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Invokes the callback method in a consumer control and retrieves the interface instance from a provider control.</source>
          <target state="translated">소비자 컨트롤에 콜백 메서드를 호출 하 고 공급자 컨트롤에서 인터페이스 인스턴스를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method receives an interface instance from a provider that contains data for the consumer control.</source>
          <target state="translated">이 메서드는 소비자 컨트롤에 대 한 데이터를 포함 하는 공급자에서 인터페이스 인스턴스를 받습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetObject method is called by &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; objects when a connection is being activated.</source>
          <target state="translated">SetObject 메서드를 호출 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;개체는 연결을 활성화 하는 중입니다.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a critical step that is part of initiating a connection and enabling two controls to share data.</source>
          <target state="translated">이 연결을 시작 하 고 두 개의 컨트롤이 데이터를 공유할 수 있도록 포함 된 중요 한 단계입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The consumer control in a connection must be able to work with the same type of interface as the provider.</source>
          <target state="translated">연결의 소비자 컨트롤 공급자와 같은 유형의 인터페이스 작업할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it does not, the controls are incompatible and a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt; object must be used to establish a connection.</source>
          <target state="translated">그렇지 않은 경우 컨트롤이 호환 되 고 &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;개체 연결을 설정 하는 데 사용 해야 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The consumer control associated with a consumer connection point.</source>
          <target state="translated">소비자 연결 지점에 대 한 연결 소비자 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The interface instance returned from a provider control.</source>
          <target state="translated">인터페이스 인스턴스가 공급자 컨트롤에서 반환 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Determines whether a consumer connection point is currently capable of establishing a connection.</source>
          <target state="translated">현재 연결을 설정할 수 있는 소비자 연결 지점 인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SupportsConnection method as implemented always returns <ph id="ph1">`true`</ph> in all cases for the &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; class.</source>
          <target state="translated">항상 반환 구현 된 대로 SupportsConnection 메서드 <ph id="ph1">`true`</ph> &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;클래스&lt;/xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; 에 대 한 모든 경우</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The intent for this method is to have it check on the state of <ph id="ph1">`control`</ph> and <ph id="ph2">`secondaryInterfaces`</ph> at certain critical points to determine whether a &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; object is presently able to create a connection.</source>
          <target state="translated">상태를 확인 하 게 하는이 메서드에 대 한 <ph id="ph1">`control`</ph> 및 <ph id="ph2">`secondaryInterfaces`</ph> 확인 하려면 특정 중요 시점에서 여부는 &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;개체를 현재 연결을 만들 수 있습니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>There can be scenarios where <ph id="ph1">`control`</ph> is in a state that would make it impossible to form a connection, or where <ph id="ph2">`secondaryInterfaces`</ph> must exist before a connection can be formed.</source>
          <target state="translated">시나리오가 있을 수 있습니다 위치 <ph id="ph1">`control`</ph> 있도록 하는 연결을 불가능 한 상태 또는 where <ph id="ph2">`secondaryInterfaces`</ph> 한 연결을 구성할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such cases, developers can inherit from the &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; class, and override the SupportsConnection method, providing a custom implementation to determine when the connection point is ready to support connections.</source>
          <target state="translated">이 경우 개발자가에서 상속할 수는 &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;클래스와 연결점 연결을 지원할 준비가 되었는지 확인 하는 사용자 지정 구현을 제공 하는 SupportsConnection 메서드를 재정의 합니다.&lt;/xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The consumer control associated with the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">와 연결 된 소비자 컨트롤은 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of any secondary interfaces that participate in a connection.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연결에 참여 하는 모든 보조 인터페이스의 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a connection point can currently establish a connection; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>연결 지점이 현재; 대 한 연결을 설정할 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>