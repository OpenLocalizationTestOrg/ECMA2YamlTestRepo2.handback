<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f339edd02c3979d92b047f0bc1b45ec388fc13ab</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.ConstrainedExecution.Cer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60a46297704dbfe876852964bbcc070e282e31c0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73319a3c55db493e40b60d03cc8edd6e7fdb0088</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies a method's behavior when called within a constrained execution region.</source>
          <target state="translated">제약이 있는 실행 영역 내에서 호출 하는 경우 메서드의 동작을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Cer enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</source>
          <target state="translated">Cer 열거형 메서드, 형식 또는 어셈블리 제약이 있는 실행 영역 (CER) 내에서 동작을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</source>
          <target state="translated">엔터티 성공할 지를 나타내기 위해 사용 가능한 세 가지 값 중 하나를 사용 CER를 알지 또는 명확한 성공 또는 실패를 보고 하는 일을 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</source>
          <target state="translated">CER에서는 코드 영역을 실행 하는 중단 없이 중단 된 스레드 메모리 부족 예외 또는 스택 오버플로 같은 비동기 예외가 발생 하는 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In the face of exceptional conditions, the method might fail.</source>
          <target state="translated">예외 조건이 발생할 때 메서드가 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this case, the method will report back to the calling method whether it succeeded or failed.</source>
          <target state="translated">이 경우 메서드는 다시 보고할 호출 하는 메서드로 성공 또는 실패를 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The method must have a CER around the method body to ensure that it can report the return value.</source>
          <target state="translated">메서드 반환 값을 보고할 수 있도록 하려면 메서드 본문 주위에 CER 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The method, type, or assembly has no concept of a CER.</source>
          <target state="translated">메서드, 형식 또는 어셈블리에는 CER의 개념이 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It does not take advantage of CER guarantees.</source>
          <target state="translated">Cer 기능을는 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This implies the following:</source>
          <target state="translated">이 의미는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">-</ph>   In the face of exceptional conditions the method might fail.</source>
          <target state="translated"><ph id="ph1">-</ph>예외 조건이 발생할 때 메서드가 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The method might or might not report that it failed (it is non-deterministic).</source>
          <target state="translated">-메서드 실패를 보고 하지 않을 수도 (이 명확 하지 않은).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The method is not written with CERs in mind (which is the most likely scenario).</source>
          <target state="translated">-메서드 (즉, 가장 가능성이 높은 시나리오) 염두에서 cer 기록 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as <ph id="ph1">`Cer.None`</ph>.</source>
          <target state="translated">암시적으로 표시는 메서드, 형식 또는 어셈블리에 성공 하려면 명시적으로 표시 되지 않으면, <ph id="ph1">`Cer.None`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the face of exceptional conditions, the method is guaranteed to succeed.</source>
          <target state="translated">예외 조건이 발생할 때 메서드는 성공 하도록 보장 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</source>
          <target state="translated">도를 호출 하면에서 비 CER 지역 내에서 호출 되는 메서드를 포함 하는 CER 구성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A method is successful if it accomplishes what is intended.</source>
          <target state="translated">메서드는 의도 한 대로 작업을 수행 하는 경우에 성공 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, marking &lt;xref:System.Collections.ArrayList.Count*&gt; with <ph id="ph1">`ReliabilityContractAttribute(Cer.Success)`</ph> implies that when it is run under a CER, it always returns a count of the number of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and it can never leave the internal fields in an undetermined state.</source>
          <target state="translated">예를 들어 표시 &lt;xref:System.Collections.ArrayList.Count*&gt;와 <ph id="ph1">`ReliabilityContractAttribute(Cer.Success)`</ph> CER에서 실행할 때 항상에 있는 요소의 숫자 개수를 반환 하는지 의미는 <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 하지 않은 상태에서 내부 필드를 벗어날 수 및.&lt;/xref:System.Collections.ArrayList.Count*&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>