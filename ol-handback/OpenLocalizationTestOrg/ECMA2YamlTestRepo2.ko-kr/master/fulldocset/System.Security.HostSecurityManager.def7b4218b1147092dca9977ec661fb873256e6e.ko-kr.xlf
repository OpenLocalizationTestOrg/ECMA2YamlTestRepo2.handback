<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9255093c04a3f35335b54ba254854bfb3466b95b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.HostSecurityManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2bc7a474d5cdecb828153d79ce5f390695fe117</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">604ae9aba0efbee3bae3f85208ba1d304fbc5bf5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows the control and customization of security behavior for application domains.</source>
          <target state="translated">제어 및 응용 프로그램 도메인에 대 한 보안 동작의 사용자 지정을 허용합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new &lt;xref:System.AppDomain&gt;, the common language runtime queries the &lt;xref:System.AppDomainManager&gt; for the presence of a HostSecurityManager, which participates in making security decisions for the &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">역할에 새 &lt;xref:System.AppDomain&gt;공용 언어 런타임 &lt;xref:System.AppDomainManager&gt; &lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt; 보안 결정에 참여 하는 HostSecurityManager의 존재 여부에 대 한&lt;/xref:System.AppDomainManager&gt; 쿼리&lt;/xref:System.AppDomain&gt; 를 만들 때</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Host providers should implement a host security manager that inherits from the HostSecurityManager class.</source>
          <target state="translated">호스트 공급자 HostSecurityManager 클래스에서 상속 되는 호스트 보안 관리자를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.HostSecurityManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.HostSecurityManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Determines whether an application should be executed.</source>
          <target state="translated">응용 프로그램을 실행 해야 하는지를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation calls the application security manager to determine if the application should be executed.</source>
          <target state="translated">기본 구현은 응용 프로그램을 실행 해야 하는 경우를 확인 하려면 응용 프로그램 보안 관리자를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation does not use the activator evidence.</source>
          <target state="translated">기본 구현은 활성기 증거를 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, an overridden implementation could use the activator evidence to determine the security evidence for the application domain attempting to activate the application.</source>
          <target state="translated">하지만 재정의 된 구현 응용 프로그램을 활성화 하는 응용 프로그램 도메인에 대 한 보안 증명 정보를 확인 하려면 활성기 증거를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The evidence for the application to be activated.</source>
          <target state="translated">활성화 될 응용 프로그램에 대 한 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Optionally, the evidence for the activating application domain.</source>
          <target state="translated">필요에 따라 활성 응용 프로그램 도메인에 대 한 증거입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The trust context.</source>
          <target state="translated">신뢰 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An object that contains trust information about the application.</source>
          <target state="translated">응용 프로그램에 대 한 신뢰 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;applicationEvidence&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;applicationEvidence&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object could not be found in the application evidence.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 응용 프로그램 증명에 개체를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-or-       The &lt;xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*&gt; property in the activation arguments is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는- &lt;xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*&gt;활성화 인수에는 속성은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> grant set does not contain the minimum request set specified by the <bpt id="p2">&lt;xref href="System.ActivationContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 집합 최소 요청에 지정 된 집합에 포함 하지 않는 부여는 <bpt id="p2">&lt;xref href="System.ActivationContext"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the security policy for the current application domain.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 현재 응용 프로그램 도메인에 대 한 보안 정책을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be overridden in a derived class.</source>
          <target state="translated">이 속성은 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 구현에서는 항상 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is called at &lt;xref:System.AppDomain&gt; creation time.</source>
          <target state="translated">이 속성에 호출 되 &lt;xref:System.AppDomain&gt;만든 시간입니다.&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>It allows a host to supply a policy for the current &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">현재 &lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt; 에 대 한 정책을 제공 하는 호스트 수</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>A policy level consists of the following:      -   A set of code groups organized into a single rooted tree.</source>
          <target state="translated">정책 수준은 다음으로 구성:-단일 루트 트리로 구성 되는 코드 그룹의 집합입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group.</source>
          <target state="translated">-코드 그룹에 속한 코드에 부여할 사용 권한을 지정 하기 위해 코드 그룹에서 참조 되는 명명 된 권한 집합의 집합입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A list of fully trusted assemblies.</source>
          <target state="translated">-완전 신뢰 어셈블리의 목록입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  See the Notes to Inheritors for the &lt;xref:System.Security.HostSecurityManager&gt; class for critical implementation information.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 상속자에 대 한 참조는 &lt;xref:System.Security.HostSecurityManager&gt;중요 한 구현 정보에 대 한 클래스입니다.&lt;/xref:System.Security.HostSecurityManager&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The security policy for the current application domain.</source>
          <target state="translated">현재 어플리케이션 도메인에 대 한 보안 정책입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 코드 액세스 보안 (CA) 정책에서 사용 되지 않는 사용은 <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>legacyCasPolicy<ph id="ph2">&amp;gt;</ph> element<ept id="p1">](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)</ept>.</source>
          <target state="translated">.NET Framework의 이전 버전과 호환성을 위해 CAS 정책을 사용 하려면 사용 된 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>legacyCasPolicy<ph id="ph2">&amp;gt;</ph> 요소<ept id="p1">](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the flag representing the security policy components of concern to the host.</source>
          <target state="translated">호스트에 중요 한 보안 정책 구성 요소를 나타내는 플래그를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be overridden in a derived class.</source>
          <target state="translated">이 속성은 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation always returns &lt;xref:System.Security.HostSecurityManagerOptions&gt;.</source>
          <target state="translated">기본 구현에서는 항상 &lt;xref:System.Security.HostSecurityManagerOptions&gt;.&lt;/xref:System.Security.HostSecurityManagerOptions&gt; 반환</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The derived host can change the value of this property when only a subset of the &lt;xref:System.Security.HostSecurityManagerOptions&gt; is of interest.</source>
          <target state="translated">파생 된 호스트의 하위 집합만이 속성의 값을 변경할 수는 &lt;xref:System.Security.HostSecurityManagerOptions&gt;관심.&lt;/xref:System.Security.HostSecurityManagerOptions&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The possible subsets include none, the refused set, the policy level, and assembly evidence.</source>
          <target state="translated">이러한 하위 집합 없음, 거부 된 집합, 정책 수준 및 포함 어셈블리 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies security policy components.</source>
          <target state="translated">보안 정책 구성 요소를 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Security.HostSecurityManagerOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.Security.HostSecurityManagerOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Requests a specific evidence type for the application domain.</source>
          <target state="translated">응용 프로그램 도메인에 대 한 특정 증명 정보 형식을 요청합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 구현은 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The common language runtime calls this method when evidence of the specified type is needed for the current &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">공용 언어 런타임에서 지정 된 형식의 증거 현재 &lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt; 에 필요할 때이 메서드를 호출</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value is used as host-supplied evidence, and is stored in the &lt;xref:System.AppDomain.Evidence%2A&gt; collection of the &lt;xref:System.AppDomain.CurrentDomain%2A&gt; property.</source>
          <target state="translated">반환 된 값은 호스트에서 제공한 증거로 사용 되며에 저장 되는 &lt;xref:System.AppDomain.Evidence%2A&gt;의 컬렉션은 &lt;xref:System.AppDomain.CurrentDomain%2A&gt;속성.&lt;/xref:System.AppDomain.CurrentDomain%2A&gt; &lt;/xref:System.AppDomain.Evidence%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName&gt; method to obtain the generated evidence from the collection.</source>
          <target state="translated">사용할 수는 &lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName&gt;컬렉션에서 생성 된 증명 정보를 얻는 메서드를.&lt;/xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get a callback to this method, hosts must specify the &lt;xref:System.Security.HostSecurityManagerOptions&gt; flag in the &lt;xref:System.Security.HostSecurityManager.Flags%2A&gt; property.</source>
          <target state="translated">이 메서드는 콜백을 가져오려면 호스트 지정 해야 합니다는 &lt;xref:System.Security.HostSecurityManagerOptions&gt;플래그는 &lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;속성.&lt;/xref:System.Security.HostSecurityManager.Flags%2A&gt; &lt;/xref:System.Security.HostSecurityManagerOptions&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method of generating evidence allows hosts to delay evidence generation for an &lt;xref:System.AppDomain&gt; until the evidence is needed.</source>
          <target state="translated">증명 정보를 생성 합니다.이 방법은 통해 호스트에 대 한 증거 생성을 지연 하는 &lt;xref:System.AppDomain&gt;증거 필요할 때까지.&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework version 3.5 and earlier versions, it was necessary to provide &lt;xref:System.AppDomain&gt; evidence at load time by overriding the &lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt; method.</source>
          <target state="translated">.NET Framework 버전 3.5 및 이전 버전에서 제공 하는 데 필요한 했습니다 &lt;xref:System.AppDomain&gt;재정의 하 여 로드할 때 증거는 &lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;메서드.&lt;/xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt; &lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you use GenerateAppDomainEvidence to provide evidence instead of overriding &lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;.</source>
          <target state="translated">GenerateAppDomainEvidence 사용 하 여 &lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;.&lt;/xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt; 를 재정의 하는 대신 증거를 제공 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GenerateAppDomainEvidence method is called back into only for types of evidence that the host has specified in the override of the &lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A&gt; method.</source>
          <target state="translated">GenerateAppDomainEvidence 메서드가 콜백 됩니다의 재정의에 지정 된 증명 정보 형식에 대해서만 &lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A&gt;메서드.&lt;/xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>A return value of <ph id="ph1">`null`</ph> indicates that the host cannot generate evidence of this specific type.</source>
          <target state="translated">반환 값이 <ph id="ph1">`null`</ph> 호스트가 특정 유형의 증명 정보를 생성할 수 없음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The evidence type.</source>
          <target state="translated">증명 정보 유형입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The requested application domain evidence.</source>
          <target state="translated">요청한 응용 프로그램 도메인 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Requests a specific evidence type for the assembly.</source>
          <target state="translated">어셈블리에 대 한 특정 증명 정보 형식을 요청합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 구현은 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The common language runtime calls this method when evidence of the specified type is needed for the current assembly.</source>
          <target state="translated">공용 언어 런타임에서 지정 된 형식의 증거는 현재 어셈블리에 필요할 때이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value is used as host-supplied evidence, and is stored in the &lt;xref:System.Reflection.Assembly.Evidence%2A&gt; property.</source>
          <target state="translated">반환 된 값은 호스트에서 제공한 증거로 사용 되며에 저장 되는 &lt;xref:System.Reflection.Assembly.Evidence%2A&gt;속성.&lt;/xref:System.Reflection.Assembly.Evidence%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName&gt; method to obtain the generated evidence from the &lt;xref:System.Reflection.Assembly.Evidence%2A&gt; property.</source>
          <target state="translated">사용할 수는 &lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName&gt;에서 생성 된 증명 정보를 얻는 메서드를는 &lt;xref:System.Reflection.Assembly.Evidence%2A&gt;속성.&lt;/xref:System.Reflection.Assembly.Evidence%2A&gt; &lt;/xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get a callback to this method, hosts must specify the &lt;xref:System.Security.HostSecurityManagerOptions&gt; flag in the &lt;xref:System.Security.HostSecurityManager.Flags%2A&gt; property.</source>
          <target state="translated">이 메서드는 콜백을 가져오려면 호스트 지정 해야 합니다는 &lt;xref:System.Security.HostSecurityManagerOptions&gt;플래그는 &lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;속성.&lt;/xref:System.Security.HostSecurityManager.Flags%2A&gt; &lt;/xref:System.Security.HostSecurityManagerOptions&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method of generating evidence allows hosts to delay evidence generation for an &lt;xref:System.AppDomain&gt; until the evidence is needed.</source>
          <target state="translated">증명 정보를 생성 합니다.이 방법은 통해 호스트에 대 한 증거 생성을 지연 하는 &lt;xref:System.AppDomain&gt;증거 필요할 때까지.&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 3.5 and earlier versions, it was necessary to provide &lt;xref:System.AppDomain&gt; evidence at load time by overriding the &lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt; method.</source>
          <target state="translated">.NET Framework 3.5 및 이전 버전에서 제공 하는 데 필요한 했습니다 &lt;xref:System.AppDomain&gt;재정의 하 여 로드할 때 증거는 &lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;메서드.&lt;/xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt; &lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you use GenerateAssemblyEvidence to provide evidence instead of overriding &lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;.</source>
          <target state="translated">GenerateAssemblyEvidence 사용 하 여 &lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;.&lt;/xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt; 를 재정의 하는 대신 증거를 제공 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GenerateAssemblyEvidence method is called back into only for types of evidence that the host has specified in the override of the &lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A&gt; method.</source>
          <target state="translated">GenerateAssemblyEvidence 메서드가 콜백 됩니다의 재정의에 지정 된 증명 정보 형식에 대해서만 &lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A&gt;메서드.&lt;/xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>A return value of <ph id="ph1">`null`</ph> indicates that the host cannot generate evidence of this specific type.</source>
          <target state="translated">반환 값이 <ph id="ph1">`null`</ph> 호스트가 특정 유형의 증명 정보를 생성할 수 없음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The evidence type.</source>
          <target state="translated">증명 정보 유형입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The target assembly.</source>
          <target state="translated">대상 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The requested assembly evidence.</source>
          <target state="translated">요청한 어셈블리 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Determines which evidence types the host can supply for the application domain, if requested.</source>
          <target state="translated">요청 호스트 응용 프로그램 도메인에서 제공할 수 있는 증명 정보 형식을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 구현은 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The types returned by this method determine whether the &lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt; method is called back into.</source>
          <target state="translated">이 메서드에서 반환 된 형식이 결정 여부는 &lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;메서드를 다시 호출 됩니다.&lt;/xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</source>
          <target state="translated">호스트는이 증거 유형을 생성할 수 있어야 하지만 할 수 있습니다이 목록에 있는 형식의 존재를 의미 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For that reason, it is best to over-specify rather than under-specify the types in this list.</source>
          <target state="translated">이 이유로, 아래에서-지정이 목록의 유형 보다는 과도 하 게 지정 하 가장 좋습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An array of evidence types.</source>
          <target state="translated">증거 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Determines which evidence types the host can supply for the assembly, if requested.</source>
          <target state="translated">요청 호스트 된 어셈블리에 대해 제공할 수 있는 증명 정보 형식을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본 구현은 반환 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The types returned by this method determine whether the &lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt; method is called back into.</source>
          <target state="translated">이 메서드에서 반환 된 형식이 결정 여부는 &lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;메서드를 다시 호출 됩니다.&lt;/xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</source>
          <target state="translated">호스트는이 증거 유형을 생성할 수 있어야 하지만 할 수 있습니다이 목록에 있는 형식의 존재를 의미 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For that reason, it is best to over-specify rather than under-specify the types in this list.</source>
          <target state="translated">이 이유로, 아래에서-지정이 목록의 유형 보다는 과도 하 게 지정 하 가장 좋습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The target assembly.</source>
          <target state="translated">대상 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An array of evidence types.</source>
          <target state="translated">증거 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Provides the application domain evidence for an assembly being loaded.</source>
          <target state="translated">로드 되는 어셈블리에 대 한 응용 프로그램 도메인 증명을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden in a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called whenever an &lt;xref:System.AppDomain&gt; object is created.</source>
          <target state="translated">이 메서드를 호출할 때마다는 &lt;xref:System.AppDomain&gt;개체가 만들어집니다.&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`inputEvidence`</ph> parameter is the computed evidence from the common language runtime.</source>
          <target state="translated"><ph id="ph1">`inputEvidence`</ph> 매개 변수는 공용 언어 런타임에서 계산된 된 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host implementation can choose to extend or reduce the evidence.</source>
          <target state="translated">호스트 구현 확장 또는 축소 증거를 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is the evidence to be used for the application domain.</source>
          <target state="translated">반환 값은 응용 프로그램 도메인에 사용 되는 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation always returns the evidence object passed in as the <ph id="ph1">`inputEvidence`</ph> parameter.</source>
          <target state="translated">로 전달 된 증명 정보 개체를 반환 하는 기본 구현에서는 항상는 <ph id="ph1">`inputEvidence`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  See the Notes to Inheritors for the &lt;xref:System.Security.HostSecurityManager&gt; class for critical implementation information.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 상속자에 대 한 참조는 &lt;xref:System.Security.HostSecurityManager&gt;중요 한 구현 정보에 대 한 클래스입니다.&lt;/xref:System.Security.HostSecurityManager&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Additional evidence to add to the <bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> evidence.</source>
          <target state="translated">에 추가할 추가 증거는 <bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The evidence to be used for the <bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 사용할 증명 정보는 <bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Provides the assembly evidence for an assembly being loaded.</source>
          <target state="translated">로드 되는 어셈블리에 대 한 어셈블리 증명 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be overridden in a derived class.</source>
          <target state="translated">이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called whenever an assembly is loaded, either implicitly or explicitly.</source>
          <target state="translated">이 메서드는 암시적 또는 명시적으로 어셈블리가 로드 될 때마다 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The passed in parameters are the assembly being loaded, and the computed evidence from the common language runtime.</source>
          <target state="translated">전달 된 매개 변수는 로드 되는 어셈블리와 공용 언어 런타임에서 계산된 된 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host implementation can choose to extend or reduce the evidence.</source>
          <target state="translated">호스트 구현 확장 또는 축소 증거를 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is the evidence to be used for the assembly.</source>
          <target state="translated">반환 값은 어셈블리에 사용할 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation always returns the evidence object passed in as the <ph id="ph1">`inputEvidence`</ph> parameter.</source>
          <target state="translated">로 전달 된 증명 정보 개체를 반환 하는 기본 구현에서는 항상는 <ph id="ph1">`inputEvidence`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  See the Notes to Inheritors for the &lt;xref:System.Security.HostSecurityManager&gt; class for critical implementation information.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 상속자에 대 한 참조는 &lt;xref:System.Security.HostSecurityManager&gt;중요 한 구현 정보에 대 한 클래스입니다.&lt;/xref:System.Security.HostSecurityManager&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The loaded assembly.</source>
          <target state="translated">로드 된 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Additional evidence to add to the assembly evidence.</source>
          <target state="translated">어셈블리 증명 정보에 추가할 추가 증거입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The evidence to be used for the assembly.</source>
          <target state="translated">어셈블리에 사용할 증명 정보입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Determines what permissions to grant to code based on the specified evidence.</source>
          <target state="translated">지정한 증명 정보 기반 코드에 부여할 권한을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the security policy engine, providing it with the specified evidence.</source>
          <target state="translated">이 메서드는 지정 된 증명 정보를 제공 하는 보안 정책 엔진을 호출 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is determined by the security policy.</source>
          <target state="translated">결과 보안 정책에 의해 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The evidence set used to evaluate policy.</source>
          <target state="translated">증명 정보 집합 정책을 평가 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The permission set that can be granted by the security system.</source>
          <target state="translated">보안 시스템으로 부여할 수 있는 권한 집합입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;evidence&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;evidence&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>