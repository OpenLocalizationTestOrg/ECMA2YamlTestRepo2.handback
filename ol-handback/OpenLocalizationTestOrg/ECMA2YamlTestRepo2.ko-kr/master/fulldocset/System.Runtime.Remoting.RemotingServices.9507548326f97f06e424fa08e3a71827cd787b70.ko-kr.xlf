<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5bdb48de5895a1247744ed59bf25662733d50c8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Remoting.RemotingServices.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acdf1a6a3cc3918ce283b173876368f52bcaf68f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96deccde67963ff1df5993f16ec611eabe6ab3a7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides several methods for using and publishing remoted objects and proxies.</source>
          <target state="translated">사용 하 고 원격 개체와 프록시를 게시 하기 위한 여러 가지 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you are a service provider dealing with issues such as activation, lifetime management, or transactions, you do not need to distinguish between proxy references and object references.</source>
          <target state="translated">정품 인증, 수명 관리 또는 transactions와 같은 문제를 다루는 서비스 공급자 인 경우 하지 않는 한 프록시 참조 한 개체 참조를 구분할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remoting infrastructure uses transparent proxies that give the impression that the remote objects reside in the client's space.</source>
          <target state="translated">원격 인프라는 원격 개체는 클라이언트의 공간에 상주 하는 것 처럼 보일 투명 프록시를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Proxies achieve this by forwarding calls made on them to the real objects at remote locations.</source>
          <target state="translated">프록시는 원격 위치의 실제 개체에에 대 한 호출을 전달 하 여이 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creates a proxy for a well-known object, given the &lt;xref:System.Type&gt; and URL.</source>
          <target state="translated">지정 된 잘 알려진 개체에 대 한 프록시를 만듭니다는 &lt;xref:System.Type&gt;및 URL.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned proxy object points to an endpoint served by the specified well-known object.</source>
          <target state="translated">반환 된 프록시 개체는 지정된 된 잘 알려진 개체에서 끝점을 가리킵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>No messages are sent over the network until a method is called on the proxy.</source>
          <target state="translated">프록시에는 메서드를 호출할 때까지 메시지가 네트워크를 통해 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of a well-known object on the server end to which you want to connect.</source>
          <target state="translated">&lt;xref:System.Type&gt;연결 하려는 서버 쪽에 잘 알려진 개체의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The URL of the server class.</source>
          <target state="translated">서버 클래스의 URL입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A proxy to the remote object that points to an endpoint served by the specified well-known object.</source>
          <target state="translated">원격 개체에 지정 된 잘 알려진 개체에서 제공 하는 끝점을 가리키는 프록시입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have permission to configure remoting types and channels.</source>
          <target state="translated">직접 실행 호출자 원격 형식 및 채널을 구성할 수 있는 권한이 없는 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates a proxy for a well-known object, given the &lt;xref:System.Type&gt;, URL, and channel-specific data.</source>
          <target state="translated">지정 된 잘 알려진 개체에 대 한 프록시를 만듭니다는 &lt;xref:System.Type&gt;, URL 및 채널 관련 데이터로.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned proxy object points to an endpoint served by the specified well-known object.</source>
          <target state="translated">반환 된 프록시 개체는 지정된 된 잘 알려진 개체에서 끝점을 가리킵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>No messages are sent over the network until a method is called on the proxy.</source>
          <target state="translated">프록시에는 메서드를 호출할 때까지 메시지가 네트워크를 통해 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`data`</ph> object is used to communicate information to the channel, and is passed to the &lt;xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated"><ph id="ph1">`data`</ph> 개체는 채널에 대 한 정보를 전달 하는 데 사용 되 고 전달 되는 &lt;xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName&gt;메서드.&lt;/xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the well-known object to which you want to connect.</source>
          <target state="translated">&lt;xref:System.Type&gt;연결 하려는 잘 알려진 개체의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The URL of the well-known object.</source>
          <target state="translated">잘 알려진 개체의 URL입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Channel specific data.</source>
          <target state="translated">특정 데이터 채널입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A proxy that points to an endpoint that is served by the requested well-known object.</source>
          <target state="translated">요청된 된 잘 알려진 개체에서 제공 되는 끝점을 가리키는 프록시입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have permission to configure remoting types and channels.</source>
          <target state="translated">직접 실행 호출자 원격 형식 및 채널을 구성할 수 있는 권한이 없는 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Stops an object from receiving any further messages through the registered remoting channels.</source>
          <target state="translated">등록된 된 원격 채널을 통해 메시지를 더 이상 받을 개체를 중지 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Object to disconnect from its channel.</source>
          <target state="translated">채널에서 연결을 끊으려면 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object was disconnected from the registered remoting channels successfully; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체가 등록된 된 원격 채널에서 성공적으로 끊어진 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a proxy.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 프록시입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have permission to configure remoting types and channels.</source>
          <target state="translated">직접 실행 호출자 원격 형식 및 채널을 구성할 수 있는 권한이 없는 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Connects to the specified remote object, and executes the provided <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodCallMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on it.</source>
          <target state="translated">지정된 된 원격 개체에 연결 하 고 제공 된 실행 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodCallMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current method is used in special cases by the server to forward the specified method call to another, possibly remote, object.</source>
          <target state="translated">현재 메서드는 다른, 가능 하면 원격 개체에 지정 된 메서드 호출을 전달 하는 서버에서 특별 한 경우에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called only when the caller is in the appropriate context.</source>
          <target state="translated">이 메서드는 호출자가 적절 한 컨텍스트에 있는 경우에 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The remote object whose method you want to call.</source>
          <target state="translated">원격 개체 메서드를 호출 하려는입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A method call message to the specified remote object's method.</source>
          <target state="translated">지정된 된 원격 개체의 메서드에 메서드 호출 메시지입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The response of the remote method.</source>
          <target state="translated">원격 방법의 응답입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자를 인프라 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The method was called from a context other than the native context of the object.</source>
          <target state="translated">메서드는 개체의 네이티브 컨텍스트 이외의 컨텍스트에서 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns a chain of envoy sinks that should be used when sending messages to the remote object represented by the specified proxy.</source>
          <target state="translated">지정된 된 프록시를 나타내는 원격 개체에 메시지를 보낼 때 사용 해야 하는 엔보이 싱크 체인을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Envoy sinks are sinks sent along with the &lt;xref:System.Runtime.Remoting.ObjRef&gt; of an object that is used when returning messages to that object.</source>
          <target state="translated">엔보이 싱크는와 함께 보내는 싱크는 &lt;xref:System.Runtime.Remoting.ObjRef&gt;메시지 해당 개체를 반환할 때 사용 되는 개체입니다.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current method returns the envoy sinks that are used during communication between the proxy of the object and the object itself.</source>
          <target state="translated">현재 메서드는 개체의 프록시 및 개체 자체 간의 통신 중에 사용 되는 엔보이 싱크를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The proxy of the remote object that requested envoy sinks are associated with.</source>
          <target state="translated">엔보이 싱크를 요청 하는 원격 개체의 프록시 연관 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A chain of envoy sinks associated with the specified proxy.</source>
          <target state="translated">지정된 된 프록시 연관 엔보이 싱크 체인입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자를 인프라 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returns a lifetime service object that controls the lifetime policy of the specified object.</source>
          <target state="translated">지정된 된 개체의 수명 정책을 제어 하는 수명이 서비스 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the default lifetime service the returned object will be an object of type &lt;xref:System.Runtime.Remoting.Lifetime.ILease&gt;.</source>
          <target state="translated">기본값에 대 한 수명 서비스는 반환 된 개체 형식의 &lt;xref:System.Runtime.Remoting.Lifetime.ILease&gt;.&lt;/xref:System.Runtime.Remoting.Lifetime.ILease&gt; 개체 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`obj`</ph> parameter is <ph id="ph2">`null`</ph>, the method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`obj`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 메서드가 반환 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The object to obtain lifetime service for.</source>
          <target state="translated">에 대 한 수명 서비스를 가져올 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The object that controls the lifetime of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">수명을 제어 하는 개체 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자를 인프라 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns the method base from the given <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본 메서드를 반환 된 주어진 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This determines the method base from the &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A&gt;, &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A&gt;, and &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A&gt; properties of &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; and is used by classes implementing the &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; interface.</source>
          <target state="translated">기본 메서드를 결정는 &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A&gt;, &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A&gt;, 및 &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A&gt;의 속성 &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;및 구현 하는 클래스에서 사용 되는 &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;인터페이스.&lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consumers of &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt; classes should reference the &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">소비자가 &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;클래스를 참조 해야는 &lt;xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName&gt; &lt;/xref:System.Runtime.Remoting.Messaging.IMethodMessage&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The method message to extract the method base from.</source>
          <target state="translated">기본 메서드를 추출 하는 메서드 메시지입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The method base extracted from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">msg</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">메서드 기본에서 추출 된 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">msg</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.</source>
          <target state="translated">직접 실행 호출자 인프라 권한이 없는 또는 public이 아닌 멤버의 형식 정보를 검색할 수 있는 권한이 없는 호출 스택의 상위 호출자 중 하나 이상 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Serializes the specified marshal by reference object into the provided <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">제공 된에 참조 방식 개체에서 지정 된 마샬링 serialize <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
          <target state="translated">직렬화 할 개체입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into which the object is serialized.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 직렬화 할 대상으로 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The source and destination of the serialization.</source>
          <target state="translated">소스 및 직렬화 대상입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">info</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">info</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자를 인프라 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Retrieves the URI for the specified object.</source>
          <target state="translated">지정된 된 개체에 대 한 URI를 검색합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for which a URI is requested.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> URI를 요청에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The URI of the specified object if it has one, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object has not yet been marshaled.</source>
          <target state="translated">있는 경우 지정된 된 개체의 URI 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 아직 마샬링되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자를 인프라 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the remote object from the specified proxy.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 지정된 된 프록시는 원격 개체를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현인.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">만들기는 &lt;xref:System.Runtime.Remoting.ObjRef&gt;마샬링 라고 개체에 대 한.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 &lt;xref:System.Runtime.Remoting.ObjRef&gt;일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>During unmarshaling, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; is parsed to extract the method information of the remote object and both the transparent proxy and &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; objects are created.</source>
          <target state="translated">역마샬링 동안는 &lt;xref:System.Runtime.Remoting.ObjRef&gt;원격 개체와 투명 프록시 개체의 메서드 정보를 추출 하는 구문 분석 하 고 &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;개체가 만들어집니다.&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remote application where the object is located.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;설명 하는 정보가 포함 된 &lt;xref:System.Type&gt;는 마샬링하는 개체의 클래스, 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI 관련 개체가 있는 원격 응용 프로그램에 도달 하는 방법에 대 한 정보 및.&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A proxy connected to the object you want to create a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for.</source>
          <target state="translated">만들려는 개체에 연결 되어 있는 프록시는 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the remote object the specified proxy is connected to, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the object or proxy have not been marshaled.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 프록시를 연결할 원격 개체를 나타내는 또는 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체 또는 프록시 마샬링되지 않은 한 경우.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자를 인프라 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Returns the real proxy backing the specified transparent proxy.</source>
          <target state="translated">지정 된 투명 프록시를 지 원하는 실제 프록시를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>A client that uses an object across any kind of remoting boundary is actually using a transparent proxy for the object.</source>
          <target state="translated">모든 종류의 원격 경계에서 개체를 사용 하는 클라이언트 투명 프록시를 사용 하 여 개체에 대 한 실제로 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transparent proxy gives the impression that the actual object resides in the client's space.</source>
          <target state="translated">투명 프록시 실제 개체가 있는 클라이언트의 공간에는 느낄을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</source>
          <target state="translated">에 원격 인프라를 사용 하 여 실제 개체에 대 한 호출을 전달 하 여 얻습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transparent proxy is backed by an instance of a managed runtime class of type &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;.</source>
          <target state="translated">투명 프록시 &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;.&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt; 형식의 관리 되는 런타임 클래스의 인스턴스에 의해 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; implements a part of the functionality needed to forward the operations from the transparent proxy.</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;투명 프록시에서 작업을 전달 하는 데 필요한 기능 중 일부를 구현 합니다.&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes.</source>
          <target state="translated">프록시 개체는 가비지 수집, 멤버 및 방법에 대 한 지원 등의 관리 되는 개체의 관련된 의미를 상속 하 고 클래스를 만들기 위해 새 확장 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The proxy acts as an object of the same class as the remote object (transparent proxy), and is also a managed object.</source>
          <target state="translated">프록시 역할을 원격 개체 (투명 프록시)와 같은 클래스의 개체 및 관리 되는 개체 이기도 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A transparent proxy.</source>
          <target state="translated">투명 프록시입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The real proxy instance backing the transparent proxy.</source>
          <target state="translated">투명 프록시를 지 원하는 실제 프록시 인스턴스.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자를 인프라 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Returns the &lt;xref:System.Type&gt; of the object with the specified URI.</source>
          <target state="translated">반환 된 &lt;xref:System.Type&gt;URI가 지정된 된 개체의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because remoting identifies endpoints using URIs, the GetServerTypeForUri method is very useful in the pluggable parts of the remoting infrastructure (for example, channel sinks, dynamic sinks, and context sinks) that use &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt; objects, because the current method will return the associated type object from the URI.</source>
          <target state="translated">Uri를 사용 하는 끝점을 식별 하는 원격 작업, GetServerTypeForUri 메서드를 사용 하는 플러그형 원격 인프라 (예: 채널 싱크, 동적 싱크 및 컨텍스트 싱크) 일부에 매우 유용 &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;개체를 현재 메서드를 URI에서 연결 된 형식 개체를 반환 합니다.&lt;/xref:System.Runtime.Remoting.Messaging.IMessage&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The URI of the object whose &lt;xref:System.Type&gt; is requested.</source>
          <target state="translated">개체의 URI 인 &lt;xref:System.Type&gt;요청.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the object with the specified URI.</source>
          <target state="translated">&lt;xref:System.Type&gt;URI가 지정된 된 개체의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.</source>
          <target state="translated">직접 실행 호출자 인프라 권한이 없는 또는 public이 아닌 멤버의 형식 정보를 검색할 수 있는 권한이 없는 호출 스택의 상위 호출자 중 하나 이상 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Retrieves a session ID for a message.</source>
          <target state="translated">메시지에 대 한 세션 ID를 검색합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same session ID might be returned for objects in the same application, but this method will never return the same session ID for two objects in different remote applications.</source>
          <target state="translated">동일한 세션 ID는 동일한 응용 프로그램의 개체에 대해 반환 될 수 있습니다 하지만이 메서드는 다른 원격 응용 프로그램에서 두 개체에 대해 동일한 세션 ID를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about identifying sessions and session IDs, see ASP.Net <bpt id="p1">[</bpt>ASP.NET Session State Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">세션 및 세션 Id 식별 하는 방법에 대 한 자세한 내용은 참조 ASP.Net <bpt id="p1">[</bpt>ASP.NET 세션 상태 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodMessage"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for which a session ID is requested.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.Messaging.IMethodMessage"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 세션 ID를 요청에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A session ID string that uniquely identifies the current session.</source>
          <target state="translated">현재 세션을 고유 하 게 식별 하는 세션 ID 문자열입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자를 인프라 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the method in the given message is overloaded.</source>
          <target state="translated">지정된 된 메시지의 메서드는 오버 로드 여부를 나타내는 부울 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The message that contains a call to the method in question.</source>
          <target state="translated">해당 메서드에 대 한 호출을 포함 하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method called in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">msg</ph><ept id="p2">&lt;/code&gt;</ept> is overloaded; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메서드가 호출 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">msg</ph> <ept id="p2">&lt;/code&gt;</ept> 그렇지 않으면 오버 로드 된 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자를 인프라 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the object specified by the given transparent proxy is contained in a different application domain than the object that called the current method.</source>
          <target state="translated">지정 된 투명 프록시에 의해 지정 된 개체가 현재 메서드를 호출 하는 개체와는 다른 응용 프로그램 도메인에 포함 되는지 여부를 나타내는 부울 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about application domains, see <bpt id="p1">[</bpt>Application Domains<ept id="p1">](http://msdn.microsoft.com/en-us/39e57d07-a740-4cd4-ae82-e119ea3856c1)</ept>.</source>
          <target state="translated">응용 프로그램 도메인에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>응용 프로그램 도메인<ept id="p1">](http://msdn.microsoft.com/en-us/39e57d07-a740-4cd4-ae82-e119ea3856c1)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The object to check.</source>
          <target state="translated">검사할 개체입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object is out of the current application domain; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체가 현재 응용 프로그램 도메인; 부족 한 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the object represented by the given proxy is contained in a different context than the object that called the current method.</source>
          <target state="translated">개체가 지정 된 프록시를 나타내는 현재 메서드를 호출한 개체가 아닌 다른 컨텍스트에 포함 되는지 여부를 나타내는 부울 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>A context is an ordered sequence of properties that define an environment for the objects that reside inside it.</source>
          <target state="translated">컨텍스트는 한 일련의 내부에 상주 하는 개체에 대 한 환경을 정의 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time activation, security, and so on.</source>
          <target state="translated">컨텍스트는 자동 서비스 이러한 동기화, 트랜잭션, 적시에 정품 인증, 보안, 및 등을 요구 하도록 구성 하는 개체에 대 한 정품 인증 과정 중에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple objects can live inside a context.</source>
          <target state="translated">여러 개체는 컨텍스트 내에 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The object to check.</source>
          <target state="translated">검사할 개체입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object is out of the current context; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체를 현재 컨텍스트를 벗어나는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the client that called the method specified in the given message is waiting for the server to finish processing the method before continuing execution.</source>
          <target state="translated">메서드 실행을 계속 하기 전에 처리를 완료 하려면 서버에 대 한 지정된 된 메시지를 기다리고 메서드를 호출한 클라이언트에 지정 되었는지 여부를 나타내는 부울 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a one-way method is called, the client does not wait for the server to finish processing the message.</source>
          <target state="translated">단방향 메서드를 호출 하는 경우에 메시지 처리를 완료 하려면 서버에 대 한 클라이언트 기다리지 않습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client method returns to the application with no knowledge of whether or not the server will successfully process the message.</source>
          <target state="translated">클라이언트 메서드는 서버에서 메시지를 처리 했습니다. 여부의 정보가 전혀 없는 응용 프로그램에 반환 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods are marked as one way using the &lt;xref:System.Runtime.Remoting.Messaging.OneWayAttribute&gt;.</source>
          <target state="translated">메서드는 &lt;xref:System.Runtime.Remoting.Messaging.OneWayAttribute&gt;.&lt;/xref:System.Runtime.Remoting.Messaging.OneWayAttribute&gt; 를 사용 하 여 한 가지 방법으로 표시</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>One-way methods cannot have a return value or any out parameters.</source>
          <target state="translated">단방향 메서드는 반환 값 또는 out 매개 변수를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The method in question.</source>
          <target state="translated">해당 하는 메서드.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method is one way; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>방법이 한 가지 방법은; 인 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
          <target state="translated">직접 실행 호출자를 인프라 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether the given object is a transparent proxy or a real object.</source>
          <target state="translated">지정된 된 개체는 투명 프록시 또는 실제 개체 인지 여부를 나타내는 부울 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object.</source>
          <target state="translated">모든 종류의 원격 경계에서 개체를 사용 하는 클라이언트 투명 프록시를 사용 하 여 개체에 대 한 실제로 됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transparent proxy gives the impression that the actual object resides in the client's space.</source>
          <target state="translated">투명 프록시 실제 개체가 있는 클라이언트의 공간에는 느낄을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</source>
          <target state="translated">에 원격 인프라를 사용 하 여 실제 개체에 대 한 호출을 전달 하 여 얻습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transparent proxy is itself housed by an instance of a managed runtime class of type &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;.</source>
          <target state="translated">투명 프록시는 자체 관리 &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;.&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt; 형식의 관리 되는 런타임 클래스의 인스턴스</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; implements a part of the functionality needed to forward the operations from the transparent proxy.</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;투명 프록시에서 작업을 전달 하는 데 필요한 기능 중 일부를 구현 합니다.&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes.</source>
          <target state="translated">프록시 개체는 가비지 수집, 멤버 및 방법에 대 한 지원 등의 관리 되는 개체의 관련된 의미를 상속 하 고 클래스를 만들기 위해 새 확장 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus the proxy has a dual nature; on the one hand it needs to act as an object of the same class as the remote object (transparent proxy), and on the other it is a managed object itself.</source>
          <target state="translated">따라서 프록시에는 이중 특성이 있습니다. 반면에 원격 개체 (투명 프록시)와 같은 클래스의 개체 역할을 해야 하 고 다른 개체인 경우 관리 되는 자체입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>A proxy object can be used without regard to any remoting subdivisions within a &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">프록시 개체에 &lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt; 내 원격 창 나누기에 관계 없이 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications need not distinguish between proxy references and object references.</source>
          <target state="translated">응용 프로그램 프록시 참조 한 개체 참조를 구분 하지 않습니다 필요 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, service providers dealing with issues such as activation, lifetime management, and transactions need to make such distinctions.</source>
          <target state="translated">그러나 활성화 등의 문제를 다룰 서비스 공급자 수명 관리 및 트랜잭션 해야 차이점을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The reference to the object to check.</source>
          <target state="translated">확인할 개체에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A Boolean value that indicates whether the object specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">proxy</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a transparent proxy or a real object.</source>
          <target state="translated">에 지정 된 개체가 있는지 여부를 나타내는 부울 값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">proxy</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 투명 프록시 또는 실제 개체입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Logs the stage in a remoting exchange to an external debugger.</source>
          <target state="translated">외부 디버거에 원격 교환의 스테이지를 기록합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`"REMOTING_PERF"`</ph> preprocessing symbol is applied to the method by using the &lt;xref:System.Diagnostics.ConditionalAttribute&gt; attribute.</source>
          <target state="translated">A <ph id="ph1">`"REMOTING_PERF"`</ph> 전처리 기호를 사용 하 여 메서드에 적용 되는 &lt;xref:System.Diagnostics.ConditionalAttribute&gt;특성.&lt;/xref:System.Diagnostics.ConditionalAttribute&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An internally defined constant that identifies the stage in a remoting exchange.</source>
          <target state="translated">원격 교환의 단계를 식별 하는 내부적으로 정의 된 상수입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Takes a <bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, registers it with the remoting infrastructure, and converts it into an instance of the <bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">사용 된 <bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 원격 인프라를 등록 하 고의 인스턴스로 변환는 <bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현인.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">만들기는 &lt;xref:System.Runtime.Remoting.ObjRef&gt;마샬링 라고 개체에 대 한.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 &lt;xref:System.Runtime.Remoting.ObjRef&gt;일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;설명 하는 정보가 포함 되어는 &lt;xref:System.Type&gt;및 클래스는 마샬링하는 개체의 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI 관련 개체가 위치한 원격 하위 영역에 도달 하는 방법에 대 한 정보.&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>During marshaling, the context from the current thread is used, not the context that was active when the object was created.</source>
          <target state="translated">마샬링을 하는 동안 현재 스레드에서 컨텍스트를 사용, 컨텍스트가 아닌 때 활성화 되었던 개체가 만들어진 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a URI was not explicitly set by the &lt;xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A&gt; method, it is automatically generated by the remoting identity infrastructure.</source>
          <target state="translated">URI 명시적으로 설정 되지 않은 경우는 &lt;xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A&gt;메서드를 원격 id 인프라에서 자동으로 생성 됩니다.&lt;/xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</source>
          <target state="translated">두 가지 이유 중 하나에 대 한 프록시를 사용한 URI를 연결할 수 없습니다:을 나타내는 개체에 대 한 서버 쪽에서 생성 된 URI 또는 URI를 알 경우 개체는 잘 알려져 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, if the <ph id="ph1">`Obj`</ph> parameter is a proxy, an exception will be thrown.</source>
          <target state="translated">이 경우는 <ph id="ph1">`Obj`</ph> 매개 변수는 프록시, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</source>
          <target state="translated">사용자 지정 프록시에 대 한 투명 프록시 서버 개체 처리 되기 때문에 이러한 제한이 완화 됩니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
          <target state="translated">변환할 개체입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that represents the object specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">Obj</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">인스턴스는 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 개체를 나타내는 클래스는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">Obj</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an object proxy.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">Obj</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 개체 프록시입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">원격 형식 및 채널을 구성할 수 있는 권한을는 호출 스택의 상위 호출자 중 하나 이상 없습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Converts the given <bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into an instance of the <bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class with the specified URI.</source>
          <target state="translated">변환 된 주어진 <bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 인스턴스로 <bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> URI가 지정된 된 클래스.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현인.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">만들기는 &lt;xref:System.Runtime.Remoting.ObjRef&gt;마샬링 라고 개체에 대 한.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 &lt;xref:System.Runtime.Remoting.ObjRef&gt;일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;설명 하는 정보가 포함 되어는 &lt;xref:System.Type&gt;및 클래스는 마샬링하는 개체의 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI 관련 개체가 위치한 원격 하위 영역에 도달 하는 방법에 대 한 정보.&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>During marshaling, the context from the current thread is used, not the context that was active when the object was created.</source>
          <target state="translated">마샬링을 하는 동안 현재 스레드에서 컨텍스트를 사용, 컨텍스트가 아닌 때 활성화 되었던 개체가 만들어진 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</source>
          <target state="translated">두 가지 이유 중 하나에 대 한 프록시를 사용한 URI를 연결할 수 없습니다:을 나타내는 개체에 대 한 서버 쪽에서 생성 된 URI 또는 URI를 알 경우 개체는 잘 알려져 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, if the <ph id="ph1">`Obj`</ph> parameter is a proxy, an exception will be thrown.</source>
          <target state="translated">이 경우는 <ph id="ph1">`Obj`</ph> 매개 변수는 프록시, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</source>
          <target state="translated">사용자 지정 프록시에 대 한 투명 프록시 서버 개체 처리 되기 때문에 이러한 제한이 완화 됩니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
          <target state="translated">변환할 개체입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The specified URI with which to initialize the new <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 초기화 하는 지정된 된 URI <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that represents the object specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">Obj</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">인스턴스는 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 개체를 나타내는 클래스는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">Obj</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Obj&lt;/code&gt;</ph> is an object proxy, and the <ph id="ph2">&lt;code&gt;URI&lt;/code&gt;</ph> parameter is not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Obj&lt;/code&gt;</ph>한 개체 프록시가 및 <ph id="ph2">&lt;code&gt;URI&lt;/code&gt;</ph> 매개 변수가 않습니다 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">원격 형식 및 채널을 구성할 수 있는 권한을는 호출 스택의 상위 호출자 중 하나 이상 없습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Takes a <bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and converts it into an instance of the <bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class with the specified URI, and the provided &lt;xref:System.Type&gt;.</source>
          <target state="translated">사용 된 <bpt id="p1">&lt;xref href="System.MarshalByRefObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 인스턴스로 변환 하 고는 <bpt id="p2">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> URI 및 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 제공 된 지정 된 클래스</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현인.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">만들기는 &lt;xref:System.Runtime.Remoting.ObjRef&gt;마샬링 라고 개체에 대 한.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 &lt;xref:System.Runtime.Remoting.ObjRef&gt;일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;설명 하는 정보가 포함 되어는 &lt;xref:System.Type&gt;및 클래스는 마샬링하는 개체의 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI 관련 개체가 위치한 원격 하위 영역에 도달 하는 방법에 대 한 정보.&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified &lt;xref:System.Type&gt; is used by the remoting infrastructure to limit the scope of the exposed type hierarchy.</source>
          <target state="translated">지정 된 &lt;xref:System.Type&gt;원격 인프라 노출 된 형식 계층 구조의 범위를 제한 하는 데 사용 합니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if object A derives from object B, which derives from object C, and &lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt; is called, then the client can cast the proxy between C and B but not to A.       During marshaling, the context from the current thread is used, not the context that was active when the object was created.</source>
          <target state="translated">예를 들어 개체 A B C 개체에서 파생 되는 개체에서 파생 &lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt;호출 된 경우, 다음 클라이언트 파생 된 a 있지만 B와 C 간의       컨텍스트가 아닌 때 활성화 되었던 개체가 만들어진, 마샬링을 하는 동안 현재 스레드에서 컨텍스트를 사용 합니다.&lt;/xref:System.Runtime.Remoting.RemotingServices.Marshal%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</source>
          <target state="translated">두 가지 이유 중 하나에 대 한 프록시를 사용한 URI를 연결할 수 없습니다:을 나타내는 개체에 대 한 서버 쪽에서 생성 된 URI 또는 URI를 알 경우 개체는 잘 알려져 있습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, if the <ph id="ph1">`Obj`</ph> parameter is a proxy, an exception will be thrown.</source>
          <target state="translated">이 경우는 <ph id="ph1">`Obj`</ph> 매개 변수는 프록시, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</source>
          <target state="translated">사용자 지정 프록시에 대 한 투명 프록시 서버 개체 처리 되기 때문에 이러한 제한이 완화 됩니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The object to convert into a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">으로 변환 하는 개체는 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The URI the object specified in the <ph id="ph1">`Obj`</ph> parameter is marshaled with.</source>
          <target state="translated">URI에 지정 된 개체는 <ph id="ph1">`Obj`</ph> 와 매개 변수는 마샬링됩니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt;<ph id="ph1">`Obj`</ph> is marshaled as.</source>
          <target state="translated">&lt;xref:System.Type&gt; <ph id="ph1">`Obj`</ph> 로 마샬링됩니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>An instance of the <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that represents the object specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">Obj</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">인스턴스는 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 개체를 나타내는 클래스는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">Obj</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Obj&lt;/code&gt;</ph> is a proxy of a remote object, and the <ph id="ph2">&lt;code&gt;ObjUri&lt;/code&gt;</ph> parameter is not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;Obj&lt;/code&gt;</ph>원격 개체의 프록시 및 <ph id="ph2">&lt;code&gt;ObjUri&lt;/code&gt;</ph> 매개 변수가 않습니다 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">원격 형식 및 채널을 구성할 수 있는 권한을는 호출 스택의 상위 호출자 중 하나 이상 없습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Sets the URI for the subsequent call to the &lt;xref:System.Runtime.Remoting.RemotingServices.Marshal*&gt; method.</source>
          <target state="translated">설정에 대 한 후속 호출에 대 한 URI는 &lt;xref:System.Runtime.Remoting.RemotingServices.Marshal*&gt;메서드.&lt;/xref:System.Runtime.Remoting.RemotingServices.Marshal*&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The object to set a URI for.</source>
          <target state="translated">에 대 한 URI를 설정 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The URI to assign to the specified object.</source>
          <target state="translated">지정된 된 개체에 할당할 URI입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph> is not a local object, has already been marshaled, or the current method has already been called on.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph>로컬 개체가 아니라 이미 마샬링 또는 현재 메서드가 이미 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">원격 형식 및 채널을 구성할 수 있는 권한을는 호출 스택의 상위 호출자 중 하나 이상 없습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Takes a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and creates a proxy object out of it.</source>
          <target state="translated">사용 된 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 프록시 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현인.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">만들기는 &lt;xref:System.Runtime.Remoting.ObjRef&gt;마샬링 라고 개체에 대 한.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 &lt;xref:System.Runtime.Remoting.ObjRef&gt;일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>During unmarshaling, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; is parsed to extract the method information of the remote object and both the transparent proxy and &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; objects are created.</source>
          <target state="translated">역마샬링 동안는 &lt;xref:System.Runtime.Remoting.ObjRef&gt;원격 개체와 투명 프록시 개체의 메서드 정보를 추출 하는 구문 분석 하 고 &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;개체가 만들어집니다.&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content of the parsed &lt;xref:System.Runtime.Remoting.ObjRef&gt; is added to the transparent proxy before the transparent proxy is registered with the common language runtime.</source>
          <target state="translated">구문 분석 된 내용의 &lt;xref:System.Runtime.Remoting.ObjRef&gt;투명 프록시는 공용 언어 런타임에 등록 되기 전에 투명 프록시에 추가 됩니다.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;설명 하는 정보가 포함 되어는 &lt;xref:System.Type&gt;및 클래스는 마샬링하는 개체의 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI 관련 개체가 위치한 원격 하위 영역에 도달 하는 방법에 대 한 정보.&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the remote object for which the proxy is being created.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 프록시를 만들 원격 개체를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A proxy to the object that the given <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents.</source>
          <target state="translated">개체에 대 한 프록시 하는 지정 된 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 나타냅니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">objectRef</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not well-formed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 인스턴스에 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">objectRef</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수 형식이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">원격 형식 및 채널을 구성할 수 있는 권한을는 호출 스택의 상위 호출자 중 하나 이상 없습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Takes a <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and creates a proxy object out of it, refining it to the type on the server.</source>
          <target state="translated">사용 된 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 서버에 형식으로 구체화을 옵트아웃 프록시에 대 한 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; is a serializable representation of an object used to transfer an object reference across an application domain boundary.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;응용 프로그램 도메인 경계를 넘어 개체 참조를 전송 하는 데 사용 되는 개체의 직렬화 가능 표현인.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating a &lt;xref:System.Runtime.Remoting.ObjRef&gt; for an object is known as marshaling.</source>
          <target state="translated">만들기는 &lt;xref:System.Runtime.Remoting.ObjRef&gt;마샬링 라고 개체에 대 한.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Remoting.ObjRef&gt; can be transferred through a channel into another application domain (possibly on another process or computer).</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.ObjRef&gt;채널을 통해 다른 응용 프로그램 도메인에 전송할 수 있습니다 (수에 다른 프로세스 또는 컴퓨터).&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once in the other application domain, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; must be parsed to create a proxy for the object, generally connected to the real object.</source>
          <target state="translated">다른 응용 프로그램 도메인에서 한 번의 &lt;xref:System.Runtime.Remoting.ObjRef&gt;일반적으로 실제 개체에 연결 하는 개체에 대 한 프록시를 만드는 구문 분석 되어야 합니다.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation is known as unmarshaling.</source>
          <target state="translated">이 작업을 역마샬링 라고 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>During unmarshaling, the &lt;xref:System.Runtime.Remoting.ObjRef&gt; is parsed to extract the method information of the remote object and both the transparent proxy and &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt; objects are created.</source>
          <target state="translated">역마샬링 동안는 &lt;xref:System.Runtime.Remoting.ObjRef&gt;원격 개체와 투명 프록시 개체의 메서드 정보를 추출 하는 구문 분석 하 고 &lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;개체가 만들어집니다.&lt;/xref:System.Runtime.Remoting.Proxies.RealProxy&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content of the parsed &lt;xref:System.Runtime.Remoting.ObjRef&gt; is added to the transparent proxy before the transparent proxy is registered with the common language runtime.</source>
          <target state="translated">구문 분석 된 내용의 &lt;xref:System.Runtime.Remoting.ObjRef&gt;투명 프록시는 공용 언어 런타임에 등록 되기 전에 투명 프록시에 추가 됩니다.&lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.ObjRef&gt; contains information that describes the &lt;xref:System.Type&gt; and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</source>
          <target state="translated">A &lt;xref:System.Runtime.Remoting.ObjRef&gt;설명 하는 정보가 포함 되어는 &lt;xref:System.Type&gt;및 클래스는 마샬링하는 개체의 특정 개체 인스턴스 및 통신을 고유 하 게 식별 하는 URI 관련 개체가 위치한 원격 하위 영역에 도달 하는 방법에 대 한 정보.&lt;/xref:System.Type&gt; &lt;/xref:System.Runtime.Remoting.ObjRef&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>When first created, the proxy is of type &lt;xref:System.MarshalByRefObject&gt;.</source>
          <target state="translated">프록시는 &lt;xref:System.MarshalByRefObject&gt;.&lt;/xref:System.MarshalByRefObject&gt; 형식의 처음 만들 때</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>As you cast it into different types, the remoting infrastructure keeps track of the most used type to avoid loading the type unnecessarily.</source>
          <target state="translated">다른 형식으로 캐스팅 하면 원격 인프라는 추적의 종류를 불필요 하 게 부하를 방지 하려면 가장 사용 되는 형식을 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the remote object for which the proxy is being created.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 프록시를 만들 원격 개체를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to refine the proxy to the type on the server; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>프록시 서버에 형식에 적용 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>A proxy to the object that the given <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents.</source>
          <target state="translated">개체에 대 한 프록시 하는 지정 된 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 나타냅니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">objectRef</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not well-formed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 인스턴스에 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">objectRef</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수 형식이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</source>
          <target state="translated">원격 형식 및 채널을 구성할 수 있는 권한을는 호출 스택의 상위 호출자 중 하나 이상 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>