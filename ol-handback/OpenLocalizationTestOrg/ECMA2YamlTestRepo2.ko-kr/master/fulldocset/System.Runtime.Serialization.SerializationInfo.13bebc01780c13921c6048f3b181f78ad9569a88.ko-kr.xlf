<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95e09d731fa40263c9793b14f146698261873a6f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.SerializationInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e1916435b886641dda8ae0564241586537581a7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75f0265d8e8adf4966c84d647915b03eae7a7daa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Stores all the data needed to serialize or deserialize an object.</source>
          <target state="translated">Serialize 하거나 개체를 역직렬화 하는 데 필요한 모든 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is used by objects with custom serialization behavior.</source>
          <target state="translated">이 클래스는 사용자 지정 serialization 동작을 사용 하 여 개체에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt; method on either &lt;xref:System.Runtime.Serialization.ISerializable&gt; or &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt; populates the SerializationInfo store with the name, type, and value of each piece of information it wants to serialize.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;메서드 중 하나를 &lt;xref:System.Runtime.Serialization.ISerializable&gt;또는 &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;이름, 형식 및 값을 serialize 할 정보를 사용 하 여 SerializationInfo 저장소를 채웁니다.&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt; &lt;/xref:System.Runtime.Serialization.ISerializable&gt; &lt;/xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>During deserialization, the appropriate function can extract this information.</source>
          <target state="translated">역직렬화 하는 동안 적절 한 함수는이 정보를 추출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects are added to the SerializationInfo store at serialization time using the &lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A&gt; methods and extracted from the SerializationInfo store at deserialization using the &lt;xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A&gt; methods.</source>
          <target state="translated">개체 추가를 사용 하 여 serialization 때 SerializationInfo 저장소는 &lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A&gt;메서드 deserialization에 사용 하 여 SerializationInfo 저장소에서 추출 및는 &lt;xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A&gt;메서드.&lt;/xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A&gt; &lt;/xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about customizing serialization, see <bpt id="p1">[</bpt>Custom Serialization<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Serialization을 사용자 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>사용자 지정 Serialization<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 만듭니다는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; passed as the <ph id="ph1">`converter`</ph> parameter converts data from its internal representation to the form the user requested.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;변수로 전달 되는 <ph id="ph1">`converter`</ph> 매개 변수 데이터의 내부 표현에서 요청 사용자 형식으로 변환 합니다.&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The internal representation of the data within the &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; depends on the formatter that created it.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;생성 합니다. 포맷터에 의존&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 하는 내부 데이터의 내부 표현</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the object to serialize.</source>
          <target state="translated">&lt;xref:System.Type&gt;serialize 할 개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IFormatterConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during deserialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.IFormatterConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 역직렬화 중에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;converter&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;converter&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the object to serialize.</source>
          <target state="translated">&lt;xref:System.Type&gt;serialize 할 개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IFormatterConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during deserialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.IFormatterConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 역직렬화 중에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Indicates whether the object requires same token in partial trust.</source>
          <target state="translated">개체 부분 신뢰 환경에서 동일한 토큰 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adds a Boolean value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 부울 값을 추가 하는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:      <ph id="ph1">```c#   void ISerializable.GetObject(SerializationInfo info, StreamingContext context)   {      // This will not cause an exception to be thrown.      info.AddValue("ABC", true);      info.AddValue("abc", false);      // However, this will cause the SerializationException to be thrown.      info.AddValue("XYZ", true);      info.AddValue("XYZ", false);   }   ```</ph>      <ph id="ph2">```vb#   Private Sub GetObjectData(ByVal info As SerializationInfo, _   ByVal context As StreamingContext)      ' This will not cause an exception to be thrown.      info.AddValue("ABC", "upper case")      info.AddValue("abc", "lower case")      ' However, this will cause the SerializationException to be thrown.      info.AddValue("XYZ", "same case")      info.AddValue("XYZ", "same case")   End Sub   ```</ph></source>
          <target state="translated">예를 들면 다음과 같습니다.<ph id="ph1">```c#   void ISerializable.GetObject(SerializationInfo info, StreamingContext context)   {      // This will not cause an exception to be thrown.      info.AddValue("ABC", true);      info.AddValue("abc", false);      // However, this will cause the SerializationException to be thrown.      info.AddValue("XYZ", true);      info.AddValue("XYZ", false);   }   ```</ph>      <ph id="ph2">```vb#   Private Sub GetObjectData(ByVal info As SerializationInfo, _   ByVal context As StreamingContext)      ' This will not cause an exception to be thrown.      info.AddValue("ABC", "upper case")      info.AddValue("abc", "lower case")      ' However, this will cause the SerializationException to be thrown.      info.AddValue("XYZ", "same case")      info.AddValue("XYZ", "same case")   End Sub   ```</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The Boolean value to serialize.</source>
          <target state="translated">Serialize 하는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Adds an 8-bit unsigned integer value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 8 비트 부호 없는 정수 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The byte value to serialize.</source>
          <target state="translated">직렬화 하는 데 바이트 값입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Adds a Unicode character value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 유니코드 문자 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The character value to serialize.</source>
          <target state="translated">직렬화 하는 데 문자 값입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Adds a &lt;xref:System.DateTime&gt; value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">추가 &lt;xref:System.DateTime&gt;값에 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장.&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.DateTime&gt; value to serialize.</source>
          <target state="translated">&lt;xref:System.DateTime&gt;직렬화 할 값.&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Adds a decimal value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에&amp;10; 진수 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The decimal value to serialize.</source>
          <target state="translated">직렬화 하는 데&amp;10; 진수 값입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">If The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If a value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 있으면 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Adds a double-precision floating-point value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 배정밀도 부동 소수점 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The double value to serialize.</source>
          <target state="translated">Serialize 하는 double 값입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Adds a 16-bit signed integer value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 16 비트 부호 있는 정수 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Int16" name="Int16" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value to serialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Int16" name="Int16" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 직렬화 할 값입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Adds a 32-bit signed integer value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 32 비트 부호 있는 정수 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Int32" name="Int32" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value to serialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Int32" name="Int32" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 직렬화 할 값입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Adds a 64-bit signed integer value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 64 비트 부호 있는 정수 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The Int64 value to serialize.</source>
          <target state="translated">직렬화 하는 데 Int64 값입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Adds the specified object into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store, where it is associated with a specified name.</source>
          <target state="translated">지정된 된 개체에 추가 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 이름과 관련 된 경우 저장소입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object contained in the <ph id="ph1">`value`</ph> parameter is serialized as the type returned by <ph id="ph2">`value`</ph>.</source>
          <target state="translated">에 포함 된 개체는 <ph id="ph1">`value`</ph> 매개 변수에서 반환 되는 형식으로 serialize 되 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The value to be serialized.</source>
          <target state="translated">Serialize 할 값입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Any children of this object will automatically be serialized.</source>
          <target state="translated">이 개체의 모든 자식 자동으로 직렬화 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Adds an 8-bit signed integer value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 8 비트 부호 있는 정수 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Sbyte" name="Sbyte" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value to serialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Sbyte" name="Sbyte" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 직렬화 할 값입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Adds a single-precision floating-point value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 단 정밀도 부동 소수점 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The single value to serialize.</source>
          <target state="translated">직렬화 하는 데 단일 값입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Adds a 16-bit unsigned integer value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 16 비트 부호 없는 정수 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_UInt16" name="UInt16" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value to serialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_UInt16" name="UInt16" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 직렬화 할 값입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Adds a 32-bit unsigned integer value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 32 비트 부호 없는 정수 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_UInt32" name="UInt32" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value to serialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_UInt32" name="UInt32" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 직렬화 할 값입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Adds a 64-bit unsigned integer value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 64 비트 부호 없는 정수 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_UInt64" name="UInt64" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value to serialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_UInt64" name="UInt64" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 직렬화 할 값입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Adds a value into the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store, where <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> is associated with <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">name</ph><ept id="p3">&lt;/code&gt;</ept> and is serialized as being of &lt;xref:System.Type&gt;<bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">type</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
          <target state="translated">에 값을 추가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장, 여기서 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept> 관련 된 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">name</ph> <ept id="p3">&lt;/code&gt;</ept> 으로 serialize 되 고 &lt;xref:System.Type&gt; <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">type</ph> <ept id="p4">&lt;/code&gt;</ept>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The assigned type is always the type of the object, or one of its parents.</source>
          <target state="translated">할당 된 형식이 항상는 개체의 형식 또는 부모 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
          <target state="translated">두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the &lt;xref:System.Runtime.Serialization.SerializationException&gt; to be thrown.</source>
          <target state="translated">그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 &lt;xref:System.Runtime.Serialization.SerializationException&gt;throw 됩니다.&lt;/xref:System.Runtime.Serialization.SerializationException&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
          <target state="translated">나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The value to be serialized.</source>
          <target state="translated">Serialize 할 값입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Any children of this object will automatically be serialized.</source>
          <target state="translated">이 개체의 모든 자식 자동으로 직렬화 됩니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to associate with the current object.</source>
          <target state="translated">&lt;xref:System.Type&gt;현재 개체와 연결할.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This parameter must always be the type of the object itself or of one of its base classes.</source>
          <target state="translated">이 매개 변수 형식 개체 자체 또는 해당 기본 클래스 중 하나의 형식을 항상 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">type</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">type</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">값와 이미 연결 되어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets or sets the assembly name of the type to serialize during serialization only.</source>
          <target state="translated">만 직렬화 하는 동안 직렬화 하는 데 형식의 어셈블리 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AssemblyName is the same as the value returned by &lt;xref:System.Reflection.Assembly.FullName%2A&gt; property of the assembly of the containing type.</source>
          <target state="translated">이름에서 반환 된 값과 같습니다 &lt;xref:System.Reflection.Assembly.FullName%2A&gt;포함 하는 형식의 어셈블리의 속성입니다.&lt;/xref:System.Reflection.Assembly.FullName%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the assembly name that the formatter uses when serializing type information for this object.</source>
          <target state="translated">포맷터가이 개체에 대 한 형식 정보를 직렬화 할 때 사용 하는 어셈블리 이름입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The assembly name contains the name of the assembly, version, culture, and some security information about the object.</source>
          <target state="translated">어셈블리 이름에는 어셈블리, 버전, 문화권 및 개체에 대 한 보안 정보의 이름을 포함합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users who are changing the type being serialized (for example, to send a proxy for a particular type) will set the value of this property.</source>
          <target state="translated">(예: 특정 유형에 대 한 프록시를 보낼)으로 serialize 되는 형식을 변경 하 고 있는 사용자는이 속성의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Do not use this property during deserialization because the value of this property is undefined.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 이므로이 속성의 값이 정의 되지 역직렬화 하는 동안이 속성을 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The full name of the assembly of the type to serialize.</source>
          <target state="translated">Serialize 하는 형식의 어셈블리의 전체 이름입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The value the property is set to is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">속성이로 설정 된 값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets or sets the full name of the &lt;xref:System.Type&gt; to serialize.</source>
          <target state="translated">전체 이름을 가져오거나 설정 합니다.는 &lt;xref:System.Type&gt;serialize 하는 데.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FullTypeName is the same as what would be returned by calling the &lt;xref:System.Type.FullName%2A&gt; on &lt;xref:System.Type&gt;.</source>
          <target state="translated">FullTypeName는 &lt;xref:System.Type.FullName%2A&gt; &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; &lt;/xref:System.Type.FullName%2A&gt; 호출 하 여 반환 되는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the type name the formatter uses when serializing type information for this object.</source>
          <target state="translated">포맷터가이 개체에 대 한 형식 정보를 직렬화 할 때 사용 하는 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users who are changing the type to serialize (for example, to send a proxy for a particular type) will want to set the value of this property.</source>
          <target state="translated">사용자에 게 (예: 특정 유형에 대 한 프록시를 보낼) 직렬화 할 형식을 변경 하는이 속성의 값을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Do not use this property during deserialization because the value of this property is undefined.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 이므로이 속성의 값이 정의 되지 역직렬화 하는 동안이 속성을 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The full name of the type to serialize.</source>
          <target state="translated">Serialize 하는 형식의 전체 이름입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The value this property is set to is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 속성 값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Retrieves a Boolean value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">부울 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a Boolean, or can be converted to one, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값은 부울이며 또는 변환할 수 값이 반환 됩니다; 해당 하는 경우 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The Boolean value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">와 연결 된 부울 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a Boolean value.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 부울 값을 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Retrieves an 8-bit unsigned integer value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">8 비트 부호 없는 정수 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is an 8-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값이 8 비트 부호 없는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The 8-bit unsigned integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">과 관련 된 8 비트 부호 없는 정수 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to an 8-bit unsigned integer.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 8 비트 부호 없는 정수로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Retrieves a Unicode character value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">유니코드 문자 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a Unicode character, or can be converted to one, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값은 유니코드 문자 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The Unicode character associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">와 연결 된 유니코드 문자 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a Unicode character.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 유니코드 문자로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Retrieves a &lt;xref:System.DateTime&gt; value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">검색 한 &lt;xref:System.DateTime&gt;에서 값의 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장.&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a &lt;xref:System.DateTime&gt;, or can be converted to a &lt;xref:System.DateTime&gt;, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값이는 &lt;xref:System.DateTime&gt;,으로 변환 될 수는 &lt;xref:System.DateTime&gt;, 해당 값이 고, 그렇지 않으면 반환 된 한 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt; &lt;/xref:System.DateTime&gt; &lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.DateTime&gt; value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.DateTime&gt;연관 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>.&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a &lt;xref:System.DateTime&gt; value.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 변환할 수 없습니다 한 &lt;xref:System.DateTime&gt;값.&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Retrieves a decimal value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">10 진수 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a decimal, or can be converted to a decimal, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값이&amp;10; 진수, 또는 값이 반환 됩니다; 해당으로 변환 될 수 있는 경우 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A decimal value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">10 진수 값은 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a decimal.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 을&amp;10; 진수로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Retrieves a double-precision floating-point value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">배정밀도 부동 소수점 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a double, or can be converted to a double, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값이 double 또는 값이 반환 됩니다; double로 변환 될 수 있는 경우 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The double-precision floating-point value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">와 연결 된 배정밀도 부동 소수점 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a double-precision floating-point value.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 배정밀도 부동 소수점 값으로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfoEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to iterate through the name-value pairs in the <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfoEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이름-값 쌍에서 반복 하는 데는 <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function will most often be used by formatters that need to enumerate through the values before writing them out to the stream.</source>
          <target state="translated">이 함수는 스트림에 쓰기 전에 값을 열거 하는 포맷터에 의해 가장 자주 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfoEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for parsing the name-value pairs contained in the <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfoEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 포함 된 이름-값 쌍을 구문 분석에 <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Retrieves a 16-bit signed integer value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">16 비트 부호 있는 정수 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 16-bit signed integer, or can be converted to one, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값을 16 비트 부호 있는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The 16-bit signed integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">와 연결 된 16 비트 부호 있는 정수 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 16-bit signed integer.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 16 비트 부호 있는 정수로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Retrieves a 32-bit signed integer value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">32 비트 부호 있는 정수 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 32-bit signed integer, or can be converted to one, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값이 32 비트 부호 있는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The name of the value to retrieve.</source>
          <target state="translated">검색할 값의 이름입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The 32-bit signed integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">과 관련 된 32 비트 부호 있는 정수 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 32-bit signed integer.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 32 비트 부호 있는 정수로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Retrieves a 64-bit signed integer value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">64 비트 부호 있는 정수 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 64-bit signed integer, or can be converted to one, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값을 64 비트 부호 있는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The 64-bit signed integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">과 관련 된 64 비트 부호 있는 정수 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 64-bit signed integer.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 64 비트 부호 있는 정수로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Retrieves an 8-bit signed integer value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">8 비트 부호 있는 정수 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is an <ph id="ph1">`Int8`</ph>, or can be converted to an <ph id="ph2">`Int8`</ph>, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값이는 <ph id="ph1">`Int8`</ph>,으로 변환 될 수는 <ph id="ph2">`Int8`</ph>, 해당 값이 고, 그렇지 않으면 반환 된 한 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The 8-bit signed integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">과 관련 된 8 비트 부호 있는 정수 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to an 8-bit signed integer.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 8 비트 부호 있는 정수로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Retrieves a single-precision floating-point value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">단 정밀도 부동 소수점 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a single-precision floating-point number, or can be converted to one, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값이 단 정밀도 부동 소수점 숫자 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The name of the value to retrieve.</source>
          <target state="translated">검색할 값의 이름입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The single-precision floating-point value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">연결 된 단 정밀도 부동 소수점 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a single-precision floating-point value.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 단 정밀도 부동 소수점 값으로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Retrieves a &lt;xref:System.String&gt; value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">검색 한 &lt;xref:System.String&gt;에서 값의 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a &lt;xref:System.String&gt;, or can be converted to a &lt;xref:System.String&gt;, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값이는 &lt;xref:System.String&gt;,으로 변환 될 수는 &lt;xref:System.String&gt;, 해당 값이 고, 그렇지 않으면 반환 된 한 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt; &lt;/xref:System.String&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.String&gt; associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.String&gt;연관 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a &lt;xref:System.String&gt;.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Retrieves a 16-bit unsigned integer value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">16 비트 부호 없는 정수 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 16-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값이 16 비트 부호 없는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The 16-bit unsigned integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">와 연결 된 16 비트 부호 없는 정수 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 16-bit unsigned integer.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 16 비트 부호 없는 정수로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Retrieves a 32-bit unsigned integer value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">32 비트 부호 없는 정수 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 32-bit signed integer, or can be converted to one, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값이 32 비트 부호 있는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The 32-bit unsigned integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">과 관련 된 32 비트 부호 없는 정수 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 32-bit unsigned integer.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 32 비트 부호 없는 정수로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Retrieves a 64-bit unsigned integer value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">64 비트 부호 없는 정수 값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 64-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">값은 64 비트 부호 없는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 &lt;xref:System.InvalidCastException&gt;throw 됩니다.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the &lt;xref:System.Runtime.Serialization.IFormatterConverter&gt; associated with this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;이 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; 연관&lt;/xref:System.Runtime.Serialization.IFormatterConverter&gt; 하 여 모든 변환은 수행</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The 64-bit unsigned integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">과 관련 된 64 비트 부호 없는 정수 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 64-bit unsigned integer.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 64 비트 부호 없는 정수로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Retrieves a value from the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">값을 검색 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data stored in the &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; is of the type requested (or one of its derived classes), that value is returned directly.</source>
          <target state="translated">데이터에 저장 하는 경우는 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;는 요청 된 형식 (또는 해당 파생된 클래스 중 하나), 해당 값이 반환 직접.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, &lt;xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName&gt; is called to convert it to the appropriate type.</source>
          <target state="translated">그렇지 않으면 &lt;xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName&gt;적절 한 형식으로 변환 하기 위해 호출 됩니다.&lt;/xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value returned by the GetValue method can always be safely cast to the type specified in the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">GetValue 메서드에 의해 반환 된 값 수 항상 안전 하 게 캐스팅할 수에 지정 된 형식에는 <ph id="ph1">`type`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
          <target state="translated">검색할 값과 연결 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the value to retrieve.</source>
          <target state="translated">&lt;xref:System.Type&gt;검색할 값입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>If the stored value cannot be converted to this type, the system will throw a &lt;xref:System.InvalidCastException&gt;.</source>
          <target state="translated">저장 된 값이이 형식으로 변환할 수 없습니다, 시스템에 &lt;xref:System.InvalidCastException&gt;.&lt;/xref:System.InvalidCastException&gt; 을 throw 합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The object of the specified &lt;xref:System.Type&gt; associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">지정 된 개체 &lt;xref:System.Type&gt;연관 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">type</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">연결 된 값 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept> 변환할 수 없습니다 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">type</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
          <target state="translated">지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Gets whether the assembly name has been explicitly set.</source>
          <target state="translated">어셈블리 이름이 명시적으로 설정 되어 있는지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the assembly name has been explicitly set; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>어셈블리 이름; 명시적으로 설정 된 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Gets whether the full type name has been explicitly set.</source>
          <target state="translated">전체 형식 이름이 명시적으로 설정 되어 있는지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the full type name has been explicitly set; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>전체 형식 이름이; 명시적으로 설정 된 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Gets the number of members that have been added to the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> store.</source>
          <target state="translated">에 추가 된 멤버의 수를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 저장 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The number of members that have been added to the current <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">현재 추가 된 멤버 수가 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Returns the type of the object to be serialized.</source>
          <target state="translated">Serialize 할 개체의 형식을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The type of the object being serialized.</source>
          <target state="translated">Serialize 되는 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Sets the &lt;xref:System.Type&gt; of the object to serialize.</source>
          <target state="translated">설정의 &lt;xref:System.Type&gt;serialize 할 개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.Formatter&gt; is responsible for setting the &lt;xref:System.Type&gt; of the &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; instance before passing it to &lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.Formatter&gt;에는 &lt;xref:System.Type&gt; &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;인스턴스 &lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;.&lt;/xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt; 전달 하기 전에&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt; &lt;/xref:System.Type&gt; 설정&lt;/xref:System.Runtime.Serialization.Formatter&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, users who want to send proxies for their objects will need to change the type represented by this &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; instance.</source>
          <target state="translated">그러나 사용자에 게 해당 개체에 대 한 프록시를 보낼 됩니다이 표시 유형을 변경 해야 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;인스턴스.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the SetType method is equivalent to setting both the &lt;xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A&gt; and the &lt;xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A&gt;.</source>
          <target state="translated">모두 설정 &lt;xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A&gt;및 &lt;xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A&gt;.&lt;/xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A&gt; &lt;/xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A&gt; 같습니다 SetType 메서드를 사용 하 여</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the object to serialize.</source>
          <target state="translated">&lt;xref:System.Type&gt;serialize 할 개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>