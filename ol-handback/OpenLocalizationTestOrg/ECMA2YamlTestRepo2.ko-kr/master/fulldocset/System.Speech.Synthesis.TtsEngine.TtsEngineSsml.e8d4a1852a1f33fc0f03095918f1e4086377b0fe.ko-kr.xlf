<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">623fbecfc46d7e809fee89ecb073ee7e3861761a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Speech.Synthesis.TtsEngine.TtsEngineSsml.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">771e40dddb146e730a068d363a65adaa26877bea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">169046177eee553e4ae4d469b98b38840b905328</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Abstract base class to be implemented by all text to speech synthesis engines.</source>
          <target state="translated">모든 텍스트를 음성 합성 엔진이 변수로 구현 해야 하는 추상 기본 클래스.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class TtsEngineSsml.</source>
          <target state="translated">사용자 지정 텍스트 음성 변환 엔진을 생성 하려면 응용 프로그램이 항상 TtsEngineSsml 추상 기본 클래스에서 파생 된 클래스를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A properly registered implementation of TtsEngineSsml can then be used as a <ph id="ph1">`Synthesizer``Voice`</ph> by &lt;xref:System.Speech.Synthesis&gt; name space based applications.</source>
          <target state="translated">제대로 등록된 구현의 TtsEngineSsml으로 사용할 수 있습니다는 <ph id="ph1">`Synthesizer``Voice`</ph> 여 &lt;xref:System.Speech.Synthesis&gt;기반 응용 프로그램 네임 스페이스.&lt;/xref:System.Speech.Synthesis&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects inheriting from TtsEngineSsml must override the following members: &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A&gt;, &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt;, &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A&gt;, &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A&gt; and &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;.</source>
          <target state="translated">개체 TtsEngineSsml에서 상속 하는 멤버를 재정의 해야 합니다: &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A&gt;, &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt; &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A&gt; &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A&gt;및 &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;.&lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt; &lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A&gt; ,&lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A&gt; &lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt; &lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most important member of the TtsEngineSsml class to be implemented is the &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt; method.</source>
          <target state="translated">구현 해야 TtsEngineSsml 클래스의 가장 중요 한 멤버는 &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;메서드.&lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt; method is called by the infrastructures text parser receiving:      1.</source>
          <target state="translated">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;메서드는 수신 하는 인프라 텍스트 파서에서: 1.&lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A reference to the &lt;xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite&gt; interface, which provides access to system services such as even queuing and writing audio output.</source>
          <target state="translated">에 대 한 참조는 &lt;xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite&gt;도 큐 및 오디오 출력을 쓰기와 같은 시스템 서비스에 대 한 액세스를 제공 하는 인터페이스입니다.&lt;/xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>An array of &lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt; instance produced from Speech Synthesis Markup Language (SSML) input.</source>
          <target state="translated">배열을 &lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;음성 합성 Markup Language (SSML) 입력 으로부터 생성 된 인스턴스.&lt;/xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a &lt;xref:System.Speech.Synthesis.TtsEngine.FragmentState&gt; instance associated with each incoming &lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt; object.</source>
          <target state="translated">음성 렌더링할 텍스트 뿐만 아니라 음성의의 요청된 된 특성에 대 한 정보를 저장 된 SSML을 구문 분석 한 &lt;xref:System.Speech.Synthesis.TtsEngine.FragmentState&gt;각 들어오는와 연결 된 인스턴스가 &lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;개체.&lt;/xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt; &lt;/xref:System.Speech.Synthesis.TtsEngine.FragmentState&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>A speech synthesizer application can optionally make requests for a specified output format by implementing &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A&gt; to be called by the platform when it tries to provide the correct audio output.</source>
          <target state="translated">음성 신시사이저 응용 프로그램을 구현 하 여 지정 된 출력 형식에 대 한 요청을 수행할 필요에 따라 수 &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A&gt;올바른 오디오 출력을 제공 하려고 할 때 플랫폼에서 호출할 수 있습니다.&lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt; and &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A&gt;.</source>
          <target state="translated">구현 자가 &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt; &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A&gt;.&lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A&gt; 및&lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt; 해당 구현에 의해 발음 또는 사전을, 외부 정의 관리 하기 위한 지원을 제공할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> based on an appropriate Voice Token registry key.</source>
          <target state="translated">새 인스턴스를 생성 <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 음성 토큰 적절 한 레지스트리 키를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Full name of the registry key for the Voice Token associated with the <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">연결 된 음성 토큰에 대 한 레지스트리 키의 전체 이름에서 <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>engine.</source>
          <target state="translated">엔진입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Adds a lexicon to the <bpt id="p1">&lt;xref uid="langword_csharp_Synthesizer" name="Synthesizer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_Voice" name="Voice" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implemented by the current <bpt id="p3">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">에 대 한 어휘 집 추가 <bpt id="p1">&lt;xref uid="langword_csharp_Synthesizer" name="Synthesizer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_Voice" name="Voice" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 현재 구현 <bpt id="p3">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</source>
          <target state="translated">발음 lexicon은 단어 또는 구의 함께 적절 한 발음 알파벳을 사용 하 여 지정 된 발음의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is typically called by the platform infrastructure in response to a &lt;xref:System.Speech.Synthesis&gt; based applications calling AddLexicon and using the <ph id="ph1">`Synthesizer``Voice`</ph> implemented by the current &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt; instance.</source>
          <target state="translated">이 메서드는 플랫폼 인프라에 대 한 응답에는 일반적으로 &lt;xref:System.Speech.Synthesis&gt;기반 AddLexicon를 호출 하 고 사용 하 여 응용 프로그램에서 <ph id="ph1">`Synthesizer``Voice`</ph> 현재 구현 &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;인스턴스.&lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt; &lt;/xref:System.Speech.Synthesis&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of <ph id="ph1">`mediaType`</ph> is typically a MIME specification, as the SSML specification uses MIME for media specifications.</source>
          <target state="translated">값 <ph id="ph1">`mediaType`</ph> 는 일반적으로 MIME 사양 SSML 사양 미디어 사양에 대 한 MIME를 사용 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A valid instance of <bpt id="p1">&lt;xref uid="langword_csharp_System.Uri" name="System.Uri" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating the location of the lexicon information.</source>
          <target state="translated">올바른 인스턴스 <bpt id="p1">&lt;xref uid="langword_csharp_System.Uri" name="System.Uri" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 어휘 집 정보의 위치를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A string containing the media type of the lexicon.</source>
          <target state="translated">어휘 집의 미디어 유형을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Media types are case insensitive.</source>
          <target state="translated">미디어 유형에 대/소문자를 구분 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A reference to an <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.ITtsEngineSite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface used to interact with the platform infrastructure.</source>
          <target state="translated">에 대 한 참조는 <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.ITtsEngineSite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 플랫폼 인프라와 상호 작용 하는 데 사용 되는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.</source>
          <target state="translated">가장 근접 한 신시사이저 엔진 특정 출력 형식 지원에 대 한 요청에 대 한 특정된 synthesize 엔진 응답에서 지 원하는 오디오 출력을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The structure used as <ph id="ph1">`targetWaveFormat`</ph> and returned by the method should compatible with the <ph id="ph2">`WAVEFORMATEX`</ph> available under SAPI, and the returned value should be allocated using <ph id="ph3">`CoTaskMemAlloc`</ph>.</source>
          <target state="translated">로 사용 되는 구조 <ph id="ph1">`targetWaveFormat`</ph> 반환한 메서드와 호환 해야는 <ph id="ph2">`WAVEFORMATEX`</ph> SAPI, 아래에서 사용할 수 있는 사용 하 여 반환 되는 값을 할당 해야 하 고 <ph id="ph3">`CoTaskMemAlloc`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`struct`</ph> must provide functionality equivalent to:      <ph id="ph2">```   internal struct WaveFormat   {       public Int16 FormatTag;       public Int16 Channels;       public int SamplesPerSec;       public int AvgBytesPerSec;       public Int16 BlockAlign;       public Int16 BitsPerSample;       public Int16 Size;   }   ```</ph></source>
          <target state="translated"><ph id="ph1">`struct`</ph> 동일한 기능을 제공 해야 합니다.<ph id="ph2">```   internal struct WaveFormat   {       public Int16 FormatTag;       public Int16 Channels;       public int SamplesPerSec;       public int AvgBytesPerSec;       public Int16 BlockAlign;       public Int16 BitsPerSample;       public Int16 Size;   }   ```</ph></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Valid member of the <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.SpeakOutputFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration indicating the type of requested audio output format.</source>
          <target state="translated">유효한 멤버가 <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.SpeakOutputFormat"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 요청 된 오디오 출력 형식 유형을 나타내는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">&lt;xref uid="langword_csharp_struct" name="struct" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing detail setting for the audio format type requested by the <ph id="ph1">`speakOutputFormat`</ph> argument.</source>
          <target state="translated">에 대 한 포인터는 <bpt id="p1">&lt;xref uid="langword_csharp_struct" name="struct" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 요청한 오디오 형식이 형식에 대 한 세부 설정을 포함 하는 <ph id="ph1">`speakOutputFormat`</ph> 인수입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns a valid <bpt id="p1">&lt;xref uid="langword_csharp_IntPtr" name="IntPtr" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance referring to a <bpt id="p2">&lt;xref uid="langword_csharp_struct" name="struct" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> containing detailed information about the output format.</source>
          <target state="translated">유효한 반환 <bpt id="p1">&lt;xref uid="langword_csharp_IntPtr" name="IntPtr" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스를 참조 하는 <bpt id="p2">&lt;xref uid="langword_csharp_struct" name="struct" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 출력 형식에 대 한 자세한 정보가 포함 된 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Removes a lexicon currently loaded by the <bpt id="p1">&lt;xref uid="langword_csharp_Synthesizer" name="Synthesizer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_Voice" name="Voice" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implemented by the current <bpt id="p3">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">현재 로드 한 어휘 집 제거는 <bpt id="p1">&lt;xref uid="langword_csharp_Synthesizer" name="Synthesizer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_Voice" name="Voice" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 현재 구현 <bpt id="p3">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</source>
          <target state="translated">발음 lexicon은 단어 또는 구의 함께 적절 한 발음 알파벳을 사용 하 여 지정 된 발음의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is typically called in response to a &lt;xref:System.Speech.Synthesis&gt; based applications calling &lt;xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A&gt; and using the <ph id="ph1">`Synthesizer``Voice`</ph> implemented by the current &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt; instance.</source>
          <target state="translated">이 메서드는 일반적으로 대 한 응답으로 호출 됩니다는 &lt;xref:System.Speech.Synthesis&gt;기반 응용 프로그램 호출 &lt;xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A&gt;를 사용 하 고는 <ph id="ph1">`Synthesizer``Voice`</ph> 현재 구현 &lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;인스턴스.&lt;/xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt; &lt;/xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A&gt; &lt;/xref:System.Speech.Synthesis&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A valid instance of <bpt id="p1">&lt;xref uid="langword_csharp_System.Uri" name="System.Uri" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating the location of the lexicon information.</source>
          <target state="translated">올바른 인스턴스 <bpt id="p1">&lt;xref uid="langword_csharp_System.Uri" name="System.Uri" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 어휘 집 정보의 위치를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A reference to an <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.ITtsEngineSite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</source>
          <target state="translated">에 대 한 참조는 <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.ITtsEngineSite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인프라 리소스에 대 한 액세스를 허용 하려면 플랫폼 인프라에 의해 전달 된 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Renders specified <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TextFragment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array in the specified output format.</source>
          <target state="translated">지정 된 렌더링 <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TextFragment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 출력 형식에서 배열입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The structure used as <ph id="ph1">`waveHeader`</ph> and returned by the method should compatible with the <ph id="ph2">`WAVEFORMATEX`</ph> available under SAPI.</source>
          <target state="translated">으로 사용 되는 구조 <ph id="ph1">`waveHeader`</ph> 반환한 메서드와 호환 해야는 <ph id="ph2">`WAVEFORMATEX`</ph> SAPI에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`struct`</ph> must provide functionality equivalent to:      <ph id="ph2">```   internal struct WaveFormat   {       public Int16 FormatTag;       public Int16 Channels;       public int SamplesPerSec;       public int AvgBytesPerSec;       public Int16 BlockAlign;       public Int16 BitsPerSample;       public Int16 Size;   }   ```</ph></source>
          <target state="translated"><ph id="ph1">`struct`</ph> 동일한 기능을 제공 해야 합니다.<ph id="ph2">```   internal struct WaveFormat   {       public Int16 FormatTag;       public Int16 Channels;       public int SamplesPerSec;       public int AvgBytesPerSec;       public Int16 BlockAlign;       public Int16 BitsPerSample;       public Int16 Size;   }   ```</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TextFragment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances containing the text to be rendered into speech.</source>
          <target state="translated">배열을 <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TextFragment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 음성으로 렌더링할 수 텍스트가 포함 된 인스턴스.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_IntPtr" name="IntPtr" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> pointing to a structure containing audio output format.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_IntPtr" name="IntPtr" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 오디오 출력 형식을 포함 하는 구조체를 가리키는 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A reference to an <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.ITtsEngineSite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</source>
          <target state="translated">에 대 한 참조는 <bpt id="p1">&lt;xref href="System.Speech.Synthesis.TtsEngine.ITtsEngineSite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인프라 리소스에 대 한 액세스를 허용 하려면 플랫폼 인프라에 의해 전달 된 인터페이스입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>