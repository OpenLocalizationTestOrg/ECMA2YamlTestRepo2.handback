<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82ceee09fed0c809fa4bea70ee6e22cef52728c3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.Linq.Mapping.TableAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58a5bab53f683be93d746b27268b83ced1c0112b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f92dba71536012ecaa28690196c19e09d71d807</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Designates a class as an entity class that is associated with a database table.</source>
          <target state="translated">클래스를 데이터베이스 테이블과 연결 된 엔터티 클래스로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this attribute to designate a class as an entity class that is associated with a database table or view.</source>
          <target state="translated">클래스는 데이터베이스 테이블 또는 뷰와 연결 된 엔터티 클래스로 지정 하려면이 특성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> treats classes that have the TableAttribute attribute as persistent classes.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>클래스를 영구 클래스로 TableAttribute 특성에 있는 클래스를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> supports only single-table mapping.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph>단일 테이블 매핑만 지원합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, an entity class must be mapped to exactly one database table, and you cannot map a database table to multiple classes at the same time.</source>
          <target state="translated">즉, 정확히 하나의 데이터베이스 테이블에 엔터티 클래스 매핑되어야 하 고 동시에 여러 클래스를 데이터베이스 테이블을 매핑할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Data.Linq.Mapping.TableAttribute.Name%2A&gt; property of the TableAttribute attribute to specify a name for the table, and you can optionally use the schema name to qualify a table name.</source>
          <target state="translated">사용할 수는 &lt;xref:System.Data.Linq.Mapping.TableAttribute.Name%2A&gt;테이블 이름을 정규화 하는 테이블과 있습니다에 대 한 이름을 지정 하려면 TableAttribute 특성의 속성 스키마 이름을 선택적으로 사용할 수 있습니다.&lt;/xref:System.Data.Linq.Mapping.TableAttribute.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a name by using the &lt;xref:System.Data.Linq.Mapping.TableAttribute.Name%2A&gt; property, the table name is assumed to be the same as the class name.</source>
          <target state="translated">사용 하 여 이름을 지정 하지 않는 경우는 &lt;xref:System.Data.Linq.Mapping.TableAttribute.Name%2A&gt;속성을 테이블 이름은 클래스 이름과 동일 하 게 간주 됩니다.&lt;/xref:System.Data.Linq.Mapping.TableAttribute.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schema-qualified Names    You can optionally use the schema name to qualify a table name.</source>
          <target state="translated">필요에 따라 테이블 이름을 정규화 할 스키마 이름을 사용할 수 스키마 한정 이름을 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the token to the left of the first period in the &lt;xref:System.Data.Linq.Mapping.TableAttribute.Name%2A&gt; string is considered to be the schema name.</source>
          <target state="translated">기본적으로 첫 번째 기간의 왼쪽에 토큰의 &lt;xref:System.Data.Linq.Mapping.TableAttribute.Name%2A&gt;문자열은 스키마 이름이 될 것으로 간주 됩니다.&lt;/xref:System.Data.Linq.Mapping.TableAttribute.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remainder of the name is considered to be the table name.</source>
          <target state="translated">이름의 나머지 부분에서는 테이블 이름이 될 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The provider quotes the table name as appropriate.</source>
          <target state="translated">공급자는 적절 하 게 테이블 이름을 따옴표로합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> provider for SQL Server makes sure that brackets are used at least where they are needed.</source>
          <target state="translated">예를 들어는 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]</ph> SQL Server 용 공급자 대괄호가 사용 이상 필요할 경우에 있게 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In some cases, you must explicitly quote attributes because the SQL Server provider cannot auto-quote.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 경우에 따라 있습니다 해야 명시적으로 특성을 인용 SQL Server 공급자 없습니다 자동 견적 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows some examples.</source>
          <target state="translated">다음 표에서 몇 가지 예를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Case|Example: Identifier Name|Example: Expected String in Attributes|Otherwise…|   |----------|------------------------------|--------------------------------------------|----------------|   |Schema name contains a period|Schema: "A.B"</source>
          <target state="translated">| 대/소문자 | 예: 식별자 이름 | 예: 특성에 문자열이 있어야 하는데 | 그렇지 않으면... |   |----------|------------------------------|--------------------------------------------|----------------|   | 스키마 이름에 마침표가 | 스키마: "A.B"</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Table: "C"|"[A.B].C"|The first period is assumed to separate the schema name from the table name.|   |Schema/Table name starts with <ph id="ph1">`@`</ph>|"<ph id="ph2">@SomeName</ph>"|"[<ph id="ph3">@SomeName</ph>]"|Assumed to be a parameter name.|   |Schema starts with <ph id="ph4">`[`</ph> and ends with <ph id="ph5">`]`</ph>|"[Schema.Table]"|"[[Schema].[Table]]]"|The unquoted identifier resembles a quoted identifier.|   |Table starts with <ph id="ph6">`[`</ph> and ends with <ph id="ph7">`]`</ph>|"[Table]"|"[[Table]]]"|The unquoted identifier resembles a quoted identifier.|</source>
          <target state="translated">테이블: "C" | " [A.B]입니다. C "| 스키마 이름을 테이블 이름에서 분리 하는 첫 번째 기간 간주 됩니다. |   | 스키마/테이블 이름으로 시작 <ph id="ph1">`@`</ph>| " <ph id="ph2">@SomeName</ph>"|" [<ph id="ph3">@SomeName</ph>]"| 매개 변수 이름으로 간주 됩니다. |   | 스키마로 시작 <ph id="ph4">`[`</ph> 끝나는 <ph id="ph5">`]`</ph>| " [Schema.Table]"|" [[Schema]입니다. [Table]]] "| 따옴표가 없는 식별자에 따옴표 붙은 식별자와 유사 합니다. |   | 표도 시작 <ph id="ph6">`[`</ph> 끝나는 <ph id="ph7">`]`</ph>| " [Table] "|" [[Table]]] "| 따옴표가 없는 식별자에 따옴표 붙은 식별자와 유사 합니다. |</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Linq.Mapping.TableAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.Linq.Mapping.TableAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the table or view.</source>
          <target state="translated">테이블 또는 뷰의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a name by using Name, the table name is assumed to be the same as the class name.</source>
          <target state="translated">이름을 사용 하 여 이름을 지정 하지 않는 경우 테이블 이름은 클래스 이름과 동일 하 게 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can optionally use a schema name to qualify the table name (for example, Schema3.Table5).</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; (예: Schema3.Table5) 테이블 이름을 정규화 하는 스키마 이름을 선택적으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the token to the left of the first period in the Name string is considered to be the schema name, and the rest to be the table name.</source>
          <target state="translated">기본적으로 스키마 이름과 테이블 이름에 나머지 되도록 왼쪽의 첫 번째 기간 이름 문자열에 토큰 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the following example, the default table name, <ph id="ph1">`Customer`</ph>, is changed to <ph id="ph2">`Customers`</ph>.</source>
          <target state="translated">다음 예제에서는 기본 테이블 이름에에서 <ph id="ph1">`Customer`</ph>를로 변경 <ph id="ph2">`Customers`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>By default, the value is the same as the name of the class.</source>
          <target state="translated">기본적으로 값은 클래스의 이름과 동일 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>