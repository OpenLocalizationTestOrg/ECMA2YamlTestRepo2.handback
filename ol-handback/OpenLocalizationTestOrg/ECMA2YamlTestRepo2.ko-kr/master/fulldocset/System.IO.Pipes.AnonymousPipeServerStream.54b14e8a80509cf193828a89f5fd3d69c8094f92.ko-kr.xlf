<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d135be3480fcc921f515a3740b92e812d2fa447d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Pipes.AnonymousPipeServerStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c795308261830c77c540a71cd696e8a68f5264ab</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8918945a72ef9ee4f21b192ba6a38dc37bfe43ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.</source>
          <target state="translated">읽기 / 쓰기 작업을 지 원하는 동기 및 비동기 익명 파이프 주위의 스트림을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</source>
          <target state="translated">익명 파이프 안전 제공 시키고 프로세스 자식 및 부모 간의 프로세스 간 통신을 보호 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AnonymousPipeServerStream class enables a parent process to send or receive information from a child process.</source>
          <target state="translated">AnonymousPipeServerStream 클래스에는 부모 프로세스를를 보내거나 자식 프로세스에서 정보를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</source>
          <target state="translated">익명 파이프는 일반적으로 부모 및 자식 프로세스 간에 데이터를 전송 하는 명명 되지 않은 단방향 파이프 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes are always local; they cannot be used over a network.</source>
          <target state="translated">익명 파이프는 항상 로컬입니다. 네트워크를 통해 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A &lt;xref:System.IO.Pipes.PipeDirection&gt;값 &lt;xref:System.IO.Pipes.PipeDirection&gt;익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes do not support &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt; read modes.</source>
          <target state="translated">익명 파이프를 지원 하지 않는 &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt;읽기 모드.&lt;/xref:System.IO.Pipes.PipeTransmissionMode&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the &lt;xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt; method.</source>
          <target state="translated">익명 파이프의 클라이언트 쪽을 호출 하 여 서버 쪽에서 제공 하는 파이프 핸들에서 만들어야 합니다는 &lt;xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt;메서드.&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is then passed as a parameter when creating the client process.</source>
          <target state="translated">그런 다음 문자열은 클라이언트 프로세스를 만들 때 매개 변수로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>From the client process, it is then passed to the &lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt; constructor as the <ph id="ph1">`pipeHandleAsString`</ph> parameter.</source>
          <target state="translated">클라이언트 프로세스에서 다음에 전달 된 &lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;으로 생성자는 <ph id="ph1">`pipeHandleAsString`</ph> 매개 변수.&lt;/xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AnonymousPipeServerStream object must dispose the client handle using the &lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt; method in order to be notified when the client exits.</source>
          <target state="translated">AnonymousPipeServerStream 개체가 사용 하 여 클라이언트 핸들을 삭제 해야 합니다는 &lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;메서드는 클라이언트 종료 시 알림을 받을 수 있습니다.&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  For <ph id="ph2">[!INCLUDE[winxppro](~/add/includes/winxppro-md.md)]</ph> and <ph id="ph3">[!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)]</ph>, a maximum of 10 pipes can simultaneously connect over the network.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;에 대 한 <ph id="ph2">[!INCLUDE[winxppro](~/add/includes/winxppro-md.md)]</ph> 및 <ph id="ph3">[!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)]</ph>, 최대 10 개의 파이프는 네트워크를 통해 동시에 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; constructors without a &lt;xref:System.IO.Pipes.PipeDirection&gt; parameter, the default direction is &lt;xref:System.IO.Pipes.PipeDirection&gt;.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; &lt;xref:System.IO.Pipes.PipeDirection&gt;기본 방향 매개 변수는 &lt;xref:System.IO.Pipes.PipeDirection&gt;.&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt; 없는&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt; 생성자</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A &lt;xref:System.IO.Pipes.PipeDirection&gt;값 &lt;xref:System.IO.Pipes.PipeDirection&gt;익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates an &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object that has the default buffer size, no pipe security, and a &lt;xref:System.IO.HandleInheritability&gt; value of &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">이 생성자는 &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;기본 버퍼 크기, 파이프 보안 없음 및 &lt;xref:System.IO.HandleInheritability&gt; &lt;xref:System.IO.HandleInheritability&gt;안내 하십시오.&lt;/xref:System.IO.HandleInheritability&gt; 값&lt;/xref:System.IO.HandleInheritability&gt; 를 갖는 개체&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt; 를 만듭니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified pipe direction.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 방향 지정 된 파이프를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A &lt;xref:System.IO.Pipes.PipeDirection&gt;값 &lt;xref:System.IO.Pipes.PipeDirection&gt;익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates an &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object that has the default buffer size, no pipe security, and a &lt;xref:System.IO.HandleInheritability&gt; value of &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">이 생성자는 &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;기본 버퍼 크기, 파이프 보안 없음 및 &lt;xref:System.IO.HandleInheritability&gt; &lt;xref:System.IO.HandleInheritability&gt;안내 하십시오.&lt;/xref:System.IO.HandleInheritability&gt; 값&lt;/xref:System.IO.HandleInheritability&gt; 를 갖는 개체&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt; 를 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">파이프의 방향을 결정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <ph id="ph1">`direction`</ph> cannot be set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">익명 파이프 될 수 있으며 한 방향으로 하므로 <ph id="ph1">`direction`</ph> 로 설정할 수 없습니다 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified pipe direction and inheritability mode.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 파이프 방향 및 상속 모드를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A &lt;xref:System.IO.Pipes.PipeDirection&gt;값 &lt;xref:System.IO.Pipes.PipeDirection&gt;익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates an &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object that has the default buffer size and no pipe security.</source>
          <target state="translated">이 생성자는 &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;기본 버퍼 크기 및 파이프 보안이 없는 개체.&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">파이프의 방향을 결정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <ph id="ph1">`direction`</ph> cannot be set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">익명 파이프 될 수 있으며 한 방향으로 하므로 <ph id="ph1">`direction`</ph> 로 설정할 수 없습니다 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
          <target state="translated">자식 프로세스에 의해 기본 핸들을 상속할 수 있는지 여부를 결정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Must be set to either &lt;xref:System.IO.HandleInheritability&gt; or &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">중 하나 &lt;xref:System.IO.HandleInheritability&gt;나 &lt;xref:System.IO.HandleInheritability&gt;.&lt;/xref:System.IO.HandleInheritability&gt; &lt;/xref:System.IO.HandleInheritability&gt; 로 설정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not set to either <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph>설정 되지 않은 중 하나로 <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified pipe handles.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 파이프 핸들에서 클래스입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A &lt;xref:System.IO.Pipes.PipeDirection&gt;값 &lt;xref:System.IO.Pipes.PipeDirection&gt;익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">파이프의 방향을 결정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <ph id="ph1">`direction`</ph> cannot be set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">익명 파이프 될 수 있으며 한 방향으로 하므로 <ph id="ph1">`direction`</ph> 로 설정할 수 없습니다 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A safe handle for the pipe that this <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">이 파이프에 대 한 안전 하 게 처리 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A safe handle for the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 안전한 핸들은 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serverSafePipeHandle&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;clientSafePipeHandle&lt;/code&gt;</ph> is an invalid handle.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serverSafePipeHandle&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;clientSafePipeHandle&lt;/code&gt;</ph> 잘못 된 핸들입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serverSafePipeHandle&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;clientSafePipeHandle&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serverSafePipeHandle&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;clientSafePipeHandle&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, has occurred.</source>
          <target state="translated">디스크 오류와 같은 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified pipe direction, inheritability mode, and buffer size.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 된 지정 된 파이프 방향, 상속 모드 및 버퍼 크기입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A &lt;xref:System.IO.Pipes.PipeDirection&gt;값 &lt;xref:System.IO.Pipes.PipeDirection&gt;익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates an &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object without pipe security.</source>
          <target state="translated">이 생성자는 &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;파이프 보안이 없는 개체.&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">파이프의 방향을 결정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <ph id="ph1">`direction`</ph> cannot be set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">익명 파이프 될 수 있으며 한 방향으로 하므로 <ph id="ph1">`direction`</ph> 로 설정할 수 없습니다 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
          <target state="translated">자식 프로세스에 의해 기본 핸들을 상속할 수 있는지 여부를 결정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Must be set to either &lt;xref:System.IO.HandleInheritability&gt; or &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">중 하나 &lt;xref:System.IO.HandleInheritability&gt;나 &lt;xref:System.IO.HandleInheritability&gt;.&lt;/xref:System.IO.HandleInheritability&gt; &lt;/xref:System.IO.HandleInheritability&gt; 로 설정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The size of the buffer.</source>
          <target state="translated">버퍼의 크기입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This value must be greater than or equal to 0.</source>
          <target state="translated">이 값은 0 보다 크거나 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not set to either <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph>설정 되지 않은 중 하나로 <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified pipe direction, inheritability mode, buffer size, and pipe security.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 된 지정 된 파이프 방향, 상속 모드, 버퍼 크기 및 파이프 보안 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.IO.Pipes.PipeDirection&gt; value of &lt;xref:System.IO.Pipes.PipeDirection&gt; is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A &lt;xref:System.IO.Pipes.PipeDirection&gt;값 &lt;xref:System.IO.Pipes.PipeDirection&gt;익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.&lt;/xref:System.IO.Pipes.PipeDirection&gt; &lt;/xref:System.IO.Pipes.PipeDirection&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">파이프의 방향을 결정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Anonymous pipes can only be in one direction, so <ph id="ph1">`direction`</ph> cannot be set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">익명 파이프 될 수 있으며 한 방향으로 하므로 <ph id="ph1">`direction`</ph> 로 설정할 수 없습니다 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
          <target state="translated">자식 프로세스에 의해 기본 핸들을 상속할 수 있는지 여부를 결정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The size of the buffer.</source>
          <target state="translated">버퍼의 크기입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This value must be greater than or equal to 0.</source>
          <target state="translated">이 값은 0 보다 크거나 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An object that determines the access control and audit security for the pipe.</source>
          <target state="translated">액세스 제어를 결정 하는 개체 및 감사 보안을 파이프 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not set to either <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph>설정 되지 않은 중 하나로 <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.HandleInheritability&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets the safe handle for the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is currently connected to the <bpt id="p2">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 safehandle을 가져옵니다는 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 현재 연결 되어 있는 개체는 <bpt id="p2">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt; method should be called after a client handle has been passed to a client process.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;클라이언트 프로세스에 대 한 클라이언트 핸들 경과 된 후 메서드를 호출 해야 합니다.&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is not called, the &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object will not receive notice when the client disposes of its &lt;xref:System.IO.Pipes.PipeStream&gt; object.</source>
          <target state="translated">이 메서드를 호출 하지는 &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;개체 통지를 받지 못할 클라이언트를 삭제 하는 경우 해당 &lt;xref:System.IO.Pipes.PipeStream&gt;개체입니다.&lt;/xref:System.IO.Pipes.PipeStream&gt; &lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A handle for the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is currently connected to the <bpt id="p2">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 핸들은 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 현재 연결 되어 있는 개체는 <bpt id="p2">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Closes the local copy of the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object's handle.</source>
          <target state="translated">로컬 복사본을 닫습니다는 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체의 핸들입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DisposeLocalCopyOfClientHandle method should be called after the client handle has been passed to the client.</source>
          <target state="translated">클라이언트에 클라이언트 핸들이 경과 된 후 DisposeLocalCopyOfClientHandle 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is not called, the &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object will not receive notice when the client disposes of its &lt;xref:System.IO.Pipes.PipeStream&gt; object.</source>
          <target state="translated">이 메서드를 호출 하지는 &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;개체 통지를 받지 못할 클라이언트를 삭제 하는 경우 해당 &lt;xref:System.IO.Pipes.PipeStream&gt;개체입니다.&lt;/xref:System.IO.Pipes.PipeStream&gt; &lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Releases unmanaged resources and performs other cleanup operations before the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance is reclaimed by garbage collection.</source>
          <target state="translated">관리 되지 않는 리소스를 해제 하 고 기타 정리 작업 하기 전에 수행 된 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스 가비지 컬렉션이 회수 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets the connected <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object's handle as a string.</source>
          <target state="translated">연결 된 가져옵니다 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 문자열 개체의 핸들입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt; method should be called after a client handle has been passed to a client process.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;클라이언트 프로세스에 대 한 클라이언트 핸들 경과 된 후 메서드를 호출 해야 합니다.&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is not called, the &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; object will not receive notice when the client disposes of its &lt;xref:System.IO.Pipes.PipeStream&gt; object.</source>
          <target state="translated">이 메서드를 호출 하지는 &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;개체 통지를 받지 못할 클라이언트를 삭제 하는 경우 해당 &lt;xref:System.IO.Pipes.PipeStream&gt;개체입니다.&lt;/xref:System.IO.Pipes.PipeStream&gt; &lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A string that represents the connected <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object's handle.</source>
          <target state="translated">연결 된 나타내는 string <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeClientStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체의 핸들입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Sets the reading mode for the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 읽기 모드를 설정의 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For anonymous pipes, transmission mode must be <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">익명 파이프 전송 모드 해야 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes do not support &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt; read mode.</source>
          <target state="translated">익명 파이프를 지원 하지 않는 &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt;읽기 모드.&lt;/xref:System.IO.Pipes.PipeTransmissionMode&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The reading mode for the <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 읽기 모드는 <bpt id="p1">&lt;xref href="System.IO.Pipes.AnonymousPipeServerStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The transmission mode is not valid.</source>
          <target state="translated">전송 모드 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For anonymous pipes, only <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is supported.</source>
          <target state="translated">익명 파이프만 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The property is set to <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which is not supported for anonymous pipes.</source>
          <target state="translated">속성이로 설정 되어 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 익명 파이프에 대 한 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The connection is broken or another I/O error occurs.</source>
          <target state="translated">연결이 끊어져서 또는 다른 I/O 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">파이프가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets the pipe transmission mode that is supported by the current pipe.</source>
          <target state="translated">현재 파이프에서 지 원하는 파이프 전송 모드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous pipes do not support &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt; read mode.</source>
          <target state="translated">익명 파이프를 지원 하지 않는 &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt;읽기 모드.&lt;/xref:System.IO.Pipes.PipeTransmissionMode&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is supported by the current pipe.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 파이프에서 사용할 수 있는 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>