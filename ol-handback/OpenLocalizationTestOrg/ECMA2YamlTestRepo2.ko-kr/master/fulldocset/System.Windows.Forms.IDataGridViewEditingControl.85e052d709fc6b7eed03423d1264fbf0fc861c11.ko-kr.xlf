<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d09585aadee5bb30bd4f7b4296073a2037521561</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.IDataGridViewEditingControl.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52e56847cdc0ac508075bdca9ebe5efa6c2688fc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">403d471611be0662af5b1dc4dfc32e55941cf195</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines common functionality for controls that are hosted within cells of a <bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">셀 내에 호스팅되는 컨트롤에 대 한 공통 기능을 정의 <bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is implemented by controls, such as &lt;xref:System.Windows.Forms.DataGridViewComboBoxEditingControl&gt; and &lt;xref:System.Windows.Forms.DataGridViewTextBoxEditingControl&gt;, that are hosted by corresponding &lt;xref:System.Windows.Forms.DataGridView&gt; cells, such as &lt;xref:System.Windows.Forms.DataGridViewComboBoxCell&gt; and &lt;xref:System.Windows.Forms.DataGridViewTextBoxCell&gt;, when they are in edit mode.</source>
          <target state="translated">이 인터페이스와 같은 컨트롤에 의해 구현 됩니다 &lt;xref:System.Windows.Forms.DataGridViewComboBoxEditingControl&gt;및 &lt;xref:System.Windows.Forms.DataGridViewTextBoxEditingControl&gt;, 해당에서 호스팅되는 &lt;xref:System.Windows.Forms.DataGridView&gt;셀 &lt;xref:System.Windows.Forms.DataGridViewComboBoxCell&gt;및 &lt;xref:System.Windows.Forms.DataGridViewTextBoxCell&gt;편집 모드에 있을 때,.&lt;/xref:System.Windows.Forms.DataGridViewTextBoxCell&gt; &lt;/xref:System.Windows.Forms.DataGridViewComboBoxCell&gt; &lt;/xref:System.Windows.Forms.DataGridView&gt; &lt;/xref:System.Windows.Forms.DataGridViewTextBoxEditingControl&gt; &lt;/xref:System.Windows.Forms.DataGridViewComboBoxEditingControl&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cell types that can host editing controls set their &lt;xref:System.Windows.Forms.DataGridViewCell.EditType%2A&gt; property to a &lt;xref:System.Type&gt; representing the editing control type.</source>
          <target state="translated">셀 편집 컨트롤 집합을 호스팅할 수 있는 형식은 자신의 &lt;xref:System.Windows.Forms.DataGridViewCell.EditType%2A&gt;속성을는 &lt;xref:System.Type&gt;컨트롤 편집을 나타내는 형식입니다.&lt;/xref:System.Type&gt; &lt;/xref:System.Windows.Forms.DataGridViewCell.EditType%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the cell enters edit mode, the following steps are performed:      1.</source>
          <target state="translated">다음 단계를 수행 하는 셀이 편집 모드로 전환할 때: 1입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.DataGridView&gt; control creates an instance of the editing control type.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.DataGridView&gt;컨트롤 편집 컨트롤 형식의 인스턴스를 만듭니다.&lt;/xref:System.Windows.Forms.DataGridView&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.DataGridView&gt; control calls the cell &lt;xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A&gt; method.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.DataGridView&gt;컨트롤 호출 셀 &lt;xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A&gt;메서드.&lt;/xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A&gt; &lt;/xref:System.Windows.Forms.DataGridView&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override this method to transfer the cell value to the editing control.</source>
          <target state="translated">편집 컨트롤에 셀 값을 전송 하려면이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.DataGridView&gt; control calls the editing control &lt;xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A&gt; method and passes in the cell's current style.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.DataGridView&gt;편집 컨트롤을 호출 하는 컨트롤 &lt;xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A&gt;메서드 및 현재 셀의 스타일에 전달 합니다.&lt;/xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A&gt; &lt;/xref:System.Windows.Forms.DataGridView&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can implement this method to initialize the appearance of the editing control so that it matches the appearance of the cell.</source>
          <target state="translated">셀의 모양을 일치 하도록 편집 컨트롤의 모양을 초기화 하려면이 메서드를 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.DataGridView&gt; control calls the editing control &lt;xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A&gt; method.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.DataGridView&gt;편집 컨트롤을 호출 하는 컨트롤 &lt;xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A&gt;메서드.&lt;/xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A&gt; &lt;/xref:System.Windows.Forms.DataGridView&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can implement this method to make final adjustments to the editing control, such as selecting the control value.</source>
          <target state="translated">컨트롤 값을 선택 하면 같은 편집 컨트롤에 최종적으로 조정 하려면이 메서드를 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about implementing IDataGridViewEditingControl, see <bpt id="p1">[</bpt>How to: Host Controls in Windows Forms DataGridView Cells<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">IDataGridViewEditingControl 구현에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: Windows Forms DataGridView 셀에서 호스트 컨트롤<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cell types such as &lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt; that provide a user interface (UI) for specifying values without hosting an editing control implement the &lt;xref:System.Windows.Forms.IDataGridViewEditingCell&gt; interface.</source>
          <target state="translated">셀과 같은 형식의 &lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;호스팅하는 편집 컨트롤 구현 하지 않고 값을 지정 하기 위한 사용자 인터페이스 (UI)를 제공 하는 &lt;xref:System.Windows.Forms.IDataGridViewEditingCell&gt;인터페이스.&lt;/xref:System.Windows.Forms.IDataGridViewEditingCell&gt; &lt;/xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UI in this case is displayed regardless of whether the cell is in edit mode.</source>
          <target state="translated">이 경우 UI 셀이 편집 모드에 있는지 여부에 관계 없이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other cell types, such as &lt;xref:System.Windows.Forms.DataGridViewButtonCell&gt;, provide a UI but do not store user-specified values.</source>
          <target state="translated">등의 다른 셀 형식은 &lt;xref:System.Windows.Forms.DataGridViewButtonCell&gt;, UI를 제공 하지만 사용자가 지정한 값을 저장 하지 마십시오.&lt;/xref:System.Windows.Forms.DataGridViewButtonCell&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the cell type does not implement &lt;xref:System.Windows.Forms.IDataGridViewEditingCell&gt; or host an editing control.</source>
          <target state="translated">이 경우 셀 유형을 구현 하지 않는 &lt;xref:System.Windows.Forms.IDataGridViewEditingCell&gt;또는 편집 컨트롤 호스트.&lt;/xref:System.Windows.Forms.IDataGridViewEditingCell&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Changes the control's user interface (UI) to be consistent with the specified cell style.</source>
          <target state="translated">컨트롤의 UI (사용자 인터페이스) 지정 된 셀 스타일와 일치 하도록 변경 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, an implementation of this method will set UI properties for the editing control, such as font, background color, and foreground color, to the values of corresponding properties in the <ph id="ph1">`dataGridViewCellStyle`</ph>, which is the style used for the cell hosting the control.</source>
          <target state="translated">일반적으로이 메서드를 구현 하는 글꼴, 배경색 및 전경색, 예: 편집 컨트롤에 대 한 UI 속성에서 해당 속성의 값에 설정 됩니다는 <ph id="ph1">`dataGridViewCellStyle`</ph>, 컨트롤을 호스팅하는 셀에 사용 되는 스타일은입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use as the model for the UI.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> UI에 대 한 모델을 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the cell.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 셀이 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the <bpt id="p2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that is being edited; <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if there is no associated <bpt id="p4">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 포함 하는 <bpt id="p2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 편집 중인; <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 더 연결 된 경우 <bpt id="p4">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets or sets the formatted value of the cell being modified by the editor.</source>
          <target state="translated">편집기가 수정 하 고 셀의 형식이 지정 된 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted value represents the value as it is displayed in the control's user interface.</source>
          <target state="translated">형식이 지정 된 값을 컨트롤의 사용자 인터페이스에 표시 되는 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted value may be different in absolute value and even data type from the actual value contained in the control.</source>
          <target state="translated">형식이 지정 된 값은 컨트롤에 포함 된 실제 값이 절대 값 및 데이터 형식과 다른 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the formatted value of the cell.</source>
          <target state="translated">&lt;xref:System.Object&gt;셀의 형식이 지정 된 값을 나타내는입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets the index of the hosting cell's parent row.</source>
          <target state="translated">호스팅 셀의 부모 행의 인덱스를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.IDataGridViewEditingControl&gt; interface does not define a corresponding <ph id="ph1">`ColumnIndex`</ph> property.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.IDataGridViewEditingControl&gt;인터페이스를 정의 하지는 해당 <ph id="ph1">`ColumnIndex`</ph> 속성.&lt;/xref:System.Windows.Forms.IDataGridViewEditingControl&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A&gt; property to retrieve the parent &lt;xref:System.Windows.Forms.DataGridView&gt; control and use the &lt;xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=fullName&gt; property to determine the row and column indexes of the active cell.</source>
          <target state="translated">사용할 수는 &lt;xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A&gt;부모를 검색 하도록 속성 &lt;xref:System.Windows.Forms.DataGridView&gt;제어 하 고 사용 하 여는 &lt;xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=fullName&gt;현재 셀의 행 및 열 인덱스를 결정 하는 속성.&lt;/xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.DataGridView&gt; &lt;/xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The index of the row that contains the cell, or –1 if there is no parent row.</source>
          <target state="translated">부모 행이 없는 경우 셀을 또는-1을 포함 하는 행의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the value of the editing control differs from the value of the hosting cell.</source>
          <target state="translated">호스팅 셀의 값에서 편집 컨트롤의 값이 다른 지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EditingControlValueChanged property is set to <ph id="ph1">`true`</ph> to indicate that the hosting cell's state has changed and its user interface (UI) needs to be updated to reflect this change in value.</source>
          <target state="translated">EditingControlValueChanged 속성이로 설정 되어 <ph id="ph1">`true`</ph> 를 나타내는 호스팅 셀의 상태가 변경 되 고 해당 사용자 인터페이스 (UI)의 값이이 변경 내용을 반영 하도록 업데이트 해야 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owning cell or table will reset this property to <ph id="ph1">`false`</ph> after an update.</source>
          <target state="translated">소유 하는 셀 이나 테이블에이 속성을 다시 설정 됩니다 <ph id="ph1">`false`</ph> 업데이트 후 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value of the control differs from the cell value; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>컨트롤의 값 셀 값; 다른 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key is a regular input key that the editing control should process or a special key that the <bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should process.</source>
          <target state="translated">지정된 된 키가 일반 입력된 키인지 편집 컨트롤에서 처리 해야 하는 특수 키인지 여부를 결정은 <bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>An editing control implements this method to determine which input keys should be processed by the control, and which input keys should be processed by the &lt;xref:System.Windows.Forms.DataGridView&gt;.</source>
          <target state="translated">편집 컨트롤이 컨트롤에 의해 처리는 입력된 키를 확인 하려면이 메서드를 구현 하 고는 입력 키에 &lt;xref:System.Windows.Forms.DataGridView&gt;.&lt;/xref:System.Windows.Forms.DataGridView&gt; 처리</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EditingControlWantsInputKey method is called by the &lt;xref:System.Windows.Forms.DataGridView&gt;.</source>
          <target state="translated">에 &lt;xref:System.Windows.Forms.DataGridView&gt;.&lt;/xref:System.Windows.Forms.DataGridView&gt; EditingControlWantsInputKey 메서드는</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.DataGridView&gt; will pass in <ph id="ph1">`true`</ph> for <ph id="ph2">`dataGridViewWantsInputKey`</ph> when it can process the <ph id="ph3">`keyData`</ph>.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.DataGridView&gt;전달 합니다 <ph id="ph1">`true`</ph> 에 대 한 <ph id="ph2">`dataGridViewWantsInputKey`</ph> 처리할 수 있으면는 <ph id="ph3">`keyData`</ph>.&lt;/xref:System.Windows.Forms.DataGridView&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the editing control can let the &lt;xref:System.Windows.Forms.DataGridView&gt; handle the <ph id="ph1">`keyData`</ph>, EditingControlWantsInputKey should return <ph id="ph2">`false`</ph> when <ph id="ph3">`dataGridViewWantsInputKey`</ph> is <ph id="ph4">`true`</ph>.</source>
          <target state="translated">편집 컨트롤 수 있게 하는 경우는 &lt;xref:System.Windows.Forms.DataGridView&gt;처리는 <ph id="ph1">`keyData`</ph>, EditingControlWantsInputKey 반환할지 <ph id="ph2">`false`</ph> 때 <ph id="ph3">`dataGridViewWantsInputKey`</ph> 은 <ph id="ph4">`true`</ph>.&lt;/xref:System.Windows.Forms.DataGridView&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other implementations of EditingControlWantsInputKey may ignore a <ph id="ph1">`dataGridViewWantsInputKey`</ph> value of <ph id="ph2">`true`</ph> and handle the <ph id="ph3">`keyData`</ph> in the editing control.</source>
          <target state="translated">EditingControlWantsInputKey의 다른 구현과 무시 될 수 있습니다는 <ph id="ph1">`dataGridViewWantsInputKey`</ph> 값 <ph id="ph2">`true`</ph> 처리는 <ph id="ph3">`keyData`</ph> 편집 컨트롤의 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.Keys"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the key that was pressed.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.Keys"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 누른 키를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the <bpt id="p2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> wants to process the <bpt id="p3">&lt;xref href="System.Windows.Forms.Keys"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> in <ph id="ph1">`keyData`</ph>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 처리할는 <bpt id="p3">&lt;xref href="System.Windows.Forms.Keys"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 에 <ph id="ph1">`keyData`</ph>, 그렇지 않으면 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified key is a regular input key that should be handled by the editing control; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정된 된 키가 일반 입력된 키인지; 편집 컨트롤에서 처리 되어야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets the cursor used when the mouse pointer is over the <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Forms.DataGridView.EditingPanel%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> but not over the editing control.</source>
          <target state="translated">마우스 포인터를 위로 가져갈 때 사용 되는 커서를 가져옵니다는 <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Forms.DataGridView.EditingPanel%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 편집 컨트롤이 없습니다 이상이 걸립니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The editing panel is the &lt;xref:System.Windows.Forms.Panel&gt; that hosts the editing control when the &lt;xref:System.Windows.Forms.DataGridView&gt; control is in edit mode.</source>
          <target state="translated">편집 패널은는 &lt;xref:System.Windows.Forms.Panel&gt;는 편집 컨트롤을 호스팅하는 경우는 &lt;xref:System.Windows.Forms.DataGridView&gt;컨트롤은 편집 모드에 있습니다.&lt;/xref:System.Windows.Forms.DataGridView&gt; &lt;/xref:System.Windows.Forms.Panel&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual editing control may not cover the entire area of the editing panel.</source>
          <target state="translated">실제 편집 컨트롤 편집 패널의 전체 영역을 처리 하지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the EditingPanelCursor implementation should return the cursor to use when the mouse pointer is over the panel but not over the control.</source>
          <target state="translated">이 경우 EditingPanelCursor 구현에는 마우스 포인터가 컨트롤 위에 하지 아니라 패널 위에 있을 때 사용할 커서를 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you will want to return the same cursor that the control uses.</source>
          <target state="translated">일반적으로 컨트롤을 사용 하는 같은 커서를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to change the cursor that appears when the pointer is over the control, you must set the &lt;xref:System.Windows.Forms.Control.Cursor%2A&gt; property.</source>
          <target state="translated">포인터가 컨트롤 위에 있을 때 나타나는 커서를 변경 하려는 경우 설정 해야는 &lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;속성.&lt;/xref:System.Windows.Forms.Control.Cursor%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set this in the constructor of the &lt;xref:System.Windows.Forms.IDataGridViewEditingControl&gt; implementation, or you can set it in the &lt;xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A&gt; implementation.</source>
          <target state="translated">생성자에서 설정할 수 있습니다는 &lt;xref:System.Windows.Forms.IDataGridViewEditingControl&gt;구현 중 하나 또는 있습니다에서 설정할 수는 &lt;xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A&gt;구현.&lt;/xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A&gt; &lt;/xref:System.Windows.Forms.IDataGridViewEditingControl&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.Cursor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the mouse pointer used for the editing panel.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Forms.Cursor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 편집 패널에 사용 되는 마우스 포인터를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Retrieves the formatted value of the cell.</source>
          <target state="translated">셀의 형식이 지정 된 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted value represents the value as it is displayed in the control's user interface.</source>
          <target state="translated">형식이 지정 된 값을 컨트롤의 사용자 인터페이스에 표시 되는 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted value may be different in absolute value and even data type from the actual value contained in the control.</source>
          <target state="translated">형식이 지정 된 값은 컨트롤에 포함 된 실제 값이 절대 값 및 데이터 형식과 다른 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the formatted value of the control, use the &lt;xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A&gt; property.</source>
          <target state="translated">컨트롤의 형식이 지정 된 값을 설정 하려면는 &lt;xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A&gt;속성.&lt;/xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorContexts"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the context in which the data is needed.</source>
          <target state="translated">비트 조합 <bpt id="p1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorContexts"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터가 필요 컨텍스트를 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the formatted version of the cell contents.</source>
          <target state="translated">&lt;xref:System.Object&gt;셀 내용의 서식이 지정 된 버전을 나타냅니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Prepares the currently selected cell for editing.</source>
          <target state="translated">편집 하기 위해 현재 선택 된 셀을 준비합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is to prepare the control and its contents for editing.</source>
          <target state="translated">이 메서드의 목적은 편집을 위해 컨트롤 및 해당 내용을 준비 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might want to put the insertion point at the end of the contents, or change how the contents are aligned.</source>
          <target state="translated">예를 들어 다음 콘텐츠, 끝에 삽입 지점을 하거나 내용을 정렬 되는 방법을 변경 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to select all of the cell's content; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>셀의 내용을; 모두 선택 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the cell contents need to be repositioned whenever the value changes.</source>
          <target state="translated">셀 내용 값이 변경 될 때마다 위치를 변경 해야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some situations require that cell contents reposition when the value changes.</source>
          <target state="translated">값이 변경 될 때 셀 내용 위치는 해야 할 경우도 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, cell contents may need to reposition when a cell wraps text and the contents become larger.</source>
          <target state="translated">예를 들어 셀 내용 셀에 텍스트를 배치 하 고 커지면 위치를 변경 해야 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the contents need to be repositioned; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>콘텐츠를; 위치를 변경 해야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>