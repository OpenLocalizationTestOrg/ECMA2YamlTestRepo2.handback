<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60920e2f8fd78393e2c1faa0b3f79ff2ef161f36</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Input.RoutedCommand.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c095475620d28c878c537364f73f037b238010a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6adb0bc24d63f6b1676e46b00a29416f80e201e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a command that implements &lt;xref:System.Windows.Input.ICommand&gt; and is routed through the element tree.</source>
          <target state="translated">구현 하는 명령을 정의 &lt;xref:System.Windows.Input.ICommand&gt;요소 트리를 통해 라우트됩니다.&lt;/xref:System.Windows.Input.ICommand&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified name and owner type.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정한 이름 및 소유자 유형 사용 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Declared name for serialization.</source>
          <target state="translated">Serialization에 대 한 선언 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The type which is registering the command.</source>
          <target state="translated">명령을 등록 하는 형식입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ownerType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;ownerType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified name, owner type, and collection of gestures.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 이름, 소유자 유형 및 제스처의 컬렉션 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Declared name for serialization.</source>
          <target state="translated">Serialization에 대 한 선언 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The type that is registering the command.</source>
          <target state="translated">명령을 등록 하는 형식입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Default input gestures associated with this command.</source>
          <target state="translated">이 명령과 연결 된 기본 입력된 제스처입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Determines whether this <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can execute in its current state.</source>
          <target state="translated">결정 여부이 <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 상태에서 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual logic that determines if a &lt;xref:System.Windows.Input.RoutedCommand&gt; can execute on the current command target is not contained in the CanExecute methods, rather CanExecute raises the &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; and the &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt; events which tunnel and bubble through element tree looking for a object with a &lt;xref:System.Windows.Input.CommandBinding&gt;.</source>
          <target state="translated">있는지 여부를 확인 하는 실제 논리는 &lt;xref:System.Windows.Input.RoutedCommand&gt;현재에서 실행할 수 있는 명령 대상 CanExecute 메서드에 포함 되지 않은, CanExecute는 &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt;및 &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt; &lt;xref:System.Windows.Input.CommandBinding&gt;.&lt;/xref:System.Windows.Input.CommandBinding&gt; 개체에 대 한 찾는 트리는 터널링 및 거품형 요소를 통해 이벤트&lt;/xref:System.Windows.Input.CommandManager.CanExecute&gt; &lt;/xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; 를 발생 하는 대신&lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a &lt;xref:System.Windows.Input.CommandBinding&gt; for that &lt;xref:System.Windows.Input.RoutedCommand&gt; is found, then the &lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt; attached to &lt;xref:System.Windows.Input.CommandBinding&gt; is called.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.Input.CommandBinding&gt;해당 &lt;xref:System.Windows.Input.RoutedCommand&gt;발견 되 면 &lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;에 연결 된 &lt;xref:System.Windows.Input.CommandBinding&gt;호출 됩니다.&lt;/xref:System.Windows.Input.CommandBinding&gt; &lt;/xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt; &lt;/xref:System.Windows.Input.RoutedCommand&gt; &lt;/xref:System.Windows.Input.CommandBinding&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>These handlers supply the programming logic for determining if the &lt;xref:System.Windows.Input.RoutedCommand&gt; can execute or not.</source>
          <target state="translated">여부를 결정 하기에 대 한 프로그래밍 논리를 제공 하는 이러한 처리기는 &lt;xref:System.Windows.Input.RoutedCommand&gt;여부 실행할 수 있습니다.&lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; and &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; events are raised on the &lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt;고 &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; &lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;.&lt;/xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt; 이벤트 발생&lt;/xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; &lt;/xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt; is not set on the &lt;xref:System.Windows.Input.ICommandSource&gt;, the &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; and &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt; events are raised on the element with keyboard focus.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;에 설정 되어 있지는 &lt;xref:System.Windows.Input.ICommandSource&gt;, &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt;및 &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt;키보드 포커스가 있는 요소에 대해 발생 하는.&lt;/xref:System.Windows.Input.CommandManager.CanExecute&gt; &lt;/xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; &lt;/xref:System.Windows.Input.ICommandSource&gt; &lt;/xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A user defined data type.</source>
          <target state="translated">사용자 정의 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The command target.</source>
          <target state="translated">명령 대상입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the command can execute on the current command target; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재 명령 대상;에 대해 명령을 실행할 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph> is not a <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph>is not a <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Occurs when changes to the command source are detected by the command manager.</source>
          <target state="translated">명령 관리자가 명령 소스에 변경 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>These changes often affect whether the command should execute on the current command target.</source>
          <target state="translated">이러한 변경 내용을 자주에 영향을 현재 명령 대상에서 명령을 실행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Input.RoutedCommand&gt; listens for the &lt;xref:System.Windows.Input.CommandManager.RequerySuggested&gt; event, which is raised by the &lt;xref:System.Windows.Input.CommandManager&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.RoutedCommand&gt; &lt;xref:System.Windows.Input.CommandManager.RequerySuggested&gt; &lt;xref:System.Windows.Input.CommandManager&gt;.&lt;/xref:System.Windows.Input.CommandManager&gt; 발생 하는 이벤트&lt;/xref:System.Windows.Input.CommandManager.RequerySuggested&gt; 를 수신합니다&lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Input.CommandManager.RequerySuggested&gt; event is raised whenever conditions are met that may change the whether the command should execute, such as a change in keyboard focus.</source>
          <target state="translated">&lt;xref:System.Windows.Input.CommandManager.RequerySuggested&gt;이벤트는 조건이 충족 될 때마다 발생 여부를 변경할 수 있는 키보드 포커스 변경에에서 같은 명령을 실행 해야 합니다.&lt;/xref:System.Windows.Input.CommandManager.RequerySuggested&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the command receives the &lt;xref:System.Windows.Input.CommandManager.RequerySuggested&gt; event, it raises the CanExecuteChanged event.</source>
          <target state="translated">명령의 받을 때의 &lt;xref:System.Windows.Input.CommandManager.RequerySuggested&gt;이벤트 CanExecuteChanged 이벤트를 발생 시킵니다.&lt;/xref:System.Windows.Input.CommandManager.RequerySuggested&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, the command source will listen for this event and query the &lt;xref:System.Windows.Input.RoutedCommand&gt; by way of the &lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt; method.</source>
          <target state="translated">이 이벤트와 쿼리 명령 소스 수신할 일반적으로 &lt;xref:System.Windows.Input.RoutedCommand&gt;통해는 &lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;메서드.&lt;/xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt; &lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most command sources will disable themselves if the command cannot be executed, as part of their command binding.</source>
          <target state="translated">대부분의 명령 소스 명령이 없습니다 실행할 수 있으면 해당 명령 바인딩의 일환으로 비활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of this is when a &lt;xref:System.Windows.Controls.MenuItem&gt; grays itself out when the command cannot be executed.</source>
          <target state="translated">이러한 예는 경우는 &lt;xref:System.Windows.Controls.MenuItem&gt;명령을 실행할 수 없는 경우 회색으로.&lt;/xref:System.Windows.Controls.MenuItem&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some situations, the &lt;xref:System.Windows.Input.CommandManager&gt; is unaware of a change in conditions that alters the ability of a command to execute.</source>
          <target state="translated">일부 경우에는 &lt;xref:System.Windows.Input.CommandManager&gt;명령을 실행 하는 기능을 변경 하는 조건 변경을 인식 하지 않습니다.&lt;/xref:System.Windows.Input.CommandManager&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these cases, you can force the &lt;xref:System.Windows.Input.CommandManager&gt; to raises the &lt;xref:System.Windows.Input.CommandManager.RequerySuggested&gt; event by calling the &lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt; method, this will in turn cause the &lt;xref:System.Windows.Input.RoutedCommand&gt; to raise the CanExecuteChanged event.</source>
          <target state="translated">이러한 경우에 적용할 수 있습니다는 &lt;xref:System.Windows.Input.CommandManager&gt;발생 하는 &lt;xref:System.Windows.Input.CommandManager.RequerySuggested&gt;호출 하 여 이벤트는 &lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;메서드, 이렇게 하면는 &lt;xref:System.Windows.Input.RoutedCommand&gt;CanExecuteChanged 이벤트를 발생 시키는.&lt;/xref:System.Windows.Input.RoutedCommand&gt; &lt;/xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt; &lt;/xref:System.Windows.Input.CommandManager.RequerySuggested&gt; &lt;/xref:System.Windows.Input.CommandManager&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Executes the <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on the current command target.</source>
          <target state="translated">실행 된 <bpt id="p1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 명령 대상입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual logic that executes the &lt;xref:System.Windows.Input.RoutedCommand&gt; is not contained in the Execute methods.</source>
          <target state="translated">실행 하는 실제 논리는 &lt;xref:System.Windows.Input.RoutedCommand&gt;Execute 메서드에 포함 되지 않은.&lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Execute raises the &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; and &lt;xref:System.Windows.Input.CommandManager.Executed&gt; events, which tunnel and bubble through the element tree looking for an object with a &lt;xref:System.Windows.Input.CommandBinding&gt;.</source>
          <target state="translated">실행 되는 &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt;및 &lt;xref:System.Windows.Input.CommandManager.Executed&gt;에 &lt;xref:System.Windows.Input.CommandBinding&gt;.&lt;/xref:System.Windows.Input.CommandBinding&gt; 개체를 찾는 트리는 터널링 및 거품형 요소를 통해 이벤트&lt;/xref:System.Windows.Input.CommandManager.Executed&gt; &lt;/xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; 를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a &lt;xref:System.Windows.Input.CommandBinding&gt; for that &lt;xref:System.Windows.Input.RoutedCommand&gt; is found, then the &lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt; attached to &lt;xref:System.Windows.Input.CommandBinding&gt; is called.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.Input.CommandBinding&gt;해당 &lt;xref:System.Windows.Input.RoutedCommand&gt;발견 되 면 &lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;에 연결 된 &lt;xref:System.Windows.Input.CommandBinding&gt;호출 됩니다.&lt;/xref:System.Windows.Input.CommandBinding&gt; &lt;/xref:System.Windows.Input.ExecutedRoutedEventHandler&gt; &lt;/xref:System.Windows.Input.RoutedCommand&gt; &lt;/xref:System.Windows.Input.CommandBinding&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>These handlers supply the programming logic that performs the &lt;xref:System.Windows.Input.RoutedCommand&gt;.</source>
          <target state="translated">이러한 처리기 &lt;xref:System.Windows.Input.RoutedCommand&gt;.&lt;/xref:System.Windows.Input.RoutedCommand&gt; 수행 하는 프로그래밍 논리를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; and &lt;xref:System.Windows.Input.CommandManager.Executed&gt; events are raised on the &lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt;고 &lt;xref:System.Windows.Input.CommandManager.Executed&gt; &lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;.&lt;/xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt; 이벤트 발생&lt;/xref:System.Windows.Input.CommandManager.Executed&gt; &lt;/xref:System.Windows.Input.CommandManager.PreviewExecuted&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt; is not set on the &lt;xref:System.Windows.Input.ICommandSource&gt;, the &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; and &lt;xref:System.Windows.Input.CommandManager.Executed&gt; events are raised on the element with keyboard focus.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;에 설정 되어 있지는 &lt;xref:System.Windows.Input.ICommandSource&gt;, &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt;및 &lt;xref:System.Windows.Input.CommandManager.Executed&gt;키보드 포커스가 있는 요소에 대해 발생 하는.&lt;/xref:System.Windows.Input.CommandManager.Executed&gt; &lt;/xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; &lt;/xref:System.Windows.Input.ICommandSource&gt; &lt;/xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>User defined parameter to be passed to the handler.</source>
          <target state="translated">사용자 정의 처리기에 전달할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Element at which to begin looking for command handlers.</source>
          <target state="translated">명령 처리기를 찾고 시작 하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph> is not a <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph>is not a <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the collection of <bpt id="p1">&lt;xref href="System.Windows.Input.InputGesture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that are associated with this command.</source>
          <target state="translated">컬렉션을 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.Input.InputGesture"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 명령과 사용 하 여 연결 된 개체가 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The input gestures.</source>
          <target state="translated">입력된 제스처입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets the name of the command.</source>
          <target state="translated">명령의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be used when referencing a &lt;xref:System.Windows.Input.RoutedCommand&gt; in <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">이 속성을 참조할 때 사용할 수는 &lt;xref:System.Windows.Input.RoutedCommand&gt;에 <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>.&lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name of the command.</source>
          <target state="translated">명령 이름입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the type that is registered with the command.</source>
          <target state="translated">명령을 사용 하 여 등록 된 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The type of the command owner.</source>
          <target state="translated">명령 소유자의 형식입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For a description of this members, see &lt;xref:System.Windows.Input.ICommand.CanExecute*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Windows.Input.ICommand.CanExecute*&gt;.&lt;/xref:System.Windows.Input.ICommand.CanExecute*&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Input.RoutedCommand&gt; instance is cast to an &lt;xref:System.Windows.Input.ICommand&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Windows.Input.RoutedCommand&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Windows.Input.ICommand&gt;인터페이스.&lt;/xref:System.Windows.Input.ICommand&gt; &lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Data used by the command.</source>
          <target state="translated">명령에 의해 사용 되는 데이터입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If the command does not require data to be passed, this object can be set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 개체 설정할 수 있습니다 명령이 데이터를 전달할 필요가 없으면, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this command can be executed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우이 명령을 실행할 수 있습니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For a description of this members, see &lt;xref:System.Windows.Input.ICommand.Execute*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Windows.Input.ICommand.Execute*&gt;.&lt;/xref:System.Windows.Input.ICommand.Execute*&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Windows.Input.RoutedCommand&gt; instance is cast to an &lt;xref:System.Windows.Input.ICommand&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Windows.Input.RoutedCommand&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Windows.Input.ICommand&gt;인터페이스.&lt;/xref:System.Windows.Input.ICommand&gt; &lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Data used by the command.</source>
          <target state="translated">명령에 의해 사용 되는 데이터입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If the command does not require data to be passed, this object can be set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 개체 설정할 수 있습니다 명령이 데이터를 전달할 필요가 없으면, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>