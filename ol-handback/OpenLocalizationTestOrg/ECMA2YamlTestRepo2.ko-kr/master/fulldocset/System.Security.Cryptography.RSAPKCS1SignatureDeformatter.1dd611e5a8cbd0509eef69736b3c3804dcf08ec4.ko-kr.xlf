<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04142c8e1300d9da8b309a423d45923d86120b3a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.RSAPKCS1SignatureDeformatter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cda4a26f69824b8521da10e5a16fc09c693f8de9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f770f0557b4dede994dd33ddcfe2d293cee43df</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Verifies an <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> PKCS #1 version 1.5 signature.</source>
          <target state="translated">확인 된 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> PKCS #1 버전 1.5 서명을 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is used to verify a digital signature made with the &lt;xref:System.Security.Cryptography.RSA&gt; algorithm.</source>
          <target state="translated">이 클래스는 사용 하 여 디지털 서명을 확인 하는 데 사용 된 &lt;xref:System.Security.Cryptography.RSA&gt;알고리즘.&lt;/xref:System.Security.Cryptography.RSA&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter&gt; to create digital signatures with the &lt;xref:System.Security.Cryptography.RSA&gt; algorithm.</source>
          <target state="translated">사용 하 여 &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter&gt;와 디지털 서명을 생성 하는 &lt;xref:System.Security.Cryptography.RSA&gt;알고리즘.&lt;/xref:System.Security.Cryptography.RSA&gt; &lt;/xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSAPKCS1SignatureDeformatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSAPKCS1SignatureDeformatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey%2A&gt; and &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm%2A&gt; to set the key and hash algorithm before calling &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey%2A&gt; &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm%2A&gt; &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt;.&lt;/xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt; 를 호출 하기 전에 키 및 해시 알고리즘을 설정 하&lt;/xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm%2A&gt; 고&lt;/xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey%2A&gt; 사용 하 여</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSAPKCS1SignatureDeformatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified key.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSAPKCS1SignatureDeformatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 키를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm%2A&gt; to set the hash algorithm before calling &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm%2A&gt; &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt;.&lt;/xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt; 를 호출 하기 전에 해시 알고리즘을 설정&lt;/xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm%2A&gt; 하는 데</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The instance of <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the public key.</source>
          <target state="translated">인스턴스 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 공개 키를 보유 하는 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key &lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key &lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Sets the hash algorithm to use for verifying the signature.</source>
          <target state="translated">서명을 확인 하는 데 사용할 해시 알고리즘을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set a hash algorithm before calling &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt;.&lt;/xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt; 를 호출 하기 전에 해시 알고리즘을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The name of the hash algorithm to use for verifying the signature.</source>
          <target state="translated">서명을 확인 하는 데 사용할 해시 알고리즘의 이름입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Sets the public key to use for verifying the signature.</source>
          <target state="translated">서명 확인에 사용할 공개 키를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set a key before calling &lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt;.&lt;/xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A&gt; 를 호출 하기 전에 키를 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The instance of <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the public key.</source>
          <target state="translated">인스턴스 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 공개 키를 보유 하는 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key &lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key &lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Verifies the <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> PKCS#1 signature for the specified data.</source>
          <target state="translated">확인 된 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 데이터에 대 한 PKCS&amp;#1; 서명을 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must specify a key and a hash algorithm before calling this method.</source>
          <target state="translated">이 메서드를 호출 하기 전에 키와 해시 알고리즘을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The data signed with <ph id="ph1">`rgbSignature`</ph>.</source>
          <target state="translated">로 서명 된 데이터는 <ph id="ph1">`rgbSignature`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The signature to be verified for <ph id="ph1">`rgbHash`</ph>.</source>
          <target state="translated">서명을 대 한 확인할 <ph id="ph1">`rgbHash`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">rgbSignature</ph><ept id="p2">&lt;/code&gt;</ept> matches the signature computed using the specified hash algorithm and key on <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">rgbHash</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">rgbSignature</ph> <ept id="p2">&lt;/code&gt;</ept> 에 지정 된 해시 알고리즘 및 키를 사용 하 여 계산 된 서명과 일치 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">rgbHash</ph> <ept id="p3">&lt;/code&gt;</ept>, 그렇지 않으면 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The key is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The key is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-or-       The hash algorithm is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는-해시 알고리즘은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbHash</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbHash</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbSignature</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgbSignature</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>