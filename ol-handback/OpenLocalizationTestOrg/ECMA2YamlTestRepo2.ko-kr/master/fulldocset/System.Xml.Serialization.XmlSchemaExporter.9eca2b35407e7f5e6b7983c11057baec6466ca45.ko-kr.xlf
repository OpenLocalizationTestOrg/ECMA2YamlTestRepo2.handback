<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c9563dfbf08d9b28b8c55e199eecee4e05933f4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Serialization.XmlSchemaExporter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0eea7c1274d6f0ea29f3c9f71311bd6a4a7955c5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccc8ead997bb1571935b5ccf8a674c60a8f2b144</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Populates &lt;xref:System.Xml.Schema.XmlSchema&gt; objects with XML schema element declarations that are found in type mapping objects.</source>
          <target state="translated">채웁니다 &lt;xref:System.Xml.Schema.XmlSchema&gt;에 있는 XML 스키마 요소 선언 사용 하 여 개체 형식 매핑 개체입니다.&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XmlSchemaExporter class provides a programmatic representation of an XML Schema Definition language (XSD) document.</source>
          <target state="translated">XmlSchemaExporter 클래스에는 XML 스키마 정의 언어 (XSD) 문서로의 프로그래밍 방식 표현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of using XmlSchemaExporter directly, use the &lt;xref:System.Web.Services.Description.ServiceDescriptionReflector&gt; class or the <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">사용 하 여 XmlSchemaExporter를 직접 사용 하지 않고는 &lt;xref:System.Web.Services.Description.ServiceDescriptionReflector&gt;클래스 또는 <bpt id="p1">[</bpt>XML 스키마 정의 도구 (Xsd.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.&lt;/xref:System.Web.Services.Description.ServiceDescriptionReflector&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Services.Description.ServiceDescriptionReflector&gt; class creates &lt;xref:System.Web.Services.Description.ServiceDescription&gt; objects from classes that are identified as Web services.</source>
          <target state="translated">&lt;xref:System.Web.Services.Description.ServiceDescriptionReflector&gt;클래스가 생성 &lt;xref:System.Web.Services.Description.ServiceDescription&gt;웹 서비스로 식별 되는 클래스의 개체입니다.&lt;/xref:System.Web.Services.Description.ServiceDescription&gt; &lt;/xref:System.Web.Services.Description.ServiceDescriptionReflector&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>It uses the XmlSchemaExporter class when a Web service class specifies:      -   Literal use, indicating that the contents of SOAP message parameters and return values (or request and response documents) are literally specified with XML schema definitions.</source>
          <target state="translated">웹 서비스 클래스를 지정 하는 경우에 XmlSchemaExporter 클래스를 사용:-를 사용 하 SOAP의 내용을 메시지 매개 변수 및 값 (또는 요청 및 응답 문서) 명시적으로 지정 된 XML 스키마 정의를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Non-SOAP implementations of Web services using the HTTP-GET and HTTP-POST operations.</source>
          <target state="translated">-HTTP GET 및 HTTP POST 작업을 사용 하 여 웹 서비스의 비 SOAP 구현 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Xsd.exe generates XML schema documents from one or more types in a run-time assembly file using the XmlSchemaExporter class and reflection.</source>
          <target state="translated">Xsd.exe는 XmlSchemaExporter 클래스 및 리플렉션을 사용 하 여 런타임에 어셈블리 파일에 하나 이상의 형식에서 XML 스키마 문서를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemaExporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlSchemaExporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xml.Serialization.XmlSchemaExporter&gt; class supplies the collection of &lt;xref:System.Xml.Schema.XmlSchema&gt; objects to which XML schema element declarations are to be added.</source>
          <target state="translated">&lt;xref:System.Xml.Serialization.XmlSchemaExporter&gt;클래스의 컬렉션을 제공 &lt;xref:System.Xml.Schema.XmlSchema&gt;개체는 xml 스키마 요소 선언을 추가할 수 있습니다.&lt;/xref:System.Xml.Schema.XmlSchema&gt; &lt;/xref:System.Xml.Serialization.XmlSchemaExporter&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to create an instance of the &lt;xref:System.Xml.Serialization.XmlSchemaExporter&gt; class directly.</source>
          <target state="translated">인스턴스를 만들 필요가 없습니다는 &lt;xref:System.Xml.Serialization.XmlSchemaExporter&gt;클래스를 직접.&lt;/xref:System.Xml.Serialization.XmlSchemaExporter&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A collection of &lt;xref:System.Xml.Schema.XmlSchema&gt; objects to which element declarations obtained from type mappings are added.</source>
          <target state="translated">컬렉션 &lt;xref:System.Xml.Schema.XmlSchema&gt;개체는 요소에 형식 매핑에서 얻은 선언이 추가 됩니다.&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Exports an <bpt id="p1">**</bpt><ph id="ph1">&amp;lt;</ph>any<ph id="ph2">&amp;gt;</ph><ept id="p1">**</ept> element to the &lt;xref:System.Xml.Schema.XmlSchema&gt; object that is identified by the specified namespace.</source>
          <target state="translated">내보내기는 <bpt id="p1">**</bpt> <ph id="ph1">&amp;lt;</ph>모든<ph id="ph2">&amp;gt;</ph> <ept id="p1">**</ept> 요소는 &lt;xref:System.Xml.Schema.XmlSchema&gt;지정 된 네임 스페이스에 의해 식별 되는 개체입니다.&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The namespace of the XML schema document to which to add an <bpt id="p1">**</bpt><ph id="ph1">&amp;lt;</ph>any<ph id="ph2">&amp;gt;</ph><ept id="p1">**</ept> element.</source>
          <target state="translated">XML 스키마 문서를 추가할의 네임 스페이스는 <bpt id="p1">**</bpt> <ph id="ph1">&amp;lt;</ph>모든<ph id="ph2">&amp;gt;</ph> <ept id="p1">**</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An arbitrary name assigned to the <bpt id="p1">**</bpt><ph id="ph1">&amp;lt;</ph>any<ph id="ph2">&amp;gt;</ph><ept id="p1">**</ept> element declaration.</source>
          <target state="translated">에 할당 된 임의의 이름을 <bpt id="p1">**</bpt> <ph id="ph1">&amp;lt;</ph>모든<ph id="ph2">&amp;gt;</ph> <ept id="p1">**</ept> 요소 선언이 발견 되었습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Adds an element declaration for an object or type to a SOAP message or to an &lt;xref:System.Xml.Schema.XmlSchema&gt; object.</source>
          <target state="translated">개체 또는 형식 또는 SOAP 메시지에 대 한 요소 선언을 추가 하는 &lt;xref:System.Xml.Schema.XmlSchema&gt;개체입니다.&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlMembersMapping"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains mappings to export.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Serialization.XmlMembersMapping"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 내보낼 매핑을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The string "any" with an appended integer.</source>
          <target state="translated">문자열 "임의" 추가 된 정수가 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adds an element declaration to the applicable &lt;xref:System.Xml.Schema.XmlSchema&gt; for each of the element parts of a literal SOAP message definition.</source>
          <target state="translated">해당 요소 선언을 추가 &lt;xref:System.Xml.Schema.XmlSchema&gt;리터럴 SOAP 메시지 정의 요소 부분에 대 한.&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each SOAP message part, the ExportMembersMapping method adds an XML schema element declaration to the &lt;xref:System.Xml.Schema.XmlSchema&gt; that uses the same namespace as the part.</source>
          <target state="translated">ExportMembersMapping 메서드는 &lt;xref:System.Xml.Schema.XmlSchema&gt;파트와 동일한 네임 스페이스를 사용 하&lt;/xref:System.Xml.Schema.XmlSchema&gt; 는 XML 스키마 요소 선언을 추가 각 SOAP 메시지 부분에 대 한</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>A literal message definition normally contains a single part.</source>
          <target state="translated">리터럴 메시지 정의 일반적으로 단일 부분을 포함합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.Services.Description.ServiceDescriptionReflector&gt; class instead.</source>
          <target state="translated">사용 하 여 &lt;xref:System.Web.Services.Description.ServiceDescriptionReflector&gt;클래스를 대신 합니다.&lt;/xref:System.Web.Services.Description.ServiceDescriptionReflector&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.</source>
          <target state="translated">내부.NET Framework 형식 설명 언어 WSDL (웹 서비스) 메시지 정의 요소 부분에 대 한 매핑을 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Adds an element declaration to the applicable &lt;xref:System.Xml.Schema.XmlSchema&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.</source>
          <target state="translated">해당 요소 선언을 추가 &lt;xref:System.Xml.Schema.XmlSchema&gt;리터럴 SOAP 메시지 정의의 요소 부분에 대 한 바깥쪽 요소에 포함 되는지 여부를 지정 합니다.&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The internal mapping between a .NET Framework type and an XML schema element.</source>
          <target state="translated">.NET Framework 유형 및 XML 스키마 요소 간의 내부 매핑.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the schema elements that enclose the schema are to be included; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>스키마는 스키마 요소; 포함 될 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Adds an element declaration to the applicable &lt;xref:System.Xml.Schema.XmlSchema&gt; object for a single element part of a literal SOAP message definition.</source>
          <target state="translated">해당 요소 선언을 추가 &lt;xref:System.Xml.Schema.XmlSchema&gt;리터럴 SOAP 메시지 정의의 단일 요소 부분에 대 한 개체입니다.&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload adds an XML schema element declaration to the &lt;xref:System.Xml.Schema.XmlSchema&gt; that uses the same namespace as the SOAP message part.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;SOAP 메시지 파트와 동일한 네임 스페이스를 사용 하&lt;/xref:System.Xml.Schema.XmlSchema&gt; 는 XML 스키마 요소 선언을 추가 하는이 오버 로드</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The literal message definition must contain a single part.</source>
          <target state="translated">리터럴 메시지 정의 단일 부분을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Web.Services.Description.ServiceDescriptionReflector&gt; class instead.</source>
          <target state="translated">사용 하 여 &lt;xref:System.Web.Services.Description.ServiceDescriptionReflector&gt;클래스를 대신 합니다.&lt;/xref:System.Web.Services.Description.ServiceDescriptionReflector&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.</source>
          <target state="translated">내부.NET Framework 형식 매핑을 설명 언어 WSDL (웹 서비스) 메시지 정의 요소 부분에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the qualified XML name of the exported element declaration.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;내보낸된 요소 선언이의 정규화 된 XML 이름을 나타내는입니다.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Adds an element declaration for a .NET Framework type to the applicable &lt;xref:System.Xml.Schema.XmlSchema&gt; object.</source>
          <target state="translated">해당.NET Framework 형식에 대 한 요소 선언을 추가 &lt;xref:System.Xml.Schema.XmlSchema&gt;개체입니다.&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The internal mapping between a .NET Framework type and an XML schema element.</source>
          <target state="translated">.NET Framework 유형 및 XML 스키마 요소 간의 내부 매핑.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>