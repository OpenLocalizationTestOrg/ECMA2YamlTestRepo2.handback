<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bfaa1654beace795d66dd704b303ee0dce21623</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.ValueSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1997f43faa17232d4b76fedf7e327f8c25bcc56e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bdb60dfdbb382bf566de8f70ff8958c3514e1dc7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reports the information returned from <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DependencyPropertyHelper.GetValueSource%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">반환 된 정보를 보고 <ph id="ph1">&amp;lt;</ph>xref:System.Windows.DependencyPropertyHelper.GetValueSource%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most of the information that ValueSource transmits is contained in the &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt; property.</source>
          <target state="translated">에 포함 된 대부분의 ValueSource를 전송 하는 정보는 &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;속성.&lt;/xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property contains an enumeration value that specifies exactly one aspect of the overall <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system that is responsible for the effective value of a dependency property.</source>
          <target state="translated">이 속성의 전체 정확히 한 가지 측면을 지정 하는 열거형 값을 포함 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> 속성 시스템은 종속성 속성의 유효 값에 대 한 책임 지는 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference).</source>
          <target state="translated">종속성 속성 값에 대 한 흥미로운 될 수 있는 다른 정보에는 기준 값 이외 여부 값은 애니메이션 효과 줄 값 (예: 바인딩 또는 동적 리소스 참조)는 식과 관련 되어 있는지 여부 및입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This information is reported by &lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt; and &lt;xref:System.Windows.ValueSource.IsExpression%2A&gt; respectively.</source>
          <target state="translated">이 정보를 보고 &lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;및 &lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;각각.&lt;/xref:System.Windows.ValueSource.IsExpression%2A&gt; &lt;/xref:System.Windows.ValueSource.IsAnimated%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</source>
          <target state="translated">또한 강제 변환 속성 값에 대해 작동 하는 경우 속성은 적절된 한 값을 유지 하 고 속성 값이 특정 강제 변환의 제약 조건을 변경 되거나 리프트 원하는 값에 도달 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A coerced property that is not at its desired value will report that &lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt; is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">강제 변환된 속성 값이 적절 하지 않은 보고 합니다 &lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;은 <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.ValueSource.IsCoerced%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets a value of the <bpt id="p1">&lt;xref href="System.Windows.BaseValueSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration, which reports the source that provided the dependency property system with a value.</source>
          <target state="translated">값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.BaseValueSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값이 종속성 속성 시스템을 제공 하는 소스를 보고 하는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base value is not the effective value if either coercion or animation is acting on the property.</source>
          <target state="translated">기본 값이 유효 값 강제 변환 또는 애니메이션이 속성에서 수행 하는 경우.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check &lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt; and &lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt; if you want to determine whether the base value is the effective value.</source>
          <target state="translated">확인 &lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;및 &lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;기준 값이 유효한 지 여부를 확인 하려는 경우.&lt;/xref:System.Windows.ValueSource.IsCoerced%2A&gt; &lt;/xref:System.Windows.ValueSource.IsAnimated%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might also want to check &lt;xref:System.Windows.ValueSource.IsExpression%2A&gt; to see if the base value was evaluated out of an expression.</source>
          <target state="translated">확인할 수도 있습니다 &lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;기준 값 식을 계산 것을 볼 수 있습니다.&lt;/xref:System.Windows.ValueSource.IsExpression%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A value of the enumeration.</source>
          <target state="translated">열거형의 값입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether this <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is equal to a specified object.</source>
          <target state="translated">나타내는 값을 반환 하는지 여부를이 <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 개체가 같은지를 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation supports value equality, based on each of the property values of each &lt;xref:System.Windows.ValueSource&gt; structure.</source>
          <target state="translated">이 구현에서는 값이 같은지를 각각의 각 속성 값에 따라 &lt;xref:System.Windows.ValueSource&gt;구조.&lt;/xref:System.Windows.ValueSource&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The object to compare with this <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">와 비교할 개체 <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the provided object is equivalent to the current <bpt id="p2">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>제공 된 개체가 현재 같으면 <bpt id="p2">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 대 한 해시 코드를 반환 합니다. <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This hash code is based on the &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt; value.</source>
          <target state="translated">이 해시 코드 기반는 &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;값.&lt;/xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A 32-bit unsigned integer hash code.</source>
          <target state="translated">부호 없는 32 비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets a value that declares whether the property is being animated.</source>
          <target state="translated">속성이 애니메이션 되는지 여부를 선언 하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any property that is currently being animated, the source reported by &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt; is not immediately relevant, because the animation operates at higher dependency property precedence than the base value.</source>
          <target state="translated">현재 애니메이션을 적용 하는 모든 속성에 대 한 소스에서 보고 &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;종속성 속성 보다 우선 순위가 기준 값에 애니메이션 작동 하기 때문에 즉시 관련 되지 않습니다.&lt;/xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about precedence and animations, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">우선 순위 및 애니메이션에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>종속성 속성 값 우선 순위<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property is animated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>속성에 애니메이션; 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets a value that declares whether this value resulted from a <bpt id="p1">&lt;xref href="System.Windows.CoerceValueCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation applied to a dependency property.</source>
          <target state="translated">이 값에서 발생 하는지 여부를 선언 하는 값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.CoerceValueCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구현 종속성 속성에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</source>
          <target state="translated">강제 변환 속성 값에 대해 작동 하는 경우 속성은 적절된 한 값을 유지 하 고 속성 값이 특정 강제 변환의 제약 조건을 변경 되거나 리프트 원하는 값에 도달 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>A coerced property that is not at its desired value will report that IsCoerced is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">강제 변환된 속성 값이 적절 하지 않은 IsCoerced 중임을 보고 됩니다 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set.</source>
          <target state="translated">기준 값 보다 높은 우선 순위로 역할 수 있고 기본 값이 설정 되는 방식에 참여 엄밀히 말해이 강제 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore the state of being coerced is reported by this property, rather than by a value of the &lt;xref:System.Windows.BaseValueSource&gt; enumeration.</source>
          <target state="translated">이 속성의 값이 아니라 강제 변환 상태 따라서 보고 되는 &lt;xref:System.Windows.BaseValueSource&gt;열거형.&lt;/xref:System.Windows.BaseValueSource&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about coercion, base values, and precedence, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">강제 변환, 기준 값 및 우선 순위에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>종속성 속성 값 우선 순위<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value resulted from a <bpt id="p2">&lt;xref href="System.Windows.CoerceValueCallback"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implementation applied to a dependency property; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>값의 결과인 경우는 <bpt id="p2">&lt;xref href="System.Windows.CoerceValueCallback"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 종속성 속성에 적용 되는 구현 그렇지 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets whether the value was set by the &lt;xref:System.Windows.DependencyObject.SetCurrentValue*&gt; method.</source>
          <target state="translated">값에 의해 설정 된 있는지 여부를 가져옵니다는 &lt;xref:System.Windows.DependencyObject.SetCurrentValue*&gt;메서드.&lt;/xref:System.Windows.DependencyObject.SetCurrentValue*&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value was set by the &lt;xref:System.Windows.DependencyObject.SetCurrentValue*&gt; method; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>값에 의해 설정 된 경우는 &lt;xref:System.Windows.DependencyObject.SetCurrentValue*&gt;메서드, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.DependencyObject.SetCurrentValue*&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets a value that declares whether this value resulted from an evaluated expression.</source>
          <target state="translated">이 값이 계산된 된 식에서 발생 하는지 여부를 선언 하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This might be a <bpt id="p1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> supporting a binding, or an internal expression such as those that support the <bpt id="p2">[</bpt>DynamicResource Markup Extension<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이렇게 할 수는 <bpt id="p1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 바인딩이나 지 원하는 것과 같은 내부 식을 지 원하는 <bpt id="p2">[</bpt>DynamicResource 태그 확장<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;.</source>
          <target state="translated">계산된 된 식에는 특정 기준 값, &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;.&lt;/xref:System.Windows.ValueSource.BaseValueSource%2A&gt; 값으로, 식이 적용 된 상태를 설정 또한 보고 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt; is still very relevant for any property where IsExpression is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;여전히 매우 관련 된 모든 속성에 대 한 여기서는 먼저 IsExpression <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.</source>
          <target state="translated">값 식을 통해 반환 되었는지 여부를 이해 하는 값이 설정 되지를 직접 같은 상속 된 속성 값 또는 서식 파일을 통해 처럼 경우에 특히 유용 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value.</source>
          <target state="translated">식을 계산 하지 못하게 하는 경우 (바인딩이 실패 했습니다.; 해당 이름의 리소스가 없습니다) 기본값 값에서 가장 가능성이 높은 속성 시스템의 다른 참가자에 일부 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>That source is then reported in &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;.</source>
          <target state="translated">해당 소스 &lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;.&lt;/xref:System.Windows.ValueSource.BaseValueSource%2A&gt; 보고 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failed expression evaluations will return <ph id="ph1">`false`</ph> for IsExpression.</source>
          <target state="translated">식 계산이 실패는 반환 <ph id="ph1">`false`</ph> 먼저 IsExpression에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value came from an evaluated expression; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>계산 된 식; 값이 제공 되는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Determines whether two <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances have the same value.</source>
          <target state="translated">두 결정 <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스가 같은 값을 가져야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation calls &lt;xref:System.Windows.ValueSource.Equals%2A&gt;, and supports value equality based on all properties of &lt;xref:System.Windows.ValueSource&gt;.</source>
          <target state="translated">이 구현에서는 호출 &lt;xref:System.Windows.ValueSource.Equals%2A&gt;, 고 지원 값 &lt;xref:System.Windows.ValueSource&gt;.&lt;/xref:System.Windows.ValueSource&gt; 의 모든 속성에 따라 같음&lt;/xref:System.Windows.ValueSource.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The first <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">첫 번째 <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">두 번째 <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the two <bpt id="p2">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances are equivalent; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>하는 경우 두 <bpt id="p2">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스는 해당 하 고, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Determines whether two <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances do not have the same value.</source>
          <target state="translated">두 결정 <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스가 같은 값이 없습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation calls &lt;xref:System.Windows.ValueSource.Equals%2A&gt;, returning its negation, and supports value equality based on all properties of &lt;xref:System.Windows.ValueSource&gt;.</source>
          <target state="translated">이 구현에서는 &lt;xref:System.Windows.ValueSource.Equals%2A&gt;해당 부정 및 지원 값이 같은지 &lt;xref:System.Windows.ValueSource&gt;.&lt;/xref:System.Windows.ValueSource&gt; 의 모든 속성에 따라 반환,&lt;/xref:System.Windows.ValueSource.Equals%2A&gt; 호출</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The first <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">첫 번째 <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">두 번째 <bpt id="p1">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the two <bpt id="p2">&lt;xref href="System.Windows.ValueSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances are not equivalent; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>하는 경우 두 <bpt id="p2">&lt;xref href="System.Windows.ValueSource"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스는 해당 하 고, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>