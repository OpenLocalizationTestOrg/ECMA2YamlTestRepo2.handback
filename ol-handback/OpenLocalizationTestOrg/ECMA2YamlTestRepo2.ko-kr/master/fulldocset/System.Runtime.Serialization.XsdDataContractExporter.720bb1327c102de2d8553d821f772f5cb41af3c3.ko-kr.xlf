<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9572ccf006d4af469072d3fb715f2677c9bb52d7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.XsdDataContractExporter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">421e91ca56707c69ecbeceb45beac1dc8c69d8a8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">326d48fe5900e17205386489368fe2678423741f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows the transformation of a set of <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> types that are used in data contracts into an XML schema file (.xsd).</source>
          <target state="translated">집합의 변환을 허용 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> XML 스키마 파일 (.xsd)로 데이터 계약에 사용 되는 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the XsdDataContractExporter class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services.</source>
          <target state="translated">다른 웹 서비스에서 사용할 수 있도록 각 형식에 대 한 XML 스키마를 내보내야 할 때와 공용 언어 런타임 (CLR) 형식으로 표시 된 데이터를 통합 하는 웹 서비스를 만든 경우 XsdDataContractExporter 클래스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, XsdDataContractExporter transforms a set of CLR types into XML schemas.</source>
          <target state="translated">즉, XsdDataContractExporter는 CLR 형식 집합을 XML 스키마로 변환합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For more information about the types that can be used, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.</source>
          <target state="translated">(사용할 수 있는 형식에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 계약 Serializer에서 지 원하는 유형<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.) 스키마를 서비스와 상호 운용 해야 하는 다른 사용자가 사용 하기 위해 WSDL 웹 서비스 설명 언어 () 문서를 통해 노출 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the &lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt; to transform XML schemas and create the CLR types that represent the data in a selected programming language.</source>
          <target state="translated">반대로, 기존 웹 서비스와 상호 운용 해야 하는 웹 서비스를 만드는 경우 사용 하 여는 &lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;XML 스키마를 변환 하 고 선택한 프로그래밍 언어로 데이터를 나타내는 CLR 형식을 작성에.&lt;/xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XsdDataContractExporter generates an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; object that contains the collection of schemas.</source>
          <target state="translated">에서는 오류가 발생 하는 XsdDataContractExporter는 &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;스키마의 컬렉션을 포함 하는 개체입니다.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access the set of schemas through the &lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt; property.</source>
          <target state="translated">액세스를 통해 스키마 집합에는 &lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;속성.&lt;/xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  To quickly generate XML schema definition (XSD) files that other Web services can consume, use the XsdDataContractExporter.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 다른 웹 서비스에서 사용할 수 있는 XML 스키마 정의 (XSD) 파일을 신속 하 게 생성 하려면는 XsdDataContractExporter를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exporting Schemas Into an XmlSchemaSet    To create an instance of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; class that contains XML schema files, you should be aware of the following.</source>
          <target state="translated">인스턴스를 만들 스키마에는 XmlSchemaSet로 내보내기는 &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;포함 XML 스키마 파일을 다음에 주의 해야 하는 클래스입니다.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of types you are exporting are recorded as an internal set of data contracts.</source>
          <target state="translated">내보내는 형식 집합은 데이터 계약의 내부 집합으로 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, you can call the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt; method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set.</source>
          <target state="translated">따라서 호출할 수 있습니다는 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;메서드 새 형식만 집합에 추가 될 것 이므로 성능을 저하 시 키 지 않고 설정 된 스키마에 새 형식을 추가 하려면 여러 번.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>During the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt; operation, the existing schemas are compared to the new schemas being added.</source>
          <target state="translated">중에서 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;작업, 기존 스키마에 추가 되는 새 스키마와 비교 됩니다.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are conflicts, an exception will be thrown.</source>
          <target state="translated">충돌이 있을 경우 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same XsdDataContractExporter instance.</source>
          <target state="translated">에 일반적으로 충돌이 동일한 XsdDataContractExporter 인스턴스에 의해 계약 (멤버가 다름) 두 형식이 동일한 데이터 계약 이름이 같지만 서로 다른 경우 내보내집니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the Exporter    A recommended way of using this class is as follows:      1.</source>
          <target state="translated">내보내기에서 A를 사용 하 여이 클래스를 사용 하는 방식은 다음과 같은 권장: 1입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use one of the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt; overloads to determine whether the specified type or set of types can be exported.</source>
          <target state="translated">중 하나를 사용 하 여는 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;지정 된 형식 또는 형식 집합을 내보낼 수 있는지 여부를 결정 하는 오버 로드.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use one of the overloads that is appropriate to your requirements.</source>
          <target state="translated">요구 사항에 적합 한 오버 로드 중 하나를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the corresponding &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt; method.</source>
          <target state="translated">해당 호출 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;메서드.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieve the schemas from the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;property.</source>
          <target state="translated">스키마를 검색 된 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;속성.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractExporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractExporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractExporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified set of schemas.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractExporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 스키마 집합을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload when you have an existing &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; to which you want to add new schemas.</source>
          <target state="translated">이 오버 로드를 사용 하 여 기존의 때 &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;를 새 스키마를 추가 하려면.&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you construct a &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt; with this overload, call the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt; method to add new types to the existing set.</source>
          <target state="translated">생성 한 후 한 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;이 오버 로드를 가진 호출는 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;기존 집합에 새 형식을 추가 하는 메서드.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt; &lt;/xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schemas to be exported.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스키마를 내보낼 수를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.</source>
          <target state="translated">어셈블리 집합에 포함 된 공용 언어 런타임 (CLR) 형식 집합을 내보낼 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> of &lt;xref:System.Reflection.Assembly&gt; that contains the assemblies with the types to export.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> 의 &lt;xref:System.Reflection.Assembly&gt;내보낼 형식 사용 하는 어셈블리가 포함 된.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the types can be exported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>형식을 내보낼 수 있습니다; 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> can be exported.</source>
          <target state="translated">공용 언어 런타임 (CLR) 형식 집합에 포함 되는지 여부를 나타내는 값을 가져옵니다는 <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> 내보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> that contains the specified types to export.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> 내보내도록 지정한 형식을 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the types can be exported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>형식을 내보낼 수 있습니다; 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.</source>
          <target state="translated">지정 된 공용 언어 런타임 (CLR) 형식을 내보낼 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to export.</source>
          <target state="translated">&lt;xref:System.Type&gt;내보낼.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type can be exported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>형식을 내보낼 수 있습니다; 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Transforms the types contained in the specified collection of assemblies.</source>
          <target state="translated">지정한 어셈블리 컬렉션에 포함 된 형식을 변형 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> (of &lt;xref:System.Reflection.Assembly&gt;) that contains the types to export.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> (의 &lt;xref:System.Reflection.Assembly&gt;) 내보낼 형식을 포함 하는.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">assemblies</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">assemblies</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Reflection.Assembly&gt; in the collection is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Reflection.Assembly&gt;컬렉션은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Transforms the types contained in the <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> passed to this method.</source>
          <target state="translated">에 포함 된 형식을 변형는 <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> 이 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A  <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> (of &lt;xref:System.Type&gt;) that contains the types to export.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> (의 &lt;xref:System.Type&gt;) 내보낼 형식을 포함 하는.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">types</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">types</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A type in the collection is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">컬렉션에 있는 형식이 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Transforms the specified <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> type into an XML schema definition language (XSD) schema.</source>
          <target state="translated">지정 된 변환 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 형식을 XML 스키마 정의 언어 (XSD) 스키마로 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt; to determine whether the type can be exported.</source>
          <target state="translated">호출 된 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;형식을 내보낼 수 있는지 여부를 확인 하려면.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling the Export method, the schema can be retrieved through the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt; property.</source>
          <target state="translated">내보내기 메서드를 호출한 후 스키마를 통해 검색할 수는 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;속성.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to transform into an XML schema.</source>
          <target state="translated">&lt;xref:System.Type&gt;XML 스키마를 변형할 수 있습니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns the top-level name and namespace for the &lt;xref:System.Type&gt;.</source>
          <target state="translated">최상위 이름과 네임 스페이스 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 를 반환합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to query.</source>
          <target state="translated">&lt;xref:System.Type&gt;쿼리입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the top-level name and namespace for this &lt;xref:System.Type&gt;, which is written to the stream when writing this object.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;이 대 한 최상위 이름과 네임 스페이스를 나타내는 &lt;xref:System.Type&gt;,이 개체를 작성할 때 스트림에 쓰는.&lt;/xref:System.Type&gt; &lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns the XML schema type for the specified type.</source>
          <target state="translated">지정된 된 형식에 대 한 XML 스키마 형식을 반환합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The main purpose of this method is to allow anonymous types in XML schema to be represented.</source>
          <target state="translated">이 방법의 주 목적은 익명 형식을 나타낼 수 있는 XML 스키마에서 허용 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because anonymous types do not have a contract name and namespace, they cannot be looked up using the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;.</source>
          <target state="translated">익명 형식은 계약 이름과 네임 스페이스를 없는 때문에 이러한 조회할 수 없는 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt; 를 사용 하 여</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the &lt;xref:System.Xml.Schema.XmlSchemaType&gt; definition for such types.</source>
          <target state="translated">이 메서드는 반환 된 &lt;xref:System.Xml.Schema.XmlSchemaType&gt;이러한 형식에 대 한 정의.&lt;/xref:System.Xml.Schema.XmlSchemaType&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The types for which the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt; method returns a valid name, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">대상 형식을 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;유효한 이름을 반환 하는 메서드,이 메서드가 반환 <ph id="ph1">`null`</ph>.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The type to return a schema for.</source>
          <target state="translated">에 대 한 스키마를 반환 형식입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the XML schema.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XML 스키마를 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns the contract name and contract namespace for the &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 계약 이름과 계약 네임 스페이스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; that was exported.</source>
          <target state="translated">&lt;xref:System.Type&gt;내보낸.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the contract name of the type and its namespace.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;유형과 해당 네임 스페이스의 계약 이름을 나타내는입니다.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> argument is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ExportOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains options that can be set for the export operation.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ExportOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 내보내기 작업에 대해 설정할 수 있는 옵션이 포함 된 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ExportOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains options used to customize how types are exported to schemas.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.ExportOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식을 스키마로 내보내는 방법을 사용자 지정 하는 데 사용 하는 옵션이 포함 된 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the collection of exported XML schemas.</source>
          <target state="translated">내보낸된 XML 스키마 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export*&gt; method.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출한 후 공용 언어 런타임 (CLR) 형식 집합에서 변형 된 스키마를 포함 하는 &lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export*&gt;메서드.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter.Export*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>