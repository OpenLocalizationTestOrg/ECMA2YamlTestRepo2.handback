<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10765428dd47242d9d2c49aa599688b8c6e428ad</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.IDataSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1191974544a9dd4fef3e0c86f501f6c7190559b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b4404793612e1a94198da7cb13bf8ac3f3ba97d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an abstract data source that data-bound controls bind to.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 바인딩하는 추상 데이터 원본을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET supports a control data-binding architecture that enables Web server controls to bind to data in a consistent fashion.</source>
          <target state="translated">ASP.NET 웹 서버 컨트롤의 데이터를 일관성 있게에 바인딩할 수 있도록 하는 컨트롤 데이터 바인딩 아키텍처를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls.</source>
          <target state="translated">데이터에 바인딩되는 웹 서버 컨트롤은 데이터 바인딩된 컨트롤 및 데이터 소스 제어 바인딩 이라고 하는 클래스 라고 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on.</source>
          <target state="translated">데이터 소스 제어에서 모든 데이터 소스를 나타낼 수 있습니다: 관계형 데이터베이스, 파일, 스트림, 비즈니스 개체 및 등입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.</source>
          <target state="translated">데이터 원본 소스 나 기본 데이터의 형식에 관계 없이 데이터 바인딩된 컨트롤에 일관 된 방식으로의 데이터 표시를 제어합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You implement the IDataSource interface when you want to implement your own custom ASP.NET data source control.</source>
          <target state="translated">사용자 고유의 사용자 지정 ASP.NET 데이터 소스 제어를 구현 하려는 경우에 IDataSource 인터페이스를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class that implements the IDataSource interface is a data source control.</source>
          <target state="translated">IDataSource 인터페이스를 구현 하는 모든 클래스는 데이터 소스 제어입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IDataSource interface serves as the foundation for all ASP.NET data source controls and defines one of the fundamental data-binding architecture concepts with its two methods: the &lt;xref:System.Web.UI.IDataSource.GetView%2A&gt; method and the &lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt; method.</source>
          <target state="translated">IDataSource 인터페이스는 해당 역할을 제어 하 고는 두 가지 방법으로 기본 데이터 바인딩 아키텍처 개념 중 하나를 정의 하는 모든 ASP.NET 데이터 원본에 대 한 기초:는 &lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;메서드 및 &lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;메서드.&lt;/xref:System.Web.UI.IDataSource.GetViewNames%2A&gt; &lt;/xref:System.Web.UI.IDataSource.GetView%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This concept is that all data source controls support one or more named views on their data.</source>
          <target state="translated">이 개념은 모든 데이터 소스 컨트롤이 데이터에 대해 하나 이상의 명명 된 뷰를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data source view object is similar to the &lt;xref:System.Data.DataView&gt; abstraction in the &lt;xref:System.Data&gt; namespace: a data-bindable, customized view of data for sorting, filtering, and other data operations that the view defines.</source>
          <target state="translated">데이터 원본 뷰 개체는 비슷합니다는 &lt;xref:System.Data.DataView&gt;추상화는 &lt;xref:System.Data&gt;네임 스페이스: 정렬, 필터링 및 보기를 정의 하는 다른 데이터 작업에 대 한 데이터의 보기를 사용자 지정 된 된 데이터 바인딩 가능 합니다.&lt;/xref:System.Data&gt; &lt;/xref:System.Data.DataView&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>At its core, a data source control does nothing more than retrieve views on data.</source>
          <target state="translated">본질적으로 데이터 소스 제어는 아무 작업도 수행 이상은 뷰 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>A data source control can have one or more associated data source view objects.</source>
          <target state="translated">데이터 소스 제어는 하나 이상의 연결 된 데이터 원본 뷰 개체를 가질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some data source controls, including those that represent relational databases such as &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; and &lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;, support only one view.</source>
          <target state="translated">일부 데이터 소스와 같은 관계형 데이터베이스를 표시 하는 것을 포함 하 여 컨트롤 &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;및 &lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;, 보기가 하나만 지원 합니다.&lt;/xref:System.Web.UI.WebControls.AccessDataSource&gt; &lt;/xref:System.Web.UI.WebControls.SqlDataSource&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other data source controls, including hierarchical data source controls such as &lt;xref:System.Web.UI.WebControls.SiteMapDataSource&gt;, support many views.</source>
          <target state="translated">다른 데이터 소스와 같은 계층적 데이터 소스 컨트롤을 포함 하 여 컨트롤 &lt;xref:System.Web.UI.WebControls.SiteMapDataSource&gt;, 여러 뷰를 지원 합니다.&lt;/xref:System.Web.UI.WebControls.SiteMapDataSource&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data source view defines the capabilities of a data source and the operations that it supports.</source>
          <target state="translated">데이터 원본 뷰는 데이터 원본 및 지 원하는 작업의 기능을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>In summary, data source controls implement the IDataSource interface, support one or more named views on the data they represent, and always support data retrieval from the data source they represent.</source>
          <target state="translated">요약 하면, 데이터 소스 컨트롤 IDataSource 인터페이스를 구현, 나타내는 데이터 원본에서 데이터 검색을 항상 지원을 나타내지만, 데이터에 대해 하나 이상의 명명 된 뷰를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data source controls always retrieve data on demand, such as when <ph id="ph1">`DataBind`</ph> is called on a data bound control.</source>
          <target state="translated">데이터 소스 컨트롤은 항상 경우와 같이 필요에 따라 데이터를 검색 <ph id="ph1">`DataBind`</ph> 데이터 바인딩된 컨트롤에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Occurs when a data source control has changed in some way that affects data-bound controls.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 영향을 주는 방식으로 데이터 소스 제어 변경 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DataSourceChanged event is raised when the properties of a data-bound control or the underlying data has changed in some way that affects the data bindings between a data-bound control and its data.</source>
          <target state="translated">DataSourceChanged 이벤트는 데이터 바인딩된 컨트롤과 데이터 간의 데이터 바인딩에 영향을 주는 방식으로 데이터 바인딩된 컨트롤 또는 기본 데이터의 속성 변경 될 때입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the event is raised if a file name property, such as the &lt;xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A&gt; property, is changed on a file-based data source control.</source>
          <target state="translated">예를 들어는 이벤트는 같은 파일 이름 속성이 &lt;xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A&gt;파일 기반 데이터 소스 제어에서 속성이 변경 되.&lt;/xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the named data source view associated with the data source control.</source>
          <target state="translated">데이터 소스 컨트롤과 연결 된 명명 된 데이터 원본 뷰를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data source control classes can support one or more views on their underlying data.</source>
          <target state="translated">데이터 소스 컨트롤 클래스는 내부 데이터에 하나 이상의 뷰를 지원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>These views are represented by instances of the &lt;xref:System.Web.UI.DataSourceView&gt; class.</source>
          <target state="translated">이러한 뷰 &lt;xref:System.Web.UI.DataSourceView&gt;클래스&lt;/xref:System.Web.UI.DataSourceView&gt; 의 인스턴스로 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data source view defines the capabilities of a data source control, and performs all the work necessary to retrieve data from the underlying data store and perform operations such as sorting, inserting, deleting, and updating.</source>
          <target state="translated">데이터 원본 뷰는 데이터 소스 컨트롤의 기능을 정의 하 고 기본 데이터 저장소에서 데이터를 검색 및 정렬, 삽입, 삭제 및 업데이트 같은 작업을 수행 하는 데 필요한 모든 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data source control classes that implement the &lt;xref:System.Web.UI.IDataSource&gt; interface implement the GetView method to return strongly typed view objects associated with the class.</source>
          <target state="translated">데이터 원본 &lt;xref:System.Web.UI.IDataSource&gt;클래스와 연결 된 강력한 형식의 뷰 개체를 반환 하려면 가지 메서드를 구현 하는 인터페이스&lt;/xref:System.Web.UI.IDataSource&gt; 를 구현 하는 컨트롤 클래스</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The name of the view to retrieve.</source>
          <target state="translated">검색할 보기의 이름입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the named <bpt id="p1">&lt;xref href="System.Web.UI.DataSourceView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the <bpt id="p2">&lt;xref href="System.Web.UI.IDataSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">명명 된 <bpt id="p1">&lt;xref href="System.Web.UI.DataSourceView"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연관 된 <bpt id="p2">&lt;xref href="System.Web.UI.IDataSource"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets a collection of names representing the list of view objects associated with the <bpt id="p1">&lt;xref href="System.Web.UI.IDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">보기 개체와 연결 된 목록을 나타내는 이름의 컬렉션을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Web.UI.IDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data source control classes can support one or more named views on their underlying data.</source>
          <target state="translated">데이터 소스 컨트롤 클래스는 내부 데이터에 하나 이상의 명명 된 뷰를 지원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetViewNames method returns a collection of view names currently associated with the data source control instance.</source>
          <target state="translated">여기서 메서드 뷰 이름은 현재 인스턴스와 관련 된 데이터 소스 컨트롤의 컬렉션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Callers can iterate through the collection of view names and retrieve individual &lt;xref:System.Web.UI.DataSourceView&gt; objects with the &lt;xref:System.Web.UI.IDataSource.GetView%2A&gt; method.</source>
          <target state="translated">호출자의 뷰 이름 컬렉션을 반복 하 고 개별 검색 &lt;xref:System.Web.UI.DataSourceView&gt;개체와 &lt;xref:System.Web.UI.IDataSource.GetView%2A&gt;메서드.&lt;/xref:System.Web.UI.IDataSource.GetView%2A&gt; &lt;/xref:System.Web.UI.DataSourceView&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data source control classes that implement the &lt;xref:System.Web.UI.IDataSource&gt; interface implement the GetViewNames method to return a collection of names that represents all the data source view objects currently associated with the data source control class.</source>
          <target state="translated">&lt;xref:System.Web.UI.IDataSource&gt;인터페이스 구현 현재 데이터 소스 컨트롤 클래스와 연결 된 개체를 보고 하는 모든 데이터 원본을 나타내는 이름 컬렉션을 반환 하려면 여기서 메서드를&lt;/xref:System.Web.UI.IDataSource&gt; 구현 하는 클래스를 제어 하는 데이터 원본</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; that contains the names of the views associated with the <bpt id="p1">&lt;xref href="System.Web.UI.IDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;와 관련 된 보기의 이름을 포함 하는 <bpt id="p1">&lt;xref href="System.Web.UI.IDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>